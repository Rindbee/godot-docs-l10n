# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:4
msgid "Compiling for Android"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:10
msgid "This page describes how to compile Android export template binaries from source. If you're looking to export your project to Android instead, read :ref:`doc_exporting_for_android`."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:14
msgid "Note"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:16
msgid "In most cases, using the built-in deployer and export templates is good enough. Compiling the Android APK manually is mostly useful for custom builds or custom packages for the deployer."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:20
msgid "Also, you still need to follow the steps mentioned in the :ref:`doc_exporting_for_android` tutorial before attempting to build a custom export template."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:25
msgid "Requirements"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:27
msgid "For compiling under Windows, Linux or macOS, the following is required:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:29
msgid "`Python 3.8+ <https://www.python.org/downloads/>`_."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:30
msgid "`SCons 4.0+ <https://scons.org/pages/download.html>`_ build system."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:31
msgid "`Android SDK <https://developer.android.com/studio/#command-tools>`_ (command-line tools are sufficient)."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:34
msgid "Required SDK components will be automatically installed."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:35
msgid "On Linux, **do not use an Android SDK provided by your distribution's repositories** as it will often be outdated."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:36
msgid "On macOS, **do not use an Android SDK provided by Homebrew** as it will not be installed in a unified location."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:38
msgid "Gradle (will be downloaded and installed automatically if missing)."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:39
msgid "JDK 17 (either OpenJDK or Oracle JDK)."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:41
msgid "You can download a build from `Adoptium <https://adoptium.net/temurin/releases/?variant=openjdk17>`_."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:43
msgid "To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:46
msgid "For a general overview of SCons usage for Godot, see :ref:`doc_introduction_to_the_buildsystem`."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:52
msgid "Setting up the buildsystem"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:54
msgid "Set the environment variable ``ANDROID_HOME`` to point to the Android SDK. If you downloaded the Android command-line tools, this would be the folder where you extracted the contents of the ZIP archive."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:58
msgid "Windows: Press :kbd:`Windows + R`, type \"control system\", then click on **Advanced system settings** in the left pane, then click on **Environment variables** on the window that appears."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:62
msgid "Linux or macOS: Add the text ``export ANDROID_HOME=\"/path/to/android-sdk\"`` to your ``.bashrc`` or ``.zshrc`` where ``/path/to/android-sdk`` points to the root of the SDK directories."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:66
msgid "Install the necessary SDK components in this folder:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:68
msgid "Accept the SDK component licenses by running the following command where ``android_sdk_path`` is the path to the Android SDK, then answering all the prompts with ``y``:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:75
msgid "Complete setup by running the following command where ``android_sdk_path`` is the path to the Android SDK."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:81
msgid "After setting up the SDK and environment variables, be sure to **restart your terminal** to apply the changes. If you are using an IDE with an integrated terminal, you need to restart the IDE."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:85
msgid "Run ``scons platform=android``. If this fails, go back and check the steps. If you completed the setup correctly, the NDK will begin downloading. If you are trying to compile GDExtension, you need to first compile the engine to download the NDK, then you can compile GDExtension."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:91
msgid "Building the export templates"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:93
msgid "Godot needs three export templates for Android: the optimized \"release\" template (``android_release.apk``), the debug template (``android_debug.apk``), and the Gradle build template (``android_source.zip``). As Google requires all APKs to include ARMv8 (64-bit) libraries since August 2019, the commands below build templates containing both ARMv7 and ARMv8 libraries."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:99
msgid "Compiling the standard export templates is done by calling SCons from the Godot root directory with the following arguments:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:102
msgid "Release template (used when exporting with **Debugging Enabled** unchecked)"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:109
msgid "Debug template (used when exporting with **Debugging Enabled** checked)"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:116
msgid "(**Optional**) Dev template (used when troubleshooting)"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:123
msgid "The resulting templates will be located under the ``bin`` directory:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:125
msgid "``bin/android_release.apk`` for the release template"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:126
msgid "``bin/android_debug.apk`` for the debug template"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:127
msgid "``bin/android_dev.apk`` for the dev template"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:128
msgid "``bin/android_source.zip`` for the Gradle build template"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:132
msgid "If you are changing the list of architectures you're building, remember to add ``generate_apk=yes`` to the *last* architecture you're building, so that the template files are generated after the build."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:134
msgid "To include debug symbols in the generated templates, add the ``debug_symbols=yes`` parameter to the SCons command."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:138
msgid "If you want to enable Vulkan validation layers, see :ref:`Vulkan validation layers on Android <doc_vulkan_validation_layers_android>`."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:142
msgid "Adding support for x86 devices"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:144
msgid "If you also want to include support for x86 and x86_64 devices, run the SCons command a third and fourth time with the ``arch=x86_32``, and ``arch=x86_64`` arguments before building the APK with Gradle. For example, for the release template:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:156
msgid "This will create template binaries that works on all platforms. The final binary size of exported projects will depend on the platforms you choose to support when exporting; in other words, unused platforms will be removed from the binary."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:162
msgid "Cleaning the generated export templates"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:164
msgid "You can use the following commands to remove the generated export templates:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:176
msgid "Using the export templates"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:178
msgid "Godot needs release and debug binaries that were compiled against the same version/commit as the editor. If you are using official binaries for the editor, make sure to install the matching export templates, or build your own from the same version."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:183
msgid "When exporting your game, Godot uses the templates as a base, and updates their content as needed."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:186
msgid "Installing the templates"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:188
msgid "The newly-compiled templates (``android_debug.apk`` , ``android_release.apk``, and ``android_source.zip``) must be copied to Godot's templates folder with their respective names. The templates folder can be located in:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:192
msgid "Windows: ``%APPDATA%\\Godot\\export_templates\\<version>\\``"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:193
msgid "Linux: ``$HOME/.local/share/godot/export_templates/<version>/``"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:194
msgid "macOS: ``$HOME/Library/Application Support/Godot/export_templates/<version>/``"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:196
msgid "``<version>`` is of the form ``major.minor[.patch].status`` using values from ``version.py`` in your Godot source repository (e.g. ``4.1.3.stable`` or ``4.2.dev``). You also need to write this same version string to a ``version.txt`` file located next to your export templates."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:203
msgid "However, if you are writing your custom modules or custom C++ code, you might instead want to configure your template binaries as custom export templates here:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:209
msgid "You don't even need to copy them, you can just reference the resulting file in the ``bin\\`` directory of your Godot source folder, so that the next time you build you will automatically have the custom templates referenced."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:215
msgid "Building the Godot editor"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:217
msgid "Compiling the editor is done by calling SCons from the Godot root directory with the following arguments:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:227
msgid "You can add the ``dev_build=yes`` parameter to generate a dev build of the Godot editor."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:229
msgid "You can add the ``debug_symbols=yes`` parameter to include the debug symbols in the generated build."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:231
msgid "You can skip certain architectures depending on your target device to speed up compilation."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:233
msgid "Remember to add ``generate_apk=yes`` to the *last* architecture you're building, so that binaries are generated after the build."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:235
msgid "The resulting binaries will be located under ``bin/android_editor_builds/``."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:238
msgid "Removing the Editor binaries"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:240
msgid "You can use the following commands to remove the generated editor binaries:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:251
msgid "Installing the Godot editor APK"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:253
msgid "With an Android device with Developer Options enabled, connect the Android device to your computer via its charging cable to a USB/USB-C port. Open up a Terminal/Command Prompt and run the following commands from the root directory with the following arguments:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:261
msgid "Troubleshooting"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:264
msgid "Platform doesn't appear in SCons"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:266
msgid "Double-check that you've set the ``ANDROID_HOME`` environment variable. This is required for the platform to appear in SCons' list of detected platforms. See :ref:`Setting up the buildsystem <doc_android_setting_up_the_buildsystem>` for more information."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:273
msgid "Application not installed"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:275
msgid "Android might complain the application is not correctly installed. If so:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:278
msgid "Check that the debug keystore is properly generated."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:279
msgid "Check that the jarsigner executable is from JDK 8."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:281
msgid "If it still fails, open a command line and run `logcat <https://developer.android.com/studio/command-line/logcat>`_:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:287
msgid "Then check the output while the application is installed; the error message should be presented there. Seek assistance if you can't figure it out."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:292
msgid "Application exits immediately"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:294
msgid "If the application runs but exits immediately, this might be due to one of the following reasons:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:297
msgid "Make sure to use export templates that match your editor version; if you use a new Godot version, you *have* to update the templates too."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:299
msgid "``libgodot_android.so`` is not in ``libs/<arch>/`` where ``<arch>`` is the device's architecture."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:301
msgid "The device's architecture does not match the exported one(s). Make sure your templates were built for that device's architecture, and that the export settings included support for that architecture."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_android.rst:305
msgid "In any case, ``adb logcat`` should also show the cause of the error."
msgstr ""
