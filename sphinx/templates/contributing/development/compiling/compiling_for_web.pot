# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:4
msgid "Compiling for the Web"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:8
msgid "This page describes how to compile HTML5 editor and export template binaries from source. If you're looking to export your project to HTML5 instead, read :ref:`doc_exporting_for_web`."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:14
msgid "Requirements"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:16
msgid "To compile export templates for the Web, the following is required:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:18
msgid "`Emscripten 3.1.62+ <https://emscripten.org>`__."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:19
msgid "`Python 3.8+ <https://www.python.org/>`__."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:20
msgid "`SCons 4.0+ <https://scons.org/pages/download.html>`__ build system."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:22
msgid "To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:25
msgid "For a general overview of SCons usage for Godot, see :ref:`doc_introduction_to_the_buildsystem`."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:29
msgid "Building export templates"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:31
msgid "Before starting, confirm that ``emcc`` is available in your PATH. This is usually configured by the Emscripten SDK, e.g. when invoking ``emsdk activate`` and ``source ./emsdk_env.sh``/``emsdk_env.bat``."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:35
msgid "Open a terminal and navigate to the root directory of the engine source code. Then instruct SCons to build the Web platform. Specify ``target`` as either ``template_release`` for a release build or ``template_debug`` for a debug build::"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:42
msgid "By default, the :ref:`JavaScriptBridge singleton <doc_web_javascript_bridge>` will be built into the engine. Official export templates also have the JavaScript singleton enabled. Since ``eval()`` calls can be a security concern, the ``javascript_eval`` option can be used to build without the singleton::"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:50
msgid "By default, WebWorker threads support is enabled. To disable it and only use a single thread, the ``threads`` option can be used to build the web template without threads support::"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:56
msgid "The engine will now be compiled to WebAssembly by Emscripten. Once finished, the resulting file will be placed in the ``bin`` subdirectory. Its name is ``godot.web.template_release.wasm32.zip`` for release or ``godot.web.template_debug.wasm32.zip`` for debug."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:61
msgid "Finally, rename the zip archive to ``web_release.zip`` for the release template::"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:66
msgid "And ``web_debug.zip`` for the debug template::"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:71
msgid "GDExtension"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:73
msgid "The default export templates do not include GDExtension support for performance and compatibility reasons. See the :ref:`export page <doc_javascript_export_options>` for more info."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:77
msgid "You can build the export templates using the option ``dlink_enabled=yes`` to enable GDExtension support::"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:83
msgid "Once finished, the resulting file will be placed in the ``bin`` subdirectory. Its name will have ``_dlink`` added."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:86
msgid "Finally, rename the zip archives to ``web_dlink_release.zip`` and ``web_dlink_release.zip`` for the release template::"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:93
msgid "Building the editor"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:95
msgid "It is also possible to build a version of the Godot editor that can run in the browser. The editor version is not recommended over the native build. You can build the editor with::"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:101
msgid "Once finished, the resulting file will be placed in the ``bin`` subdirectory. Its name will be ``godot.web.editor.wasm32.zip``. You can upload the zip content to your web server and visit it with your browser to use the editor."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:105
msgid "Refer to the :ref:`export page <doc_javascript_export_options>` for the web server requirements."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:110
msgid "The Godot repository includes a `Python script to host a local web server <https://raw.githubusercontent.com/godotengine/godot/master/platform/web/serve.py>`__. This can be used to test the web editor locally."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:114
msgid "After compiling the editor, extract the ZIP archive that was created in the ``bin/`` folder, then run the following command in the Godot repository root:"
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:123
msgid "This will serve the contents of the ``bin/`` folder and open the default web browser automatically. In the page that opens, access ``godot.editor.html`` and you should be able to test the web editor this way."
msgstr ""

#: ../../docs/contributing/development/compiling/compiling_for_web.rst:127
msgid "Note that for production use cases, this Python-based web server should not be used. Instead, you should use an established web server such as Apache or nginx."
msgstr ""
