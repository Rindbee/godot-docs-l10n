# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:4
msgid "Using NavigationPathQueryObjects"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:8
msgid "Path query parameters expose various options to improve pathfinding performance or lower memory consumption."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:10
msgid "They cater to more advanced pathfinding needs that the high-level nodes can not always cover."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:12
msgid "See the respective option sections below."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:14
msgid "``NavigationPathQueryObjects`` can be used together with ``NavigationServer.query_path()`` to obtain a heavily **customized** navigation path including optional **metadata** about the path."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:17
msgid "This requires more setup compared to obtaining a normal NavigationPath but lets you tailor the pathfinding and provided path data to the different needs of a project."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:20
msgid "NavigationPathQueryObjects consist of a pair of objects, a ``NavigationPathQueryParameters`` object holding the customization options for the query and a ``NavigationPathQueryResult`` that receives (regular) updates with the resulting path and metadata from the query."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:23
msgid "2D and 3D versions of ``NavigationPathQueryParameters`` are available as :ref:`NavigationPathQueryParameters2D<class_NavigationPathQueryParameters2D>` and :ref:`NavigationPathQueryParameters3D<class_NavigationPathQueryParameters3D>` respectively."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:27
msgid "2D and 3D versions of ``NavigationPathQueryResult`` are available as :ref:`NavigationPathQueryResult2D<class_NavigationPathQueryResult2D>` and :ref:`NavigationPathQueryResult3D<class_NavigationPathQueryResult3D>` respectively."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:32
msgid "Creating a basic path query"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:34
msgid "Both parameters and result are used as a pair with the ``NavigationServer.query_path()`` function."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:36
msgid "For the available customization options, see further below. See also the descriptions for each parameter in the class reference."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:38
msgid "While not a strict requirement, both objects are intended to be created once in advance, stored in a persistent variable for the agent and reused for every followup path query with updated parameters."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:41
msgid "Reusing the same objects improves performance when frequently creating objects or allocating memory."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:43
msgid "The following script creates the objects and provides a ``query_path()`` function to create new navigation paths. The resulting path is identical to using ``NavigationServer.map_get_path()`` while reusing the objects."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:104
msgid "Path postprocessing options"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:106
msgid "Path post-processing differences depending on navigation mesh polygon layout"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:110
msgid "Path post-processing differences depending on navigation mesh polygon layout."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:112
msgid "A path query search travels from the closest navigation mesh polygon edge to the closest edge along the available polygons. If possible it builds a polygon corridor towards the target position polygon."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:115
msgid "This raw \"search\" polygon corridor path is not very optimized and usually a bad fit for agents to travel along. E.g. the closest edge point on a navigation mesh polygon might cause a huge detour for agents on larger polygons. In order to improve the quality of paths returned by the query various ``path_postprocessing`` options exist."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:119
msgid "The ``PATH_POSTPROCESSING_CORRIDORFUNNEL`` post-processing shortens paths by funneling paths around corners **inside the available polygon corridor**."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:121
msgid "This is the default post-processing and usually also the most useful as it gives the shortest path result **inside the available polygon corridor**. If the polygon corridor is already suboptimal, e.g. due to a suboptimal navigation mesh layout, the funnel can snap to unexpected polygon corners causing detours."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:125
msgid "The ``PATH_POSTPROCESSING_EDGECENTERED`` post-processing forces all path points to be placed in the middle of the crossed polygon edges  **inside the available polygon corridor**."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:127
msgid "This post-processing is usually only useful when used with strictly tile-like navigation mesh polygons that are all evenly sized and where the expected path following is also constrained to cell centers, e.g. typical grid game with movement constrained to grid cell centers."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:131
msgid "The ``PATH_POSTPROCESSING_NONE`` post-processing returns the path as is how the pathfinding traveled **inside the available polygon corridor**."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:133
msgid "This post-processing is very useful for debug as it shows how the path search traveled from closest edge point to closet edge point and what polygons it picked. A lot of unexpected or suboptimal path results can be immediately explained by looking at this raw path and polygon corridor."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:137
msgid "Path simplification"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:141
msgid "Path simplification can help steering agents or agents that jitter on thin polygon edges."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:143
msgid "Path point difference with or without path simplification"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:147
msgid "Path point difference with or without path simplification."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:149
msgid "If ``simplify_path`` is enabled a variant of the Ramer-Douglas-Peucker path simplification algorithm is applied to the path. This algorithm straightens paths by removing less relevant path points depending on the ``simplify_epsilon`` used."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:152
msgid "Path simplification helps with all kinds of agent movement problems in \"open fields\" that are caused by having many unnecessary polygon edges. E.g. a terrain mesh when baked to a navigation mesh can cause an excessive polygon count due to all the small (but for pathfinding almost meaningless) height variations in the terrain."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:155
msgid "Path simplification also helps with \"steering\" agents because they only have more critical corner path points to aim for."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:159
msgid "Path simplification is an additional final post-processing of the path. It adds extra performance costs to the query so only enable when actually needed."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:163
msgid "Path simplification is exposed on the NavigationServer as a generic function. It can be used outside of navigation queries for all kinds of position arrays as well."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:166
msgid "Path metadata"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:170
msgid "Disabling unneeded path metadata options can improve performance and lower memory consumption."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:172
msgid "A path query can return additional metadata for every path point."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:174
msgid "The ``PATH_METADATA_INCLUDE_TYPES`` flag collects an array with the primitive information about the point owners, e.g. if a point belongs to a region or link."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:175
msgid "The ``PATH_METADATA_INCLUDE_RIDS`` flag collects an array with the :ref:`RIDs<class_RID>` of the point owners. Depending on point owner primitive, these RIDs can be used with the various NavigationServer functions related to regions or links."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:176
msgid "The ``PATH_METADATA_INCLUDE_OWNERS`` flag collects an array with the ``ObjectIDs`` of the point owners. These object IDs can be used with :ref:`@GlobalScope.instance_from_id()<class_@GlobalScope_method_instance_from_id>` to retrieve the node behind that object instance, e.g. a NavigationRegion or NavigationLink node."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:178
msgid "By default all path metadata is collected as this metadata can be essential for more advanced navigation gameplay."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:180
msgid "E.g. to know what path point maps to what object or node owner inside the SceneTree."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:181
msgid "E.g. to know if a path point is the start or end of a navigation link that requires scripted takeover."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:183
msgid "For the most basic path uses metadata is not always needed. Path metadata collection can be selectively disabled to gain some performance and reduce memory consumption."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:187
msgid "Excluding or including regions"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:191
msgid "Region filters can greatly help with performance on large navigation maps that are region partitioned."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:193
msgid "Query parameters allow limiting the pathfinding to specific region navigation meshes."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:195
msgid "If a large navigation map is well partitioned into smaller regions this can greatly help with performance as the query can skip a large number of polygons at one of the earliest checks in the path search."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:198
msgid "By default and if left empty all regions of the queried navigation map are included."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:199
msgid "If a region :ref:`RID<class_RID>` is added to the ``excluded_regions`` array the region's navigation mesh will be ignored in the path search."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:200
msgid "If a region :ref:`RID<class_RID>` is added to the ``included_regions`` array the region's navigation mesh will be considered in the path search and also all other regions not included will be ignored as well."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:201
msgid "If a region ends up both included and excluded it is considered excluded."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:203
msgid "Region filters are very effective for performance when paired with navigation region chunks that are aligned on a grid. This way the filter can be set to only include the start position chunk and surrounding chunks instead of the entire navigation map."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:206
msgid "Even if the target might be outside these surrounding chunks (can always add more \"rings\") the pathfinding will try to create a path to the polygon closest to the target. This usually creates half-paths heading in the general direction that are good enough, all for a fraction of the performance cost of a full map search."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:211
msgid "The following addition to the basic path query script showcases the idea how to integrate a region chunk mapping with the region filters. This is not a full working example."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:273
msgid "Path clipping and limits"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:277
msgid "Sensibly set limits can greatly help with performance on large navigation maps, especially when targets end up being unreachable."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:279
msgid "Clipping returned paths to specific distances"
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:283
msgid "Clipping returned paths to specific distances."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:285
msgid "Query parameters allow clipping returned paths to specific lengths. These options clip the path as a part of post-processing. The path is still searched as if at full length, so it will have the same quality. Path length clipping can be helpful in creating paths that better fit constrained gameplay, e.g. tactical games with limited movement ranges."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:290
msgid "The ``path_return_max_length`` property can be used to clip the returned path to a specific max length."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:291
msgid "The ``path_return_max_radius`` property can be used to clip the returned path inside a circle (2D) or sphere (3D) radius around the start position."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:293
msgid "Query parameters allow limiting the path search to only search up to a specific distance or a specific number of searched polygons. These options are for performance and affect the path search directly."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:296
msgid "The ``path_search_max_distance`` property can be used to stop the path search when going over this distance from the start position."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:297
msgid "The ``path_search_max_polygons`` property can be used to stop the path search when going over this searched polygon number."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:299
msgid "When the path search is stopped by reaching a limit the path resets and creates a path from the start position polygon to the polygon found so far that is closest to the target position."
msgstr ""

#: ../../docs/tutorials/navigation/navigation_using_navigationpathqueryobjects.rst:304
msgid "While good for performance, if path search limit values are set too low they can affect the path quality very negatively. Depending on polygon layout and search pattern the returned paths might go into completely wrong directions instead of the direction of the target."
msgstr ""
