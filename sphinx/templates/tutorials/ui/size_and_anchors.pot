# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/ui/size_and_anchors.rst:5
msgid "Size and anchors"
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:7
msgid "If a game was always going to be run on the same device and at the same resolution, positioning controls would be a simple matter of setting the position and size of each one of them. Unfortunately, that is rarely the case."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:12
msgid "While some configurations may be more common than others, devices like phones, tablets and portable gaming consoles can vary greatly. Therefore, we often have to account for different aspect ratios, resolutions and user scaling."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:17
msgid "There are several ways to account for this, but for now, let's just imagine that the screen resolution has changed and the controls need to be re-positioned. Some will need to follow the bottom of the screen, others the top of the screen, or maybe the right or left margins."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:24
msgid "This is done by editing the *anchor offsets* of controls, which behave similar to a margin. To access these settings, you will first need to select the *Custom* anchor preset."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:28
msgid "Each control has four anchor offsets: left, right, bottom, and top, which correspond to the respective edges of the control. By default, all of them represent a distance in pixels relative to the top-left corner of the parent control or (in case there is no parent control) the viewport."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:35
msgid "So to make the control wider you can make the right offset larger and/or make the left offset smaller. This lets you set the exact placement and shape of the control."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:39
msgid "The *anchor* properties adjust where the offsets are relative *to*. Each offset has an individual anchor that can be adjusted from the beginning to the end of the parent. So the vertical (top, bottom) anchors adjust from ``0.0`` (top of parent) to ``1.0`` (bottom of parent) with ``0.5`` being the center, and the control offsets will be placed relative to that point. The horizontal (left, right) anchors similarly adjust from left to right of the parent."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:47
msgid "Note that when you wish the edge of a control to be above or left of the anchor point, you must change the offset value to be negative."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:50
msgid "For example: when horizontal anchors are changed to ``1.0``, the offset values become relative to the top-right corner of the parent control or viewport."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:55
msgid "Adjusting the two horizontal or the two vertical anchors to different values will make the control change size when the parent control does. Here, the control is set to anchor its bottom-right corner to the parent's bottom-right, while the top-left control offsets are still anchored to the top-left of the parent, so when re-sizing the parent, the control will always cover it, leaving a 20 pixel offset:"
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:65
msgid "Centering a control"
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:67
msgid "To center a control in its parent, set its anchors to ``0.5`` and each offset to half of its relevant dimension. For example, the code below shows how a TextureRect can be centered in its parent:"
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:105
msgid "Setting each anchor to ``0.5`` moves the reference point for the offsets to the center of its parent. From there, we set negative offsets so that the control gets its natural size."
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:110
msgid "Anchor Presets"
msgstr ""

#: ../../docs/tutorials/ui/size_and_anchors.rst:112
msgid "Instead of manually adjusting the offset and anchor values, you can use the toolbar's Anchor menu, above the viewport. Besides centering, it gives you many options to align and resize control nodes."
msgstr ""
