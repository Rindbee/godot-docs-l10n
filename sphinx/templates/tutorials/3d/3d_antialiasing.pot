# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/3d/3d_antialiasing.rst:4
msgid "3D antialiasing"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:12
msgid "Godot also supports antialiasing in 2D rendering. This is covered on the :ref:`doc_2d_antialiasing` page."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:16
msgid "Introduction"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:18
msgid "Due to their limited resolution, scenes rendered in 3D can exhibit aliasing artifacts. These artifacts commonly manifest as a \"staircase\" effect on surface edges (edge aliasing) and as flickering and/or sparkles on reflective surfaces (specular aliasing)."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:23
msgid "In the example below, you can notice how edges have a blocky appearance. The vegetation is also flickering in and out, and thin lines on top of the box have almost disappeared:"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:27
#: ../../docs/tutorials/3d/3d_antialiasing.rst:31
msgid "Image is scaled by 2× with nearest-neighbor filtering to make aliasing more noticeable."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:33
msgid "To combat this, various antialiasing techniques can be used in Godot. These are detailed below."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:38
msgid "You can compare antialiasing algorithms in action using the `3D Antialiasing demo project <https://github.com/godotengine/godot-demo-projects/tree/master/3d/antialiasing>`__."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:42
msgid "Multisample antialiasing (MSAA)"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:44
#: ../../docs/tutorials/3d/3d_antialiasing.rst:212
msgid "*This is available in all renderers.*"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:46
msgid "This technique is the \"historical\" way of dealing with aliasing. MSAA is very effective on geometry edges (especially at higher levels). MSAA does not introduce any blurriness whatsoever."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:50
msgid "MSAA is available in 3 levels: 2×, 4×, 8×. Higher levels are more effective at antialiasing edges, but are significantly more demanding. In games with modern visuals, sticking to 2× or 4× MSAA is highly recommended as 8× MSAA is usually too demanding."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:55
msgid "The downside of MSAA is that it only operates on edges. This is because MSAA increases the number of *coverage* samples, but not the number of *color* samples. However, since the number of color samples did not increase, fragment shaders are still run for each pixel only once. Therefore, MSAA does not reduce transparency aliasing for materials using the **Alpha Scissor** transparency mode (1-bit transparency). MSAA is also ineffective on specular aliasing."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:62
msgid "To mitigate aliasing on alpha scissor materials, :ref:`alpha antialiasing <doc_standard_material_3d_alpha_antialiasing>` (also called *alpha to coverage*) can be enabled on specific materials in the StandardMaterial3D or ORMMaterial3D properties. Alpha to coverage has a moderate performance cost, but it's effective at reducing aliasing on transparent materials without introducing any blurriness."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:69
msgid "To make specular aliasing less noticeable, use the `Screen-space roughness limiter`_, which is enabled by default."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:72
msgid "MSAA can be enabled in the Project Settings by changing the value of the :ref:`Rendering > Anti Aliasing > Quality > MSAA 3D<class_ProjectSettings_property_rendering/anti_aliasing/quality/msaa_3d>` setting. It's important to change the value of the **MSAA 3D** setting and not **MSAA 2D**, as these are entirely separate settings."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:77
msgid "Comparison between no antialiasing (left) and various MSAA levels (right). Note that alpha antialiasing is not used here:"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:89
msgid "Temporal antialiasing (TAA)"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:91
#: ../../docs/tutorials/3d/3d_antialiasing.rst:124
msgid "*This is only available in the Forward+ renderer, not the Mobile or Compatibility renderers.*"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:94
msgid "Temporal antialiasing works by *converging* the result of previously rendered frames into a single, high-quality frame. This is a continuous process that works by jittering the position of all vertices in the scene every frame. This jittering is done to capture sub-pixel detail and should be unnoticeable except in extreme situations."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:100
msgid "This technique is commonly used in modern games, as it provides the most effective form of antialiasing against specular aliasing and other shader-induced artifacts. TAA also provides full support for transparency antialiasing."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:105
msgid "TAA introduces a small amount of blur when enabled in still scenes, but this blurring effect becomes more pronounced when the camera is moving. Another downside of TAA is that it can exhibit *ghosting* artifacts behind moving objects. Rendering at a higher framerate will allow TAA to converge faster, therefore making those ghosting artifacts less visible."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:111
msgid "Temporal antialiasing can be enabled in the Project Settings by changing the value of the :ref:`Rendering > Anti Aliasing > Quality > TAA<class_ProjectSettings_property_rendering/anti_aliasing/quality/use_taa>` setting."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:115
msgid "Comparison between no antialiasing (left) and TAA (right):"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:122
msgid "AMD FidelityFX Super Resolution 2.2 (FSR2)"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:127
msgid "Since Godot 4.2, there is built-in support for `AMD FidelityFX Super Resolution <https://www.amd.com/en/products/graphics/technologies/fidelityfx/super-resolution.html>`__ 2.2. This is an :ref:`upscaling method <doc_resolution_scaling>` compatible with all recent GPUs from any vendor. FSR2 is normally designed to improve performance by lowering the internal 3D rendering resolution, then upscaling to the output resolution."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:134
msgid "However, unlike FSR1, FSR2 also provides temporal antialiasing. This means FSR2 can be used at native resolution for high-quality antialiasing, with the input resolution being equal to the output resolution. In this situation, enabling FSR2 will actually *decrease* performance, but it will significantly improve rendering quality."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:140
msgid "Using FSR2 at native resolution is more demanding than using TAA at native resolution, so its use is only recommended if you have significant GPU headroom. On the bright side, FSR2 provides better antialiasing coverage with less blurriness compared to TAA, especially in motion."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:145
msgid "Comparison between no antialiasing (left) and FSR2 at native resolution (right):"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:151
msgid "By default, the **FSR Sharpness** project setting is set to ``0.2`` (higher values result in less sharpening). For the purposes of comparison, FSR sharpening has been disabled by setting it to ``2.0`` on the above screenshot."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:158
msgid "Fast approximate antialiasing (FXAA)"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:160
#: ../../docs/tutorials/3d/3d_antialiasing.rst:187
#: ../../docs/tutorials/3d/3d_antialiasing.rst:254
msgid "*This is only available in the Forward+ and Mobile renderers, not the Compatibility renderer.*"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:163
msgid "Fast approximate antialiasing is a post-processing antialiasing solution. It is faster to run than any other antialiasing technique and also supports antialiasing transparency. However, since it lacks temporal information, it will not do much against specular aliasing."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:168
msgid "This technique is still sometimes used in mobile games. However, on desktop platforms, FXAA generally fell out of fashion in favor of temporal antialiasing, which is much more effective against specular aliasing. Nonetheless, exposing FXAA as an in-game option may still be worthwhile for players with low-end GPUs."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:173
msgid "FXAA introduces a moderate amount of blur when enabled (more than TAA when still, but less than TAA when the camera is moving)."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:176
msgid "FXAA can be enabled in the Project Settings by changing the value of the :ref:`Rendering > Anti Aliasing > Quality > Screen Space AA<class_ProjectSettings_property_rendering/anti_aliasing/quality/screen_space_aa>` setting to ``FXAA``."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:180
msgid "Comparison between no antialiasing (left) and FXAA (right):"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:185
msgid "Sub-pixel Morphological Antialiasing (SMAA 1x)"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:190
msgid "Sub-pixel Morphological Antialiasing is a post-processing antialiasing solution. It runs slightly slower than FXAA, but produces less blurriness. This is very helpful when the screen resolution is 1080p or below. Just like FXAA, SMAA 1x lacks temporal information and will therefore not do much against specular aliasing."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:195
msgid "Use SMAA 1x if you can't afford MSAA, but find FXAA too blurry."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:197
msgid "Combine it with TAA, or even FSR2, to maximize antialiasing at a higher GPU cost and some added blurriness. This is most beneficial in fast-moving scenes or just after a camera cut, especially at lower FPS."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:201
msgid "SMAA 1x can be enabled in the Project Settings by changing the value of the :ref:`Rendering > Anti Aliasing > Quality > Screen Space AA<class_ProjectSettings_property_rendering/anti_aliasing/quality/screen_space_aa>` setting to ``SMAA``."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:205
msgid "Comparison between no antialiasing (left) and SMAA 1x (right):"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:210
msgid "Supersample antialiasing (SSAA)"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:214
msgid "Supersampling provides the highest quality of antialiasing possible, but it's also the most expensive. It works by shading every pixel in the scene multiple times. This allows SSAA to antialias edges, transparency *and* specular aliasing at the same time, without introducing potential ghosting artifacts."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:219
msgid "The downside of SSAA is its *extremely* high cost. This cost generally makes SSAA difficult to use for game purposes, but you may still find supersampling useful for :ref:`offline rendering <doc_creating_movies>`."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:223
msgid "Supersample antialiasing is performed by increasing the :ref:`Rendering > Scaling 3D > Scale<class_ProjectSettings_property_rendering/scaling_3d/scale>` advanced project setting above ``1.0`` while ensuring :ref:`Rendering > Scaling 3D > Mode<class_ProjectSettings_property_rendering/scaling_3d/mode>` is set to ``Bilinear`` (the default). Since the scale factor is defined per-axis, a scale factor of ``1.5`` will result in 2.25× SSAA while a scale factor of ``2.0`` will result in 4× SSAA. Since Godot uses the hardware's own bilinear filtering to perform the downsampling, the result will look crisper at integer scale factors (namely, ``2.0``)."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:233
msgid "Comparison between no antialiasing (left) and various SSAA levels (right):"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:241
msgid "Supersampling also has high video RAM requirements, since it needs to render in the target resolution then *downscale* to the window size. For example, displaying a project in 3840×2160 (4K resolution) with 4× SSAA will require rendering the scene in 7680×4320 (8K resolution), which is 4 times more pixels."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:247
msgid "If you are using a high window size such as 4K, you may find that increasing the resolution scale past a certain value will cause a heavy slowdown (or even a crash) due to running out of VRAM."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:252
msgid "Screen-space roughness limiter"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:257
msgid "This is not an edge antialiasing method, but it is a way of reducing specular aliasing in 3D."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:260
msgid "The screen-space roughness limiter works best on detailed geometry. While it has an effect on roughness map rendering itself, its impact is limited there."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:263
msgid "The screen-space roughness limiter is enabled by default; it doesn't require any manual setup. It has a small performance impact, so consider disabling it if your project isn't affected by specular aliasing much. You can disable it with the **Rendering > Quality > Screen Space Filters > Screen Space Roughness Limiter** project setting."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:270
msgid "Texture roughness limiter on import"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:272
msgid "Like the screen-space roughness limiter, this is not an edge antialiasing method, but it is a way of reducing specular aliasing in 3D."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:275
msgid "Roughness limiting on import works by specifying a normal map to use as a guide for limiting roughness. This is done by selecting the roughness map in the FileSystem dock, then going to the Import dock and setting **Roughness > Mode** to the color channel the roughness map is stored in (typically **Green**), then setting the path to the material's normal map. Remember to click **Reimport** at the bottom of the Import dock after setting the path to the normal map."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:282
msgid "Since this processing occurs purely on import, it has no performance cost whatsoever. However, its visual impact is limited. Limiting roughness on import only helps reduce specular aliasing within textures, not the aliasing that occurs on geometry edges on detailed meshes."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:288
msgid "Which antialiasing technique should I use?"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:290
msgid "**There is no \"one size fits all\" antialiasing technique.** Since antialiasing is often demanding on the GPU or can introduce unwanted blurriness, you'll want to add a setting to allow players to disable antialiasing."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:294
msgid "For projects with a photorealistic art direction, TAA is generally the most suitable option. While TAA can introduce ghosting artifacts, there is no other technique that combats specular aliasing as well as TAA does. The screen-space roughness limiter helps a little, but is far less effective against specular aliasing overall. If you have spare GPU power, you can use FSR2 at native resolution for a better-looking form of temporal antialiasing compared to standard TAA."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:302
msgid "For projects with a low amount of reflective surfaces (such as a cartoon artstyle), MSAA can work well. MSAA is also a good option if avoiding blurriness and temporal artifacts is important, such as in competitive games."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:306
msgid "When targeting low-end platforms such as mobile or integrated graphics, FXAA is usually the only viable option. 2× MSAA may be usable in some circumstances, but higher MSAA levels are unlikely to run smoothly on mobile GPUs."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:310
msgid "Godot allows using multiple antialiasing techniques at the same time. This is usually unnecessary, but it can provide better visuals on high-end GPUs or for :ref:`non-real-time rendering <doc_creating_movies>`. For example, to make moving edges look better when TAA is enabled, you can also enable MSAA at the same time."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:317
msgid "Antialiasing comparison"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:324
msgid "Feature"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:324
msgid "MSAA"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:324
msgid "TAA"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:324
msgid "FSR2"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:324
msgid "FXAA"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:324
msgid "SMAA 1x"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:324
msgid "SSAA"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:324
msgid "SSRL"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:326
msgid "Edge antialiasing"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:326
#: ../../docs/tutorials/3d/3d_antialiasing.rst:328
#: ../../docs/tutorials/3d/3d_antialiasing.rst:330
msgid "🟢 Yes"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:326
#: ../../docs/tutorials/3d/3d_antialiasing.rst:330
msgid "🔴 No"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:328
msgid "Specular antialiasing"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:328
#: ../../docs/tutorials/3d/3d_antialiasing.rst:333
msgid "🟡 Some"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:330
msgid "Transparency antialiasing"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:330
msgid "🟡 Some [1]_"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:330
msgid "🟢 Yes [2]_"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:333
msgid "Added blur"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:333
#: ../../docs/tutorials/3d/3d_antialiasing.rst:336
msgid "🟢 None"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:333
#: ../../docs/tutorials/3d/3d_antialiasing.rst:338
msgid "🟢 Low"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:333
msgid "🟡 Some [3]_"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:336
msgid "Ghosting artifacts"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:336
msgid "🔴 Yes"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:338
msgid "Performance cost"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:338
msgid "🟡 Medium"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:338
msgid "🔴 High"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:338
msgid "🟢 Very Low"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:338
msgid "🔴 Very High"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:340
msgid "Forward+"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:340
#: ../../docs/tutorials/3d/3d_antialiasing.rst:342
#: ../../docs/tutorials/3d/3d_antialiasing.rst:344
msgid "✔️ Yes"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:342
msgid "Mobile"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:342
#: ../../docs/tutorials/3d/3d_antialiasing.rst:344
msgid "❌ No"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:344
msgid "Compatibility"
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:348
msgid "MSAA does not work well with materials with Alpha Scissor (1-bit transparency). This can be mitigated by enabling ``alpha antialiasing`` on the material."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:350
msgid "TAA/FSR2 transparency antialiasing is most effective when using Alpha Scissor."
msgstr ""

#: ../../docs/tutorials/3d/3d_antialiasing.rst:351
msgid "SSAA has some blur from bilinear downscaling. This can be mitigated by using an integer scaling factor of ``2.0``."
msgstr ""
