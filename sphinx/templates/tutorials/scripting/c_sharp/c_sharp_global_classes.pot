# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:4
msgid "C# global classes"
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:6
msgid "Global classes (also known as named scripts) are types registered in Godot's editor so they can be used more conveniently. :ref:`In GDScript <doc_gdscript_basics_class_name>`, this is achieved using the ``class_name`` keyword at the top of a script. This page describes how to achieve the same effect in C#."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:12
msgid "Global classes show up in the *Add Node* and *Create Resource* dialogs."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:13
msgid "If an :ref:`exported property <doc_c_sharp_exports>` is a global class, the inspector restricts assignment, allowing only instances of that global class or any derived classes."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:17
msgid "Global classes are registered with the ``[GlobalClass]`` attribute."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:30
msgid "The file name must match the class name in **case-sensitive** fashion. For example, a global class named \"MyNode\" must have a file name of ``MyNode.cs``, not ``myNode.cs``."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:34
msgid "The ``MyNode`` type will be registered as a global class with the same name as the type's name."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:38
msgid "The *Select a Node* window for the ``MyNode`` exported property filters the list of nodes in the scene to match the assignment restriction."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:51
msgid "If a custom type isn't registered as a global class, the assignment is restricted to the Godot type the custom type is based on. For example, inspector assignments to an export of the type ``MySimpleSprite2D`` are restricted to ``Sprite2D`` and derived types."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:62
msgid "When combined with the ``[GlobalClass]`` attribute, the ``[Icon]`` attribute allows providing a path to an icon to show when the class is displayed in the editor."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:85
msgid "The ``Stats`` class is a custom resource registered as a global class. :ref:`Exporting properties <doc_c_sharp_exports>` of the type ``Stats`` will only allow instances of this resource type to be assigned, and the inspector will let you create and load instances of this type easily."
msgstr ""

#: ../../docs/tutorials/scripting/c_sharp/c_sharp_global_classes.rst:95
msgid "The Godot editor will hide these custom classes with names that begin with the prefix \"Editor\" in the \"Create New Node\" or \"Create New Scene\" dialog windows. The classes are available for instantiation at runtime via their class names, but are automatically hidden by the editor windows along with the built-in editor nodes used by the Godot editor."
msgstr ""
