# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:4
msgid "A better XR start script"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:6
msgid "In :ref:`doc_setting_up_xr` we introduced a startup script that initialises our setup which we used as our script on our main node. This script performs the minimum steps required for any given interface."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:9
msgid "When using OpenXR there are a number of improvements we should do here. For this we've created a more elaborate starting script. You will find these used in our demo projects."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:13
msgid "Alternatively, if you are using XR Tools (see :ref:`doc_introducing_xr_tools`) it contains a version of this script updated with some features related to XR tools."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:15
msgid "Below we will detail out the script used in our demos and explain the parts that are added."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:18
msgid "Signals for our script"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:20
msgid "We are introducing 3 signals to our script so that our game can add further logic:"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:22
msgid "``focus_lost`` is emitted when the player takes off their headset or when the player enters the menu system of the headset."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:23
msgid "``focus_gained`` is emitted when the player puts their headset back on or exits the menu system and returns to the game."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:24
msgid "``pose_recentered`` is emitted when the headset requests the player's position to be reset."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:26
msgid "Our game should react accordingly to these signals."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:58
msgid "Variables for our script"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:60
msgid "We introduce a few new variables to our script as well:"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:62
msgid "``maximum_refresh_rate`` will control the headsets refresh rate if this is supported by the headset."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:63
msgid "``xr_interface`` holds a reference to our XR interface, this already existed but we now type it to get full access to our :ref:`XRInterface <class_xrinterface>` API."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:64
msgid "``xr_is_focussed`` will be set to true whenever our game has focus."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:92
msgid "Our updated ready function"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:94
msgid "We add a few things to the ready function."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:96
msgid "If we're using the mobile or forward+ renderer we set the viewport's ``vrs_mode`` to ``VRS_XR``. On platforms that support this, this will enable foveated rendering."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:99
msgid "If we're using the compatibility renderer, we check if the OpenXR foveated rendering settings are configured and if not, we output a warning. See :ref:`OpenXR Settings <doc_openxr_settings>` for further details."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:103
msgid "We hook up a number of signals that will be emitted by the :ref:`XRInterface <class_xrinterface>`. We'll provide more detail about these signals as we implement them."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:106
msgid "We also quit our application if we couldn't successfully initialise OpenXR. Now this can be a choice. If you are making a mixed mode game you setup the VR mode of your game on success, and setup the non-VR mode of your game on failure. However, when running a VR only application on a standalone headset, it is nicer to exit on failure than to hang the system."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:200
msgid "On session begun"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:202
msgid "This signal is emitted by OpenXR when our session is setup. This means the headset has run through setting everything up and is ready to begin receiving content from us. Only at this time various information is properly available."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:206
msgid "The main thing we do here is to check our headset's refresh rate. We also check the available refresh rates reported by the XR runtime to determine if we want to set our headset to a higher refresh rate."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:209
msgid "Finally we match our physics update rate to our headset update rate. Godot runs at a physics update rate of 60 updates per second by default while headsets run at a minimum of 72, and for modern headsets often up to 144 frames per second. Not matching the physics update rate will cause stuttering as frames are rendered without objects moving."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:306
msgid "On visible state"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:308
msgid "This signal is emitted by OpenXR when our game becomes visible but is not focused. This is a bit of a weird description in OpenXR but it basically means that our game has just started and we're about to switch to the focused state next, that the user has opened a system menu or the user has just took their headset off."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:313
msgid "On receiving this signal we'll update our focused state, we'll change the process mode of our node to disabled which will pause processing on this node and its children, and emit our ``focus_lost`` signal."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:317
msgid "If you've added this script to your root node, this means your game will automatically pause when required. If you haven't, you can connect a method to the signal that performs additional changes."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:323
msgid "While your game is in visible state because the user has opened a system menu, Godot will keep rendering frames and head tracking will remain active so your game will remain visible in the background. However controller and hand tracking will be disabled until the user exits the system menu."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:375
msgid "On focussed state"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:377
msgid "This signal is emitted by OpenXR when our game gets focus. This is done at the completion of our startup, but it can also be emitted when the user exits a system menu, or put their headset back on."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:381
msgid "Note also that when your game starts while the user is not wearing their headset, the game stays in 'visible' state until the user puts their headset on."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:386
msgid "It is thus important to keep your game paused while in visible mode. If you don't the game will keep on running while your user isn't interacting with your game. Also when the game returns to the focused mode, suddenly all controller and hand tracking is re-enabled and could have game breaking consequences if you do not react to this accordingly. Be sure to test this behavior in your game!"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:393
msgid "While handling our signal we will update the focuses state, unpause our node and emit our ``focus_gained`` signal."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:433
msgid "On stopping state"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:435
msgid "This signal is emitted by OpenXR when we enter our stop state. There are some differences between platforms when this happens. On some platforms this is only emitted when the game is being closed. But on other platforms this will also be emitted every time the player takes off their headset."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:440
msgid "For now this method is only a place holder."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:471
msgid "On pose recentered"
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:473
msgid "This signal is emitted by OpenXR when the user requests their view to be recentered. Basically this communicates to your game that the user is now facing forward and you should re-orient the player so they are facing forward in the virtual world."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:477
msgid "As doing so is dependent on your game, your game needs to react accordingly."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:479
msgid "All we do here is emit the ``pose_recentered`` signal. You can connect to this signal and implement the actual recenter code. Often it is enough to call :ref:`center_on_hmd() <class_XRServer_method_center_on_hmd>`."
msgstr ""

#: ../../docs/tutorials/xr/a_better_xr_start_script.rst:509
msgid "And that finished our script. It was written so that it can be re-used over multiple projects. Just add it as the script on your main node (and extend it if needed) or add it on a child node specific for this script."
msgstr ""
