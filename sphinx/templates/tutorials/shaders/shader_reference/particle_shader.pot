# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:4
msgid "Particle shaders"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:6
msgid "Particle shaders are a special type of shader that runs before the object is drawn. They are used for calculating material properties such as color, position, and rotation. They are drawn with any regular material for CanvasItem or Spatial, depending on whether they are 2D or 3D."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:11
msgid "Particle shaders are unique because they are not used to draw the object itself; they are used to calculate particle properties, which are then used by a :ref:`CanvasItem<doc_canvas_item_shader>` or :ref:`Spatial<doc_spatial_shader>` shader. They contain two processor functions: ``start()`` and ``process()``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:16
msgid "Unlike other shader types, particle shaders keep the data that was output the previous frame. Therefore, particle shaders can be used for complex effects that take place over multiple frames."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:22
msgid "Particle shaders are only available with GPU-based particle nodes (:ref:`class_GPUParticles2D` and :ref:`class_GPUParticles3D`)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:25
msgid "CPU-based particle nodes (:ref:`class_CPUParticles2D` and :ref:`class_CPUParticles3D`) are *rendered* on the GPU (which means they can use custom CanvasItem or Spatial shaders), but their motion is *simulated* on the CPU."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:31
msgid "Render modes"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:34
msgid "Render mode"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:34
#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:58
#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:84
#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:139
#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:156
#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:186
msgid "Description"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:36
msgid "**keep_data**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:36
msgid "Do not clear previous data on restart."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:38
msgid "**disable_force**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:38
msgid "Disable attractor force."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:40
msgid "**disable_velocity**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:40
msgid "Ignore ``VELOCITY`` value."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:42
msgid "**collision_use_scale**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:42
msgid "Scale the particle's size for collisions."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:46
msgid "Built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:48
msgid "Values marked as ``in`` are read-only. Values marked as ``out`` can optionally be written to and will not necessarily contain sensible values. Values marked as ``inout`` provide a sensible default value, and can optionally be written to. Samplers cannot be written to so they are not marked."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:53
msgid "Global built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:55
msgid "Global built-ins are available everywhere, including custom functions."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:58
#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:139
#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:156
msgid "Built-in"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:60
msgid "in float **TIME**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:60
msgid "Global time since the engine has started, in seconds. It repeats after every ``3,600`` seconds (which can  be changed with the :ref:`rollover<class_ProjectSettings_property_rendering/limits/time/time_rollover_secs>` setting). It's affected by :ref:`time_scale<class_Engine_property_time_scale>` but not by pausing. If you need a ``TIME`` variable that is not affected by time scale, add your own :ref:`global shader uniform<doc_shading_language_global_uniforms>` and update it each frame."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:69
msgid "in float **PI**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:69
msgid "A ``PI`` constant (``3.141592``). A ratio of a circle's circumference to its diameter and amount of radians in half turn."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:72
msgid "in float **TAU**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:72
msgid "A ``TAU`` constant (``6.283185``). An equivalent of ``PI * 2`` and amount of radians in full turn."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:75
msgid "in float **E**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:75
msgid "An ``E`` constant (``2.718281``). Euler's number and a base of the natural logarithm."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:79
msgid "Start and Process built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:81
msgid "These properties can be accessed from both the ``start()`` and ``process()`` functions."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:84
#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:186
msgid "Function"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:86
msgid "in float **LIFETIME**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:86
msgid "Particle lifetime."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:88
msgid "in float **DELTA**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:88
msgid "Delta process time."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:90
msgid "in uint **NUMBER**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:90
msgid "Unique number since emission start."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:92
msgid "in uint **INDEX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:92
msgid "Particle index (from total particles)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:94
msgid "in mat4 **EMISSION_TRANSFORM**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:94
msgid "Emitter transform (used for non-local systems)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:96
msgid "in uint **RANDOM_SEED**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:96
msgid "Random seed used as base for random."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:98
msgid "inout bool **ACTIVE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:98
msgid "``true`` when the particle is active, can be set ``false``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:100
msgid "inout vec4 **COLOR**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:100
msgid "Particle color, can be written to and accessed in mesh's vertex function."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:102
msgid "inout vec3 **VELOCITY**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:102
msgid "Particle velocity, can be modified."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:104
msgid "inout mat4 **TRANSFORM**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:104
msgid "Particle transform."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:106
msgid "inout vec4 **CUSTOM**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:106
msgid "Custom particle data. Accessible from shader of mesh as ``INSTANCE_CUSTOM``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:108
msgid "inout float **MASS**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:108
msgid "Particle mass, intended to be used with attractors. Equals ``1.0`` by default."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:110
msgid "in vec4 **USERDATAX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:110
msgid "Vector that enables the integration of supplementary user-defined data into the particle process shader. ``USERDATAX`` are six built-ins identified by number, ``X`` can be numbers between 1 and 6, for example ``USERDATA3``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:113
msgid "in uint **FLAG_EMIT_POSITION**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:113
msgid "A flag for using on the last argument of ``emit_subparticle()`` function to assign a position to a new particle's transform."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:115
msgid "in uint **FLAG_EMIT_ROT_SCALE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:115
msgid "A flag for using on the last argument of ``emit_subparticle()`` function to assign the rotation and scale to a new particle's transform."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:117
msgid "in uint **FLAG_EMIT_VELOCITY**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:117
msgid "A flag for using on the last argument of ``emit_subparticle()`` function to assign a velocity to a new particle."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:119
msgid "in uint **FLAG_EMIT_COLOR**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:119
msgid "A flag for using on the last argument of ``emit_subparticle()`` function to assign a color to a new particle."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:121
msgid "in uint **FLAG_EMIT_CUSTOM**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:121
msgid "A flag for using on the last argument of ``emit_subparticle()`` function to assign a custom data vector to a new particle."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:123
msgid "in vec3 **EMITTER_VELOCITY**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:123
msgid "Velocity of the :ref:`Particles2D<class_GPUParticles2D>` (:ref:`3D<class_GPUParticles3D>`) node."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:125
msgid "in float **INTERPOLATE_TO_END**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:125
msgid "Value of :ref:`interp_to_end<class_GPUParticles2D_property_interp_to_end>` (:ref:`3D<class_GPUParticles3D_property_interp_to_end>`) property of Particles node."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:128
msgid "in uint **AMOUNT_RATIO**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:128
msgid "Value of :ref:`amount_ratio<class_GPUParticles2D_property_amount_ratio>` (:ref:`3D<class_GPUParticles3D_property_amount_ratio>`) property of Particles node."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:132
msgid "In order to use the ``COLOR`` variable in a StandardMaterial3D, set ``vertex_color_use_as_albedo`` to ``true``. In a ShaderMaterial, access it with the ``COLOR`` variable."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:136
msgid "Start built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:141
msgid "in bool **RESTART_POSITION**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:141
msgid "``true`` if particle is restarted, or emitted without a custom position (i.e. this particle was created by ``emit_subparticle()`` without the ``FLAG_EMIT_POSITION`` flag)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:143
msgid "in bool **RESTART_ROT_SCALE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:143
msgid "``true`` if particle is restarted, or emitted without a custom rotation or scale (i.e. this particle was created by ``emit_subparticle()`` without the ``FLAG_EMIT_ROT_SCALE`` flag)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:145
msgid "in bool **RESTART_VELOCITY**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:145
msgid "``true`` if particle is restarted, or emitted without a custom velocity (i.e. this particle was created by ``emit_subparticle()`` without the ``FLAG_EMIT_VELOCITY`` flag)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:147
msgid "in bool **RESTART_COLOR**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:147
msgid "``true`` if particle is restarted, or emitted without a custom color (i.e. this particle was created by ``emit_subparticle()`` without the ``FLAG_EMIT_COLOR`` flag)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:149
msgid "in bool **RESTART_CUSTOM**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:149
msgid "``true`` if particle is restarted, or emitted without a custom property (i.e. this particle was created by ``emit_subparticle()`` without the ``FLAG_EMIT_CUSTOM`` flag)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:153
msgid "Process built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:158
msgid "in bool **RESTART**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:158
msgid "``true`` if the current process frame is first for the particle."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:160
msgid "in bool **COLLIDED**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:160
msgid "``true`` when the particle has collided with a particle collider."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:162
msgid "in vec3 **COLLISION_NORMAL**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:162
msgid "A normal of the last collision. If there is no collision detected it is equal to ``(0.0, 0.0, 0.0)``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:164
msgid "in float **COLLISION_DEPTH**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:164
msgid "A length of normal of the last collision. If there is no collision detected it is equal to ``0.0``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:166
msgid "in vec3 **ATTRACTOR_FORCE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:166
msgid "A combined force of the attractors at the moment on that particle."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:170
msgid "Process functions"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:172
msgid "``emit_subparticle()`` is currently the only custom function supported by particles shaders. It allows users to add a new particle with specified parameters from a sub-emitter. The newly created particle will only use the properties that match the ``flags`` parameter. For example, the following code will emit a particle with a specified position, velocity, and color, but unspecified rotation, scale, and custom value:"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:188
msgid "bool **emit_subparticle** (mat4 xform, vec3 velocity, vec4 color, vec4 custom, uint flags)"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/particle_shader.rst:188
msgid "Emits a particle from a sub-emitter."
msgstr ""
