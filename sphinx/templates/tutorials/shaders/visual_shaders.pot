# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/shaders/visual_shaders.rst:4
msgid "Using VisualShaders"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:6
msgid "VisualShaders are the visual alternative for creating shaders."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:8
msgid "As shaders are inherently linked to visuals, the graph-based approach with previews of textures, materials, etc. offers a lot of additional convenience compared to purely script-based shaders. On the other hand, VisualShaders do not expose all features of the shader script and using both in parallel might be necessary for specific effects."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:16
msgid "If you are not familiar with shaders, start by reading :ref:`doc_introduction_to_shaders`."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:20
msgid "Creating a VisualShader"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:22
msgid "VisualShaders can be created in any :ref:`class_ShaderMaterial`. To begin using VisualShaders, create a new ``ShaderMaterial`` in an object of your choice."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:27
msgid "Then assign a :ref:`class_Shader` resource to the ``Shader`` property."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:31
msgid "Click on the new ``Shader`` resource and the Create Shader dialog will open automatically. Change the Type option to :ref:`class_VisualShader` in the dropdown, then give it a name."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:37
msgid "Click on the visual shader you just created to open the Shader Editor. The layout of the Shader Editor comprises two parts: the upper toolbar and the graph itself."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:43
msgid "From left to right in the toolbar:"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:45
msgid "The ``Add Node`` button displays a popup menu to let you add nodes to the shader graph."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:47
msgid "The drop-down menu is the shader type: Vertex, Fragment and Light. Like for script shaders, it defines what built-in nodes will be available."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:49
msgid "The following buttons and number input control the zooming level, grid snapping and distance between grid lines (in pixels)."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:51
msgid "The toggle controls if the graph minimap in the bottom right of the editor is visible or not."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:53
msgid "The automatically arrange selected nodes button will try to organize any nodes you have selected as efficiently and cleanly as possible."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:55
msgid "The Manage Varyings button opens a dropdown that lets you add or remove a varying."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:57
msgid "The last icon shows the generated shader code corresponding to your graph."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:61
msgid "Although VisualShaders do not require coding, they share the same logic with script shaders. It is advised to learn the basics of both to have a good understanding of the shading pipeline."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:65
msgid "The visual shader graph is converted to a script shader behind the scene, and you can see this code by pressing the last button in the toolbar. This can be convenient to understand what a given node does and how to reproduce it in scripts."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:71
msgid "Using the Visual Shader Editor"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:73
msgid "By default, every new ``VisualShader`` will have an output node. Every node connection ends at one of the output node's sockets. A node is the basic unit to create your shader. To add a new node, click on the ``Add Node`` button on the upper left corner or right click on any empty location in the graph, and a menu will pop up."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:81
msgid "This popup has the following properties:"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:83
msgid "If you right-click on the graph, this menu will be called at the cursor position and the created node, in that case, will also be placed under that position; otherwise, it will be created at the graph's center."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:86
msgid "It can be resized horizontally and vertically allowing more content to be shown. Size transform and tree content position are saved between the calls, so if you suddenly closed the popup you can easily restore its previous state."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:89
msgid "The ``Expand All`` and ``Collapse All`` options in the drop-down option menu can be used to easily list the available nodes."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:91
msgid "You can also drag and drop nodes from the popup onto the graph."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:93
msgid "While the popup has nodes sorted in categories, it can seem overwhelming at first. Try to add some of the nodes, plug them in the output socket and observe what happens."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:97
msgid "When connecting any ``scalar`` output to a ``vector`` input, all components of the vector will take the value of the scalar."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:100
msgid "When connecting any ``vector`` output to a ``scalar`` input, the value of the scalar will be the average of the vector's components."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:104
msgid "Visual Shader node interface"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:106
msgid "Visual shader nodes have input and output ports. The input ports are located on the left side of the node, and output ports are located on the right side of the node."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:110
msgid "These ports are colored to differentiate type of port:"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:119
msgid "Port types"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:123
msgid "Type"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:124
msgid "Color"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:125
msgid "Description"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:126
msgid "Example"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:127
msgid "Scalar"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:128
msgid "Gray"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:129
msgid "Scalar is a single value."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:130
msgid "|scalar|"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:112
msgid "scalar"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:131
msgid "Vector"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:132
msgid "Purple"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:133
msgid "Vector is a set of values."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:134
msgid "|vector|"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:113
msgid "vector"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:135
msgid "Boolean"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:136
msgid "Green"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:137
msgid "On or off, true or false."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:138
msgid "|boolean|"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:114
msgid "boolean"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:139
msgid "Transform"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:140
msgid "Pink"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:141
msgid "A matrix, usually used to transform vertices."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:142
msgid "|transform|"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:115
msgid "transform"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:143
msgid "Sampler"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:144
msgid "Orange"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:145
msgid "A texture sampler. It can be used to sample textures."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:146
msgid "|sampler|"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:116
msgid "sampler"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:148
msgid "All of the types are used in the calculations of vertices, fragments, and lights in the shader. For example: matrix multiplication, vector addition, or scalar division."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:151
msgid "There are other types but these are the main ones."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:154
msgid "Visual Shader nodes"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:156
msgid "Below are some special nodes that are worth knowing about. The list is not exhaustive and might be expanded with more nodes and examples."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:160
msgid "Expression node"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:162
msgid "The ``Expression`` node allows you to write Godot Shading Language (GLSL-like) expressions inside your visual shaders. The node has buttons to add any amount of required input and output ports and can be resized. You can also set up the name and type of each port. The expression you have entered will apply immediately to the material (once the focus leaves the expression text box). Any parsing or compilation errors will be printed to the Output tab. The outputs are initialized to their zero value by default. The node is located under the Special tab and can be used in all shader modes."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:171
msgid "The possibilities of this node are almost limitless – you can write complex procedures, and use all the power of text-based shaders, such as loops, the ``discard`` keyword, extended types, etc. For example:"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:178
msgid "Reroute node"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:180
msgid "The ``Reroute`` node is used purely for organizational purposes. In a complicated shader with many nodes you may find that the paths between nodes can make things hard to read. Reroute, as its name suggests, allows you to adjust the path between nodes to make things easier to read. You can even have multiple reroute nodes for a single path, which can be used to make right angles."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:188
msgid "To move a reroute node move your mouse cursor above it, and grab the handle that appears."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:194
msgid "Fresnel node"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:196
msgid "The ``Fresnel`` node is designed to accept normal and view vectors and produces a scalar which is the saturated dot product between them. Additionally, you can setup the inversion and the power of equation. The ``Fresnel`` node is great for adding a rim-like lighting effect to objects."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:204
msgid "Boolean node"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:206
msgid "The ``Boolean`` node can be converted to ``Scalar`` or ``Vector`` to represent ``0`` or ``1`` and ``(0, 0, 0)`` or ``(1, 1, 1)`` respectively. This property can be used to enable or disable some effect parts with one click."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:213
msgid "If node"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:215
msgid "The ``If`` node allows you to setup a vector which will be returned the result of the comparison between ``a`` and ``b``. There are three vectors which can be returned: ``a == b`` (in that case the tolerance parameter is provided as a comparison threshold – by default it is equal to the minimal value, i.e. ``0.00001``), ``a > b`` and ``a < b``."
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:224
msgid "Switch node"
msgstr ""

#: ../../docs/tutorials/shaders/visual_shaders.rst:226
msgid "The ``Switch`` node returns a vector if the boolean condition is ``true`` or ``false``. ``Boolean`` was introduced above. If you convert a vector to a true boolean, all components of the vector should be above zero."
msgstr ""
