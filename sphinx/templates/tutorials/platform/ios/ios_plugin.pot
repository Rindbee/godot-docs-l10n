# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:6
msgid "Creating iOS plugins"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:8
msgid "This page explains what iOS plugins can do for you, how to use an existing plugin, and the steps to code a new one."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:10
msgid "iOS plugins allow you to use third-party libraries and support iOS-specific features like In-App Purchases, GameCenter integration, ARKit support, and more."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:13
msgid "Loading and using an existing plugin"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:15
msgid "An iOS plugin requires a ``.gdip`` configuration file, a binary file which can be either ``.a`` static library or ``.xcframework`` containing ``.a`` static libraries, and possibly other dependencies. To use it, you need to:"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:17
msgid "Copy the plugin's files to your Godot project's ``res://ios/plugins`` directory. You can also group files in a sub-directory, like ``res://ios/plugins/my_plugin``."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:19
msgid "The Godot editor automatically detects and imports ``.gdip`` files inside ``res://ios/plugins`` and its subdirectories."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:21
msgid "You can find and activate detected plugins by going to Project -> Export... -> iOS and in the Options tab, scrolling to the Plugins section."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:25
msgid "When a plugin is active, you can access it in your code using ``Engine.get_singleton()``:"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:35
msgid "The plugin's files have to be in the ``res://ios/plugins/`` directory or a subdirectory, otherwise the Godot editor will not automatically detect them."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:38
msgid "Creating an iOS plugin"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:40
msgid "At its core, a Godot iOS plugin is an iOS library (*.a* archive file or *.xcframework* containing static libraries) with the following requirements:"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:42
msgid "The library must have a dependency on the Godot engine headers."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:44
msgid "The library must come with a ``.gdip`` configuration file."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:46
msgid "An iOS plugin can have the same functionality as a Godot module but provides more flexibility and doesn't require to rebuild the engine."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:48
msgid "Here are the steps to get a plugin's development started. We recommend using `Xcode <https://developer.apple.com/develop/>`_ as your development environment."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:50
msgid "The `Godot iOS Plugins <https://github.com/godotengine/godot-ios-plugins>`_."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:52
msgid "The `Godot iOS plugin template <https://github.com/naithar/godot_ios_plugin>`_ gives you all the boilerplate you need to get your iOS plugin started."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:55
msgid "To build an iOS plugin:"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:57
msgid "Create an Objective-C static library for your plugin inside Xcode."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:59
msgid "Add the Godot engine header files as a dependency for your plugin library in ``HEADER_SEARCH_PATHS``. You can find the setting inside the ``Build Settings`` tab:"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:61
msgid "Download the Godot engine source from the `Godot GitHub page <https://github.com/godotengine/godot>`_."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:63
msgid "Run SCons to generate headers. You can learn the process by reading :ref:`doc_compiling_for_ios`. You don't have to wait for compilation to complete to move forward as headers are generated before the engine starts to compile."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:65
msgid "You should use the same header files for iOS plugins and for the iOS export template."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:67
msgid "In the ``Build Settings`` tab, specify the compilation flags for your static library in ``OTHER_CFLAGS``. The most important ones are ``-fcxx-modules``, ``-fmodules``, and ``-DDEBUG`` if you need debug support. Other flags should be the same you use to compile Godot. For instance:"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:73
msgid "Add the required logic for your plugin and build your library to generate a ``.a`` file. You will probably need to build both ``debug`` and ``release`` target ``.a`` files. Depending on your needs, pick either or both. If you need both debug and release ``.a`` files, their name should match following pattern: ``[PluginName].[TargetType].a``. You can also build the static library with your SCons configuration."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:75
msgid "The iOS plugin system also supports ``.xcframework`` files. To generate one, you can use a command such as:"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:81
msgid "Create a Godot iOS Plugin configuration file to help the system detect and load your plugin:"
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:83
msgid "The configuration file extension must be ``gdip`` (e.g.: ``MyPlugin.gdip``)."
msgstr ""

#: ../../docs/tutorials/platform/ios/ios_plugin.rst:85
msgid "The configuration file format is as follow:"
msgstr ""
