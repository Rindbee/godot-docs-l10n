# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-20 18:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:4
msgid "The JavaScriptBridge Singleton"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:6
msgid "In web builds, the :ref:`JavaScriptBridge <class_JavaScriptBridge>` singleton allows interaction with JavaScript and web browsers, and can be used to implement some functionalities unique to the web platform."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:11
msgid "Interacting with JavaScript"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:13
msgid "Sometimes, when exporting Godot for the Web, it might be necessary to interface with external JavaScript code like third-party SDKs, libraries, or simply to access browser features that are not directly exposed by Godot."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:17
msgid "The ``JavaScriptBridge`` singleton provides methods to wrap a native JavaScript object into a Godot :ref:`JavaScriptObject <class_JavaScriptObject>` that tries to feel natural in the context of Godot scripting (e.g. GDScript and C#)."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:21
msgid "The :ref:`JavaScriptBridge.get_interface() <class_JavaScriptBridge_method_get_interface>` method retrieves an object in the global scope."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:34
msgid "The :ref:`JavaScriptBridge.create_object() <class_JavaScriptBridge_method_create_object>` creates a new object via the JavaScript ``new`` constructor."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:53
msgid "As you can see, by wrapping JavaScript objects into ``JavaScriptObject`` you can interact with them like they were native Godot objects, calling their methods, and retrieving (or even setting) their properties."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:57
msgid "Base types (int, floats, strings, booleans) are automatically converted (floats might lose precision when converted from Godot to JavaScript). Anything else (i.e. objects, arrays, functions) are seen as ``JavaScriptObjects`` themselves."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:62
msgid "Callbacks"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:64
msgid "Calling JavaScript code from Godot is nice, but sometimes you need to call a Godot function from JavaScript instead."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:67
msgid "This case is a bit more complicated. JavaScript relies on garbage collection, while Godot uses reference counting for memory management. This means you have to explicitly create callbacks (which are returned as ``JavaScriptObjects`` themselves) and you have to keep their reference."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:72
msgid "Arguments passed by JavaScript to the callback will be passed as a single Godot ``Array``."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:96
msgid "Here is another example that asks the user for the `Notification permission <https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API>`__ and waits asynchronously to deliver a notification if the permission is granted:"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:130
msgid "Can I use my favorite library?"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:132
msgid "You most likely can. First, you have to include your library in the page. You can simply customize the :ref:`Head Include <doc_javascript_export_options>` during export (see below), or even :ref:`write your own template <doc_customizing_html5_shell>`."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:137
msgid "In the example below, we customize the ``Head Include`` to add an external library (`axios <https://axios-http.com/>`__) from a content delivery network, and a second ``<script>`` tag to define our own custom function:"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:152
msgid "We can then access both the library and the function from Godot, like we did in previous examples:"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:178
msgid "The eval interface"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:180
msgid "The ``eval`` method works similarly to the JavaScript function of the same name. It takes a string as an argument and executes it as JavaScript code. This allows interacting with the browser in ways not possible with script languages integrated into Godot."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:198
msgid "The value of the last JavaScript statement is converted to a GDScript value and returned by ``eval()`` under certain circumstances:"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:201
msgid "JavaScript ``number`` is returned as :ref:`class_float`"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:202
msgid "JavaScript ``boolean`` is returned as :ref:`class_bool`"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:203
msgid "JavaScript ``string`` is returned as :ref:`class_String`"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:204
msgid "JavaScript ``ArrayBuffer``, ``TypedArray``, and ``DataView`` are returned as :ref:`PackedByteArray<class_PackedByteArray>`"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:221
msgid "Any other JavaScript value is returned as ``null``."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:223
msgid "HTML5 export templates may be :ref:`built <doc_compiling_for_web>` without support for the singleton to improve security. With such templates, and on platforms other than HTML5, calling ``JavaScriptBridge.eval`` will also return ``null``. The availability of the singleton can be checked with the ``web`` :ref:`feature tag <doc_feature_tags>`:"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:254
msgid "GDScript's multi-line strings, surrounded by 3 quotes ``\"\"\"`` as in ``my_func3()`` above, are useful to keep JavaScript code readable."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:257
msgid "The ``eval`` method also accepts a second, optional Boolean argument, which specifies whether to execute the code in the global execution context, defaulting to ``false`` to prevent polluting the global namespace:"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:282
msgid "Downloading files"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:284
msgid "Downloading files (e.g. a save game) from the Godot Web export to the user's computer can be done by directly interacting with JavaScript, but given it is a very common use case, Godot exposes this functionality to scripting via a dedicated :ref:`JavaScriptBridge.download_buffer() <class_JavaScriptBridge_method_download_buffer>` function which lets you download any generated buffer."
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:289
msgid "Here is a minimal example on how to use it:"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:291
msgid "extends Node"
msgstr ""

#: ../../docs/tutorials/platform/web/javascript_bridge.rst:299
msgid "And here is a more complete example on how to download a previously saved file:"
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
