#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Player scene and input actions"
msgstr "플레이어 씬과 입력 액션"

msgid ""
"In the next two lessons, we will design the player scene, register custom "
"input actions, and code player movement. By the end, you'll have a playable "
"character that moves in eight directions."
msgstr ""
"다음 두 레슨에서는 플레이어 씬을 디자인하고, 커스텀 입력 동작을 등록하고, 플"
"레이어 이동 코드를 작성할 것입니다. 이 과정이 끝나면 여덟 방향으로 움직이는 "
"플레이어 캐릭터가 완성될 것입니다."

msgid ""
"For now, we're going to create a basic rig for our character's 3D model. "
"This will allow us to rotate the model later via code while it plays an "
"animation."
msgstr ""
"지금은 캐릭터의 3D 모델을 위한 기본 리그를 만들겠습니다. 이렇게 하면 애니메이"
"션을 재생하는 동안 코드를 통해 모델을 회전시킬 수 있습니다."

msgid ""
"Then, in the FileSystem dock, expand the ``art/`` folder by double-clicking "
"it and drag and drop ``player.glb`` onto ``Pivot``."
msgstr ""
"그런 다음, FileSystem 도크에서 ``art/`` 폴더를 더블 클릭하여 확장하고 "
"``player.glb`` 파일을 ``Pivot`` 위로 드래그 앤 드롭합니다."

msgid ""
"This should instantiate the model as a child of ``Pivot``. You can rename it "
"to ``Character``."
msgstr ""
"이렇게 하면 모델이 ``Pivot`` 의 자식으로 인스턴스화됩니다. 이름을 "
"``Character`` 로 변경할 수 있습니다."

msgid ""
"The ``.glb`` files contain 3D scene data based on the open source glTF 2.0 "
"specification. They're a modern and powerful alternative to a proprietary "
"format like FBX, which Godot also supports. To produce these files, we "
"designed the model in `Blender 3D <https://www.blender.org/>`__ and exported "
"it to glTF."
msgstr ""
"``.glb`` 파일은 오픈 소스 glTF 2.0 사양을 기반으로 한 3D 씬 데이터를 포함하"
"고 있습니다. 이러한 파일들은 Godot가 지원하는 FBX와 같은 독점 형식에 대한 현"
"대적이고 강력한 대안입니다. 이러한 파일을 생성하기 위해 우리는 모델을 "
"`Blender 3D <https://www.blender.org/>`__\\ 에서 디자인하고 glTF으로 내보냈습"
"니다."

msgid "The sphere's wireframe appears below the character."
msgstr "구체의 와이어프레임이 캐릭터 아래에 나타납니다."

msgid ""
"It will be the shape the physics engine uses to collide with the "
"environment, so we want it to better fit the 3D model. Make it a bit larger "
"by dragging the orange dot in the viewport. My sphere has a radius of about "
"``0.8`` meters."
msgstr ""
"이 구체는 물리 엔진이 환경과 충돌하는 데 사용하는 모양이므로, 3D 모델에 더 "
"잘 맞도록 조정할 필요가 있습니다. 뷰포트에서 주황색 점을 드래그하여 조금 더 "
"크게 만듭니다. 제 구체는 반경이 약 ``0.8``\\ 미터입니다."

msgid ""
"Then, move the collision shape up so its bottom roughly aligns with the "
"grid's plane."
msgstr ""
"그런 다음, 충돌 모양을 위로 이동하여 바닥이 격자 평면과 대략적으로 맞추도록 "
"합니다."

msgid ""
"With the nodes ready, we can almost get coding. But first, we need to define "
"some input actions."
msgstr ""
"노드가 준비되었으므로 거의 코딩을 시작할 수 있습니다. 하지만 먼저 몇 가지 입"
"력 동작을 정의해야 합니다."

msgid "Creating input actions"
msgstr "입력 액션 만들기"

msgid ""
"To move the character, we will listen to the player's input, like pressing "
"the arrow keys. In Godot, while we could write all the key bindings in code, "
"there's a powerful system that allows you to assign a label to a set of keys "
"and buttons. This simplifies our scripts and makes them more readable."
msgstr ""
"캐릭터를 움직이기 위해 플레이어의 입력, 예를 들어 화살표 키를 누르는 것을 감"
"지할 것입니다. Godot에서는 모든 키 바인딩을 코드로 작성할 수 있지만, 키와 버"
"튼 세트에 레이블을 할당할 수 있는 강력한 시스템이 있습니다. 이는 스크립트를 "
"단순화하고 더 읽기 쉽게 만듭니다."

msgid ""
"We're going to name our actions ``move_left``, ``move_right``, "
"``move_forward``, ``move_back``, and ``jump``."
msgstr ""
"동작의 이름을 ``move_left``, ``move_right``, ``move_forward``, "
"``move_back``, 그리고 ``jump`` 로 지정하겠습니다."

msgid "Bind also the :kbd:`A` key, onto the action ``move_left``."
msgstr ":kbd:`A` 키도 ``move_left`` 동작에 바인딩합니다."

msgid ""
"If you want controllers to have different input actions, you should use the "
"Devices option in Additional Options. Device 0 corresponds to the first "
"plugged gamepad, Device 1 corresponds to the second plugged gamepad, and so "
"on."
msgstr ""
"컨트롤러에 서로 다른 입력 동작을 할당하려면 Additional Options에서 Devices 옵"
"션을 사용해야 합니다. Device 0은 첫 번째로 연결된 게임패드에 해당하고, "
"Device 1은 두 번째로 연결된 게임패드에 해당하며, 계속해서 순서대로 할당됩니"
"다."

msgid ""
"Do the same for the other input actions. For example, bind the right arrow, "
"D, and the left joystick's positive axis to ``move_right``. After binding "
"all keys, your interface should look like this."
msgstr ""
"다른 입력 동작에 대해서도 동일하게 수행합니다. 예를 들어, 오른쪽 화살표, D "
"키, 왼쪽 조이스틱의 양수 축을 ``move_right`` 에 바인딩합니다. 모든 키를 바인"
"딩한 후, 인터페이스는 다음과 같이 보여야 합니다."

msgid ""
"That's all the actions we need for this game. You can use this menu to label "
"any groups of keys and buttons in your projects."
msgstr ""
"이것이 이 게임에 필요한 모든 동작입니다. 이 메뉴를 사용하여 프로젝트에서 키"
"와 버튼 그룹에 레이블을 지정할 수 있습니다."

msgid "In the next part, we'll code and test the player's movement."
msgstr "다음 부분에서는 플레이어의 움직임을 코딩하고 테스트하겠습니다."
