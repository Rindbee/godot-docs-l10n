#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Character animation"
msgstr "캐릭터 애니메이션"

msgid ""
"In this final lesson, we'll use Godot's built-in animation tools to make our "
"characters float and flap. You'll learn to design animations in the editor "
"and use code to make your game feel alive."
msgstr ""
"이번 마지막 단원에서는 Godot의 내장 애니메이션 도구를 사용해 캐릭터가 떠다니"
"고 날갯짓하는 애니메이션을 만들어 보겠습니다. 여러분은 편집기에서 애니메이션"
"을 설계하고 코드를 활용해 게임에 생동감을 불어넣는 방법을 배우게 될 것입니다."

msgid "|image0|"
msgstr "|image0|"

msgid "image0"
msgstr "image0"

msgid "Using the animation editor"
msgstr "애니메이션 편집기 사용하기"

msgid ""
"The engine comes with tools to author animations in the editor. You can then "
"use the code to play and control them at runtime."
msgstr ""
"엔진에는 편집기에서 애니메이션을 작성하는 도구가 제공됩니다. 그런 다음 코드"
"를 사용하여 런타임에서 애니메이션을 재생하고 제어할 수 있습니다."

msgid ""
"Open the player scene, select the ``Player`` node, and add "
"an :ref:`AnimationPlayer <class_AnimationPlayer>` node."
msgstr ""
"player 씬을 열고, ``Player`` 노드를 선택한 다음, :ref:`AnimationPlayer "
"<class_AnimationPlayer>` 노드를 추가하십시오."

msgid "The *Animation* dock appears in the bottom panel."
msgstr "*Animation* 독은 화면 아래 패널에 표시됩니다."

msgid "|image1|"
msgstr "|image1|"

msgid "image1"
msgstr "image1"

msgid ""
"It features a toolbar and the animation drop-down menu at the top, a track "
"editor in the middle that's currently empty, and filter, snap, and zoom "
"options at the bottom."
msgstr ""
"AnimationPlayer에는 상단에 툴바와 애니메이션 드롭다운 메뉴, 중앙에 현재 비어 "
"있는 트랙 편집기, 그리고 하단에 필터, 스냅, 줌 옵션이 포함되어 있습니다."

msgid "Let's create an animation. Click on *Animation -> New*."
msgstr ""
"애니메이션을 만들어 봅시다. *애니메이션 -> 새로 만들기*\\ 를 클릭하세요."

msgid "|image2|"
msgstr "|image2|"

msgid "image2"
msgstr "image2"

msgid "|image3|"
msgstr "|image3|"

msgid "image3"
msgstr "image3"

msgid ""
"Once you've created the animation, the timeline appears with numbers "
"representing time in seconds."
msgstr ""
"애니메이션을 생성하면, 시간을 초 단위로 표시해 주는 타임라인이 표시됩니다."

msgid "|image4|"
msgstr "|image4|"

msgid "image4"
msgstr "image4"

msgid ""
"We want the animation to start playback automatically at the start of the "
"game. Also, it should loop."
msgstr ""
"애니메이션이 게임 시작 시 자동으로 재생되도록 설정하고, 반복되게 만들어야 합"
"니다."

msgid ""
"To do so, you can click the autoplay button (|Autoplay|) in the animation "
"toolbar and the looping arrows, respectively."
msgstr ""
"그렇게 하려면, 여러분은 애니메이션 툴바에 있는 자동 재생 버튼(|Autoplay|)과 "
"반복 화살표를 각각 클릭할 수 있습니다."

msgid "Autoplay"
msgstr "자동 재생"

msgid "|image5|"
msgstr "|image5|"

msgid "image5"
msgstr "image5"

msgid ""
"You can also pin the animation editor by clicking the pin icon in the top-"
"right. This prevents it from folding when you click on the viewport and "
"deselect the nodes."
msgstr ""
"여러분은 오른쪽 상단에 있는 핀 아이콘을 클릭하여 애니메이션 편집기를 고정할 "
"수도 있습니다. 이렇게 하면 뷰포트를 클릭하고 노드를 선택 해제할 때 편집기가 "
"접히는 것을 방지합니다."

msgid ""
"Set the animation duration to ``1.2`` seconds in the top-right of the dock."
msgstr "독의 오른쪽 상단에서 애니메이션 지속 시간을 ``1.2`` 초로 설정하세요."

msgid "|image7|"
msgstr "|image7|"

msgid ""
"You should see the gray ribbon widen a bit. It shows you the start and end "
"of your animation and the vertical blue line is your time cursor."
msgstr ""
"회색 리본이 약간 넓어지는 것을 볼 수 있습니다. 이것은 애니메이션의 시작과 끝"
"을 보여주며, 수직 파란색 선은 타임 커서입니다."

msgid "|image8|"
msgstr "|image8|"

msgid ""
"You can click and drag the slider in the bottom-right to zoom in and out of "
"the timeline."
msgstr ""
"타임라인을 확대/축소하려면 오른쪽 하단에 있는 슬라이더를 클릭하고 드래그할 "
"수 있습니다."

msgid "|image9|"
msgstr "|image9|"

msgid ""
"With the animation player node, you can animate most properties on as many "
"nodes as you need. Notice the key icon next to properties in the "
"*Inspector*. You can click any of them to create a keyframe, a time and "
"value pair for the corresponding property. The keyframe gets inserted where "
"your time cursor is in the timeline."
msgstr ""
"애니메이션 플레이어 노드를 사용하면 필요한 만큼 많은 노드의 대부분 속성을 애"
"니메이션화할 수 있습니다. *인스펙터* 에서 속성 옆에 있는 키 아이콘을 확인하세"
"요. 이들 중 아무거나 클릭하여 키프레임을 생성할 수 있습니다. 키프레임은 해당 "
"속성의 시간과 값 쌍입니다. 키프레임은 타임라인에서 시간 커서가 있는 위치에 삽"
"입됩니다."

msgid ""
"Let's insert our first keys. Here, we will animate both the position and the "
"rotation of the ``Character`` node."
msgstr ""
"첫 번째 키를 삽입해 봅시다. 여기서는 ``Character`` 노드의 위치와 회전을 모두 "
"애니메이션할 것입니다."

msgid ""
"Select the ``Character`` and in the *Inspector* expand the *Transform* "
"section. Click the key icon next to *Position*, and *Rotation*."
msgstr ""
"``Character`` 를 선택하고, *인스펙터* 에서 *Transform* 섹션을 확장하세요. "
"*Position* 과 *Rotation* 옆에 있는 키 아이콘을 클릭하세요."

msgid "|image10|"
msgstr "|image10|"

msgid ""
"For this tutorial, just create RESET Track(s) which is the default choice"
msgstr "이 튜토리얼에서는 기본 선택 사항인 리셋 트랙을 생성하기만 하면 됩니다"

msgid ""
"Two tracks appear in the editor with a diamond icon representing each "
"keyframe."
msgstr ""
"각 키프레임을 나타내는 다이아몬드 아이콘과 함께 두 개의 트랙이 편집기에 나타"
"납니다."

msgid "|image11|"
msgstr "|image11|"

msgid ""
"You can click and drag on the diamonds to move them in time. Move the "
"position key to ``0.3`` seconds and the rotation key to ``0.1`` seconds."
msgstr ""
"다이아몬드를 클릭하고 드래그하여 시간상으로 이동할 수 있습니다. 위치 키를 "
"``0.3`` 초로, 회전 키를 ``0.1`` 초로 이동하세요."

msgid "|image12|"
msgstr "|image12|"

msgid ""
"Move the time cursor to ``0.5`` seconds by clicking and dragging on the gray "
"timeline."
msgstr ""
"회색 타임라인을 클릭하고 드래그하여 시간 커서를 ``0.5`` 초로 이동합니다."

msgid "|timeline_05_click|"
msgstr "|timeline_05_click|"

msgid "timeline_05_click"
msgstr "timeline_05_click"

msgid ""
"In the *Inspector*, set the *Position*'s *Y* axis to ``0.65`` meters and the "
"*Rotation*' *X* axis to ``8``."
msgstr ""
"*인스펙터* 에서 *Position*의 *Y* 축을 ``0.65`` 미터로, *Rotation*의 *X* 축을 "
"``8`` 로 설정합니다."

msgid ""
"If you don't see the properties in the *Inspector* panel, first click on the "
"``Character`` node again in the *Scene* dock."
msgstr ""
"*인스펙터* 패널에 속성이 보이지 않으면 먼저 *씬* 독에서 ``Character`` 노드를 "
"다시 클릭하세요."

msgid "|image13|"
msgstr "|image13|"

msgid "|image14|"
msgstr "|image14|"

msgid "|animation_final_keyframes|"
msgstr "|animation_final_keyframes|"

msgid "animation_final_keyframes"
msgstr "animation_final_keyframes"

msgid ""
"You can preview the result by clicking the play button or "
"pressing :kbd:`Shift + D`. Click the stop button or press :kbd:`S` to stop "
"playback."
msgstr ""
"재생 버튼을 클릭하거나 :kbd:`Shift + D` 를 눌러 결과를 미리 볼 수 있습니다. "
"중지 버튼을 클릭하거나 :kbd:`S` 를 눌러 재생을 중지합니다."

msgid ""
"Click and drag around the first two keys in the timeline to box select them."
msgstr "타임라인에서 처음 두 키를 클릭하고 드래그하여 상자로 선택하세요."

msgid ""
"You can edit the properties of both keys simultaneously in the *Inspector*, "
"where you can see an *Easing* property."
msgstr ""
"*인스펙터*에서 두 키의 속성을 동시에 편집할 수 있으며, 여기에서 *이징* 속성"
"을 볼 수 있습니다."

msgid ""
"Click and drag on the curve, pulling it towards the left. This will make it "
"ease-out, that is to say, transition fast initially and slow down as the "
"time cursor reaches the next keyframe."
msgstr ""
"곡선을 클릭하고 왼쪽으로 드래그하세요. 이렇게 하면 이즈 아웃되어, 시간 커서"
"가 다음 키프레임에 도달할 때 초기에는 빠르게 전환되다가 느려집니다."

msgid ""
"Play the animation again to see the difference. The first half should "
"already feel a bit bouncier."
msgstr ""
"애니메이션을 다시 재생하여 차이점을 확인하세요. 전반부가 이미 약간 더 탄력적"
"으로 느껴질 것입니다."

msgid "Apply an ease-out to the second keyframe in the rotation track."
msgstr "회전 트랙의 두 번째 키프레임에 이즈 아웃을 적용하세요."

msgid ""
"Do the opposite for the second position keyframe, dragging it to the right."
msgstr "두 번째 위치 키프레임에 대해서는 반대로, 오른쪽으로 드래그하세요."

msgid ""
"Animations update the properties of the animated nodes every frame, "
"overriding initial values. If we directly animated the *Player* node, it "
"would prevent us from moving it in code. This is where the *Pivot* node "
"comes in handy: even though we animated the *Character*, we can still move "
"and rotate the *Pivot* and layer changes on top of the animation in a script."
msgstr ""
"애니메이션은 애니메이션화된 노드의 속성을 매 프레임마다 업데이트하여 초기값"
"을 덮어씁니다. *Player* 노드를 직접 애니메이션화하면 코드에서 노드를 이동할 "
"수 없습니다. 이럴 때 *Pivot* 노드가 유용합니다. *Character*를 애니메이션화했"
"더라도 스크립트에서 *Pivot* 을 이동 및 회전하고 애니메이션 위에 변경 사항을 "
"레이어링할 수 있습니다."

msgid "If you play the game, the player's creature will now float!"
msgstr "게임을 플레이하면 플레이어의 캐릭터가 떠다니게 됩니다!"

msgid ""
"If the creature is a little too close to the floor, you can move the "
"``Pivot`` up to offset it."
msgstr ""
"캐릭터가 바닥에 너무 가까이 있다면, ``피벗`` 을 위로 이동하여 상쇄할 수 있습"
"니다."

msgid ""
"We can use code to control the animation playback based on the player's "
"input. Let's change the animation speed when the character is moving."
msgstr ""
"코드를 사용하여 플레이어의 입력에 따라 애니메이션 재생을 제어할 수 있습니다. "
"캐릭터가 움직일 때 애니메이션 속도를 변경해 보겠습니다."

msgid "Open the ``Player``'s script by clicking the script icon next to it."
msgstr ""
"``Player`` 옆에 있는 스크립트 아이콘을 클릭하여 ``Player`` 의 스크립트를 여세"
"요."

msgid ""
"In ``_physics_process()``, after the line where we check the ``direction`` "
"vector, add the following code."
msgstr ""
"``_physics_process()`` 에서 ``direction`` 벡터를 확인하는 줄 뒤에 다음 코드"
"를 추가하세요."

msgid ""
"This code makes it so when the player moves, we multiply the playback speed "
"by ``4``. When they stop, we reset it to normal."
msgstr ""
"이 코드는 플레이어가 움직일 때 재생 속도를 ``4`` 배로 곱하도록 합니다. 멈추"
"면 재생 속도를 노멀로 재설정합니다."

msgid ""
"We mentioned that the ``Pivot`` could layer transforms on top of the "
"animation. We can make the character arc when jumping using the following "
"line of code. Add it at the end of ``_physics_process()``."
msgstr ""
"``피벗`` 이 애니메이션 위에 변환을 레이어링할 수 있다고 언급했습니다. 다음 코"
"드 줄을 사용하여 점프할 때 캐릭터가 호를 그리도록 만들 수 있습니다. "
"``_physics_process()`` 의 끝에 추가하세요."

msgid ""
"Here's another nice trick with animations in Godot: as long as you use a "
"similar node structure, you can copy them to different scenes."
msgstr ""
"Godot에서 애니메이션을 사용하는 또 다른 유용한 팁이 있습니다. 유사한 노드 구"
"조를 사용하는 한, 다른 씬으로 복사할 수 있습니다."

msgid ""
"For example, both the ``Mob`` and the ``Player`` scenes have a ``Pivot`` and "
"a ``Character`` node, so we can reuse animations between them."
msgstr ""
"예를 들어, ``Mob`` 씬과 ``Player`` 씬 모두 ``피벗`` 과 ``Character`` 노드를 "
"가지고 있으므로, 이들 간에 애니메이션을 재사용할 수 있습니다."

msgid ""
"Open the *Player* scene, select the AnimationPlayer node and then click on "
"**Animation > Manage Animations...**. Click the *Copy animation to "
"clipboard* button (two small squares) alongside the *float* animation. Click "
"OK to close the window."
msgstr ""
"*Player* 씬을 열고, AnimationPlayer 노드를 선택한 다음, **애니메이션 > 애니메"
"이션 관리...** 를 클릭하세요. *float* 애니메이션 옆에 있는 *애니메이션을 클립"
"보드로 복사* 버튼(작은 사각형 두 개)을 클릭합니다. 확인을 클릭하여 창을 닫습"
"니다."

msgid ""
"Next, make sure that the autoplay button (|Autoplay|) and the looping arrows "
"(Animation looping) are also turned on in the animation editor in the bottom "
"panel. That's it; all monsters will now play the float animation."
msgstr ""
"다음으로, 하단 패널의 애니메이션 편집기에서 자동 재생 버튼(|Autoplay|)과 루"
"핑 화살표(애니메이션 루핑)도 켜져 있는지 확인하세요. 그걸로 끝입니다. 이제 모"
"든 몬스터가 float 애니메이션을 재생합니다."

msgid ""
"We can change the playback speed based on the creature's ``random_speed``. "
"Open the *Mob*'s script and at the end of the ``initialize()`` function, add "
"the following line."
msgstr ""
"몬스터의 ``random_speed`` 에 따라 재생 속도를 변경할 수 있습니다. *Mob* 의 스"
"크립트를 열고 ``initialize()`` 함수의 끝에 다음 줄을 추가하세요."

msgid "And with that, you finished coding your first complete 3D game."
msgstr "이것으로 첫 번째 완전한 3D 게임 코딩을 마쳤습니다."

msgid "**Congratulations**!"
msgstr "**축하합니다**!"

msgid ""
"In the next part, we'll quickly recap what you learned and give you some "
"links to keep learning more. But for now, here are the complete "
"``player.gd`` and ``mob.gd`` so you can check your code against them."
msgstr ""
"다음 파트에서는 여러분이 배운 내용을 빠르게 요약하고 더 많은 것을 배울 수 있"
"도록 몇 가지 링크를 제공할 것입니다. 하지만 지금은 여러분의 코드를 확인할 수 "
"있도록 완전한 ``player.gd`` 와 ``mob.gd`` 를 제공합니다."

msgid "Here's the *Player* script."
msgstr "다음은 *Player* 스크립트입니다."

msgid "And the *Mob*'s script."
msgstr "다음은 *Mob* 의 스크립트입니다."
