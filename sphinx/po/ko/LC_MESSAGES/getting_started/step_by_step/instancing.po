#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating instances"
msgstr "인스턴스 만들기"

msgid ""
"In the previous part, we saw that a scene is a collection of nodes organized "
"in a tree structure, with a single node as its root. You can split your "
"project into any number of scenes. This feature helps you break down and "
"organize your game's different components."
msgstr ""
"이전 파트에서는 씬이 하나의 루트 노드를 가진 트리 구조로 구성된 노드 모음임"
"을 알아보았습니다. 프로젝트를 여러 씬으로 분할할 수 있습니다. 이 기능은 게임"
"의 다양한 구성 요소를 분리하고 조직하는 데 도움이 됩니다."

msgid ""
"As we mentioned in the previous part, instanced scenes behave like a node: "
"the editor hides their content by default. When you instance the Ball, you "
"only see the Ball node. Notice also how each duplicate has a unique name."
msgstr ""
"이전 파트에서 언급한 바와 같이, 인스턴스화된 씬은 노드처럼 동작합니다: 기본적"
"으로 에디터는 그 내용을 숨깁니다. Ball을 인스턴스화하면 Ball 노드만 표시됩니"
"다. 또한 각 복제본은 고유한 이름을 가지고 있음을 주목하세요."

msgid "In practice"
msgstr "연습해보기"

msgid ""
"Extract the archive on your computer. To import it, you need the Project "
"Manager. The Project Manager is accessed by opening Godot, or if you already "
"have Godot opened, click on *Project -> Quit to Project List* (:kbd:`Ctrl + "
"Shift + Q`, :kbd:`Ctrl + Option + Cmd + Q` on macOS)"
msgstr ""
"압축 파일을 컴퓨터에 추출합니다. 이를 가져오려면 프로젝트 매니저가 필요합니"
"다. 프로젝트 매니저는 Godot을 열거나, 이미 Godot이 열려 있는 경우 *프로젝트 -"
"> 프로젝트 목록으로 돌아가기* (:kbd:`Ctrl + Shift + Q`, macOS에서는 :kbd:"
"`Ctrl + Option + Cmd + Q`)를 클릭하여 접근할 수 있습니다."

msgid "Finally, click the Import & Edit button."
msgstr "마지막으로 \"가져오기 & 편집\" 버튼을 클릭하세요."

msgid ""
"Let's add a ball as a child of the Main node. In the Scene dock, select the "
"Main node. Then, click the link icon at the top of the scene dock. This "
"button allows you to add an instance of a scene as a child of the currently "
"selected node."
msgstr ""
"Main 노드의 하위 항목으로 볼을 추가해 보겠습니다. Scene 독에서 Main 노드를 선"
"택한 다음, Scene 독 상단에 있는 링크 아이콘을 클릭하세요. 이 버튼을 사용하면 "
"현재 선택된 노드의 하위로 씬의 인스턴스를 추가할 수 있습니다."

msgid "Double-click the ball scene to instance it."
msgstr "볼 씬을 두 번 클릭하여 인스턴스화하세요."

msgid "The ball appears in the top-left corner of the viewport."
msgstr "ball이 좌상단 구석의 뷰 포트에 나옵니다."

msgid "Click on it and drag it towards the center of the view."
msgstr "클릭한 후에 화면의 중앙으로 드래그하세요."

msgid "You can repeat this process until you have several in the scene."
msgstr "씬에 몇 개를 가지더라도 반복할 수 있습니다."

msgid ""
"Play the game again. You should now see every ball fall independently from "
"one another. This is what instances do. Each is an independent reproduction "
"of a template scene."
msgstr ""
"게임을 다시 실행하세요. 이제 각각의 볼이 서로 독립적으로 떨어지는 것을 볼 수 "
"있을 것입니다. 이것이 인스턴스의 동작 방식입니다. 각 인스턴스는 템플릿 씬의 "
"독립적인 복제품입니다."

msgid "Editing scenes and instances"
msgstr "씬과 인스턴스 편집하기"

msgid "There is more to instances. With this feature, you can:"
msgstr ""
"인스턴스에는 더 많은 기능이 있습니다. 이 기능을 사용하면 다음과 같은 작업을 "
"수행할 수 있습니다:"

msgid ""
"Change the properties of one ball without affecting the others using the "
"Inspector."
msgstr ""
"다른 것들에 영향을 주지 않고서도 인스펙터를 이용해 ball 하나의 속성을 바꿀 "
"수 있습니다."

msgid ""
"Changing a property on an instance always overrides values from the "
"corresponding packed scene."
msgstr "인스턴스의 속성을 변경하면 해당 패킹된 씬의 값이 항상 덮어씁니다."

msgid ""
"Let's now adjust an individual instance. Head back to the Main scene by "
"clicking on the corresponding tab above the viewport."
msgstr ""
"개별 인스턴스를 조절해봅시다. 뷰 포트 위쪽에서 해당하는 탭을 클릭하면 메인 씬"
"으로 돌아올 수 있습니다."

msgid ""
"Select one of the instanced Ball nodes and, in the Inspector, set its "
"Gravity Scale value to ``10``."
msgstr ""
"인스턴스화된 Ball 노드를 하나 선택하고, 인스펙터에서 중력 배수 값을 ``10``으"
"로 설정합니다."

msgid "A grey \"revert\" button appears next to the adjusted property."
msgstr "속성을 조절하고 나서, 회색 복구 버튼이 나타납니다."

msgid ""
"This icon indicates you are overriding a value from the source packed scene. "
"Even if you modify the property in the original scene, the value override "
"will be preserved in the instance. Clicking the revert icon will restore the "
"property to the value in the saved scene."
msgstr ""
"이 아이콘은 씬에서 팩된 소스의 값을 덮어썼다는 것을 알려줍니다. 원본 씬의 속"
"성을 수정하더라도 인스턴스에 덮어씌워진 값이 보존됩니다. 복구 아이콘을 누르"
"면 저장된 씬에서 속성 값을 불러옵니다."

msgid ""
"Rerun the game and notice how this ball now falls much faster than the "
"others."
msgstr ""
"게임을 다시 실행하여 이 Ball이 다른 것보다 훨씬 빠르게 떨어지는지 봅시다."

msgid ""
"Resources are another essential building block of Godot games we will cover "
"in a later lesson."
msgstr ""
"리소스는 우리가 이후 강의에서 다룰 Godot 게임의 또 다른 필수 구성 요소입니다."

msgid "Scene instances as a design language"
msgstr "디자인 언어로서의 씬 인스턴스"

msgid ""
"Instances and scenes in Godot offer an excellent design language, setting "
"the engine apart from others out there. We designed Godot around this "
"concept from the ground up."
msgstr ""
"Godot의 인스턴스와 씬은 뛰어난 디자인 언어를 제공하여 다른 엔진과 차별화됩니"
"다. 우리는 처음부터 이 개념을 중심으로 Godot를 디자인했습니다."

msgid ""
"We recommend dismissing architectural code patterns when making games with "
"Godot, such as Model-View-Controller (MVC) or Entity-Relationship diagrams. "
"Instead, you can start by imagining the elements players will see in your "
"game and structure your code around them."
msgstr ""
"Godot로 게임을 만들 때는 모델-뷰-컨트롤러(MVC)이나 엔터티-관계 다이어그램과 "
"같은 아키텍처 코드 패턴은 잊어버리세요. 대신, 플레이어가 게임에서 보게 될 요"
"소를 상상하고 이를 중심으로 코드를 구성하면 됩니다."

msgid "For example, you could break down a shooter game like so:"
msgstr "예를 들어 슈팅 게임을 다음과 같이 분류할 수 있습니다:"

msgid ""
"Imagine we started by creating the room. We could make a couple of different "
"room scenes, with unique arrangements of furniture in them. Later, we could "
"make a house scene that uses multiple room instances for the interior. We "
"would create a citadel out of many instanced houses and a large terrain on "
"which we would place the citadel. Each of these would be a scene instancing "
"one or more sub-scenes."
msgstr ""
"방을 만드는 것부터 시작했다고 상상해 보세요. 가구 배치 방법에 따라 여러 개의 "
"방 씬을 만들 수 있습니다. 이후 방 인스턴스를 여러 개 사용해 집 씬을 만들 수 "
"있습니다. 인스턴스화된 여러 집과 성채를 배치할 넓은 지형을 사용하면 성채도 만"
"들 수 있습니다. 이들 각각은 하나 이상의 하위 씬을 인스턴스화하는 씬입니다."

msgid "Summary"
msgstr "요약"

msgid "A tool to structure and encapsulate complex systems."
msgstr "복잡한 시스템을 구조화하고 캡슐화하는 도구."

msgid ""
"A language to think about your game project's structure in a natural way."
msgstr "게임 프로젝트의 구조를 자연스러운 방법으로 생각하기 위한 언어."
