#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"This lesson will give you an overview of the available scripting languages "
"in Godot. You will learn the pros and cons of each option. In the next part, "
"you will write your first script using GDScript."
msgstr ""
"이 강의에서는 Godot에서 사용할 수 있는 스크립트 언어들을 살펴볼 것입니다. 옵"
"션 별로 어떤 장점과 단점이 있는지 배워봅시다. 그 다음, GDScript를 사용하여 "
"첫 번째 스크립트를 작성해 보겠습니다."

msgid ""
"**Scripts attach to a node and extend its behavior**. This means that "
"scripts inherit all functions and properties of the node they attach to."
msgstr ""
"**스크립트는 노드에 연결되어 노드의 동작을 확장합니다**. 이는 스크립트가 연결"
"된 노드의 모든 기능과 속성을 상속한다는 의미입니다."

msgid ""
"For example, take a game where a Camera2D node follows a ship. The Camera2D "
"node follows its parent by default. Imagine you want the camera to shake "
"when the player takes damage. As this feature is not built into Godot, you "
"would attach a script to the Camera2D node and code the shake."
msgstr ""
"Camera2D 노드가 배를 따라가는 게임을 예로 들어봅시다. Camera2D 노드는 기본적"
"으로 상위 노드를 따릅니다. 플레이어가 피해를 입을 때 카메라가 흔들리기를 원한"
"다고 상상해 봅시다. 이 기능은 Godot에 내장되어 있지 않으므로, Camera2D 노드"
"에 스크립트를 연결하고 흔들림을 코딩하면 됩니다."

msgid ""
"We provide this flexibility to answer the needs of different game projects "
"and developers."
msgstr ""
"우리는 다양한 게임 프로젝트와 개발자의 요구에 부응하기 위해 다양한 선택지를 "
"제공합니다."

msgid ""
"If you're a beginner, we recommend to **start with GDScript**. We made this "
"language specifically for Godot and the needs of game developers. It has a "
"lightweight and straightforward syntax and provides the tightest integration "
"with Godot."
msgstr ""
"초보자라면 **GDScript로 시작하기**를 권장합니다. GDScript는 Godot와 게임 개발"
"자의 요구를 위해 특별히 만들어진 언어입니다. GDScript는 가볍고, 문법이 직관적"
"이며 Godot와 가장 긴밀하게 통합되어 있습니다."

msgid ""
"For C#, you will need an external code editor like `VSCode <https://"
"code.visualstudio.com/>`_ or Visual Studio. While C# support is now mature, "
"you will find fewer learning resources for it compared to GDScript. That's "
"why we recommend C# mainly to users who already have experience with the "
"language."
msgstr ""
"C#의 경우 `VSCode <https://code.visualstudio.com/>`_ 또는 Visual Studio 등의 "
"외부 코드 편집기가 필요합니다. C# 지원은 이제 성숙해졌지만 GDScript에 비해 학"
"습 리소스가 더 적습니다. 그렇기 때문에 우리는 이미 언어 경험이 있는 사용자에"
"게 주로 C#을 권장합니다."

msgid "Let's look at each language's features, as well as its pros and cons."
msgstr "각 언어의 특징과 장단점을 살펴보겠습니다."

msgid "GDScript"
msgstr "GDScript"

msgid ""
":ref:`GDScript<doc_gdscript>` is an `object-oriented <https://"
"en.wikipedia.org/wiki/Object-oriented_programming>`_ and `imperative "
"<https://en.wikipedia.org/wiki/Imperative_programming>`_ programming "
"language built for Godot. It's made by and for game developers to save you "
"time coding games. Its features include:"
msgstr ""
":ref:`GDScript<doc_gdscript>`는 Godot용으로 만들어진`객체 지향 <https://"
"en.wikipedia.org/wiki/Object- Oriented_programming>`_이자 `명령형 <https://"
"en.wikipedia.org/wiki/ Imperative_programming>`_ 프로그래밍 언어입니다. "
"GDScript는 게임 코딩 시간을 단축하기 위해 게임 개발자에 의해, 게임 개발자를 "
"위해 만들어졌습니다. 그 기능은 다음과 같습니다:"

msgid "A simple syntax that leads to short files."
msgstr "파일을 짧게 만드는 간단한 구문."

msgid "Blazing fast compilation and loading times."
msgstr "엄청나게 빠른 컴파일 및 로딩 시간."

msgid ""
"No `garbage collection <https://en.wikipedia.org/wiki/"
"Garbage_collection_(computer_science)>`_, as this feature eventually gets in "
"the way when creating games. The engine counts references and manages the "
"memory for you in most cases by default, but you can also control memory if "
"you need to."
msgstr ""
"게임을 만들 때 방해가 되는 `가비지 컬렉션<https://en.wikipedia.org/wiki/"
"Garbage_collection_(computer_science)>`_없음. 엔진은 대부분의 경우 기본적으"
"로 참조를 계산하고 메모리를 관리하지만 필요한 경우 메모리를 제어할 수도 있음."

msgid ""
"`Gradual typing <https://en.wikipedia.org/wiki/Gradual_typing>`_. Variables "
"have dynamic types by default, but you also can use type hints for strong "
"type checks."
msgstr ""
"`점진적 타이핑 <https://en.wikipedia.org/wiki/Gradual_typing>`_. 변수에는 기"
"본적으로 동적 유형이 있지만 강력한 유형 검사를 위해 유형 힌트 사용 가능."

msgid ""
"GDScript looks like Python as you structure your code blocks using "
"indentations, but it doesn't work the same way in practice. It's inspired by "
"multiple languages, including Squirrel, Lua, and Python."
msgstr ""
"GDScript의 코드 블록은 들여쓰기를 사용해 Python처럼 보이지만, 동일한 방식으"
"로 동작하는 건 아닙니다. GDScript는 Squirrel, Lua, Python을 포함한 여러 언어"
"에서 영감을 받았습니다."

msgid "Why don't we use Python or Lua directly?"
msgstr "그냥 Python이나 Lua를 사용하면 안될까요?"

msgid ""
"Years ago, Godot used Python, then Lua. Both languages' integration took a "
"lot of work and had severe limitations. For example, threading support was a "
"big challenge with Python."
msgstr ""
"몇 년 전, Godot는 Python을 사용했고 이후 Lua를 사용했습니다. 두 언어의 통합에"
"는 많은 작업이 필요했고 심각한 제한이 있었습니다. 예를 들어, 스레딩 지원은 "
"Python의 큰 과제였습니다."

msgid ""
"Developing a dedicated language doesn't take us more work and we can tailor "
"it to game developers' needs. We're now working on performance optimizations "
"and features that would've been difficult to offer with third-party "
"languages."
msgstr ""
"전용 언어를 개발하는 것은 더 많은 작업이 필요하지 않으며 게임 개발자의 요구"
"에 맞춰 조정할 수 있습니다. 이재 서드 파티 언어로는 제공하기 어려웠던 성능 최"
"적화 및 기능 개발에 작업하고 있습니다."

msgid ".NET / C#"
msgstr ".NET / C#"

msgid ""
"GDScript code itself doesn't execute as fast as compiled C# or C++. However, "
"most script code calls functions written with fast algorithms in C++ code "
"inside the engine. In many cases, writing gameplay logic in GDScript, C#, or "
"C++ won't have a significant impact on performance."
msgstr ""
"GDScript 코드 자체는 컴파일 된 C# 또는 C++만큼 빠르게 실행되지 않습니다. 그러"
"나 대부분의 스크립트 코드는 엔진 내부에서 C++ 코드로 빠른 알고리즘으로 작성"
"된 함수를 호출합니다. 대부분의 경우 GDScript, C# 또는 C++로 게임플레이 로직"
"을 작성해도 성능에 큰 영향을 미치지 않습니다."

msgid ""
"Projects written in C# using Godot 4 currently cannot be exported to the web "
"platform. To use C# on that platform, consider Godot 3 instead. Android and "
"iOS platform support is available as of Godot 4.2, but is experimental "
"and :ref:`some limitations apply <doc_c_sharp_platforms>`."
msgstr ""
"Godot 4에서 C#으로 작성된 프로젝트는 현재 웹으로 내보낼 수 없습니다. 해당 플"
"랫폼에서 C#을 사용하시려면 Godot 3를 사용하는 것을 추천드립니다. Android와 "
"iOS 플랫폼은 Godot 4.2에서 내보낼 수 있지만, 이는 실험적이며 :ref:`일부 제한"
"이 적용 <doc_c_sharp_platforms>`\\ 될 수 있습니다."

msgid "C++ via GDExtension"
msgstr "GDExtension을 통한 C++"

msgid "Summary"
msgstr "요약"

msgid ""
"Scripts are files containing code that you attach to a node to extend its "
"functionality."
msgstr ""
"스크립트는 노드의 기능을 확장하기 위해 연결하는 코드가 포함된 파일입니다."

msgid ""
"You can mix languages, for instance, to implement demanding algorithms with "
"C or C++ and write most of the game logic with GDScript or C#."
msgstr ""
"예를 들어, C 또는 C++로 까다로운 알고리즘을 구현하고 그 외 대부분의 게임 로직"
"을 GDScript 또는 C#으로 작성하는 식으로 여러 언어를 사용할 수 있습니다."
