#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Project setup"
msgstr "프로젝트 설정하기"

msgid ""
"Then, click and drag the icon in the viewport to center it in the game view."
msgstr ""
"그런 다음 뷰포트에서 아이콘을 클릭하고 드래그하여 게임 뷰 중앙에 배치합니다."

msgid ""
"C# script names need to match their class name. In this case, you should "
"name the file ``MySprite2D.cs``."
msgstr ""
"C# 스크립트 이름은 클래스 이름과 일치해야 합니다. 이 경우, 파일 이름을 "
"MySprite2D.cs로 지정해야 합니다."

msgid ""
"Inherited properties include the ones you can see in the Inspector dock, "
"like our node's ``texture``."
msgstr ""
"상속된 속성에는 노드의 ``텍스처``와 같이 인스펙터 독에서 볼 수 있는 속성이 포"
"함됩니다."

msgid ""
"By default, the Inspector displays a node's properties in \"Title Case\", "
"with capitalized words separated by a space. In GDScript code, these "
"properties are in \"snake_case\", which is lowercase with words separated by "
"an underscore."
msgstr ""
"기본적으로 인스펙터는 노드의 속성을 \"Title Case\"(공백으로 구분되며 대문자"
"로 시작하는 단어 형태)로 표시합니다. GDScript 코드에서 이러한 속성은 "
"\"snake_case\"(밑줄로 구분되며 소문자로 이루어진 단어 형태)로 표기됩니다."

msgid ""
"Our script currently doesn't do anything. Let's make it print the text "
"\"Hello, world!\" to the Output bottom panel to get started."
msgstr ""
"우리 스크립트는 현재 아무것도 하지 않습니다. 시작으로 하단의 Output 패널에 "
"\"Hello, world!\"라는 텍스트를 출력해 보겠습니다."

msgid "Add the following code to your script:"
msgstr "다음 코드를 스크립트에 추가하세요:"

msgid ""
"Let's break it down. The ``func`` keyword defines a new function named "
"``_init``. This is a special name for our class's constructor. The engine "
"calls ``_init()`` on every object or node upon creating it in memory, if you "
"define this function."
msgstr ""
"내용을 분석해 봅시다. ``func`` 키워드는 ``_init``이라는 이름의 새로운 함수를 "
"정의합니다. 이는 우리 클래스 생성자에서 사용하는 특별한 이름입니다. 이 함수"
"를 정의하면 엔진은 메모리에 생성된 모든 개체나 노드에 대해 ``_init()``를 호출"
"합니다."

msgid ""
"GDScript is an indent-based language. The tab at the start of the line that "
"says ``print()`` is necessary for the code to work. If you omit it or don't "
"indent a line correctly, the editor will highlight it in red and display the "
"following error message: \"Indented block expected\"."
msgstr ""
"GDScript는 들여쓰기 기반의 언어입니다. ``print()``가 작성된 라인의 시작 부분"
"의 탭은 코드가 동작하기 위해 반드시 필요합니다. 이를 생략하거나 줄을 알맞게 "
"들여쓰지 않으면 편집기에서 해당 항목을 빨간색으로 강조 표시하고 다음과 같은 "
"오류 메시지를 표시합니다:\"들여쓰기 된 블록이 필요합니다\"."

msgid "Turning around"
msgstr "되돌아보기"

msgid ""
"Member variables sit near the top of the script, after any \"extends\" "
"lines, but before functions. Every node instance with this script attached "
"to it will have its own copy of the ``speed`` and ``angular_speed`` "
"properties."
msgstr ""
"멤버 변수는 스크립트 상단 부근의 \"extends\" 줄 보다는 뒤에, 함수 보다는 앞"
"에 위치합니다. 이 스크립트가 첨부된 모든 노드 인스턴스는 ``speed`` 및 "
"``angular_speed`` 속성의 복사본을 갖게 됩니다."

msgid ""
"Angles in Godot work in radians by default, but you have built-in functions "
"and properties available if you prefer to calculate angles in degrees "
"instead."
msgstr ""
"Godot에서 각도는 기본적으로 라디안으로 동작하지만, 각도를 도 단위로 계산하는 "
"것을 선호하는 경우 사용할 수 있는 내장 함수와 속성도 있습니다."

msgid ""
"Games work by rendering many images per second, each called a frame, and "
"they do so in a loop. We measure the rate at which a game produces images in "
"Frames Per Second (FPS). Most games aim for 60 FPS, although you might find "
"figures like 30 FPS on slower mobile devices or 90 to 240 for virtual "
"reality games."
msgstr ""
"게임은 초당 많은 이미지(각각을 프레임이라 부름)를 렌더링하는 방식으로 작동하"
"며, 반복해서 동작합니다. 우리는 초당 프레임 수(FPS)로 게임이 이미지를 생성하"
"는 속도를 측정합니다. 대부분의 게임은 60FPS를 목표로 하지만 느린 모바일 장치"
"에서는 30FPS, 가상 현실 게임에서는 90~240FPS와 정도의 수치를 볼 수 있습니다."

msgid ""
"The engine and game developers do their best to update the game world and "
"render images at a constant time interval, but there are always small "
"variations in frame render times. That's why the engine provides us with "
"this delta time value, making our motion independent of our framerate."
msgstr ""
"엔진과 게임 개발자는 일정한 시간 간격으로 게임 세계를 업데이트하고 이미지를 "
"렌더링하기 위해 최선을 다하지만, 프레임 렌더링 시간에는 항상 작은 차이가 있습"
"니다. 이것이 바로 엔진이 우리에게 델타 시간 값을 제공하여 움직임을 프레임 속"
"도와 독립적으로 만드는 이유입니다."

msgid "At the bottom of the script, define the function:"
msgstr "스크립트 하단에, 아래와 같은 함수를 정의합니다:"

msgid ""
"The ``func`` keyword defines a new function. After it, we have to write the "
"function's name and arguments it takes in parentheses. A colon ends the "
"definition, and the indented blocks that follow are the function's content "
"or instructions."
msgstr ""
"``func`` 키워드는 새로운 함수를 정의합니다. 이 키워드 뒤에는 함수의 이름과 인"
"수를 괄호 안에 적어야 합니다. 콜론으로 정의를 끝내고, 이후의 들여쓰기 된 블록"
"은 함수의 내용이나 명령입니다."

msgid ""
"Notice how ``_process()``, like ``_init()``, starts with a leading "
"underscore. By convention, Godot's virtual functions, that is to say, built-"
"in functions you can override to communicate with the engine, start with an "
"underscore."
msgstr ""
"``_init()``과 마찬가지로 ``_process()``가 밑줄로 시작한다는 걸 주목하세요. 관"
"례적으로, Godot의 가상 함수, 즉 엔진과 통신하기 위해 오버라이딩 할 수 있는 내"
"장 함수는 밑줄로 시작합니다."

msgid "Run the scene to see the Godot icon turn in-place."
msgstr "씬을 실행하여 Godot 아이콘이 제자리에서 돌아가는 것을 확인하세요."

msgid ""
"In C#, notice how the ``delta`` argument taken by ``_Process()`` is a "
"``double``. We therefore need to convert it to ``float`` when we apply it to "
"the rotation."
msgstr ""
"C#에서 ``_Process()``가 받는 ``delta`` 인수가 ``double`` 형식인 것에 주목하세"
"요. 따라서 회전에 적용할 때 이를 ``float``로 변환해야 합니다."

msgid ""
"As we already saw, the ``var`` keyword defines a new variable. If you put it "
"at the top of the script, it defines a property of the class. Inside a "
"function, it defines a local variable: it only exists within the function's "
"scope."
msgstr ""
"이미 살펴보았듯이 ``var`` 키워드는 새로운 변수를 정의합니다. 이를 스크립트 상"
"단에 넣으면, 클래스의 속성을 정의합니다. 함수 내부에서는 지역 변수(함수 범위 "
"내에서만 존재)를 정의합니다."

msgid ""
"We add ``velocity * delta`` to the node's ``position`` to move it. The "
"position itself is of type :ref:`Vector2 <class_Vector2>`, a built-in type "
"in Godot representing a 2D vector."
msgstr ""
"노드의 ``position``에 ``velocity * delta``를 더하여 이동합니다. position 자체"
"는 2D 벡터를 나타내는 Godot에 내장된 타입인 :ref:`Vector2 <class_Vector2>` 타"
"입입니다."

msgid "Run the scene to see the Godot head run in circles."
msgstr "씬을 실행하여 Godot 머리가 원을 그리며 움직이는 것을 확인하세요."

msgid ""
"Moving a node like that does not take into account colliding with walls or "
"the floor. In :ref:`doc_your_first_2d_game`, you will learn another approach "
"to moving objects while detecting collisions."
msgstr ""
"지금의 노드 이동은 벽이나 바닥과의 충돌을 고려하지 않고 있습니"
"다. :ref:`doc_your_first_2d_game`에서는 충돌을 감지하면서 물체를 움직이는 또 "
"다른 접근 방식을 배워볼 것입니다."
