#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Heads up display"
msgstr "헤드업 디스플레이 (HUD)"

msgid ""
"The final piece our game needs is a User Interface (UI) to display things "
"like score, a \"game over\" message, and a restart button."
msgstr ""
"우리 게임에 필요한 마지막 요소는 점수, \"게임 오버\" 메시지, 재시작 버튼과 같"
"은 항목을 표시할 사용자 인터페이스(UI)입니다."

msgid ""
"The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements "
"on a layer above the rest of the game, so that the information it displays "
"isn't covered up by any game elements like the player or mobs."
msgstr ""
":ref:`CanvasLayer <class_CanvasLayer>` 노드는 게임 위 레이어에 우리의 UI 요소"
"들을 그릴수 있게 해주고, 이로써 보여지는 정보가 플레이어나 몹과 같은 게임 요"
"소들에 의해 가려지지 않게 만듭니다."

msgid "The HUD needs to display the following information:"
msgstr "HUD는 다음 정보를 표시해야 합니다:"

msgid "Score, changed by ``ScoreTimer``."
msgstr "``ScoreTimer``\\ 에 의해 변경되는 점수(Score)."

msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr "\"Game Over\"나 \"Get Ready!\"와 같은 메시지"

msgid "A \"Start\" button to begin the game."
msgstr "게임을 시작하기 위한 \"Start\" 버튼."

msgid ""
"The basic node for UI elements is :ref:`Control <class_Control>`. To create "
"our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:"
"`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""
"UI 요소의 기초가 되는 노드는 :ref:`Control <class_Control>`\\ 입니다. UI를 만"
"들기 위해, 우리는 두 가지 타입의 :ref:`Control <class_Control>` 노드: :ref:"
"`Label <class_Label>`\\ 과 :ref:`Button <class_Button>`\\ 을 사용할 것입니다."

msgid "Create the following as children of the ``HUD`` node:"
msgstr "다음 노드들을 ``HUD`` 노드의 자식으로 추가하세요:"

msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr "``ScoreLabel``\\ 로 이름지은 :ref:`Label <class_Label>`."

msgid ":ref:`Label <class_Label>` named ``Message``."
msgstr "``Message``\\ 로 이름지은 :ref:`Label <class_Label>`."

msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr "``StartButton``\\ 으로 이름지은 :ref:`Button <class_Button>`."

msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr "``MessageTimer``\\ 로 이름지은 :ref:`Timer <class_Timer>`."

msgid ""
"Click on the ``ScoreLabel`` and type a number into the ``Text`` field in the "
"Inspector. The default font for ``Control`` nodes is small and doesn't scale "
"well. There is a font file included in the game assets called \"Xolonium-"
"Regular.ttf\". To use this font, do the following:"
msgstr ""
"``ScoreLabel``\\ 을 클릭하고 인스펙터(Inspecter)의 *Text* 필드에 숫자를 입력"
"하세요. ``Control`` 노드의 기본 폰트는 작아서 크기 조정이 잘 되지 않습니다. "
"게임 애셋에는 \"Xolonium-Regular.ttf\"라는 폰트 파일이 있습니다. 이 폰트를 사"
"용하려면, 각 ``Control`` 노드마다 다음과 같이 하세요:"

msgid ""
"The font size is still too small, increase it to ``64`` under \"Theme "
"Overrides > Font Sizes\". Once you've done this with the ``ScoreLabel``, "
"repeat the changes for the ``Message`` and ``StartButton`` nodes."
msgstr ""
"글꼴 크기가 여전히 너무 작습니다. \"테마 오버라이드(Theme Overrides) > 글꼴 "
"크기(Font Sizes)\"에서 글꼴 크기를 ``64``로 증가시킵니다. ``ScoreLabel``에서 "
"이 작업을 완료한 후, 동일한 변경을 ``Message`` 및 ``StartButton`` 노드에도 반"
"복합니다."

msgid "ScoreLabel"
msgstr "ScoreLabel"

msgid "Add the text ``0``."
msgstr "텍스트 ``0``을 추가합니다."

msgid ""
"Set the \"Horizontal Alignment\" and \"Vertical Alignment\" to ``Center``."
msgstr ""
"\"수평 정렬(Horizontal Alignment)\"와 '수직 정렬(Vertical Alignment)\"를 ``가"
"운데 정렬(Center)``로 설정합니다."

msgid "Choose the \"Anchor Preset\" ``Center Top``."
msgstr ""
"\"앵커 프리셋(Anchor Preset)\"을 ``중심 상단(Center Top)``으로 선택합니다."

msgid "Message"
msgstr "메시지"

msgid "Choose the \"Anchor Preset\" ``Center``."
msgstr "\"앵커 프리셋(Anchor Preset)\"을 ``Center``로 선택합니다."

msgid "StartButton"
msgstr "StartButton"

msgid "Choose the \"Anchor Preset\" ``Center Bottom``."
msgstr "\"Anchor Preset\"을 ``중심 하단(Center Bottom)``로 선택합니다."

msgid ""
"On the ``MessageTimer``, set the ``Wait Time`` to ``2`` and set the ``One "
"Shot`` property to \"On\"."
msgstr ""
"``MessageTimer``\\ 에서 ``Wait Time``\\ 을 ``2``\\ 로 설정하고 ``One Shot`` "
"속성을 \"사용(On)\"으로 설정합니다."

msgid "Now add this script to ``HUD``:"
msgstr "이제 ``HUD``\\ 에 이 스크립트를 추가하세요:"

msgid ""
"This function is called when the player loses. It will show \"Game Over\" "
"for 2 seconds, then return to the title screen and, after a brief pause, "
"show the \"Start\" button."
msgstr ""
"이 함수는 플레이어가 패배했을 때 호출됩니다. 이 함수는 2초동안 \"Game "
"Over\"를 보여주고, 타이틀 화면으로 돌아와서, 잠깐 일시정지한 후 \"Start\" 버"
"튼을 보여줍니다."

msgid ""
"When you need to pause for a brief time, an alternative to using a Timer "
"node is to use the SceneTree's ``create_timer()`` function. This can be very "
"useful to add delays such as in the above code, where we want to wait some "
"time before showing the \"Start\" button."
msgstr ""
"잠시 일시 정지를 해야 한다면 타이머 노드를 사용하는 대신 SceneTree의 "
"``create_timer()`` 함수를 사용하는 것이 좋습니다. 이 함수는 \"Start\" 버튼을 "
"표시하기 전에 잠시 기다려야 하는 위의 코드와 같이 지연을 추가하는 데 매우 유"
"용할 수 있습니다."

msgid "Add the code below to ``HUD`` to update the score"
msgstr "``HUD``에 아래 코드를 추가하여 점수를 업데이트합니다"

msgid "Connecting HUD to Main"
msgstr "메인에 HUD를 연결하기"

msgid ""
"Now that we're done creating the ``HUD`` scene, go back to ``Main``. "
"Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` scene. "
"The scene tree should look like this, so make sure you didn't miss anything:"
msgstr ""
"이제 ``HUD`` 씬 만들기가 끝났으니 저장하고 다시 ``Main``\\ 으로 돌아가세요. "
"``Player`` 씬에서 했듯이 ``HUD`` 씬을 ``Main``\\ 에 인스턴스화하고, 트리의 "
"맨 아래에 배치하세요. 모든 트리는 다음처럼 보여야 하므로, 놓친 것이 없는지 확"
"인해보세요:"

msgid ""
"Now we need to connect the ``HUD`` functionality to our ``Main`` script. "
"This requires a few additions to the ``Main`` scene:"
msgstr ""
"이제 ``HUD`` 기능을 ``Main`` 스크립트에 연결할 것입니다. 여기에는 ``Main`` 씬"
"에 추가적인 것들이 요구됩니다:"

msgid ""
"In ``new_game()``, update the score display and show the \"Get Ready\" "
"message:"
msgstr ""
"``new_game()``\\ 에서, 점수 화면을 업데이트하고 \"Get Ready\" 메시지를 보이"
"게 합니다:"

msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr "``game_over()``\\ 에서는, 해당 ``HUD`` 함수를 호출해야 합니다:"

msgid "Removing old creeps"
msgstr "오래된 적들 제거하기"

msgid ""
"If you play until \"Game Over\" and then start a new game right away, the "
"creeps from the previous game may still be on the screen. It would be better "
"if they all disappeared at the start of a new game. We just need a way to "
"tell *all* the mobs to remove themselves. We can do this with the \"group\" "
"feature."
msgstr ""
"\"Game Over\"까지 플레이한 다음 바로 새 게임을 시작하면 이전 게임의 크립이 화"
"면에 계속 표시될 수 있습니다. 새 게임이 시작될 때 모두 사라지면 더 좋을 것입"
"니다. 우리는 *모든* 몹에게 스스로 제거하도록 지시할 방법이 필요합니다. \"그룹"
"(group)\" 기능으로 이 작업을 수행할 수 있습니다."

msgid ""
"In the ``Mob`` scene, select the root node and click the \"Node\" tab next "
"to the Inspector (the same place where you find the node's signals). Next to "
"\"Signals\", click \"Groups\" and you can type a new group name and click "
"\"Add\"."
msgstr ""
"``Mob`` 씬에서 루트 노드를 선택하고 인스펙터 옆에 있는 \"노드(Node)\" 탭을 클"
"릭하세요(노드의 시그널을 찾을 수 있는 동일한 위치). \"시그널(Signals)\" 옆에 "
"있는 \"그룹(Groups)\"을 클릭하고 새 그룹 이름을 입력하고 \"추가(Add)\"를 클릭"
"하세요."

msgid ""
"The ``call_group()`` function calls the named function on every node in a "
"group - in this case we are telling every mob to delete itself."
msgstr ""
"``call_group()`` 함수는 그룹의 모든 노드에서 지정된 함수를 호출합니다. 이 경"
"우 모든 몹에게 자신을 삭제하도록 지시합니다."

msgid ""
"The game's mostly done at this point. In the next and last part, we'll "
"polish it a bit by adding a background, looping music, and some keyboard "
"shortcuts."
msgstr ""
"이제 게임의 대부분이 완성되었습니다. 다음이자 마지막 부분에서는 배경, 반복되"
"는 음악, 몇 가지 키보드 단축키를 추가하여 게임을 조금 더 다듬어 보겠습니다."

msgid "Translation status"
msgstr "번역 상태"
