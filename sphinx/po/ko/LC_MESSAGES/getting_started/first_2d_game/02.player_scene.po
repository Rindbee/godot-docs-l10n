#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating the player scene"
msgstr "플레이어 씬 만들기"

msgid ""
"With the project settings in place, we can start working on the player-"
"controlled character."
msgstr ""
"프로젝트 설정이 완료되면 플레이어가 제어하는 캐릭터 작업을 시작할 수 있습니"
"다."

msgid ""
"The first scene will define the ``Player`` object. One of the benefits of "
"creating a separate Player scene is that we can test it separately, even "
"before we've created other parts of the game."
msgstr ""
"첫 번째 씬은 ``Player`` 오브젝트를 정의합니다. 별도의 플레이어 씬을 만드는 것"
"의 장점 중 하나는 게임의 다른 부분을 만들기 전에도 별도로 테스트할 수 있다는 "
"것입니다."

msgid "Node structure"
msgstr "노드 구조"

msgid ""
"When you add the ``Area2D`` node, Godot will display the following **warning "
"icon** next to it in the scene tree:"
msgstr ""
"``Area2D`` 노드를 추가하면 Godot는 씬 트리에서 해당 노드 옆에 다음과 같은 **"
"경고 아이콘**\\ 을 표시합니다."

msgid ""
"This warning tells us that the ``Area2D`` node requires a shape to detect "
"collisions or overlaps. We can **ignore the warning temporarily** because we "
"will first set up the player's visuals (using an animated sprite). Once the "
"visuals are ready, we will add a collision shape as a child node. This will "
"allow us to accurately size and position the shape based on the sprite's "
"appearance."
msgstr ""
"이 경고는 ``Area2D`` 노드가 충돌이나 겹침을 감지하려면 셰이프가 필요하다는 것"
"을 알려줍니다. 플레이어의 시각적 요소를 (애니메이션 스프라이트를 사용하여) 먼"
"저 설정할 것이므로, 이 경고를 ``일시적으로 무시``\\ 할 수 있습니다. 시각적 요"
"소가 준비되면, 자식 노드로 콜리전 셰이프를 추가할 것입니다. 이렇게 하면 스프"
"라이트의 외형에 맞춰 셰이프의 크기와 위치를 정확하게 조정할 수 있습니다."

msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"``Area2D``\\ 를 사용하면 플레이어와 겹치거나 충돌하는 물체를 감지할 수 있습니"
"다. 노드를 두 번 클릭하여 노드 이름을 ``Player``\\ 로 변경하세요. 이제 씬의 "
"루트 노드를 설정했으므로 노드를 추가해 더 많은 기능을 줄 수 있습니다."

msgid "For this project, we will be following the Godot naming conventions."
msgstr "이 프로젝트에서, 우리는 Godot의 명명 규칙을 따를 것입니다."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: 클래스(노드)는 파스칼 표기법(PascalCase)을 사용하고, 변수와 함"
"수는 스네이크_표기법(snake_case)을 사용하며, 상수는 전부 대문자(ALL_CAPS)를 "
"사용합니다(:ref:`doc_gdscript_styleguide` 참조)."

msgid "Sprite animation"
msgstr "스프라이트 애니메이션"

msgid ""
"Click on the ``SpriteFrames`` you just created to open the \"SpriteFrames\" "
"panel:"
msgstr ""
"방금 생성한 ``SpriteFrames``\\ 를 클릭하여 \"SpriteFrames\" 패널을 엽니다:"

msgid ""
"On the left is a list of animations. Click the ``default`` one and rename it "
"to ``walk``. Then click the **Add Animation** button to create a second "
"animation named ``up``."
msgstr ""
"왼쪽에 애니메이션 목록이 있습니다. ``default``를 클릭하여 ``walk``로 이름을 "
"변경합니다. 그리고 **애니메이션 추가** 버튼을 클릭하여 ``up``이라는 두 번째 "
"애니메이션을 생성합니다."

msgid ""
"``playerGrey_walk1`` and ``playerGrey_walk2`` for the ``walk`` animation"
msgstr ""
"``walk`` 애니메이션에는 ``playerGrey_walk1``\\ 과 ``playerGrey_walk2``\\ 를 "
"사용합니다"

msgid "``playerGrey_up1`` and ``playerGrey_up2`` for the ``up`` animation"
msgstr ""
"``up`` 애니메이션에는 ``playerGrey_up1``과 ``playerGrey_up2``를 사용합니다"

msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr "다 되셨다면, 당신의 ``Player`` 씬은 이렇게 되어야 합니다:"

msgid ""
"Once this is done, the warning on the ``Area2D`` node will disappear, as it "
"now has a shape assigned and can interact with other objects."
msgstr ""
"이 작업이 완료되면 ``Area2D`` 노드에 대한 경고가 사라집니다. 이제 도형이 할당"
"되었고 다른 오브젝트와 상호 작용할 수 있기 때문입니다."

msgid "Make sure to save the scene again after these changes."
msgstr "이러한 변경 후에 씬을 다시 저장하는 것을 잊지 마세요."

msgid ""
"In the next part, we'll add a script to the player node to move and animate "
"it. Then, we'll set up collision detection to know when the player got hit "
"by something."
msgstr ""
"다음 부분에서는 Player 노드에 스크립트를 추가하여 플레이어를 움직이고 애니메"
"이션을 적용하겠습니다. 그런 다음 콜리전(Collision) 감지를 설정하여 플레이어"
"가 무언가에 부딪혔을 때를 파악하겠습니다."
