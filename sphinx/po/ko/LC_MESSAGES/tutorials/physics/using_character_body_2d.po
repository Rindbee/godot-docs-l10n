#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "소개"

msgid "What is a character body?"
msgstr "캐릭터 바디가 무엇입니까?"

msgid "Movement and collision"
msgstr "이동과 콜리전"

msgid ""
"The two movement methods serve different purposes, and later in this "
"tutorial, you'll see examples of how they work."
msgstr ""
"두 개의 이동 메서드는 다른 목적을 지닙니다, 그리고 이 튜토리얼 이후에, 어떻"
"게 작동하는 지에 대한 예제를 볼 것입니다."

msgid ""
"``KinematicCollision2D`` is an object containing data about the collision "
"and the colliding object. Using this data, you can calculate your collision "
"response."
msgstr ""
"``KinematicCollision2D``\\ 는 콜리전과 충돌하는 오브젝트에 대한 정보를 담고 "
"있는 오브젝트입니다. 이 정보로, 콜리전 반응을 계산할 수 있습니다."

msgid "``velocity`` - *default value:* ``Vector2( 0, 0 )``"
msgstr "``velocity`` - *디폴트 값:* ``Vector2( 0, 0 )``"

msgid "``up_direction`` - *default value:* ``Vector2( 0, -1 )``"
msgstr "``up_direction`` - *디폴트 값:* ``Vector2( 0, -1 )``"

msgid ""
"This parameter prevents a body from sliding down slopes when standing still."
msgstr ""
"이 매개변수는 서있는 상태일 때 바디가 경사면에 미끄러져 내려가는 것을 방지합"
"니다."

msgid ""
"``floor_max_angle`` - *default value:* ``0.785398`` (in radians, equivalent "
"to ``45`` degrees)"
msgstr ""
"``floor_max_angle`` - *기본 값:* ``0.785398`` (라디안에서는, ``45``\\ 도와 같"
"습니다)"

msgid "Detecting collisions"
msgstr "콜리전 감지하기"

msgid ""
"When using ``move_and_collide()`` the function returns a "
"``KinematicCollision2D`` directly, and you can use this in your code."
msgstr ""
"``move_and_collide()``\\ 를 사용할 때 함수는 ``KinematicCollision2D``\\ 를 직"
"접 반환하고, 이 정보를 여러분의 코드에 사용할 수 있습니다."

msgid ""
"See :ref:`KinematicCollision2D <class_KinematicCollision2D>` for details on "
"what collision data is returned."
msgstr ""
"반환되는 콜리전 데이터에 대한 자세한 내용은 :ref:`KinematicCollision2D "
"<class_KinematicCollision2D>`\\ 를 참조하세요."

msgid "Which movement method to use?"
msgstr "어떤 이동 메서드를 사용해야 할까요?"

msgid ""
"Anything you do with ``move_and_slide()`` can also be done with "
"``move_and_collide()``, but it might take a little more code. However, as "
"we'll see in the examples below, there are cases where ``move_and_slide()`` "
"doesn't provide the response you want."
msgstr ""
"``move_and_slide()``\\ 로 하는 것을 ``move_and_collide()``\\ 또한 할 수 있습"
"니다, 하지만 좀 더 많은 코드를 갖습니다. 하지만 아래에서 예제를 보면, "
"``move_and_slide()``\\ 가 원하는 응답을 제공하지 않는 경우도 있습니다."

msgid "Examples"
msgstr "예제"

msgid "Movement and walls"
msgstr "이동과 벽"

msgid ""
"See :ref:`doc_2d_movement` for examples of implementing 2D movement schemes."
msgstr "2D 이동 구조를 구현하는 예제는 :ref:`doc_2d_movement`\\ 를 참고하세요."

msgid "Attach a script to the CharacterBody2D and add the following code:"
msgstr "CharacterBody2D에 스크립트를 붙이고 다음 코드를 추가하세요:"

msgid ""
"This happens because there is no *collision response*. "
"``move_and_collide()`` stops the body's movement when a collision occurs. We "
"need to code whatever response we want from the collision."
msgstr ""
"이것은 *콜리전 응답*\\ 이 없기 때문에 발생한 것입니다. "
"``move_and_collide()``\\ 는 콜리전이 발생할 때 바디의 움직임을 멈춥니다. 콜리"
"전로부터 원하는 어떤 응답이라도 코딩해야 합니다."

msgid ""
"``move_and_slide()`` provides a default collision response of sliding the "
"body along the collision object. This is useful for a great many game types, "
"and may be all you need to get the behavior you want."
msgstr ""
"``move_and_slide()``\\ 는 다비가 콜리전 오브젝트를 따라 미끄러지는 기본 콜리"
"전 응답을 제공합니다. 이것은 아주 많은 게임 유형에 유용하고, 원하는 행동을 얻"
"을 때 필요할 수도 있습니다."

msgid "Bouncing/reflecting"
msgstr "튕김/반사"

msgid ""
"This example uses three scenes. The main scene contains the Player and "
"Walls. The Bullet and Wall are separate scenes so that they can be instanced."
msgstr ""
"이 예제는 세 개의 씬을 사용합니다. 메인 씬은 Player와 Wall을 갖고 있습니다. "
"Bullet과 Wall은 분리된 씬으로 그들은 인스턴스 할 수 있습니다."

msgid "And the code for the Bullet:"
msgstr "그리고 Bullet을 위한 코드입니다:"

msgid ""
"If there is a returned collision, we use the ``normal`` of the collision to "
"reflect the bullet's ``velocity`` with the ``Vector2.bounce()`` method."
msgstr ""
"반환된 콜리전이 있다면, 우리는 콜리전의 ``normal``\\ 을 사용해 "
"``Vector2.bounce()`` 메서드로 총알의 ``velocity``\\ 를 반사합니다."

msgid ""
"If the colliding object (``collider``) has a ``hit`` method, we also call "
"it. In the example project, we've added a flashing color effect to the Wall "
"to demonstrate this."
msgstr ""
"충돌 오브젝트 (``collider``)가 ``hit`` 메서드를 가진다면, 또한 그것을 호출합"
"니다. 예제 프로젝트에서는, 이를 설명하기 위해 Wall에 반짝이는 색상 효과를 추"
"가했습니다."

msgid "Platformer movement"
msgstr "플랫포머 움직임"

msgid "Here's the code for the player body:"
msgstr "플레이어 바디를 위한 코드입니다:"
