#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"This page provides an overview of the commonly used features of both C# and "
"Godot and how they are used together."
msgstr ""
"이 페이지는 C#과 Godot에서 일반적으로 사용되는 기능과 어떻게 이 둘이 함께 사"
"용되는 지에 대한 개요입니다."

msgid "Type conversion and casting"
msgstr "형 변환과 캐스트하기"

msgid ""
"C# is a statically typed language. Therefore, you can't do the following:"
msgstr "C#은 정적으로 타입형 언어입니다. 그러므로 다음을 할 수 없습니다:"

msgid "For this, you have various options in C#."
msgstr "이를 위해, C#에서는 다양한 옵션이 있습니다."

msgid "**Casting and Type Checking**"
msgstr "**캐스트하기와 타입 체크하기**"

msgid "**Using the AS operator**"
msgstr "**AS 연산자 사용하기**"

msgid "**Using the generic methods**"
msgstr "**통용 메서드 사용하기**"

msgid ""
"Generic methods are also provided to make this type conversion transparent."
msgstr "통용 메서드는 이 타입 변환을 투명하게 만들기 위해 제공됩니다."

msgid ""
"``GetNode<T>()`` casts the node before returning it. It will throw an "
"``InvalidCastException`` if the node cannot be cast to the desired type."
msgstr ""
"``GetNode<T>()``\\ 은 반환하기 전에 노드를 캐스트 합니다. 노드가 원하는 타입"
"으로 캐스트 되지 않는다면 ``InvalidCastException``\\ 을 발생시킵니다."

msgid ""
"``GetNodeOrNull<T>()`` uses the ``as`` operator and will return ``null`` if "
"the node cannot be cast to the desired type."
msgstr ""
"``GetNodeOrNull<T>()``\\ 는 ``as`` 연산자를 사용하고 노드가 원하는 타입으로 "
"캐스트 되지 않는다면 ``null``\\ 을 반환합니다."

msgid "**Type checking using the IS operator**"
msgstr "**IS 연산자를 사용하여 타입 체크하기**"

msgid ""
"For more advanced type checking, you can look into `Pattern Matching "
"<https://docs.microsoft.com/en-us/dotnet/csharp/pattern-matching>`_."
msgstr ""
"더 많은 고급 타입 체크하기의 경우, `패턴 일치 <https://docs.microsoft.com/ko-"
"kr/dotnet/csharp/pattern-matching>`_\\ 에서 찾아볼 수 있습니다."

msgid "Preprocessor defines"
msgstr "전처리기 지시문"

msgid ""
"Godot has a set of defines that allow you to change your C# code depending "
"on the environment you are compiling to."
msgstr ""
"Godot는 컴파일하는 환경에 따라 C# 코드를 변경할 수 있도록 여러 전처리기 지시"
"문을 제공합니다."

msgid "Examples"
msgstr "예제"

msgid "For example, you can change code based on the platform:"
msgstr "예를 들어, 다음과 같이 플랫폼에 따라 코드를 변경할 수 있습니다:"

msgid ""
"Or you can detect which engine your code is in, useful for making cross-"
"engine libraries:"
msgstr ""
"혹은 여러분의 코드를 실행하는 엔진의 상태를 확인하는데 사용할 수도 있습니다. "
"크로스-엔진 라이브러리를 제작하는데 유용한 기능입니다:"

msgid "Full list of defines"
msgstr "모든 지시문"

msgid "``GODOT`` is always defined for Godot projects."
msgstr "``GODOT`` 은 항상 Godot 프로젝트를 정의합니다."

msgid ""
"When **exporting**, the following may also be defined depending on the "
"export features:"
msgstr ""
"**내보내기** 를 할 때, 내보내기 기능에 따라서 아래의 것들이 정의될 수 있습니"
"다:"

msgid ""
"One of ``GODOT_PC``, ``GODOT_MOBILE``, or ``GODOT_WEB`` depending on the "
"platform type."
msgstr ""
"플랫폼에 따라서 ``GODOT_PC``, ``GODOT_MOBILE``, 또는 ``GODOT_WEB`` 중 하나가 "
"정의됩니다."

msgid ""
"To see an example project, see the OS testing demo: https://github.com/"
"godotengine/godot-demo-projects/tree/master/misc/os_test"
msgstr ""
"예제 프로젝트를 확인하려면 OS 테스트 데모를 확인하세요: https://github.com/"
"godotengine/godot-demo-projects/tree/master/misc/os_test"
