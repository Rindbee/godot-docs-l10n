#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# API differences to GDScript"
msgstr "C#과 GDScript의 API 차이점"

msgid "This is a (incomplete) list of API differences between C# and GDScript."
msgstr "이것은 C#과 GDScript간의 (불완전한) API 차이점 목록입니다."

msgid "General differences"
msgstr "일반적인 차이점"

msgid "Global scope"
msgstr "전역 범위"

msgid ""
"Global functions and some constants had to be moved to classes, since C# "
"does not allow declaring them in namespaces. Most global constants were "
"moved to their own enums."
msgstr ""
"C#은 네임 스페이스에서 전역 함수와 일부 상수는 선언하지 않기 때문에 이 둘은 "
"클래스로 이동해야 합니다. 대부분의 전역 상수는 자신의 열거형으로 이동합니다."

msgid "Constants"
msgstr "상수"

msgid "Special cases:"
msgstr "특별한 경우:"

msgid "GDScript"
msgstr "GDScript"

msgid "C#"
msgstr "C#"

msgid "``TYPE_*``"
msgstr "``TYPE_*``"

msgid "``Variant.Type`` enum"
msgstr "``Variant.Type`` 열거형"

msgid "``OP_*``"
msgstr "``OP_*``"

msgid "``Variant.Operator`` enum"
msgstr "``Variant.Operator`` 열거형"

msgid "Math functions"
msgstr "수학 함수"

msgid ""
"Math global functions, like ``abs``, ``acos``, ``asin``, ``atan`` and "
"``atan2``, are located under ``Mathf`` as ``Abs``, ``Acos``, ``Asin``, "
"``Atan`` and ``Atan2``. The ``PI`` constant can be found as ``Mathf.Pi``."
msgstr ""
"``abs``, ``acos``, ``asin``, ``atan`` 그리고 ``atan2``\\ 와 같은 수학 전역 함"
"수는 ``Mathf``\\ 에 위치하며, ``Abs``, ``Acos``, ``Asin``, ``Atan`` 그리고 "
"``Atan2``\\ 로 존재합니다. ``PI`` 상수는 ``Mathf.Pi``\\ 입니다."

msgid "Random functions"
msgstr "랜덤 함수"

msgid ""
"Random global functions, like ``rand_range`` and ``rand_seed``, are located "
"under ``GD``. Example: ``GD.RandRange`` and ``GD.RandSeed``."
msgstr ""
"``rand_range``\\ 와 ``rand_seed``\\ 와 같은 랜덤 전역 함수는 ``GD``\\ 에 위치"
"합니다. 예: ``GD.RandRange``\\ 와 ``GD.RandSeed``."

msgid "Other functions"
msgstr "기타 함수"

msgid "Exceptions:"
msgstr "예외:"

msgid "``weakref(obj)``"
msgstr "``weakref(obj)``"

msgid "``is_instance_valid(obj)``"
msgstr "``is_instance_valid(obj)``"

msgid "Tips"
msgstr "팁"

msgid ""
"Sometimes it can be useful to use the ``using static`` directive. This "
"directive allows to access the members and nested types of a class without "
"specifying the class name."
msgstr ""
"때로는 ``using static`` 지시문을 사용하는 게 유용할 수 있습니다. 이 지시문이"
"면 클래스 이름을 지정하지 않고도 클래스의 멤버와 중첩된 타입에 접근할 수 있습"
"니다."

msgid "Example:"
msgstr "예시:"

msgid "assert"
msgstr "assert"

msgid "preload"
msgstr "preload"

msgid ""
"``preload``, as it works in GDScript, is not available in C#. Use ``GD."
"Load`` or ``ResourceLoader.Load`` instead."
msgstr ""
"GDScript에서 쓰이는 ``preload``\\ 는 C#에서 사용할 수 없습니다. 대신 ``GD."
"Load`` 또는 ``ResourceLoader.Load``\\ 를 사용합니다."

msgid "See also: :ref:`doc_c_sharp_signals`."
msgstr "다음 또한 확인하십시오: :ref:`c_sharp_signals`."

msgid ""
"However C# does not have this ability. To achieve the same effect you need "
"to do this."
msgstr ""
"반면 C#에는 이런 기능이 존재하지 않습니다. 같은 효과를 위해서는 아래와 같이 "
"작성해야 합니다."

msgid "Singletons"
msgstr "싱글톤"

msgid ""
"Singletons are available as static classes rather than using the singleton "
"pattern. This is to make code less verbose than it would be with an "
"``Instance`` property."
msgstr ""
"싱글톤은 싱글톤 패턴을 사용하는 대신 정적 클래스로 사용할 수 있습니다. 이것으"
"로 ``Instance`` 속성으로 작업하는 것과 비슷하면서도 더 적은 문장의 코드를 만"
"들 수 있습니다."

msgid "String"
msgstr "String"

msgid "match"
msgstr "match"

msgid "The following method was converted to a property with a different name:"
msgstr "다음 메서드들는 다른 이름으로 변경된 속성들입니다:"

msgid "Signal"
msgstr "시그널"

msgid ""
"The following methods were converted to properties with their respective "
"names changed:"
msgstr "다음 메서드들은 관련된 이름으로 변경된 속성들입니다:"

msgid "Basis"
msgstr "기저"

msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Basis()`` initializes all primitive members to their default value. Use "
"``Basis.Identity`` for the equivalent of ``Basis()`` in GDScript and C++."
msgstr ""
"C#에서 Struct은 매개변수 없는 생성자를 가질 수 없습니다. 따라서 ``new "
"Basis()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C++에서 "
"``Basis()``\\ 에 해당하는 것으로 ``Basis.Identity``\\ 를 사용합니다."

msgid "``get_scale()``"
msgstr "``get_scale()``"

msgid "``Scale``"
msgstr "``Scale``"

msgid "Transform2D"
msgstr "Transform2D"

msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Transform2D()`` initializes all primitive members to their default value. "
"Please use ``Transform2D.Identity`` for the equivalent of ``Transform2D()`` "
"in GDScript and C++."
msgstr ""
"C#에서 Struct는 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Transform2D()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C+"
"+에서 ``Transform2D()``\\ 에 해당하는 것으로 ``Transform2D.Identity``\\ 를 사"
"용해주세요."

msgid "``get_rotation()``"
msgstr "``get_rotation()``"

msgid "``Rotation``"
msgstr "``Rotation``"

msgid "Rect2"
msgstr "Rect2"

msgid ""
"The following field was converted to a property with a *slightly* different "
"name:"
msgstr "다음 영역은 *약간* 다른 이름으로 변경된 속성입니다:"

msgid "``end``"
msgstr "``end``"

msgid "``End``"
msgstr "``End``"

msgid "``get_area()``"
msgstr "``get_area()``"

msgid "``Area``"
msgstr "``Area``"

msgid "Color"
msgstr "색상"

msgid "Array"
msgstr "배열"

msgid "Dictionary"
msgstr "딕셔너리"

msgid "Variant"
msgstr "변종"

msgid "Communicating with other scripting languages"
msgstr "다른 스크립팅 언어와 소통하기"

msgid "This is explained extensively in :ref:`doc_cross_language_scripting`."
msgstr ""
"이것은 : ref :`doc_cross_language_scripting`에 광범위하게 설명되어 있습니다."

msgid "Translation status"
msgstr "번역 상태"
