#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Import workflows"
msgstr "워크플로 가져오기"

msgid ""
"It is possible to specify a filter script in a special syntax to decide "
"which tracks from which animations should be kept."
msgstr ""
"어떤 애니메이션의 어떤 트랙을 골라낼 지 결정하기 위해 필터 스크립트를 특수한 "
"문법으로 정의할 수 있습니다."

msgid ""
"The script must start with an animation filter statement (as denoted by the "
"line beginning with an ``@``). For example, if we would like to apply "
"filters to all imported animations which have a name ending in "
"``\"_Loop\"``::"
msgstr ""
"스크립트는 항상 애니메이션 필터 문항으로 시작해야 합니다(``@`` 로 라인이 시작"
"이 표시된 바로 뒤에). 예를 들어 ``\"_Loop\"`` 로 끝나는 모든 애니메이션에 필"
"터를 적용하려면 다음과 같이 해야 합니다::"

msgid ""
"Similarly, additional patterns can be added to the same line, separated by "
"commas. Here is a modified example to additionally *include* all animations "
"with names that begin with ``\"Arm_Left\"``, but also *exclude* all "
"animations which have names ending in ``\"Attack\"``::"
msgstr ""
"비슷한 맥락에서 같은 줄에 쉼표로 구분되도록 패턴을 추가할 수도 있습니다. "
"``\"Arm_Left\"``로 시작하는 애니메이션을 모두 *포함* 시키고 ``\"Attack\"`` 으"
"로 끝나는 애니메이션은 모두 *제외* 시키는 예제는 다음과 같습니다::"

msgid ""
"Following the animation selection filter statement, we add track filtering "
"patterns to indicate which animation tracks should be kept or discarded. If "
"no track filter patterns are specified, then all tracks within the matched "
"animations will be discarded!"
msgstr ""
"애니메이션 필터 문항 다음에는 어떤 애니메이션의 트랙을 골라낼 지 결정하는 트"
"랙 필터 패턴을 추가해야 합니다. 만약 필터 패턴을 정하지 않으면 골라낸 애니메"
"이션의 모든 트랙이 그냥 버려집니다!"

msgid ""
"It's important to note that track filter statements are applied in order for "
"each track within the animation, this means that one line may include a "
"track, a later rule can still discard it. Similarly, a track excluded by an "
"early rule may then be re-included once again by a filter rule further down "
"in the filter script."
msgstr ""
"트랙 필터문이 애니메이션의 모든 개별 트랙에 적용된다는 사실을 이해하는 것이 "
"중요합니다. 이는 한 문항에 의해 트랙이 포함되었더라도 이후에 나오는 문항에 의"
"해 다시 제외될 수 있다는 뜻이니까요. 같은 맥락으로 앞의 문항에 의해 제외된 트"
"랙 역시 나중에 나오는 문항에 의해 다시 포함될 수 있습니다."

msgid ""
"For example: include all tracks in animations with names ending in "
"``\"_Loop\"``, but discard any tracks affecting a ``\"Skeleton\"`` which end "
"in ``\"Control\"``, unless they have ``\"Arm\"`` in their name::"
msgstr ""
"예를 들어서 ``\"_Loop\"`` 으로 끝나는 애니메이션의 모든 트랙을 추가한 뒤 "
"``\"Skeleton\"`` 으로 시작하는 트랙 중 ``\"Control\"`` 로 끝나는 트랙은 "
"``\"Arm\"`` 이 포함되지 않으면 제외하는 필터문은 다음과 같습니다::"

msgid ""
"In the above example, tracks like ``\"Skeleton:Leg_Control\"`` would be "
"discarded, while tracks such as ``\"Skeleton:Head\"`` or ``\"Skeleton:"
"Arm_Left_Control\"`` would be retained."
msgstr ""
"위 예제에서 ``\"Skeleton:Leg_Control\"`` 은 제외되지만 ``\"Skeleton:Head\"`` "
"나 ``\"Skeleton:Arm_Left_Control\"`` 는 포함될 것입니다."

msgid ""
"Any track filter lines that do not begin with a ``+`` or ``-`` are ignored."
msgstr "트랙 필터 중 ``+`` 또는 ``-`` 로 시작하지 않는 줄은 모두 제외됩니다."

msgid "Storage"
msgstr "보관소"

msgid ""
"By default, animations are saved as built-in. It is possible to save them to "
"a file instead. This allows adding custom tracks to the animations and "
"keeping them after a reimport."
msgstr ""
"기본적으로, 애니메이션은 내장되어 저장됩니다. 대신 파일로 애니메이션을 저장"
"할 수도 있습니다. 이렇게 하면 맞춤 트랙을 애니메이션에 추가할 수 있고, 다시 "
"가져온 후에도 이를 유지할 수 있습니다."

msgid "Optimizer"
msgstr "최적화 도구"

msgid ""
"When animations are imported, an optimizer is run, which reduces the size of "
"the animation considerably. In general, this should always be turned on "
"unless you suspect that an animation might be broken due to it being enabled."
msgstr ""
"애니메이션을 가져올 때 옵티마이저(optimizer)가 실행되어 애니메이션의 크기는 "
"상당히 줄어듭니다. 일반적으로, 옵티마이저가 활성화되어 있기 때문에 애니메이션"
"이 손상되었다고 의심되는 상황이 아니라면 항상 활성화되어 있어야 합니다."

msgid "Clips"
msgstr "클립"

msgid ""
"It is possible to specify multiple animations from a single timeline as "
"clips. For this to work, the model must have only one animation that is "
"named ``default``. To create clips, change the clip amount to something "
"greater than zero. You can then name a clip, specify which frames it starts "
"and stops on, and choose whether the animation loops or not."
msgstr ""
"클립의 형태로 하나의 타임라인에 여러 개의 애니메이션을 지정하는 것 역시 가능"
"합니다. 이를 위해서는 모델에 ``default`` 로 작명된 애니메이션은 단 하나만 존"
"재해야 합니다. 클립을 생성하려면 클립 개수를 0보다 큰 값으로 변경하면 됩니"
"다. 이후 클립의 이름, 시작 프레임과 끝 프레임 및 애니메이션의 반복 여부를 정"
"할 수 있습니다."

msgid "Scene inheritance"
msgstr "씬 상속"
