#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Exporting packs, patches, and mods"
msgstr "패키지, 패치, 모드 내보내기"

msgid "Use cases"
msgstr "사용 사례"

msgid ""
"Oftentimes one would like to add functionality to one's game after it has "
"been deployed."
msgstr "때때로 게임을 배포한 후에 기능을 추가하고 싶습니다."

msgid "Examples of this include..."
msgstr "이런 예시로는..."

msgid ""
"Downloadable Content: the ability to add features and content to one's game."
msgstr ""
"다운로드 가능한 콘텐츠(DLC): 자신의 게임에 기능과 콘텐츠를 추가하는 기능."

msgid "Patches: the ability to fix a bug that is present in a shipped product."
msgstr "패치: 배포된 제품에 존재하는 버그를 고치는 기능."

msgid "Mods: grant other people the ability to create content for one's game."
msgstr "모드: 다른 사람들에게 게임의 콘텐츠를 만드는 기능을 허가함."

msgid ""
"These tools help developers to extend their development beyond the initial "
"release."
msgstr "이 툴은 개발자가 초기 출시 단계를 넘어 확장하는 것을 도와줍니다."

msgid "Overview of PCK files"
msgstr "PCK 파일의 개요"

msgid ""
"Godot enables this via a feature called **resource packs** (PCK files, with "
"extension ``.pck``)."
msgstr ""
"Godot는 **리소스 팩**\\ 이라는 기능을 통해 이를 허용합니다 (``.pck`` 확장자명"
"을 가진 PCK 파일)."

msgid "**Advantages:**"
msgstr "**이점:**"

msgid "incremental updates/patches"
msgstr "증가하는 업데이트/패치"

msgid "offer DLCs"
msgstr "DLC 제공"

msgid "offer mod support"
msgstr "모드 지원 제공"

msgid "no source code disclosure needed for mods"
msgstr "모드에 필요한 소스 코드 공개 없음"

msgid "more modular project structure"
msgstr "더 많은 모듈형 프로젝트 구조"

msgid ""
"The first part of using them involves exporting and delivering the project "
"to players. Then, when one wants to add functionality or content later on, "
"they just deliver the updates via PCK files to the users."
msgstr ""
"파일을 사용하는 첫번째는 프로젝트를 내보내고 플레이어에게 전달하는 것입니다. "
"그 뒤, 나중에 기능이나 콘텐츠를 추가하려 한다면, 단지 PCK 파일을 통해 사용자"
"에게 업데이트를 전달하면 됩니다."

msgid "PCK files usually contain, but are not limited to:"
msgstr "PCK 파일은 보통 다음을 포함하지만, 제한은 없습니다:"

msgid "scripts"
msgstr "스크립트"

msgid "scenes"
msgstr "씬"

msgid "shaders"
msgstr "셰이더"

msgid "models"
msgstr "모델"

msgid "textures"
msgstr "텍스처"

msgid "sound effects"
msgstr "음향 효과"

msgid "music"
msgstr "음악"

msgid "any other asset suitable for import into the game"
msgstr "게임으로 가져오기 적당한 다른 애셋"

msgid ""
"The PCK files can even be an entirely different Godot project, which the "
"original game loads in at runtime."
msgstr ""
"PCK 파일은 원래 게임이 런타임에 불러오는 완전히 다른 Godot 프로젝트가 될 수"
"도 있습니다."

msgid "Generating PCK files"
msgstr "PCK 파일 생성하기"

msgid ""
"Another method would be to :ref:`export from the command line "
"<doc_command_line_tutorial_exporting>`. If the output file ends with a PCK "
"or ZIP file extension, then the export process will build that type of file "
"for the chosen platform."
msgstr ""
"다른 방법은 :ref:`명령줄에서 내보내기 "
"<doc_command_line_tutorial_exporting>`\\ 가 있습니다. 출력 파일은 PCK나 ZIP "
"파일 확장자명으로 끝나고, 그 뒤 내보내기 처리는 선택한 플랫폼에 맞는 타입의 "
"파일로 빌드할 것입니다."

msgid ""
"If one wishes to support mods for their game, they will need their users to "
"create similarly exported files. Assuming the original game expects a "
"certain structure for the PCK's resources and/or a certain interface for its "
"scripts, then either..."
msgstr ""
"누군가는 게임에 모드를 지원하고 싶을 것이고, 그러려면 사용자는 내보낸 파일과 "
"비슷한 파일을 만들어야 합니다. 기존 게임이 PCK의 리소스를 위한 특정 구조를, "
"그리고/또는 스크립트를 위한 특정 인터페이스를 예상한다고 가정한다면..."

msgid ""
"The developer must publicize documentation of these expected structures/ "
"interfaces, expect modders to install Godot Engine, and then also expect "
"those modders to conform to the documentation's defined API when building "
"mod content for the game (so that it will work). Users would then use "
"Godot's built in exporting tools to create a PCK file, as detailed above."
msgstr ""
"개발자는 예상되는 구조/ 인터페이스의 문서를 공개해야 하며, 모드 제작자들이 "
"Godot 엔진을 설치한다고 생각해야 합니다, 그리고 모드 제작자들도 게임의 모드 "
"콘텐츠를 제작할 때 문서에 정의된 API를 준수할 것입니다 (따라서 잘 될 것입니"
"다). 그런 다음 사용자는 Godot에 내장된 내보내기 툴로 위와 같은 PCK 파일을 만"
"듭니다."

msgid "Opening PCK files at runtime"
msgstr "런타임에 PCK 파일 열기"

msgid ""
"To import a PCK file, one uses the ProjectSettings singleton. The following "
"example expects a “mod.pck” file in the directory of the games executable. "
"The PCK file contains a “mod_scene.tscn” test scene in its root."
msgstr ""
"PCK 파일을 가져오려면, ProjectSettings 싱글톤을 사용합니다. 다음 예제는 게임 "
"실행 파일의 디렉토리에 “mod.pck”로 보이는 파일을 실행하는 것입니다. PCK 파일"
"의 루트에는 \"mod_scene.tscn\" 테스트 씬을 포함하고 있습니다."

msgid ""
"To opt out of this behavior, pass ``false`` as the second argument to :ref:"
"`ProjectSettings.load_resource_pack() "
"<class_ProjectSettings_method_load_resource_pack>`."
msgstr ""
"원래 파일을 덮어쓰지 못하도록 하려면 :ref:`ProjectSettings."
"load_resource_pack() <class_ProjectSettings_method_load_resource_pack>`의 두 "
"번째 인자에 ``false`` 를 넘겨주면 됩니다."

msgid ""
"For a C# project, you need to build the DLL and place it in the project "
"directory first. Then, before loading the resource pack, you need to load "
"its DLL as follows: ``Assembly.LoadFile(\"mod.dll\")``"
msgstr ""
"C# 프로젝트의 경우, 우선 DLL을 빌드해 프로젝트 디렉토리에 저장해야 합니다. "
"그 다음으로 리소스 팩을 로딩하기 전에 다음과 같이 DLL을 먼저 불러와야 합니"
"다: ``Assembly.LoadFile(\"mod.dll\")``"

msgid "Summary"
msgstr "요약"
