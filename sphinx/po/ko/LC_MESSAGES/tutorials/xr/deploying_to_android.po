#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Deploying to Android"
msgstr "Android로 배포하기"

msgid "Setup"
msgstr "설정"

msgid ""
"Most standalone headsets run on Android and OpenXR support is making its way "
"to these platforms."
msgstr ""
"대부분의 독립형 헤드셋은 Android에서 OpenXR의 플랫폼 지원에 의해 동작합니다."

msgid ""
"Before following the OpenXR-specific instructions here, you'll need to first "
"setup your system to export to Android in general, including:"
msgstr ""
"OpenXR에 관한 설명을 진행하기 전에, 일반적으로 Android 장치에 내보내기 위한 "
"시스템 설정을 우선 진행해야 합니다:"

msgid "Installing OpenJDK 17"
msgstr "OpenJDK 11 설치"

msgid "Installing Android Studio"
msgstr "Android Studio 설치"

msgid ""
"See :ref:`doc_exporting_for_android` for the full details, and return here "
"when you've finished these steps."
msgstr ""
"과정 전체에 대한 세부 사항은 :ref:`doc_exporting_for_android` 문서를 살펴 보"
"시고, 위 과정들이 끝나면 다시 돌아와 이 문서를 보시기 바랍니다."

msgid ""
"While the Mobile Vulkan renderer has many optimizations targeted at mobile "
"devices, we're still working out the kinks. It is highly advisable to use "
"the compatibility renderer (OpenGL) for the time being when targeting "
"Android based XR devices."
msgstr ""
"모바일 Vulkan 렌더러는 여러 모바일 장치에 대한 다양한 최적화를 수행하는데, 우"
"리는 아직 몇 가지 문제를 해결 중에 있습니다. 문제가 해결되기 전까지는 "
"Android 기반의 XR 장치를 위해서는 compatiblilty 렌더러(OpenGL)을 사용하는 것"
"을 강력히 추천합니다."

msgid "Gradle Android build"
msgstr "Gradle Android 빌드"

msgid ""
"Official support for the Android platform wasn't added to the OpenXR "
"specification initially resulting in various vendors creating custom loaders "
"to make OpenXR available on their headsets. While the long term expectation "
"is that all vendors will adopt the official OpenXR loader, for now these "
"loaders need to be added to your project."
msgstr ""
"OpenXR에는 원래 공식적으로는 Android 플랫폼에 대한 지원이 없기 때문에 각 벤더"
"들이 본인들의 헤드셋에서 OpenXR이 사용 가능하도록 커스텀 로더들을 만들게 되었"
"습니다. 장기적으로 보면 모든 벤더들이 공식 OpenXR 로더를 도입하겠지만, 지금"
"은 이 로더들을 프로젝트에서 설정해 주어야 합니다."

msgid ""
"In order to include the vendor-specific OpenXR loader into your project, you "
"will need to setup a gradle Android build."
msgstr ""
"프로젝트에 제조사(벤더)별 OpenXR 로더를 추가하기 위해서는 gradle Android 빌드"
"를 설정해야 합니다."

msgid "Select **Install Android Build Template...** from the **Project** menu:"
msgstr "**프로젝트** 메뉴에서 **Android 빌드 템플릿 설치...**\\ 를 선택합니다:"

msgid ""
"This will create a folder called **android** inside of your project that "
"contains all the runtime files needed on Android. You can now customize this "
"installation. Godot won't show this in the editor but you can find it with a "
"file browser."
msgstr ""
"이를 통해 프로젝트에 **android** 폴더가 생성되고, 그 안에 Android에 필요한 런"
"타임 파일들이 들어 있게 됩니다. 이제 이 설치된 파일들을 수정할 수 있습니다. "
"Godot 편집기에서 이것들을 보여주지는 않지만 파일 브라우저를 통해 살펴볼 수 있"
"습니다."

msgid ""
"You can read more about gradle builds here: :ref:`doc_android_gradle_build`."
msgstr "Gradle 빌드에 관해서는 :ref:`doc_android_gradle_build` 를 읽어보세요."

msgid "Installing the vendors plugin"
msgstr "벤더 플러그인 설치"

msgid ""
"You can find the main repository of the vendors plugin `here <https://"
"github.com/GodotVR/godot_openxr_vendors>`__."
msgstr ""
"벤더 플러그인의 메인 저장소는 `여기<https://github.com/GodotVR/"
"godot_openxr_vendors>`__ 입니다."

msgid "Creating the export presets"
msgstr "내보내기 프리셋 생성"

msgid ""
"You will need to setup a separate export preset for each device, as each "
"device will need its own loader included."
msgstr ""
"각 장치는 각자의 로더가 포함되어야 하므로 장치마다 별도의 내보내기 프리셋을 "
"설정해야 합니다."

msgid ""
"Open **Project** and select **Export..**. Click on **Add..** and select "
"**Android**. Next change the name of the export preset for the device you're "
"setting this up for, say **Meta Quest**. And enable **Use Gradle Build**. If "
"you want to use one-click deploy (described below), ensure that **Runnable** "
"is enabled."
msgstr ""
"**프로젝트**\\ 를 열고 **내보내기**\\ 를 선택한 뒤, **추가** 버튼을 누르고 "
"**Android**\\ 를 선택하세요. 그리고 대상으로 하는 장치를 위한 내보내기 프리셋"
"의 이름을 설정하세요. 예를 들어 **Meta Quest**\\ 와 같이요. 그리고 **Gradle "
"빌드 사용**\\ 을 활성화하세요. 원클릭 배포를 사용하려면 **실행 가능**\\ 이 활"
"성화되어 있는지 확인하세요."

msgid "Running on your device from the Godot editor"
msgstr "Godot 편집기에서 기기 실행하기"

msgid ""
"If you've setup your export settings as described above, and your headset is "
"connected to your computer and correctly recognized, you can launch it "
"directly from the Godot editor using :ref:`doc_one-click_deploy`:"
msgstr ""
"앞서 설명한 것처럼 내보내기를 설정했고, 헤드셋이 올바로 컴퓨터에서 인식된 상"
"태라면 Godot 편집기의 :ref:`doc_one-click_deploy`\\ 를 통해 바로 실행할 수 있"
"습니다:"

msgid ""
"For some devices on some platforms, you may need to perform some extra steps "
"in order for your device to be recognized correctly, so be sure to check the "
"developer documentation from your headset vendor."
msgstr ""
"몇몇 플랫폼이나 장치에서는 장치를 올바로 인식시키기 위해 몇 가지 과정이 더 필"
"요할 수 있습니다. 따라서 헤드셋 제조사의 개발자 문서를 잘 읽어 보시기 바랍니"
"다."

msgid ""
"For example, with the Meta Quest 2, you need to enable developer mode on the "
"headset, and if you're on Windows, you'll need to install special ADB "
"drivers. See the `official Meta Quest developer documentation <https://"
"developer.oculus.com/documentation/native/android/mobile-device-setup/>`_ "
"for more details."
msgstr ""
"예를 들어 Meta Quest 2의 경우 헤드셋에서 개발자 모드를 활성화 해야 하고, "
"Windows에서는 특정 ADB 드라이버를 설치해야 합니다. `공식 Meta Quest 개발자 문"
"서<https://developer.oculus.com/documentation/native/android/mobile-device-"
"setup/>`_\\ 에서 보다 자세한 사항을 확인하십시오."

msgid ""
"If you're having any issues with one-click deploy, check "
"the :ref:`Troubleshooting section <doc_one-click_deploy_troubleshooting>`."
msgstr ""
"원 클릭 배포에 문제가 있으면 :ref:`문제 해결 섹션 <doc_one-"
"click_deploy_troubleshooting>`\\ 을 확인하세요."
