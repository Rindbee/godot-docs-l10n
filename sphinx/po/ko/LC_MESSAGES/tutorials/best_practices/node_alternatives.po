#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "When and how to avoid using nodes for everything"
msgstr "노드를 모든 곳에서 사용하지 말아야 할 때와 이를 위한 방법"

msgid ""
"Nodes are cheap to produce, but even they have their limits. A project may "
"have tens of thousands of nodes all doing things. The more complex their "
"behavior though, the larger the strain each one adds to a project's "
"performance."
msgstr ""
"노드는 만들기 쉽지만 한계가 있습니다. 한 프로젝트에서 모든 작업을 위해 수 만 "
"개의 노드를 만들 수도 있습니다. 하지만 각각의 동작이 더 복잡해진다면, 프로젝"
"트의 성능에 부하가 더 크게 더해질 수 있습니다."

msgid ""
"Godot provides more lightweight objects for creating APIs which nodes use. "
"Be sure to keep these in mind as options when designing how you wish to "
"build your project's features."
msgstr ""
"Godot는 노드가 사용하는 API를 만들기 위한 더 가벼운 오브젝트를 제공합니다. 프"
"로젝트의 기능을 만들 때 아래와 같은 대안들을 기억해 두십시오."

msgid ""
":ref:`Object <class_Object>`: The ultimate lightweight object, the original "
"Object must use manual memory management. With that said, it isn't too "
"difficult to create one's own custom data structures, even node structures, "
"that are also lighter than the :ref:`Node <class_Node>` class."
msgstr ""
":ref:`오브젝트 <class_Object>`: 가장 가벼운 오브젝트로, 오리지널 오브젝트는 "
"수동으로 메모리 관리를 하는데 사용해야 합니다. 또한 자체 데이터 구조를 만드"
"는 것이 그리 어렵지 않으며 :ref:`노드 <class_Node>` 클래스보다 가벼운 노드 구"
"조도 만들 수 있습니다."

msgid ""
"**Example:** See the :ref:`Tree <class_Tree>` node. It supports a high level "
"of customization for a table of content with an arbitrary number of rows and "
"columns. The data that it uses to generate its visualization though is "
"actually a tree of :ref:`TreeItem <class_TreeItem>` Objects."
msgstr ""
"**예시:** :ref:`트리 <class_Tree>` 노드를 참고하세요. 이 노드는 임의 개수의 "
"행과 열이 있는 테이블을 위한 고수준 커스터마이제이션을 제공합니다. 화면에 보"
"여지는 데이터는 실제로는 :ref:`TreeItem <class_TreeItem>` 오브젝트들입니다."

msgid ""
"One should be careful when handling them. One can store an Object into a "
"variable, but these references can become invalid without warning. For "
"example, if the object's creator decides to delete it out of nowhere, this "
"would trigger an error state when one next accesses it."
msgstr ""
"오브젝트들을 다룰 때는 조심해야 합니다. 오브젝트를 변수 안에 저장할 수 있지"
"만, 오브젝트의 참조는 경고 없이 올바르지 않게 될 수 있습니다. 예를 들어 오브"
"젝트의 생성자가 오브젝트를 아무 곳에도 삭제하지 않기로 결정하면, 다음에 오브"
"젝트에 접근하려 하면 오류 상태가 발동합니다."

msgid "**Advantages:** same as the Object."
msgstr "**이점:** 오브젝트와 같음."
