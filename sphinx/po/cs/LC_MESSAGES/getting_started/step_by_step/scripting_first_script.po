#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating your first script"
msgstr "Vytvoření prvního skriptu"

msgid "Project setup"
msgstr "Příprava projektu"

msgid ""
"Please :ref:`create a new project <doc_creating_and_importing_projects>` to "
"start with a clean slate. Your project should contain one picture: the Godot "
"icon, which we often use for prototyping in the community."
msgstr ""
"Vytvořte prosím :ref:`nový projekt <doc_creating_and_importing_projects>`, "
"abychom začali s čistým štítem. Váš projekt by měl obsahovat jeden obrázek: "
"ikonu Godotu, kterou v komunitě často používáme při prototypování."

msgid ""
"Type \"Sprite2D\" in the search bar to filter nodes and double-click on "
"Sprite2D to create the node."
msgstr ""
"Do vyhledávacího pole zadejte \"Sprite2D\", čímž vyfiltujere uzly a dvojitým "
"kliknutím na Sprite2D vytvořte uzel."

msgid "Your Scene tab should now only have a Sprite2D node."
msgstr "Vaše záložka Scéna by nyní měla obsahovat pouze uzel Sprite2D."

msgid ""
"You can create Sprite2D nodes automatically by dragging and dropping images "
"on the viewport."
msgstr ""
"Uzly Sprite2D můžete také vytvářet automaticky přetažením obrázků do průzoru."

msgid ""
"Then, click and drag the icon in the viewport to center it in the game view."
msgstr "Potom přetáhněte ikonu v průzoru a vycentrujte ji v herním zobrazení."

msgid "Creating a new script"
msgstr "Vytvoření nového skriptu"

msgid ""
"C# script names need to match their class name. In this case, you should "
"name the file ``MySprite2D.cs``."
msgstr ""
"Názvy C# skriptů se musí shodovat s názvem jejich třídy. V tomto případě "
"byste soubor měli pojmenovat ``MySprite2D.cs``."

msgid ""
"The Script workspace should appear with your new ``sprite_2d.gd`` file open "
"and the following line of code:"
msgstr ""
"Měl by se objevit pracovní prostor Skript s vaším novým souborem "
"``sprite_2d.gd`` a následujícím řádkem kódu:"

msgid ""
"Every GDScript file is implicitly a class. The ``extends`` keyword defines "
"the class this script inherits or extends. In this case, it's ``Sprite2D``, "
"meaning our script will get access to all the properties and functions of "
"the Sprite2D node, including classes it extends, like ``Node2D``, "
"``CanvasItem``, and ``Node``."
msgstr ""
"Každý GDScript soubor je implicitně třídou. Klíčové slovo ``extends`` "
"(\"rozšiřuje\") definuje třídu, kterou tento skript dědí nebo rozšiřuje. V "
"tomto případě je to ``Sprite2D``, což znamená, že náš skript získá přístup "
"ke všem vlastnostem a funkcím uzlu Sprite2D, včetně tříd, které rozšiřuje "
"Sprite2D, jako ``Node2D`` (\"2D uzel\"), ``CanvasItem`` (\"předmět plátna\") "
"a ``Node`` (\"uzel\")."

msgid ""
"In GDScript, if you omit the line with the ``extends`` keyword, your class "
"will implicitly extend :ref:`RefCounted <class_RefCounted>`, which Godot "
"uses to manage your application's memory."
msgstr ""
"Pokud v GDScriptu vynecháte řádek s klíčovým slovem ``extends``, vaše třída "
"implicitně rozšíří :ref:`RefCounted <class_RefCounted>` (\"počítaný podle "
"odkazů\"), který Godot používá ke správě paměti vaší aplikace."

msgid ""
"Inherited properties include the ones you can see in the Inspector dock, "
"like our node's ``texture``."
msgstr ""
"Zděděné vlastnosti zahrnují i ty, které vidíte v doku Inspektor, jako "
"``texture``, což je textura našeho uzlu."

msgid ""
"By default, the Inspector displays a node's properties in \"Title Case\", "
"with capitalized words separated by a space. In GDScript code, these "
"properties are in \"snake_case\", which is lowercase with words separated by "
"an underscore."
msgstr ""
"Ve výchozím nastavení zobrazuje Inspektor vlastnosti uzlu s \"Velkými "
"Počátečními Písmeny\". Tedy jako slova s velkými počátečními písmeny "
"oddělená mezerou. V kódu GDScript jsou tyto vlastnosti ve \"snake_case\", "
"což jsou malá písmena se slovy oddělenými podtržítkem a anglicky."

msgid ""
"You can hover over any property's name in the Inspector to see a description "
"and its identifier in code."
msgstr ""
"Chcete-li zobrazit název vlastnosti v kódu odpovídající vlastnosti v "
"Inspektoru a její popis, můžete najet myší nad název vlastnosti v Inspektoru."

msgid "Hello, world!"
msgstr "Ahoj, světe!"

msgid ""
"Our script currently doesn't do anything. Let's make it print the text "
"\"Hello, world!\" to the Output bottom panel to get started."
msgstr ""
"Náš skript aktuálně nic nedělá. Pro začátek jej necháme vypsat text \"Ahoj, "
"světe!\" do na spodního panelu Výstup."

msgid "Add the following code to your script:"
msgstr "Přidejte do skriptu následující kód:"

msgid ""
"Let's break it down. The ``func`` keyword defines a new function named "
"``_init``. This is a special name for our class's constructor. The engine "
"calls ``_init()`` on every object or node upon creating it in memory, if you "
"define this function."
msgstr ""
"Pojďme si ho rozebrat. Klíčové slovo ``func`` definuje novou funkci s názvem "
"``_init``. To je speciální název pro konstruktor naší třídy. Pro každý "
"objekt nebo uzel, kterému definujete ``_init()``, zavolá engine tuto funkci "
"při jeho vytvoření v paměti."

msgid ""
"GDScript is an indent-based language. The tab at the start of the line that "
"says ``print()`` is necessary for the code to work. If you omit it or don't "
"indent a line correctly, the editor will highlight it in red and display the "
"following error message: \"Indented block expected\"."
msgstr ""
"GDScript je jazyk založený na odsazení. Tabulátor na začátku řádku "
"``print()`` (\"tisknout\"), je pro fungování kódu nezbytný. Pokud jej "
"vynecháte nebo řádek neodsadíte správně, editor jej zvýrazní červeně a "
"zobrazí následující chybovou zprávu: \"Expected indented block after "
"function declaration\"."

msgid ""
"Save the scene as ``sprite_2d.tscn`` if you haven't already, then "
"press :kbd:`F6` (:kbd:`Cmd + R` on macOS) to run it. Look at the **Output** "
"bottom panel that expands. It should display \"Hello, world!\"."
msgstr ""
"Pokud jste tak ještě neučinili, uložte scénu jako ``sprite_2d.tscn`` a poté "
"ji spusťte stisknutím :kbd:`F6` (:kbd:`Cmd + R` na macOS). Podívejte se do "
"spodního panelu **Výstup**, který se otevřel. Měl by zobrazit \"Hello, world!"
"\" (neboli \"Ahoj, světe!\")."

msgid ""
"Delete the ``_init()`` function, so you're only left with the line ``extends "
"Sprite2D``."
msgstr ""
"Smažte funkci ``_init()``, aby vám zůstal pouze řádek ``extends Sprite2D``."

msgid "Turning around"
msgstr "Otáčení"

msgid ""
"It's time to make our node move and rotate. To do so, we're going to add two "
"member variables to our script: the movement speed in pixels per second and "
"the angular speed in radians per second.  Add the following after the "
"``extends Sprite2D`` line."
msgstr ""
"Je načase náž uzel rozpohybovat a nechat otáčet. Abychom toho dosáhli, "
"přidáme do našeho skriptu dva proměnné členy: rychlost pohybu v pixelech za "
"sekundu a úhlovou rychlost v radiánech za sekundu. Přidejte za řádek "
"``extends Sprite2D`` následující kód."

msgid ""
"Member variables sit near the top of the script, after any \"extends\" "
"lines, but before functions. Every node instance with this script attached "
"to it will have its own copy of the ``speed`` and ``angular_speed`` "
"properties."
msgstr ""
"Proměnné členy umisťujeme do horní části skriptu; za řádkem \"extends\", ale "
"před funkcemi. Každá instance uzlu, ke které je připojen tento skript, bude "
"mít svou vlastní kopii vlastností ``speed`` (\"rychlost\") a "
"``angular_speed`` (\"úhlová rychlost\")."

msgid ""
"Angles in Godot work in radians by default, but you have built-in functions "
"and properties available if you prefer to calculate angles in degrees "
"instead."
msgstr ""
"S úhly v Godotu pracujeme zpravidla v radiánech. Pokud dáváte přednost "
"výpočtu úhlů ve stupních, máte k dispozici vestavěné funkce a vlastnosti."

msgid ""
"To move our icon, we need to update its position and rotation every frame in "
"the game loop. We can use the ``_process()`` virtual function of the "
"``Node`` class. If you define it in any class that extends the Node class, "
"like Sprite2D, Godot will call the function every frame and pass it an "
"argument named ``delta``, the time elapsed since the last frame."
msgstr ""
"Abychom naši ikonu rozhýbali, musíme v každém snímku smyčky hry aktualizovat "
"její polohu a otočení. K tomu můžeme použít virtuální funkci ``_process()`` "
"třídy ``Node``. V jakékoli třídě, která rozšiřuje třídu Node (jako to dělá i "
"Sprite2D) a definujete v ní tuto funkci ji Godot zavolá v každém snímku a "
"předá jí argument s názvem ``delta``, což je čas, který uplynul od minulého "
"snímku."

msgid ""
"Games work by rendering many images per second, each called a frame, and "
"they do so in a loop. We measure the rate at which a game produces images in "
"Frames Per Second (FPS). Most games aim for 60 FPS, although you might find "
"figures like 30 FPS on slower mobile devices or 90 to 240 for virtual "
"reality games."
msgstr ""
"Hry fungují tak, že ve smyčce vykreslují mnoho obrázků (kterým říkáme "
"snímky) za sekundu. Rychlost, jakou hra produkuje obrázky, měříme ve "
"snímcích za sekundu (frames per second, FPS). Většina her usiluje o 60 FPS, "
"i když na pomalejších mobilních zařízeních můžete najít i čísla jako 30 FPS, "
"nebo naopak 90 až 240 pro hry ve virtuální realitě."

msgid ""
"The engine and game developers do their best to update the game world and "
"render images at a constant time interval, but there are always small "
"variations in frame render times. That's why the engine provides us with "
"this delta time value, making our motion independent of our framerate."
msgstr ""
"Vývojáři enginu a her se snaží herní svět aktualizovat a vykreslovat obrázky "
"v konstantním časovém intervalu, ale v době vykreslování snímků vždy "
"existují malé odchylky. Proto nám engine poskytuje tuto hodnotu času delta, "
"díky čemuž je náš pohyb nezávislý na naší snímkové frekvenci."

msgid "At the bottom of the script, define the function:"
msgstr "Ve spodní části skriptu definujte tuto funkci:"

msgid ""
"The ``func`` keyword defines a new function. After it, we have to write the "
"function's name and arguments it takes in parentheses. A colon ends the "
"definition, and the indented blocks that follow are the function's content "
"or instructions."
msgstr ""
"Klíčové slovo ``func`` definuje novou funkci. Po něm musíme napsat název "
"funkce a do závorek její argumenty. Definici ukončuje dvojtečka a odsazené "
"řádky, které následují definici, jsou její instrukce."

msgid ""
"Notice how ``_process()``, like ``_init()``, starts with a leading "
"underscore. By convention, Godot's virtual functions, that is to say, built-"
"in functions you can override to communicate with the engine, start with an "
"underscore."
msgstr ""
"Všimněte si, že ``_process()`` a ``_init()`` začínají úvodním podtržítkem. "
"Podle konvence začínají podtržítkem všechny virtuální funkce Godotu. To jsou "
"vestavěné funkce, které můžete přepsat pro komunikaci s enginem."

msgid ""
"The line inside the function, ``rotation += angular_speed * delta``, "
"increments our sprite's rotation every frame. Here, ``rotation`` is a "
"property inherited from the class ``Node2D``, which ``Sprite2D`` extends. It "
"controls the rotation of our node and works with radians."
msgstr ""
"Řádek uvnitř funkce, ``rotation += angular_speed * delta``, zvyšuje hodnotu "
"rotace našeho spritu v každém snímku. ``rotation`` je zde vlastnost zděděná "
"z třídy ``Node2D``, kterou ``Sprite2D`` rozšiřuje. Řídí rotaci našeho uzlu a "
"pracuje s radiány."

msgid "Run the scene to see the Godot icon turn in-place."
msgstr "Spusťte scénu a uvidíte, jak se ikona Godotu otáčí na místě."

msgid ""
"In C#, notice how the ``delta`` argument taken by ``_Process()`` is a "
"``double``. We therefore need to convert it to ``float`` when we apply it to "
"the rotation."
msgstr ""
"V C# si všimněte, že argument ``delta`` funkce ``_Process()`` je typu "
"``double`` (desetinné číslo s dvojitou přesností). Když jej aplikujeme na "
"rotaci, musíme jej nejprve převést na ``float`` (desetinné číslo s "
"jednoduchou přesností)."

msgid "Moving forward"
msgstr "Pohyb vpřed"

msgid ""
"Let's now make the node move. Add the following two lines inside of the "
"``_process()`` function, ensuring the new lines are indented the same way as "
"the ``rotation += angular_speed * delta`` line before them."
msgstr ""
"Nyní náš uzlu rozpohybujeme. Do funkce ``_process()`` přidejte následující "
"dva řádky a ujistěte se, že nové řádky jsou odsazeny stejným způsobem jako "
"řádek ``rotation += angular_speed * delta`` před nimi."

msgid ""
"As we already saw, the ``var`` keyword defines a new variable. If you put it "
"at the top of the script, it defines a property of the class. Inside a "
"function, it defines a local variable: it only exists within the function's "
"scope."
msgstr ""
"Jak jsme již viděli, klíčové slovo ``var`` definuje novou proměnnou. Pokud "
"jej umístíte na začátek skriptu, definuje vlastnost třídy. Uvnitř funkce "
"definuje místní proměnnou, která existuje pouze v rámci rozsahu funkce."

msgid ""
"We define a local variable named ``velocity``, a 2D vector representing both "
"a direction and a speed. To make the node move forward, we start from the "
"Vector2 class's constant ``Vector2.UP``, a vector pointing up, and rotate it "
"by calling the Vector2 method ``rotated()``. This expression, "
"``Vector2.UP.rotated(rotation)``, is a vector pointing forward relative to "
"our icon. Multiplied by our ``speed`` property, it gives us a velocity we "
"can use to move the node forward."
msgstr ""
"Definujeme místní proměnnou s názvem ``velocity`` (\"rychlost\") jako 2D "
"vektor, který představuje směr a rychlost. Aby se uzel posunul vpřed, "
"začneme konstantou třídy Vector2 ``Vector2.UP``, což je vektor směřující "
"nahoru. Ten otočíme voláním metody Vector2 ``rotated()`` (\"otočený\"). "
"Tento výraz, ``Vector2.UP.rotated(rotation)``, je vektor směřující dopředu "
"vzhledem k naší ikoně. Vynásobeno vlastností ``speed`` nám to dává rychlost, "
"kterou můžeme použít k pohybu uzlu dopředu."

msgid ""
"We add ``velocity * delta`` to the node's ``position`` to move it. The "
"position itself is of type :ref:`Vector2 <class_Vector2>`, a built-in type "
"in Godot representing a 2D vector."
msgstr ""
"Přičteme ``velocity * delta`` k ``position`` (\"pozici\") uzlu, abychom jej "
"posunuli. Samotná pozice je typu :ref:`Vector2 <class_Vector2>`, což je "
"vestavěný typ Godotu představující 2D vektor."

msgid "Run the scene to see the Godot head run in circles."
msgstr "Spusťte scénu a uvidíte hlavu Godotu běhat v kruhu."

msgid ""
"Moving a node like that does not take into account colliding with walls or "
"the floor. In :ref:`doc_your_first_2d_game`, you will learn another approach "
"to moving objects while detecting collisions."
msgstr ""
"Takový pohyb uzlu nebere v úvahu kolize se stěnami nebo podlahou. V "
"návodu :ref:`doc_your_first_2d_game` se naučíte jiný přístup k pohybování "
"objektů se současnou detekcí kolizí."

msgid ""
"Our node currently moves by itself. In the next "
"part, :ref:`doc_scripting_player_input`, we'll use player input to control "
"it."
msgstr ""
"Náš uzel se aktuálně pohybuje sám od sebe. V příští "
"části, :ref:`doc_scripting_player_input`, použijeme k jeho ovládání hráčský "
"vstup."

msgid "Complete script"
msgstr "Kompletní skript"

msgid "Here is the complete ``sprite_2d.gd`` file for reference."
msgstr "Zde je pro vaši kontrolu celý soubor ``sprite_2d.gd``."
