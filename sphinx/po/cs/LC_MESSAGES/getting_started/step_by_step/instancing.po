#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating instances"
msgstr "Vytváření instancí"

msgid ""
"This tutorial refers to instancing scenes in the editor. To learn how to "
"instance scenes from code, see :ref:`doc_nodes_and_scene_instances`."
msgstr ""
"Tento návod pojednává o instancování scén v editoru. Chcete-li se dovědět, "
"jako instancovat scény v kódu, přečtěte "
"si :ref:`doc_nodes_and_scene_instances`."

msgid ""
"Godot's approach to *instancing* described below should not be confused with "
"hardware instancing that can be used to render large amounts of similar "
"objects quickly. See :ref:`doc_using_multimesh` instead."
msgstr ""
"Přístup Godotu k *instancování* popsaný níže by neměl být zaměňován s "
"hardwarovým instancováním, což je technika, kterou lze efektivně vykreslovat "
"velká množství podobných objektů. Hledáte-li informace k ní, přejděte "
"na :ref:`doc_using_multimesh`."

msgid ""
"In the previous part, we saw that a scene is a collection of nodes organized "
"in a tree structure, with a single node as its root. You can split your "
"project into any number of scenes. This feature helps you break down and "
"organize your game's different components."
msgstr ""
"V předchozí části jsme si ukázali, že scéna je kolekce uzlů uspořádaných do "
"stromové struktury s jedním kořenovým uzlem. Svůj projekt můžete rozdělit do "
"libovolného počtu scén, což vám pomůže lépe rozčlenit a organizovat "
"jednotlivé komponenty vaší hry."

msgid ""
"You can create as many scenes as you'd like and save them as files with the "
"``.tscn`` extension, which stands for \"text scene\". The ``label.tscn`` "
"file from the previous lesson was an example. We call those files \"Packed "
"Scenes\" as they pack information about your scene's content."
msgstr ""
"Můžete vytvořit tolik scén, kolik jen chcete, a uložit je jako soubory s "
"příponou ``.tscn`` (zkratka pro \"textová scéna\"). Jeden takový příklad "
"jsme už viděli: byl soubor to ``label.tscn`` z předchozí lekce. Takovéto "
"soubory nazýváme \"zabalené scény\", protože jsou vlastně balíčkem informací "
"o obsahu vaší scény."

msgid ""
"Here's an example of a ball. It's composed of a :ref:`RigidBody2D "
"<class_RigidBody2D>` node as its root named Ball, which allows the ball to "
"fall and bounce on walls, a :ref:`Sprite2D <class_Sprite2D>` node, and "
"a :ref:`CollisionShape2D <class_CollisionShape2D>`."
msgstr ""
"Zde máme ukázku míče. Skládá se z kořenového uzlu :ref:`RigidBody2D "
"<class_RigidBody2D>` (\"2D pevné těleso\") s názvem Míč, který mu umožňuje "
"padat a odrážet se od stěn, uzlu :ref:`Sprite2D <class_Sprite2D>` a "
"uzlu :ref:`CollisionShape2D <class_CollisionShape2D>` (\"2D kolizní tvar\")."

msgid ""
"Once you have saved a scene, it works as a blueprint: you can reproduce it "
"in other scenes as many times as you'd like. Replicating an object from a "
"template like this is called **instancing**."
msgstr ""
"Poté, co scénu uložíte, funguje jako šablona: můžete ji opakovaně vkládat do "
"dalších scén, kolikrát chcete. Tento způsob opakovaného použití objektu na "
"základě šablony se nazývá **instancování**."

msgid ""
"As we mentioned in the previous part, instanced scenes behave like a node: "
"the editor hides their content by default. When you instance the Ball, you "
"only see the Ball node. Notice also how each duplicate has a unique name."
msgstr ""
"Jak jsme zmínili v předchozí části, instance scén se chovají jako běžné "
"uzly: editor ve výchozím nastavení skryje jejich vnitřní strukturu. Když "
"tedy instancujete scénu Míč, uvidíte jen uzel s názvem Míč. Všimněte si "
"také, že každý duplikát má jedinečný název."

msgid ""
"Every instance of the Ball scene starts with the same structure and "
"properties as ``ball.tscn``. However, you can modify each independently, "
"such as changing how they bounce, how heavy they are, or any property "
"exposed by the source scene."
msgstr ""
"Každá instance scény Míč vychází ze stejné struktury a vlastností "
"definováných v souboru ``mic.tscn``. Každou z nich však můžete nezávisle "
"upravit – například změnit, jak moc se odráží, jak je těžká nebo jakoukoli "
"vlastnost, kterou zdrojová scéna nabízí."

msgid "In practice"
msgstr "Praktická ukázka"

msgid ""
"Let's use instancing in practice to see how it works in Godot. We invite you "
"to download the ball's sample project we prepared for you: "
"`instancing_starter.zip <https://github.com/godotengine/godot-docs-project-"
"starters/releases/download/latest-4.x/instancing_starter.zip>`_."
msgstr ""
"Pojďme si instancování vyzkoušet v praxi. Začněte stažením ukázkového "
"projektu míče, který jsme pro vás připravili: `instancing_starter.zip "
"<https://github.com/godotengine/godot-docs-project-starters/releases/"
"download/latest-4.x/instancing_starter.zip>`_."

msgid ""
"Extract the archive on your computer. To import it, you need the Project "
"Manager. The Project Manager is accessed by opening Godot, or if you already "
"have Godot opened, click on *Project -> Quit to Project List* (:kbd:`Ctrl + "
"Shift + Q`, :kbd:`Ctrl + Option + Cmd + Q` on macOS)"
msgstr ""
"Rozbalte archiv ve svém počítači. Abyste jej importovali, potřebujete "
"Správce projektů. Správce souborů se otevře při spuštění Godotu, případně "
"pokud máte Godot již otevřený, kliněte na *Projekt -> Ukončit do seznamu "
"projektů*. (:kbd:`Ctrl + Shift + Q`, :kbd:`Ctrl + Option + Cmd + Q` na macOS)"

msgid ""
"In the Project Manager, click the *Import* button to import the project."
msgstr ""
"Ve Správci projektů importujete projekt kliknutím na tlačítko *Import*."

msgid ""
"In the pop-up that appears navigate to the folder you extracted. Double-"
"click the ``project.godot`` file to open it."
msgstr ""
"V následujícím okně přejděte do složky, kterou jste rozbalili. Otevřete "
"soubor ``project.godot`` dvojklikem."

msgid "Finally, click the Import & Edit button."
msgstr "A nyní klikněte na tlačítko Importovat a upravit."

msgid ""
"A window notifying you that the project was last opened in an older Godot "
"version may appear, that's not an issue. Click *Ok* to open the project."
msgstr ""
"Může se objevit okno s upozorněním, že projekt byl naposledy otevřen ve "
"starší verzi Godotu. To není problém, jednoduše otevřete projekt kliknutím "
"na *OK*."

msgid ""
"The project contains two packed scenes: ``main.tscn``, containing walls "
"against which the ball collides, and ``ball.tscn``. The Main scene should "
"open automatically. If you're seeing an empty 3D scene instead of the main "
"scene, click the 2D button at the top of the screen."
msgstr ""
"V projektu jsou dvě zabalené scény: ``main.tscn``, která obsahuje stěny, od "
"kterých se míč může odrážet a ``ball.tscn``. Automaticky by se měla otevřít "
"hlavní scéna Main. Pokud místo ní vidíte prázdnou 3D scénu, klikněte na "
"tlačítko 2D v horní části obrazovky."

msgid ""
"Let's add a ball as a child of the Main node. In the Scene dock, select the "
"Main node. Then, click the link icon at the top of the scene dock. This "
"button allows you to add an instance of a scene as a child of the currently "
"selected node."
msgstr ""
"Přidejme míč jako potomka hlavního uzlu. V doku Scéna vyberte hlavní uzel "
"(Main) a poté klikněte na ikonu řetězu v horní části doku scény. Ta umožňuje "
"přidat instanci scény jako potomka aktuálně vybraného uzlu."

msgid "Double-click the ball scene to instance it."
msgstr "Dvojklikem na scénu míče ji instancujte."

msgid "The ball appears in the top-left corner of the viewport."
msgstr "Míč se zobrazí v levém horním rohu průzoru."

msgid "Click on it and drag it towards the center of the view."
msgstr "Klikněte na něj a přetáhněte ho do středu zobrazení."

msgid ""
"Play the game by pressing :kbd:`F5` (:kbd:`Cmd + B` on macOS). You should "
"see it fall."
msgstr ""
"Spusťte hru stiknutím :kbd:`F5` (:kbd:`Cmd + B` na macOS). Míč by měl začít "
"padat."

msgid ""
"Now, we want to create more instances of the Ball node. With the ball still "
"selected, press :kbd:`Ctrl + D` (:kbd:`Cmd + D` on macOS) to call the "
"duplicate command. Click and drag to move the new ball to a different "
"location."
msgstr ""
"Nyní bychom chtěli vytvořit více instancí uzlu Ball. Zatímco máte stále "
"zvolený míč, stiskněte :kbd:`Ctrl + D` (:kbd:`Cmd + D` na macOS). To je "
"příkaz pro duplikaci. Přetáhněte nový míč na jiné místo."

msgid "You can repeat this process until you have several in the scene."
msgstr "Tento postup můžete opakovat a vytvořit jich vescéně scéně několik."

msgid ""
"Play the game again. You should now see every ball fall independently from "
"one another. This is what instances do. Each is an independent reproduction "
"of a template scene."
msgstr ""
"Spusťte hru znovu. Každý míč by měl padat nezávisle na ostatních. To je to, "
"co instance dělají. Každá je nezávislou reprodukcí šablonové scény."

msgid "Editing scenes and instances"
msgstr "Úpravy scén a instancí"

msgid "There is more to instances. With this feature, you can:"
msgstr "Instance toho umožňují více. S těmito funkcemi mužete:"

msgid ""
"Change the properties of one ball without affecting the others using the "
"Inspector."
msgstr ""
"Měnit v Inspektoru vlastnosti jednoho míče bez toho, abyste ovlivnili "
"ostatní."

msgid ""
"Change the default properties of every Ball by opening the ``ball.tscn`` "
"scene and making a change to the Ball node there. Upon saving, all instances "
"of the Ball in the project will see their values update."
msgstr ""
"Změnit výchozí vlastnosti všech míčů zaráz tak, že otevřete soubor "
"``ball.tscn`` a změníte uzel Ball v ní. Jakmile změny uložíte, všem "
"instancím uzlu Ball v projektu se hodnoty aktualizují."

msgid ""
"Changing a property on an instance always overrides values from the "
"corresponding packed scene."
msgstr ""
"Změna vlastnosti v instanci vždy přepíše hodnotu z odpovídající zabalené "
"scény."

msgid ""
"Let's try this. Double-click ``ball.tscn`` in the FileSystem to open it."
msgstr ""
"Vyzkoušejme to. Dvojklikem na ``ball.tscn`` v Souborovém systému jej "
"otevřete."

msgid ""
"In the Scene dock on the left, select the Ball node. Then, in the Inspector "
"on the right, click on the PhysicsMaterial property to expand it."
msgstr ""
"V levém doku Scéna vyberte uzel Ball. Poté v Inspektoru napravo rozbalte "
"vlastnost PhysicsMaterial tím, že na ni kliknete."

msgid ""
"Set its Bounce property to ``0.5`` by clicking on the number field, typing "
"``0.5``, and pressing :kbd:`Enter`."
msgstr ""
"Nastavte jeho vlastnost Odraz na ``0.5``. To uděláte tak, že kliknete na "
"číselné pole, napíšete ``0.5`` a zmáčknete :kbd:`Enter`."

msgid ""
"Play the game by pressing :kbd:`F5` (:kbd:`Cmd + B` on macOS) and notice how "
"all balls now bounce a lot more. As the Ball scene is a template for all "
"instances, modifying it and saving causes all instances to update "
"accordingly."
msgstr ""
"Pro připomenutí, hru můžete znovu spustit stisknutím :kbd:`F5` (:kbd:`Cmd + "
"B` na macOS). Míče nyní budou skákat mnohem více. Protože scéna Ball je "
"šablonou pro všechny instance, když ji změníme, změníme odpovídajícím "
"způsobem právě i je."

msgid ""
"Let's now adjust an individual instance. Head back to the Main scene by "
"clicking on the corresponding tab above the viewport."
msgstr ""
"Nyní pozměňme samostatnou instanci. Klikněte na opdovídající záložku nad "
"průzorem a vraťte se zpět do hlavní scény Main."

msgid ""
"Select one of the instanced Ball nodes and, in the Inspector, set its "
"Gravity Scale value to ``10``."
msgstr ""
"Vyberte jeden z intancovaných uzlů Ball a v Inspektoru nastavte jeho Měřítko "
"gravitace na ``10``."

msgid "A grey \"revert\" button appears next to the adjusted property."
msgstr "Vedle pozměněné hodnoty se objeví šedé tlačítko \"vrátit zpět\"."

msgid ""
"This icon indicates you are overriding a value from the source packed scene. "
"Even if you modify the property in the original scene, the value override "
"will be preserved in the instance. Clicking the revert icon will restore the "
"property to the value in the saved scene."
msgstr ""
"Tato ikona značí, že výchozí hodnotu ze zdrojové zabalené scény přepisujete. "
"I když upravíte vlastnost v původní scéně, přepsání hodnoty bude v instanci "
"zachováno. Kliknutím na ikonu vrátit zpět se vlastnost obnoví na hodnotu v "
"uložené scéně."

msgid ""
"Rerun the game and notice how this ball now falls much faster than the "
"others."
msgstr ""
"Naposledy spusťte hru a sledujte, jak tento máč padá mnohem rychleji, než "
"ostatní."

msgid ""
"You may notice you are unable to change the values of the PhysicsMaterial of "
"the ball. This is because PhysicsMaterial is a *resource*, and needs to be "
"made unique before you can edit it in a scene that is linking to its "
"original scene. To make a resource unique for one instance, right-click on "
"the **Physics Material** property in the Inspector and click **Make Unique** "
"in the context menu."
msgstr ""
"Možná jste si všimli, že nemůžete měniv hodnoty ve PhysicsMaterialu míče. Je "
"to proto, že PhysicsMaterial je *zdroj* a předtím, než ho budete moci "
"upravovat ve scéně, která odkazuje na jeho původní scénu, je nutné ho udělat "
"tzv. unikátní. Zdroj můžete udělat unikátní pro danou instanci pravým "
"kliknutím na odpovídající vlastnost v Inspektoru (v našem případě tedy "
"**Fyzikální materiál**) a volbou **Udělat unikátní**."

msgid ""
"Resources are another essential building block of Godot games we will cover "
"in a later lesson."
msgstr ""
"Zdroje jsou další základní stavební kámen her v Godotu a blíže je probereme "
"v budoucí lekci."

msgid "Scene instances as a design language"
msgstr "Instance scén jako designový jazyk"

msgid ""
"Instances and scenes in Godot offer an excellent design language, setting "
"the engine apart from others out there. We designed Godot around this "
"concept from the ground up."
msgstr ""
"Instance a scény v Godotu nabízejí vynikající návrhový jazyk, kterým se "
"tento engine odlišuje od ostatních. Navrhli jsme jej od základů kolem tohoto "
"konceptu."

msgid ""
"We recommend dismissing architectural code patterns when making games with "
"Godot, such as Model-View-Controller (MVC) or Entity-Relationship diagrams. "
"Instead, you can start by imagining the elements players will see in your "
"game and structure your code around them."
msgstr ""
"Při vytváření her v Godotu vám doporučujeme zapomenout na architektonické "
"návrhové vzory jako Model-View-Controller (MVC) nebo Entity-Relationship "
"diagramy. Místo nich můžete začít tím, že si představíte jednotlivé prvky, "
"které hráči ve vaší hře uvidí a svůj kód strukturovat kolem nich."

msgid "For example, you could break down a shooter game like so:"
msgstr "Takto byste například mohli rozdělit střílečku:"

msgid ""
"Once you have a diagram, we recommend creating a scene for each element "
"listed in it to develop your game. You'll use instancing, either by code or "
"directly in the editor, to build your tree of scenes."
msgstr ""
"Jakmile máte připravený diagram, doporučujeme tvořit hru tak, že postupně "
"vytvoříte scénu pro každý objekt v něm uvedený. Za pomoci instancování, ať "
"už v kódu nebo přímo v editoru, tak vybudujete svůj strom scén."

msgid ""
"Programmers tend to spend a lot of time designing abstract architectures and "
"trying to fit components into it. Designing based on scenes makes "
"development faster and more straightforward, allowing you to focus on the "
"game logic itself. Because most game components map directly to a scene, "
"using a design based on scene instantiation means you need little other "
"architectural code."
msgstr ""
"Programátoři při tvorbě her často stráví spoustu času navrhováním "
"abstraktních architektur a snahou vměstnat do nich jednotlivé komponenty. "
"Navrhování na základě scén vede k rychlejšímu a přímočařejšímu vývoji, u "
"kterého se můžete soustředit na samotnou herní logiku. Protože většinu "
"herních komponent lze přímo přeložit na scénu, budete díky využití designu "
"založeném na instancování scén potřebovat jen minimum dodatečného kódu pro "
"architekturu."

msgid ""
"Here's the example of a scene diagram for an open-world game with tons of "
"assets and nested elements:"
msgstr ""
"Zde máme příklad diagramu scén pro hru s otevřeným světem, ve kterém "
"potřebujeme spoustu zdrojů a vnořených prvků:"

msgid ""
"Imagine we started by creating the room. We could make a couple of different "
"room scenes, with unique arrangements of furniture in them. Later, we could "
"make a house scene that uses multiple room instances for the interior. We "
"would create a citadel out of many instanced houses and a large terrain on "
"which we would place the citadel. Each of these would be a scene instancing "
"one or more sub-scenes."
msgstr ""
"Řekněme, že chceme začít vytvořením místnosti. Mohli bychom vytvořit několik "
"různých scén místností s rozličně rozmístěným nábytkem. Později bychom mohli "
"vytvořit scénu domu, která využívá několik instancí místnosti pro definici "
"vnitřku. Ze mnoha instancovaných domů bychom mohli vytvořit citadelu a tu "
"umístit na rozsáhlý terén. Každá z těchto scén by instancovala jednu nebo "
"více podscén."

msgid ""
"Later, we could create scenes representing guards and add them to the "
"citadel. They would be indirectly added to the overall game world."
msgstr ""
"Později bychom mohli vytvořit scény představující stráže přidat je do "
"citadely. Tím bychom je také nepřímo přidali do celého herního světa."

msgid ""
"With Godot, it's easy to iterate on your game like this, as all you need to "
"do is create and instantiate more scenes. We designed the editor to be "
"accessible to programmers, designers, and artists alike. A typical team "
"development process can involve 2D or 3D artists, level designers, game "
"designers, and animators, all working with the Godot editor."
msgstr ""
"V Godotu je takovéto postupné budování vaší hry snadné, protože vše, co "
"musíte udělat, je vytvořit a instancovat více scén. Editor jsme navrhli tak, "
"aby byl uživatelsky přívětivý pro programátory, návrháře i umělce. Typický "
"týmový vývojový proces zahrnuje 2D nebo 3D umělce, návrháře úrovní, herní "
"návrháře a animátory, kteří všichni můžou pracovat v editoru Godotu."

msgid "Summary"
msgstr "Shrnutí"

msgid ""
"Instancing, the process of producing an object from a blueprint, has many "
"handy uses. With scenes, it gives you:"
msgstr ""
"Instancování je proces, ve kterém vytváříme objekty ze šablony. Je velmi "
"užitečný. Ve spojení se scénami vám umožňuje:"

msgid "The ability to divide your game into reusable components."
msgstr "Rozdělit hru na opakovaně použitelné komponenty."

msgid "A tool to structure and encapsulate complex systems."
msgstr "Strukturovat komplexní systémy a zapouzdřit je."

msgid ""
"A language to think about your game project's structure in a natural way."
msgstr "Přirozeně přemýšlet nad vaším projektem a navrhovat jeho strukturu."
