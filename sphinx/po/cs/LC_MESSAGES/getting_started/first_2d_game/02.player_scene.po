#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating the player scene"
msgstr "Vytvoření scény hráče"

msgid ""
"The first scene will define the ``Player`` object. One of the benefits of "
"creating a separate Player scene is that we can test it separately, even "
"before we've created other parts of the game."
msgstr ""
"První scéna, kterou vytvoříme, definuje objekt ``Player``. Jednou z výhod "
"vytvoření samostatné hráčské scény je to, že ji můžeme testovat samostatně, "
"dokonce ještě předtím, než vytvoříme další části hry."

msgid "Node structure"
msgstr "Struktura uzlu"

msgid ""
"To begin, we need to choose a root node for the player object. As a general "
"rule, a scene's root node should reflect the object's desired functionality "
"- what the object *is*. Click the \"Other Node\" button and add an :ref:"
"`Area2D <class_Area2D>` node to the scene."
msgstr ""
"Nejprve musíme vybrat kořenový uzel pro objekt hráče. Obecně by kořen scény "
"měl odrážet požadovanou funkčnost objektu - to čím objekt *je*. Klikněte na "
"tlačítko \"Jiný uzel\" a do scény přidejte uzel :ref:`Area2D <class_Area2D>`."

msgid ""
"Godot will display a warning icon next to the node in the scene tree. You "
"can ignore it for now. We will address it later."
msgstr ""
"Godot zobrazí varovnou ikonu vedle uzlu ve stromu scény. Prozatím to můžete "
"ignorovat. Vyřešíme to později."

msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"Pomocí ``Area2D`` můžeme detekovat objekty, které se překrývají nebo naráží "
"do hráče. Změňte název uzlu na ``Player`` poklepáním na něj. Nyní, když jsme "
"nastavili kořen scény hráče, můžeme do něho přidat další podřízené uzly, "
"abychom mu rozšířili funkčnost a poskytli více vlastností."

msgid ""
"Save the scene. Click Scene -> Save, or press :kbd:`Ctrl + S` on Windows/"
"Linux or :kbd:`Cmd + S` on macOS."
msgstr ""
"Uložte scénu. Klikněte na Scéna -> Uložit nebo stiskněte :kbd:`Ctrl + S` v "
"systému Windows / Linux nebo :kbd:`Cmd + S` v systému MacOS."

msgid "For this project, we will be following the Godot naming conventions."
msgstr ""
"V tomto projektu budeme dodržovat Godot pravidla pro názvy identifikátorů."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Třídy (uzly) používají PascalCase, proměnné a funkce používají "
"snake_case a konstanty používají ALL_CAPS (viz :ref:"
"`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C #**: Třídy, exportované proměnné a metody používají PascalCase, soukromá "
"pole používají _camelCase, lokální proměnné a parametry používají camelCase "
"(viz :ref:`doc_c_sharp_styleguide`). Při připojování signálů buďte opatrní, "
"abyste přesně zadali názvy metod."

msgid "Sprite animation"
msgstr "Animace spritu"

msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr "Až skončíte, měla by vaše ``Player`` scéna vypadat takto:"

msgid "Make sure to save the scene again after these changes."
msgstr "Po těchto změnách nezapomeňte scénu znovu uložit."

msgid "Translation status"
msgstr "Stav překladu"
