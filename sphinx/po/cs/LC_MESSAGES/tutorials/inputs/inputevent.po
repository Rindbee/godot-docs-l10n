#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using InputEvent"
msgstr "Používání vstupních událostí (InputEvent)"

msgid "What is it?"
msgstr "Co to je?"

msgid ""
"Managing input is usually complex, no matter the OS or platform. To ease "
"this a little, a special built-in type is provided, :ref:`InputEvent "
"<class_InputEvent>`. This datatype can be configured to contain several "
"types of input events. Input events travel through the engine and can be "
"received in multiple locations, depending on the purpose."
msgstr ""
"Správa vstupu je obvykle složitá, nehledě na operační systém nebo platformu. "
"Abychom ji trochu usnadnili, je k dispozici speciální vestavěný "
"typ, :ref:`InputEvent <class_InputEvent>` (\"vstupní událost\"). Tento "
"datový typ lze nakonfigurovat tak, aby obsahoval několik typů vstupních "
"událostí. Vstupní události procházejí enginem a mohou být zpracování na více "
"místech v závislosti na účelu."

msgid "Here is a quick example, closing your game if the escape key is hit:"
msgstr "Zde je rychlý příklad - ukončení hry při stisknutí klávesy Escape:"

msgid ""
"However, it is cleaner and more flexible to use the provided :ref:`InputMap "
"<class_InputMap>` feature, which allows you to define input actions and "
"assign them different keys. This way, you can define multiple keys for the "
"same action (e.g. the keyboard escape key and the start button on a "
"gamepad). You can then more easily change this mapping in the project "
"settings without updating your code, and even build a key mapping feature on "
"top of it to allow your game to change the key mapping at runtime!"
msgstr ""
"Je nicméně čistší a flexibilnější používat dostupný objekt :ref:`InputMap "
"<class_InputMap>`, který vám umožňuje definovat vstupní akce a přiřadit jim "
"různé klávesy. Takto můžete jedné akci přiřadit více kláves (např. Escape na "
"klávesnici a tlačítko Start na gamepadu). Toto mapování je pak snazší změnit "
"v nastavení projektu, aniž byste museli aktualizovat svůj kód. Navíc nad ním "
"můžete postavit dynamické mapování, které vám umožní měnit přiřazené klávesy "
"akcím za běhu hry!"

msgid ""
"You can set up your InputMap under **Project > Project Settings > Input "
"Map** and then use those actions like this:"
msgstr ""
"InputMap můžete nastavit v okně **Projekt > Nastavení projektu > Mapa "
"vstupů** a poté použít vámi definované akce takto:"

msgid "How does it work?"
msgstr "Jak to funguje?"

msgid ""
"Every input event is originated from the user/player (though it's possible "
"to generate an InputEvent and feed them back to the engine, which is useful "
"for gestures). The DisplayServer for each platform will read events from the "
"operating system, then feed them to the root :ref:`Window <class_Window>`."
msgstr ""
"Každá vstupní událost pochází od uživatele/hráče (je nicméně možné "
"InputEvent i vygenerovat a odeslat jej zpět do enginu, což je užitečné pro "
"gesta). DisplayServer (\"okenní systém\") každé platformy načte události z "
"operačního systému a poté je pošle do kořenového okna :ref:`Window "
"<class_Window>`."

msgid ""
"The window's :ref:`Viewport <class_Viewport>` does quite a lot of stuff with "
"the received input, in order:"
msgstr ""
":ref:`Viewport <class_Viewport>` (\"průzor\") okna přijatý vstup zpracuje "
"poměrně mnoha způsovy, v tomto pořadí:"

msgid ""
"If the Viewport is embedding Windows, the Viewport tries to interpret the "
"event in its capability as a Window-Manager (e.g. for resizing or moving "
"Windows)."
msgstr ""
"Pokud jsou v průzoru vložena okna, pokusí se událost interpretovat jako "
"správce oken (např. pro změnu velikosti nebo přesunutí určitého vloženého "
"okna)."

msgid ""
"Next if an embedded Window is focused, the event is sent to that Window and "
"processed in the Windows Viewport and afterwards treated as handled. If no "
"embedded Window is focused, the event is sent to the nodes of the current "
"viewport in the following order."
msgstr ""
"Dále, pokud je zaměřeno vložené okno, je do tohoto okna událost odeslána, je "
"vyhodnocena v jeho průzoru a následně považována za zpracovanou. Pokud není "
"žádné vložené okno zeměřené, událost se odešle do uzlů aktuálního výřezu v "
"následujícím pořadí."

msgid ""
"First of all, the standard :ref:`Node._input() "
"<class_Node_private_method__input>` function will be called in any node that "
"overrides it (and hasn't disabled input processing "
"with :ref:`Node.set_process_input() <class_Node_method_set_process_input>`). "
"If any function consumes the event, it can "
"call :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>`, and the event will not spread "
"any more. This ensures that you can filter all events of interest, even "
"before the GUI. For gameplay input, :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>` is generally a better fit, "
"because it allows the GUI to intercept the events."
msgstr ""
"Za prvé, bude zavolána standardní funkce :ref:`Node._input() "
"<class_Node_private_method__input>` (\"vstup\") v každém uzlu, který ji "
"přepisuje (a nebylo mu zakázáno zpracování vstupu "
"pomocí :ref:`Node.set_process_input() <class_Node_method_set_process_input>` "
"(\"nastavit zpracování vstupu\"). Pokud nějaká funkce událost zkonzumuje, "
"může zavolat :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>` (\"označit vstup za "
"zpracovaný\") a událost se dále nebude šířit. Tím je zajištěno, že můžete "
"filtrovat všechny události ještě před GUI. Pro herní vstup je obecně "
"vhodnější použít :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>` (\"nezpracovaný vstup\"), "
"protože umožňuje GUI zachytit události dříve."

msgid ""
"Second, it will try to feed the input to the GUI, and see if any control can "
"receive it. If so, the :ref:`Control <class_Control>` will be called via the "
"virtual function :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>` and the signal \"gui_input\" will "
"be emitted (this function is re-implementable by script by inheriting from "
"it). If the control wants to \"consume\" the event, it will "
"call :ref:`Control.accept_event() <class_Control_method_accept_event>` and "
"the event will not spread any more. Use the :ref:`Control.mouse_filter "
"<class_Control_property_mouse_filter>` property to control whether "
"a :ref:`Control <class_Control>` is notified of mouse events "
"via :ref:`Control._gui_input() <class_Control_private_method__gui_input>` "
"callback, and whether these events are propagated further."
msgstr ""
"Zadruhé se pokusí předložit vstup do GUI a zjistí, zda jej může přijmout "
"nějaký ovládací prvek. Pokud ano, zavolá se odpovídající :ref:`Control "
"<class_Control>` (\"ovládací prvek\") prostřednictvím virtuální "
"funkce :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`, která vyšle signál \"gui_input\" "
"(tuto funkci lze znovu implementovat pomocí skriptu zděděním od něj). Pokud "
"chce ovládací prvek událost \"zkonzumovat\", "
"zavolá :ref:`Control.accept_event() <class_Control_method_accept_event>` "
"(\"přijmout vstup\") a událost se dále nebude šířit. Pomocí "
"vlastnosti :ref:`Control.mouse_filter <class_Control_property_mouse_filter>` "
"(\"filtr myši\") můžete ovládat, zda je :ref:`Control <class_Control>` "
"upozorňován na události myši prostřednictvím zpětného "
"volání :ref:`Control._gui_input() <class_Control_private_method__gui_input>` "
"a zda jsou tyto události dále šířeny."

msgid ""
"If so far no one consumed the event, the :ref:`Node._shortcut_input() "
"<class_Node_private_method__shortcut_input>` callback will be called if "
"overridden (and not disabled with :ref:`Node.set_process_shortcut_input() "
"<class_Node_method_set_process_shortcut_input>`). This happens only "
"for :ref:`InputEventKey <class_InputEventKey>`, :ref:`InputEventShortcut "
"<class_InputEventShortcut>` and :ref:`InputEventJoypadButton "
"<class_InputEventJoypadButton>`. If any function consumes the event, it can "
"call :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>`, and the event will not spread "
"any more. The shortcut input callback is ideal for treating events that are "
"intended as shortcuts."
msgstr ""
"Pokud dosud událost nikdo nezkonzumoval, bude zavoláno zpětné "
"volání :ref:`Node._shortcut_input() "
"<class_Node_private_method__shortcut_input>` (\"vstup zkratky\"), pokud je "
"tato funkce přepsána (a není zakázána "
"pomocí :ref:`Node.set_process_shortcut_input() "
"<class_Node_method_set_process_shortcut_input>`). To se stane pouze "
"pro :ref:`InputEventKey <class_InputEventKey>` (\"klávesová vstupní "
"událost\"), :ref:`InputEventShortcut <class_InputEventShortcut>` (\"vstupní "
"událost zkratky\") a :ref:`InputEventJoypadButton "
"<class_InputEventJoypadButton>` (\"vstupní událost tlačítka joypadu\"). "
"Pokud nějaká funkce událost zkonzumuje, může "
"zavolat :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>` a událost se dále nebude "
"šířit. Zpětné volání vstupu zkratky je ideální pro zpracování událostí, "
"které jsou zamýšleny jako zkratky."

msgid ""
"If so far no one consumed the event, the :ref:`Node._unhandled_key_input() "
"<class_Node_private_method__unhandled_key_input>` callback will be called if "
"overridden (and not disabled "
"with :ref:`Node.set_process_unhandled_key_input() "
"<class_Node_method_set_process_unhandled_key_input>`). This happens only if "
"the event is an :ref:`InputEventKey <class_InputEventKey>`. If any function "
"consumes the event, it can call :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>`, and the event will not spread "
"any more. The unhandled key input callback is ideal for key events."
msgstr ""
"Pokud dosud událost nikdo nezkonzumoval, bude zavoláno zpětné "
"volání :ref:`Node._unhandled_key_input() "
"<class_Node_private_method__unhandled_key_input>` (\"nezpracovaný klávesový "
"vstup\"), pokud je tato funkce přepsána (a není deaktivována "
"pomocí :ref:`Node.set_process_unhandled_key_input() "
"<class_Node_method_set_process_unhandled_key_input>`). To se stane pouze "
"pro :ref:`InputEventKey <class_InputEventKey>`. Pokud nějaká funkce událost "
"zkomzumuje, může zavolat :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>` a událost se dále nebude "
"šířit. Metoda zpětného volání pro nezpracovaný klávesový vstup je ideální "
"pro klávesové události."

msgid ""
"If so far no one consumed the event, the :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>` callback will be called if "
"overridden (and not disabled with :ref:`Node.set_process_unhandled_input() "
"<class_Node_method_set_process_unhandled_input>`). If any function consumes "
"the event, it can call :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>`, and the event will not spread "
"any more. The unhandled input callback is ideal for full-screen gameplay "
"events, so they are not received when a GUI is active."
msgstr ""
"Pokud dosud událost nikdo nezkonzumoval, bude zavoláno zpětné "
"volání :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>`, pokud je tato funkce přepsána "
"(a není deaktivována pomocí :ref:`Node.set_process_unhandled_input() "
"<class_Node_method_set_process_unhandled_input>`). Pokud nějaká funkce "
"událost zkonzumuje, může zavolat :ref:`Viewport.set_input_as_handled() "
"<class_Viewport_method_set_input_as_handled>` a událost se dále nebude "
"šířit. Metoda zpětného volání pro nezpracovaný vstup je ideální pro herní "
"události napříč celou obrazovkou, takže nejsou přijímány, když je aktivní "
"GUI."

msgid ""
"If no one wanted the event so far, and :ref:`Object Picking "
"<class_viewport_property_physics_object_picking>` is turned on, the event is "
"used for object picking. For the root viewport, this can also be enabled "
"in :ref:`Project Settings <class_ProjectSettings_property_physics/common/"
"enable_object_picking>`. In the case of a 3D scene if a :ref:`Camera3D "
"<class_Camera3D>` is assigned to the Viewport, a ray to the physics world "
"(in the ray direction from the click) will be cast. If this ray hits an "
"object, it will call the :ref:`CollisionObject3D._input_event() "
"<class_CollisionObject3D_private_method__input_event>` function in the "
"relevant physics object. In the case of a 2D scene, conceptually the same "
"happens with :ref:`CollisionObject2D._input_event() "
"<class_CollisionObject2D_private_method__input_event>`."
msgstr ""
"Pokud událost zatím nikdo nezpracoval a je zapnuté :ref:`Vybírání objektů "
"<class_viewport_property_physics_object_picking>`, použije se událost pro "
"výběr objektu. Pro kořenový průzor to lze také povolit v :ref:`Nastavení "
"projektu <class_ProjectSettings_property_physics/common/"
"enable_object_picking>`. V případě 3D scény, pokud je k průzoru "
"přiřazena :ref:`Camera3D <class_Camera3D>`, vrhne paprsek do fyzikálního "
"světa (v paprskovém směru od kliknutí). Pokud tento paprsek zasáhne objekt, "
"zavolá funkci :ref:`CollisionObject3D._input_event() "
"<class_CollisionObject3D_private_method__input_event>` v příslušném "
"fyzikálním objektu. V případě 2D scény nastane konceptuálně totéž "
"s :ref:`CollisionObject2D._input_event() "
"<class_CollisionObject2D_private_method__input_event>`."

msgid ""
"When sending events to its child and descendant nodes, the viewport will do "
"so, as depicted in the following graphic, in a reverse depth-first order, "
"starting with the node at the bottom of the scene tree, and ending at the "
"root node. Excluded from this process are Windows and SubViewports."
msgstr ""
"Když průzor posílá události do svého potomka a podřízených uzlů, provede to "
"od nejhlubšího uzlu nahoru, jak je znázorněno na následujícím obrázku. Začne "
"uzlem ve spodní části stromu scény a skončí v kořenovém uzlu. Z tohoto "
"procesu jsou vyloučena okna a podprůzory."

msgid ""
"This order doesn't apply to :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`, which uses a different method "
"based on event location or focused Control. GUI **mouse** events also travel "
"up the scene tree, subject to the :ref:`Control.mouse_filter "
"<class_Control_property_mouse_filter>` restrictions described above. "
"However, since these events target specific Controls, only direct ancestors "
"of the targeted Control node receive the event. GUI **keyboard and joypad** "
"events *do not* travel up the scene tree, and can only be handled by the "
"Control that received them. Otherwise, they will be propagated as non-GUI "
"events through :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>`."
msgstr ""
"Toto pořadí se nevztahuje na :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`, které používá jinou metodu "
"založenou na poloze události nebo zaměřeném ovládacím prvku. GUI události "
"**myši** se také pohybují nahoru po stromové struktuře scény, s výhradou "
"výše popsaných omezení :ref:`Control.mouse_filter "
"<class_Control_property_mouse_filter>`. Protože se však tyto události "
"zaměřují na konkrétní ovládací prvky, událost obdrží pouze přímí předci "
"cílového kontrolního uzlu. GUI události **klávesnice a joypadu** "
"*nepostupují* po stromové struktuře scény a může je zpracovat pouze ovládací "
"prvek, který je přijal. Jinak budou šířeny jako normální události "
"prostřednictvím :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>`."

msgid ""
"Since Viewports don't send events to other :ref:`SubViewports "
"<class_SubViewport>`, one of the following methods has to be used:"
msgstr ""
"Protože průzory neodesílají události do jiných :ref:`SubViewports "
"<class_SubViewport>` (\"podprůzorů\"), je třeba použít jednu z následujících "
"metod:"

msgid ""
"Use a :ref:`SubViewportContainer <class_SubViewportContainer>`, which "
"automatically sends events to its child :ref:`SubViewports "
"<class_SubViewport>` after :ref:`Node._input() "
"<class_Node_private_method__input>` or :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`."
msgstr ""
"Použijte :ref:`SubViewportContainer <class_SubViewportContainer>` "
"(\"kontejner podprůzorů\"), který automaticky odesílá události svým "
"potomkům :ref:`SubViewports <class_SubViewport>` po :ref:`Node._input() "
"<class_Node_private_method__input>` nebo :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>`."

msgid "Implement event propagation based on the individual requirements."
msgstr "Implementujte propagaci událostí na základě individuálních požadavků."

msgid ""
"In accordance with Godot's node-based design, this enables specialized child "
"nodes to handle and consume particular events, while their ancestors, and "
"ultimately the scene root, can provide more generalized behavior if needed."
msgstr ""
"V souladu s designem Godotu založeným na uzlech toto umožňuje "
"specializovaným podřízeným uzlům zpracovávat a konzumovat konkrétní "
"události, zatímco jejich předci a kořen scény mohou v případě potřeby "
"poskytovat obecnější chování."

msgid "Anatomy of an InputEvent"
msgstr "Anatomie InputEventu"

msgid ""
":ref:`InputEvent <class_InputEvent>` is just a base built-in type, it does "
"not represent anything and only contains some basic information, such as "
"event ID (which is increased for each event), device index, etc."
msgstr ""
":ref:`InputEvent <class_InputEvent>` je pouze základní vestavěný typ, nic "
"konkrétního nepředstavuje a obsahuje pouze některé základní informace, jako "
"je ID události (které se zvyšuje pro každou událost), index zařízení atd."

msgid ""
"There are several specialized types of InputEvent, described in the table "
"below:"
msgstr ""
"Existuje několik specializovaných typů InputEvent popsaných v tabulce níže:"

msgid "Event"
msgstr "Událost"

msgid "Description"
msgstr "Popis"

msgid ":ref:`InputEvent <class_InputEvent>`"
msgstr ":ref:`InputEvent <class_InputEvent>` (\"vstupní událost\")"

msgid "Empty Input Event."
msgstr "Prázdná vstupní událost."

msgid ":ref:`InputEventKey <class_InputEventKey>`"
msgstr ""
":ref:`InputEventKey <class_InputEventKey>` (\"klávesová vstupní událost\")"

msgid "Contains a keycode and Unicode value, as well as modifiers."
msgstr "Obsahuje kód klávesy, hodnotu Unicode a také modifikátory."

msgid ":ref:`InputEventMouseButton <class_InputEventMouseButton>`"
msgstr ""
":ref:`InputEventMouseButton <class_InputEventMouseButton>` (\"vstupní "
"událost tlačítka myši\")"

msgid "Contains click information, such as button, modifiers, etc."
msgstr "Obsahuje informace o kliknutí, jako je tlačítko, modifikátory atd."

msgid ":ref:`InputEventMouseMotion <class_InputEventMouseMotion>`"
msgstr ""
":ref:`InputEventMouseMotion <class_InputEventMouseMotion>` (\"vstupní "
"událost pohybu myši\")"

msgid ""
"Contains motion information, such as relative and absolute positions and "
"speed."
msgstr ""
"Obsahuje informace o pohybu, jako je relativní a absolutní poloha a rychlost."

msgid ":ref:`InputEventJoypadMotion <class_InputEventJoypadMotion>`"
msgstr ""
":ref:`InputEventJoypadMotion <class_InputEventJoypadMotion>` (\"vstupní "
"událost pohybu joypadu\")"

msgid "Contains Joystick/Joypad analog axis information."
msgstr "Obsahuje informace o analogové ose joysticku/joypadu."

msgid ":ref:`InputEventJoypadButton <class_InputEventJoypadButton>`"
msgstr ""
":ref:`InputEventJoypadButton <class_InputEventJoypadButton>` (\"vstupní "
"událost tlačítka joypadu\")"

msgid "Contains Joystick/Joypad button information."
msgstr "Obsahuje informace o tlačítku joysticku/joypadu."

msgid ":ref:`InputEventScreenTouch <class_InputEventScreenTouch>`"
msgstr ""
":ref:`InputEventScreenTouch <class_InputEventScreenTouch>` (\"vstupní "
"událost dotyku obrazovky\")"

msgid ""
"Contains multi-touch press/release information. (only available on mobile "
"devices)"
msgstr ""
"Obsahuje vícedotykové informace o stisknutí/spuštění. (k dispozici pouze na "
"mobilních zařízeních)"

msgid ":ref:`InputEventScreenDrag <class_InputEventScreenDrag>`"
msgstr ""
":ref:`InputEventScreenDrag <class_InputEventScreenDrag>` (\"vstupní událost "
"táhnutí obrazovky\")"

msgid ""
"Contains multi-touch drag information. (only available on mobile devices)"
msgstr ""
"Obsahuje informace o vícedotykovém přetažení. (k dispozici pouze na "
"mobilních zařízeních)"

msgid ":ref:`InputEventMagnifyGesture <class_InputEventMagnifyGesture>`"
msgstr ""
":ref:`InputEventMagnifyGesture <class_InputEventMagnifyGesture>` (\"vstupní "
"událost gesta přiblížení\")"

msgid "Contains a position, a factor as well as modifiers."
msgstr "Obsahuje pozici, faktor a také modifikátory."

msgid ":ref:`InputEventPanGesture <class_InputEventPanGesture>`"
msgstr ""
":ref:`InputEventPanGesture <class_InputEventPanGesture>` (\"vstupní událost "
"gesta posunu\")"

msgid "Contains a position, a delta as well as modifiers."
msgstr "Obsahuje pozici, deltu a také modifikátory."

msgid ":ref:`InputEventMIDI <class_InputEventMIDI>`"
msgstr ""
":ref:`InputEventMIDI <class_InputEventMIDI>` (\"vstupní událost MIDI\")"

msgid "Contains MIDI-related information."
msgstr "Obsahuje informace týkající se MIDI."

msgid ":ref:`InputEventShortcut <class_InputEventShortcut>`"
msgstr ""
":ref:`InputEventShortcut <class_InputEventShortcut>` (\"vstupní událost "
"zkratky\")"

msgid "Contains a shortcut."
msgstr "Obsahuje zkratku."

msgid ":ref:`InputEventAction <class_InputEventAction>`"
msgstr ""
":ref:`InputEventAction <class_InputEventAction>` (\"vstupní událost akce\")"

msgid ""
"Contains a generic action. These events are often generated by the "
"programmer as feedback. (more on this below)"
msgstr ""
"Obsahuje obecnou akci. Tyto události často generuje programátor jako zpětnou "
"vazbu. (více k tomuto níže)"

msgid "Input actions"
msgstr "Vstupní akce"

msgid ""
"Input actions are a grouping of zero or more InputEvents into a commonly "
"understood title (for example, the default \"ui_left\" action grouping both "
"joypad-left input and a keyboard's left arrow key). They are not required to "
"represent an InputEvent but are useful because they abstract various inputs "
"when programming the game logic."
msgstr ""
"Vstupní akce jsou seskupení nula nebo více InputEventů pod srozumitelný "
"název (například výchozí akce \"ui_left\" seskupuje jak vstup z levého "
"joypadu, tak klávesu levé šipky na klávesnici). Nemusí představovat "
"InputEvent, ale jsou užitečné, protože při programování herní logiky "
"abstrahují různé vstupy."

msgid "This allows for:"
msgstr "Tento přístup má několik výhod:"

msgid ""
"The same code to work on different devices with different inputs (e.g., "
"keyboard on PC, Joypad on console)."
msgstr ""
"Stejný kód funguje na různých zařízeních s různými vstupy (např. klávesnice "
"na PC, joypad na konzoli)."

msgid "Input to be reconfigured at runtime."
msgstr "Vstup lze překonfigurovat za běhu."

msgid "Actions to be triggered programmatically at runtime."
msgstr "Akce lze spouštět programově za běhu."

msgid ""
"Actions can be created from the Project Settings menu in the **Input Map** "
"tab and assigned input events."
msgstr ""
"Akce lze vytvořit a přiřadit jim vstupní události v nabídce Nastavení "
"projektu na kartě **Mapa vstupu**."

msgid ""
"Alternatively, it may be desired to supply the game back with an action from "
"the game code (a good example of this is detecting gestures). The Input "
"singleton has a method for this: :ref:`Input.parse_input_event() "
"<class_input_method_parse_input_event>`. You would normally use it like this:"
msgstr ""
"Alternativně může být žádoucí dodat do hry akci v kódu (dobrým příkladem je "
"detekce gest). Singleton Input má metodu přesně pro tento "
"případ: :ref:`Input.parse_input_event() "
"<class_input_method_parse_input_event>` (\"rozebrat vstupní událost\"). "
"Normálně byste ji použili takto:"

msgid ""
"See :ref:`doc_first_3d_game_input_actions` for a tutorial on adding input "
"actions in the project settings."
msgstr ""
"Pro návod ke přidávání vstupních akcí v nastavení projektu "
"viz :ref:`doc_first_3d_game_input_actions`."

msgid "InputMap"
msgstr "Mapa vstupů (InputMap)"

msgid ""
"Customizing and re-mapping input from code is often desired. If your whole "
"workflow depends on actions, the :ref:`InputMap <class_InputMap>` singleton "
"is ideal for reassigning or creating different actions at runtime. This "
"singleton is not saved (must be modified manually) and its state is run from "
"the project settings (project.godot). So any dynamic system of this type "
"needs to store settings in the way the programmer best sees fit."
msgstr ""
"Přizpůsobení a přemapování vstupu v kódu je často žádoucí. Pokud celý váš "
"pracovní postup závisí na akcích, je singleton :ref:`InputMap "
"<class_InputMap>` ideální pro opětovné přiřazení nebo vytváření různých akcí "
"za běhu. Tento singleton se neukládá (je nutné jej upravit ručně) a jeho "
"stav se spouští z nastavení projektu (project.godot). Každý dynamický systém "
"tohoto typu tak musí ukládat nastavení způsobem, který programátor nejlépe "
"uzná za vhodný."
