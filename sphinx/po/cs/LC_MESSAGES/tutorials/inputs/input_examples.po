#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Input examples"
msgstr "Příklady vstupů"

msgid "Introduction"
msgstr "Úvod"

msgid ""
"In this tutorial, you'll learn how to use Godot's :ref:`InputEvent "
"<class_InputEvent>` system to capture player input. There are many different "
"types of input your game may use - keyboard, gamepad, mouse, etc. - and many "
"different ways to turn those inputs into actions in your game. This document "
"will show you some of the most common scenarios, which you can use as "
"starting points for your own projects."
msgstr ""
"V tomto návodu se naučíte, jak používat systém Godotu :ref:`InputEvent "
"<class_InputEvent>` (\"vstupní událost\") k zachycení hráčského vstupu. "
"Existuje mnoho různých typů vstupů, které může ve hře používat – klávesnice, "
"gamepad, myš atd. – a mnoho různých způsobů, jak tyto vstupy proměnit v "
"herní akce. Tento dokument vám ukáže některé z nejběžnějších scénářů, které "
"můžete použít jako startovní body pro své vlastní projekty."

msgid ""
"For a detailed overview of how Godot's input event system works, "
"see :ref:`doc_inputevent`."
msgstr ""
"Pro podrobný přehled o tom, jak funguje systém vstupních událostí Godotu si "
"přečtěte :ref:`doc_inputevent`."

msgid "Events versus polling"
msgstr "Události versus dotazování"

msgid ""
"Sometimes you want your game to respond to a certain input event - pressing "
"the \"jump\" button, for example. For other situations, you might want "
"something to happen as long as a key is pressed, such as movement. In the "
"first case, you can use the ``_input()`` function, which will be called "
"whenever an input event occurs. In the second case, Godot provides "
"the :ref:`Input <class_Input>` singleton, which you can use to query the "
"state of an input."
msgstr ""
"Občas potřebujete, aby vaše hra reagovala na určitou vstupní událost – "
"například stisknutí tlačítka pro \"skok\". V jiných situacích můžete chtít, "
"aby se něco dělo, dokud je určité tlačítko stisknuté, například pohyb. V "
"prvním případě můžete použít funkci ``_input()`` (\"vstup\"), která je "
"volána vždy, když nastane vstupní událost. V druhém případě Godot poskytuje "
"singleton :ref:`Input <class_Input>`, který můžete použít pro dotazování na "
"stav vstupu."

msgid "Examples:"
msgstr "Příklady:"

msgid ""
"This gives you the flexibility to mix-and-match the type of input processing "
"you do."
msgstr ""
"Tyto možnosti vám dávají flexibilitu při kombinování druhů zpracování "
"vstupu, které provádíte."

msgid ""
"For the remainder of this tutorial, we'll focus on capturing individual "
"events in ``_input()``."
msgstr ""
"Po zbytek tohoto tutoriálu se zaměříme na zachycení jednotlivých událostí v "
"``_input()``."

msgid "Input events"
msgstr "Vstupní události"

msgid ""
"Input events are objects that inherit from :ref:`InputEvent "
"<class_InputEvent>`. Depending on the event type, the object will contain "
"specific properties related to that event. To see what events actually look "
"like, add a Node and attach the following script:"
msgstr ""
"Vstupní události jsou objekty, které dědí ze třídy :ref:`InputEvent "
"<class_InputEvent>`. V závislosti na typu události objekt obsahuje "
"specifické vlastnosti s ní související. Chcete-li se podívat, jak události "
"skutečně vypadají, vytvořte uzel a připojte k němu následující skript:"

msgid ""
"As you press keys, move the mouse, and perform other inputs, you'll see each "
"event scroll by in the output window. Here's an example of the output:"
msgstr ""
"Když stisknete klávesy, pohnete myší a vyzkoušíte další vstupy, uvidíte "
"každou událost vypsanou ve okně výstupu. Zde je příklad takového výstupu:"

msgid ""
"As you can see, the results are very different for the different types of "
"input. Key events are even printed as their key symbols. For example, let's "
"consider :ref:`InputEventMouseButton <class_InputEventMouseButton>`. It "
"inherits from the following classes:"
msgstr ""
"Jak vidíte, výsledky se pro různé druhy vstupů velmi liší. Události kláves "
"jsou dokonce vytištěny jako jejich odpovídající symboly. Uvažujme "
"například :ref:`InputEventMouseButton <class_InputEventMouseButton>` "
"(\"vstupní událost tlačítka myši\"). Ta dědí z následujících tříd:"

msgid ""
":ref:`InputEvent <class_InputEvent>` - the base class for all input events"
msgstr ""
":ref:`InputEvent <class_InputEvent>` - základní třída pro všechny vstupní "
"události"

msgid ""
":ref:`InputEventWithModifiers <class_InputEventWithModifiers>` - adds the "
"ability to check if modifiers are pressed, such as :kbd:`Shift` "
"or :kbd:`Alt`."
msgstr ""
":ref:`InputEventWithModifiers <class_InputEventWithModifiers>` (\"vstupní "
"událost s modifikátory\") - přidává možnost zkontrolovat, zda byly stisknuty "
"modifikátory, jako například :kbd:`Shift` nebo :kbd:`Alt`."

msgid ""
":ref:`InputEventMouse <class_InputEventMouse>` - adds mouse event "
"properties, such as ``position``"
msgstr ""
":ref:`InputEventMouse <class_InputEventMouse>` (\"vstupní událost myši\") . "
"přidává vlastnosti události myši, jako je její poloha ``position``"

msgid ""
":ref:`InputEventMouseButton <class_InputEventMouseButton>` - contains the "
"index of the button that was pressed, whether it was a double-click, etc."
msgstr ""
":ref:`InputEventMouseButton <class_InputEventMouseButton>` (\"vstupní "
"událost tlačítka myši\") - obsahuje index tlačítka, které bylo stisknuto, "
"zda se jednalo o dvojklik atd."

msgid ""
"It's a good idea to keep the class reference open while you're working with "
"events so you can check the event type's available properties and methods."
msgstr ""
"Při práci s událostmi je vhodné si otevřít referenční dokumentaci třídy, "
"abyste viděli dostupné vlastnosti a metody daného typu události."

msgid ""
"You can encounter errors if you try to access a property on an input type "
"that doesn't contain it - calling ``position`` on ``InputEventKey`` for "
"example. To avoid this, make sure to test the event type first:"
msgstr ""
"Pokud se pokusíte o přístup k vlastnosti na vstupním typu, který ji "
"neobsahuje, můžete narazit na chyby – například při volání ``position`` na "
"``InputEventKey``. Chcete-li tomu předejít, nejprve otestujte typ události:"

msgid "InputMap"
msgstr "Mapa vstupů (InputMap)"

msgid ""
"The :ref:`InputMap <class_InputMap>` is the most flexible way to handle a "
"variety of inputs. You use this by creating named input *actions*, to which "
"you can assign any number of input events, such as keypresses or mouse "
"clicks. To see them, and to add your own, open Project -> Project Settings "
"and select the InputMap tab:"
msgstr ""
":ref:`InputMap <class_InputMap>` je nejflexibilnější způsob, jak zpracovávat "
"různé vstupy. Použijete ji vytvořením pojmenovaných vstupních *akcí*, kterým "
"můžete přiřadit libovolný počet vstupních událostí, jako stisknutí klávesy "
"nebo kliknutí myší. Chcete-li akce zobrazit a přidat vlastní, otevřete "
"Projekt -> Nastavení projektu a vyberte záložku Mapa vstupů:"

msgid ""
"A new Godot project includes a number of default actions already defined. To "
"see them, turn on ``Show Built-in Actions`` in the InputMap dialog."
msgstr ""
"Každý nový projekt Godotu obsahuje řadu předdefinovaných výchozích akcí. "
"Chcete-li je zobrazit, zapněte v dialogovém okně Mapa vstupů možnost "
"``Zobrazit vestavěné akce``."

msgid "Capturing actions"
msgstr "Zachycení akcí"

msgid ""
"Once you've defined your actions, you can process them in your scripts using "
"``is_action_pressed()`` and ``is_action_released()`` by passing the name of "
"the action you're looking for:"
msgstr ""
"Když máde vydefinované akce, můžete je zpracovat ve skriptech pomocí "
"``is_action_pressed()`` (\"je akce stisknuta\") a ``is_action_released()`` "
"(\"je akce puštěna\"). Těm můžete předat název akce, kterou hledáte:"

msgid "Keyboard events"
msgstr "Události klávesnice"

msgid ""
"Keyboard events are captured in :ref:`InputEventKey <class_InputEventKey>`. "
"While it's recommended to use input actions instead, there may be cases "
"where you want to specifically look at key events. For this example, let's "
"check for the :kbd:`T`:"
msgstr ""
"Události klávesnice jsou zachyceny v :ref:`InputEventKey "
"<class_InputEventKey>` (\"vstupní událost klávesy\"). Přestože doporučujeme "
"používat zejména vstupní akce, mohou nastat případy, kdy se budete chtít "
"podívat na události konkrétních kláves. Pro tento příklad se podívejme "
"na :kbd:`T`:"

msgid ""
"See :ref:`@GlobalScope_Key <enum_@GlobalScope_Key>` for a list of keycode "
"constants."
msgstr ""
"Seznam konstant popisujících kódy kláves najdete v :ref:`@GlobalScope_Key "
"<enum_@GlobalScope_Key>`."

msgid ""
"Due to *keyboard ghosting*, not all key inputs may be registered at a given "
"time if you press too many keys at once. Due to their location on the "
"keyboard, certain keys are more prone to ghosting than others. Some "
"keyboards feature antighosting at a hardware level, but this feature is "
"generally not present on low-end keyboards and laptop keyboards."
msgstr ""
"Pokud stisknete příliš mnoho kláves najednou, nemusí být kvůli *ghostingu "
"klávesnice* zaregistrovány všechny klávesové vstupy. Vzhledem ke svému "
"umístění na klávesnici jsou některé klávesy náchylnější k ghostování než "
"jiné. Některé klávesnice disponují antighostingem na hardwarové úrovni, ale "
"tato funkce obecně není na levnějších a notebookových klávesnicích přítomna."

msgid ""
"As a result, it's recommended to use a default keyboard layout that is "
"designed to work well on a keyboard without antighosting. See `this Gamedev "
"Stack Exchange question <https://gamedev.stackexchange.com/a/109002>`__ for "
"more information."
msgstr ""
"Proto se doporučuje použít výchozí rozvržení klávesnice, které je navrženo "
"tak, aby dobře fungovalo na klávesnici bez antighostingu. Další informace "
"najdete v `této otázce na Gamedev Stack Exchange <https://"
"gamedev.stackexchange.com/a/109002>`__."

msgid "Keyboard modifiers"
msgstr "Klávesnicové modifikátory"

msgid ""
"Modifier properties are inherited from :ref:`InputEventWithModifiers "
"<class_InputEventWithModifiers>`. This allows you to check for modifier "
"combinations using boolean properties. Let's imagine you want one thing to "
"happen when the :kbd:`T` is pressed, but something different when "
"it's :kbd:`Shift + T`:"
msgstr ""
"Vlastnosti modifikátorů jsou zděděny z :ref:`InputEventWithModifiers "
"<class_InputEventWithModifiers>` (\"vstupní událost s modifikátory\"). To "
"vám umožňuje kontrolovat kombinace modifikátorů pomocí booleovských "
"vlastností. Řekněme, že chcete, aby se při stisknutí :kbd:`T` stala jedna "
"věc, ale při stisknutí :kbd:`Shift + T` jiná:"

msgid "Mouse events"
msgstr "Události myši"

msgid ""
"Mouse events stem from the :ref:`InputEventMouse <class_InputEventMouse>` "
"class, and are separated into two types: :ref:`InputEventMouseButton "
"<class_InputEventMouseButton>` and :ref:`InputEventMouseMotion "
"<class_InputEventMouseMotion>`. Note that this means that all mouse events "
"will contain a ``position`` property."
msgstr ""
"Události myši pocházejí z třídy :ref:`InputEventMouse "
"<class_InputEventMouse>` (\"vstupní událost myši\") a jsou rozděleny do dvou "
"typů: :ref:`InputEventMouseButton <class_InputEventMouseButton>` (\"vstupní "
"událost tlačítka myši\") a :ref:`InputEventMouseMotion "
"<class_InputEventMouseMotion>` (\"vstupní událost pohybu myši\"). Povšimněte "
"si, že všechny události myši obsahují vlastnost polohy ``position``."

msgid "Mouse buttons"
msgstr "Tlačítka myši"

msgid ""
"Capturing mouse buttons is very similar to handling key "
"events. :ref:`@GlobalScope_MouseButton <enum_@GlobalScope_MouseButton>` "
"contains a list of ``MOUSE_BUTTON_*`` constants for each possible button, "
"which will be reported in the event's ``button_index`` property. Note that "
"the scrollwheel also counts as a button - two buttons, to be precise, with "
"both ``MOUSE_BUTTON_WHEEL_UP`` and ``MOUSE_BUTTON_WHEEL_DOWN`` being "
"separate events."
msgstr ""
"Zachycení tlačítek myši je velmi podobné zpracování klávesových "
"událostí. :ref:`@GlobalScope_MouseButton <enum_@GlobalScope_MouseButton>` "
"obsahuje seznam konstant ``MOUSE_BUTTON_*`` pro každé možné tlačítko, které "
"jsou hlášeny ve vlastnosti ``button_index`` události. Kolečko myši se také "
"počítá jako tlačítko - přesněji dvě tlačítka, přičemž "
"``MOUSE_BUTTON_WHEEL_UP`` (\"kolečko nahoru\") a ``MOUSE_BUTTON_WHEEL_DOWN`` "
"(\"kolečko dolů\") jsou samostatné události."

msgid "Mouse motion"
msgstr "Pohyb myši"

msgid ""
":ref:`InputEventMouseMotion <class_InputEventMouseMotion>` events occur "
"whenever the mouse moves. You can find the move's distance with the "
"``relative`` property."
msgstr ""
"Události :ref:`InputEventMouseMotion <class_InputEventMouseMotion>` nastanou "
"při každém pohybu myši. Vzdálenost pohybu můžete zjistit pomocí vlastnosti "
"``relative``."

msgid ""
"Here's an example using mouse events to drag-and-drop a :ref:`Sprite2D "
"<class_Sprite2D>` node:"
msgstr ""
"Zde je příklad použití událostí myši k přetažení uzlu :ref:`Sprite2D "
"<class_Sprite2D>`:"

msgid "Touch events"
msgstr "Dotykové události"

msgid ""
"If you are using a touchscreen device, you can generate touch "
"events. :ref:`InputEventScreenTouch <class_InputEventScreenTouch>` is "
"equivalent to a mouse click event, and :ref:`InputEventScreenDrag "
"<class_InputEventScreenDrag>` works much the same as mouse motion."
msgstr ""
"Pokud používáte zařízení s dotykovou obrazovkou, můžete generovat dotykové "
"události. :ref:`InputEventScreenTouch <class_InputEventScreenTouch>` "
"(\"vstupní událost dotyku obrazovky\") je ekvivalentní události kliknutí "
"myší a :ref:`InputEventScreenDrag <class_InputEventScreenDrag>` (\"vstupní "
"událost tažení obrazovky\") funguje v podstatě stejně jako pohyb myši."

msgid ""
"To test your touch events on a non-touchscreen device, open Project Settings "
"and go to the \"Input Devices/Pointing\" section. Enable \"Emulate Touch "
"From Mouse\" and your project will interpret mouse clicks and motion as "
"touch events."
msgstr ""
"Chcete-li otestovat dotykové události na zařízení bez dotykové obrazovky, "
"otevřete Nastavení projektu a přejděte do části \"Vstupní zařízení/Dotyk\". "
"Povolte „Emulovat dotyk z myši“ a váš projekt bude kliknutí myší a pohyb "
"interpretovat jako dotykové události."
