# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-20 18:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating your first script"
msgstr "İlk betiğinizi yazmak"

msgid ""
"In this lesson, you will code your first script to make the Godot icon turn "
"in circles using GDScript. As we mentioned :ref:`in the introduction <toc-"
"learn-introduction>`, we assume you have programming foundations. The "
"equivalent C# code has been included in another tab for convenience."
msgstr ""
"Bu derste, GDScript ile ilk betiğinizi kodlayacak, Godot simgesini bir daire "
"üzerinde döndüreceksiniz. Daha önce :ref:`giriş <toc-learn-introduction>` "
"bölümünde bahsettiğimiz gibi, programlama konusunda artık bir temeliniz "
"olduğunu varsayıyoruz. Kolaylık için, eşdeğer C# kodu diğer sekmede "
"verilmiştir."

msgid ""
"To learn more about GDScript, its keywords, and its syntax, head to the :ref:"
"`GDScript reference<doc_gdscript>`."
msgstr ""
"GDScript hakkında, ve anahtar kelimeleri, ve söz dizimi ile ilgili daha "
"fazlasını öğrenmek için :ref:`GDScript başvuru sayfası<doc_gdscript>`'na "
"gidin."

msgid ""
"To learn more about C#, head to the :ref:`C# basics <doc_c_sharp>` page."
msgstr ""
"C# hakkında daha fazlası için :ref:`C# temelleri <doc_c_sharp>` sayfasına "
"gidin."

msgid "Project setup"
msgstr "Proje ayarları"

msgid ""
"Please :ref:`create a new project <doc_creating_and_importing_projects>` to "
"start with a clean slate. Your project should contain one picture: the Godot "
"icon, which we often use for prototyping in the community."
msgstr ""

msgid ""
"We need to create a Sprite2D node to display it in the game. In the Scene "
"dock, click the Other Node button."
msgstr ""

msgid ""
"Type \"Sprite2D\" in the search bar to filter nodes and double-click on "
"Sprite2D to create the node."
msgstr ""

msgid "Your Scene tab should now only have a Sprite2D node."
msgstr ""

msgid ""
"A Sprite2D node needs a texture to display. In the Inspector on the right, "
"you can see that the Texture property says \"[empty]\". To display the Godot "
"icon, click and drag the file ``icon.svg`` from the FileSystem dock onto the "
"Texture slot."
msgstr ""

msgid ""
"You can create Sprite2D nodes automatically by dragging and dropping images "
"on the viewport."
msgstr ""

msgid ""
"Then, click and drag the icon in the viewport to center it in the game view."
msgstr ""
"Sonra, çerçeve içindeki simgeyi tıklayıp oyun görünümünde merkeze doğru "
"sürükleyin."

msgid "Creating a new script"
msgstr "Yeni bir betik oluşturmak"

msgid ""
"To create and attach a new script to our node, right-click on Sprite2D in "
"the scene dock and select \"Attach Script\"."
msgstr ""

msgid ""
"The Attach Node Script window appears. It allows you to select the script's "
"language and file path, among other options."
msgstr ""
"Düğüm Betiği Bağla penceresi açılacak. Bu size, betiğin dilini, yolunu, ve "
"diğer bir takım seçenekleri daha seçebilme imkanı sağlar."

msgid ""
"Change the Template field from \"Node: Default\" to \"Object: Empty\" to "
"start with a clean file. Leave the other options set to their default values "
"and click the Create button to create the script."
msgstr ""

msgid ""
"C# script names need to match their class name. In this case, you should "
"name the file ``MySprite2D.cs``."
msgstr ""

msgid ""
"The Script workspace should appear with your new ``sprite_2d.gd`` file open "
"and the following line of code:"
msgstr ""

msgid ""
"Every GDScript file is implicitly a class. The ``extends`` keyword defines "
"the class this script inherits or extends. In this case, it's ``Sprite2D``, "
"meaning our script will get access to all the properties and functions of "
"the Sprite2D node, including classes it extends, like ``Node2D``, "
"``CanvasItem``, and ``Node``."
msgstr ""

msgid ""
"In GDScript, if you omit the line with the ``extends`` keyword, your class "
"will implicitly extend :ref:`RefCounted <class_RefCounted>`, which Godot "
"uses to manage your application's memory."
msgstr ""

msgid ""
"Inherited properties include the ones you can see in the Inspector dock, "
"like our node's ``texture``."
msgstr ""
"Miras alınan özelliklere Denetleyici yuvasında gördüğünüz her şey dahildir; "
"mesela düğümümüzün dokusu gibi, ``texture``."

msgid ""
"By default, the Inspector displays a node's properties in \"Title Case\", "
"with capitalized words separated by a space. In GDScript code, these "
"properties are in \"snake_case\", which is lowercase with words separated by "
"an underscore."
msgstr ""
"Varsayılan olarak, Denetleyici yuvası bir düğümün özelliklerini, kelimelerin "
"ilk harfi büyük ve boşlukla ayrıldığı \"Başlık Harf Boyu\"nda görüntüler. "
"GDScript kodu içinde bunları, kelimelerin harfleri küçük ve alt çizgi ile "
"ayrıldığı \"yılan_harf_boyu\"nda kullanırız. (Denetleyicideki filtre "
"kutusunun sağındaki simgeden bu görünümü değiştirebilir, Türkçe isimlerini "
"de görebilirsiniz)."

msgid ""
"You can hover over any property's name in the Inspector to see a description "
"and its identifier in code."
msgstr ""

msgid "Hello, world!"
msgstr "Merhaba, dünya!"

msgid ""
"Our script currently doesn't do anything. Let's make it print the text "
"\"Hello, world!\" to the Output bottom panel to get started."
msgstr ""
"Betiğimiz şu an için hiç bir işe yaramıyor. Gelin başlangıç olarak, alttaki "
"\"Çıktı\" paneline \"Merhaba, dünya!\" yazdırmasını sağlayalım."

msgid "Add the following code to your script:"
msgstr "Aşağıdaki kodu betiğin içine ekleyin:"

msgid ""
"Let's break it down. The ``func`` keyword defines a new function named "
"``_init``. This is a special name for our class's constructor. The engine "
"calls ``_init()`` on every object or node upon creating it in memory, if you "
"define this function."
msgstr ""
"Bunu biraz parçalarına ayıralım. ``func`` anahtar kelimesi ``_init`` isminde "
"yeni bir fonksiyon tanımlar. Bu isim sınıfımızın yapıcısı için özel bir "
"isimdir. Motor, bir nesneyi ya da düğümü hafızada her oluşturduğunda bu "
"``_init()`` fonksiyonunu çağırır, tabi eğer bunu tanımladıysanız."

msgid ""
"GDScript is an indent-based language. The tab at the start of the line that "
"says ``print()`` is necessary for the code to work. If you omit it or don't "
"indent a line correctly, the editor will highlight it in red and display the "
"following error message: \"Indented block expected\"."
msgstr ""
"GDScript, girinti-tabalı bir dildir. ``print()`` bulunan satırın başındaki "
"sekme kodun çalışması için gereklidir. Eğer bunu silerseniz veya bir satırı "
"doğru şekilde girintilemezseniz, düzenleyici bunu kırmızı renkte "
"vurgulayacak ve şu hata iletisini gösterecektir: \"Indented block expected\"."

msgid ""
"Save the scene as ``sprite_2d.tscn`` if you haven't already, then press :kbd:"
"`F6` (:kbd:`Cmd + R` on macOS) to run it. Look at the **Output** bottom "
"panel that expands. It should display \"Hello, world!\"."
msgstr ""

msgid ""
"Delete the ``_init()`` function, so you're only left with the line ``extends "
"Sprite2D``."
msgstr ""

msgid "Turning around"
msgstr "Etrafında dönmek"

msgid ""
"It's time to make our node move and rotate. To do so, we're going to add two "
"member variables to our script: the movement speed in pixels per second and "
"the angular speed in radians per second.  Add the following after the "
"``extends Sprite2D`` line."
msgstr ""

msgid ""
"Member variables sit near the top of the script, after any \"extends\" "
"lines, but before functions. Every node instance with this script attached "
"to it will have its own copy of the ``speed`` and ``angular_speed`` "
"properties."
msgstr ""
"Üye değişkenler betiğin en üst kısmına yakın, bütün \"extends\" "
"satırlarından sonra, ama fonksiyonlardan önce yer alırlar. Bu betiğin "
"bağlanacağı bütün düğüm örneklemeleri, ``speed`` (hız) ve ``angular_speed`` "
"(açıal hız) özelliklerinin kendilerine ait birer kopyasını alırlar."

msgid ""
"Angles in Godot work in radians by default, but you have built-in functions "
"and properties available if you prefer to calculate angles in degrees "
"instead."
msgstr ""
"Godot'da açılar varsayılan olarak radyan cinsindedir, ama eğer açıları "
"derece cinsinden hesaplamak isterseniz bunun için kullanabileceğiniz "
"yerleşik fonksiyon ve özellikler de bulunur."

msgid ""
"To move our icon, we need to update its position and rotation every frame in "
"the game loop. We can use the ``_process()`` virtual function of the "
"``Node`` class. If you define it in any class that extends the Node class, "
"like Sprite2D, Godot will call the function every frame and pass it an "
"argument named ``delta``, the time elapsed since the last frame."
msgstr ""

msgid ""
"Games work by rendering many images per second, each called a frame, and "
"they do so in a loop. We measure the rate at which a game produces images in "
"Frames Per Second (FPS). Most games aim for 60 FPS, although you might find "
"figures like 30 FPS on slower mobile devices or 90 to 240 for virtual "
"reality games."
msgstr ""
"Oyunlar her saniyede, bir kare (veya çerçeve)) ismi verilen bir çok görüntü "
"işleyerek, ve bunu bir döngüde tekrarlayarak çalışırlar. Bir oyunun görüntü "
"üretme hızını Saniyedeki Kare Sayısı (FPS, frames per second) olarak "
"ölçeriz. Oyunlar çoğunlukla 60 FPS'yi hedefler, ama yavaş mobil cihazlarda "
"30 FPS gibi düşük veya sanal gerçeklik oyunlarında 90'dan 240'a değişen "
"yüksek değerler bulabilirsiniz."

msgid ""
"The engine and game developers do their best to update the game world and "
"render images at a constant time interval, but there are always small "
"variations in frame render times. That's why the engine provides us with "
"this delta time value, making our motion independent of our framerate."
msgstr ""
"Motor ve oyungelitiricileri, oyun dünyasını güncellerken ve görüntüleri "
"işlerken sabit zaman aralıklarını kullanmak için ellerinden geleni yaparlar, "
"fakat kare işleme sürelerinde her zaman küçük farklılıklar olur. İşte bu "
"yüzden motor bize kullanabileceğimiz bir küçük zaman değeri (delta) verir, "
"hareketlerimizi kare hızından bağımsız yapmamızı sağlar."

msgid "At the bottom of the script, define the function:"
msgstr "Betiğin alt kısmına, şu fonksiyonu tanımlayın:"

msgid ""
"The ``func`` keyword defines a new function. After it, we have to write the "
"function's name and arguments it takes in parentheses. A colon ends the "
"definition, and the indented blocks that follow are the function's content "
"or instructions."
msgstr ""
"``func`` anahtar kelimesi yeni bir fonksiyon tanımlar. Arkasından "
"fonksiyonun ismini ve sonra parantez içinde alacağı girdi değişkenlerini "
"yazarız. İki nokta üstüste tanımlamayı bitirir, ve takip eden girintili "
"bloklar fonksiyonun içeriği veya talimatlarıdır."

msgid ""
"Notice how ``_process()``, like ``_init()``, starts with a leading "
"underscore. By convention, Godot's virtual functions, that is to say, built-"
"in functions you can override to communicate with the engine, start with an "
"underscore."
msgstr ""
"Dikkat ederseniz ``_process()`` fonksiyonu da ``_init()`` gibi bir alt çizgi "
"ile başlıyor. Geleneksel açıdan, Godot'nun bütün sanal fonksiyonları, tabiri "
"caiz ise, motor ile haberleşmek için üzerine yazabileceğiniz yerleşik "
"fonksiyonlar, bir alt çizgi ile başlarlar."

msgid ""
"The line inside the function, ``rotation += angular_speed * delta``, "
"increments our sprite's rotation every frame. Here, ``rotation`` is a "
"property inherited from the class ``Node2D``, which ``Sprite2D`` extends. It "
"controls the rotation of our node and works with radians."
msgstr ""

#, fuzzy
msgid ""
"In the code editor, you can Ctrl-click (Cmd-click on MacOS) on any built-in "
"property or function like ``position``, ``rotation``, or ``_process`` to "
"open the corresponding documentation in a new tab."
msgstr ""
"Düzenleyicide, ``position``, ``rotation``, veya ``_process`` gibi herhangi "
"bir dahili özellik ya da fonksiyona ctrl-tıklayarak yeni bir sekmede onunla "
"ilgili belgeyi açabilirsiniz."

msgid "Run the scene to see the Godot icon turn in-place."
msgstr "Sahneyi çalıştırın ve Godot simgesinin yerinde döndüğünü görün."

msgid ""
"In C#, notice how the ``delta`` argument taken by ``_Process()`` is a "
"``double``. We therefore need to convert it to ``float`` when we apply it to "
"the rotation."
msgstr ""

msgid "Moving forward"
msgstr "İleri gitmek"

msgid ""
"Let's now make the node move. Add the following two lines inside of the "
"``_process()`` function, ensuring the new lines are indented the same way as "
"the ``rotation += angular_speed * delta`` line before them."
msgstr ""

msgid ""
"As we already saw, the ``var`` keyword defines a new variable. If you put it "
"at the top of the script, it defines a property of the class. Inside a "
"function, it defines a local variable: it only exists within the function's "
"scope."
msgstr ""
"Daha öne görmüştük, ``var`` anahtar kelimesi yeni bir değişkeni tanımlar. "
"Eğer bunu betiğin en üsttüne koyarsanız, sınıfa ait bir özelliği tanımlar. "
"Bir fonsiyonun içinde ise, yerel bir değişkeni tanımlar: sadece fonksiyonun "
"kapsamında var olur."

msgid ""
"We define a local variable named ``velocity``, a 2D vector representing both "
"a direction and a speed. To make the node move forward, we start from the "
"Vector2 class's constant ``Vector2.UP``, a vector pointing up, and rotate it "
"by calling the Vector2 method ``rotated()``. This expression, ``Vector2.UP."
"rotated(rotation)``, is a vector pointing forward relative to our icon. "
"Multiplied by our ``speed`` property, it gives us a velocity we can use to "
"move the node forward."
msgstr ""

msgid ""
"We add ``velocity * delta`` to the node's ``position`` to move it. The "
"position itself is of type :ref:`Vector2 <class_Vector2>`, a built-in type "
"in Godot representing a 2D vector."
msgstr ""
"Hareket ettirmek için düğümün konumuna, ``position``, ``velocity * delta`` "
"ekleriz. Konumun kendisi de aslında :ref:`Vector2 <class_Vector2>` (Godot "
"içinde yerleşik 2B vektörü temsil eden) tipindedir."

msgid "Run the scene to see the Godot head run in circles."
msgstr ""
"Sahneyi çalıştırın ve Godot kafasının bir daire şeklinde hareket ettiğini "
"görün."

msgid ""
"Moving a node like that does not take into account colliding with walls or "
"the floor. In :ref:`doc_your_first_2d_game`, you will learn another approach "
"to moving objects while detecting collisions."
msgstr ""
"Bir düğümü bu şekilde hareket ettirmek, duvarlar veya yer ile çarpışmaları "
"hesaba katmaz. :ref:`doc_your_first_2d_game` bölümünde, çarpışma algılaması "
"kullanarak nesneleri hareket ettireceğiniz başka bir yaklaşımı "
"öğreneceksiniz."

msgid ""
"Our node currently moves by itself. In the next part, :ref:"
"`doc_scripting_player_input`, we'll use player input to control it."
msgstr ""

msgid "Complete script"
msgstr "Tamamlanmış betik"

msgid "Here is the complete ``sprite_2d.gd`` file for reference."
msgstr ""

msgid "Translation status"
msgstr "Çeviri durumu"
