#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Sinyal"

msgid "Using signals"
msgstr "Sinyalleri kullanmak"

msgid ""
"In this lesson, we will look at signals. They are messages that nodes emit "
"when something specific happens to them, like a button being pressed. Other "
"nodes can connect to that signal and call a function when the event occurs."
msgstr ""
"Bu derste, sinyallere göz atacağız. Bunlar düğümlerin, bir düğmenin "
"basılması gibi, onlara özel bir şeylerin oluşması durumunda yaydıkları "
"iletilerdir. Diğer düğümler, bu sinyale bağlanabilir ve bu olay oluştuğunda "
"bir fonksiyon çağırabilirler."

msgid ""
"Signals are a delegation mechanism built into Godot that allows one game "
"object to react to a change in another without them referencing one another. "
"Using signals limits `coupling <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ and keeps your code flexible."
msgstr ""
"Sinyaller, bir oyun nesnesinin bir diğerinde oluşan değişikliklere "
"birbirlerine başvuru yapmalarına gerek kalmadan tepki vermelerini sağlayan, "
"Godot'nun içine gömülü bir temsilci mekanizmasıdır. Sinyalleri kullanmak, "
"`eş bağlanma <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ 'yı sınırlandırır ve kodunuzun esnek "
"kalmasını sağlar."

msgid ""
"For example, you might have a life bar on the screen that represents the "
"player's health. When the player takes damage or uses a healing potion, you "
"want the bar to reflect the change. To do so, in Godot, you would use "
"signals."
msgstr ""
"Örneğin, ekranda oyuncunun sağlığını temsil eden bir can çubuğunuz olabilir. "
"Oyuncu hasar aldığında veya iyileştirici bir iksir kullandığında, çubuğun "
"değişikliği yansıtmasını istersiniz. Bunu yapmak için Godot'da sinyalleri "
"kullanırsınız."

msgid ""
"Like methods (:ref:`class_callable`), signals are a first-class type since "
"Godot 4.0. This means you can pass them around as method arguments directly "
"without having to pass them as strings, which allows for better "
"autocompletion and is less error-prone. See the :ref:`class_signal` class "
"reference for a list of what you can do with the Signal type directly."
msgstr ""
"Yöntemler (:ref:`class_callable`) gibi sinyaller de Godot 4.0'dan beri "
"birinci sınıf bir türdür. Bu, onları dizeler halinde iletmek zorunda "
"kalmadan doğrudan yöntem girdi değişkenleri olarak iletebileceğiniz anlamına "
"gelir, bu da daha iyi bir otomatik tamamlama sağlar ve hataya daha az "
"açıktır. Sinyal türü ile doğrudan yapabileceklerinizin listesi "
"için :ref:`class_signal` sınıf başvuru belgesine bakın."

msgid ""
"As mentioned in the introduction, signals are Godot's version of the "
"observer pattern. You can learn more about it in `Game Programming Patterns "
"<https://gameprogrammingpatterns.com/observer.html>`__."
msgstr ""
"Tanıtım kısmında bahsettiğimiz gibi, sinyaller gözlemci kalıbının Godot "
"yorumudur. Bu konuda daha fazlasını öğrenmek için şuraya bakın: `Oyun "
"Programlama Kalıpları <https://gameprogrammingpatterns.com/observer.html>`__."

msgid ""
"We will now use a signal to make our Godot icon from the previous lesson "
"(:ref:`doc_scripting_player_input`) move and stop by pressing a button."
msgstr ""
"Şimdi, önceki dersteki (:ref:`doc_scripting_player_input`) Godot simgesini "
"bir düğmeye basarak hareket ettirip durdurmak için bir sinyal kullanacağız."

msgid "For this project, we will be following the Godot naming conventions."
msgstr "Bu proje için, Godot isimlendirme geleneğini takip edeceğiz."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Sınıf (düğümler) isimleri PaskalTarzı kullanır (kelimeler "
"bitişik, ilk harfleri büyük), değişkenler ve fonksiyonlar yılan_tarzı "
"kullanır (kelimeler küçük harfli, alt çizgi ile bağlı), ve sabitler ise "
"HEPSİ_BÜYÜK tarz (büyük harfli ve alt çizgili) ile yazılır "
"(bakınız :ref:`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase "
"(See :ref:`doc_c_sharp_styleguide`). Be careful to type the method names "
"precisely when connecting signals."
msgstr ""
"**C#**: Nesneler, dışa aktarılan değişkenler ve yöntemler için PaskalTarzı "
"(kelimeler bitişik, ilk harfleri büyük), özel alanlar için _deveTarzı "
"(başında alt çizgi, kelimeler bitişik, ilk kelime hariç ilk harfleri büyük), "
"yerel değişkenler ve parametreler için ise deveTarzı (kelimeler bitişik, ilk "
"kelime hariç ilk harfler büyük) kullanın "
"(bakınız :ref:`doc_c_sharp_styleguide`). Sinyalleri bağlarken yöntem "
"isimlerini tam olarak yazdığınızdan emin olun."

msgid "Scene setup"
msgstr "Sahne ayarları"

msgid ""
"To add a button to our game, we will create a new scene which will include "
"both a :ref:`Button <class_button>` and the ``sprite_2d.tscn`` scene we "
"created in the :ref:`doc_scripting_first_script` lesson."
msgstr ""
"Oyunumuza bir düğme eklemek için, hem bir :ref:`Button <class_button>` "
"(düğme) hem de :ref:`doc_scripting_first_script` dersinde oluşturduğumuz "
"``sprite_2d.tscn`` sahnesini içeren yeni bir sahne oluşturacağız."

msgid "Create a new scene by going to the menu Scene -> New Scene."
msgstr "Sahne -> Yeni Sahne menüsüne giderek yeni bir sahne oluşturun."

msgid ""
"In the Scene dock, click the 2D Scene button. This will add a :ref:`Node2D "
"<class_Node2D>` as our root."
msgstr ""
"Sahne yuvasında 2D Sahne düğmesine tıklayın. Bu, kökümüz olarak "
"bir :ref:`Node2D <class_Node2D>` düğümü ekleyecektir."

msgid ""
"In the FileSystem dock, click and drag the ``sprite_2d.tscn`` file you saved "
"previously onto the Node2D to instantiate it."
msgstr ""
"DosyaSistemi yuvasından, daha önce kaydettiğiniz ``sprite_2d.tscn`` "
"dosyasını tıklayıp Node2D üzerine sürükleyerek örnekleyin."

msgid ""
"We want to add another node as a sibling of the Sprite2D. To do so, right-"
"click on Node2D and select Add Child Node."
msgstr ""
"Sprite2D'nin kardeşi ögesi olarak başka bir düğüm eklemek istiyoruz. Bunu "
"yapmak için Node2D'ye sağ tıklayın ve Kardeş-öge Düğümü Ekle'yi seçin."

msgid "Search for the :ref:`Button <class_button>` node and add it."
msgstr ":ref:`Button <class_button>` düğümünü arayın ve ekleyin."

msgid ""
"The node is small by default. Click and drag on the bottom-right handle of "
"the Button in the viewport to resize it."
msgstr ""
"Bu düğümün varsayılan olarak küçük boyutludur. Yeniden boyutlandırmak için, "
"çerçeve içinden düğmenin sağ-alt kısmında tutamacı tıklayın ve sürükleyin "
"(Button düğümü seçili olmalı)."

msgid ""
"If you don't see the handles, ensure the select tool is active in the "
"toolbar."
msgstr ""
"Eğer tutamaçları görmüyorsanız, araç çubuğundaki seçim aracının etkin "
"olduğundan emin olun."

msgid "Click and drag on the button itself to move it closer to the sprite."
msgstr "Düğmenin kendi üzerine tıklayın ve grafik ögenin yakınına taşıyın."

msgid ""
"You can also write a label on the Button by editing its Text property in the "
"Inspector. Enter ``Toggle motion``."
msgstr ""
"Ayrıca, Denetleyicide düğmenin metin özelliğini (Text) düzenleyerek ona bir "
"etiket yazabilirsiniz. \"Toggle motion\" yazın (hareketi aç/kapat)."

msgid "Your scene tree and viewport should look like this."
msgstr "Sahne ağacınız ve çerçeve bunun gibi görünmelidir."

msgid ""
"Save your newly created scene as ``node_2d.tscn``, if you haven't already. "
"You can then run it with :kbd:`F6` (:kbd:`Cmd + R` on macOS). At the moment, "
"the button will be visible, but nothing will happen if you press it."
msgstr ""
"Henüz yapmadıysanız, yeni oluşturduğunuz sahneyi ``node_2d.tscn`` olarak "
"kaydedin. Daha sonra :kbd:`F6` (macOS üzerinde :kbd:`Cmd + R`) ile "
"çalıştırabilirsiniz. Şu anda düğme görünür olacak, ancak bastığınızda hiçbir "
"şey olmayacaktır."

msgid "Connecting a signal in the editor"
msgstr "Bir sinyali, düzenleyici içinden bağlamak"

msgid ""
"Here, we want to connect the Button's \"pressed\" signal to our Sprite2D, "
"and we want to call a new function that will toggle its motion on and off. "
"We need to have a script attached to the Sprite2D node, which we do from the "
"previous lesson."
msgstr ""
"Burada, düğmenin \"pressed\" (basıldı) sinyalini Sprite2D'mize bağlamak ve "
"hareketini açıp kapatacak yeni bir fonksiyon çağırmak istiyoruz. Sprite2D "
"düğümüne bir önceki derste yaptığımız gibi bir betik dosyası eklememiz "
"gerekiyor."

msgid ""
"You can connect signals in the Node dock. Select the Button node and, on the "
"right side of the editor, click on the tab named \"Node\" next to the "
"Inspector."
msgstr ""
"Sinyalleri Düğüm yuvasından bağlayabilirsiniz. Button düğümünü seçin ve, "
"düzenleyicinin sağ tarafında, Denetleyicinin yanındaki \"Düğüm\" isimli "
"sekmeye tıklayın."

msgid "The dock displays a list of signals available on the selected node."
msgstr ""
"Bu yuva, seçili olan düğümde mevcut olan sinyallerin bir listesini "
"görüntüler."

msgid "Double-click the \"pressed\" signal to open the node connection window."
msgstr ""
"Düğüm bağlantı penceresini açmak için \"pressed\" sinyaline çift-tıklayın."

msgid ""
"There, you can connect the signal to the Sprite2D node. The node needs a "
"receiver method, a function that Godot will call when the Button emits the "
"signal. The editor generates one for you. By convention, we name these "
"callback methods \"_on_node_name_signal_name\". Here, it'll be "
"\"_on_button_pressed\"."
msgstr ""
"Burada, sinyali Sprite2D düğümüne bağlayabilirsiniz. Düğümün bir alıcı "
"yönteme, yani Düğme sinyali yaydığında Godot'nun çağıracağı bir fonksiyona "
"ihtiyacı vardır. Düzenleyici sizin için bir tane oluşturur. Geleneksel "
"olarak, bu geri çağrı yöntemlerini \"_on_düğüm_ismi_sinyal_ismi\" olarak "
"adlandırırız. Burada, \"_on_button_pressed\" olacak (\"on\" kelimesi "
"\"olduğunda\" anlamında, yani \"düğmeye basıldığında\")."

msgid ""
"When connecting signals via the editor's Node dock, you can use two modes. "
"The simple one only allows you to connect to nodes that have a script "
"attached to them and creates a new callback function on them."
msgstr ""
"Sinyalleri, düzenleyicinin Düğüm yuvasından bağlarken, iki farklı kip "
"kullanabilirsiniz. Basit olan, bir betik iliştirilmiş düğümlere bağlanmayı "
"sağlar, ve bunlarda yeni bir geriçağır fonksiyonu oluşturur."

msgid ""
"The advanced view lets you connect to any node and any built-in function, "
"add arguments to the callback, and set options. You can toggle the mode in "
"the window's bottom-right by clicking the Advanced button."
msgstr ""
"Gelişmiş görünüm, herhangi bir düğüme ve herhangi bir dahili fonksiyona "
"bağlanmayı, geriçağırmalara girdi değişkenleri eklemeyi, ve seçenekler "
"ayarlamayı sağlar. Bu kipi, pencerenin sağ-altındaki Gelişmiş düğmesine "
"tıklayarak açıp kapatabilirsiniz."

msgid ""
"Click the Connect button to complete the signal connection and jump to the "
"Script workspace. You should see the new method with a connection icon in "
"the left margin."
msgstr ""
"Sinyal bağlamayı tamamlamak ve Betik çalışma alanına geçmek için Bağlan "
"düğmesine tıklayın. Sol kenar boşluğunda bir bağlantı simgesi olan yeni "
"yöntemi görmelisiniz."

msgid ""
"If you click the icon, a window pops up and displays information about the "
"connection. This feature is only available when connecting nodes in the "
"editor."
msgstr ""
"Eğer simgeye tıklarsanız, bir pencere açılır ve bağlantı hakkındaki "
"bilgileri gösterir. Bu özellik sadece, düğümleri düzenleyiciden "
"bağladığınızda kullanılır olur."

msgid ""
"Let's replace the line with the ``pass`` keyword with code that'll toggle "
"the node's motion."
msgstr ""
"Hadi şimdi, ``pass`` anahtar kelimesi olan satırı, düğümün hareketini açıp "
"kapatacak olan kod ile değiştirelim."

msgid ""
"Our Sprite2D moves thanks to code in the ``_process()`` function. Godot "
"provides a method to toggle processing on and off: :ref:`Node.set_process() "
"<class_Node_method_set_process>`. Another method of the Node class, "
"``is_processing()``, returns ``true`` if idle processing is active. We can "
"use the ``not`` keyword to invert the value."
msgstr ""
"Sprite2D'miz ``_process()`` fonksiyonundaki kod sayesinde hareket eder. "
"Godot, işlemeyi açmak ve kapatmak için bir yöntem "
"sağlar: :ref:`Node.set_process() <class_Node_method_set_process>`. Node "
"sınıfının bir başka yöntemi olan ``is_processing()``, boşta işleme etkinse "
"``true`` (doğru) değerini döndürür. Değeri tersine çevirmek için ``not`` "
"(değil) anahtar sözcüğünü kullanabiliriz."

msgid ""
"This function will toggle processing and, in turn, the icon's motion on and "
"off upon pressing the button."
msgstr ""
"Bu fonksiyon işlemeyi tersine çevirecek ve, karşılığında, düğmeye basmak "
"simgenin hareketini açacak ve kapatacak."

msgid ""
"Before trying the game, we need to simplify our ``_process()`` function to "
"move the node automatically and not wait for user input. Replace it with the "
"following code, which we saw two lessons ago:"
msgstr ""
"Oyunu denemeden önce, ``_process()`` fonksiyonumuzu, düğümü otomatik hareket "
"ettirip oyuncudan giriş beklemeyecek şekilde basitleştirmeliyiz. Bunu, iki "
"ders önce gördüğümüz, aşağıdaki kod ile değiştirin:"

msgid "Your complete ``sprite_2d.gd`` code should look like the following."
msgstr "Tamamlanmış ``sprite_2d.gd`` kodunuz aşağıdaki gibi görünmelidir."

msgid "Connecting a signal via code"
msgstr "Bir sinyali, kodun içinden bağlamak"

msgid ""
"You can connect signals via code instead of using the editor. This is "
"necessary when you create nodes or instantiate scenes inside of a script."
msgstr ""
"Sinyalleri düzenleyiciyi kullanmak yerine, kodun içinden bağlayabilirsiniz. "
"Bu, düğümleri oluşturmayı veya sahneleri örneklemeyi betiğin içinden "
"yaptığınız zaman gereklidir."

msgid ""
"Let's use a different node here. Godot has a :ref:`Timer <class_Timer>` node "
"that's useful to implement skill cooldown times, weapon reloading, and more."
msgstr ""
"Burada farklı bir düğüm kullanalım. Godot'nun, yetenek soğuma süreleri, "
"silah doldurma, ve daha pek çok şeyi uyarlamak için kullanışlı olan bir "
"zamanlayıcı, :ref:`Timer <class_Timer>`, düğümü vardır."

msgid ""
"Head back to the 2D workspace. You can either click the \"2D\" text at the "
"top of the window or press :kbd:`Ctrl + F1` (:kbd:`Ctrl + Cmd + 1` on macOS)."
msgstr ""
"2B çalışma alanına geri dönün. Pencerenin üst kısmındaki \"2B\" metnine "
"tıklayabilir veya :kbd:`Ctrl + F1` (macOS'ta :kbd:`Ctrl + Cmd + 1`) "
"tuşlarına basabilirsiniz."

msgid ""
"In the Scene dock, right-click on the Sprite2D node and add a new child "
"node. Search for Timer and add the corresponding node. Your scene should now "
"look like this."
msgstr ""
"Sahne yuvasında, Sprite2D düğümüne sağ-tıklayın ve yeni bir alt-düğüm "
"ekleyin. Timer (zamanlayıcı) ögesini arayın ve ilgili düğümü ekleyin. "
"Sahneniz şimdi şöyle görünmelidir."

msgid ""
"With the Timer node selected, go to the Inspector and enable the "
"**Autostart** property."
msgstr ""
"Timer düğümü seçiliyken, Denetleyiciye gidin ve **Autostart** (otomatik "
"başlatma) özelliğini etkinleştirin."

msgid ""
"Click the script icon next to Sprite2D to jump back to the scripting "
"workspace."
msgstr ""
"Betik çalışma alanına geri dönmek için Sprite2D'nin yanındaki betik "
"simgesine tıklayın."

msgid "We need to do two operations to connect the nodes via code:"
msgstr "Düğümü kodun içinden bağlamak için iki işlem yapmamız gerekiyor:"

msgid "Get a reference to the Timer from the Sprite2D."
msgstr "Sprite2D'den Timer'a bir başvuru alın."

msgid "Call the ``connect()`` method on the Timer's \"timeout\" signal."
msgstr ""
"Timer'ın \"timeout\" (süre doldu) sinyalinde ``connect()`` yöntemini çağırın."

msgid ""
"To connect to a signal via code, you need to call the ``connect()`` method "
"of the signal you want to listen to. In this case, we want to listen to the "
"Timer's \"timeout\" signal."
msgstr ""
"Kod aracılığıyla bir sinyale bağlanmak için, dinlemek istediğiniz sinyalin "
"``connect()`` yöntemini çağırmanız gerekir. Bu durumda, Timer'ın \"timeout\" "
"sinyalini dinlemek istiyoruz."

msgid ""
"We want to connect the signal when the scene is instantiated, and we can do "
"that using the :ref:`Node._ready() <class_Node_private_method__ready>` built-"
"in function, which is called automatically by the engine when a node is "
"fully instantiated."
msgstr ""
"Sinyali sahne örneklendiği zaman bağlamak istiyoruz ve bunu, bir düğümün "
"örneklenmesi tam olarak bittiğinde motor tarafından otomatik olarak "
"çağrılan :ref:`Node._ready() <class_Node_private_method__ready>` yerleşik "
"işlevini kullanarak yapabiliriz."

msgid ""
"To get a reference to a node relative to the current one, we use the "
"method :ref:`Node.get_node() <class_Node_method_get_node>`. We can store the "
"reference in a variable."
msgstr ""
"Bir düğümün, geçerli düğüme göreceli olan bir başvurusunu almak "
"için, :ref:`Node.get_node() <class_Node_method_get_node>` (düğüm al) "
"yöntemini kullanırız. Bu başvuruyu bir değişkende saklayabiliriz."

msgid ""
"The function ``get_node()`` looks at the Sprite2D's children and gets nodes "
"by their name. For example, if you renamed the Timer node to "
"\"BlinkingTimer\" in the editor, you would have to change the call to "
"``get_node(\"BlinkingTimer\")``."
msgstr ""
"``get_node()`` işlevi Sprite2D'nin alt ögelerine bakar ve düğümleri "
"isimlerine göre alır. Örneğin, Timer düğümünü düzenleyicide "
"\"BlinkingTimer\" (yanıp sönme zamanlayıcısı) olarak yeniden "
"adlandırdıysanız, çağrıyı ``get_node(\"BlinkingTimer\")`` şeklinde "
"değiştirmeniz gerekir."

msgid ""
"We can now connect the Timer to the Sprite2D in the ``_ready()`` function."
msgstr ""
"Şimdi Timer'ı Sprite2D'ye ``_ready()`` fonksiyonunu içinden bağlayabiliriz."

msgid ""
"The line reads like so: we connect the Timer's \"timeout\" signal to the "
"node to which the script is attached. When the Timer emits ``timeout``, we "
"want to call the function ``_on_timer_timeout()``, that we need to define. "
"Let's add it at the bottom of our script and use it to toggle our sprite's "
"visibility."
msgstr ""
"Satır şu şekilde okunuyor: Timer'ın \"timeout\" sinyalini betiğin bağlı "
"olduğu düğüme bağlarız. Timer ``timeout`` sinyali yaydığında, tanımlamış "
"olmamız gereken ``_on_timer_timeout()`` fonksiyonunu çağırmak istiyoruz. "
"Bunu kodumuzun en altına ekleyelim ve grafik ögemizin görünürlüğünü "
"değiştirmek için kullanalım."

msgid ""
"By convention, we name these callback methods in GDScript as "
"\"_on_node_name_signal_name\" and in C# as \"OnNodeNameSignalName\". Here, "
"it'll be \"_on_timer_timeout\" for GDScript and OnTimerTimeout() for C#."
msgstr ""
"Geleneksel olarak, bu geri çağırma yöntemlerini GDScript'te "
"\"_on_düğüm_ismi_sinyal_ismi\" ve C#'ta \"OnDüğümİsmiSinyalİsmi\" olarak "
"adlandırırız. Burada, GDScript için \"_on_timer_timeout\" ve C# için "
"OnTimerTimeout() olacaktır."

msgid ""
"The ``visible`` property is a boolean that controls the visibility of our "
"node. The line ``visible = not visible`` toggles the value. If ``visible`` "
"is ``true``, it becomes ``false``, and vice-versa."
msgstr ""
"``visible`` (görünür) özelliği, düğümümüzün görünürlüğünü denetleyen bir "
"mantıksal değişkendir. ``visible = not visible`` satırı, görünürlük değerini "
"tersine çevirir. Eğer ``visible`` değeri ``true`` ise, o zaman ``false`` "
"olarak değişir, ya da tam tersi."

msgid ""
"If you run the Node2D scene now, you will see that the sprite blinks on and "
"off, at one second intervals."
msgstr ""
"Node2D sahnesini şimdi çalıştırırsanız, grafik ögenin bir saniye aralıklarla "
"yanıp söndüğünü göreceksiniz."

msgid "Complete script"
msgstr "Tamamlanmış betik"

msgid ""
"That's it for our little moving and blinking Godot icon demo! Here is the "
"complete ``sprite_2d.gd`` file for reference."
msgstr ""
"Bu minik hareketli ve yanıp sönen Godot simgesi demomuz için bu kadar! İşte "
"başvuru için ``sprite_2d.gd`` dosyasının tamamı."

msgid "Custom signals"
msgstr "Özel sinyaller"

msgid ""
"This section is a reference on how to define and use your own signals, and "
"does not build upon the project created in previous lessons."
msgstr ""
"Bu bölüm, kendi sinyallerinizi nasıl tanımlayacağınız ve kullanacağınız "
"hakkında bir başvurudur, ve önceki derslerdeki projelerin üzerinden devam "
"etmez."

msgid ""
"You can define custom signals in a script. Say, for example, that you want "
"to show a game over screen when the player's health reaches zero. To do so, "
"you could define a signal named \"died\" or \"health_depleted\" when their "
"health reaches 0."
msgstr ""
"Bir betiğin içinde kendi özel sinyallerinizi tanımlayabilirsiniz. Diyelim "
"ki, örneğin, oyuncunun sağlığı sıfıra düşünce bir oyun bitti ekranı "
"göstermek istiyorsunuz. Bunu yapmak için, oyuncunun canı 0 olunca yayılacak "
"\"died\" (öldü) veya \"health_depleted\" (can bitti) isminde bir sinyal "
"tanımlayabilirdiniz."

msgid ""
"As signals represent events that just occurred, we generally use an action "
"verb in the past tense in their names."
msgstr ""
"Bir sinyal, az önce meydana gelen bir olayı temsil eder, ve isimlerinde "
"genellikle geçmiş zamanlı bir eylem yüklemi kullanırız."

msgid ""
"Your signals work the same way as built-in ones: they appear in the Node tab "
"and you can connect to them like any other."
msgstr ""
"Sizin sinyaliniz de aynı yerleşik olanlar gibi çalışır: Düğüm sekmesinde "
"görünürler ve bunlara aynı diğerleri gibi bağlanabilirsiniz."

msgid "To emit a signal in your scripts, call ``emit()`` on the signal."
msgstr ""
"Kodlarınızda bir sinyal yaymak için, sinyal üzerinde ``emit()`` işlevini "
"çağırın."

msgid ""
"A signal can optionally declare one or more arguments. Specify the argument "
"names between parentheses:"
msgstr ""
"Bir sinyal, isteğe bağlı olarak bir ya da daha çok girdi değişkeni "
"tanımlayabilir. Girdi değişkenlerinin isimlerini parantez içerisinde "
"belirtin:"

msgid ""
"The signal arguments show up in the editor's node dock, and Godot can use "
"them to generate callback functions for you. However, you can still emit any "
"number of arguments when you emit signals. So it's up to you to emit the "
"correct values."
msgstr ""
"Sinyal girdi değişkenleri düzenleyicinin düğüm yuvasında görünür olur, ve "
"Godot bunları sizin için geri-çağırma fonksiyonları üretmek için "
"kullanabilir. Fakat, sinyal yayınlarken herhangi bir sayıda girdi değişkeni "
"de yayabilirsiniz. Yani, doğru değerleri yayınlamak sizin "
"sorumluluğunuzdadır."

msgid ""
"To emit values along with the signal, add them as extra arguments to the "
"``emit()`` function:"
msgstr ""
"Sinyalle birlikte değerler de yaymak için, bunları ``emit()`` işlevine "
"fazladan girdi değişkenleri olarak ekleyin:"

msgid "Summary"
msgstr "Özet"

msgid ""
"Any node in Godot emits signals when something specific happens to them, "
"like a button being pressed. Other nodes can connect to individual signals "
"and react to selected events."
msgstr ""
"Godot'daki herhangi bir düğüm, bir düğmeye basılması gibi, bunlara özel bir "
"şeyler oluştuğunda sinyaller yayınlayabilir. Diğer düğümler tekil sinyallere "
"bağlanabilir ve seçili olaylara tepki verebilirler."

msgid ""
"Signals have many uses. With them, you can react to a node entering or "
"exiting the game world, to a collision, to a character entering or leaving "
"an area, to an element of the interface changing size, and much more."
msgstr ""
"Sinyallerin birçok kullanımı vardır. Bunları kullanarak, bir düğümün oyun "
"dünyasına girmesine veya çıkmasına, bir karakterin bir alana girmesine veya "
"oradan ayrılmasına, arayüzdeki bir ögenin boyutunun değişmesine, ve daha pek "
"çok şeye tepki verebilirsiniz."

msgid ""
"For example, an :ref:`Area2D <class_Area2D>` representing a coin emits a "
"``body_entered`` signal whenever the player's physics body enters its "
"collision shape, allowing you to know when the player collected it."
msgstr ""
"Örneğin, bir parayı temsil eden :ref:`Area2D <class_Area2D>` için, oyuncunun "
"fizik cismi bunun çarpışma şeklinin içerisine girerse, bir ``body_entered`` "
"(cisim girdi) sinyali yayınlanır, böylece oyuncunun bu parayı topladığını "
"öğrenmenizi sağlar."

msgid ""
"In the next section, :ref:`doc_your_first_2d_game`, you'll create a complete "
"2D game and put everything you learned so far into practice."
msgstr ""
"Sonraki bölümde, :ref:`doc_your_first_2d_game`, bütün bir 2B oyunu "
"oluşturacak, ve şimdiye kadar öğrendiğiniz her şeyi uygulamaya dökeceksiniz."
