#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Moving the player with code"
msgstr "Oyuncuyu kod yoluyla hareket ettirmek"

msgid ""
"It's time to code! We're going to use the input actions we created in the "
"last part to move the character."
msgstr ""
"Kodlama vakti! En son bölümde oyuncuyu hareket ettirmek için belirlediğimiz "
"girdi eylemlerini kullanacağız."

msgid "For this project, we will be following the Godot naming conventions."
msgstr "Bu proje için, Godot isimlendirme geleneğini takip edeceğiz."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Sınıf (düğümler) isimleri PaskalTarzı kullanır (kelimeler "
"bitişik, ilk harfleri büyük), değişkenler ve fonksiyonlar yılan_tarzı "
"kullanır (kelimeler küçük harfli, alt çizgi ile bağlı), ve sabitler ise "
"HEPSİ_BÜYÜK tarz (büyük harfli ve alt çizgili) ile yazılır "
"(bakınız :ref:`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase "
"(See :ref:`doc_c_sharp_styleguide`). Be careful to type the method names "
"precisely when connecting signals."
msgstr ""
"**C#**: Nesneler, dışa aktarılan değişkenler ve yöntemler için PaskalTarzı "
"(kelimeler bitişik, ilk harfleri büyük), özel alanlar için _deveTarzı "
"(başında alt çizgi, kelimeler bitişik, ilk kelime hariç ilk harfleri büyük), "
"yerel değişkenler ve parametreler için ise deveTarzı (kelimeler bitişik, ilk "
"kelime hariç ilk harfler büyük) kullanın "
"(bakınız :ref:`doc_c_sharp_styleguide`). Sinyalleri bağlarken yöntem "
"isimlerini tam olarak yazdığınızdan emin olun."

msgid ""
"Right-click the ``Player`` node and select *Attach Script* to add a new "
"script to it. In the popup, set the *Template* to *Empty* before pressing "
"the *Create* button. We set it to *Empty* because we want to write our own "
"code for player movement."
msgstr ""
"``Player`` düğümüne sağ tıklayın ve yeni bir betik dosyası eklemek için "
"*Betik Ekle* ögesini seçin. Açılır pencerede, *Oluştur* düğmesine basmadan "
"önce *Şablon* ögesini *Boş* olarak ayarlayın. *Boş* olarak ayarlıyoruz çünkü "
"oyuncu hareketi için kendi kodumuzu yazmak istiyoruz."

msgid "|image0|"
msgstr "|image0|"

msgid "image0"
msgstr "image0"

msgid ""
"Let's start with the class's properties. We're going to define a movement "
"speed, a fall acceleration representing gravity, and a velocity we'll use to "
"move the character."
msgstr ""
"Sınıfın özellikleriyle başlayalım. Bir hareket hızı, yerçekimini temsil eden "
"bir düşme ivmesi ve karakteri hareket ettirmek için kullanacağımız bir hız "
"tanımlayacağız."

msgid ""
"These are common properties for a moving body. The ``target_velocity`` is "
"a :ref:`3D vector <class_Vector3>` combining a speed with a direction. Here, "
"we define it as a property because we want to update and reuse its value "
"across frames."
msgstr ""
"Bunlar hareketli bir cisim için ortak özelliklerdir. Hedef hız vektörü, "
"``target_velocity`` bir :ref:`3B vektör <class_vector3>` olup, hızı bir "
"yönle birleştirir. Burada bunu bir özellik olarak tanımlıyoruz, çünkü bunun "
"değerini kareler arasında güncellemeyi ve yeniden kullanmayı istiyoruz."

msgid ""
"The values are quite different from 2D code because distances are in meters. "
"While in 2D, a thousand units (pixels) may only correspond to half of your "
"screen's width, in 3D, it's a kilometer."
msgstr ""
"Değerler 2B koddan oldukça farklıdır çünkü mesafeler metre cinsindendir. "
"2B'de bin birim (piksel) ekran genişliğinizin yalnızca yarısına karşılık "
"gelebilirken, 3B'de bu bir kilometredir."

msgid ""
"Let's code the movement. We start by calculating the input direction vector "
"using the global ``Input`` object, in ``_physics_process()``."
msgstr ""
"Hadi şimdi hareketi kodlayalım. ``_physics_process()`` içinde genel "
"``Input`` nesnesini kullanıp girdi yön vektörünü hesaplayarak başlıyoruz."

msgid ""
"To learn more about the difference between ``_process()`` and "
"``_physics_process()``, see :ref:`doc_idle_and_physics_processing`."
msgstr ""
"``_process()`` ve ``_physics_process()`` arasındaki fark hakkında daha fazla "
"bilgi edinmek için :ref:`doc_idle_and_physics_processing` bölümüne bakınız."

msgid ""
"We start by initializing a ``direction`` variable to ``Vector3.ZERO``. Then, "
"we check if the player is pressing one or more of the ``move_*`` inputs and "
"update the vector's ``x`` and ``z`` components accordingly. These correspond "
"to the ground plane's axes."
msgstr ""
"Bir yön değişkeni olan ``direction`` için ``Vector3.ZERO`` ilk değerini "
"vererek başlıyoruz. Ardından, oyuncunun ``move_*`` girişlerinden birine veya "
"daha fazlasına basıp basmadığını kontrol ediyoruz ve vektörün ``x`` ve ``z`` "
"bileşenlerini buna göre güncelliyoruz. Bunlar yer düzleminin eksenlerine "
"karşılık gelir."

msgid ""
"These four conditions give us eight possibilities and eight possible "
"directions."
msgstr "Bu dört koşul bize sekiz olasılık ve sekiz olası yön verir."

msgid ""
"In case the player presses, say, both W and D simultaneously, the vector "
"will have a length of about ``1.4``. But if they press a single key, it will "
"have a length of ``1``. We want the vector's length to be consistent, and "
"not move faster diagonally. To do so, we can call its ``normalized()`` "
"method."
msgstr ""
"Oyuncunun örneğin W ve D tuşlarına aynı anda basması durumunda, vektörün "
"uzunluğu yaklaşık ``1,4`` olacaktır. Ancak tek bir tuşa basarlarsa, ``1`` "
"uzunluğa sahip olacaktır. Vektörün uzunluğunun tutarlı olmasını ve çapraz "
"yönde daha hızlı hareket etmemesini istiyoruz. Bunu yapmak için, "
"``normalized()`` yöntemini çağırabiliriz."

msgid ""
"Here, we only normalize the vector if the direction has a length greater "
"than zero, which means the player is pressing a direction key."
msgstr ""
"Burada, vektörü yalnızca yön sıfırdan büyük bir uzunluğa sahipse "
"normalleştiririz, bu da oyuncunun bir yön tuşuna bastığı anlamına gelir."

msgid ""
"We compute the direction the ``$Pivot`` is looking by creating a :ref:`Basis "
"<class_Basis>` that looks in the ``direction`` direction."
msgstr ""
"``$Pivot`` un baktığı yönü, ``direction`` yönüne bakan bir :ref:`Basis "
"<class_Basis>` oluşturarak hesaplarız."

msgid ""
"Then, we update the velocity. We have to calculate the ground velocity and "
"the fall speed separately. Be sure to go back one tab so the lines are "
"inside the ``_physics_process()`` function but outside the condition we just "
"wrote above."
msgstr ""
"Ardından hızı güncelleriz. Yer hızını ve düşme hızını ayrı ayrı hesaplamamız "
"gerekir. Satırların ``_physics_process()`` fonksiyonunun içinde ancak "
"yukarıda yazdığımız koşulun dışında kalacak şekilde girintide bir sekme "
"dışarı çıktığınızdan emin olun."

msgid ""
"The ``CharacterBody3D.is_on_floor()`` function returns ``true`` if the body "
"collided with the floor in this frame. That's why we apply gravity to the "
"``Player`` only while it is in the air."
msgstr ""
"``CharacterBody3D.is_on_floor()`` işlevi, cisim bu kare süresinde zemine "
"çarparsa ``true`` değerini döndürür. Bu yüzden ``Player`` a sadece "
"havadayken yerçekimi uygularız."

msgid ""
"For the vertical velocity, we subtract the fall acceleration multiplied by "
"the delta time every frame. This line of code will cause our character to "
"fall in every frame, as long as it is not on or colliding with the floor."
msgstr ""
"Dikey hız için, her karede düşme ivmesi ile delta zamanının çarpımını "
"çıkarırız. Bu kod satırı, zeminde olmadığı veya zemine çarpmadığı sürece "
"karakterimizin her karede düşmesine neden olacaktır."

msgid ""
"The physics engine can only detect interactions with walls, the floor, or "
"other bodies during a given frame if movement and collisions happen. We will "
"use this property later to code the jump."
msgstr ""
"Fizik motoru, verilen bir kare süresinde duvarlarla, zeminle veya diğer "
"cisimlerle etkileşimleri yalnızca hareket ve çarpışmalar meydana gelirse "
"algılayabilir. İleride bu özelliği atlamayı kodlamak için kullanacağız."

msgid ""
"On the last line, we call ``CharacterBody3D.move_and_slide()`` which is a "
"powerful method of the ``CharacterBody3D`` class that allows you to move a "
"character smoothly. If it hits a wall midway through a motion, the engine "
"will try to smooth it out for you. It uses the *velocity* value native to "
"the :ref:`CharacterBody3D <class_CharacterBody3D>`"
msgstr ""
"Son satırda, ``CharacterBody3D`` sınıfının güçlü bir yöntemi olan ve bir "
"karakteri akıcı bir şekilde hareket ettirmenizi sağlayan "
"``CharacterBody3D.move_and_slide()`` işlevini çağırıyoruz. Bir hareketin "
"ortasında bir duvara çarparsa, motor bunu sizin için düzeltmeye "
"çalışacaktır. :ref:`CharacterBody3D <class_CharacterBody3D>` için kendi "
"özgün *hız vektörü* değerini kullanır"

msgid "And that's all the code you need to move the character on the floor."
msgstr ""
"Ve karakteri zeminde hareket ettirmek için ihtiyacınız olan tüm kod budur."

msgid "Here is the complete ``player.gd`` code for reference."
msgstr "İşte başvuru için ``player.gd`` kodunun tamamı."

msgid "Testing our player's movement"
msgstr "Oyuncumuzun hareketini test etme"

msgid ""
"We're going to put our player in the ``Main`` scene to test it. To do so, we "
"need to instantiate the player and then add a camera. Unlike in 2D, in 3D, "
"you won't see anything if your viewport doesn't have a camera pointing at "
"something."
msgstr ""
"Oyuncumuzu test etmek için onu ``Main`` sahnesine koyacağız. Bunu yapmak "
"için, oyuncuyu örneklememiz ve ardından bir kamera eklememiz gerekiyor. "
"2B'nin aksine 3B'de, görüntü alanınızda bir şeye yönelmiş bir kamera yoksa "
"hiçbir şey göremezsiniz."

msgid ""
"Save your ``Player`` scene and open the ``Main`` scene. You can click on the "
"*Main* tab at the top of the editor to do so."
msgstr ""
"``Player`` sahnenizi kaydedin ve ``Main`` sahnesini açın. Bunu yapmak için "
"düzenleyicinin üst kısmındaki *Main* sekmesine tıklayabilirsiniz."

msgid "|image1|"
msgstr "|image1|"

msgid "image1"
msgstr "image1"

msgid ""
"If you closed the scene before, head to the *FileSystem* dock and double-"
"click ``main.tscn`` to re-open it."
msgstr ""
"Sahneyi daha önce kapattıysanız, *DosyaSistemi* yuvasına gidin ve yeniden "
"açmak için ``main.tscn`` dosyasına çift tıklayın."

msgid ""
"To instantiate the ``Player``, right-click on the ``Main`` node and select "
"*Instantiate Child Scene*."
msgstr ""
"``Player`` örneklemesi için ``Main`` düğümüne sağ tıklayın ve *Alt Öge "
"Sahneyi Örnekle* ögesini seçin."

msgid "|image2|"
msgstr "|image2|"

msgid "image2"
msgstr "image2"

msgid ""
"In the popup, double-click ``player.tscn``. The character should appear in "
"the center of the viewport."
msgstr ""
"Açılır pencerede ``player.tscn`` dosyasına çift tıklayın. Karakter "
"çerçevenin ortasında görünmelidir."

msgid "Adding a camera"
msgstr "Bir kamera eklemek"

msgid ""
"Let's add the camera next. Like we did with our *Player*\\ 's *Pivot*, we're "
"going to create a basic rig. Right-click on the ``Main`` node again and "
"select *Add Child Node*. Create a new :ref:`Marker3D <class_Marker3D>`, and "
"name it ``CameraPivot``. Select ``CameraPivot`` and add a child "
"node :ref:`Camera3D <class_Camera3D>` to it. Your scene tree should look "
"similar to this."
msgstr ""
"Şimdi kamerayı ekleyelim. Oyuncumuzun *Pivot*'unda yaptığımız gibi, temel "
"bir teçhizat oluşturacağız. Tekrar ``Main`` düğümüne sağ tıklayın ve *Alt "
"Öge Düğüm Ekle* seçeneğini seçin. Yeni bir :ref:`Marker3D <class_Marker3D>` "
"oluşturun ve adını ``CameraPivot`` koyun. ``CameraPivot`` ögesini seçin ve "
"ona bir :ref:`Camera3D <class_Camera3D>` alt düğümü ekleyin. Sahne ağacınız "
"buna benzer görünmelidir."

msgid "|image3|"
msgstr "|image3|"

msgid "image3"
msgstr "image3"

msgid ""
"Notice the *Preview* checkbox that appears in the top-left of the 3D view "
"when you have the *Camera* selected. You can click it to preview the in-game "
"camera projection."
msgstr ""
"*Camera* seçili olduğunda 3B görünümün sol üst köşesinde beliren *Önizleme* "
"onay kutusuna dikkat edin. Oyun içi kamera yansıtmasını ön izlemek için buna "
"tıklayabilirsiniz."

msgid "|image4|"
msgstr "|image4|"

msgid "image4"
msgstr "image4"

msgid ""
"We're going to use the *Pivot* to rotate the camera as if it was on a crane. "
"Let's first split the 3D view to be able to freely navigate the scene and "
"see what the camera sees."
msgstr ""
"Kamerayı bir vinç üzerindeymiş gibi döndürmek için *Pivot* özelliğini "
"kullanacağız. Sahnede serbestçe gezinebilmek ve kameranın ne gördüğünü "
"görebilmek için önce 3B görünümü bölelim."

msgid ""
"In the toolbar right above the viewport, click on *View*, then *2 "
"Viewports*. You can also press :kbd:`Ctrl + 2` (:kbd:`Cmd + 2` on macOS)."
msgstr ""
"Çerçevenin hemen üzerindeki araç çubuğunda *Görünüm* ögesine, ardından *2 "
"Görünüm Alanı* ögesine tıklayın. Ayrıca :kbd:`Ctrl + 2` (macOS "
"üzerinde :kbd:`Cmd + 2`) tuşlarına da basabilirsiniz."

msgid "|image11|"
msgstr "|image11|"

msgid "image11"
msgstr "image11"

msgid "|image5|"
msgstr "|image5|"

msgid "image5"
msgstr "image5"

msgid ""
"On the bottom view, select your :ref:`Camera3D <class_Camera3D>` and turn on "
"camera Preview by clicking the checkbox."
msgstr ""
"Alt görünümde, :ref:`Camera3D <class_Camera3D>` ögesini seçin ve onay "
"kutusuna tıklayarak Kamera Ön İzleme özelliğini açın."

msgid "|image6|"
msgstr "|image6|"

msgid "image6"
msgstr "image6"

msgid ""
"In the top view, make sure your *Camera3D* is selected and move the camera "
"about ``19`` units on the Z axis (drag the blue arrow)."
msgstr ""
"Üstten görünümde, *Camera3D* 'nin seçili olduğundan emin olun ve kamerayı Z "
"ekseninde yaklaşık ``19`` birim hareket ettirin (mavi oku sürükleyin)."

msgid "|image7|"
msgstr "|image7|"

msgid "image7"
msgstr "image7"

msgid ""
"Here's where the magic happens. Select the *CameraPivot* and rotate it "
"``-45`` degrees around the X axis (using the red circle). You'll see the "
"camera move as if it was attached to a crane."
msgstr ""
"İşte sihrin gerçekleştiği yer bu kısım. *CameraPivot* ögesini seçin ve X "
"ekseni etrafında ``-45`` derece döndürün (kırmızı daireyi kullanarak). "
"Kameranın bir vince bağlıymış gibi hareket ettiğini göreceksiniz."

msgid "|image8|"
msgstr "|image8|"

msgid "image8"
msgstr "image8"

msgid ""
"You can run the scene by pressing :kbd:`F6` and press the arrow keys to move "
"the character."
msgstr ""
"Sahneyi :kbd:`F6` tuşuna basarak çalıştırabilir ve karakteri hareket "
"ettirmek için ok tuşlarına basabilirsiniz."

msgid "|image9|"
msgstr "|image9|"

msgid "image9"
msgstr "image9"

msgid ""
"We can see some empty space around the character due to the perspective "
"projection. In this game, we're going to use an orthographic projection "
"instead to better frame the gameplay area and make it easier for the player "
"to read distances."
msgstr ""
"Perspektif yansıtma nedeniyle karakterin etrafında bir miktar boş alan "
"görebiliriz. Bu oyunda, oyun alanını çerçeveye daha iyi yerleştirmek ve "
"oyuncunun mesafeleri okumasını kolaylaştırmak için bunun yerine ortografik "
"(dik açılı) bir yansıtma kullanacağız."

msgid ""
"Select the *Camera* again and in the *Inspector*, set the *Projection* to "
"*Orthogonal* and the *Size* to ``19``. The character should now look flatter "
"and the ground should fill the background."
msgstr ""
"Tekrar *Camera* yı tekrar seçin ve *Denetleyici*'de *Yansıtma* için "
"*Dikaçılı* ve *Boyut* için ``19`` ayarlayın. Karakter şimdi daha düz "
"görünmeli ve zemin arka planı doldurmalıdır."

msgid ""
"When using an orthogonal camera in Godot 4, directional shadow quality is "
"dependent on the camera's *Far* value. The higher the *Far* value, the "
"further away the camera will be able to see. However, higher *Far* values "
"also decrease shadow quality as the shadow rendering has to cover a greater "
"distance."
msgstr ""
"Godot 4'te dik açılı (ortogonal) bir kamera kullanırken, yönlü gölge "
"kalitesi kameranın *Uzak* değerine bağlıdır. *Uzak* değeri ne kadar yüksek "
"olursa, kamera o kadar uzağı görebilir. Ancak daha yüksek *Uzak* değerleri, "
"gölge işlemenin daha büyük bir mesafeyi kapsaması gerektiğinden gölge "
"kalitesini de düşürür."

msgid ""
"If directional shadows look too blurry after switching to an orthogonal "
"camera, decrease the camera's *Far* property to a lower value such as "
"``100``. Don't decrease this *Far* property too much, or objects in the "
"distance will start disappearing."
msgstr ""
"Dik açılı kameraya geçtikten sonra yönlü gölgeler çok bulanık görünüyorsa, "
"kameranın *Uzak* özelliğini ``100`` gibi daha düşük bir değere düşürün. Bu "
"*Uzak* özelliğini çok fazla azaltmayın, aksi takdirde uzaktaki nesneler "
"kaybolmaya başlayacaktır."

msgid "|image10|"
msgstr "|image10|"

msgid "image10"
msgstr "image10"

msgid ""
"Test your scene and you should be able to move in all 8 directions and not "
"glitch through the floor!"
msgstr ""
"Sahnenizi test edin; 8 yönde de hareket edebilmeniz ve zeminin içinden "
"kaymamanız gerekir!"

msgid ""
"Ultimately, we have both player movement and the view in place. Next, we "
"will work on the monsters."
msgstr ""
"Nihayetinde, hem oyuncu hareketini hem de görünümü yerine oturttuk. Sırada, "
"canavarlar üzerinde çalışacağız."
