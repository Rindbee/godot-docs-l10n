#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Core types"
msgstr "Çekirdek tipler"

msgid ""
"Godot has a rich set of classes and templates that compose its core, and "
"everything is built upon them."
msgstr ""
"Godot, çekirdeğini oluşturan ve her şeyin bunların üzerine inşa edildiği "
"zengin bir sınıf ve şablon setine sahiptir."

msgid ""
"This reference will try to list them in order for their better understanding."
msgstr ""
"Bu başvuru belgesi, daha iyi anlaşılabilmeleri için bunları sırayla "
"listelemeye çalışacaktır."

msgid "Definitions"
msgstr "Tanımlamalar"

msgid ""
"Godot uses the standard C99 datatypes, such as ``uint8_t``, ``uint32_t``, "
"``int64_t``, etc. which are nowadays supported by every compiler. "
"Reinventing the wheel for those is not fun, as it makes code more difficult "
"to read."
msgstr ""
"Godot, günümüzde her derleyici tarafından desteklenen ``uint8_t``, "
"``uint32_t``, ``int64_t`` gibi standart C99 veri tiplerini kullanır. Bunlar "
"için tekerleği yeniden icat etmek eğlenceli değildir, çünkü kodun okunmasını "
"daha zor hale getirir."

msgid ""
"In general, care is not taken to use the most efficient datatype for a given "
"task unless using large structures or arrays. ``int`` is used through most "
"of the code unless necessary. This is done because nowadays every device has "
"at least a 32 bits bus and can do such operations in one cycle. It makes "
"code more readable too."
msgstr ""
"Genel olarak, büyük yapılar veya diziler kullanılmadığı sürece belirli bir "
"görev için en verimli veri türünü kullanmak için özen gösterilmez. Gerekli "
"olmadıkça kodun çoğunda ``int`` kullanılmıştır. Bunun nedeni günümüzde her "
"cihazın en az 32 bit veri yoluna sahip olması ve bu tür işlemleri tek bir "
"saat döngüsünde yapabilmesidir. Ayrıca kodu daha okunabilir hale getirir."

msgid ""
"For files or memory sizes, ``size_t`` is used, which is warranted to be 64 "
"bits."
msgstr ""
"Dosyalar veya bellek boyutları için 64 bit olması garanti edilen ``size_t`` "
"kullanılır."

msgid ""
"For Unicode characters, CharType instead of wchar_t is used, because many "
"architectures have 4 bytes long wchar_t, where 2 bytes might be desired. "
"However, by default, this has not been forced and CharType maps directly to "
"wchar_t."
msgstr ""
"Unicode karakterler için \"wchar_t\" yerine \"CharType\" kullanılır, çünkü "
"birçok mimaride 4 bayt uzunluğunda \"wchar_t\" vardır, oysa özel olarak 2 "
"bayt istenebilir. Ancak, varsayılan olarak, bu zorlanmamıştır ve "
"\"CharType\" doğrudan \"wchar_t\" 'ye haritalanır."

msgid "References:"
msgstr "Başvurular:"

msgid ""
"`core/typedefs.h <https://github.com/godotengine/godot/blob/master/core/"
"typedefs.h>`__"
msgstr ""
"`core/typedefs.h <https://github.com/godotengine/godot/blob/master/core/"
"typedefs.h>`__"

msgid "Memory model"
msgstr "Bellek modeli"

msgid ""
"PC is a wonderful architecture. Computers often have gigabytes of RAM, "
"terabytes of storage and gigahertz of CPU, and when an application needs "
"more resources the OS will swap out the inactive ones. Other architectures "
"(like mobile or consoles) are in general more limited."
msgstr ""
"PC harika bir mimaridir. Bilgisayarlarda genellikle gigabaytlarca RAM, "
"terabaytlarca depolama alanı ve gigahertz hızlarda CPU bulunur ve bir "
"uygulama daha fazla kaynağa ihtiyaç duyduğunda işletim sistemi etkin "
"olmayanları yer değiştirir. Diğer mimariler (mobil veya konsollar gibi) "
"genel olarak daha sınırlıdır."

msgid ""
"The most common memory model is the heap, where an application will request "
"a region of memory, and the underlying OS will try to fit it somewhere and "
"return it. This often works best and is flexible, but over time and with "
"abuse, this can lead to segmentation."
msgstr ""
"En yaygın bellek modeli, bir uygulamanın bir bellek bölgesi talep edeceği ve "
"altta yatan işletim sisteminin bunu bir yere sığdırmaya ve geri döndürmeye "
"çalışacağı öbektir (heap). Bu genellikle en iyi şekilde çalışır ve esnektir, "
"ancak zamanla ve kötüye kullanımla bu, bölünmelere yol açabilir."

msgid ""
"Segmentation slowly creates holes that are too small for most common "
"allocations, so that memory is wasted. There is a lot of literature about "
"heap and segmentation, so this topic will not be developed further here. "
"Modern operating systems use paged memory, which helps mitigate the problem "
"of segmentation but doesn't solve it."
msgstr ""
"Bölünmeler (segmentation) yavaşça en yaygın yer ayırmalar için çok küçük "
"kalan delikler oluşturur, böylece bellek boşa harcanır. Öbek ve bölünme "
"hakkında çok fazla yazılı bilgi vardır, bu nedenle bu konu burada daha fazla "
"geliştirilmeyecektir. Modern işletim sistemleri, bölünme sorununu "
"hafifletmeye yardımcı olan ancak çözmeyen sayfalı bellek kullanır."

msgid ""
"However, in many studies and tests, it is shown that given enough memory, if "
"the maximum allocation size is below a given threshold in proportion to the "
"maximum heap size and proportion of memory intended to be unused, "
"segmentation will not be a problem over time as it will remain constant. In "
"other words, leave 10-20% of your memory free and perform all small "
"allocations and you are fine."
msgstr ""
"Bununla birlikte, birçok çalışma ve testte, yeterli bellek verildiğinde, en "
"fazla yer ayırma boyutunun en fazla öbek boyutu ve kullanılmaması amaçlanan "
"bellek oranıyla orantılı olarak belirli bir eşiğin altında olması durumunda, "
"zaman içinde sabit kalacağı için bölünmenin bir sorun olmayacağı "
"gösterilmiştir. Başka bir deyişle, belleğinizin %10-20'sini boş bırakın ve "
"hep küçük yer ayırmalar gerçekleştirin ve sorun yaşamazsınız."

msgid ""
"Godot ensures that all objects that can be allocated dynamically are small "
"(less than a few kb at most). But what happens if an allocation is too large "
"(like an image or mesh geometry or large array)? In this case Godot has the "
"option to use a dynamic memory pool. This memory needs to be locked to be "
"accessed, and if an allocation runs out of memory, the pool will be "
"rearranged and compacted on demand. Depending on the need of the game, the "
"programmer can configure the dynamic memory pool size."
msgstr ""
"Godot dinamik olarak yer ayrılabilecek tüm nesnelerin küçük olmasını sağlar "
"(en fazla birkaç KB'den az). Ancak bir yer ayırma çok büyükse (bir görüntü "
"veya örgü geometrisi veya büyük bir dizi gibi) ne olur? Bu durumda Godot "
"dinamik bir bellek havuzu kullanma seçeneğine sahiptir. Bu belleğe "
"erişilebilmesi için kilitlenmesi gerekir ve bir yer ayırma işleminde bellek "
"tükenirse, havuz talep üzerine yeniden düzenlenir ve sıkılaştırılır. Oyunun "
"ihtiyacına bağlı olarak, programcı dinamik bellek havuzu boyutunu "
"yapılandırabilir."

msgid "Allocating memory"
msgstr "Bellek yeri ayırma"

msgid ""
"Godot has many tools for tracking memory usage in a game, especially during "
"debug. Because of this, the regular C and C++ library calls should not be "
"used. Instead, a few other ones are provided."
msgstr ""
"Godot, özellikle hata ayıklama sırasında bir oyundaki bellek kullanımını "
"izlemek için birçok araca sahiptir. Bu nedenle, normal C ve C++ kütüphane "
"çağrıları kullanılmamalıdır. Bunun yerine, başka birkaç tane daha "
"sağlanmıştır."

msgid "For C-style allocation, Godot provides a few macros:"
msgstr "C tarzı yer ayırma için Godot birkaç makro sağlar:"

msgid ""
"These are equivalent to the usual malloc, realloc, free of the standard C "
"library."
msgstr ""
"Bunlar standart C kütüphanesindeki malloc, realloc, free gibi işlemlere "
"eşdeğerdir."

msgid "For C++-style allocation, special macros are provided:"
msgstr "C++ tarzı yer ayırma için özel makrolar sağlanmıştır:"

msgid "which are equivalent to new, delete, new[] and delete[]."
msgstr "bunlar new, delete, new[] ve delete[] ile eşdeğerdir."

msgid ""
"memnew/memdelete also use a little C++ magic and notify Objects right after "
"they are created, and right before they are deleted."
msgstr ""
"memnew/memdelete ayrıca küçük bir C++ sihri kullanır ve nesneleri "
"oluşturulduktan hemen sonra ve silinmeden hemen önce bilgilendirir."

msgid ""
"For dynamic memory, the PoolVector<> template is provided. PoolVector is a "
"standard vector class, and is very similar to vector in the C++ standard "
"library. To create a PoolVector buffer, use this:"
msgstr ""
"Dinamik bellek için \"PoolVector<>\" şablonu sağlanmıştır. PoolVector "
"standart bir vektör sınıfıdır ve C++ standart kütüphanesindeki vektöre çok "
"benzer. Bir PoolVector tamponu oluşturmak için şunu kullanın:"

msgid ""
"PoolVector can be accessed using the [] operator and a few helpers exist for "
"this:"
msgstr ""
"PoolVector'a \"[]\" operatörü kullanılarak erişilebilir ve bunun için birkaç "
"yardımcı mevcuttur:"

msgid ""
"These operations allow fast read/write from PoolVectors and keep it locked "
"until they go out of scope. However, PoolVectors should be used for small, "
"dynamic memory operations, as read() and write() are too slow for a large "
"amount of accesses."
msgstr ""
"Bu işlemler PoolVector'lerden hızlı okuma/yazmaya izin verir ve kapsam "
"dışına çıkana kadar kilitli tutar. Ancak, PoolVectors'ler küçük, dinamik "
"bellek işlemleri için kullanılmalıdır, çünkü read() ve write() büyük "
"miktarda erişim için çok yavaştır."

msgid ""
"`core/os/memory.h <https://github.com/godotengine/godot/blob/master/core/os/"
"memory.h>`__"
msgstr ""
"`core/os/memory.h <https://github.com/godotengine/godot/blob/master/core/os/"
"memory.h>`__"

msgid ""
"`core/pool_vector.h <https://github.com/godotengine/godot/blob/master/core/"
"pool_vector.cpp>`__"
msgstr ""
"`core/pool_vector.h <https://github.com/godotengine/godot/blob/master/core/"
"pool_vector.cpp>`__"

msgid "Containers"
msgstr "Taşıyıcılar"

msgid "Godot provides also a set of common containers:"
msgstr "Godot ayrıca bir dizi ortak taşıyıcı sağlar:"

msgid "Vector"
msgstr "Vector"

msgid "List"
msgstr "List"

msgid "Set"
msgstr "Set"

msgid "Map"
msgstr "Map"

msgid ""
"They aim to be as minimal as possible, as templates in C++ are often inlined "
"and make the binary size much fatter, both in debug symbols and code. List, "
"Set and Map can be iterated using pointers, like this:"
msgstr ""
"Bunlar mümkün olduğunca küçük olmayı amaçlarlar, çünkü C++'daki şablonlar "
"genellikle satır içi olduğundan ve hem hata ayıklama sembollerinde hem de "
"kodda ikili boyutunu çok daha şişman hale getirirler. List, Set ve Map, "
"aşağıdaki gibi işaretçiler kullanılarak döngülenebilir:"

msgid "The Vector<> class also has a few nice features:"
msgstr "\"Vector<>\" sınıfı da birkaç güzel özelliğe sahiptir:"

msgid ""
"It does copy on write, so making copies of it is cheap as long as they are "
"not modified."
msgstr ""
"Yazılırken kopyalanır, bu nedenle değiştirilmedikleri sürece kopyalarını "
"çıkarmak ucuzdur."

msgid ""
"It supports multi-threading, by using atomic operations on the reference "
"counter."
msgstr ""
"Başvuru sayacı üzerinde atomik işlemler kullanma yoluyla çoklu iş "
"parçacığını destekler."

msgid ""
"`core/templates/vector.h <https://github.com/godotengine/godot/blob/master/"
"core/templates/vector.h>`__"
msgstr ""
"`core/templates/vector.h <https://github.com/godotengine/godot/blob/master/"
"core/templates/vector.h>`__"

msgid ""
"`core/templates/list.h <https://github.com/godotengine/godot/blob/master/"
"core/templates/list.h>`__"
msgstr ""
"`core/templates/list.h <https://github.com/godotengine/godot/blob/master/"
"core/templates/list.h>`__"

msgid ""
"`core/templates/set.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/hash_set.h>`__"
msgstr ""
"`core/templates/set.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/hash_set.h>`__"

msgid ""
"`core/templates/map.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/hash_map.h>`__"
msgstr ""
"`core/templates/map.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/hash_map.h>`__"

msgid "String"
msgstr "Dize"

msgid ""
"Godot also provides a String class. This class has a huge amount of "
"features, full Unicode support in all the functions (like case operations) "
"and utf8 parsing/extracting, as well as helpers for conversion and "
"visualization."
msgstr ""
"Godot ayrıca bir String dize sınıfı sağlar. Bu sınıf çok sayıda özelliğe, "
"tüm fonksiyonlarda tam Unicode desteğine (büyük/küçük harf işlemleri gibi) "
"ve utf8 ayrıştırma/ayıklama özelliğinin yanı sıra dönüştürme ve "
"görselleştirme için yardımcılara sahiptir."

msgid ""
"`core/string/ustring.h <https://github.com/godotengine/godot/blob/master/"
"core/string/ustring.h>`__"
msgstr ""
"`core/string/ustring.h <https://github.com/godotengine/godot/blob/master/"
"core/string/ustring.h>`__"

msgid "StringName"
msgstr "StringName"

msgid ""
"StringNames are like a String, but they are unique. Creating a StringName "
"from a string results in a unique internal pointer for all equal strings. "
"StringNames are useful for using strings as identifier, as comparing them is "
"basically comparing a pointer."
msgstr ""
"StringNames'ler (dize ismi) bir String gibidir, ancak benzersizdirler. Bir "
"dizeden StringName oluşturmak, tüm eşit dizeler için benzersiz bir iç "
"işaretçi ile sonuçlanır. StringName'ler , dizeleri tanımlayıcı olarak "
"kullanmak için kullanışlıdır, çünkü bunları karşılaştırmak temelde bir "
"işaretçiyi karşılaştırmaktır."

msgid ""
"Creation of a StringName (especially a new one) is slow, but comparison is "
"fast."
msgstr ""
"Bir StringName'in (özellikle yeni bir StringName'in) oluşturulması yavaştır, "
"ancak karşılaştırma hızlıdır."

msgid ""
"`core/string/string_name.h <https://github.com/godotengine/godot/blob/master/"
"core/string/string_name.h>`__"
msgstr ""
"`core/string/string_name.h <https://github.com/godotengine/godot/blob/master/"
"core/string/string_name.h>`__"

msgid "Math types"
msgstr "Matematik tipleri"

msgid ""
"There are several linear math types available in the core/math directory."
msgstr "\"core/math\" dizininde çeşitli doğrusal matematik türleri mevcuttur."

msgid ""
"`core/math <https://github.com/godotengine/godot/tree/master/core/math>`__"
msgstr ""
"`core/math <https://github.com/godotengine/godot/tree/master/core/math>`__"

msgid "NodePath"
msgstr "NodePath"

msgid ""
"This is a special datatype used for storing paths in a scene tree and "
"referencing them fast."
msgstr ""
"Bu, bir sahne ağacındaki yolları depolamak ve bunlara hızlı bir şekilde "
"başvurmak için kullanılan özel bir veri türüdür."

msgid ""
"`core/string/node_path.h <https://github.com/godotengine/godot/blob/master/"
"core/string/node_path.h>`__"
msgstr ""
"`core/string/node_path.h <https://github.com/godotengine/godot/blob/master/"
"core/string/node_path.h>`__"

msgid "RID"
msgstr "RID"

msgid ""
"RIDs are resource IDs. Servers use these to reference data stored in them. "
"RIDs are opaque, meaning that the data they reference can't be accessed "
"directly. RIDs are unique, even for different types of referenced data."
msgstr ""
"RID'ler kaynak kimlikleridir. Sunucular bunları içlerinde depolanan verilere "
"başvurmak için kullanır. RID'ler opaktır, yani başvuru verdikleri verilere "
"doğrudan erişilemez. RID'ler, başvuru verilen farklı veri türleri için bile "
"benzersizdir."

msgid ""
"`core/templates/rid.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/rid.h>`__"
msgstr ""
"`core/templates/rid.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/rid.h>`__"
