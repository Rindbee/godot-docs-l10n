#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom modules in C++"
msgstr "C++'da yazılmış özel modüller"

msgid "Modules"
msgstr "Modüller"

msgid ""
"Godot allows extending the engine in a modular way. New modules can be "
"created and then enabled/disabled. This allows for adding new engine "
"functionality at every level without modifying the core, which can be split "
"for use and reuse in different modules."
msgstr ""
"Godot, motorun modüler bir şekilde genişletilmesine izin verir. Yeni "
"modüller oluşturulabilir ve daha sonra etkinleştirilebilir/devre dışı "
"bırakılabilir. Bu, farklı modüllerde kullanım ve yeniden kullanım için "
"bölünebilen, çekirdeği değiştirmeden her seviyede yeni motor işlevselliği "
"eklemeye olanak tanır."

msgid ""
"Modules are located in the ``modules/`` subdirectory of the build system. By "
"default, dozens of modules are enabled, such as GDScript (which, yes, is not "
"part of the base engine), the Mono runtime, a regular expressions module, "
"and others. As many new modules as desired can be created and combined. The "
"SCons build system will take care of it transparently."
msgstr ""
"Modüller, derleme sisteminin ``modules/`` alt dizininde bulunur. GDScript "
"(evet, temel motorun bir parçası değildir), Mono çalışma zamanı, düzenli "
"ifadeler modülü ve diğerleri gibi düzinelerce modül varsayılan olarak "
"etkinleştirilmiştir. İstenildiği kadar yeni modül oluşturulabilir ve "
"birleştirilebilir. SCons derleme sistemi bunu şeffaf bir şekilde "
"halledecektir."

msgid "What for?"
msgstr "Ne için?"

msgid ""
"While it's recommended that most of a game be written in scripting (as it is "
"an enormous time saver), it's perfectly possible to use C++ instead. Adding "
"C++ modules can be useful in the following scenarios:"
msgstr ""
"Bir oyunun büyük bir kısmının betik ile yazılması tavsiye edilse de (çok "
"büyük bir zaman tasarrufu sağlar), bunun yerine C++ kullanmak tamamen "
"mümkündür. C++ modülleri eklemek aşağıdaki senaryolarda faydalı olabilir:"

msgid "Binding an external library to Godot (like PhysX, FMOD, etc)."
msgstr "Godot'ya harici bir kütüphane bağlama (PhysX, FMOD, vb. gibi)."

msgid "Optimize critical parts of a game."
msgstr "Bir oyunun kritik bölümlerini optimize etme."

msgid "Adding new functionality to the engine and/or editor."
msgstr "Motora ve/veya düzenleyiciye yeni işlevler ekleme."

msgid "Porting an existing game to Godot."
msgstr "Mevcut bir oyunu Godot'ya taşıma."

msgid "Write a whole, new game in C++ because you can't live without C++."
msgstr "C++ ile yepyeni bir oyun yazma, çünkü C++ olmadan yaşayamazsınız."

msgid "Creating a new module"
msgstr "Yeni bir modül oluşturma"

msgid ""
"Before creating a module, make sure to :ref:`download the source code of "
"Godot and compile it <toc-devel-compiling>`."
msgstr ""
"Bir modül oluşturmadan önce, :ref:`Godot'nun kaynak kodunu indirdiğinizden "
"ve derlediğinizden <toc-devel-compiling>` emin olun."

msgid ""
"To create a new module, the first step is creating a directory inside "
"``modules/``. If you want to maintain the module separately, you can "
"checkout a different VCS into modules and use it."
msgstr ""
"Yeni bir modül oluşturmak için ilk adım ``modules/`` içinde bir dizin "
"oluşturmaktır. Modülü ayrı olarak sürdürmek istiyorsanız, modüllere farklı "
"bir VCS ekleyebilir ve onu kullanabilirsiniz."

msgid ""
"The example module will be called \"summator\" (``godot/modules/summator``). "
"Inside we will create a summator class:"
msgstr ""
"Örnek modül \"summator\" (toplayıcı) olarak adlandırılacaktır (``godot/"
"modules/summator``). İçinde bir summator sınıfı oluşturacağız (summator.h):"

msgid "And then the cpp file."
msgstr "Ve sonra cpp dosyası."

msgid ""
"Then, the new class needs to be registered somehow, so two more files need "
"to be created:"
msgstr ""
"Ardından, yeni sınıfın bir şekilde kaydedilmesi gerekir, bu nedenle iki "
"dosyanın daha oluşturulması gerekir:"

msgid ""
"These files must be in the top-level folder of your module (next to your "
"``SCsub`` and ``config.py`` files) for the module to be registered properly."
msgstr ""
"Modülün düzgün bir şekilde kaydedilmesi için bu dosyaların modülünüzün en "
"üst düzey klasöründe (``SCsub`` ve ``config.py`` dosyalarınızın yanında) "
"olması gerekir."

msgid "These files should contain the following:"
msgstr "Bu dosyalar aşağıdakileri içermelidir:"

msgid ""
"Next, we need to create an ``SCsub`` file so the build system compiles this "
"module:"
msgstr ""
"Daha sonra, derleme sisteminin bu modülü derlemesi için bir ``SCsub`` "
"dosyası oluşturmamız gerekiyor:"

msgid ""
"With multiple sources, you can also add each file individually to a Python "
"string list:"
msgstr ""
"Birden fazla kaynakla, her dosyayı ayrı ayrı bir Python dize listesine de "
"ekleyebilirsiniz:"

msgid ""
"This allows for powerful possibilities using Python to construct the file "
"list using loops and logic statements. Look at some modules that ship with "
"Godot by default for examples."
msgstr ""
"Bu, döngüler ve mantık deyimleri kullanarak dosya listesini oluşturmak için "
"Python kullanarak güçlü olasılıklara izin verir. Örnekler için Godot ile "
"varsayılan olarak gelen bazı modüllere bakın."

msgid ""
"To add include directories for the compiler to look at you can append it to "
"the environment's paths:"
msgstr ""
"Derleyicinin bakması için include dizinleri eklemek için ortamın yollarına "
"ekleyebilirsiniz:"

msgid ""
"If you want to add custom compiler flags when building your module, you need "
"to clone ``env`` first, so it won't add those flags to whole Godot build "
"(which can cause errors). Example ``SCsub`` with custom flags:"
msgstr ""
"Modülünüzü oluştururken özel derleyici bayrakları eklemek istiyorsanız, önce "
"``env`` ögesini klonlamanız gerekir, böylece bu bayrakları tüm Godot "
"derlemesine eklemez (bu hatalara neden olabilir). Özel bayraklar ile örnek "
"``SCsub`` dosyası:"

msgid ""
"And finally, the configuration file for the module, this is a Python script "
"that must be named ``config.py``:"
msgstr ""
"Ve son olarak, modül için yapılandırma dosyası; bu ``config.py`` olarak "
"adlandırılması gereken bir Python betiğidir:"

msgid ""
"The module is asked if it's OK to build for the specific platform (in this "
"case, ``True`` means it will build for every platform)."
msgstr ""
"Modüle belirli bir platform için derlemenin uygun olup olmadığı sorulur (bu "
"durumda ``True`` her platform için oluşturulacağı anlamına gelir)."

msgid ""
"And that's it. Hope it was not too complex! Your module should look like "
"this:"
msgstr ""
"Ve hepsi bu kadar. Umarız çok fazla karışık değildi. Modülünüz bunun gibi "
"görünmelidir:"

msgid ""
"You can then zip it and share the module with everyone else. When building "
"for every platform (instructions in the previous sections), your module will "
"be included."
msgstr ""
"Daha sonra zipleyebilir ve modülü diğer herkesle paylaşabilirsiniz. Her "
"platform için derleme yapılırken (önceki bölümlerdeki talimatlar), modülünüz "
"de dahil edilecektir."

msgid "Using the module"
msgstr "Modülü kullanma"

msgid "You can now use your newly created module from any script:"
msgstr ""
"Artık yeni oluşturduğunuz modülü herhangi bir betikte kullanabilirsiniz:"

msgid "The output will be ``60``."
msgstr "Çıktı ``60`` olacaktır."

msgid ""
"The previous Summator example is great for small, custom modules, but what "
"if you want to use a larger, external library? Refer "
"to :ref:`doc_binding_to_external_libraries` for details about binding to "
"external libraries."
msgstr ""
"Önceki Summator örneği küçük, özel modüller için harikadır, ancak ya daha "
"büyük, harici bir kütüphane kullanmak istiyorsanız? Harici kütüphanelere "
"bağlama hakkında ayrıntılar için :ref:`doc_binding_to_external_libraries` "
"bölümüne bakın."

msgid ""
"If your module is meant to be accessed from the running project (not just "
"from the editor), you must also recompile every export template you plan to "
"use, then specify the path to the custom template in each export preset. "
"Otherwise, you'll get errors when running the project as the module isn't "
"compiled in the export template. See the :ref:`Compiling <toc-devel-"
"compiling>` pages for more information."
msgstr ""
"Modülünüze çalışan projeden erişilmesi gerekiyorsa (sadece düzenleyiciden "
"değil), kullanmayı planladığınız her dışa aktarma şablonunu da yeniden "
"derlemeli ve ardından her dışa aktarma hazır ayarında özel şablonun yolunu "
"belirtmelisiniz. Aksi takdirde, modül dışa aktarma şablonunda derlenmediği "
"için projeyi çalıştırırken hata alırsınız. Daha fazla bilgi "
"için :ref:`Derleme <toc-devel-compiling>` sayfalarına bakın."

msgid "Compiling a module externally"
msgstr "Bir modülü harici olarak derleme"

msgid ""
"Compiling a module involves moving the module's sources directly under the "
"engine's ``modules/`` directory. While this is the most straightforward way "
"to compile a module, there are a couple of reasons as to why this might not "
"be a practical thing to do:"
msgstr ""
"Bir modülün derlenmesi, modülün kaynaklarının doğrudan motorun ``modules/`` "
"dizini altına taşınmasını içerir. Bu, bir modülü derlemenin en kolay yolu "
"olsa da, bunun neden pratik bir şey olmayabileceğine dair birkaç neden "
"vardır:"

msgid ""
"Having to manually copy modules sources every time you want to compile the "
"engine with or without the module, or taking additional steps needed to "
"manually disable a module during compilation with a build option similar to "
"``module_summator_enabled=no``. Creating symbolic links may also be a "
"solution, but you may additionally need to overcome OS restrictions like "
"needing the symbolic link privilege if doing this via script."
msgstr ""
"Motoru modülle ya da modülsüz derlemek istediğiniz her seferde modül "
"kaynaklarını elden kopyalamak ya da derleme sırasında "
"``module_summator_enabled=no`` benzeri bir derleme seçeneğiyle bir modülü "
"manuel olarak devre dışı bırakmak için gereken ek adımları atmak. Sembolik "
"bağlantılar oluşturmak da bir çözüm olabilir, ancak bunu komut dosyası "
"aracılığıyla yapıyorsanız sembolik bağlantı oluşturma ayrıcalığına ihtiyaç "
"duymak gibi işletim sistemi kısıtlamalarının üstesinden gelmeniz gerekebilir."

msgid ""
"Depending on whether you have to work with the engine's source code, the "
"module files added directly to ``modules/`` changes the working tree to the "
"point where using a VCS (like ``git``) proves to be cumbersome as you need "
"to make sure that only the engine-related code is committed by filtering "
"changes."
msgstr ""
"Motorun kaynak koduyla çalışmanız gerekip gerekmediğine bağlı olarak, "
"doğrudan ``modules/`` klasörüne eklenen modül dosyaları, değişiklikleri "
"filtreleyerek yalnızca motorla ilgili kodun işlendiğinden emin olmanız "
"gerektiğinden, bir VCS (``git`` gibi) kullanmanın zahmetli olduğu dereceye "
"kadar çalışma dizini ağacını değiştirir."

msgid ""
"So if you feel like the independent structure of custom modules is needed, "
"lets take our \"summator\" module and move it to the engine's parent "
"directory:"
msgstr ""
"Eğer özel modüllerin bağımsız yapısının gerekli olduğunu düşünüyorsanız, "
"\"summator\" modülümüzü alalım ve motorun ana dizinine taşıyalım:"

msgid ""
"Compile the engine with our module by providing ``custom_modules`` build "
"option which accepts a comma-separated list of directory paths containing "
"custom C++ modules, similar to the following:"
msgstr ""
"Özel C++ modüllerini içeren dizin yollarının virgülle ayrılmış bir listesini "
"kabul eden ``custom_modules`` derleme seçeneğini vererek, aşağıdakine benzer "
"şekilde, motoru modülümüzle derleyin:"

msgid ""
"The build system shall detect all modules under the ``../modules`` directory "
"and compile them accordingly, including our \"summator\" module."
msgstr ""
"Yapı sistemi ``../modules`` dizini altındaki tüm modülleri algılayacak ve "
"\"summator\" modülümüz de dahil olmak üzere bunları uygun şekilde "
"derleyecektir."

msgid ""
"Any path passed to ``custom_modules`` will be converted to an absolute path "
"internally as a way to distinguish between custom and built-in modules. It "
"means that things like generating module documentation may rely on a "
"specific path structure on your machine."
msgstr ""
"Özel ve yerleşik modüller arasında ayrım yapmanın bir yolu olarak "
"``custom_modules``'e aktarılan herhangi bir yol dahili olarak mutlak bir "
"yola dönüştürülecektir. Bu, modül belgeleri oluşturmak gibi şeylerin "
"makinenizdeki belirli bir yol yapısına bağımlı olabileceği anlamına gelir."

msgid ""
":ref:`Introduction to the buildsystem - Custom modules build option "
"<doc_buildsystem_custom_modules>`."
msgstr ""
":ref:`Yapı sistemine giriş - Özel modüller oluşturma seçeneği "
"<doc_buildsystem_custom_modules>`."

msgid "Customizing module types initialization"
msgstr "Modül tiplerinin başlatılmasını özelleştirme"

msgid ""
"Modules can interact with other built-in engine classes during runtime and "
"even affect the way core types are initialized. So far, we've been using "
"``register_summator_types`` as a way to bring in module classes to be "
"available within the engine."
msgstr ""
"Modüller çalışma zamanı sırasında diğer yerleşik motor sınıflarıyla "
"etkileşime girebilir ve hatta çekirdek tiplerin başlatılma şeklini "
"etkileyebilir. Şimdiye kadar, modül sınıflarını motor içinde kullanılabilir "
"hale getirmenin bir yolu olarak ``register_summator_types`` kullanıyorduk."

msgid ""
"A crude order of the engine setup can be summarized as a list of the "
"following type registration methods:"
msgstr ""
"Motor kurulumunun kaba bir sıralaması, aşağıdaki tip kayıt yöntemlerinin bir "
"listesi olarak özetlenebilir:"

msgid ""
"This is where we can define an optional ``preregister_summator_types()`` "
"method which will be called before anything else during the "
"``preregister_module_types()`` engine setup stage."
msgstr ""
"Bu noktada, ``preregister_module_types()`` motor kurulum aşamasında her "
"şeyden önce çağrılacak isteğe bağlı bir ``preregister_summator_types()`` "
"yöntemi tanımlayabiliriz."

msgid ""
"We now need to add this method to ``register_types`` header and source files:"
msgstr ""
"Şimdi bu yöntemi ``register_types`` başlık(.h) ve kaynak (.cpp) dosyalarına "
"eklememiz gerekiyor:"

msgid ""
"Unlike other register methods, we have to explicitly define "
"``MODULE_SUMMATOR_HAS_PREREGISTER`` to let the build system know what "
"relevant method calls to include at compile time. The module's name has to "
"be converted to uppercase as well."
msgstr ""
"Diğer kayıt yöntemlerinden farklı olarak, derleme sisteminin derleme "
"zamanında hangi ilgili yöntem çağrılarını dahil edeceğini bilmesini sağlamak "
"için ``MODULE_SUMMATOR_HAS_PREREGISTER`` özelliğini açıkça tanımlamamız "
"gerekir. Modülün adı da büyük harfe dönüştürülmelidir."

msgid "Improving the build system for development"
msgstr "Derleme sisteminin geliştirme amaçlı iyileştirilmesi"

msgid ""
"This shared library support is not designed to support distributing a module "
"to other users without recompiling the engine. For that purpose, use a "
"GDExtension instead."
msgstr ""
"Bu paylaşılan kütüphane desteği, bir modülün motoru yeniden derlemeden diğer "
"kullanıcılara dağıtılmasını desteklemek için tasarlanmamıştır. Bu amaç için, "
"bunun yerine bir GDExtension kullanın."

msgid ""
"So far, we defined a clean SCsub that allows us to add the sources of our "
"new module as part of the Godot binary."
msgstr ""
"Şimdiye kadar, yeni modülümüzün kaynaklarını Godot ikili dosyasının bir "
"parçası olarak eklememizi sağlayan temiz bir SCsub tanımladık."

msgid ""
"This static approach is fine when we want to build a release version of our "
"game, given we want all the modules in a single binary."
msgstr ""
"Bu statik yaklaşım, tüm modüllerin tek bir ikili dosyada olmasını istersek, "
"oyunumuzun yayın sürümünü oluşturmak istediğimizde iyidir."

msgid ""
"However, the trade-off is that every single change requires a full "
"recompilation of the game. Even though SCons is able to detect and recompile "
"only the file that was changed, finding such files and eventually linking "
"the final binary takes a long time."
msgstr ""
"Bununla birlikte, burada feda edilen şey her bir değişikliğin oyunun tamamen "
"yeniden derlenmesini gerektirmesidir. SCons yalnızca değiştirilen dosyayı "
"tespit edip yeniden derleyebilse de, bu tür dosyaları bulmak ve sonunda son "
"ikiliyi bağlamak uzun zaman alır."

msgid ""
"The solution to avoid such a cost is to build our own module as a shared "
"library that will be dynamically loaded when starting our game's binary."
msgstr ""
"Böyle bir maliyetten kaçınmak için çözüm, kendi modülümüzü, oyunumuzun ikili "
"dosyasını başlatırken dinamik olarak yüklenecek paylaşılan bir kütüphane "
"olarak oluşturmaktır."

msgid ""
"Once compiled, we should end up with a ``bin`` directory containing both the "
"``godot*`` binary and our ``libsummator*.so``. However given the .so is not "
"in a standard directory (like ``/usr/lib``), we have to help our binary find "
"it during runtime with the ``LD_LIBRARY_PATH`` environment variable:"
msgstr ""
"Derlendikten sonra, hem ``godot*`` ikilisini hem de ``libsummator*.so`` "
"dosyamızı içeren bir ``bin`` dizini elde etmeliyiz. Ancak .so standart bir "
"dizinde olmadığından (``/usr/lib`` gibi), ikilimizin çalışma zamanı "
"sırasında ``LD_LIBRARY_PATH`` ortam değişkeniyle onu bulmasına yardımcı "
"olmalıyız:"

msgid ""
"You have to ``export`` the environment variable. Otherwise, you won't be "
"able to run your project from the editor."
msgstr ""
"Ortam değişkenini ``export`` etmeniz gerekir. Aksi takdirde, projenizi "
"düzenleyiciden çalıştıramazsınız."

msgid ""
"On top of that, it would be nice to be able to select whether to compile our "
"module as shared library (for development) or as a part of the Godot binary "
"(for release). To do that we can define a custom flag to be passed to SCons "
"using the ``ARGUMENT`` command:"
msgstr ""
"Bunun da ötesinde, modülümüzün paylaşımlı kütüphane olarak mı (geliştirme "
"için) yoksa Godot ikili dosyasının bir parçası olarak mı (sürüm için) "
"derleneceğini seçebilmek güzel olurdu. Bunu yapmak için ``ARGUMENT`` "
"komutunu kullanarak SCons'a iletilecek özel bir bayrak tanımlayabiliriz:"

msgid ""
"Now by default ``scons`` command will build our module as part of Godot's "
"binary and as a shared library when passing ``summator_shared=yes``."
msgstr ""
"Şimdi varsayılan olarak ``scons`` komutu modülümüzü Godot'un ikili "
"dosyasının bir parçası olarak ve ``summator_shared=yes`` geçildiğinde ise "
"paylaşılan bir kütüphane olarak oluşturacaktır."

msgid ""
"Finally, you can even speed up the build further by explicitly specifying "
"your shared module as target in the SCons command:"
msgstr ""
"Son olarak, SCons komutunda hedef olarak paylaşılan modülünüzü açıkça "
"belirterek derlemeyi daha da hızlandırabilirsiniz:"

msgid "Writing custom documentation"
msgstr "Özel belgeleri yazma"

msgid ""
"Writing documentation may seem like a boring task, but it is highly "
"recommended to document your newly created module to make it easier for "
"users to benefit from it. Not to mention that the code you've written one "
"year ago may become indistinguishable from the code that was written by "
"someone else, so be kind to your future self!"
msgstr ""
"Belge yazmak sıkıcı bir iş gibi görünebilir, ancak kullanıcıların modülden "
"yararlanmasını kolaylaştırmak için yeni oluşturduğunuz modülü belgelemeniz "
"şiddetle tavsiye edilir. Bir yıl önce yazdığınız bir kodun, bir başkası "
"tarafından yazılan koddan ayırt edilemez hale gelebileceğinden bahsetmiyoruz "
"bile, bu yüzden gelecekteki kendinize karşı biraz nazik olun!"

msgid "There are several steps in order to setup custom docs for the module:"
msgstr "Modül için özel belgeleri ayarlamak için birkaç adım vardır:"

msgid ""
"Make a new directory in the root of the module. The directory name can be "
"anything, but we'll be using the ``doc_classes`` name throughout this "
"section."
msgstr ""
"Modülün kök dizininde yeni bir dizin oluşturun. Dizin adı herhangi bir şey "
"olabilir, ancak bu bölüm boyunca ``doc_classes`` adını kullanacağız."

msgid "Now, we need to edit ``config.py``, add the following snippet:"
msgstr ""
"Şimdi, ``config.py`` dosyasını düzenlememiz ve aşağıdaki kod parçacığı "
"eklememiz gerekiyor:"

msgid ""
"The ``get_doc_path()`` function is used by the build system to determine the "
"location of the docs. In this case, they will be located in the ``modules/"
"summator/doc_classes`` directory. If you don't define this, the doc path for "
"your module will fall back to the main ``doc/classes`` directory."
msgstr ""
"``get_doc_path()`` fonksiyonu derleme sistemi tarafından belgelerin yerini "
"belirlemek için kullanılır. Bu durumda, ``modules/summator/doc_classes`` "
"dizininde yer alacaklardır. Bunu tanımlamazsanız, modülünüz için belgeler "
"yolu ana ``doc/classes`` dizinine geri düşecektir."

msgid ""
"The ``get_doc_classes()`` method is necessary for the build system to know "
"which registered classes belong to the module. You need to list all of your "
"classes here. The classes that you don't list will end up in the main ``doc/"
"classes`` directory."
msgstr ""
"``get_doc_classes()`` yöntemi, derleme sisteminin hangi kayıtlı sınıfların "
"modüle ait olduğunu bilebilmesi için gereklidir. Tüm sınıflarınızı burada "
"listelemeniz gerekir. Listelemediğiniz sınıflar ana ``doc/classes`` "
"dizininde yer alacaktır."

msgid "Now we can generate the documentation:"
msgstr "Şimdi belgeleri oluşturabiliriz:"

msgid ""
"We can do this via running Godot's doctool i.e. ``godot --doctool <path>``, "
"which will dump the engine API reference to the given ``<path>`` in XML "
"format."
msgstr ""
"Bunu Godot'nun doctool belge aracını çalıştırarak yapabiliriz, yani ``godot "
"--doctool <path>``, ve bu motor API başvurusunu verilen ``<path>`` adresine "
"XML formatında dökümleyecektir."

msgid ""
"In our case we'll point it to the root of the cloned repository. You can "
"point it to an another folder, and just copy over the files that you need."
msgstr ""
"Bizim durumumuzda bunu klonlanmış deponun kök dizinine yönlendireceğiz. Siz "
"başka bir klasöre yönlendirebilir ve sadece ihtiyacınız olan dosyaları "
"kopyalayabilirsiniz."

msgid "Run command:"
msgstr "Şu komutu çalıştırın:"

msgid ""
"Now if you go to the ``godot/modules/summator/doc_classes`` folder, you will "
"see that it contains a ``Summator.xml`` file, or any other classes, that you "
"referenced in your ``get_doc_classes`` function."
msgstr ""
"Şimdi ``godot/modules/summator/doc_classes`` klasörüne giderseniz, "
"``get_doc_classes`` fonksiyonunuzda referans verdiğiniz bir ``Summator.xml`` "
"dosyası, veya diğer herhangi sınıfları, içerdiğini göreceksiniz."

msgid ""
"Edit the file(s) following :ref:`doc_class_reference_primer` and recompile "
"the engine."
msgstr ""
"Bu dosya(lar)ı :ref:`doc_class_reference_primer` bölümünü takip ederek "
"düzenleyin ve motoru yeniden derleyin."

msgid ""
"Once the compilation process is finished, the docs will become accessible "
"within the engine's built-in documentation system."
msgstr ""
"Derleme işlemi tamamlandığında, belgeler motorun yerleşik dokümantasyon "
"sistemi içinde erişilebilir hale gelecektir."

msgid ""
"In order to keep documentation up-to-date, all you'll have to do is simply "
"modify one of the XML files and recompile the engine from now on."
msgstr ""
"Belgeleri güncel tutmak için bundan sonra tek yapmanız gereken XML "
"dosyalarından birini değiştirmek ve motoru yeniden derlemektir."

msgid ""
"If you change your module's API, you can also re-extract the docs, they will "
"contain the things that you previously added. Of course if you point it to "
"your godot folder, make sure you don't lose work by extracting older docs "
"from an older engine build on top of the newer ones."
msgstr ""
"Modülünüzün API'sini değiştirirseniz, dokümanları yeniden çıkarabilirsiniz, "
"daha önce eklediğiniz şeyleri de içereceklerdir. Elbette godot klasörünüze "
"yönlendirirseniz, daha eski bir motor yapısından daha yeni olanların üzerine "
"eski belgeleri çıkararak çalışmanızı kaybetmediğinizden emin olun."

msgid ""
"Note that if you don't have write access rights to your supplied ``<path>``, "
"you might encounter an error similar to the following:"
msgstr ""
"Sağladığınız ``<path>`` için yazma erişim haklarınız yoksa, aşağıdakine "
"benzer bir hatayla karşılaşabileceğinizi unutmayın:"

msgid "Writing custom unit tests"
msgstr "Özel birim testleri yazma"

msgid ""
"It's possible to write self-contained unit tests as part of a C++ module. If "
"you are not familiar with the unit testing process in Godot yet, please "
"refer to :ref:`doc_unit_testing`."
msgstr ""
"Bir C++ modülünün parçası olarak bağımsız birim testleri yazmak mümkündür. "
"Godot'da birim test sürecine henüz aşina değilseniz, "
"lütfen :ref:`doc_unit_testing` sayfasına bakın."

msgid "The procedure is the following:"
msgstr "Prosedür aşağıdaki gibidir:"

msgid "Create a new directory named ``tests/`` under your module's root:"
msgstr ""
"Modülünüzün kök dizini altında ``tests/`` adında yeni bir dizin oluşturun:"

msgid ""
"Create a new test suite: ``test_summator.h``. The header must be prefixed "
"with ``test_`` so that the build system can collect it and include it as "
"part of the ``tests/test_main.cpp`` where the tests are run."
msgstr ""
"Yeni bir test paketi oluşturun: ``test_summator.h``. Başlığın başına "
"``test_`` eklenmelidir, böylece derleme sistemi onu toplayabilir ve "
"testlerin çalıştırıldığı ``tests/test_main.cpp`` dosyasının bir parçası "
"olarak dahil edebilir."

msgid "Write some test cases. Here's an example:"
msgstr "Bazı test senaryoları yazın. İşte bir örnek:"

msgid ""
"Compile the engine with ``scons tests=yes``, and run the tests with the "
"following command:"
msgstr ""
"Motoru ``scons tests=yes`` ile derleyin ve aşağıdaki komutla testleri "
"çalıştırın:"

msgid "You should see the passing assertions now."
msgstr "Şimdi bildirmelerin geçtiğini görmelisiniz."

msgid "Adding custom editor icons"
msgstr "Özel düzenleyici simgeleri ekleme"

msgid ""
"Similarly to how you can write self-contained documentation within a module, "
"you can also create your own custom icons for classes to appear in the "
"editor."
msgstr ""
"Bir modül içinde bağımsız belgeler yazabilmenize benzer şekilde, "
"düzenleyicide görünecek sınıflar için kendi özel simgelerinizi de "
"oluşturabilirsiniz."

msgid ""
"For the actual process of creating editor icons to be integrated within the "
"engine, please refer to :ref:`doc_editor_icons` first."
msgstr ""
"Motora entegre edilecek düzenleyici simgelerini oluşturma süreci için lütfen "
"önce :ref:`doc_editor_icons` sayfasına bakın."

msgid "Once you've created your icon(s), proceed with the following steps:"
msgstr "Simge(ler)inizi oluşturduktan sonra aşağıdaki adımlarla devam edin:"

msgid ""
"Make a new directory in the root of the module named ``icons``. This is the "
"default path for the engine to look for module's editor icons."
msgstr ""
"Modülün kök dizininde ``icons`` adında yeni bir dizin oluşturun. Bu, motorun "
"modülün düzenleyici simgelerini araması için varsayılan yoldur."

msgid ""
"Move your newly created ``svg`` icons (optimized or not) into that folder."
msgstr ""
"Yeni oluşturduğunuz ``svg`` simgelerinizi (optimize edilmiş veya edilmemiş) "
"bu klasöre taşıyın."

msgid ""
"Recompile the engine and run the editor. Now the icon(s) will appear in "
"editor's interface where appropriate."
msgstr ""
"Motoru yeniden derleyin ve düzenleyiciyi tekrar çalıştırın. Artık simge(ler) "
"düzenleyicinin arayüzünde uygun yerlerde görünecektir."

msgid ""
"If you'd like to store your icons somewhere else within your module, add the "
"following code snippet to ``config.py`` to override the default path:"
msgstr ""
"Simgelerinizi modülünüz içinde başka bir yerde saklamak isterseniz, "
"varsayılan yolun üzerine yazmak için aşağıdaki kod parçacığını ``config.py`` "
"dosyasına ekleyin:"

msgid "Summing up"
msgstr "Özetlemek gerekirse"

msgid "Remember to:"
msgstr "Şunları unutmayın:"

msgid "Use ``GDCLASS`` macro for inheritance, so Godot can wrap it."
msgstr ""
"Kalıtım için ``GDCLASS`` makrosunu kullanın, böylece Godot onu sarabilir."

msgid ""
"Use ``_bind_methods`` to bind your functions to scripting, and to allow them "
"to work as callbacks for signals."
msgstr ""
"Fonksiyonlarınızı komut dosyasına bağlamak ve sinyaller için geriçağrı "
"olarak çalışmalarına izin vermek için ``_bind_methods`` kullanın."

msgid ""
"**Avoid multiple inheritance for classes exposed to Godot**, as ``GDCLASS`` "
"doesn't support this. You can still use multiple inheritance in your own "
"classes as long as they're not exposed to Godot's scripting API."
msgstr ""
"**Godot'ya açılan sınıflar için çoklu kalıtımdan kaçının**, çünkü "
"``GDCLASS`` bunu desteklemez. Godot'nun betik API'sine açılmadıkları sürece "
"kendi sınıflarınızda çoklu kalıtımı kullanmaya devam edebilirsiniz."

msgid ""
"But this is not all, depending what you do, you will be greeted with some "
"(hopefully positive) surprises."
msgstr ""
"Ancak hepsi bu kadar değil, ne yaptığınıza bağlı olarak, bazı (umarım "
"olumlu) sürprizlerle karşılaşacaksınız."

msgid ""
"If you inherit from :ref:`class_Node` (or any derived node type, such as "
"Sprite2D), your new class will appear in the editor, in the inheritance tree "
"in the \"Add Node\" dialog."
msgstr ""
":ref:`class_Node` düğüm sınıfından (veya Sprite2D gibi türetilmiş herhangi "
"bir düğüm tipinden) miras alırsanız, yeni sınıfınız düzenleyicide, \"Düğüm "
"Ekle\" iletişim kutusundaki miras ağacında görünecektir."

msgid ""
"If you inherit from :ref:`class_Resource`, it will appear in the resource "
"list, and all the exposed properties can be serialized when saved/loaded."
msgstr ""
":ref:`class_Resource` kaynak sınıfından miras alırsanız, yeni sınıfınız "
"kaynak listesinde görünecek ve kaydedildiğinde/yüklendiğinde tüm açılmış "
"özellikler serileştirilebilecektir."

msgid ""
"By this same logic, you can extend the Editor and almost any area of the "
"engine."
msgstr ""
"Aynı mantıkla, Düzenleyici ve motorun neredeyse her alanını "
"genişletebilirsiniz."
