#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "Giriş"

msgid ""
"This series is a collection of best practices to help you work efficiently "
"with Godot."
msgstr ""
"Bu seri, Godot'da verimli bir şekilde çalışmak için uygulanan iyi "
"pratiklerin bir derlemesidir."

msgid ""
"Godot allows for a great amount of flexibility in how you structure a "
"project's codebase and break it down into scenes. Each approach has its pros "
"and cons, and they can be hard to weigh until you've worked with the engine "
"for long enough."
msgstr ""
"Godot, size projenizin kod tabanını nasıl planlayacağınız ve onu sahnelere "
"nasıl böleceğiniz hakkında bolca esneklik sunar. Her yöntemin kendi çapında "
"artıları ve eksileri vardır, motoru yeterince uzun kullanmadığınız sürece "
"bunların ölçülmesi ve tartılması zor olabilir."

msgid ""
"There are always many ways to structure your code and solve specific "
"programming problems. It would be impossible to cover them all here."
msgstr ""
"Her zaman kodunuzu yapılandırmanın ve belirli programlama sorunlarını "
"çözmenin birçok yolu mevcuttur. Hepsine burada değinmek mümkün değildir."

msgid ""
"That is why each article starts from a real-world problem. We will break "
"down each problem in fundamental questions, suggest solutions, analyze the "
"pros and cons of each option, and highlight the best course of action for "
"the problem at hand."
msgstr ""
"Bu nedenle her makale gerçek dünyada karşılaşabileceğimiz bir sorundan "
"başlıyor. Her sorunu temel soru biçiminde inceleyeceğiz, çözümler "
"önereceğiz, her seçeneğin artı ve eksilerini analiz edip eldeki sorun için "
"en iyi eylemi vurgulayacağız."

msgid ""
"You should start by reading :ref:`doc_what_are_godot_classes`. It explains "
"how Godot's nodes and scenes relate to classes and objects in other Object-"
"Oriented programming languages. It will help you make sense of the rest of "
"the series."
msgstr ""
"İşe :ref:`doc_what_are_godot_classes` dosyasını okuyarak başlamalısınız. Bu, "
"Godot'nun düğümlerinin ve sahnelerinin diğer Nesne-Yönelimli programlama "
"dillerindeki sınıflar ve nesnelerle nasıl ilişkili olduğunu açıklar. Serinin "
"geri kalanını anlamanıza yardımcı olacaktır."

msgid ""
"The best practices in Godot rely on Object-Oriented design principles. We "
"use tools like the `single responsibility <https://en.wikipedia.org/wiki/"
"Single_responsibility_principle>`_ principle and `encapsulation <https://en."
"wikipedia.org/wiki/Encapsulation_(computer_programming)>`_."
msgstr ""
"Godot'daki en iyi pratikler Nesne-Yönelimli tasarım ilkelerine dayanır. `Tek "
"sorumluluk (single responsibility) <https://en.wikipedia.org/wiki/"
"Single_responsibility_principle>`_ ilkesi ve `sarmalama "
"(encapsulation)<https://en.wikipedia.org/wiki/"
"Encapsulation_(computer_programming)>`_ gibi araçlar kullanıyoruz."
