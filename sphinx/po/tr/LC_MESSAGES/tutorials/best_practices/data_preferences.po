#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Data preferences"
msgstr "Veri tercihleri"

msgid ""
"Ever wondered whether one should approach problem X with data structure Y or "
"Z? This article covers a variety of topics related to these dilemmas."
msgstr ""
"Hiç X problemine, Y veya Z veri yapısı ile mi yaklaşmak gerektiğini merak "
"ettiniz mi? Bu makale, bu ikilemlerle ilgili çeşitli konuları kapsamaktadır."

msgid ""
"This article makes references to \"[something]-time\" operations. This "
"terminology comes from algorithm analysis' `Big O Notation <https://rob-"
"bell.net/2009/06/a-beginners-guide-to-big-o-notation/>`_."
msgstr ""
"Bu makale \"[bir şey]-zaman\" işlemlerine atıfta bulunmaktadır. Bu "
"terminoloji, algoritma analizindeki`Büyük O Notasyonu <https://rob-bell.net/"
"2009/06/a-beginners-guide-to-big-o-notation/>`_ 'ndan gelmektedir."

msgid ""
"Long-story short, it describes the worst-case scenario of runtime length. In "
"laymen's terms:"
msgstr ""
"Uzun lafın kısası, çalışma zamanı süresi uzunluğunun en kötü durumunu "
"tanımlar. Daha basit bir ifadeyle:"

msgid ""
"\"As the size of a problem domain increases, the runtime length of the "
"algorithm...\""
msgstr ""
"\"Bir problem kapsama alanının boyutu arttıkça, algoritmanın çalışma zamanı "
"süresi uzunluğu...\""

msgid "Constant-time, ``O(1)``: \"...does not increase.\""
msgstr "Sabit-zamanlı, ``O(1)``: \"...artmaz.\""

msgid "Logarithmic-time, ``O(log n)``: \"...increases at a slow rate.\""
msgstr "Logaritmik-zaman, ``O(log n)``: \"...yavaş bir oranda artar.\""

msgid "Linear-time, ``O(n)``: \"...increases at the same rate.\""
msgstr "Doğrusal-zaman, ``O(n)``: \"...aynı oranda artar.\""

msgid "Etc."
msgstr "vb."

msgid ""
"Imagine if one had to process 3 million data points within a single frame. "
"It would be impossible to craft the feature with a linear-time algorithm "
"since the sheer size of the data would increase the runtime far beyond the "
"time allotted. In comparison, using a constant-time algorithm could handle "
"the operation without issue."
msgstr ""
"Tek bir kare içinde 3 milyon veri noktasının işlenmesi gerektiğini düşünün. "
"Verilerin büyüklüğü çalışma süresini ayrılan sürenin çok ötesine "
"taşıyacağından, bu özelliği doğrusal-zamanlı bir algoritma ile oluşturmak "
"imkansız olurdu. Buna karşılık, sabit-zamanlı bir algoritma kullanmak işlemi "
"sorunsuz bir şekilde halledebilir."

msgid ""
"By and large, developers want to avoid engaging in linear-time operations as "
"much as possible. But, if one keeps the scale of a linear-time operation "
"small, and if one does not need to perform the operation often, then it may "
"be acceptable. Balancing these requirements and choosing the right "
"algorithm / data structure for the job is part of what makes programmers' "
"skills valuable."
msgstr ""
"Genel olarak, geliştiriciler doğrusal-zamanlı işlemlerden mümkün olduğunca "
"kaçınmak isterler. Ancak, doğrusal zamanlı bir işlemin ölçeği küçük "
"tutulursa ve işlemin çok sık yapılması gerekmiyorsa, o zaman kabul "
"edilebilir olabilir. Bu gereksinimleri dengelemek ve iş için doğru "
"algoritmayı / veri yapısını seçmek, programcıların becerilerini değerli "
"kılan şeyin bir parçasıdır."

msgid "Array vs. Dictionary vs. Object"
msgstr "Dizi ve Sözlük ve Nesne Karşılaştırması"

msgid ""
"Godot stores all variables in the scripting API in the :ref:`Variant "
"<doc_variant_class>` class. Variants can store Variant-compatible data "
"structures such as :ref:`Array <class_Array>` and :ref:`Dictionary "
"<class_Dictionary>` as well as :ref:`Objects <class_Object>`."
msgstr ""
"Godot, kodlama API'sindeki tüm değişkenleri :ref:`Variant "
"<doc_variant_class>` değişen sınıfında saklar. Variant'lar, :ref:`Array "
"<class_Array>` ve :ref:`Dictionary <class_Dictionary>` (dizi ve sözlük) gibi "
"Variant uyumlu veri yapılarının yanı sıra :ref:`Object <class_Object>` "
"(nesne) 'ler de depolayabilir."

msgid ""
"Godot implements Array as a ``Vector<Variant>``. The engine stores the Array "
"contents in a contiguous section of memory, i.e. they are in a row adjacent "
"to each other."
msgstr ""
"Godot, Array 'i bir ``Vector<Variant>`` (vektör) olarak uyarlar. Motor, "
"Array içeriklerini belleğin bitişik bir bölümünde saklar, yani birbirlerine "
"bitişik bir sırada bulunurlar."

msgid ""
"For those unfamiliar with C++, a Vector is the name of the array object in "
"traditional C++ libraries. It is a \"templated\" type, meaning that its "
"records can only contain a particular type (denoted by angled brackets). So, "
"for example, a :ref:`PackedStringArray <class_PackedStringArray>` would be "
"something like a ``Vector<String>``."
msgstr ""
"C++'a aşina olmayanlar için, bir Vector, geleneksel C++ kütüphanelerindeki "
"dizi nesnesinin adıdır. \"Şablonlanmış\" bir türdür, yani kayıtları yalnızca "
"belirli bir türü (üçgen parantezler \"<>\" ile gösterilir) içerebilir. "
"Örneğin, bir :ref:`PackedStringArray <class_PackedStringArray>` bir "
"``Vector<String>`` gibi bir şey olacaktır."

msgid "Contiguous memory stores imply the following operation performance:"
msgstr "Bitişik bellek depoları aşağıdaki işlem performansı anlamına gelir:"

msgid "**Iterate:** Fastest. Great for loops."
msgstr "**Yineleme:** En hızlısı. Döngüler için harika."

msgid "Op: All it does is increment a counter to get to the next record."
msgstr "Op: Tek yaptığı bir sonraki kayda ulaşmak için bir sayacı artırmaktır."

msgid "**Insert, Erase, Move:** Position-dependent. Generally slow."
msgstr "**Ekleme, Silme, Taşıma:** Pozisyona bağlı. Genellikle yavaştır."

msgid ""
"Op: Adding/removing/moving content involves moving the adjacent records over "
"(to make room / fill space)."
msgstr ""
"Op: İçerik ekleme/kaldırma/taşıma işlemi, bitişik kayıtların taşınmasını "
"(yer açmak/boşluk doldurmak için) içerir."

msgid "Fast add/remove *from the end*."
msgstr "*Sondan* hızlı ekleme/çıkarma."

msgid "Slow add/remove *from an arbitrary position*."
msgstr "Keyfi bir konumdan *yavaş ekleme/çıkarma*."

msgid "Slowest add/remove *from the front*."
msgstr "En yavaş ekleme/çıkarma *önden*."

msgid "If doing many inserts/removals *from the front*, then..."
msgstr "Eğer *önden* çok sayıda ekleme/çıkarma yapıyorsanız, o zaman..."

msgid "invert the array."
msgstr "diziyi ters çevirin."

msgid "do a loop which executes the Array changes *at the end*."
msgstr "Dizi değişikliklerini *sondan* yürüten bir döngü yapın."

msgid "re-invert the array."
msgstr "diziyi yeniden ters çevirin."

msgid ""
"This makes only 2 copies of the array (still constant time, but slow) versus "
"copying roughly 1/2 of the array, on average, N times (linear time)."
msgstr ""
"Bu, dizinin kabaca 1/2'sini ortalama N kez (doğrusal-zaman) kopyalamaya "
"karşı, dizinin yalnızca 2 kopyasını yapar (hala sabit-zaman, ancak yavaş)."

msgid ""
"**Get, Set:** Fastest *by position*. E.g. can request 0th, 2nd, 10th record, "
"etc. but cannot specify which record you want."
msgstr ""
"**Alma, Ayarlama:** *Pozisyona göre* en hızlı. Örneğin, 0., 2., 10. kaydı "
"vb. isteyebilir ancak hangi kaydı istediğinizi belirtemezsiniz."

msgid "Op: 1 addition operation from array start position up to desired index."
msgstr ""
"Op: Dizi başlangıç konumundan istenen indeksine kadar 1 toplama işlemi."

msgid "**Find:** Slowest. Identifies the index/position of a value."
msgstr "**Bulma:** En yavaş. Bir değerin indeksini/konumunu belirler."

msgid ""
"Op: Must iterate through array and compare values until one finds a match."
msgstr ""
"Op: Bir eşleşme bulana kadar dizi boyunca yinelemeli ve değerleri "
"karşılaştırmalıdır."

msgid ""
"Performance is also dependent on whether one needs an exhaustive search."
msgstr ""
"Performans, kapsamlı bir aramaya ihtiyaç duyulup duyulmadığına da bağlıdır."

msgid ""
"If kept ordered, custom search operations can bring it to logarithmic time "
"(relatively fast). Laymen users won't be comfortable with this though. Done "
"by re-sorting the Array after every edit and writing an ordered-aware search "
"algorithm."
msgstr ""
"Sıralanmış tutulursa, özel arama işlemleri bunu logaritmik-zamana (nispeten "
"hızlı) çekebilir. Ancak sıradan kullanıcılar bu konuda rahat olmayacaktır. "
"Her düzenlemeden sonra Diziyi yeniden sıralayarak ve sıraya duyarlı bir "
"arama algoritması yazarak yapılır."

msgid ""
"Hashes are to reduce the chance of a key collision. If one occurs, the table "
"must recalculate another index for the value that takes the previous "
"position into account. In all, this results in constant-time access to all "
"records at the expense of memory and some minor operational efficiency."
msgstr ""
"Hash'ler anahtar çakışması olasılığını azaltmak içindir. Bir çakışma meydana "
"gelirse tablo, değer için önceki konumu dikkate alan başka bir indeksi "
"yeniden hesaplamalıdır. Sonuç olarak bu, bellek artışı ve bazı küçük "
"operasyonel verimlilik pahasına tüm kayıtlara-sabit zamanlı erişim sağlar."

msgid "Hashing every key an arbitrary number of times."
msgstr "Her anahtarın rastgele bir sayıda sağlamasının yapılması."

msgid ""
"Hash operations are constant-time, so even if an algorithm must do more than "
"one, as long as the number of hash calculations doesn't become too dependent "
"on the density of the table, things will stay fast. Which leads to..."
msgstr ""
"Sağlama işlemleri sabit-zamanlıdır, bu nedenle bir algoritma birden "
"fazlasını yapmak zorunda olsa bile, sağlama hesaplamalarının sayısı tablonun "
"yoğunluğuna çok bağlı hale gelmediği sürece işler hızlı kalacaktır. Bu da şu "
"sonucu doğurur."

msgid "Maintaining an ever-growing size for the table."
msgstr "Tablo için sürekli-büyüyen bir boyutun korunması."

msgid ""
"HashMaps maintain gaps of unused memory interspersed in the table on purpose "
"to reduce hash collisions and maintain the speed of accesses. This is why it "
"constantly increases in size exponentially by powers of 2."
msgstr ""
"HashMap'ler, sağlama çarpışmalarını azaltmak ve erişim hızını korumak için "
"tabloya serpiştirilmiş kullanılmayan bellek boşluklarını korur. Bu nedenle "
"boyutu sürekli olarak 2'nin kuvvetleriyle katlanarak artar."

msgid ""
"As one might be able to tell, Dictionaries specialize in tasks that Arrays "
"do not. An overview of their operational details is as follows:"
msgstr ""
"Anlaşılabileceği gibi, Sözlükler Dizilerin yapmadığı görevlerde "
"uzmanlaşmıştır. Operasyonel ayrıntılarına genel bir bakış aşağıdaki gibidir:"

msgid "**Iterate:** Fast."
msgstr "**Yineleme:** Hızlı."

msgid ""
"Op: Iterate over the map's internal vector of hashes. Return each key. "
"Afterwards, users then use the key to jump to and return the desired value."
msgstr ""
"Op: Haritanın dahili sağlama vektörü üzerinde yineleme yapar. Her bir "
"anahtarı döndürür. Daha sonra, kullanıcılar istenen değere atlamak ve geri "
"dönmek için anahtarı kullanırlar."

msgid "**Insert, Erase, Move:** Fastest."
msgstr "**Ekleme, Silme, Taşıma:** En hızlı."

msgid ""
"Op: Hash the given key. Do 1 addition operation to look up the appropriate "
"value (array start + offset). Move is two of these (one insert, one erase). "
"The map must do some maintenance to preserve its capabilities:"
msgstr ""
"Op: Verilen anahtarın sağlamasını üretir. Uygun değeri aramak için 1 toplama "
"işlemi yapar (dizi başlangıcı + kayması). Taşıma bunlardan iki tanesidir "
"(bir ekleme, bir silme). Harita, yeteneklerini korumak için bazı bakımlar "
"yapmalıdır:"

msgid "update ordered List of records."
msgstr "Sıralı kayıt listesini günceller."

msgid "determine if table density mandates a need to expand table capacity."
msgstr ""
"tablo yoğunluğunun tablo kapasitesinin artırılmasını gerektirip "
"gerektirmediğini belirler."

msgid ""
"The Dictionary remembers in what order users inserted its keys. This enables "
"it to execute reliable iterations."
msgstr ""
"Sözlük, kullanıcıların anahtarlarını hangi sırayla eklediğini hatırlar. Bu, "
"güvenilir yinelemeler gerçekleştirmesini sağlar."

msgid "**Get, Set:** Fastest. Same as a lookup *by key*."
msgstr "**Alma, Ayarlama:** En hızlısı. * Anahtara göre* arama ile aynıdır."

msgid "Op: Same as insert/erase/move."
msgstr "Op: Ekleme/silme/taşıma ile aynıdır."

msgid "**Find:** Slowest. Identifies the key of a value."
msgstr "**Bulma:** En yavaş. Bir değerin anahtarını belirler."

msgid ""
"Op: Must iterate through records and compare the value until a match is "
"found."
msgstr ""
"Op: Kayıtlar arasında yineleme yapmalı ve bir eşleşme bulunana kadar değeri "
"karşılaştırmalıdır."

msgid ""
"Note that Godot does not provide this feature out-of-the-box (because they "
"aren't meant for this task)."
msgstr ""
"Godot'un bu özelliği kutuda-kullanıma-hazır olarak sunmadığını unutmayın "
"(çünkü bu görev için tasarlanmamışlardır)."

msgid ""
"Godot implements Objects as stupid, but dynamic containers of data content. "
"Objects query data sources when posed questions. For example, to answer the "
"question, \"do you have a property called, 'position'?\", it might ask "
"its :ref:`script <class_Script>` or the :ref:`ClassDB <class_ClassDB>`. One "
"can find more information about what objects are and how they work in "
"the :ref:`doc_what_are_godot_classes` article."
msgstr ""
"Godot, Object'leri (nesne) aptal ama dinamik veri içeriği taşıyıcıları "
"olarak uyarlar. Object'ler soru sorulduğunda veri kaynaklarını sorgular. "
"Örneğin, \"'position' adında bir özelliğin var mı?\" sorusunu yanıtlamak "
"için kendi :ref:`script'ine<class_Script>` veya :ref:`ClassDB 'sine "
"<class_ClassDB>` sorabilir. Nesnelerin ne olduğu ve nasıl çalıştıkları "
"hakkında daha fazla bilgiyi :ref:`doc_what_are_godot_classes` makalesinde "
"bulabilirsiniz."

msgid ""
"The important detail here is the complexity of the Object's task. Every time "
"it performs one of these multi-source queries, it runs through *several* "
"iteration loops and HashMap lookups. What's more, the queries are linear-"
"time operations dependent on the Object's inheritance hierarchy size. If the "
"class the Object queries (its current class) doesn't find anything, the "
"request defers to the next base class, all the way up until the original "
"Object class. While these are each fast operations in isolation, the fact "
"that it must make so many checks is what makes them slower than both of the "
"alternatives for looking up data."
msgstr ""
"Buradaki önemli ayrıntı, Nesnenin görevinin karmaşıklığıdır. Bu çok-kaynaklı "
"sorgulardan birini her gerçekleştirdiğinde, *birçok* yineleme döngüsü ve "
"HashMap taramasından geçer. Dahası, sorgular Nesnenin kalıtım hiyerarşisi "
"boyutuna bağlı olarak doğrusal-zamanlı işlemlerdir. Nesnenin sorguladığı "
"sınıf (kendi mevcut sınıfı) hiçbir şey bulamazsa, istek bir sonraki temel "
"sınıfa geçirilir ve bu orijinal Object sınıfına varana kadar devam eder . "
"Bunların her biri tek başına hızlı işlemler olsa da, bu kadar çok kontrol "
"yapması gerektiği gerçeği, bunları veri aramak için diğer iki alternatiften "
"daha yavaş yapan şeydir."

msgid ""
"When developers mention how slow the scripting API is, it is this chain of "
"queries they refer to. Compared to compiled C++ code where the application "
"knows exactly where to go to find anything, it is inevitable that scripting "
"API operations will take much longer. They must locate the source of any "
"relevant data before they can attempt to access it."
msgstr ""
"Geliştiriciler betik API'sinin ne kadar yavaş olduğundan bahsettiklerinde, "
"bu sorgu zincirini kastederler. Uygulamanın herhangi bir şeyi bulmak için "
"tam olarak nereye gideceğini bildiği derlenmiş C++ koduyla "
"karşılaştırıldığında, betik API'si işlemlerinin çok daha uzun sürmesi "
"kaçınılmazdır. İlgili verilere erişmeye çalışmadan önce bu verilerin "
"kaynağını bulmaları gerekir."

msgid ""
"The reason GDScript is slow is because every operation it performs passes "
"through this system."
msgstr ""
"GDScript'in yavaş olmasının nedeni, gerçekleştirdiği her işlemin bu "
"sistemden geçmesidir."

msgid ""
"C# can process some content at higher speeds via more optimized bytecode. "
"But, if the C# script calls into an engine class' content or if the script "
"tries to access something external to it, it will go through this pipeline."
msgstr ""
"C#, daha optimize edilmiş bayt kodu aracılığıyla bazı içerikleri daha yüksek "
"hızlarda işleyebilir. Ancak, C# betiği bir motor sınıfının içeriğini "
"çağırırsa veya betik kendisinin dışında kalan bir şeye erişmeye çalışırsa, "
"bu işlem hattından geçecektir."

msgid ""
"NativeScript C++ goes even further and keeps everything internal by default. "
"Calls into external structures will go through the scripting API. In "
"NativeScript C++, registering methods to expose them to the scripting API is "
"a manual task. It is at this point that external, non-C++ classes will use "
"the API to locate them."
msgstr ""
"NativeScript C++ daha da ileri gider ve varsayılan olarak her şeyi dahili "
"olarak tutar. Harici yapılara yapılan çağrılar, betik API'sinden geçecektir. "
"NativeScript C++'da, yöntemleri kodlama API'si kullanımına açmak için "
"kaydetmek elden yapılacak bir görevdir. Harici ve C++ olmayan sınıflar "
"API'yi, bunları bulmak için bu noktada kullanacaktır."

msgid ""
"So, assuming one extends from Reference to create a data structure, like an "
"Array or Dictionary, why choose an Object over the other two options?"
msgstr ""
"Peki şimdi, bir Array veya Dictionary gibi, bir veri yapısı oluşturmak için "
"Reference'dan genişletme yapıldığını varsayarsak, diğer iki seçenek yerine "
"neden Object'i seçelim?"

msgid ""
"**Control:** With objects comes the ability to create more sophisticated "
"structures. One can layer abstractions over the data to ensure the external "
"API doesn't change in response to internal data structure changes. What's "
"more, Objects can have signals, allowing for reactive behavior."
msgstr ""
"**Kontrol:** Nesnelerle birlikte daha karmaşık yapılar oluşturma yeteneği "
"gelir. Harici API'nin, dahili veri yapısı değişikliklerine karşılık "
"değişmemesini sağlamak için veriler üzerinde soyut katmanlar "
"oluşturulabilir. Dahası, Nesneler tepkisel davranışa izin veren sinyallere "
"sahip olabilir."

msgid ""
"**Clarity:** Objects are a reliable data source when it comes to the data "
"that scripts and engine classes define for them. Properties may not hold the "
"values one expects, but one doesn't need to worry about whether the property "
"exists in the first place."
msgstr ""
"**Açıklık:** Betiklerin ve motor sınıflarının kendileri için tanımladıkları "
"veriler söz konusu olduğunda Object'ler güvenilir birer veri kaynağıdır. "
"Özellikler beklenen değerleri tutmayabilir, ancak o özelliğin en baştan var "
"olup olmadığı konusunda endişelenmenize gerek yoktur."

msgid ""
"**Convenience:** If one already has a similar data structure in mind, then "
"extending from an existing class makes the task of building the data "
"structure much easier. In comparison, Arrays and Dictionaries don't fulfill "
"all use cases one might have."
msgstr ""
"**Kolaylık:** Akılda zaten benzer bir veri yapısı varsa, mevcut bir sınıftan "
"genişletmek veri yapısını oluşturma görevini çok daha kolay hale getirir. "
"Buna karşılık, Diziler ve Sözlükler sahip olunabilecek tüm kullanım "
"durumlarını karşılamaz."

msgid ""
"Objects also give users the opportunity to create even more specialized data "
"structures. With it, one can design their own List, Binary Search Tree, "
"Heap, Splay Tree, Graph, Disjoint Set, and any host of other options."
msgstr ""
"Nesneler ayrıca kullanıcılara daha da özel veri yapıları oluşturma fırsatı "
"verir. Bununla birlikte, kişi kendi Listesini (List), İkili Arama (Binary "
"Search) Ağacını, Yığınını (Heap), Yayvan (Splay) Ağacını, Grafiğini (Graph), "
"Ayrık Kümesini (Disjoint Set) ve diğer birçok seçeneği tasarlayabilir."

msgid ""
"\"Why not use Node for tree structures?\" one might ask. Well, the Node "
"class contains things that won't be relevant to one's custom data structure. "
"As such, it can be helpful to construct one's own node type when building "
"tree structures."
msgstr ""
"\"Ağaç/Tree yapıları için neden Düğüm/Node kullanılmıyor?\" diye "
"sorulabilir. Node sınıfı, kişinin özel veri yapısıyla ilgili olmayacak "
"şeyler içerir. Bu nedenle, ağaç yapıları oluştururken kişinin kendi düğüm "
"türünü oluşturması yararlı olabilir."

msgid ""
"From here, one can then create their own structures with specific features, "
"limited only by their imagination."
msgstr ""
"Buradan, kişi sadece hayal gücüyle sınırlı olarak belirli özelliklere sahip "
"kendi yapılarını oluşturabilir."

msgid "Enumerations: int vs. string"
msgstr "Numaralandırmalar: int ve string karşılaştırması"

msgid ""
"Most languages offer an enumeration type option. GDScript is no different, "
"but unlike most other languages, it allows one to use either integers or "
"strings for the enum values (the latter only when using the ``@export_enum`` "
"annotation in GDScript). The question then arises, \"which should one use?\""
msgstr ""
"Çoğu dil bir numaralandırma (enumeration) türü seçeneği sunar. GDScript de "
"farklı değildir, ancak diğer dillerin çoğundan farklı olarak, enum değerleri "
"için ya tamsayılar veya dizeler kullanılmasına izin verir (ikincisi yalnızca "
"GDScript'te ``@export_enum`` ek tanımlaması kullanıldığında). O zaman "
"\"hangisi kullanılmalı?\" sorusu ortaya çıkıyor"

msgid ""
"The short answer is, \"whichever you are more comfortable with.\" This is a "
"feature specific to GDScript and not Godot scripting in general; The "
"languages prioritizes usability over performance."
msgstr ""
"Kısa cevap, \"hangisinde daha rahat ederseniz\" şeklindedir. Bu, genel "
"olarak Godot betiklerine değil, sadece GDScript'e özgü bir özelliktir; "
"diller performanstan çok kullanılabilirliğe öncelik verir."

msgid ""
"On a technical level, integer comparisons (constant-time) will happen faster "
"than string comparisons (linear-time). If one wants to keep up other "
"languages' conventions though, then one should use integers."
msgstr ""
"Teknik düzeyde, tamsayı karşılaştırmaları (sabit-zamanlı) dize "
"karşılaştırmalarından (doğrusal-zamanlı) daha hızlı gerçekleşecektir. Eğer "
"diğer dillerin kurallarına uymak isteniyorsa, o zaman tamsayılar "
"kullanılmalıdır."

msgid ""
"The primary issue with using integers comes up when one wants to *print* an "
"enum value. As integers, attempting to print ``MY_ENUM`` will print ``5`` or "
"what-have-you, rather than something like ``\"MyEnum\"``. To print an "
"integer enum, one would have to write a Dictionary that maps the "
"corresponding string value for each enum."
msgstr ""
"Tamsayıların kullanılmasıyla ilgili temel sorun, bir numaralandırma "
"değerinin *yazdırılması* istendiğinde ortaya çıkar. Tamsayılar olduğunda, "
"``MY_ENUM`` değerini yazdırmaya çalışmak, ``\"MyEnum\"`` gibi bir şey yerine "
"``5`` veya ne-sayınız-varsa-onu yazdıracaktır. Bir tamsayı enum yazdırmak "
"için, her enum için karşılık gelen dize değerini haritalayan bir Sözlük "
"yazmak gerekir."

msgid ""
"If the primary purpose of using an enum is for printing values and one "
"wishes to group them together as related concepts, then it makes sense to "
"use them as strings. That way, a separate data structure to execute on the "
"printing is unnecessary."
msgstr ""
"Bir enum kullanmanın birincil amacı değerleri yazdırmaksa ve kişi bunları "
"birbirleriyle ilişkili kavramlar olarak gruplandırmak istiyorsa, bunları "
"dizeler olarak kullanmak mantıklıdır. Bu şekilde, yazdırma işlemini yürütmek "
"için ayrı bir veri yapısı kullanımı gereksiz olur."

msgid ""
"AnimatedTexture vs. AnimatedSprite2D vs. AnimationPlayer vs. AnimationTree"
msgstr ""
"CanlandırmaDoku, CanlandırmaResimcik2B, CanlandırmaOynatıcı ve "
"CanlandırmaAğacı karşılaştırması"

msgid ""
"Under what circumstances should one use each of Godot's animation classes? "
"The answer may not be immediately clear to new Godot users."
msgstr ""
"Godot'un canlandırma sınıflarının her biri hangi koşullar altında "
"kullanılmalıdır? Bu sorunun cevabı yeni Godot kullanıcıları için hemen açık "
"olmayabilir."

msgid ""
":ref:`AnimatedTexture <class_AnimatedTexture>` is a texture that the engine "
"draws as an animated loop rather than a static image. Users can manipulate..."
msgstr ""
":ref:`CanlandırmaDoku <class_AnimatedTexture>` motorun statik bir görüntü "
"yerine canlandırmalı bir döngü olarak çizdiği bir dokudur. Kullanıcılar "
"şunları değiştirebilir..."

msgid "the rate at which it moves across each section of the texture (FPS)."
msgstr "dokunun her bir bölümü boyunca hareket etme hızı (FPS)."

msgid "the number of regions contained within the texture (frames)."
msgstr "doku içinde bulunan bölgelerin sayısı (kareler)."

msgid ""
"Godot's :ref:`RenderingServer <class_RenderingServer>` then draws the "
"regions in sequence at the prescribed rate. The good news is that this "
"involves no extra logic on the part of the engine. The bad news is that "
"users have very little control."
msgstr ""
"Daha sonra Godot`nun :ref:`RenderingServer <class_RenderingServer>`ı "
"bölgeleri belirlenen hızda sırayla çizer. İyi haber, bunun motor açısından "
"fazladan bir mantık gerektirmemesidir. Kötü haber ise kullanıcıların çok az "
"kontrole sahip olmasıdır."

msgid ""
"AnimationPlayers are also the tool one will need to use if they wish to "
"design more complex 2D animation systems, such as..."
msgstr ""
"CanlandırmaOynatıcı'ları (AnimationPlayer) aynı zamanda, aşağıdaki gibi daha "
"karmaşık 2B canlandırma sistemleri tasarlamak isteyenlerin kullanması "
"gereken bir araçtır."

msgid "**Cut-out animations:** editing sprites' transforms at runtime."
msgstr ""
"**Kes-yapıştır canlandırmalar:** resimciklerin dönüşümlerini çalışma "
"zamanında düzenleme."

msgid ""
"**2D Mesh animations:** defining a region for the sprite's texture and "
"rigging a skeleton to it. Then one animates the bones which stretch and bend "
"the texture in proportion to the bones' relationships to each other."
msgstr ""
"**2B Örgü canlandırmalar:** resimciğin dokusu için bir bölge tanımlama ve "
"buna bir iskelet yerleştirme. Ardından, birbirleriyle olan ilişkileriyle "
"orantılı olarak kemikler, dokuyu esnetecek ve bükecek şekilde hareket "
"ettirilir."

msgid "A mix of the above."
msgstr "Yukarıdakilerin bir karışımı."

msgid ""
"While one needs an AnimationPlayer to design each of the individual "
"animation sequences for a game, it can also be useful to combine animations "
"for blending, i.e. enabling smooth transitions between these animations. "
"There may also be a hierarchical structure between animations that one plans "
"out for their object. These are the cases where the :ref:`AnimationTree "
"<class_AnimationTree>` shines. One can find an in-depth guide on using the "
"AnimationTree :ref:`here <doc_animation_tree>`."
msgstr ""
"Bir oyunda her bir canlandırma dizisini tasarlamak için bir "
"CanlandırmaOynatıcı'ya (AnimationPlayer) ihtiyaç duyulurken, canlandırmaları "
"harmanlamak için birleştirmek, mesela bu canlandırmalar arasında yumuşak "
"geçişler sağlamak da yararlı olabilir. Kişinin nesnesi için planladığı "
"canlandırmalar arasında hiyerarşik bir yapı da bulunabilir. "
"Bunlar :ref:`CanlandırmaAğacı <class_AnimationTree>`nın parladığı "
"durumlardır. CanlandırmaAğacı (AnimationTree) kullanımına ilişkin ayrıntılı "
"bir kılavuzu :ref:`burada <doc_animation_tree>` bulabilirsiniz."
