#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Autoloads versus regular nodes"
msgstr "Normal düğümlere karşı otomatik yüklenenler"

msgid ""
"Godot offers a feature to automatically load nodes at the root of your "
"project, allowing you to access them globally, that can fulfill the role of "
"a Singleton: :ref:`doc_singletons_autoload`. These autoloaded nodes are not "
"freed when you change the scene from code "
"with :ref:`SceneTree.change_scene_to_file "
"<class_SceneTree_method_change_scene_to_file>`."
msgstr ""
"Godot, Tekil nesne (singleton) rolünü yerine getirebilecek düğümleri "
"projenizin köküne otomatik olarak yüklemek için bir özellik sunar ve bunlara "
"genel olarak erişmenizi sağlar: :ref:`doc_singletons_autoload`. Bu otomatik "
"yüklenen düğümler, sahneyi :ref:`SceneTree.change_scene_to_file "
"<class_SceneTree_method_change_scene_to_file>` ile kod yoluyla "
"değiştirdiğinizde serbest bırakılmaz."

msgid ""
"In this guide, you will learn when to use the Autoload feature, and "
"techniques you can use to avoid it."
msgstr ""
"Bu rehberde, otomatik yükleme özelliğini ne zaman kullanmanız gerektiğini ve "
"bunu kullanmaktan kaçınmanızı sağlayacak teknikleri öğreneceksiniz."

msgid "The cutting audio issue"
msgstr "Sesi kesme sorunu"

msgid ""
"Other engines can encourage the use of creating manager classes, singletons "
"that organize a lot of functionality into a globally accessible object. "
"Godot offers many ways to avoid global state thanks to the node tree and "
"signals."
msgstr ""
"Diğer motorlar, genel olarak erişilebilir bir nesnede çok sayıda "
"işlevselliği düzenleyen birer tekil nesne olan yönetici sınıfları "
"oluşturmayı teşvik edebilir. Godot, düğüm ağacı ve sinyaller sayesinde genel "
"durum bilgisi tutmaktan kaçınmak için birçok yol sunar."

msgid ""
"For example, let's say we are building a platformer and want to collect "
"coins that play a sound effect. There's a node for that: "
"the :ref:`AudioStreamPlayer <class_AudioStreamPlayer>`. But if we call the "
"``AudioStreamPlayer`` while it is already playing a sound, the new sound "
"interrupts the first."
msgstr ""
"Örneğin, diyelim ki bir platform oyunu inşa ediyoruz ve ses efekti çaldıran "
"paraları toplamak istiyoruz. Bunun için bir düğüm "
"var: :ref:`AudioStreamPlayer <class_AudioStreamPlayer>`. Ancak "
"``AudioStreamPlayer`` zaten bir ses çalarken çağırırsak, yeni ses ilk sesi "
"yarıda keser."

msgid ""
"A solution is to code a global, autoloaded sound manager class. It generates "
"a pool of ``AudioStreamPlayer`` nodes that cycle through as each new request "
"for sound effects comes in. Say we call that class ``Sound``, you can use it "
"from anywhere in your project by calling "
"``Sound.play(\"coin_pickup.ogg\")``. This solves the problem in the short "
"term but causes more problems:"
msgstr ""
"Çözümü, genel ve otomatik yüklenen bir ses yöneticisi sınıfı kodlamaktır. Bu "
"sınıf, ses efektleri için her yeni istek geldiğinde döngüye giren "
"``AudioStreamPlayer`` düğümlerinden oluşan bir havuz oluşturur. Bu sınıfa "
"``Sound`` adını verdiğimizi varsayalım, projenizin herhangi bir yerinden "
"``Sound.play(\"coin_pickup.ogg\")`` çağrısı yaparak kullanabilirsiniz. Bu, "
"sorunu kısa vadede çözer ancak daha fazla soruna neden olur:"

msgid ""
"**Global state**: one object is now responsible for all objects' data. If "
"the ``Sound`` class has errors or doesn't have an AudioStreamPlayer "
"available, all the nodes calling it can break."
msgstr ""
"**Genel durum**: artık tüm nesnelerin verilerinden tek bir nesne sorumludur. "
"Eğer ``Sound`` sınıfında hata varsa veya boşta bir AudioStreamPlayer "
"bulunmazsa, onu çağıran tüm düğümler bozulabilir."

msgid ""
"**Global access**: now that any object can call ``Sound.play(sound_path)`` "
"from anywhere, there's no longer an easy way to find the source of a bug."
msgstr ""
"**Genel erişim**: Artık herhangi bir nesne herhangi bir yerden "
"``Sound.play(ses_yolu)`` çağrısı yapabildiğinden, bir hatanın kaynağını "
"bulmanın artık kolay bir yolu yoktur."

msgid ""
"**Global resource allocation**: with a pool of ``AudioStreamPlayer`` nodes "
"stored from the start, you can either have too few and face bugs, or too "
"many and use more memory than you need."
msgstr ""
"**Genel kaynak yer ayırması**: Başlangıçtan itibaren depolanan "
"``AudioStreamPlayer`` düğümlerinden oluşan bir havuzla, ya çok azına sahip "
"olabilir ve hatalarla karşılaşabilirsiniz ya da çok fazla olabilir ve "
"ihtiyacınız olandan daha fazla bellek kullanabilirsiniz."

msgid ""
"About global access, the problem is that any code anywhere could pass wrong "
"data to the ``Sound`` autoload in our example. As a result, the domain to "
"explore to fix the bug spans the entire project."
msgstr ""
"Genel erişimle ilgili sorun, herhangi bir yerdeki herhangi bir kodun "
"örneğimizdeki ``Sound`` otomatik yüklemesine yanlış veri aktarabilmesidir. "
"Sonuç olarak, hatayı düzeltmek için keşfedilecek alan tüm projeyi kapsar."

msgid ""
"When you keep code inside a scene, only one or two scripts may be involved "
"in audio."
msgstr ""
"Kodu bir sahnenin içinde tuttuğunuzda, ses için yalnızca bir veya iki betik "
"işe dahil olabilir."

msgid ""
"Contrast this with each scene keeping as many ``AudioStreamPlayer`` nodes as "
"it needs within itself and all these problems go away:"
msgstr ""
"Bunun aksine, her sahne kendi içinde ihtiyaç duyduğu kadar "
"``AudioStreamPlayer`` düğümü bulundurur ve tüm bu sorunlar ortadan kalkar:"

msgid ""
"Each scene manages its own state information. If there is a problem with the "
"data, it will only cause issues in that one scene."
msgstr ""
"Her sahne kendi durum bilgisini yönetir. Verilerde bir sorun varsa, bu "
"yalnızca o sahnede sorunlara neden olacaktır."

msgid ""
"Each scene accesses only its own nodes. Now, if there is a bug, it's easy to "
"find which node is at fault."
msgstr ""
"Her sahne yalnızca kendi düğümlerine erişir. Şimdi, eğer bir hata varsa, "
"hangi düğümün hatalı olduğunu bulmak kolaydır."

msgid "Each scene allocates exactly the amount of resources it needs."
msgstr "Her sahne tam olarak ihtiyaç duyduğu miktarda kaynak ayırır."

msgid "Managing shared functionality or data"
msgstr "Paylaşılan işlevleri veya verileri yönetme"

msgid ""
"Another reason to use an Autoload can be that you want to reuse the same "
"method or data across many scenes."
msgstr ""
"Otomatik Yükleme kullanmanın bir başka nedeni de aynı yöntemi veya verileri "
"birçok sahnede yeniden kullanmak istemeniz olabilir."

msgid ""
"In the case of functions, you can create a new type of ``Node`` that "
"provides that feature for an individual scene using the :ref:`class_name "
"<doc_gdscript_basics_class_name>` keyword in GDScript."
msgstr ""
"Fonksiyonlar söz konusu olduğunda, GDScript'te :ref:`class_name "
"<doc_gdscript_basics_class_name>` anahtar sözcüğünü kullanarak tek bir sahne "
"için bu özelliği sağlayan yeni bir ``Node`` türü düğüm oluşturabilirsiniz."

msgid "When it comes to data, you can either:"
msgstr "Veriler söz konusu olduğunda, ikisinden birini seçebilirsiniz:"

msgid ""
"Create a new type of :ref:`Resource <class_Resource>` to share the data."
msgstr ""
"Verileri paylaşmak için yeni bir :ref:`Resource <class_Resource>` tipi "
"kaynak oluşturun."

msgid ""
"Store the data in an object to which each node has access, for example using "
"the ``owner`` property to access the scene's root node."
msgstr ""
"Verileri her düğümün erişebileceği bir nesnede saklayın, örneğin sahnenin "
"kök düğümüne erişmek için ``owner`` özelliğini kullanın."

msgid "When you should use an Autoload"
msgstr "Otomatik Yüklemeyi ne zaman kullanmalısınız"

msgid ""
"GDScript supports the creation of ``static`` functions using ``static "
"func``. When combined with ``class_name``, this makes it possible to create "
"libraries of helper functions without having to create an instance to call "
"them. The limitation of static functions is that they can't reference member "
"variables, non-static functions or ``self``."
msgstr ""
"GDScript, ``static func`` kullanarak ``statik`` fonksiyonların "
"oluşturulmasını destekler. Bu, ``class_name`` ile birleştirildiğinde, onları "
"çağırmak için bir örnekleme oluşturmak zorunda kalmadan yardımcı fonksiyon "
"kütüphaneleri oluşturmayı mümkün kılar. Statik fonksiyonların sınırlaması, "
"üye değişkenlere, statik olmayan fonksiyonlara veya ``self``'e başvuru "
"yapamamalarıdır."

msgid ""
"Still, autoloaded nodes can simplify your code for systems with a wide "
"scope. If the autoload is managing its own information and not invading the "
"data of other objects, then it's a great way to create systems that handle "
"broad-scoped tasks. For example, a quest or a dialogue system."
msgstr ""
"Yine de otomatik yüklenen düğümler, geniş kapsamlı sistemler için kodunuzu "
"basitleştirebilir. Otomatik yükleme kendi bilgilerini yönetiyorsa ve diğer "
"nesnelerin verilerini işgal etmiyorsa, geniş kapsamlı görevleri yerine "
"getiren sistemler oluşturmanın harika bir yoludur. Örneğin, bir görev veya "
"diyalog sistemi."

msgid ""
"An autoload is *not* necessarily a singleton. Nothing prevents you from "
"instantiating copies of an autoloaded node. An autoload is only a tool that "
"makes a node load automatically as a child of the root of your scene tree, "
"regardless of your game's node structure or which scene you run, e.g. by "
"pressing the :kbd:`F6` key."
msgstr ""
"Otomatik yüklenen bir düğümün tekil nesne olması *gerekmez*. Hiçbir şey "
"otomatik yüklenen bir düğümün kopyalarını oluşturmanızı engellemez. Otomatik "
"yükleme, oyununuzun düğüm yapısından veya hangi sahneyi çalıştırdığınızdan "
"bağımsız olarak, örneğin :kbd:`F6` tuşuna basarak, yalnızca bir düğümün "
"sahne ağacınızın kökünün bir alt ögesi olarak otomatik olarak yüklenmesini "
"sağlayan bir araçtır."

msgid ""
"As a result, you can get the autoloaded node, for example an autoload called "
"``Sound``, by calling ``get_node(\"/root/Sound\")``."
msgstr ""
"Sonuç olarak otomatik yüklenen bir düğümü, örneğin ``Sound`` adlı bir "
"otomatik yüklemeyi , ``get_node(\"/root/Sound\")`` şeklinde çağrı yaparak "
"alabilirsiniz."
