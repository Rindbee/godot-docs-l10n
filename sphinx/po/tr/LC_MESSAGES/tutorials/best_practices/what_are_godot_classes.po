#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: tr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Applying object-oriented principles in Godot"
msgstr "Godot'da nesne-yönelimli ilkelerin uygulanması"

msgid ""
"The engine offers two main ways to create reusable objects: scripts and "
"scenes. Neither of these technically define classes under the hood."
msgstr ""
"Motor, tekrardan kullanılabilir nesneler oluşturmak için iki ana yöntem "
"sunar: betikler ve sahneler. Bunların ikisi de teknik olarak kaputun "
"altındaki sınıfları tanımlamaz."

msgid ""
"Still, many best practices using Godot involve applying object-oriented "
"programming principles to the scripts and scenes that compose your game. "
"That is why it's useful to understand how we can think of them as classes."
msgstr ""
"Yine de, Godot'yu kullanan birçok en iyi pratikler, oyununuzu oluşturan "
"betiklere ve sahnelere nesne-yönelimli programlama ilkelerini uygulamayı "
"içerir. Bu nedenle bunları nasıl sınıflar olarak düşünebileceğimizi anlamak "
"faydalı olacaktır."

msgid ""
"This guide briefly explains how scripts and scenes work in the engine's core "
"to help you understand how they work under the hood."
msgstr ""
"Bu rehber betiklerin ve sahnelerin motorun çekirdeğinde nasıl çalıştığını "
"kısaca anlatarak bunların nasıl işlediğini anlamanıza yardımcı olur."

msgid "How scripts work in the engine"
msgstr "Betikler motorda nasıl çalışır"

msgid ""
"The engine provides built-in classes like :ref:`Node <class_Node>`. You can "
"extend those to create derived types using a script."
msgstr ""
"Motor :ref:`Node <class_Node>` gibi yerleşik sınıflar sağlar. Bir betik "
"kullanarak türetilmiş tipler oluşturmak için bunları genişletebilirsiniz."

msgid ""
"These scripts are not technically classes. Instead, they are resources that "
"tell the engine a sequence of initializations to perform on one of the "
"engine's built-in classes."
msgstr ""
"Bu betikler teknik olarak birer sınıf değildir. Bunun yerine, motora, "
"motorun yerleşik sınıflarından birinde gerçekleştirilmesi için bir dizi ilk "
"değerleme işlemi veren kaynaklardır."

msgid ""
"Godot's internal classes have methods that register a class's data with a :"
"ref:`ClassDB <class_ClassDB>`. This database provides runtime access to "
"class information. ``ClassDB`` contains information about classes like:"
msgstr ""
"Godot'nun dahili sınıfları, bir sınıfın verilerini bir :ref:`ClassDB "
"<class_ClassDB>` ile kaydeden yöntemlere sahiptir. Bu veritabanı, sınıf "
"bilgilerine çalışma zamanı erişimi sağlar. ``ClassDB`` sınıflar hakkında "
"aşağıdaki gibi bilgiler içerir:"

msgid "Properties."
msgstr "Özellikler."

msgid "Methods."
msgstr "Yöntemler."

msgid "Constants."
msgstr "Sabitler."

msgid "Signals."
msgstr "Sinyaller."

msgid ""
"This ``ClassDB`` is what objects check against when performing an operation "
"like accessing a property or calling a method. It checks the database's "
"records and the object's base types' records to see if the object supports "
"the operation."
msgstr ""
"Bu ``ClassDB``, bir özelliğe erişmek veya bir yöntemi çağırmak gibi bir "
"işlem gerçekleştirirken nesnelerin kontrol ettiği şeydir. Nesnenin işlemi "
"destekleyip desteklemediğini görmek için veritabanının kayıtlarını ve "
"nesnenin temel türlerinin kayıtlarını kontrol eder."

msgid ""
"Attaching a :ref:`Script <class_Script>` to your object extends the methods, "
"properties, and signals available from the ``ClassDB``."
msgstr ""
"Nesnenize bir :ref:`Script <class_Script>` eklemek, ``ClassDB`` tarafından "
"kullanılabilen yöntemleri, özellikleri ve sinyalleri genişletir."

msgid ""
"Even scripts that don't use the ``extends`` keyword implicitly inherit from "
"the engine's base :ref:`RefCounted <class_RefCounted>` class. As a result, "
"you can instantiate scripts without the ``extends`` keyword from code. Since "
"they extend ``RefCounted`` though, you cannot attach them to a :ref:`Node "
"<class_Node>`."
msgstr ""
"``extends`` anahtar sözcüğünü kullanmayan kodlar bile motorun temel :ref:"
"`RefCounted <class_RefCounted>` sınıfından dolaylı olarak miras alır. Sonuç "
"olarak, koddan ``extends`` anahtar sözcüğü olmadan betikleri "
"örnekleyebilirsiniz. Ancak ``RefCounted`` ögesini genişlettikleri için, "
"bunları bir :ref:`Node <class_Node>` ögesine ekleyemezsiniz."

msgid "Scenes"
msgstr "Sahneler"

msgid ""
"The behavior of scenes has many similarities to classes, so it can make "
"sense to think of a scene as a class. Scenes are reusable, instantiable, and "
"inheritable groups of nodes. Creating a scene is similar to having a script "
"that creates nodes and adds them as children using ``add_child()``."
msgstr ""
"Sahnelerin davranışı sınıflarla birçok benzerlik gösterir, bu nedenle bir "
"sahneyi sınıf olarak düşünmek mantıklı olabilir. Sahneler yeniden "
"kullanılabilir, örneklenebilir ve miras alınabilir düğüm gruplarıdır. Bir "
"sahne oluşturmak, düğümler oluşturan ve ``add_child()`` kullanarak bunları "
"alt öge olarak ekleyen bir betiğe sahip olmaya benzer."

msgid ""
"We often pair a scene with a scripted root node that makes use of the "
"scene's nodes. As such, the script extends the scene by adding behavior "
"through imperative code."
msgstr ""
"Genellikle bir sahneyi, sahnenin düğümlerini kullanan bir betiklenmiş kök "
"düğüm ile eşleştiririz. Bu şekilde betik, emredici kod aracılığıyla davranış "
"ekleyerek sahneyi genişletir."

msgid "The content of a scene helps to define:"
msgstr "Bir sahnenin içerikleri aşağıdakilerin tanımlanmasında yardımcı olur:"

msgid "What nodes are available to the script."
msgstr "Hangi düğümlerin betikte kullanıma açık olduğu."

msgid "How they are organized."
msgstr "Nasıl düzenlendiği."

msgid "How they are initialized."
msgstr "Nasıl başlatıldıkları."

msgid "What signal connections they have with each other."
msgstr "Birbirleri arasında hangi sinyal bağlantılarının olduğu."

msgid ""
"Why is any of this important to scene organization? Because instances of "
"scenes *are* objects. As a result, many object-oriented principles that "
"apply to written code also apply to scenes: single responsibility, "
"encapsulation, and others."
msgstr ""
"Bunlar sahne düzenleri için neden önemlidir? Çünkü sahne örnekleri "
"*nesnedir*. Sonuç olarak, yazılı kod için geçerli olan birçok nesne-"
"yönelimli ilke sahneler için de geçerlidir: tek sorumluluk, sarmalama ve "
"diğerleri."

msgid ""
"The scene is *always an extension of the script attached to its root node*, "
"so you can interpret it as part of a class."
msgstr ""
"Sahne *her zaman kök düğümüne bağlı betiğin bir uzantısıdır*, bu nedenle onu "
"bir sınıfın parçası olarak yorumlayabilirsiniz."

msgid ""
"Most of the techniques explained in this best practices series build on this "
"point."
msgstr ""
"Bu en iyi pratikler serisinde açıklanan tekniklerin çoğu bu noktaya "
"dayanmaktadır."
