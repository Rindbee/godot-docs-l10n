#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "The Compositor"
msgstr "Der Kompositor"

msgid ""
"The compositor is a new feature in Godot 4 that allows control over the "
"rendering pipeline when rendering the contents of a :ref:`Viewport "
"<class_Viewport>`."
msgstr ""
"Der Kompositor ist ein neues Feature in Godot 4, das die Kontrolle über die "
"Rendering-Pipeline beim Rendern des Inhalts eines :ref:`Viewport "
"<class_Viewport>` ermöglicht."

msgid ""
"It can be configured on a :ref:`WorldEnvironment <class_WorldEnvironment>` "
"node where it applies to all Viewports, or it can be configured on "
"a :ref:`Camera3D <class_Camera3D>` and apply only to the Viewport using that "
"camera."
msgstr ""
"Er kann auf einem :ref:`WorldEnvironment <class_WorldEnvironment>`-Node "
"konfiguriert werden, wo er für alle Viewports gilt, oder er kann auf "
"einem :ref:`Camera3D <class_Camera3D>` konfiguriert werden und gilt nur für "
"den Viewport, der diese Kamera verwendet."

msgid ""
"The compositor is currently a feature that is only supported by the Mobile "
"and Forward+ renderers."
msgstr ""
"Der Kompositor ist derzeit eine Funktion, die nur von den Renderern Mobile "
"und Forward+ unterstützt wird."

msgid "Compositor effects"
msgstr "Kompositor-Effekte"

msgid ""
"Compositor effects allow you to insert additional logic into the rendering "
"pipeline at various stages. This is an advanced feature that requires a high "
"level of understanding of the rendering pipeline to use to its best "
"advantage."
msgstr ""
"Mit Kompositor-Effekten können Sie an verschiedenen Stellen zusätzliche "
"Logik in die Rendering-Pipeline einfügen. Dies ist eine fortgeschrittene "
"Funktion, die ein hohes Maß an Verständnis der Rendering-Pipeline erfordert, "
"um sie optimal zu nutzen."

msgid ""
"As the core logic of the compositor effect is called from the rendering "
"pipeline it is important to note that this logic will thus run within the "
"thread on which rendering takes place. Care needs to be taken to ensure we "
"don't run into threading issues."
msgstr ""
"Da die Kernlogik des Kompositor-Effekts von der Rendering-Pipeline "
"aufgerufen wird, ist es wichtig zu beachten, dass diese Logik innerhalb des "
"Threads ausgeführt wird, in dem das Rendering stattfindet. Es muss darauf "
"geachtet werden, dass es nicht zu Threading-Problemen kommt."

msgid ""
"To illustrate how to use compositor effects we'll create a simple post "
"processing effect that allows you to write your own shader code and apply "
"this full screen through a compute shader. You can find the finished demo "
"project `here <https://github.com/godotengine/godot-demo-projects/tree/"
"master/compute/post_shader>`_."
msgstr ""
"Zur Veranschaulichung der Verwendung von Kompositor-Effekten werden wir "
"einen einfachen Post-Processing-Effekt erstellen, der es Ihnen ermöglicht, "
"Ihren eigenen Shader-Code zu schreiben und diesen über einen Compute-Shader "
"bildschirmfüllend anzuwenden. Das fertige Demoprojekt finden Sie `hier "
"<https://github.com/godotengine/godot-demo-projects/tree/master/compute/"
"post_shader>`_."

msgid ""
"We start by creating a new script called ``post_process_shader.gd``. We'll "
"make this a tool script so we can see the compositor effect work in the "
"editor. We need to extend our node from :ref:`CompositorEffect "
"<class_CompositorEffect>`. We must also give our script a class name."
msgstr ""
"Wir beginnen mit der Erstellung eines neuen Skripts namens "
"``post_process_shader.gd``. Wir machen dies zu einem Tool-Skript, damit wir "
"die Auswirkung des Kompositor-Effekts im Editor sehen können. Wir müssen "
"unseren Node von :ref:`CompositorEffect <class_CompositorEffect>` erweitern. "
"Wir müssen unserem Skript auch einen Klassennamen geben."

msgid ""
"Next we're going to define a constant for our shader template code. This is "
"the boilerplate code that makes our compute shader work."
msgstr ""
"Als nächstes werden wir eine Konstante für unseren Shader-Vorlagencode "
"definieren. Dies ist der Standardcode, mit dem unser Compute-Shader "
"funktioniert."

msgid ""
"For more information on how compute shaders work, please check :ref:`Using "
"compute shaders <doc_compute_shaders>`."
msgstr ""
"Weitere Informationen über die Funktionsweise von Compute-Shadern finden Sie "
"in :ref:`Verwendung von Compute-Shadern <doc_compute_shaders>`."

msgid ""
"The important bit here is that for every pixel on our screen, our ``main`` "
"function is executed and inside of this we load the current color value of "
"our pixel, execute our user code, and write our modified color back to our "
"color image."
msgstr ""
"Der wichtige Teil hier ist, dass für jedes Pixel auf unserem Bildschirm "
"unsere ``Hauptfunktion`` ausgeführt wird, und innerhalb dieser laden wir den "
"aktuellen Farbwert unseres Pixels, führen unseren Anwendercode aus und "
"schreiben unsere geänderte Farbe zurück in unser Farbbild."

msgid "``#COMPUTE_CODE`` gets replaced by our user code."
msgstr "``#COMPUTE_CODE`` wird durch unseren Benutzercode ersetzt."

msgid ""
"In order to set our user code, we need an export variable. We'll also define "
"a few script variables we'll be using:"
msgstr ""
"Um unseren Benutzercode zu setzen, benötigen wir eine Exportvariable. Wir "
"werden auch einige Skriptvariablen definieren, die wir verwenden werden:"

msgid ""
"Note the use of a :ref:`Mutex <class_Mutex>` in our code. Most of our "
"implementation gets called from the rendering engine and thus runs within "
"our rendering thread."
msgstr ""
"Beachten Sie die Verwendung eines :ref:`Mutex <class_Mutex>` in unserem "
"Code. Der größte Teil unserer Implementierung wird von der Rendering-Engine "
"aufgerufen und läuft daher innerhalb unseres Rendering-Threads."

msgid ""
"We need to ensure that we set our new shader code, and mark our shader code "
"as dirty, without our render thread accessing this data at the same time."
msgstr ""
"Wir müssen sicherstellen, dass wir unseren neuen Shader-Code setzen und "
"unseren Shader-Code als \"dirty\" markieren, ohne dass unser Render-Thread "
"gleichzeitig auf diese Daten zugreift."

msgid "Next we initialize our effect."
msgstr "Als nächstes initialisieren wir unseren Effekt."

msgid ""
"The main thing here is setting our ``effect_callback_type`` which tells the "
"rendering engine at what stage of the render pipeline to call our code."
msgstr ""
"Die Hauptsache ist hier die Einstellung unseres ``effect_callback_type``, "
"welcher der Rendering-Engine mitteilt, in welchem Stadium der Render-"
"Pipeline sie unseren Code aufrufen soll."

msgid ""
"Currently we only have access to the stages of the 3D rendering pipeline!"
msgstr "Derzeit haben wir nur Zugang zu den Stufen der 3D-Rendering-Pipeline!"

msgid ""
"We also get a reference to our rendering device, which will come in very "
"handy."
msgstr ""
"Wir erhalten auch einen Verweis auf unser Rendering-Gerät, was sich als sehr "
"nützlich erweisen wird."

msgid ""
"We also need to clean up after ourselves, for this we react to the "
"``NOTIFICATION_PREDELETE`` notification:"
msgstr ""
"Wir müssen auch hinter uns aufräumen, dazu reagieren wir auf die "
"Benachrichtigung ``NOTIFICATION_PREDELETE``:"

msgid ""
"Note that we do not use our mutex here even though we create our shader "
"inside of our render thread. The methods on our rendering server are thread "
"safe and ``free_rid`` will be postponed cleaning up the shader until after "
"any frames currently being rendered are finished."
msgstr ""
"Beachten Sie, dass wir unseren Mutex hier nicht benutzen, obwohl wir unseren "
"Shader innerhalb unseres Render-Threads erstellen. Die Methoden unseres "
"Rendering-Servers sind thread-sicher und ``free_rid`` wird während des "
"Aufräumen des Shaders aufgeschoben, bis alle Bilder, die gerade gerendert "
"werden, fertig sind."

msgid ""
"Also note that we are not freeing our pipeline. The rendering device does "
"dependency tracking and as the pipeline is dependent on the shader, it will "
"be automatically freed when the shader is destructed."
msgstr ""
"Beachten Sie auch, dass wir unsere Pipeline nicht freigeben. Das Rendering-"
"Gerät führt eine Abhängigkeitsverfolgung durch und da die Pipeline vom "
"Shader abhängig ist, wird sie automatisch freigegeben, wenn der Shader "
"zerstört wird."

msgid "From this point onwards our code will run on the rendering thread."
msgstr ""
"Von diesem Zeitpunkt an wird unser Code auf dem Rendering-Thread ausgeführt."

msgid ""
"Our next step is a helper function that will recompile the shader if the "
"user code was changed."
msgstr ""
"Unser nächster Schritt ist eine Hilfsfunktion, die den Shader neu "
"kompiliert, wenn der Benutzercode geändert wurde."

msgid ""
"At the top of this method we again use our mutex to protect accessing our "
"user shader code and our is dirty flag. We make a local copy of the user "
"shader code if our user shader code is dirty."
msgstr ""
"Am Anfang dieser Methode verwenden wir wieder unseren Mutex, um den Zugriff "
"auf unseren Benutzer-Shader-Code und unser \"is dirty\"-Flag zu schützen. "
"Wir erstellen eine lokale Kopie des Benutzer-Shader-Codes, wenn unser "
"Benutzer-Shader-Code \"dirty\" ist."

msgid ""
"If we don't have a new code fragment, we return true if we already have a "
"valid pipeline."
msgstr ""
"Wenn wir kein neues Codefragment haben, geben wir true zurück, wenn wir "
"bereits eine gültige Pipeline haben."

msgid ""
"If we do have a new code fragment we embed it in our template code and then "
"compile it."
msgstr ""
"Wenn wir ein neues Codefragment haben, betten wir es in unseren Vorlagencode "
"ein und kompilieren es dann."

msgid ""
"The code shown here compiles our new code in runtime. This is great for "
"prototyping as we can immediately see the effect of the changed shader."
msgstr ""
"Der hier gezeigte Code kompiliert unseren neuen Code während der Laufzeit. "
"Dies eignet sich hervorragend für das Prototyping, da wir die Auswirkungen "
"des geänderten Shaders sofort sehen können."

msgid ""
"This prevents precompiling and caching this shader which may be an issues on "
"some platforms such as consoles. Note that the demo project comes with an "
"alternative example where a ``glsl`` file contains the entire compute shader "
"and this is used. Godot is able to precompile and cache the shader with this "
"approach."
msgstr ""
"Dies verhindert die Vorkompilierung und das Zwischenspeichern dieses "
"Shaders, was auf einigen Plattformen wie Konsolen ein Problem darstellen "
"kann. Beachten Sie, dass das Demoprojekt ein alternatives Beispiel enthält, "
"bei dem eine ``glsl``-Datei den gesamten Compute-Shader enthält und diese "
"verwendet wird. Godot ist in der Lage, den Shader mit diesem Ansatz "
"vorzukompilieren und zu cachen."

msgid ""
"Finally we need to implement our effect callback, the rendering engine will "
"call this at the right stage of rendering."
msgstr ""
"Schließlich müssen wir unseren Effekt-Callback implementieren, den die "
"Rendering-Engine in der richtigen Phase des Renderings aufrufen wird."

msgid ""
"At the start of this method we check if we have a rendering device, if our "
"callback type is the correct one, and check if we have our shader."
msgstr ""
"Zu Beginn dieser Methode prüfen wir, ob wir ein Rendering Device haben, ob "
"unser Callback-Typ der richtige ist und ob wir unseren Shader haben."

msgid ""
"The check for the effect type is only a safety mechanism. We've set this in "
"our ``_init`` function, however it is possible for the user to change this "
"in the UI."
msgstr ""
"Die Prüfung auf den Effekttyp ist nur ein Sicherheitsmechanismus. Wir haben "
"dies in unserer ``_init``-Funktion festgelegt, aber es ist möglich, dass der "
"Benutzer dies in der Benutzeroberfläche ändert."

msgid ""
"Our ``p_render_data`` parameter gives us access to an object that holds data "
"specific to the frame we're currently rendering. We're currently only "
"interested in our render scene buffers, which provide us access to all the "
"internal buffers used by the rendering engine. Note that we cast this "
"to :ref:`RenderSceneBuffersRD <class_RenderSceneBuffersRD>` to expose the "
"full API to this data."
msgstr ""
"Unser Parameter ``p_render_data`` gibt uns Zugriff auf ein Objekt, das Daten "
"enthält, die spezifisch für den Frame sind, den wir gerade rendern. Im "
"Moment sind wir nur an den Puffern unserer Render-Szene interessiert, die "
"uns Zugang zu allen internen Puffern geben, die von der Rendering-Engine "
"verwendet werden. Beachten Sie, dass wir dies in :ref:`RenderSceneBuffersRD "
"<class_RenderSceneBuffersRD>` umwandeln, um die vollständige API für diese "
"Daten freizugeben."

msgid ""
"Next we obtain our ``internal size`` which is the resolution of our 3D "
"render buffers before they are upscaled (if applicable), upscaling happens "
"after our post processes have run."
msgstr ""
"Als nächstes erhalten wir unsere ``interne Größe``, also die Auflösung "
"unserer 3D-Renderpuffer, bevor sie hochskaliert werden (falls zutreffend); "
"die Hochskalierung erfolgt, nachdem unsere Postprozesse gelaufen sind."

msgid ""
"From our internal size we calculate our group size, see our local size in "
"our template shader."
msgstr ""
"Aus unserer internen Größe berechnen wir unsere Gruppengröße, siehe unsere "
"lokale Größe in unserem Template-Shader."

msgid ""
"We also populate our push constant so our shader knows our size. Godot does "
"not support structs here **yet** so we use a ``PackedFloat32Array`` to store "
"this data into. Note that we have to pad this array with a 16 byte "
"alignment. In other words, the length of our array needs to be a multiple of "
"4."
msgstr ""
"Wir füllen auch unsere Push-Konstante aus, damit unser Shader unsere Größe "
"kennt. Godot unterstützt hier **noch** keine Structs, also benutzen wir ein "
"``PackedFloat32Array`` um diese Daten zu speichern. Beachten Sie, dass wir "
"dieses Array mit einem 16 Byte Alignment auffüllen müssen. Mit anderen "
"Worten, die Länge unseres Arrays muss ein Vielfaches von 4 sein."

msgid ""
"Now we loop through our views, this is in case we're using multiview "
"rendering which is applicable for stereo rendering (XR). In most cases we "
"will only have one view."
msgstr ""
"Jetzt durchlaufen wir unsere Views in einer Schleife, falls wir das "
"Multiview-Rendering verwenden, das für das Stereo-Rendering (XR) geeignet "
"ist. In den meisten Fällen werden wir nur einen View haben."

msgid ""
"There is no performance benefit to use multiview for post processing here, "
"handling the views separately like this will still enable the GPU to use "
"parallelism if beneficial."
msgstr ""
"Die Verwendung von Multiview für die Nachbearbeitung bringt hier keinen "
"Performance-Vorteil. Durch die getrennte Behandlung der Ansichten kann der "
"Grafikprozessor die Parallelisierung dennoch nutzen, wenn dies sinnvoll ist."

msgid ""
"Next we obtain the color buffer for this view. This is the buffer into which "
"our 3D scene has been rendered."
msgstr ""
"Als nächstes erhalten wir den Farbpuffer für diese Ansicht. Dies ist der "
"Puffer, in den unsere 3D-Szene gerendert wurde."

msgid ""
"We then prepare a uniform set so we can communicate the color buffer to our "
"shader."
msgstr ""
"Dann bereiten wir ein Uniform-Set vor, damit wir den Farbpuffer an unseren "
"Shader weitergeben können."

msgid ""
"Note the use of our :ref:`UniformSetCacheRD <class_UniformSetCacheRD>` cache "
"which ensures we can check for our uniform set each frame. As our color "
"buffer can change from frame to frame and our uniform cache will "
"automatically clean up uniform sets when buffers are freed, this is the safe "
"way to ensure we do not leak memory or use an outdated set."
msgstr ""
"Beachten Sie die Verwendung unseres :ref:`UniformSetCacheRD "
"<class_UniformSetCacheRD>`-Caches, der sicherstellt, dass wir bei jedem "
"Frame nach unserem Uniform-Set suchen können. Da sich unser Farbpuffer von "
"Frame zu Frame ändern kann und unser UniformSet-Cache automatisch die "
"UniformSets aufräumt, wenn die Puffer freigegeben werden, ist dies der "
"sichere Weg, um sicherzustellen, dass wir kein Speicherleck produzieren oder "
"ein veraltetes Set verwenden."

msgid ""
"Finally we build our compute list by binding our pipeline, binding our "
"uniform set, pushing our push constant data, and calling dispatch for our "
"groups."
msgstr ""
"Zum Schluss bauen wir unsere Berechnungsliste auf, indem wir unsere Pipeline "
"binden, unsere einheitliche Menge binden, unsere Push-Konstanten-Daten "
"übertragen und Dispatch für unsere Gruppen aufrufen."

msgid ""
"With our compositor effect completed, we now need to add it to our "
"compositor."
msgstr ""
"Nachdem unser Kompositor-Effekt fertiggestellt ist, müssen wir ihn nun zu "
"unserem Kompositor hinzufügen."

msgid ""
"On our compositor we expand the compositor effects property and press ``Add "
"Element``."
msgstr ""
"In unserem Kompositor erweitern wir die Property \"Kompositor-Effekte\" und "
"drücken auf ``Element hinzufügen``."

msgid "Now we can add our compositor effect:"
msgstr "Jetzt können wir unseren Kompositor-Effekt hinzufügen:"

msgid ""
"After selecting our ``PostProcessShader`` we need to set our user shader "
"code:"
msgstr ""
"Nachdem wir unseren ``PostProcessShader`` ausgewählt haben, müssen wir "
"unseren Benutzer-Shader-Code einstellen:"

msgid "With that all done, our output is in grayscale."
msgstr "Damit ist die Ausgabe in Graustufen erfolgt."

msgid ""
"For a more advanced example of post effects, check out the `Radial blur "
"based sky rays <https://github.com/BastiaanOlij/RERadialSunRays>`_ example "
"project created by Bastiaan Olij."
msgstr ""
"Ein fortgeschrittenes Beispiel für Post-Effekte finden Sie in dem "
"Beispielprojekt `Radial blur based sky rays <https://github.com/BastiaanOlij/"
"RERadialSunRays>`_ von Bastiaan Olij."
