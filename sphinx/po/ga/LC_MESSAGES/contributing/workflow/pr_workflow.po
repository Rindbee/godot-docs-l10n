#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Pull request workflow"
msgstr "Tarraing oibre iarratais"

msgid ""
"The so-called \"PR workflow\" used by Godot is common to many projects using "
"Git, and should be familiar to veteran free software contributors. The idea "
"is that only a small number (if any) commit directly to the *master* branch. "
"Instead, contributors *fork* the project (i.e. create a copy of it, which "
"they can modify as they wish), and then use the GitHub interface to request "
"a *pull* from one of their fork's branches to one branch of the original "
"(often named *upstream*) repository."
msgstr ""
"Tá an “sreabhadh oibre PR” mar a thugtar air a úsáideann Godot coitianta do "
"go leor tionscadal a úsáideann Git, agus ba cheart go mbeadh sé eolach do "
"rannpháirtithe bogearraí Is é an smaoineamh ná nach dtiomann ach líon beag "
"(más ann) go díreach don bhrainse* máistir*. Ina áit sin, déanann "
"ranníocóirí* an tionscadal (ie a chruthú cóip de, ar féidir leo a mhodhnú de "
"réir mar is mian leo), agus ansin úsáid as an gcomhéadan GitHub chun "
"*tarraing* a iarraidh ó cheann de bhrainsí a gcuid fork go brainse amháin "
"den stór bunaidh (ainmne*upstream*)."

msgid ""
"The resulting *pull request* (PR) can then be reviewed by other "
"contributors, which might approve it, reject it, or most often request that "
"modifications be done. Once approved, the PR can then be merged by one of "
"the core developers, and its commit(s) will become part of the target branch "
"(usually the *master* branch)."
msgstr ""
"Is féidir le ranníocóirí eile an t-iarratas tarraing* (PR) mar thoradh air a "
"athbhreithniú ansin, a d'fhéadfadh é a cheadú, a dhiúltú, nó a iarraidh go "
"minic go ndéanfaí modhnuithe a dhéanamh. Nuair a bheidh sé ceadaithe, is "
"féidir le duine de na príomhfhorbróirí an PR a chumasc, agus beidh a "
"thiomantas (í) mar chuid den spriocbhrainse (an brainse* máistir* de ghnáth)."

msgid ""
"We will go together through an example to show the typical workflow and "
"associated Git commands. But first, let's have a quick look at the "
"organization of Godot's Git repository."
msgstr ""
"Rachaimid le chéile trí shampla chun an sreabhadh oibre tipiciúil agus "
"orduithe Git gaolmhara a thaispeáint. Ach ar dtús, déanaimis breathnú tapa "
"ar eagrú stór Git Godot."

msgid "Git source repository"
msgstr "Stóráil foinse Git"

msgid ""
"The `repository on GitHub <https://github.com/godotengine/godot>`_ is a `Git "
"<https://git-scm.com>`_ code repository together with an embedded issue "
"tracker and PR system."
msgstr ""
"Is stór cód `Git <https://git-scm.com>`_ é an stór `ar GitHub <https://"
"github.com/godotenginine/godot>`_ mar aon le rianaitheoir ceisteanna "
"leabaithe agus córas PR."

msgid ""
"If you are contributing to the documentation, its repository can be found "
"`here <https://github.com/godotengine/godot-docs>`_."
msgstr ""
"Má tá tú ag cur leis an doiciméadú, is féidir a stór a fháil `anseo <https://"
"github.com/godotenginine/godot-docs>`_."

msgid ""
"The Git version control system is the tool used to keep track of successive "
"edits to the source code - to contribute efficiently to Godot, learning the "
"basics of the Git command line is *highly* recommended. There exist some "
"graphical interfaces for Git, but they usually encourage users to take bad "
"habits regarding the Git and PR workflow, and we therefore recommend not to "
"use them. In particular, we advise not to use GitHub's online editor for "
"code contributions (although it's tolerated for small fixes or documentation "
"changes) as it enforces one commit per file and per modification, which "
"quickly leads to PRs with an unreadable Git history (especially after peer "
"review)."
msgstr ""
"Is é an córas rialaithe leagan Git an uirlis a úsáidtear chun súil a "
"choinneáil ar eagarthóireachtaí i ndiaidh a chéile ar an gcód foinse - chun "
"cur go héifeachtúil le Godot, moltar buneilimintí líne ordaithe Git a "
"fhoghlaim go mór. Tá roinnt comhéadain grafacha ann do Git, ach de ghnáth "
"spreagann siad úsáideoirí droch-nósanna a ghlacadh maidir le sreabhadh oibre "
"Git agus PR, agus molaimid dá bhrí sin gan iad a úsáid. Go háirithe, "
"molaimid gan eagarthóir ar líne GitHub a úsáid le haghaidh ranníocaíochtaí "
"cód (cé go nglactar leis le haghaidh socruithe beaga nó athruithe "
"doiciméadaithe) mar go gcuireann sé tiomantas amháin in aghaidh an chomhaid "
"agus in aghaidh an modhnuithe i bhfeidhm, rud a fhágann go tapa le stair Git "
"nach féidir (go háirithe tar éis athbhreithniú piaraí)."

msgid ""
"The first sections of Git's \"Book\" are a good introduction to the tool's "
"philosophy and the various commands you need to master in your daily "
"workflow. You can read them online on the `Git SCM <https://git-scm.com/book/"
"en/v2>`_ website. You can also try out `GitHub's interactive guide <https://"
"try.github.io/>`__."
msgstr ""
"Is réamhrá maith iad na chéad ranna de \"Leabhar\" Git ar fhealsúnacht an "
"uirlis agus na horduithe éagsúla a theastaíonn uait a mháistir i do "
"shreabhadh oibre laethúil. Is féidir leat iad a léamh ar líne ar shuíomh "
"Gréasáin `Git SCM <https://git-scm.com/book/en/v2>`_. Is féidir leat freisin "
"triail a bhaint as `treoir idirghníomhach GitHub <https://try.github.io/>`__."

msgid "The branches on the Git repository are organized as follows:"
msgstr "Tá na brainsí ar stór Git eagraithe mar seo a leanas:"

msgid ""
"The ``master`` branch is where the development of the next major version "
"occurs. As a development branch, it can be unstable and is not meant for use "
"in production. This is where PRs should be done in priority."
msgstr ""
"Is í an bhrainse ``máistir` áit a dtarlaíonn forbairt an chéad mhórleagan "
"eile. Mar bhrainse forbartha, is féidir leis a bheith éagobhsaí agus níl sé "
"i gceist le húsáid i dtáirgeadh. Is é seo an áit ar chóir PRanna a dhéanamh "
"i dtosaíocht."

msgid ""
"The stable branches are named after their version, e.g. ``3.1`` and ``2.1``. "
"They are used to backport bugfixes and enhancements from the ``master`` "
"branch to the currently maintained stable release (e.g. 3.1.2 or 2.1.6). As "
"a rule of thumb, the last stable branch is maintained until the next minor "
"version (e.g. the ``3.0`` branch was maintained until the release of Godot "
"3.1). If you want to make PRs against a maintained stable branch, please "
"check first if your changes are also relevant for the ``master`` branch, and "
"if so make the PR for the ``master`` branch in priority. Release managers "
"can then cherry-pick the fix to a stable branch if relevant."
msgstr ""
"Ainmnítear na brainsí cobhsaí i ndiaidh a leagan, m.sh. ``3.1`` agus "
"``2.1``. Úsáidtear iad chun fabhtshocruithe agus feabhsuithe a aisghabháil "
"ón mbrainse ``máistir` go dtí an scaoileadh cobhsaí atá á chothabháil faoi "
"láthair (m.sh. 3.1.2 nó 2.1.6). Mar riail ordóige, coimeádtar an brainse "
"chobhsaí deireanach go dtí an chéad mhionleagan eile (m.sh. coinníodh an "
"brainse `3.0 ``go dtí scaoileadh Godot 3.1). Más mian leat PRanna a dhéanamh "
"i gcoinne brainse cobhsaí cothabháilte, seiceáil ar dtús an bhfuil "
"d'athruithe ábhartha freisin don bhrainse ``máistir`, agus más amhlaidh déan "
"an PR don bhrainse ``máistir` i dtosaíocht. Ansin is féidir le bainisteoirí "
"scaoilte an ceart a roghnú le brainse chobhsaí más ábhartha."

msgid ""
"There might occasionally be feature branches, usually meant to be merged "
"into the ``master`` branch at some time."
msgstr ""
"D'fhéadfadh go mbeadh brainsí gnéithe ann ó am go chéile, de ghnáth go "
"ndéantar iad a chumasc sa bhrainse `máistir` ag am éigin."

msgid "Forking and cloning"
msgstr "Forc agus clónáil"

msgid ""
"The first step is to *fork* the `godotengine/godot <https://github.com/"
"godotengine/godot>`_ repository on GitHub. To do so, you will need to have a "
"GitHub account and to be logged in. In the top right corner of the "
"repository's GitHub page, you should see the \"Fork\" button as shown below:"
msgstr ""
"Is é an chéad chéim ná *forc* a dhéanamh ar an stór `godotengine/godot "
"<https://github.com/godotenginine/godot>`_ ar GitHub. Chun é sin a dhéanamh, "
"beidh ort cuntas GitHub a bheith agat agus a bheith logáilte isteach. Sa "
"chúinne uachtarach ar dheis de leathanach GitHub an stór, ba cheart duit an "
"cnaipe \"Forc\" a fheiceáil mar a thaispeántar thíos:"

msgid ""
"Click it, and after a while you should be redirected to your own fork of the "
"Godot repo, with your GitHub username as namespace:"
msgstr ""
"Cliceáil air, agus tar éis tamaill ba chóir duit a atreorú chuig do fhorc "
"féin den repo Godot, le d'ainm úsáideora GitHub mar spás ainmneacha:"

msgid ""
"You can then *clone* your fork, i.e. create a local copy of the online "
"repository (in Git speak, the *origin remote*). If you haven't already, "
"download Git from `its website <https://git-scm.com>`_ if you're using "
"Windows or macOS, or install it through your package manager if you're using "
"Linux."
msgstr ""
"Is féidir leat do fhorc a *chlónáil* ansin, i.e. cóip áitiúil den stór ar "
"líne a chruthú (i Git speak, an cianda *origin*). Mura bhfuil sin agat "
"cheana, íoslódáil Git óna shuíomh Gréasáin <https://git-scm.com>`_ má tá "
"Windows nó macOS in úsáid agat, nó suiteáil trí do bhainisteoir pacáiste má "
"tá Linux in úsáid agat."

msgid ""
"If you are on Windows, open Git Bash to type commands. macOS and Linux users "
"can use their respective terminals."
msgstr ""
"Má tá tú ar Windows, oscail Git Bash chun orduithe a chlóscríobh. Is féidir "
"le húsáideoirí macOS agus Linux a gcríochfoirt faoi seach a úsáid."

msgid "To clone your fork from GitHub, use the following command:"
msgstr "Chun do fhorc a chlónú ó GitHub, bain úsáid as an ordú seo a leanas:"

msgid ""
"After a little while, you should have a ``godot`` directory in your current "
"working directory. Move into it using the ``cd`` command:"
msgstr ""
"Tar éis tamaill beag, ba chóir go mbeadh eolaire ``godot ``agat i d'eolaire "
"oibre reatha. Bogadh isteach ann ag baint úsáide as an ordú ``cd``:"

msgid ""
"We will start by setting up a reference to the original repository that we "
"forked:"
msgstr ""
"Tosóimid trí thagairt a chur ar bun don stór bunaidh a chuireamar forc:"

msgid ""
"This will create a reference named ``upstream`` pointing to the original "
"``godotengine/godot`` repository. This will be useful when you want to pull "
"new commits from its ``master`` branch to update your fork. You have another "
"remote reference named ``origin``, which points to your fork (``USERNAME/"
"godot``)."
msgstr ""
"Cruthóidh sé seo tagairt darb ainm ``upstream ``ag cur síos ar an stór "
"bunaidh ``godotengine/godot``. Beidh sé seo úsáideach nuair is mian leat "
"gealltanais nua a tharraingt óna bhrainse ``máistir` chun do fhorc a "
"nuashonrú. Tá tagairt iargúlta eile agat darb ainm ``bunaidh ``, a thugann "
"le do fhorc (``Ainm úsáideora/Godot``)."

msgid ""
"You only need to do the above steps once, as long as you keep that local "
"``godot`` folder (which you can move around if you want, the relevant "
"metadata is hidden in its ``.git`` subfolder)."
msgstr ""
"Ní gá duit ach na céimeanna thuas a dhéanamh uair amháin, chomh fada agus a "
"choinníonn tú an fillteán áitiúil ``godot`` sin (ar féidir leat bogadh "
"timpeall más mian leat, tá na meiteashonraí ábhartha i bhfolach ina "
"fhofillteán ``.git ``)."

msgid ""
"*Branch it, pull it, code it, stage it, commit, push it, rebase it... "
"technologic.*"
msgstr ""
"* Brainse é, tarraing é, códaigh é, déan é a chéile, tiomanta, brúigh é, "
"athbhunaigh é... teicneolaíochta. *"

msgid ""
"This bad take on Daft Punk's *Technologic* shows the general conception Git "
"beginners have of its workflow: lots of strange commands to learn by copy "
"and paste, hoping they will work as expected. And that's actually not a bad "
"way to learn, as long as you're curious and don't hesitate to question your "
"search engine when lost, so we will give you the basic commands to know when "
"working in Git."
msgstr ""
"Taispeánann an droch-ghníomhú seo ar * Teicneolaíoch* Daft Punk an coincheap "
"ginearálta atá ag tosaitheoirí Git dá sreabhadh oibre: go leor orduithe "
"aisteacha le foghlaim trí chóipeáil agus greamú, ag súil go n-oibreoidh siad "
"mar a bhíoth Agus ní droch-bhealach é sin i ndáiríre le foghlaim, fad is atá "
"tú fiosrach agus nach bhfuil aon leisce ort d'inneall cuardaigh a cheistiú "
"nuair a chailltear, mar sin tabharfaimid na bunorduithe duit a bheith ar "
"eolas agat agus tú ag obair i Git."

msgid ""
"In the following, we will assume as an example that you want to implement a "
"feature in Godot's Project Manager, which is coded in the ``editor/"
"project_manager.cpp`` file."
msgstr ""
"Sa mhéid seo a leanas, glacfaimid leis mar shampla gur mhaith leat gné a "
"chur i bhfeidhm i mBainisteoir Tionscadail Godot, atá códaithe sa chomhad "
"``editor/project_manager.cpp`."

msgid "Branching"
msgstr "Brainse"

msgid ""
"By default, the ``git clone`` should have put you on the ``master`` branch "
"of your fork (``origin``). To start your own feature development, we will "
"create a feature branch:"
msgstr ""
"De réir réamhshocraithe, ba chóir go gcuirfeadh an `git clone`` tú ar an "
"mbrainse ``máistir` de do fhorc (``bunaidh ``). Chun do fhorbairt gné féin a "
"thosú, cruthóimid brainse gné:"

msgid "This command is equivalent:"
msgstr "Tá an t-ordú seo coibhéiseach:"

msgid "If you want to go back to the ``master`` branch, you'd use:"
msgstr ""
"Más mian leat dul ar ais chuig an mbrainse ``máistir`, bheadh úsáid agat:"

msgid ""
"You can see which branch you are currently on with the ``git branch`` "
"command:"
msgstr ""
"Is féidir leat a fheiceáil cén brainse atá tú faoi láthair leis an ordú "
"``git branch``:"

msgid ""
"Be sure to always go back to the ``master`` branch before creating a new "
"branch, as your current branch will be used as the base for the new one. "
"Alternatively, you can specify a custom base branch after the new branch's "
"name:"
msgstr ""
"Bí cinnte dul ar ais chuig an mbrainse ``máistir` i gcónaí sula gcruthóidh "
"tú brainse nua, mar úsáidfear do bhrainse reatha mar bhonn don cheann nua. "
"De rogha air sin, is féidir leat brainse bonn saincheaptha a shonrú tar éis "
"ainm na brainse nua:"

msgid "Updating your branch"
msgstr "Do bhrainse a nuashonrú"

msgid ""
"This would not be needed the first time (just after you forked the upstream "
"repository). However, the next time you want to work on something, you will "
"notice that your fork's ``master`` is several commits behind the upstream "
"``master`` branch: pull requests from other contributors would have been "
"merged in the meantime."
msgstr ""
"Ní bheadh sé seo ag teastáil an chéad uair (díreach tar éis duit an stór "
"suas sruth a fhorgáil). Mar sin féin, an chéad uair eile is mian leat oibriú "
"ar rud éigin, tabharfaidh tú faoi deara go bhfuil “máistir” do fhoirc roinnt "
"gealltanais taobh thiar den bhrainse ``máistir` suas srutha: bheadh "
"iarratais tarraingthe ó rannpháirtithe eile cumasc idir an dá linn."

msgid ""
"To ensure there won't be conflicts between the feature you develop and the "
"current upstream ``master`` branch, you will have to update your branch by "
"*pulling* the upstream branch."
msgstr ""
"Chun a chinntiú nach mbeidh coinbhleachtaí idir an ghné a fhorbraíonn tú "
"agus an brainse reatha ``máistir` suas srutha, beidh ort do bhrainse a "
"nuashonrú trí* an bhrainse suas srutha a tharraing*."

msgid ""
"The ``--rebase`` argument will ensure that any local changes that you "
"committed will be re-applied *on top* of the pulled branch, which is usually "
"what we want in our PR workflow. This way, when you open a pull request, "
"your own commits will be the only difference with the upstream ``master`` "
"branch."
msgstr ""
"Cinnteoidh an argóint ``--rebase ``go ndéanfar aon athruithe áitiúla a rinne "
"tú a athchur i bhfeidhme* ar bharr* na brainse tarraingthe, arb é sin de "
"ghnáth an rud a theastaíonn uainn inár sreabhadh oibre PR. Ar an mbealach "
"seo, nuair a osclaíonn tú iarratas tarraingthe, is iad do thiomantas féin an "
"t-aon difríocht leis an mbrainse `máistir` suas srutha."

msgid ""
"While rebasing, conflicts may arise if your commits modified code that has "
"been changed in the upstream branch in the meantime. If that happens, Git "
"will stop at the conflicting commit and will ask you to resolve the "
"conflicts. You can do so with any text editor, then stage the changes (more "
"on that later), and proceed with ``git rebase --continue``. Repeat the "
"operation if later commits have conflicts too, until the rebase operation "
"completes."
msgstr ""
"Agus tú ag athbhunú, d'fhéadfadh coinbhleachtaí teacht chun cinn má "
"gheallann do chód modhnaithe a athraíodh sa bhrainse réamhtheachtacha idir "
"an dá linn. Má tharlaíonn sé sin, stopfaidh Git ag an ngealltanas "
"coinbhleachta agus iarrfaidh sé ort na coinbhleachtaí a réiteach. Is féidir "
"leat é sin a dhéanamh le haon eagarthóir téacs, ansin cuir na hathruithe ar "
"siúl (tuilleadh air sin níos déanaí), agus lean ar aghaidh le ``git rebase --"
"continue``. Déan an oibríocht arís má bhíonn coinbhleachtaí ag baint le "
"gealltanais níos déanaí freisin, go dtí go gcríochnaítear an oibríocht "
"athbhunú."

msgid ""
"If you're unsure about what is going on during a rebase and you panic (no "
"worry, we all do the first few times), you can abort the rebase with ``git "
"rebase --abort``. You will then be back to the original state of your branch "
"before calling ``git pull --rebase``."
msgstr ""
"Mura bhfuil tú cinnte faoin méid atá ar siúl le linn rebase agus má tá "
"scaoll ort (gan aon imní ort, déanaimid go léir an chéad chúpla uair), is "
"féidir leat an rebase a chur le `git rebase --abort``. Ansin beidh tú ar ais "
"go dtí staid bhunaidh do bhrainse sula nglaonn tú ar ``git pull --rebase``."

msgid ""
"If you omit the ``--rebase`` argument, you will instead create a merge "
"commit which tells Git what to make of the two distinct branches. If any "
"conflicts arise, they would be resolved all at once via this merge commit."
msgstr ""
"Má fhágann tú an argóint ``--rebase`, ina ionad sin cruthóidh tú tiomantas "
"cumaisc a insíonn do Git cad atá le déanamh den dá bhrainse ar leith. Má "
"thagann aon choimhlintí chun cinn, réiteofaí iad uile ag an am céanna tríd "
"an tiomantas cumaisc seo."

msgid ""
"While this is a valid workflow and the default behavior of ``git pull``, "
"merge commits within PRs are frowned upon in our PR workflow. We only use "
"them when merging PRs into the upstream branch."
msgstr ""
"Cé gur sreabhadh oibre bailí é seo agus iompar réamhshocraithe ``git pull``, "
"cuirtear gealltanais cumaisc laistigh de PRanna inár sreabhadh oibre PR. Ní "
"úsáidimid iad ach nuair a chumasc PRanna sa bhrainse suas srutha."

msgid ""
"The philosophy is that a PR should represent the final stage of the changes "
"made to the codebase, and we are not interested in mistakes and fixes that "
"would have been done in intermediate stages before merging. Git gives us "
"great tools to \"rewrite the history\" and make it as if we got things right "
"the first time, and we're happy to use it to ensure that changes are easy to "
"review and understand long after they have been merged."
msgstr ""
"Is í an fhealsúnacht ná gur chóir go léireodh PR an chéim dheiridh de na "
"hathruithe a rinneadh ar an gbunachar cóid, agus níl suim againn i mbotúin "
"agus i socruithe a bheadh déanta i gcéimeanna idirmheánacha sula ndéanfaí "
"iad a chumasc. Tugann Git uirlisí iontacha dúinn chun “an stair a "
"athscríobh” agus é a dhéanamh amhail is dá bhfuaireamar rudaí ceart an chéad "
"uair, agus táimid sásta é a úsáid chun a chinntiú go bhfuil athruithe "
"furasta athbhreithniú agus a thuiscint fada tar éis iad a chumasc."

msgid ""
"If you have already created a merge commit without using ``rebase``, or have "
"made any other changes that have resulted in undesired history, the best "
"option is to use an *interactive rebase* on the upstream branch. See "
"the :ref:`dedicated section <doc_pr_workflow_rebase>` for instructions."
msgstr ""
"Má tá tiomnú cumaisc cruthaithe agat cheana féin gan ``rebase`` a úsáid, nó "
"má tá aon athruithe eile déanta agat as a d'eascair stair neamh-"
"inmhianaithe, is é an rogha is fearr ná *rebase idirghníomhach* a úsáid ar "
"an mbrainse in aghaidh an tsrutha. Féach an :ref:`rannán tiomnaithe "
"<doc_pr_workflow_rebase>` le haghaidh treoracha."

msgid ""
"If at any time you want to *reset* a local branch to a given commit or "
"branch, you can do so with ``git reset --hard <commit ID>`` or ``git reset --"
"hard <remote>/<branch>`` (e.g. ``git reset --hard upstream/master``)."
msgstr ""
"Más mian leat ag am ar bith * brainse áitiúil a *athshocrú* chuig gealltanas "
"nó brainse ar leith, is féidir leat é sin a dhéanamh le `` athshocrú git -- "
"hard <commit ID>`` nó `` athshocrú git --hard <iargúlta>/ <brainse>`` (m.sh. "
"`` athshocrú git --hard upstream/master``)."

msgid ""
"Be warned that this will remove any changes that you might have committed in "
"this branch. If you ever lose commits by mistake, use the ``git reflog`` "
"command to find the commit ID of the previous state that you would like to "
"restore, and use it as argument of ``git reset --hard`` to go back to that "
"state."
msgstr ""
"Tabhair rabhadh go mbainfidh sé seo aon athruithe a d'fhéadfadh a bheith "
"déanta agat sa bhrainse seo. Má chailleann tú gealltanna ar dhearmad riamh, "
"bain úsáid as an ordú ``git reflog`` chun aitheantas tiomanta an stáit "
"roimhe seo a fháil ar mhaith leat a chur ar ais, agus bain úsáid as mar "
"argóint ``git reset --hard`` chun dul ar ais go dtí an stát sin."

msgid "Making changes"
msgstr "Athruithe a dhéanamh"

msgid ""
"You would then do your changes to our example's ``editor/"
"project_manager.cpp`` file with your usual development environment (text "
"editor, IDE, etc.)."
msgstr ""
"Ansin déanfá d'athruithe ar chomhad ``editor/project_manager.cpp ``ár sampla "
"le do ghnáththtimpeallacht forbartha (eagarthóir téacs, IDE, srl.)."

msgid ""
"By default, those changes are *unstaged*. The staging area is a layer "
"between your working directory (where you make your modifications) and the "
"local Git repository (the commits and all the metadata in the ``.git`` "
"folder). To bring changes from the working directory to the Git repository, "
"you need to *stage* them with the ``git add`` command, and then to commit "
"them with the ``git commit`` command."
msgstr ""
"De réir réamhshocraithe, tá na hathruithe sin *gan stáit*. Is ciseal é an "
"limistéar stáitse idir d'eolaire oibre (áit a ndéanann tú do chuid "
"modhnuithe) agus stór áitiúil Git (na gealltanais agus na meiteashonraí go "
"léir san fhillteán `.git ``). Chun athruithe ón eolaire oibre a thabhairt "
"chuig stór Git, ní mór duit* iad a chéimeád* leis an ordú ``git add ``, agus "
"ansin iad a thiomantas leis an ordú ``git comm``."

msgid ""
"There are various commands you should know to review your current work, "
"before staging it, while it is staged, and after it has been committed."
msgstr ""
"Tá orduithe éagsúla ann ba chóir go mbeadh a fhios agat chun d'obair reatha "
"a athbhreithniú, sula ndéantar é a stáitseáil, agus tar éis é a bheith "
"tiomanta."

msgid ""
"``git diff`` will show you the current unstaged changes, i.e. the "
"differences between your working directory and the staging area."
msgstr ""
"Taispeánfaidh ``git diff`` duit na hathruithe gan stáitse reatha, ie na "
"difríochtaí idir d'eolaire oibre agus an limistéar stáitse."

msgid ""
"``git checkout -- <files>`` will undo the unstaged changes to the given "
"files."
msgstr ""
"Déanfaidh `` Seiceáil git -- <comhaid>`` na hathruithe gan chéim ar na "
"comhaid tugtha a chealú."

msgid "``git add <files>`` will *stage* the changes on the listed files."
msgstr ""
"Déanfaidh `` git add <files>`` *céim * na hathruithe ar na comhaid "
"liostaithe."

msgid ""
"``git diff --staged`` will show the current staged changes, i.e. the "
"differences between the staging area and the last commit."
msgstr ""
"Taispeánfaidh ``git diff --staged`` na hathruithe stáitse reatha, ie na "
"difríochtaí idir an limistéar stáitse agus an tiomantas deireanach."

msgid "``git reset HEAD <files>`` will *unstage* changes to the listed files."
msgstr ""
"Déanfaidh `` athshocraigh git HEAD <comhaid>`` athruithe *unstage* ar na "
"comhaid liostaithe."

msgid ""
"``git status`` will show you what are the currently staged and unstaged "
"modifications."
msgstr ""
"Taispeánfaidh ``git status ``duit cad iad na modhnuithe stáitse agus gan "
"stáitse faoi láthair."

msgid ""
"``git commit`` will commit the staged files. It will open a text editor (you "
"can define the one you want to use with the ``GIT_EDITOR`` environment "
"variable or the ``core.editor`` setting in your Git configuration) to let "
"you write a commit log. You can use ``git commit -m \"Cool commit log\"`` to "
"write the log directly."
msgstr ""
"Tiomnóidh ``git commit`` na comhaid stáiteach. Osclóidh sé eagarthóir téacs "
"(is féidir leat an ceann a theastaíonn uait a úsáid a shainiú leis an athróg "
"timpeallachta ``GIT_EDITOR`` nó an socrú `core.editor`` i do chumraíocht "
"Git) chun ligean duit logáil tiomanta a scríobh. Is féidir leat ``git commit "
"-m “Cool commit log\"`` a úsáid chun an log a scríobh go díreach."

msgid ""
"``git commit --amend`` lets you amend the last commit with your currently "
"staged changes (added with ``git add``). This is the best option if you want "
"to fix a mistake in the last commit (bug, typo, style issue, etc.)."
msgstr ""
"Ligeann ``git commit --amend`` duit an tiomantas deireanach a leasú le do "
"chuid athruithe céime faoi láthair (cuireadh leis ``git add``). Is é seo an "
"rogha is fearr más mian leat botún a shocrú sa tiomantas deireanach (fabht, "
"clóscríobh, saincheist stíl, srl.)."

msgid ""
"``git log`` will show you the last commits of your current branch. If you "
"did local commits, they should be shown at the top."
msgstr ""
"Taispeánfaidh ``git log`` duit na gealltanais deireanach de do bhrainse "
"reatha. Má rinne tú tiomantas áitiúla, ba chóir iad a thaispeáint ag an "
"mbarr."

msgid ""
"``git show`` will show you the changes of the last commit. You can also "
"specify a commit hash to see the changes for that commit."
msgstr ""
"Taispeánfaidh ``git show`` athruithe an tiomanta deireanach duit. Is féidir "
"leat hash tiomanta a shonrú freisin chun na hathruithe don tiomantas sin a "
"fheiceáil."

msgid ""
"That's a lot to memorize! Don't worry, just check this cheat sheet when you "
"need to make changes, and learn by doing."
msgstr ""
"Sin go leor le cuimhneamh! Ná bíodh imní ort, seiceáil an bileog cheat seo "
"nuair is gá duit athruithe a dhéanamh, agus foghlaim trí dhéanamh."

msgid "Here's how the shell history could look like on our example:"
msgstr "Seo mar a d'fhéadfadh cuma ar stair an bhlaosc ar ár sampla:"

msgid ""
"With this, we should have two new commits in our ``better-project-manager`` "
"branch which were not in the ``master`` branch. They are still only local "
"though, the remote fork does not know about them, nor does the upstream repo."
msgstr ""
"Leis seo, ba cheart go mbeadh dhá thiomantas nua againn inár mbrainse "
"`bainisteoir tionscadail níos fearr 'nach raibh sa bhrainse ``máistir`. Níl "
"siad fós ach áitiúil, áfach, níl a fhios ag an bhforc iargúlta fúthu, ná níl "
"an repo suas srutha."

msgid "Pushing changes to a remote"
msgstr "Athruithe a bhrú ar iargúlta"

msgid ""
"That's where ``git push`` will come into play. In Git, a commit is always "
"done in the local repository (unlike Subversion where a commit will modify "
"the remote repository directly). You need to *push* the new commits to a "
"remote branch to share them with the world. The syntax for this is:"
msgstr ""
"Sin an áit a dtiocfaidh `git push`` i bhfeidhm. I Git, déantar tiomantas i "
"gcónaí sa stór áitiúil (murab ionann agus Subversion ina ndéanfaidh "
"tiomantas an stór iargúlta a mhodhnú go díreach). Ní mór duit* a bhrú* na "
"gealltanais nua do bhrainse iargúlta chun iad a roinnt leis an domhan. Is é "
"an comhréir leis seo:"

msgid ""
"The part about the remote branch can be omitted if you want it to have the "
"same name as the local branch, which is our case in this example, so we will "
"do:"
msgstr ""
"Is féidir an chuid faoin mbrainse iargúlta a fhágáil más mian leat go mbeadh "
"an t-ainm céanna aige leis an mbrainse áitiúil, arb é sin an cás atá againn "
"sa sampla seo, mar sin déanfaimid:"

msgid ""
"Git will ask you for your username and password. For your password, enter "
"your GitHub Personal Access Token (PAT). If you do not have a GitHub "
"Personal Access Token, or do not have one with the correct permissions for "
"your newly forked repository, you will need to create one. Follow this link "
"to create your Personal Access Token: `Creating a personal access token "
"<https://docs.github.com/en/authentication/keeping-your-account-and-data-"
"secure/creating-a-personal-access-token>`_."
msgstr ""
"Iarrfaidh Git ort d’ainm úsáideora agus do phasfhocal. Chun do phasfhocal, "
"cuir isteach do Chomhartha Rochtana Pearsanta GitHub (PAT). Mura bhfuil "
"Comhartha Rochtana Pearsanta GitHub agat, nó mura bhfuil ceann agat leis na "
"ceadanna cearta le do stór nua forked, beidh ort ceann a chruthú. Lean an "
"nasc seo chun do Chomhartha Rochtana Pearsanta a chruthú: `Cruthú comhartha "
"rochtana pearsanta <https://docs.github.com/en/authentication/keeping-your-"
"account-and-data-secure/creating-a-personal-access -chomhartha>`_."

msgid ""
"After you have successfully verified your account using your PAT, the "
"changes will be sent to your remote repository. If you check the fork's page "
"on GitHub, you should see a new branch with your added commits."
msgstr ""
"Tar éis duit do chuntas a fhíorú go rathúil ag baint úsáide as do PAT, "
"seolfar na hathruithe chuig do stór iargúlta. Má sheiceálann tú leathanach "
"an fhorc ar GitHub, ba chóir duit brainse nua a fheiceáil le do thiomantas "
"breise."

msgid "Issuing a pull request"
msgstr "Iarratas tarraingthe a eisiúint"

msgid ""
"When you load your fork's branch on GitHub, you should see a line saying "
"*\"This branch is 2 commits ahead of godotengine:master.\"* (and potentially "
"some commits behind, if your ``master`` branch was out of sync with the "
"upstream ``master`` branch)."
msgstr ""
"Nuair a luchtaíonn tú brainse do fhorc ar GitHub, ba chóir duit líne a "
"fheiceáil ag rá *\"Tá an brainse seo 2 thiomanta roimh godotengine:master. "
"“* (agus b'fhéidir go bhféadfadh roinnt gealltanna taobh thiar de, má bhí do "
"bhrainse ``máistir` as a shioncronú leis an mbrainse ``máistir` 'suas sruth)."

msgid ""
"On that line, there is a \"Pull request\" link. Clicking it will open a form "
"that will let you issue a pull request on the ``godotengine/godot`` upstream "
"repository. It should show you your two commits, and state \"Able to "
"merge\". If not (e.g. it has way more commits, or says there are merge "
"conflicts), don't create the PR yet, something went wrong. Go to our `Godot "
"Contributors Chat <https://chat.godotengine.org/>`_ and ask for support :)"
msgstr ""
"Ar an líne sin, tá nasc \"Iarratas Tarraingthe\". Má chliceálann tú uirthi, "
"osclófar foirm a ligfidh duit iarratas tarraingthe a eisiúint ar an stór "
"``godotengin/godot`` in aghaidh an tsrutha. Ba chóir go dtaispeánfadh sé do "
"dhá ghealltanas duit, agus go luafadh sé \"In ann cumasc\". Mura bhfuil "
"(m.sh. tá i bhfad níos mó gealltanais aige, nó má deir sé go bhfuil "
"coinbhleachtaí cumaisc ann), ná cruthaigh an PR fós, chuaigh rud éigin "
"mícheart. Téigh chuig ár `Godot Contributors Chat <https://"
"chat.godotenginine.org/>`_ agus iarr tacaíocht :)"

msgid ""
"Use an explicit title for the PR and put the necessary details in the "
"comment area. You can drag and drop screenshots, GIFs or zipped projects if "
"relevant, to showcase what your work implements. Click \"Create a pull "
"request\", and tadaa!"
msgstr ""
"Úsáid teideal sainráite don PR agus cuir na sonraí riachtanacha sa réimse "
"tráchtaireachta. Is féidir leat scannáin, GIFanna nó tionscadail zipped a "
"tharraingt agus a scaoileadh más ábhartha, chun an méid a chuireann do chuid "
"oibre i bhfeidhm Cliceáil “Cruthaigh iarratas tarraingthe”, agus déan!"

msgid "Modifying a pull request"
msgstr "Iarratas tarraingthe a modhnú"

msgid ""
"While it is reviewed by other contributors, you will often need to make "
"changes to your yet-unmerged PR, either because contributors requested them, "
"or because you found issues yourself while testing."
msgstr ""
"Cé go ndéanann ranníocóirí eile athbhreithniú air, is minic go mbeidh ort "
"athruithe a dhéanamh ar do PR nach bhfuil cumaisc fós, toisc gur iarr "
"ranníocóirí iad, nó toisc go bhfuair tú saincheisteanna tú féin agus tú ag "
"tástáil."

msgid ""
"The good news is that you can modify a pull request simply by acting on the "
"branch you made the pull request from. You can e.g. make a new commit on "
"that branch, push it to your fork, and the PR will be updated automatically:"
msgstr ""
"Is é an dea-scéal ná gur féidir leat iarratas tarraingthe a mhodhnú ach trí "
"ghníomhú ar an mbrainse a rinne tú an t-iarratas tarraingthe uaidh. Is "
"féidir leat m.sh. tiomantas nua a dhéanamh ar an mbrainse sin, é a bhrú "
"chuig do fhorc, agus déanfar an PR a nuashonrú go huathoibríoch:"

msgid ""
"However, be aware that in our PR workflow, we favor commits that bring the "
"codebase from one functional state to another functional state, without "
"having intermediate commits fixing up bugs in your own code or style issues. "
"Most of the time, we will prefer a single commit in a given PR (unless "
"there's a good reason to keep the changes separate). Instead of authoring a "
"new commit, consider using ``git commit --amend`` to amend the previous "
"commit with your fixes. The above example would then become:"
msgstr ""
"Mar sin féin, bí ar an eolas, inár sreabhadh oibre PR, go bhfabhraímid "
"gealltanais a thugann an bunachar cóid ó stát feidhmiúil amháin go stát "
"feidhmiúil eile, gan gealltanais idirmheánacha a bheith ag socrú fabhtanna i "
"do chód nó i do shaincheisteanna stíle féin. An chuid is mó den am, is fearr "
"linn tiomantas amháin i PR ar leith (mura bhfuil cúis mhaith ann na "
"hathruithe a choinneáil ar leithligh). In ionad tiomantas nua a údarú, "
"smaoinigh ar ``git commit --amend`` a úsáid chun an tiomantas roimhe seo a "
"leasú le do shocruithe. Ansin bheadh an sampla thuas:"

msgid "The interactive rebase"
msgstr "An athbhunú idirghníomhach"

msgid ""
"If you didn't follow the above steps closely to *amend* changes into a "
"commit instead of creating fixup commits, or if you authored your changes "
"without being aware of our workflow and Git usage tips, reviewers might "
"request you to *rebase* your branch to *squash* some or all of the commits "
"into one."
msgstr ""
"Mura lean tú na céimeanna thuas go dlúth chun athruithe a leasó* go "
"tiomantas in ionad gealltanais socraithe a chruthú, nó má d'údar tú "
"d'athruithe gan a bheith ar an eolas faoinár sreabhadh oibre agus leideanna "
"úsáide Git, d'fhéadfadh athbhreithnitheoirí iarraidh ort *athbhreithniú* "
"chuir* cuid de na gealltanais nó go léir i gceann amháin."

msgid ""
"Indeed, if some commits have been made following reviews to fix bugs, typos, "
"etc. in the original commit, they are not relevant to a future changelog "
"reader who would want to know what happened in the Godot codebase, or when "
"and how a given file was last modified."
msgstr ""
"Go deimhin, má rinneadh roinnt gealltanais tar éis na hathbhreithnithe chun "
"fabhtanna, clóscríobh, srl a shocrú sa tiomantas bunaidh, níl siad ábhartha "
"do léitheoir changelog amach anseo a bheadh ag iarraidh a fháil amach cad a "
"tharla sa chód Godot, nó cathain agus conas a modhníodh comhad ar leith go "
"deireanach."

msgid ""
"To squash those extraneous commits into the main one, we will have to "
"*rewrite history*. Right, we have that power. You may read that it's a bad "
"practice, and it's true when it comes to branches of the upstream repo. But "
"in your fork, you can do whatever you want, and everything is allowed to get "
"neat PRs :)"
msgstr ""
"Chun na gealltanna seachtracha sin a scuabadh isteach sa phríomhcheann, "
"beidh orainn *stair a athscríobh*. Ceart, tá an chumhacht sin againn. "
"B'fhéidir go léann tú gur droch-chleachtas é, agus tá sé fíor maidir le "
"brainsí den repo suas srutha. Ach i do fhorc, is féidir leat gach rud a "
"theastaíonn uait a dhéanamh, agus ceadaítear gach rud PRanna néata a fháil:)"

msgid ""
"We will use the *interactive rebase* ``git rebase -i`` to do this. This "
"command takes a commit ID or a branch name as argument, and will let you "
"modify all commits between that commit/branch and the last one in your "
"working branch, the so-called ``HEAD``."
msgstr ""
"Úsáidfimid an rebase* idirghníomhach* ``git rebase -i`` chun é seo a "
"dhéanamh. Glacann an t-ordú seo aitheantas tiomanta nó ainm brainse mar "
"argóint, agus ligfidh sé duit gach gealltanas idir an gealltanta/brainse sin "
"agus an ceann deireanach i do bhrainse oibre, an “HEAD” mar a thugtar air a "
"mhodhnú."

msgid ""
"While you can give any commit ID to ``git rebase -i`` and review everything "
"in between, the most common and convenient workflow involves rebasing on the "
"upstream ``master`` branch, which you can do with:"
msgstr ""
"Cé gur féidir leat aon ID tiomanta a thabhairt do `git rebase -i`` agus "
"athbhreithniú a dhéanamh ar gach rud eatarthu, is éard atá i gceist leis an "
"sreabhadh oibre is coitianta agus is áisiúla athbhunú ar an mbrainse "
"`master`` suas sruth, ar féidir leat a dhéanamh le:"

msgid ""
"Referencing branches in Git is a bit tricky due to the distinction between "
"remote and local branches. Here, ``upstream/master`` (with a `/`) is a local "
"branch which has been pulled from the ``upstream`` remote's ``master`` "
"branch."
msgstr ""
"Tá sé rud beag deacair do bhrainsí tagairt i Git mar gheall ar an idirdhealú "
"idir brainsí iargúlta agus áitiúla. Anseo, is brainse áitiúil é ``upstream/"
"master`` (le `/`) atá tarraingthe ó bhrainse ``máistir` iargúlta "
"``upstream``."

msgid ""
"Interactive rebases can only be done on local branches, so the `/` is "
"important here. As the upstream remote changes frequently, your local "
"``upstream/master`` branch may become outdated, so you can update it with "
"``git fetch upstream master``. Contrarily to ``git pull --rebase upstream "
"master`` which would update your currently checked out branch, ``fetch`` "
"will only update the ``upstream/master`` reference (which is distinct from "
"your local ``master`` branch... yes it's confusing, but you'll become "
"familiar with this little by little)."
msgstr ""
"Ní féidir athbhunaithe idirghníomhacha a dhéanamh ach ar bhrainsí áitiúla, "
"mar sin tá an `/` tábhachtach anseo. De réir mar a athraíonn an iargúlta "
"suas sruth go minic, d'fhéadfadh do bhrainse áitiúil ``upstream/master` a "
"bheith as dáta, ionas gur féidir leat é a nuashonrú le `git fetch upstream "
"master``. I gcoinne ``git pull --rebase upstream master`` a nuashonródh do "
"bhrainse atá seiceáilte faoi láthair, ní nuashonróidh ``fetch`` ach an "
"tagairt ``upstream/master`` (atá difriúil ó do bhrainse áitiúil ``master`... "
"tá sé mearbhall, ach beidh tú eolach air seo beagán ar bheag)."

msgid ""
"This will open a text editor (``vi`` by default, see `Git docs <https://git-"
"scm.com/book/en/v2/Customizing-Git-Git-Configuration#_core_editor>`_ to "
"configure your favorite one) with something which may look like this:"
msgstr ""
"Osclóidh sé seo eagarthóir téacs (``vi`` de réir réamhshocraithe, féach `Git "
"docs <https://git-scm.com/book/en/v2/Customizing-Git-Git-"
"Configuration#_core_editor>`_ a chumrú an ceann is fearr leat) le rud éigin "
"a d'fhéadfadh breathnú mar seo:"

msgid ""
"The editor will also show instructions regarding how you can act on those "
"commits. In particular, it should tell you that \"pick\" means to use that "
"commit (do nothing), and that \"squash\" and \"fixup\" can be used to *meld* "
"the commit in its parent commit. The difference between \"squash\" and "
"\"fixup\" is that \"fixup\" will discard the commit log from the squashed "
"commit. In our example, we are not interested in keeping the log of the "
"\"Fix a typo\" commit, so we use:"
msgstr ""
"Taispeánfaidh an t-eagarthóir treoracha freisin maidir le conas is féidir "
"leat gníomhú ar na gealltanais sin. Go háirithe, ba chóir dó a rá leat go "
"gciallaíonn “pioc” an tiomantas sin a úsáid (rud ar bith a dhéanamh), agus "
"gur féidir “squash” agus “fixup” a úsáid chun an tiomantas ina thuismitheoir "
"a thuismitheoir a thuismitheoireacht a úsáid. Is é an difríocht idir "
"“squash” agus “fixup” ná go gcuirfidh “fixup” an log tiomanta as an "
"tiomantas squashed. Inár sampla, níl suim againn logáil an tiomantas “Fix a "
"chlóscríobh” a choinneáil, mar sin úsáidimid:"

msgid ""
"Upon saving and quitting the editor, the rebase will occur. The second "
"commit will be melded into the first one, and ``git log`` and ``git show`` "
"should now confirm that you have only one commit with the changes from both "
"previous commits."
msgstr ""
"Nuair a shábháil agus scor an t-eagarthóir, tarlóidh an athbhunú. Déanfar an "
"dara tiomantas a mheascadh sa chéad cheann, agus ba chóir go dheimhnigh "
"``git log`` agus ``git show`` anois nach bhfuil ach tiomantas amháin agat "
"leis na hathruithe ón dá thiomantas roimhe seo."

msgid ""
"But! You rewrote the history, and now your local and remote branches have "
"diverged. Indeed, commit 1b4aad7 in the above example will have changed, and "
"therefore got a new commit hash. If you try to push to your remote branch, "
"it will raise an error:"
msgstr ""
"Ach! Athscríobh tú an stair, agus anois tá do bhrainsí áitiúla agus iargúlta "
"éagsúla. Go deimhin, beidh athrú ag tiomantas 1b4aad7 sa sampla thuas, agus "
"dá bhrí sin fuair sé hash tiomanta nua. Má dhéanann tú iarracht brú chuig do "
"bhrainse iargúlta, ardóidh sé earráid:"

msgid ""
"This is reasonable behavior, Git will not let you push changes that would "
"override remote content. But that's actually what we want to do here, so we "
"will have to *force* it:"
msgstr ""
"Is iompar réasúnta é seo, ní ligfidh Git duit athruithe a bhrú a dhéanfadh "
"ábhar iargúlta a shárú. Ach is é sin i ndáiríre an rud a theastaíonn uainn a "
"dhéanamh anseo, mar sin beidh orainn é a chur i bhfeidh*:"

msgid ""
"And tadaa! Git will happily *replace* your remote branch with what you had "
"locally (so make sure that's what you wanted, using ``git log``). This will "
"also update the PR accordingly."
msgstr ""
"Agus tadaa! Cuirfidh Git sásta *athsholáthraí* do bhrainse iargúlta leis an "
"méid a bhí agat go háitiúil (mar sin déan cinnte gurb é sin an rud a "
"theastaigh uait, ag baint úsáide as `git log``). Déanfaidh sé seo an PR a "
"nuashonrú dá réir sin."

msgid "Rebasing onto another branch"
msgstr "Ag athbhunú ar bhrainse eile"

msgid ""
"If you have accidentally opened your PR on the wrong branch, or need to "
"target another branch for some reason, you might need to filter out a lot of "
"commits that differ between the old branch (for example ``4.2``) and the new "
"branch (for example ``master``). This can make rebasing difficult and "
"tedious. Fortunately ``git`` has a command just for this situation, ``git "
"rebase --onto``."
msgstr ""
"Má d'oscail tú do PR ar an mbrainse mícheart de thaisme, nó má theastaíonn "
"uait díriú ar bhrainse eile ar chúis éigin, b'fhéidir go mbeidh ort go leor "
"gealltanais a scagadh amach atá difriúil idir an seanbhrainse (mar shampla "
"``4.2``) agus an bhrainse nua (mar shampla ``máistir`). Féadann sé seo "
"athbhunú a dhéanamh deacair agus deacair. Ar ámharaí an tsaoil tá ordú ag "
"``git ``díreach don chás seo, ``git rebase --onto``."

msgid ""
"If your PR was created from the ``4.2`` branch and you want to update it to "
"instead start at ``master`` the following steps *should* fix this in one "
"step:"
msgstr ""
"Má cruthaíodh do PR ón mbrainse ``4.2`` agus gur mhaith leat é a nuashonrú "
"chun tosú ag `máistir`` ina ionad sin ba chóir go ndéanfaí na céimeanna seo "
"a leanas a shocrú i gcéim amháin:"

msgid ""
"This will take all the commits on your branch *after* the ``4.2`` branch, "
"and then splice them on top of ``master``, ignoring any commits from the "
"``4.2`` branch not on the ``master`` branch. You may still need to do some "
"fixing, but this command should save you a lot of tedious work removing "
"commits."
msgstr ""
"Tógfaidh sé seo na gealltanais go léir ar do bhrainse* tar éis na brainse "
"``4.2``, agus ansin déanfaidh sé iad a cheangal ar bharr ``máistir`, ag "
"neamhaird ar aon ghealltanais ón mbrainse ``4.2`` nach bhfuil ar an mbrainse "
"``máistir`. B'fhéidir go gcaithfidh tú roinnt socraithe a dhéanamh fós, ach "
"ba cheart go sábhálfadh an t-ordú seo a lán oibre deacair duit ag baint "
"gealltanais."

msgid ""
"Just like above for the interactive rebase you need to force push your "
"branch to handle the different changes:"
msgstr ""
"Díreach mar thuas don athbhunú idirghníomhach ní mór duit do bhrainse a chur "
"i bhrú chun na hathruithe éagsúla a láimhseáil:"

msgid "Deleting a Git branch"
msgstr "Brainse Git a scriosadh"

msgid ""
"After your pull request gets merged, there's one last thing you should do: "
"delete your Git branch for the PR. There won't be issues if you don't delete "
"your branch, but it's good practice to do so. You'll need to do this twice, "
"once for the local branch and another for the remote branch on GitHub."
msgstr ""
"Tar éis d'iarratas tarraingthe a chumasc, tá rud deireanach amháin ba chóir "
"duit a dhéanamh: do bhrainse Git a scriosadh don PR. Ní bheidh "
"saincheisteanna ann mura scriosann tú do bhrainse, ach is dea-chleachtas é é "
"sin a dhéanamh. Beidh ort é seo a dhéanamh faoi dhó, uair amháin don "
"bhrainse áitiúil agus ceann eile don bhrainse iargúlta ar GitHub."

msgid "To delete our better Project Manager branch locally, use this command:"
msgstr ""
"Chun ár brainse Bainisteoir Tionscadail níos fearr a scriosadh go háitiúil, "
"úsáid an t-ordú seo:"

msgid ""
"Alternatively, if the branch hadn't been merged yet and we wanted to delete "
"it anyway, instead of ``-d`` you would use ``-D``."
msgstr ""
"De rogha air sin, mura ndéanfaí an brainse a chumasc fós agus mura raibh "
"muid ag iarraidh é a scriosadh ar aon nós, úsáidfeá ``-d`` in ionad ``-d``."

msgid "Next, to delete the remote branch on GitHub use this command:"
msgstr ""
"Ansin, chun an brainse iargúlta ar GitHub a scriosadh bain úsáid as an ordú "
"seo:"

msgid ""
"You can also delete the remote branch from the GitHub PR itself, a button "
"should appear once it has been merged or closed."
msgstr ""
"Is féidir leat an brainse iargúlta a scriosadh ón PR GitHub féin freisin, ba "
"chóir go mbeadh cnaipe le feiceáil nuair a bheidh sé cumasc nó dúnadh é."
