#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using multiple threads"
msgstr "Ag baint úsáide as snáitheanna il"

msgid "Threads"
msgstr "Snáitheanna"

msgid ""
"Threads allow simultaneous execution of code. It allows off-loading work "
"from the main thread."
msgstr ""
"Ceadaíonn snáitheanna forghníomhú comhuaineach an chóid. Ceadaíonn sé obair "
"lasmuigh den luchtú ón bpríomhshnáithe."

msgid "Godot supports threads and provides many handy functions to use them."
msgstr ""
"Tacaíonn Godot snáitheanna agus soláthraíonn sé go leor feidhmeanna áisiúla "
"chun iad a úsáid."

msgid ""
"If using other languages (C#, C++), it may be easier to use the threading "
"classes they support."
msgstr ""
"Má tá teangacha eile á n-úsáid acu (C#, C++), b'fhéidir go mbeadh sé níos "
"éasca na ranganna snáithithe a dtacaíonn siad leo a úsáid."

msgid ""
"Before using a built-in class in a thread, read :ref:`doc_thread_safe_apis` "
"first to check whether it can be safely used in a thread."
msgstr ""
"Sula n-úsáideann tú rang ionsuite i snáithe, "
"léigh :ref:'doc_thread_safe_apis' ar dtús chun a sheiceáil an féidir é a "
"úsáid go sábháilte i snáithe."

msgid "Creating a Thread"
msgstr "Snáithe a Chruthú"

msgid "To create a thread, use the following code:"
msgstr "Chun snáithe a chruthú, bain úsáid as an gcód seo a leanas:"

msgid ""
"Your function will, then, run in a separate thread until it returns. Even if "
"the function has returned already, the thread must collect it, so "
"call :ref:`Thread.wait_to_finish()<class_Thread_method_wait_to_finish>`, "
"which will wait until the thread is done (if not done yet), then properly "
"dispose of it."
msgstr ""
"Rithfidh d'fheidhm, ansin, i snáithe ar leith go dtí go bhfillfidh sí. Fiú "
"má tá an fheidhm ar ais cheana féin, caithfidh an snáithe í a bhailiú, mar "
"sin glaoigh ar :ref:`Thread.wait_to_finish() "
"<class_Thread_method_wait_to_finish>`, a fhanfaidh go dtí go mbeidh an "
"snáithe déanta (mura bhfuil sé déanta fós), ansin cuir de láimh i gceart é ."

msgid "Mutexes"
msgstr "MutexesName"

msgid ""
"Accessing objects or data from multiple threads is not always supported (if "
"you do it, it will cause unexpected behaviors or crashes). Read "
"the :ref:`doc_thread_safe_apis` documentation to understand which engine "
"APIs support multiple thread access."
msgstr ""
"Ní thacaítear i gcónaí le rochtain a fháil ar rudaí nó ar shonraí ó "
"shnáitheanna éagsúla (má dhéanann tú é, beidh sé ina chúis le hiompar nó "
"tuairteanna gan choinne). Léigh an doiciméadú :ref:'doc_thread_safe_apis' "
"chun tuiscint a fháil ar an inneall APInna a thacaíonn le rochtain snáithe "
"il."

msgid ""
"When processing your own data or calling your own functions, as a rule, try "
"to avoid accessing the same data directly from different threads. You may "
"run into synchronization problems, as the data is not always updated between "
"CPU cores when modified. Always use a :ref:`Mutex<class_Mutex>` when "
"accessing a piece of data from different threads."
msgstr ""
"Agus do shonraí féin á bpróiseáil nó ag glaoch ar do chuid feidhmeanna féin, "
"mar riail, déan iarracht rochtain a sheachaint ar na sonraí céanna go "
"díreach ó snáitheanna éagsúla. Seans go mbeidh fadhbanna sioncrónaithe agat, "
"mar ní i gcónaí a nuashonraítear na sonraí idir na croíleacáin LAP nuair a "
"athraítear iad. Úsáid :ref:`Mutex <class_Mutex>` i gcónaí agus tú ag "
"rochtain ar phíosa sonraí ó snáitheanna éagsúla."

msgid ""
"When calling :ref:`Mutex.lock()<class_Mutex_method_lock>`, a thread ensures "
"that all other threads will be blocked (put on suspended state) if they try "
"to *lock* the same mutex. When the mutex is unlocked by "
"calling :ref:`Mutex.unlock()<class_Mutex_method_unlock>`, the other threads "
"will be allowed to proceed with the lock (but only one at a time)."
msgstr ""
"Nuair a ghlaonn tú : ref: `Mutex.lock() <class_Mutex_method_lock>`, "
"cinntíonn snáithe go gcuirfear bac ar gach snáithe eile (a chur ar an staid "
"ar fionraí) má dhéanann siad iarracht * an mutex céanna a ghlasáil. Nuair a "
"dhíghlasáiltear an mutex trí ghlao a chur ar :ref:`Mutex.unlock() "
"<class_Mutex_method_unlock>`, beidh cead ag na snáitheanna eile dul ar "
"aghaidh leis an glas (ach gan ach ceann amháin ag an am)."

msgid "Here is an example of using a Mutex:"
msgstr "Seo sampla de Mutex a úsáid:"

msgid "Semaphores"
msgstr "Semaphoras"

msgid ""
"Sometimes you want your thread to work *\"on demand\"*. In other words, tell "
"it when to work and let it suspend when it isn't doing anything. For "
"this, :ref:`Semaphores<class_Semaphore>` are used. The "
"function :ref:`Semaphore.wait()<class_Semaphore_method_wait>` is used in the "
"thread to suspend it until some data arrives."
msgstr ""
"Uaireanta is mian leat do snáithe a oibriú *\"ar éileamh\"*. I bhfocail "
"eile, inis dó cathain a bheidh sé ag obair agus lig dó a chur ar fionraí "
"nuair nach bhfuil aon rud á dhéanamh aige. Chuige seo, "
"úsáidtear :ref:`Seaphores <class_Semaphore>`. Úsáidtear an "
"fheidhm :ref:`Semaphore.wait() <class_Semaphore_method_wait>` sa snáithe "
"chun é a chur ar fionraí go dtí go dtagann roinnt sonraí."

msgid ""
"The main thread, instead, "
"uses :ref:`Semaphore.post()<class_Semaphore_method_post>` to signal that "
"data is ready to be processed:"
msgstr ""
"Úsáideann an príomh-snáithe, ina ionad sin, :ref:`Semaphore.post() "
"<class_Semaphore_method_post>` chun a chur in iúl go bhfuil na sonraí réidh "
"le próiseáil:"
