#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Matrices and transforms"
msgstr "Matrící agus claochruithe"

msgid "Introduction"
msgstr "Réamhrá"

msgid ""
"Before reading this tutorial, we recommend that you thoroughly read and "
"understand the :ref:`doc_vector_math` tutorial, as this tutorial requires a "
"knowledge of vectors."
msgstr ""
"Sula léann tú an rang teagaisc seo, molaimid duit an teagaisc teagaisc:ref: "
"`doc_vector_math` a léamh agus a thuiscint go críochnúil, mar éilíonn an "
"rang teagaisc seo eolas ar veicteoirí."

msgid ""
"This tutorial is about *transformations* and how we represent them in Godot "
"using matrices. It is not a full in-depth guide to matrices. Transformations "
"are most of the time applied as translation, rotation, and scale, so we will "
"focus on how to represent those with matrices."
msgstr ""
"Baineann an rang teagaisc seo faoir* claochluaithe* agus conas a dhéanaimid "
"ionadaíocht orthu i Godot ag baint úsáide as maitrís. Ní treoir iomlán "
"domhain é maidir le maitrís. Cuirtear claochlú an chuid is mó den am i "
"bhfeidhm mar aistriúchán, rothlú agus scála, mar sin díreoidh muid ar conas "
"iad siúd a bhfuil maitrís acu a léiriú."

msgid ""
"Most of this guide focuses on 2D, using :ref:`class_Transform2D` and :ref:"
"`class_Vector2`, but the way things work in 3D is very similar."
msgstr ""
"Díríonn an chuid is mó den treoir seo ar 2D, ag baint úsáid:ref: "
"`Class_transform2D` agus:ref: `Class_Vector2`, ach tá an bealach a oibríonn "
"rudaí i 3D an-chosúil."

msgid ""
"As mentioned in the previous tutorial, it is important to remember that in "
"Godot, the Y axis points *down* in 2D. This is the opposite of how most "
"schools teach linear algebra, with the Y axis pointing up."
msgstr ""
"Mar a luadh sa rang teagaisc roimhe seo, tá sé tábhachtach cuimhneamh i "
"Godot, pointíonn ais Y* síos* i 2D. Seo a mhalairt ar an gcaoi a mhúineann "
"mórchuid na scoileanna algébra líneach, agus ais Y ag díriú suas."

msgid ""
"The convention is that the X axis is red, the Y axis is green, and the Z "
"axis is blue. This tutorial is color-coded to match these conventions, but "
"we will also represent the origin vector with a blue color."
msgstr ""
"Is é an coinbhinsiún go bhfuil an ais X dearg, go bhfuil an ais Y glas, agus "
"go bhfuil an ais Z gorm. Tá an rang teagaisc seo códaithe dathanna chun na "
"coinbhinsiúin seo a mheaitseáil, ach léireoidh muid an veicteoir tionscnaimh "
"le dath gorm freisin."

msgid "Matrix components and the Identity matrix"
msgstr "Comhpháirteanna maitrís agus an mhaitrís"

msgid ""
"The identity matrix represents a transform with no translation, no rotation, "
"and no scale. Let's start by looking at the identity matrix and how its "
"components relate to how it visually appears."
msgstr ""
"Is ionann an mhaitrís aitheantais agus claochlú gan aon aistriúchán, gan "
"rothlú, agus gan scála. Tosaímid trí bhreathnú ar an maitrís aitheantais "
"agus conas a bhaineann a chomhpháirteanna leis an gcuma atá air."

msgid ""
"Matrices have rows and columns, and a transformation matrix has specific "
"conventions on what each does."
msgstr ""
"Tá sraitheanna agus colúin ag maitrísí, agus tá coinbhinsiúin ar leith ag "
"maitrís claochlaithe ar cad a dhéanann gach ceann acu."

msgid ""
"In the image above, we can see that the red X vector is represented by the "
"first column of the matrix, and the green Y vector is likewise represented "
"by the second column. A change to the columns will change these vectors. We "
"will see how they can be manipulated in the next few examples."
msgstr ""
"San íomhá thuas, is féidir linn a fheiceáil go léiríonn an chéad cholún den "
"mhaitrís an veicteoir X dearg, agus go léiríonn an dara colún an veicteoir "
"glas Y mar an gcéanna. Athróidh athrú ar na colúin na veicteoirí seo. "
"Feicfimid conas is féidir iad a ionramháil sna cúpla sampla eile."

msgid ""
"You should not worry about manipulating rows directly, as we usually work "
"with columns. However, you can think of the rows of the matrix as showing "
"which vectors contribute to moving in a given direction."
msgstr ""
"Níor chóir duit a bheith buartha faoi shraitheanna a ionramháil go díreach, "
"mar oibrímid le colúin de ghnáth. Mar sin féin, is féidir leat smaoineamh ar "
"shraitheanna na maitrís a thaispeánann cé na veicteoirí a chuireann le "
"bogadh i dtreo ar leith."

msgid ""
"When we refer to a value such as ``t.x.y``, that's the Y component of the X "
"column vector. In other words, the bottom-left of the matrix. Similarly, ``t."
"x.x`` is top-left, ``t.y.x`` is top-right, and ``t.y.y`` is bottom-right, "
"where ``t`` is the Transform2D."
msgstr ""
"Nuair a thagraímid do luach mar `t.x.y``, is é sin an chomhpháirt Y den "
"veicteoir colún X. Is é sin le rá, bun ar chlé den mhaitrís. Ar an gcaoi "
"chéanna, tá `t.x.x`` barr ar chlé, ``t.y.x`` barr ar dheis, agus ``t.y.y`` "
"bun ar dheis, áit a bhfuil `t`` an Transform2D."

msgid "Scaling the transformation matrix"
msgstr "An maitrís claochlaithe a scálú"

msgid ""
"Applying a scale is one of the easiest operations to understand. Let's start "
"by placing the Godot logo underneath our vectors so that we can visually see "
"the effects on an object:"
msgstr ""
"Tá scála a chur i bhfeidhm ar cheann de na hoibríochtaí is éasca le "
"tuiscint. Tosaímid trí lógó Godot a chur faoinár veicteoirí ionas gur féidir "
"linn na héifeachtaí ar réad a fheiceáil go radhairc:"

msgid ""
"Now, to scale the matrix, all we need to do is multiply each component by "
"the scale we want. Let's scale it up by 2. 1 times 2 becomes 2, and 0 times "
"2 becomes 0, so we end up with this:"
msgstr ""
"Anois, chun an maitrís a scála, níl le déanamh againn ach gach comhpháirt a "
"iolrú leis an scála a theastaíonn uainn. Déanaimis é a scála suas faoi 2. 1 "
"uair 2 éiríonn 2, agus bíonn 0 uair 2 ina 0, mar sin críochnaímid leis seo:"

msgid "To do this in code, we multiply each of the vectors:"
msgstr "Chun é seo a dhéanamh sa chód, iolraímid gach ceann de na veicteoirí:"

msgid ""
"If we wanted to return it to its original scale, we can multiply each "
"component by 0.5. That's pretty much all there is to scaling a "
"transformation matrix."
msgstr ""
"Más mian linn é a thabhairt ar ais ar a scála bunaidh, is féidir linn gach "
"comhpháirt a iolrú faoi 0.5. Sin beagnach gach rud atá ann chun maitrís "
"claochlaithe a scálú."

msgid ""
"To calculate the object's scale from an existing transformation matrix, you "
"can use ``length()`` on each of the column vectors."
msgstr ""
"Chun scála an réada a ríomh ó mhaitrís claochlaithe atá ann cheana, is "
"féidir leat ``fad () ``a úsáid ar gach ceann de na veicteoirí colún."

msgid ""
"In actual projects, you can use the ``scaled()`` method to perform scaling."
msgstr ""
"I dtionscadail iarbhír, is féidir leat an modh `scaled () `a úsáid chun "
"scálú a dhéanamh."

msgid "Rotating the transformation matrix"
msgstr "Rothlú an maitrís claochl"

msgid ""
"We'll start the same way as earlier, with the Godot logo underneath the "
"identity matrix:"
msgstr ""
"Tosóimid ar an mbealach céanna le roimhe seo, leis an lógó Godot faoin "
"maitrís aitheantais:"

msgid ""
"As an example, let's say we want to rotate our Godot logo clockwise by 90 "
"degrees. Right now the X axis points right and the Y axis points down. If we "
"rotate these in our head, we would logically see that the new X axis should "
"point down and the new Y axis should point left."
msgstr ""
"Mar shampla, abair go dteastaíonn uainn ár lógó Godot a rothlú deaclaíoch "
"faoi 90 céim. Faoi láthair pointí an ais X ar dheis agus pointíonn ais Y "
"síos. Má rothlaímid iad seo inár gceann, feicfimid go loighciúil gur chóir "
"don ais X nua díriú síos agus gur chóir don ais Y nua pointe ar chlé."

msgid ""
"You can imagine that you grab both the Godot logo and its vectors, and then "
"spin it around the center. Wherever you finish spinning, the orientation of "
"the vectors determines what the matrix is."
msgstr ""
"Is féidir leat a shamhlú go nglacann tú lógó Godot agus a veicteoirí araon, "
"agus ansin é a chasadh timpeall an ionaid. Cibé áit a chríochnaíonn tú "
"sníomh, cinneann treoshuíomh na veicteoirí cad é an maitrís."

msgid ""
"We need to represent \"down\" and \"left\" in normal coordinates, so means "
"we'll set X to (0, 1) and Y to (-1, 0). These are also the values of "
"``Vector2.DOWN`` and ``Vector2.LEFT``. When we do this, we get the desired "
"result of rotating the object:"
msgstr ""
"Ní mór dúinn “síos” agus “ar chlé” a léiriú i ngnáthchomhordanáidí, mar sin "
"ciallaíonn go socraímid X go (0, 1) agus Y go (-1, 0). Is iad seo luachanna "
"``Vector2.down`` agus ``Vector2.left`` freisin. Nuair a dhéanaimid é seo, "
"faighimid an toradh atá ag teastáil maidir leis an réad a rothlú:"

msgid ""
"If you have trouble understanding the above, try this exercise: Cut a square "
"of paper, draw X and Y vectors on top of it, place it on graph paper, then "
"rotate it and note the endpoints."
msgstr ""
"Má tá deacracht agat an méid thuas a thuiscint, bain triail as an "
"gcleachtadh seo: Gearr cearnach páipéar, tarraing veicteoirí X agus Y ar a "
"bharr, cuir é ar pháipéar graf, ansin é a rothlú agus tabhair na "
"críochphointí faoi deara."

msgid ""
"To perform rotation in code, we need to be able to calculate the values "
"programmatically. This image shows the formulas needed to calculate the "
"transformation matrix from a rotation angle. Don't worry if this part seems "
"complicated, I promise it's the hardest thing you need to know."
msgstr ""
"Chun rothlú a dhéanamh sa chód, ní mór dúinn a bheith in ann na luachanna a "
"ríomh go cláraitheach. Taispeánann an íomhá seo na foirmlí a theastaíonn "
"chun an maitrís claochlaithe a ríomh ó uillinn Ná bíodh imní ort más cosúil "
"go bhfuil an chuid seo casta, geallaim gurb é an rud is deacra a chaithfidh "
"tú a bheith ar eolas agat."

msgid ""
"Godot represents all rotations with radians, not degrees. A full turn is "
"`TAU` or `PI*2` radians, and a quarter turn of 90 degrees is `TAU/4` or "
"`PI/2` radians. Working with `TAU` usually results in more readable code."
msgstr ""
"Léiríonn Godot gach rothlú le radáin, ní céimeanna. Is é cas iomlán radáin "
"`TAU` nó `PI* 2`, agus is é ceathrú cas de 90 céim ná radians `TAU/4` nó "
"`PI/2`. De ghnáth bíonn cód níos inléite mar thoradh ar oibriú le `TAU `."

msgid ""
"Fun fact: In addition to Y being *down* in Godot, rotation is represented "
"clockwise. This means that all the math and trig functions behave the same "
"as a Y-is-up CCW system, since these differences \"cancel out\". You can "
"think of rotations in both systems being \"from X to Y\"."
msgstr ""
"Fíric spraoi: Chomh maith le Y* síos* i Godot, léirítear rothlú i gcéal. "
"Ciallaíonn sé seo go n-iompraíonn na feidhmeanna matamaitice agus trig go "
"léir mar an gcéanna le córas CCW Y-is-up, ós rud é go “cealaíonn na "
"difríochtaí seo”. Is féidir leat smaoineamh ar rothlacha sa dá chóras atá “ó "
"X go Y”."

msgid ""
"In order to perform a rotation of 0.5 radians (about 28.65 degrees), we plug "
"in a value of 0.5 to the formula above and evaluate to find what the actual "
"values should be:"
msgstr ""
"D'fhonn rothlú 0.5 radáin (thart ar 28.65 céim) a dhéanamh, déanaimid luach "
"0.5 a phlugáil isteach leis an bhfoirmle thuas agus déanaimid meastóireacht "
"chun a fháil amach cad ba chóir go mbeadh na luachanna iarbhír:"

msgid "Here's how that would be done in code (place the script on a Node2D):"
msgstr "Seo mar a dhéanfaí é sin sa chód (cuir an script ar Node2D):"

msgid ""
"To calculate the object's rotation from an existing transformation matrix, "
"you can use ``atan2(t.x.y, t.x.x)``, where t is the Transform2D."
msgstr ""
"Chun rothlú an réada a ríomh ó mhaitrís claochlaithe atá ann cheana, is "
"féidir leat ``atan2 (t.x.y, t.x.x) `a úsáid, áit a bhfuil t an Transform2D."

msgid ""
"In actual projects, you can use the ``rotated()`` method to perform "
"rotations."
msgstr ""
"I dtionscadail iarbhír, is féidir leat an modh `rothlaithe () `a úsáid chun "
"rothlacha a dhéanamh."

msgid "Basis of the transformation matrix"
msgstr "Bonn na maitrís claochlaithe"

msgid ""
"So far we have only been working with the ``x`` and ``y``, vectors, which "
"are in charge of representing rotation, scale, and/or shearing (advanced, "
"covered at the end). The X and Y vectors are together called the *basis* of "
"the transformation matrix. The terms \"basis\" and \"basis vectors\" are "
"important to know."
msgstr ""
"Go dtí seo ní raibh muid ag obair ach leis na veicteoirí ``x`` agus ``y``, "
"atá i gceannas ar rothlú, scála agus/nó gearradh a léiriú (chun cinn, "
"clúdaithe ag an deireadh). Tugtar *bun* na maitrís claochlaithe ar na "
"veicteoirí X agus Y le chéile. Tá sé tábhachtach go mbeadh eolas agat ar na "
"téarmaí “bunús” agus “veicteoirí bonn”."

msgid ""
"You might have noticed that :ref:`class_Transform2D` actually has three :ref:"
"`class_Vector2` values: ``x``, ``y``, and ``origin``. The ``origin`` value "
"is not part of the basis, but it is part of the transform, and we need it to "
"represent position. From now on we'll keep track of the origin vector in all "
"examples. You can think of origin as another column, but it's often better "
"to think of it as completely separate."
msgstr ""
"B'fhéidir gur thug tú faoi deara go bhfuil trí luachanna ag: ref: "
"`Class_transform2D` i ndáiríre: `Class_Vector2`: ``x``, ``y``, agus "
"``origin``. Níl an luach ``bunaidh 'mar chuid den bhunús, ach is cuid den "
"chlaochlú é, agus teastaíonn sé uainn chun seasamh a léiriú. Ón seo amach "
"coinneoimid súil ar an veicteoir tionscnaimh i ngach sampla. Is féidir leat "
"smaoineamh ar thionscnamh mar cholún eile, ach is minic a bhíonn sé níos "
"fearr smaoineamh air go hiomlán ar leithligh."

msgid ""
"Note that in 3D, Godot has a separate :ref:`class_Basis` structure for "
"holding the three :ref:`class_Vector3` values of the basis, since the code "
"can get complex and it makes sense to separate it from :ref:"
"`class_Transform3D` (which is composed of one :ref:`class_Basis` and one "
"extra :ref:`class_Vector3` for the origin)."
msgstr ""
"Tabhair faoi deara go bhfuil struchtúr leithlithe:ref: `Class_Basis` ag "
"Godot i 3D chun na trí luach: `Class_Vector3` den bhonn a choinneáil, ós rud "
"é gur féidir leis an gcód a bheith casta agus tá sé ciallmhar é a scaradh ó:"
"ref: `Class_transform3d` (atá comhdhéanta de cheann:ref: `Class_Basis` agus "
"ceann breise:ref: `Class_Vector3` don tionscnamh)."

msgid "Translating the transformation matrix"
msgstr "Aistriú an maitrís claochl"

msgid ""
"Changing the ``origin`` vector is called *translating* the transformation "
"matrix. Translating is basically a technical term for \"moving\" the object, "
"but it explicitly does not involve any rotation."
msgstr ""
"Tugtar *aistriú* an maitrís claochlaithe ar an veicteoir ``bunaidh ``a "
"athrú. Go bunúsach is téarma teicniúil é an t-aistriúchán chun an réad a "
"“bhogadh”, ach níl aon rothlú i gceist leis go sainráite."

msgid ""
"Let's work through an example to help understand this. We will start with "
"the identity transform like last time, except we will keep track of the "
"origin vector this time."
msgstr ""
"Oibrimid trí shampla chun cabhrú leis seo a thuiscint. Tosóimid leis an "
"gclaochlú aitheantais mar an uair dheireanach, ach amháin coinneoimid súil "
"ar an veicteoir tionscnaimh an uair seo."

msgid ""
"If we want to move the object to a position of (1, 2), we need to set its "
"``origin`` vector to (1, 2):"
msgstr ""
"Más mian linn an réad a bhogadh go suíomh de (1, 2), ní mór dúinn a "
"veicteoir ``bunaidh ``a shocrú go (1, 2):"

msgid ""
"There is also a ``translated_local()`` method, which performs a different "
"operation to adding or changing ``origin`` directly. The "
"``translated_local()`` method will translate the object *relative to its own "
"rotation*. For example, an object rotated 90 degrees clockwise will move to "
"the right when ``translated_local()`` with ``Vector2.UP``. To translate "
"*relative to the global/parent frame* use ``translated()`` instead."
msgstr ""
"Tá modh ``translated_local () `ann freisin, a dhéanann oibríocht dhifriúil "
"chun ``origin` a chur leis nó a athrú go díreach. Aistreoidh an modh "
"``translated_local () ``an réad*i gcoibhneas lena rothlú féin*. Mar shampla, "
"bogadh réad a rothlaítear 90 céim i gcéile ar dheis nuair a bheidh "
"`translated_local () ``le `Vector2.up``. Chun aistriú *i gcoibhneas leis an "
"bhfráma domhanna/tuismitheoir* bain úsáid as ``aistrithe () ``ina ionad."

msgid ""
"Godot's 2D uses coordinates based on pixels, so in actual projects you will "
"want to translate by hundreds of units."
msgstr ""
"Úsáideann 2D Godot comhordanáidí bunaithe ar phicteilíní, mar sin i "
"dtionscadail iarbhír beidh tú ag iarraidh na céadta aonad a aistriú."

msgid "Putting it all together"
msgstr "Ag cur é go léir le chéile"

msgid ""
"We're going to apply everything we mentioned so far onto one transform. To "
"follow along, create a project with a Sprite2D node and use the Godot logo "
"for the texture resource."
msgstr ""
"Táimid chun gach rud a luaigh muid go dtí seo a chur i bhfeidhm ar chlaochlú "
"amháin. Chun leanúint leis, cruthaigh tionscadal le nód Sprite2D agus bain "
"úsáid as lógó Godot don acmhainn uigeachta."

msgid ""
"Let's set the translation to (350, 150), rotate by -0.5 rad, and scale by 3. "
"I've posted a screenshot, and the code to reproduce it, but I encourage you "
"to try and reproduce the screenshot without looking at the code!"
msgstr ""
"Socraímid an t-aistriúchán go (350, 150), rothlú faoi -0.5 rad, agus scála "
"ag 3. Tá pictiúr curtha i bpost agam, agus an cód chun é a atáirgeadh, ach "
"molaim duit triail a bhaint as an scáileán a atáirgeadh gan féachaint ar an "
"gcód!"

msgid "Shearing the transformation matrix (advanced)"
msgstr "An maitrís claochlaithe a ghearradh (chun cinn)"

msgid ""
"If you are only looking for how to *use* transformation matrices, feel free "
"to skip this section of the tutorial. This section explores an uncommonly "
"used aspect of transformation matrices for the purpose of building an "
"understanding of them."
msgstr ""
"Mura bhfuil tú ag lorg ach conas* maitrís claochlaithe* a úsáid, bíodh "
"leisce ort an chuid seo den rang teagaisc a scipeáil. Déanann an chuid seo "
"iniúchadh ar ghné neamhchoitianta a úsáidtear de mhairicí claochlaithe chun "
"tuiscint a thógáil orthu."

msgid "Node2D provides a shearing property out of the box."
msgstr "Soláthraíonn Node2D maoin gearrtha amach as an mbosca."

msgid ""
"You may have noticed that a transform has more degrees of freedom than the "
"combination of the above actions. The basis of a 2D transformation matrix "
"has four total numbers in two :ref:`class_Vector2` values, while a rotation "
"value and a Vector2 for scale only has 3 numbers. The high-level concept for "
"the missing degree of freedom is called *shearing*."
msgstr ""
"B'fhéidir gur thug tú faoi deara go bhfuil níos mó céimeanna saoirse ag "
"claochlú ná an teaglaim de na gníomhartha thuas. Tá ceithre uimhir iomlána i "
"dhá luach: ref: `Class_Vector2` i mbunús maitrís claochlaithe 2D, agus níl "
"ach 3 uimhir ag luach rothlú agus Vector2 do scála. Tugtar *gearing* ar an "
"gcoincheap ardleibhéil maidir leis an leibhéal saoirse atá in easnamh."

msgid ""
"Normally, you will always have the basis vectors perpendicular to each "
"other. However, shearing can be useful in some situations, and understanding "
"shearing helps you understand how transforms work."
msgstr ""
"De ghnáth, beidh na bonn-veicteora agat i gcónaí ingearach lena chéile. Mar "
"sin féin, is féidir le lomadh a bheith úsáideach i gcásanna áirithe, agus "
"cabhraíonn tuiscint ar lomadh leat tuiscint a fháil ar conas a oibríonn "
"claochlú."

msgid ""
"To show you visually how it will look, let's overlay a grid onto the Godot "
"logo:"
msgstr ""
"Chun a thaispeáint duit go radhairc conas a bheidh cuma air, déanaimis "
"greille a fhorleagan ar lógó Godot:"

msgid ""
"Each point on this grid is obtained by adding the basis vectors together. "
"The bottom-right corner is X + Y, while the top-right corner is X - Y. If we "
"change the basis vectors, the entire grid moves with it, as the grid is "
"composed of the basis vectors. All lines on the grid that are currently "
"parallel will remain parallel no matter what changes we make to the basis "
"vectors."
msgstr ""
"Faightear gach pointe ar an eangach seo trí na bunveicteoirí a chur le "
"chéile. Is é X + Y an cúinne bun ar dheis, agus is é X - Y an cúinne barr ar "
"dheis má athraímid na bunveicteoirí, gluaiseann an greille iomlán leis, "
"toisc go bhfuil an greille comhdhéanta de na bunveicteoirí. Fanfaidh gach "
"líne ar an eangach atá comhthreomhar faoi láthair comhthreomhar is cuma cad "
"iad na hathruithe a dhéanaimid ar na bunveicteoirí."

msgid "As an example, let's set Y to (1, 1):"
msgstr "Mar shampla, socraímid Y go (1, 1):"

msgid ""
"You can't set the raw values of a Transform2D in the editor, so you *must* "
"use code if you want to shear the object."
msgstr ""
"Ní féidir leat amluachanna Transform2D a shocrú san eagarthóir, mar sin ní "
"mór duit* cód a úsáid más mian leat an réad a ghearradh."

msgid ""
"Due to the vectors no longer being perpendicular, the object has been "
"sheared. The bottom-center of the grid, which is (0, 1) relative to itself, "
"is now located at a world position of (1, 1)."
msgstr ""
"Toisc nach bhfuil na veicteoirí ingearach a thuilleadh, tá an réad gearrtha. "
"Tá lár bun na greille, atá (0, 1) i gcoibhneas leis féin, suite anois ag "
"suíomh domhanda de (1, 1)."

msgid ""
"The intra-object coordinates are called UV coordinates in textures, so let's "
"borrow that terminology for here. To find the world position from a relative "
"position, the formula is U * X + V * Y, where U and V are numbers and X and "
"Y are the basis vectors."
msgstr ""
"Tugtar comhordanáidí UV in uigeachtaí ar na comhordanáidí laistigh den réad, "
"mar sin déanaimis an téarmaíocht sin ar iasacht an Chun suíomh an domhain a "
"fháil ó shuíomh coibhneasta, is í U * X + V* Y an fhoirmle, áit a bhfuil U "
"agus V uimhreacha agus is iad X agus Y na bunveicteoirí."

msgid ""
"The bottom-right corner of the grid, which is always at the UV position of "
"(1, 1), is at the world position of (2, 1), which is calculated from X*1 + "
"Y*1, which is (1, 0) + (1, 1), or (1 + 1, 0 + 1), or (2, 1). This matches up "
"with our observation of where the bottom-right corner of the image is."
msgstr ""
"Tá cúinne bun ar dheis na greille, atá i gcónaí ag suíomh UV (1, 1), ag "
"suíomh domhanda (2, 1), a ríomhtar ó X* 1 + Y* 1, is é sin (1, 0) + (1, 1), "
"nó (1 + 1, 0 + 1), nó (2, 1). Meaitseálann sé seo lenár bhbreathnóireacht ar "
"an áit a bhfuil cúinne bun ar dheis na híomhá."

msgid ""
"Similarly, the top-right corner of the grid, which is always at the UV "
"position of (1, -1), is at the world position of (0, -1), which is "
"calculated from X*1 + Y*-1, which is (1, 0) - (1, 1), or (1 - 1, 0 - 1), or "
"(0, -1). This matches up with our observation of where the top-right corner "
"of the image is."
msgstr ""
"Ar an gcaoi chéanna, tá cúinne barr ar dheis den eangach, atá i gcónaí ag "
"suíomh UV (1, -1), ag suíomh domhanda (0, -1), a ríomhtar ó X* 1 + Y*-1, is "
"é sin (1, 0) - (1, 1), nó (1 - 1, 0 - 1), nó (0, -1). Meaitseálann sé seo "
"lenár bhbreathnóireacht ar an áit a bhfuil cúinne barr ar dheis den íomhá."

msgid ""
"In Godot, all transform math is done relative to the parent node. When we "
"refer to \"world position\", that would be relative to the node's parent "
"instead, if the node had a parent."
msgstr ""
"I Godot, déantar gach matamaitic claochlaithe i gcoibhneas leis an nód "
"tuismitheora. Nuair a thagraímid do “seasamh domhanda”, bheadh sé sin i "
"gcoibhneas le tuismitheoir an nód ina ionad sin, dá mbeadh tuismitheoir ag "
"an nód."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about linear transformations: https://www.youtube.com/watch?"
"v=kYB8IZa5AuE"
msgstr ""
"Más mian leat míniú breise, ba cheart duit físeán den scoth 3Blue1Brown a "
"sheiceáil faoi chlaochlú líneacha: https://www.youtube.com/watch?"
"v=kYB8IZa5AuE"

msgid "Practical applications of transforms"
msgstr "Feidhmchláir phraiticiúla athruithe"

msgid ""
"In actual projects, you will usually be working with transforms inside "
"transforms by having multiple :ref:`class_Node2D` or :ref:`class_Node3D` "
"nodes parented to each other."
msgstr ""
"I dtionscadail iarbhír, de ghnáth beidh tú ag obair le claochruithe taobh "
"istigh de chlaochruithe trí nóid iolracha: ref: `class_node2d` nó: ref: "
"`class_node3d` a bheith tuismitheach lena chéile."

msgid ""
"However, it's useful to understand how to manually calculate the values we "
"need. We will go over how you could use :ref:`class_Transform2D` or :ref:"
"`class_Transform3D` to manually calculate transforms of nodes."
msgstr ""
"Mar sin féin, tá sé úsáideach a thuiscint conas na luachanna a theastaíonn "
"uainn a ríomh de láimh. Déanfaimid thar an gcaoi a bhféadfá úsáid: ref: "
"`Class_transform2D` nó: ref: `Class_transform3D` chun athruithe nóid a ríomh "
"de láimh."

msgid "Converting positions between transforms"
msgstr "Poist a thiontú idir claochruithe"

msgid ""
"There are many cases where you'd want to convert a position in and out of a "
"transform. For example, if you have a position relative to the player and "
"would like to find the world (parent-relative) position, or if you have a "
"world position and want to know where it is relative to the player."
msgstr ""
"Tá go leor cásanna ann inar mhaith leat post a thiontú isteach agus amach as "
"claochlú. Mar shampla, má tá post agat i gcoibhneas leis an imreoir agus gur "
"mhaith leat seasamh an domhain (tuismitheoir-gaol) a fháil, nó má tá seasamh "
"domhanda agat agus má theastaíonn uait a fháil amach cá bhfuil sé i "
"gcoibhneas leis an imreoir."

msgid ""
"We can find what a vector relative to the player would be defined in world "
"space as using the ``*`` operator:"
msgstr ""
"Is féidir linn a fháil amach cad a shainmhíníodh veicteoir i gcoibhneas leis "
"an imreoir sa spás domhanda mar úsáid a bhaint as an oibreoir ``*``:"

msgid ""
"And we can use the ``*`` operator in the opposite order to find a what world "
"space position would be if it was defined relative to the player:"
msgstr ""
"Agus is féidir linn an t-oibreoir `*`` a úsáid san ord eile chun a fháil cén "
"suíomh spáis domhanda a bheadh dá sainmhíníodh é i gcoibhneas leis an "
"imreoir:"

msgid ""
"If you know in advance that the transform is positioned at (0, 0), you can "
"use the \"basis_xform\" or \"basis_xform_inv\" methods instead, which skip "
"dealing with translation."
msgstr ""
"Má tá a fhios agat roimh ré go bhfuil an claochlú suite ag (0, 0), is féidir "
"leat na modhanna “basis_xform” nó “basis_xform_inv” a úsáid ina ionad sin, a "
"scipeann déileáil le haistriúchán."

msgid "Moving an object relative to itself"
msgstr "Rud a bhogadh i gcoibhneas leis féin"

msgid ""
"A common operation, especially in 3D games, is to move an object relative to "
"itself. For example, in first-person shooter games, you would want the "
"character to move forward (-Z axis) when you press :kbd:`W`."
msgstr ""
"Is é oibríocht choitianta, go háirithe i gcluichí 3D, rud a bhogadh i "
"gcoibhneas leis féin. Mar shampla, i gcluichí lámhach céad duine, ba mhaith "
"leat go mbeadh an carachtar ag bogadh ar aghaidh (ais -Z) nuair a bhrúite:"
"kbd: `W`."

msgid ""
"Since the basis vectors are the orientation relative to the parent, and the "
"origin vector is the position relative to the parent, we can add multiples "
"of the basis vectors to move an object relative to itself."
msgstr ""
"Ós rud é gurb iad na bunveicteora an treoshuíomh i gcoibhneas leis an "
"tuismitheoir, agus gurb é an veicteoir tionscnaimh an suíomh i gcoibhneas "
"leis an tuismitheoir, is féidir linn iolraí de na bunveicteora a chur leis "
"chun réad a bhogadh i gcoibhneas leis féin."

msgid "This code moves an object 100 units to its own right:"
msgstr "Bogann an cód seo réad 100 aonad ar a cheart féin:"

msgid "For moving in 3D, you would need to replace \"x\" with \"basis.x\"."
msgstr "Chun bogadh i 3D, bheadh ort “basis.x” a chur in ionad “x”."

msgid ""
"In actual projects, you can use ``translate_object_local`` in 3D or "
"``move_local_x`` and ``move_local_y`` in 2D to do this."
msgstr ""
"I dtionscadail iarbhír, is féidir leat ``translate_object_local`` a úsáid i "
"3D nó ``move_local_x`` agus ``move_local_y`` i 2D chun é seo a dhéanamh."

msgid "Applying transforms onto transforms"
msgstr "Athraitheacha a chur i bhfeidhm ar athshlánacha"

msgid ""
"One of the most important things to know about transforms is how you can use "
"several of them together. A parent node's transform affects all of its "
"children. Let's dissect an example."
msgstr ""
"Ceann de na rudaí is tábhachtaí atá ar eolas faoi athshlú ná conas is féidir "
"leat roinnt acu a úsáid le chéile. Bíonn tionchar ag claochlú nóid "
"tuismitheora ar a leanaí go léir. Déanaimis sampla a scriosadh."

msgid ""
"In this image, the child node has a \"2\" after the component names to "
"distinguish them from the parent node. It might look a bit overwhelming with "
"so many numbers, but remember that each number is displayed twice (next to "
"the arrows and also in the matrices), and that almost half of the numbers "
"are zero."
msgstr ""
"San íomhá seo, tá “2\" ag an nód linbh i ndiaidh ainmneacha na "
"gcomhpháirteanna chun iad a idirdhealú ón nód tuismitheora. D'fhéadfadh go "
"mbeadh cuma beagán an-mhór air leis an oiread sin uimhreacha, ach cuimhnigh "
"go dtaispeántar gach uimhir faoi dhó (in aice leis na saigheada agus sna "
"maitrís freisin), agus go bhfuil beagnach leath de na huimhreacha nialas."

msgid ""
"The only transformations going on here are that the parent node has been "
"given a scale of (2, 1), the child has been given a scale of (0.5, 0.5), and "
"both nodes have been given positions."
msgstr ""
"Is iad na haon chlaochlú atá ar siúl anseo ná gur tugadh scála de (2, 1) don "
"tuismitheoir nód, tugadh scála (0.5, 0.5) don leanbh, agus tugadh poist don "
"dá nóid."

msgid ""
"All child transformations are affected by the parent transformations. The "
"child has a scale of (0.5, 0.5), so you would expect it to be a 1:1 ratio "
"square, and it is, but only relative to the parent. The child's X vector "
"ends up being (1, 0) in world space, because it is scaled by the parent's "
"basis vectors. Similarly, the child node's ``origin`` vector is set to (1, "
"1), but this actually moves it (2, 1) in world space, due to the parent "
"node's basis vectors."
msgstr ""
"Bíonn tionchar ag na claochlú tuismitheoirí ar gach claochlú linbh Tá scála "
"(0.5, 0.5) ag an leanbh, mar sin bheadh tú ag súil go mbeadh sé ina chearnóg "
"cóimheas 1:1, agus tá sé, ach amháin i gcoibhneas leis an tuismitheoir. "
"Críochnaíonn veicteoir X an linbh (1, 0) i spás domhanda, toisc go ndéantar "
"é a scáileáil ag bhunfhreagairí an tuismitheora. Ar an gcaoi chéanna, tá "
"veicteoir ``bunaidh ``an nód linbh socraithe go (1, 1), ach bogann sé seo é "
"i ndáiríre (2, 1) i spás domhanda, mar gheall ar bhunfhreagairí an "
"tuismitheora nód."

msgid ""
"To calculate a child transform's world space transform manually, this is the "
"code we would use:"
msgstr ""
"Chun claochlú spáis domhanda claochlú linbh a ríomh de láimh, is é seo an "
"cód a úsáidfimid:"

msgid ""
"In actual projects, we can find the world transform of the child by applying "
"one transform onto another using the ``*`` operator:"
msgstr ""
"I dtionscadail iarbhír, is féidir linn claochlú domhanda an linbh a fháil "
"trí chlaochlú amháin a chur i bhfeidhm ar cheann eile ag baint úsáide as an "
"oibreoir ``*``:"

msgid "When multiplying matrices, order matters! Don't mix them up."
msgstr ""
"Agus maitrís á iolrú agat, tá tábhacht ag ordú! Ná déan iad a mheascadh suas."

msgid "Lastly, applying the identity transform will always do nothing."
msgstr ""
"Ar deireadh, ní dhéanfaidh sé rud ar bith i gcónaí an t-athrú céannachta a "
"chur i bhfeidhm."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about matrix composition: https://www.youtube.com/watch?"
"v=XkY2DOUCWMU"
msgstr ""
"Más mian leat míniú breise, ba cheart duit físeán den scoth 3Blue1Brown a "
"sheiceáil faoi chomhdhéanamh maitrís: https://www.youtube.com/watch?"
"v=XkY2DOUCWMU"

msgid "Inverting a transformation matrix"
msgstr "Maitrís claochlaithe a inbhéarú"

msgid ""
"The \"affine_inverse\" function returns a transform that \"undoes\" the "
"previous transform. This can be useful in some situations. Let's take a look "
"at a few examples."
msgstr ""
"Tugann an fheidhm “affine_inverse” claochlú ar ais a “dhíghníonn” an "
"claochlú roimhe seo. Is féidir leis seo a bheith úsáideach i gcásanna "
"áirithe. Breathnaímid ar chúpla sampla."

msgid ""
"Multiplying an inverse transform by the normal transform undoes all "
"transformations:"
msgstr ""
"Má dhéantar claochlú inbhéartach a iolrú faoin ngnáthchlaochlú cealaítear "
"gach claochlú:"

msgid ""
"Transforming a position by a transform and its inverse results in the same "
"position:"
msgstr ""
"Seasamh a athrú trí chlaochlú agus bíonn an suíomh céanna mar thoradh ar a "
"inbhéartha:"

msgid "How does it all work in 3D?"
msgstr "Conas a oibríonn sé go léir i 3D?"

msgid ""
"One of the great things about transformation matrices is that they work very "
"similarly between 2D and 3D transformations. All the code and formulas used "
"above for 2D work the same in 3D, with 3 exceptions: the addition of a third "
"axis, that each axis is of type :ref:`class_Vector3`, and also that Godot "
"stores the :ref:`class_Basis` separately from the :ref:`class_Transform3D`, "
"since the math can get complex and it makes sense to separate it."
msgstr ""
"Ceann de na rudaí iontacha faoi mhairicí claochlú ná go n-oibríonn siad ar "
"an gcéanna idir claochlú 2D agus 3D. Oibríonn an cód agus na foirmlí go léir "
"a úsáidtear thuas le haghaidh 2D mar an gcéanna i 3D, le 3 eisceacht: tríú "
"ais a chur leis, go bhfuil gach ais de chineál:ref: `Class_Vector3`, agus go "
"stórálann Godot an:ref: `Class_Basis` ar leithligh ó:ref: "
"`Class_transform3D`, ós rud é gur féidir leis a bheith casta agus tá sé "
"ciall é a scaradh."

msgid ""
"All of the concepts for how translation, rotation, scale, and shearing work "
"in 3D are all the same compared to 2D. To scale, we take each component and "
"multiply it; to rotate, we change where each basis vector is pointing; to "
"translate, we manipulate the origin; and to shear, we change the basis "
"vectors to be non-perpendicular."
msgstr ""
"Tá na coincheapa go léir maidir leis an gcaoi a n-oibríonn aistriúchán, "
"rothlú, scála agus gearradh i 3D mar an gcéanna i gcomparáid le 2D. Chun "
"scála a dhéanamh, tógaimid gach comhpháirt agus é a iolrú; chun rothlú, "
"athraímid an áit a bhfuil gach bunfheicteoir ag pointeáil; chun aistriú, "
"déanaimid an tionscnamh a ionramháil; agus chun a ghearradh, athraímid na "
"bunveicteoirí go mbeidh siad neamh-ingearach."

msgid ""
"If you would like, it's a good idea to play around with transforms to get an "
"understanding of how they work. Godot allows you to edit 3D transform "
"matrices directly from the inspector. You can download this project which "
"has colored lines and cubes to help visualize the :ref:`class_Basis` vectors "
"and the origin in both 2D and 3D: https://github.com/godotengine/godot-demo-"
"projects/tree/master/misc/matrix_transform"
msgstr ""
"Más mian leat, is smaoineamh maith é imirt timpeall le claochruithe chun "
"tuiscint a fháil ar an gcaoi a n-oibríonn siad. Ligeann Godot duit maitrís "
"claochlaithe 3D a chur in eagar go díreach ón gcigre. Is féidir leat an "
"tionscadal seo a íoslódáil a bhfuil línte agus ciúbanna daite aige chun "
"cabhrú leis na veicteoirí: ref: `Class_basis` agus an bunús i 2D agus 3D a "
"shamhlú: https://github.com/godotengine/godot-demo-projects/tree/master/misc/"
"matrix_transform"

msgid ""
"You cannot edit Node2D's transform matrix directly in Godot 4.0's inspector. "
"This may be changed in a future release of Godot."
msgstr ""
"Ní féidir leat maitrís claochlaithe Node2D a chur in eagar go díreach i "
"gcigre Godot 4.0. Féadfar é seo a athrú i scaoileadh Godot amach anseo."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about 3D linear transformations: https://www.youtube.com/"
"watch?v=rHLEWRxRGiM"
msgstr ""
"Más mian leat míniú breise, ba cheart duit féachaint ar fhíseán den scoth "
"3Blue1Brown faoi chlaochlú líneacha 3D: https://www.youtube.com/watch?"
"v=rHLEWRxRGiM"

msgid "Representing rotation in 3D (advanced)"
msgstr "Léiriú rothlú i 3D (chun cinn)"

msgid ""
"The biggest difference between 2D and 3D transformation matrices is how you "
"represent rotation by itself without the basis vectors."
msgstr ""
"Is é an difríocht is mó idir maitrís claochlaithe 2D agus 3D ná an chaoi a "
"léiríonn tú rothlú leis féin gan na bunveicteoirí."

msgid ""
"With 2D, we have an easy way (atan2) to switch between a transformation "
"matrix and an angle. In 3D, rotation is too complex to represent as one "
"number. There is something called Euler angles, which can represent "
"rotations as a set of 3 numbers, however, they are limited and not very "
"useful, except for trivial cases."
msgstr ""
"Le 2D, tá bealach éasca againn (atan2) chun aistriú idir maitrís "
"claochlaithe agus uillinn. I 3D, tá rothlú ró-chasta le léiriú mar uimhir "
"amháin. Tá rud éigin ar a dtugtar uillinneacha Euler, ar féidir leo "
"rothlacha a léiriú mar shraith de 3 uimhir, áfach, tá siad teoranta agus níl "
"siad an-úsáideach, ach amháin cásanna tábhachtacha."

msgid ""
"In 3D we do not typically use angles, we either use a transformation basis "
"(used pretty much everywhere in Godot), or we use quaternions. Godot can "
"represent quaternions using the :ref:`class_Quaternion` struct. My "
"suggestion to you is to completely ignore how they work under-the-hood, "
"because they are very complicated and unintuitive."
msgstr ""
"I 3D ní úsáidimid uillinneacha de ghnáth, úsáidimid bonn claochlaithe "
"(úsáidtear go leor i ngach áit i Godot), nó úsáidimid quaternions. Is féidir "
"le Godot ceathairnions a léiriú ag baint úsáide as an strucht:ref: "
"`Class_Quaternion`. Is é mo mholadh duit neamhaird iomlán a dhéanamh ar an "
"gcaoi a n-oibríonn siad faoin gcochall, toisc go bhfuil siad an-chasta agus "
"neamh-iomasach."

msgid ""
"However, if you really must know how it works, here are some great "
"resources, which you can follow in order:"
msgstr ""
"Mar sin féin, más gá duit fios a bheith agat i ndáiríre conas a oibríonn sé, "
"seo roinnt acmhainní iontacha, ar féidir leat a leanúint in ord:"

msgid "https://www.youtube.com/watch?v=mvmuCPvRoWQ"
msgstr "https://www.youtube.com/watch?v=mvmuCPvRoWQ"

msgid "https://www.youtube.com/watch?v=d4EgbgTm0Bg"
msgstr "https://www.youtube.com/watch?v=d4EgbgTm0Bg"

msgid "https://eater.net/quaternions"
msgstr "https://eater.net/quaternions"
