#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Static typing in GDScript"
msgstr "Clóscríobh statach i GDScript"

msgid "In this guide, you will learn:"
msgstr "Sa treoir seo, foghlaimeoidh tú:"

msgid "how to use static typing in GDScript;"
msgstr "conas clóscríobh statach a úsáid i GDScript;"

msgid "that static types can help you avoid bugs;"
msgstr "gur féidir le cineálacha statacha cabhrú leat fabhtanna a sheachaint;"

msgid "that static typing improves your experience with the editor."
msgstr "feabhsaíonn clóscríobh statach do thaithí leis an eagarthóir."

msgid ""
"Where and how you use this language feature is entirely up to you: you can "
"use it only in some sensitive GDScript files, use it everywhere, or don't "
"use it at all."
msgstr ""
"Is fútsa go hiomlán cá háit agus conas a úsáideann tú an ghné teanga seo: ní "
"féidir leat é a úsáid ach i roinnt comhaid íogair GDScript, é a úsáid i "
"ngach áit, nó gan é a úsáid ar chor ar bith."

msgid ""
"Static types can be used on variables, constants, functions, parameters, and "
"return types."
msgstr ""
"Is féidir cineálacha statacha a úsáid ar athróga, comhsheasmhainní, "
"feidhmeanna, paraiméadair agus cineálacha tuairisceáin."

msgid "A brief look at static typing"
msgstr "Breathnú gairid ar chlóscríobh statach"

msgid ""
"With static typing, GDScript can detect more errors without even running the "
"code. Also type hints give you and your teammates more information as you're "
"working, as the arguments' types show up when you call a method. Static "
"typing improves editor autocompletion and :ref:`documentation "
"<doc_gdscript_documentation_comments>` of your scripts."
msgstr ""
"Le clóscríobh statach, is féidir le GDScript níos mó earráidí a bhrath gan "
"fiú an cód a rith. Chomh maith leis sin tugann leideanna clóscríofa "
"tuilleadh eolais duit féin agus le do chomhpháirtithe agus tú ag obair, de "
"réir mar a thagann cineálacha argóintí chun cinn nuair a ghlaonn tú ar "
"mhodh. Feabhsaíonn clóscríobh statach uathchríochnú an eagarthóra agus :ref:"
"`doiciméadúchán <doc_gdscript_documentation_comments>` do scripteanna."

msgid ""
"Imagine you're programming an inventory system. You code an ``Item`` class, "
"then an ``Inventory``. To add items to the inventory, the people who work "
"with your code should always pass an ``Item`` to the ``Inventory.add()`` "
"method. With types, you can enforce this::"
msgstr ""
"Samhlaigh go bhfuil córas fardail á chlárú agat. Códaíonn tú rang ``Mír ``, "
"ansin ``Fardal``. Chun míreanna a chur leis an bhfardal, ba chóir do dhaoine "
"a oibríonn le do chód ``Item ``a chur ar aghaidh chuig an modh ``Inventory."
"add () `i gcónaí. Le cineálacha, is féidir leat é seo a fhorfheidhmiú:"

msgid ""
"Static types also give you better code completion options. Below, you can "
"see the difference between a dynamic and a static typed completion options."
msgstr ""
"Tugann cineálacha statacha roghanna comhlánaithe cód níos fearr duit "
"freisin. Anseo thíos, is féidir leat an difríocht idir roghanna críochnaithe "
"clóscríofa dinimiciúla agus statacha a fheiceáil."

msgid ""
"You've probably encountered a lack of autocomplete suggestions after a dot:"
msgstr "Is dócha go raibh easpa moltaí uathchomhlánaithe agat tar éis ponc:"

msgid "Completion options for dynamic typed code."
msgstr "Roghanna críochnaithe le haghaidh cód clóscríofa dinimiciúil."

msgid ""
"This is due to dynamic code. Godot cannot know what value type you're "
"passing to the function. If you write the type explicitly however, you will "
"get all methods, properties, constants, etc. from the value:"
msgstr ""
"Tá sé seo mar gheall ar chód dinimiciúil. Ní féidir le Godot a fhios cén "
"cineál luacha atá tú ag dul chuig an bhfeidhm. Má scríobhann tú an cineál go "
"sainráite áfach, gheobhaidh tú gach modh, airíonna, comhsheasmhainní, srl ón "
"luach:"

msgid "Completion options for static typed code."
msgstr "Roghanna críochnaithe le haghaidh cód clóscríofa statach."

msgid ""
"If you prefer static typing, we recommend enabling the **Text Editor > "
"Completion > Add Type Hints** editor setting. Also consider enabling `some "
"warnings <Warning system_>`_ that are disabled by default."
msgstr ""
"Más fearr leat clóscríobh statach, molaimid an socrú eagarthóra **Eagarthóir "
"Téacs> Críochnú> Cuir Leideanna Cineál Leis** a chumasú. Smaoinigh freisin "
"ar `roinnt rabhaidh <Warning system_> `_ atá díchumasaithe de réir "
"réamhshocraithe a chumasú."

msgid ""
"Also, typed GDScript improves performance by using optimized opcodes when "
"operand/argument types are known at compile time. More GDScript "
"optimizations are planned in the future, such as JIT/AOT compilation."
msgstr ""
"Chomh maith leis sin, feabhsaíonn GDScript clóscríofa feidhmíocht trí opcóid "
"optamaithe a úsáid nuair a bhíonn cineálacha oibríochta/argóint ar eolas ag "
"am Tá níos mó optamaithe GDScript beartaithe sa todhchaí, mar shampla tiomsú "
"JIT/AOT."

msgid ""
"Overall, typed programming gives you a more structured experience. It helps "
"prevent errors and improves the self-documenting aspect of your scripts. "
"This is especially helpful when you're working in a team or on a long-term "
"project: studies have shown that developers spend most of their time reading "
"other people's code, or scripts they wrote in the past and forgot about. The "
"clearer and the more structured the code, the faster it is to understand, "
"the faster you can move forward."
msgstr ""
"Ar an iomlán, tugann cláir chlóscríofa eispéireas níos struchtúrtha duit. "
"Cuidíonn sé le hearráidí a chosc agus feabhsaíonn sé gné féindhoiciméadaithe "
"do scripteanna. Tá sé seo cabhrach go háirithe nuair a bhíonn tú ag obair i "
"bhfoireann nó ar thionscadal fadtéarmach: léirigh staidéir go gcaitheann "
"forbróirí an chuid is mó dá gcuid ama ag léamh cód daoine eile, nó "
"scripteanna a scríobh siad san am atá thart agus rinne siad dearmad orthu. "
"An níos soiléire agus níos struchtúrtha an cód, is amhlaidh is tapa é a "
"thuiscint, is amhlaidh is féidir leat bogadh ar aghaidh."

msgid "How to use static typing"
msgstr "Conas clóscríobh statach a úsáid"

msgid ""
"To define the type of a variable, parameter, or constant, write a colon "
"after the name, followed by its type. E.g. ``var health: int``. This forces "
"the variable's type to always stay the same::"
msgstr ""
"Chun cineál athróg, paraiméadar nó tairiseach a shainiú, scríobh colon tar "
"éis an ainm, agus a chineál ina dhiaidh sin. Mar shampla ``var shláinte: "
"int``. Cuireann sé seo iallach ar chineál an athróg fanacht mar an gcéanna i "
"gcónaí::"

msgid ""
"Godot will try to infer types if you write a colon, but you omit the type::"
msgstr ""
"Déanfaidh Godot iarracht cineálacha a thabhairt amach má scríobhann tú "
"colon, ach fágann tú an cineál:"

msgid "There is no difference between ``=`` and ``:=`` for constants."
msgstr ""
"Níl aon difríocht idir ``=`` agus ``: =`` le haghaidh comhsheasmhainní."

msgid ""
"You don't need to write type hints for constants, as Godot sets it "
"automatically from the assigned value. But you can still do so to make the "
"intent of your code clearer. Also, this is useful for typed arrays (like "
"``const A: Array[int] = [1, 2, 3]``), since untyped arrays are used by "
"default."
msgstr ""
"Ní gá duit leideanna cineál a scríobh le haghaidh comhsheasmhainní, toisc go "
"socraíonn Godot é go huathoibríoch ón luach sannta. Ach is féidir leat é sin "
"a dhéanamh fós chun rún do chód a dhéanamh níos soiléire. Chomh maith leis "
"sin, tá sé seo úsáideach le haghaidh eagair chlóscríofa (cosúil le ``const "
"A: Array [int] = [1, 2, 3] ``), ós rud é go n-úsáidtear eagair "
"neamhchlóipthe de réir réamhshocraithe."

msgid "What can be a type hint"
msgstr "Cad is féidir a bheith ina leid cineál"

msgid "Here is a complete list of what can be used as a type hint:"
msgstr "Seo liosta iomlán de na rudaí is féidir a úsáid mar leid cineál:"

msgid ""
"``Variant``. Any type. In most cases this is not much different from an "
"untyped declaration, but increases readability. As a return type, forces the "
"function to explicitly return some value."
msgstr ""
"``Variant``. Cineál ar bith. I bhformhór na gcásanna níl sé seo mórán "
"difriúil ó dhearbhú neamhchlóite, ach méadaíonn sé inléiteacht. Mar chineál "
"tuairisceáin, cuireann sé iallach ar an bhfeidhm luach éigin a thabhairt ar "
"ais go sainráite."

msgid ""
"*(Only return type)* ``void``. Indicates that the function does not return "
"any value."
msgstr ""
"* (Cineál tuairisceáin amháin) * ``void``. Léiríonn sé nach dtugann an "
"fheidhm aon luach ar ais."

msgid ":ref:`Built-in types <doc_gdscript_builtin_types>`."
msgstr ":ref:`Cineálacha ionsuite <doc_gdscript_builtin_types>`."

msgid "Native classes (``Object``, ``Node``, ``Area2D``, ``Camera2D``, etc.)."
msgstr ""
"Ranganna dúchasacha (``Object``, `Node``, `Area2D``, `Ceamara2D``, etc.)."

msgid ":ref:`Global classes <doc_gdscript_basics_class_name>`."
msgstr ":ref:`Ranganna domhanda <doc_gdscript_basics_class_name>`."

msgid ":ref:`Inner classes <doc_gdscript_basics_inner_classes>`."
msgstr ":ref:`Ranganna istigh <doc_gdscript_basics_inner_classes>`."

msgid ""
"Global, native and custom named enums. Note that an enum type is just an "
"``int``, there is no guarantee that the value belongs to the set of enum "
"values."
msgstr ""
"Enums domhanda, dúchasach agus saincheaptha ainmnithe. Tabhair faoi deara "
"nach bhfuil cineál enum ach `int ``, níl aon ráthaíocht ann go mbaineann an "
"luach leis an tacar luachanna enum."

msgid ""
"Constants (including local ones) if they contain a preloaded class or enum."
msgstr ""
"Coinbhinní (lena n-áirítear cinn áitiúla) má tá aicme nó enum réamh-"
"luchtaithe iontu."

msgid ""
"You can use any class, including your custom classes, as types. There are "
"two ways to use them in scripts. The first method is to preload the script "
"you want to use as a type in a constant::"
msgstr ""
"Is féidir leat aon rang a úsáid, lena n-áirítear do ranganna saincheaptha, "
"mar chineálacha. Tá dhá bhealach ann chun iad a úsáid i scripteanna. Is é an "
"chéad mhodh ná an script a theastaíonn uait a úsáid mar chineál i "
"dtairiseach a réamh-luchtú:"

msgid ""
"The second method is to use the ``class_name`` keyword when you create. For "
"the example above, your ``rifle.gd`` would look like this::"
msgstr ""
"Is é an dara modh ná an eochairfhocal `class_name`` a úsáid nuair a "
"chruthaíonn tú. Mar an sampla thuas, bheadh cuma seo ar do `rifle.gd``:"

msgid ""
"If you use ``class_name``, Godot registers the ``Rifle`` type globally in "
"the editor, and you can use it anywhere, without having to preload it into a "
"constant::"
msgstr ""
"Má úsáideann tú ``class_name``, cláraíonn Godot an cineál ``Rifle`` ar fud "
"an domhain san eagarthóir, agus is féidir leat é a úsáid in áit ar bith, gan "
"é a réamh-luchtú isteach i dtairiseach:"

msgid "Specify the return type of a function with the arrow ``->``"
msgstr "Sonraigh cineál aischuir feidhme leis an tsaighead ``->``"

msgid ""
"To define the return type of a function, write a dash and a right angle "
"bracket ``->`` after its declaration, followed by the return type::"
msgstr ""
"Chun cineál fillte feidhme a shainiú, scríobh dash agus lúibín dronuillinn "
"``->`` tar éis é a dhearbhú, agus an cineál fillte ina dhiaidh::"

msgid ""
"The type ``void`` means the function does not return anything. You can use "
"any type, as with variables::"
msgstr ""
"Ciallaíonn an cineál ``void`` nach bhfilleann an fheidhm aon rud ar ais. Is "
"féidir leat aon chineál a úsáid, mar atá le hathróga:"

msgid "You can also use your own classes as return types::"
msgstr ""
"Is féidir leat do ranganna féin a úsáid freisin mar chineálacha tuairisceáin:"

msgid "Covariance and contravariance"
msgstr "Coathraitheacht agus frithsheasmhacht"

msgid ""
"When inheriting base class methods, you should follow the `Liskov "
"substitution principle <https://en.wikipedia.org/wiki/"
"Liskov_substitution_principle>`__."
msgstr ""
"Agus modhanna bunranga á n-oidhreacht agat, ba cheart duit prionsabal an "
"ionadaíochta `Liskov <https://en.wikipedia.org/wiki/"
"Liskov_substitution_principle>`__ a leanúint."

msgid ""
"**Covariance:** When you inherit a method, you can specify a return type "
"that is more specific (**subtype**) than the parent method."
msgstr ""
"**Coathraitheacht: ** Nuair a dhéanann tú modh oidhreachta, is féidir leat "
"cineál tuairisceáin a shonrú atá níos sainiúla (**fo-chineál**) ná an modh "
"tuismitheora."

msgid ""
"**Contravariance:** When you inherit a method, you can specify a parameter "
"type that is less specific (**supertype**) than the parent method."
msgstr ""
"**Contraathrú: ** Nuair a dhéanann tú modh a oidhreacht, is féidir leat "
"cineál paraiméadar a shonrú nach bhfuil chomh sonrach (**supertype**) ná an "
"modh tuismitheora."

msgid "Example::"
msgstr "Sampla::"

msgid "Specify the element type of an ``Array``"
msgstr "Sonraigh cineál eilimint ``Array``"

msgid "To define the type of an ``Array``, enclose the type name in ``[]``."
msgstr "Chun cineál ``Array`` a shainiú, cuir an t-ainm cineál in ``[]``."

msgid ""
"Since Godot 4.2, you can also specify a type for the loop variable in a "
"``for`` loop. For instance, you can write::"
msgstr ""
"Ós rud é go Godot 4.2, is féidir leat cineál a shonrú don athróg lúb i lúb "
"``for ``. Mar shampla, is féidir leat scríobh:"

msgid ""
"The array will remain untyped, but the ``name`` variable within the ``for`` "
"loop will always be of ``String`` type."
msgstr ""
"Fanfaidh an tsraith gan chlóscríobh, ach beidh an t-athróg ``ainm ``laistigh "
"den lúb ``for`` de chineál ``String`` i gcónaí."

msgid "Type casting"
msgstr "Cineál réitigh"

msgid ""
"Type casting is an important concept in typed languages. Casting is the "
"conversion of a value from one type to another."
msgstr ""
"Is coincheap tábhachtach é réitigh cineálacha i dteangacha clóscríofa. Is é "
"réitigh comhshó luach ó chineál amháin go cineál eile."

msgid ""
"Imagine an ``Enemy`` in your game, that ``extends Area2D``. You want it to "
"collide with the ``Player``, a ``CharacterBody2D`` with a script called "
"``PlayerController`` attached to it. You use the ``body_entered`` signal to "
"detect the collision. With typed code, the body you detect is going to be a "
"generic ``PhysicsBody2D``, and not your ``PlayerController`` on the "
"``_on_body_entered`` callback."
msgstr ""
"Samhlaigh ``Naimhde`` i do chluiche, a shíneann `Area2D``. Ba mhaith leat go "
"mbuailfidh sé leis an `Player``, `CharacterBody2D`` le script darb ainm "
"`PlayerController`` atá ceangailte leis. Úsáideann tú an comhartha "
"``body_entered ``chun an imbhualadh a bhrath. Le cód clóscríofa, is "
"cineálach ``PhysicsBody2D`` a bheidh an corp a bhraitheann tú, agus ní do "
"`PlayerController`` ar an nglaoch ``_on_body_entered``."

msgid ""
"You can check if this ``PhysicsBody2D`` is your ``Player`` with the ``as`` "
"keyword, and using the colon ``:`` again to force the variable to use this "
"type. This forces the variable to stick to the ``PlayerController`` type::"
msgstr ""
"Is féidir leat a sheiceáil an é an `PhysicsBody2D`` seo do ``Player`` leis "
"an eochairfhocal ``as ``, agus an colon``: ``á úsáid arís chun iallach a "
"chur ar an athróg an cineál seo a úsáid. Cuireann sé seo iallach ar an "
"athróg cloí leis an gcineál ``PlayerController``:"

msgid ""
"As we're dealing with a custom type, if the ``body`` doesn't extend "
"``PlayerController``, the ``player`` variable will be set to ``null``. We "
"can use this to check if the body is the player or not. We will also get "
"full autocompletion on the player variable thanks to that cast."
msgstr ""
"Agus muid ag déileáil le cineál saincheaptha, mura leathnaíonn an ``body` "
"`playerController``, socraítear an athróg ``player`` go `null``. Is féidir "
"linn é seo a úsáid chun a sheiceáil an é an comhlacht an t-imreoir nó nach "
"bhfuil. Gheobhaidh muid uathchomhlánú iomlán freisin ar an athróg imreoir a "
"bhuíochas leis an gcaitheadh sin."

msgid ""
"The ``as`` keyword silently casts the variable to ``null`` in case of a type "
"mismatch at runtime, without an error/warning. While this may be convenient "
"in some cases, it can also lead to bugs. Use the ``as`` keyword only if this "
"behavior is intended. A safer alternative is to use the ``is`` keyword::"
msgstr ""
"Casann an eochairfhocal ``as`` an athróg go `` null`` go ciúin i gcás "
"neamhréir chineál ag am rite, gan earráid/rabhadh. Cé go bhféadfadh sé seo a "
"bheith áisiúil i gcásanna áirithe, is féidir go dtiocfadh fabhtanna air "
"freisin. Bain úsáid as an eochairfhocal ``as`` ach amháin má tá an t-iompar "
"seo beartaithe. Rogha eile níos sábháilte ná an eochairfhocal ``is`` a "
"úsáid::"

msgid ""
"If you try to cast with a built-in type and it fails, Godot will throw an "
"error."
msgstr ""
"Má dhéanann tú iarracht caitheamh le cineál ionsuite agus má theipeann air, "
"caithfidh Godot earráid."

msgid "Safe lines"
msgstr "Línte sábháil"

msgid ""
"You can also use casting to ensure safe lines. Safe lines are a tool to tell "
"you when ambiguous lines of code are type-safe. As you can mix and match "
"typed and dynamic code, at times, Godot doesn't have enough information to "
"know if an instruction will trigger an error or not at runtime."
msgstr ""
"Is féidir leat réitigh a úsáid chun línte sábháilte a chinntiú. Is uirlis "
"iad línte sábháilte chun insint duit nuair a bhíonn línte débhríoch cód "
"sábháilte Toisc gur féidir leat cód clóscríofa agus dinimiciúil a mheascadh "
"agus a mheaitseáil, uaireanta, níl go leor faisnéise ag Godot chun a fháil "
"amach an spreagfaidh treoir earráid nó nach bhfuil ag am rith."

msgid ""
"This happens when you get a child node. Let's take a timer for example: with "
"dynamic code, you can get the node with ``$Timer``. GDScript supports `duck-"
"typing <https://stackoverflow.com/a/4205163/8125343>`__, so even if your "
"timer is of type ``Timer``, it is also a ``Node`` and an ``Object``, two "
"classes it extends. With dynamic GDScript, you also don't care about the "
"node's type as long as it has the methods you need to call."
msgstr ""
"Tarlaíonn sé seo nuair a fhaigheann tú nód linbh. Glacaimid lasc ama mar "
"shampla: le cód dinimiciúil, is féidir leat an nód a fháil le ``$Timer``. "
"Tacaíonn GDScript le `clóscríobh lachan <https://stackoverflow.com/"
"a/4205163/8125343>`__, mar sin fiú má tá an t-amadóir den chineál `` "
"Uaineadóir``, is `` Nód`` agus `` é freisin `Réad``, dhá rang leathnaíonn "
"sé. Le GDScript dinimiciúil, is cuma leat ach an oiread faoi chineál an nóid "
"chomh fada agus a bhfuil na modhanna a theastaíonn uait chun glaoch a chur "
"air."

msgid ""
"You can use casting to tell Godot the type you expect when you get a node: "
"``($Timer as Timer)``, ``($Player as CharacterBody2D)``, etc. Godot will "
"ensure the type works and if so, the line number will turn green at the left "
"of the script editor."
msgstr ""
"Is féidir leat réitigh a úsáid chun a insint do Godot an cineál a bhfuil "
"súil agat nuair a gheobhaidh tú nód: ``($Timer as Timer)``, ``($ Player as "
"CharacterBody2D)``, srl Cinnteoidh Godot an cineál agus más amhlaidh, "
"casfaidh an uimhir líne glas ar thaobh clé den eagarthóir script."

msgid "Unsafe vs Safe Line"
msgstr "Líne Neamhshábháilte vs S"

msgid "Unsafe line (line 7) vs Safe Lines (line 6 and 8)"
msgstr "Líne neamhshábháilte (líne 7) vs Línte Sábháilte (líne 6 agus 8)"

msgid ""
"Safe lines do not always mean better or more reliable code. See the note "
"above about the ``as`` keyword. For example::"
msgstr ""
"Ní chiallaíonn línte sábháilte cód níos fearr nó níos iontaofa i gcónaí. "
"Féach an nóta thuas faoin eochairfhocal ``as ``. Mar shampla::"

msgid ""
"Even though ``node_2`` declaration is marked as an unsafe line, it is more "
"reliable than ``node_1`` declaration. Because if you change the node type in "
"the scene and accidentally forget to change it in the script, the error will "
"be detected immediately when the scene is loaded. Unlike ``node_1``, which "
"will be silently cast to ``null`` and the error will be detected later."
msgstr ""
"Cé go bhfuil dearbhú `node_2`` marcáilte mar líne neamhshábháilte, tá sé "
"níos iontaofa ná dearbhú `node_1'. Toisc má athraíonn tú an cineál nód sa "
"radharc agus má dhéanann tú dearmad de thaisme é a athrú sa script, "
"braithfear an earráid láithreach nuair a luchtaítear an radharc. Murab "
"ionann agus `node_1``, a chaithfear go ciúin go ``null`` agus braithfear an "
"earráid níos déanaí."

msgid ""
"You can turn off safe lines or change their color in the editor settings."
msgstr ""
"Is féidir leat línte sábháilte a mhúchadh nó a dath a athrú i socruithe an "
"eagarthóra."

msgid "Typed or dynamic: stick to one style"
msgstr "Clóscríofa nó dinimiciúil: cloí le stíl amháin"

msgid ""
"Typed GDScript and dynamic GDScript can coexist in the same project. But "
"it's recommended to stick to either style for consistency in your codebase, "
"and for your peers. It's easier for everyone to work together if you follow "
"the same guidelines, and faster to read and understand other people's code."
msgstr ""
"Is féidir le GDScript clóscríofa agus GDScript dinimiciúil a bheith taobh "
"istigh den tionscadal céanna. Ach moltar cloí le ceachtar den dá stíl ar "
"mhaithe le comhsheasmhacht i do bhunachar cód, agus do chomhghleacaithe. Tá "
"sé níos éasca do gach duine oibriú le chéile má leanann tú na treoirlínte "
"céanna, agus níos tapúla chun cód daoine eile a léamh agus a thuiscint."

msgid ""
"Typed code takes a little more writing, but you get the benefits we "
"discussed above. Here's an example of the same, empty script, in a dynamic "
"style::"
msgstr ""
"Tógann cód clóscríofa beagán níos mó scríbhneoireachta, ach faigheann tú na "
"buntáistí a phléamar thuas. Seo sampla den script folamh céanna, i stíl "
"dhinimiciúil:"

msgid "And with static typing::"
msgstr "Agus le clóscríobh statach::"

msgid ""
"As you can see, you can also use types with the engine's virtual methods. "
"Signal callbacks, like any methods, can also use types. Here's a "
"``body_entered`` signal in a dynamic style::"
msgstr ""
"Mar a fheiceann tú, is féidir leat cineálacha a úsáid le modhanna fíorúla an "
"innill freisin. Is féidir le glaonna comharthaí, cosúil le haon mhodhanna, "
"cineálacha a úsáid freisin. Seo comhartha ``body_entered ``i stíl "
"dhinimiciúil::"

msgid "And the same callback, with type hints::"
msgstr "Agus an glaoch ar ais céanna, le leideanna cineál::"

msgid "Warning system"
msgstr "Córas rabhaidh"

msgid ""
"Detailed documentation about the GDScript warning system has been moved to :"
"ref:`doc_gdscript_warning_system`."
msgstr ""
"Tá doiciméadú mionsonraithe faoin gcóras rabhaidh GDScript aistrithe chuig: "
"ref: `doc_gdscript_warning_system`."

msgid ""
"We have a number of warnings aimed specifically at users of typed GDScript. "
"By default, these warnings are disabled, you can enable them in Project "
"Settings (**Debug > GDScript**, make sure **Advanced Settings** is enabled)."
msgstr ""
"Tá roinnt rabhadh againn atá dírithe go sonrach ar úsáideoirí clóscríofa "
"GDScript. De réir réamhshocraithe, tá na rabhaidh seo díchumasaithe, is "
"féidir leat iad a chumasú i Socruithe an Tionscadail (**Debug> GDScript**, "
"cinntigh go bhfuil **Ardsocruithe** cumasaithe)."

msgid ""
"You can enable the ``UNTYPED_DECLARATION`` warning if you want to always use "
"static types. Additionally, you can enable the ``INFERRED_DECLARATION`` "
"warning if you prefer a more readable and reliable, but more verbose syntax."
msgstr ""
"Is féidir leat an rabhadh ``UNTYPED_DECLARATION`` a chumasú más mian leat "
"cineálacha statacha a úsáid i gcónaí. Ina theannta sin, is féidir leat an "
"rabhadh ``INFERRED_DECLARATION`` a chumasú más fearr leat comhréir níos "
"inléite agus níos iontaofa, ach níos luaithe."

msgid ""
"``UNSAFE_*`` warnings make unsafe operations more noticeable, than unsafe "
"lines. Currently, ``UNSAFE_*`` warnings do not cover all cases that unsafe "
"lines cover."
msgstr ""
"Fágann rabhaidh ``UNSAFE_*`` oibríochtaí míshábháilte níos suntasaí, ná "
"línte neamhshábháilte. Faoi láthair, ní chlúdaíonn rabhaidh ``UNSAFE_*`` "
"gach cás a chlúdaíonn línte neamhshábháilte."

msgid "Common unsafe operations and their safe counterparts"
msgstr "Oibríochtaí coitianta míshábháilte agus a gcomh"

msgid "``UNSAFE_PROPERTY_ACCESS`` and ``UNSAFE_METHOD_ACCESS`` warnings"
msgstr "Rabhadh ``UNSAFE_PROPERTY_ACCESS`` agus ``UNSAFE_METHOD_ACCESS``"

msgid ""
"In this example, we aim to set a property and call a method on an object "
"that has a script attached with ``class_name MyScript`` and that ``extends "
"Node2D``. If we have a reference to the object as a ``Node2D`` (for "
"instance, as it was passed to us by the physics system), we can first check "
"if the property and method exist and then set and call them if they do::"
msgstr ""
"Sa sampla seo, tá sé mar aidhm againn airí a shocrú agus modh a ghlaoch ar "
"réad a bhfuil script ceangailte le `` class_name MyScript`` agus a "
"leathnaíonn `` extends Node2D``. Má tá tagairt againn don réad mar "
"``Node2D`` (mar shampla, mar a thug an córas fisice dúinn é), is féidir linn "
"a sheiceáil ar dtús an bhfuil an t-airí agus an modh ann agus ansin iad a "
"shocrú agus glaoch orthu má dhéanann siad é. ::"

msgid ""
"However, this code will produce ``UNSAFE_PROPERTY_ACCESS`` and "
"``UNSAFE_METHOD_ACCESS`` warnings as the property and method are not present "
"in the referenced type - in this case a ``Node2D``. To make these operations "
"safe, you can first check if the object is of type ``MyScript`` using the "
"``is`` keyword and then declare a variable with the type ``MyScript`` on "
"which you can set its properties and call its methods::"
msgstr ""
"Mar sin féin, cuirfidh an cód seo rabhaidh ``UNSAFE_PROPERTY_ACCESS`` agus "
"``UNSAFE_METHOD_ACCESS`` toisc nach bhfuil an maoin agus an modh i láthair "
"sa chineál tagartha - sa chás seo ``Node2D``. Chun na hoibríochtaí seo a "
"dhéanamh sábháilte, is féidir leat a sheiceáil ar dtús an bhfuil an réad de "
"chineál `Myscript`` ag baint úsáide as an eochairfhocal ``is ``agus ansin "
"athróg a dhearbhú leis an gcineál ``MyScript`` ar féidir leat a airíonna a "
"shocrú agus a mhodhanna a ghlaoch:"

msgid ""
"Alternatively, you can declare a variable and use the ``as`` operator to try "
"to cast the object. You'll then want to check whether the cast was "
"successful by confirming that the variable was assigned::"
msgstr ""
"De rogha air sin, is féidir leat athróg a dhearbhú agus an t-oibreoir `as` a "
"úsáid chun iarracht a dhéanamh an réad a chaitheamh. Ansin beidh tú ag "
"iarraidh a sheiceáil an raibh éirigh leis an gcaitheadh trí dhearbhú gur "
"sannadh an t-athróg:"

msgid "``UNSAFE_CAST`` warning"
msgstr "Rabhadh ``UNSAFE_CAST``"

msgid ""
"In this example, we would like the label connected to an object entering our "
"collision area to show the area's name. Once the object enters the collision "
"area, the physics system sends a signal with a ``Node2D`` object, and the "
"most straightforward (but not statically typed) solution to do what we want "
"could be achieved like this::"
msgstr ""
"Sa sampla seo, ba mhaith linn an lipéad atá ceangailte le réad a théann "
"isteach inár limistéar imbhuailte ainm an cheantair a thaispeáint. Nuair a "
"théann an réad isteach sa limistéar imbhuailte, seolann an córas fisice "
"comhartha le réad ``Node2D`, agus d'fhéadfaí an réiteach is simplí (ach ní "
"clóscríofa go statach) chun an rud a theastaíonn uainn a dhéanamh mar seo:"

msgid ""
"This piece of code produces an ``UNSAFE_PROPERTY_ACCESS`` warning because "
"``label`` is not defined in ``Node2D``. To solve this, we could first check "
"if the ``label`` property exist and cast it to type ``Label`` before "
"settings its text property like so::"
msgstr ""
"Táirgeann an píosa cód seo rabhadh ``UNSAFE_PROPERTY_ACCESS`` toisc nach "
"bhfuil `lipéad ``sainmhínithe i `Node2D``. Chun é seo a réiteach, "
"d'fhéadfaimis a sheiceáil ar dtús an bhfuil an maoin `lipéad`` ann agus í a "
"chaitheamh chun ``Lipéad` a chlóscríobh sula socraítear a maoin téacs mar "
"sin:"

msgid ""
"However, this produces an ``UNSAFE_CAST`` warning because ``body.label`` is "
"of a ``Variant`` type. To safely get the property in the type you want, you "
"can use the ``Object.get()`` method which returns the object as a "
"``Variant`` value or returns ``null`` if the property doesn't exist. You can "
"then determine whether the property contains an object of the right type "
"using the ``is`` keyword, and finally declare a statically typed variable "
"with the object::"
msgstr ""
"Mar sin féin, táirgeann sé seo rabhadh ``UNSAFE_CAST`` toisc go bhfuil `body."
"label`` de chineál ``Variant``. Chun an maoin a fháil go sábháilte sa "
"chineál atá uait, is féidir leat an modh `Object.get () `a úsáid a thugann "
"an réad ar ais mar luach ``Variant`` nó a fhilleann ``null`` mura bhfuil an "
"maoin ann. Is féidir leat a chinneadh ansin an bhfuil réad den chineál ceart "
"sa mhaoin ag baint úsáide as an eochairfhocal ``is ``, agus ar deireadh "
"athróg clóscríofa go statach a dhearbhú leis an réad:"

msgid "Cases where you can't specify types"
msgstr "Cásanna nach féidir leat cineálacha a shonrú"

msgid ""
"To wrap up this introduction, let's mention cases where you can't use type "
"hints. This will trigger a **syntax error**."
msgstr ""
"Chun an réamhrá seo a fhilleadh, luaimis cásanna nach féidir leat leideanna "
"cineál a úsáid. Spreagfaidh sé seo earráid**comhréireach**."

msgid ""
"You can't specify the type of individual elements in an array or a "
"dictionary::"
msgstr ""
"Ní féidir leat an cineál eilimintí aonair a shonrú i sraith nó i bhfoclóir:"

msgid "Nested types are not currently supported::"
msgstr "Ní thacaítear le cineálacha neadaithe faoi láthair::"

msgid "Summary"
msgstr "Achoimre"

msgid ""
"Typed GDScript is a powerful tool. It helps you write more structured code, "
"avoid common errors, and create scalable and reliable systems. Static types "
"improve GDScript performance and more optimizations are planned for the "
"future."
msgstr ""
"Is uirlis chumhachtach é GDScript Clóscríofa. Cabhraíonn sé leat cód níos "
"struchtúrtha a scríobh, earráidí coitianta a sheachaint, agus córais "
"inscálaithe iontaofa a chruthú. Feabhsaíonn cineálacha statacha feidhmíocht "
"GDScript agus tá níos mó optimizations beartaithe don todhchaí."
