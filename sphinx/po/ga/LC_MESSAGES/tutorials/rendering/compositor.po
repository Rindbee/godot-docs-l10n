#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "The Compositor"
msgstr "An Cumadóir"

msgid ""
"The compositor is a new feature in Godot 4 that allows control over the "
"rendering pipeline when rendering the contents of a :ref:`Viewport "
"<class_Viewport>`."
msgstr ""
"Is gné nua é an cumadóir in Godot 4 a cheadaíonn rialú ar an bpíblíne "
"rindreála agus inneachar :ref:`Viewport <class_Viewport>` á rindreáil."

msgid ""
"It can be configured on a :ref:`WorldEnvironment <class_WorldEnvironment>` "
"node where it applies to all Viewports, or it can be configured on "
"a :ref:`Camera3D <class_Camera3D>` and apply only to the Viewport using that "
"camera."
msgstr ""
"Is féidir é a chumrú ar nód :ref:`WorldEnvironment <class_WorldEnvironment>` "
"nuair a bhaineann sé le gach Amharc, nó is féidir é a chumrú "
"ar :ref:`Camera3D <class_Camera3D>` agus cuir i bhfeidhm ar an Viewport "
"amháin ag baint úsáide as an gceamara sin."

msgid ""
"The compositor is currently a feature that is only supported by the Mobile "
"and Forward+ renderers."
msgstr ""
"Faoi láthair is gné é an cumadóir nach dtacaíonn ach na léiritheoirí Mobile "
"and Forward+."

msgid "Compositor effects"
msgstr "Éifeachtaí cumadóir"

msgid ""
"Compositor effects allow you to insert additional logic into the rendering "
"pipeline at various stages. This is an advanced feature that requires a high "
"level of understanding of the rendering pipeline to use to its best "
"advantage."
msgstr ""
"Ligeann éifeachtaí cumadóirí duit loighic bhreise a chur isteach sa phíblíne "
"rindreála ag céimeanna éagsúla Is gné chun cinn í seo a éilíonn leibhéal ard "
"tuisceana ar an bpíblíne rindreála le húsáid chun a bhuntáiste is fearr a "
"úsáid."

msgid ""
"As the core logic of the compositor effect is called from the rendering "
"pipeline it is important to note that this logic will thus run within the "
"thread on which rendering takes place. Care needs to be taken to ensure we "
"don't run into threading issues."
msgstr ""
"Toisc go dtugtar croíloighic an éifeacht cumadóra ón bpíblíne rindreála tá "
"sé tábhachtach a thabhairt faoi deara go rithfidh an loighic seo laistigh "
"den snáithe ar a ndéantar rindreáil. Ní mór cúram a thabhairt chun a "
"chinntiú nach mbeidh saincheisteanna snáithe againn."

msgid ""
"To illustrate how to use compositor effects we'll create a simple post "
"processing effect that allows you to write your own shader code and apply "
"this full screen through a compute shader. You can find the finished demo "
"project `here <https://github.com/godotengine/godot-demo-projects/tree/"
"master/compute/post_shader>`_."
msgstr ""
"Chun a léiriú conas éifeachtaí cumaisc a úsáid cruthóimid iarmhairt "
"iarphróiseála simplí a cheadóidh duit do chód scáthaithe féin a scríobh agus "
"an scáileán iomlán seo a chur i bhfeidhm trí scáthlánóir ríomh. Is féidir "
"leat an tionscadal taispeána críochnaithe `a fháil anseo <https://github.com/"
"godotengine/godot-demo-projects/tree/master/compute/post_shader>`_."

msgid ""
"We start by creating a new script called ``post_process_shader.gd``. We'll "
"make this a tool script so we can see the compositor effect work in the "
"editor. We need to extend our node from :ref:`CompositorEffect "
"<class_CompositorEffect>`. We must also give our script a class name."
msgstr ""
"Tosaímid trí script nua a chruthú ar a dtugtar ``post_process_shader.gd``. "
"Déanfaimid script uirlisí seo ionas gur féidir linn éifeacht an chumadóra a "
"fheiceáil ag obair san eagarthóir. Ní mór dúinn ár nód a leathnú "
"ó :ref:`CompositorEffect <class_CompositorEffect>`. Ní mór dúinn freisin "
"ainm ranga a thabhairt dár script."

msgid ""
"Next we're going to define a constant for our shader template code. This is "
"the boilerplate code that makes our compute shader work."
msgstr ""
"Ansin táimid chun tairiseach a shainiú dár gcód teimpléad shader. Is é seo "
"an cód boilerplate a fhágann go n-oibríonn ár scáthóir ríomhaireachta."

msgid ""
"For more information on how compute shaders work, please check :ref:`Using "
"compute shaders <doc_compute_shaders>`."
msgstr ""
"Chun tuilleadh eolais a fháil ar an gcaoi a n-oibríonn scáthaitheoirí ríomh, "
"seiceáil le do thoil :tag:`Ag baint úsáide as scáthaitheoirí ríomhaire "
"<doc_compute_shaders>`."

msgid ""
"The important bit here is that for every pixel on our screen, our ``main`` "
"function is executed and inside of this we load the current color value of "
"our pixel, execute our user code, and write our modified color back to our "
"color image."
msgstr ""
"Is é an chuid tábhachtach anseo ná go gcuirtear ár bhfeidhm ``príomh`` i "
"gcás gach picteilín ar ár scáileán agus taobh istigh de seo luachaimid luach "
"datha reatha ár bpicteilín, cuirimid ár gcód úsáideora a fhorghníomhú, agus "
"scríobhfaimid ár ndath modhnaithe ar ais chuig ár n-íomhá datha."

msgid "``#COMPUTE_CODE`` gets replaced by our user code."
msgstr "Cuirtear ár gcód úsáideora in ionad ``#COMPUTE_CODE``."

msgid ""
"In order to set our user code, we need an export variable. We'll also define "
"a few script variables we'll be using:"
msgstr ""
"D'fhonn ár gcód úsáideora a shocrú, teastaíonn athróg onnmhairithe uainn. "
"Sainmhíneoimid cúpla athróg script a bheidh á úsáid againn freisin:"

msgid ""
"Note the use of a :ref:`Mutex <class_Mutex>` in our code. Most of our "
"implementation gets called from the rendering engine and thus runs within "
"our rendering thread."
msgstr ""
"Tabhair faoi deara úsáid :ref:`Mutex <class_Mutex>` inár gcód. Faightear an "
"chuid is mó dár gcur chun feidhme ón inneall rindreála agus mar sin ritheann "
"sé laistigh dár snáithe rindreála."

msgid ""
"We need to ensure that we set our new shader code, and mark our shader code "
"as dirty, without our render thread accessing this data at the same time."
msgstr ""
"Ní mór dúinn a chinntiú go socraímid ár gcód scáthaithe nua, agus go "
"ndéanaimid ár gcód scáthaithe a mharcáil mar salach, gan ár snáithe "
"rindreála rochtain a fháil ar na sonraí seo ag an am céanna."

msgid "Next we initialize our effect."
msgstr "Ansin cuirimid ár n-éifeacht a thosú."

msgid ""
"The main thing here is setting our ``effect_callback_type`` which tells the "
"rendering engine at what stage of the render pipeline to call our code."
msgstr ""
"Is é an rud is mó anseo ná ár `effect_callback_type`` a shocrú a insíonn don "
"inneall rindreála cén chéim den phíblíne rindreála le glaoch ar ár gcód."

msgid ""
"Currently we only have access to the stages of the 3D rendering pipeline!"
msgstr ""
"Faoi láthair níl rochtain againn ach ar chéimeanna na píblíne rindreála 3D!"

msgid ""
"We also get a reference to our rendering device, which will come in very "
"handy."
msgstr ""
"Faighimid tagairt dár bhfeiste rindreála freisin, a thiocfaidh go han-"
"áisiúil."

msgid ""
"We also need to clean up after ourselves, for this we react to the "
"``NOTIFICATION_PREDELETE`` notification:"
msgstr ""
"Ní mór dúinn glanadh suas i ndiaidh dúinn féin freisin, chuige seo "
"freagróimid don fhógra ``NOTIFICATION_PREDELETE``:"

msgid ""
"Note that we do not use our mutex here even though we create our shader "
"inside of our render thread. The methods on our rendering server are thread "
"safe and ``free_rid`` will be postponed cleaning up the shader until after "
"any frames currently being rendered are finished."
msgstr ""
"Tabhair faoi deara nach n-úsáidimid ár mutex anseo cé go gcruthaímid ár "
"scáthóir taobh istigh dár snáithe rindreála. Tá na modhanna ar ár "
"bhfreastalaí rindreála sábháilte le snáithe agus cuirfear `free_rid`` ar "
"siar ag glanadh an scáthaire go dtí go mbeidh aon fhrámaí atá á rindreáil "
"faoi láthair críochnaithe."

msgid ""
"Also note that we are not freeing our pipeline. The rendering device does "
"dependency tracking and as the pipeline is dependent on the shader, it will "
"be automatically freed when the shader is destructed."
msgstr ""
"Tabhair faoi deara freisin nach bhfuilimid ag saoradh ár bpíblíne. Déanann "
"an gléas rindreála rianú spleáchais agus toisc go bhfuil an píblíne ag brath "
"ar an scáthóir, saorófar é go huathoibríoch nuair a dhéantar an scáthóir a "
"scriosadh."

msgid "From this point onwards our code will run on the rendering thread."
msgstr "Ón bpointe seo ar aghaidh rithfidh ár gcód ar an snáithe rindreála."

msgid ""
"Our next step is a helper function that will recompile the shader if the "
"user code was changed."
msgstr ""
"Is é an chéad chéim eile atá againn ná feidhm chúntóra a dhéanfaidh an "
"scáthóir a aththiomsú má athraíodh an cód úsáideora."

msgid ""
"At the top of this method we again use our mutex to protect accessing our "
"user shader code and our is dirty flag. We make a local copy of the user "
"shader code if our user shader code is dirty."
msgstr ""
"Ag barr an mhodha seo úsáidimid ár mutex arís chun rochtain a fháil ar ár "
"gcód scáthaithe úsáideora a chosaint agus ár mbratach salach atá againn. "
"Déanaimid cóip áitiúil den chód shader úsáideora má tá ár gcód scáthaithe "
"úsáideora salach."

msgid ""
"If we don't have a new code fragment, we return true if we already have a "
"valid pipeline."
msgstr ""
"Mura bhfuil blúire cód nua againn, filleann muid fíor má tá píblíne bailí "
"againn cheana féin."

msgid ""
"If we do have a new code fragment we embed it in our template code and then "
"compile it."
msgstr ""
"Má tá blúnóg cód nua againn déanaimid é a leabú inár gcód teimpléad agus "
"ansin é a thiomsú."

msgid ""
"The code shown here compiles our new code in runtime. This is great for "
"prototyping as we can immediately see the effect of the changed shader."
msgstr ""
"Tiomsaíonn an cód a thaispeántar anseo ár gcód nua i rith. Tá sé seo iontach "
"le haghaidh fréamhshamhlú mar is féidir linn éifeacht an scáthaitheora "
"athraithe a fheiceáil láithreach."

msgid ""
"This prevents precompiling and caching this shader which may be an issues on "
"some platforms such as consoles. Note that the demo project comes with an "
"alternative example where a ``glsl`` file contains the entire compute shader "
"and this is used. Godot is able to precompile and cache the shader with this "
"approach."
msgstr ""
"Cuireann sé seo cosc ar an scáthóir seo a réamhthiomsú agus a chaitheamh a "
"d'fhéadfadh a bheith ina shaincheisteanna ar roinnt ardáin mar chonsóil. "
"Tabhair faoi deara go dtagann sampla malartach sa tionscadal taispeána ina "
"bhfuil an scáthóir ríomhaireachta iomlán i gcomhad ``glsl`` agus úsáidtear é "
"seo. Tá Godot in ann an scáthóir a réamhthiomsú agus a thaisceadh leis an "
"gcur chuige seo."

msgid ""
"Finally we need to implement our effect callback, the rendering engine will "
"call this at the right stage of rendering."
msgstr ""
"Faoi dheireadh ní mór dúinn ár n-aisghlao éifeacht a chur i bhfeidhm, "
"glaóidh an t-inneall rindreála air seo ag an gcéim cheart den rindreáil."

msgid ""
"At the start of this method we check if we have a rendering device, if our "
"callback type is the correct one, and check if we have our shader."
msgstr ""
"Ag tús an mhodha seo seiceáilimid an bhfuil gléas rindreála againn, más é ár "
"gcineál aisghlaonna an ceann ceart, agus seiceáilimid an bhfuil ár scáthóir "
"againn."

msgid ""
"The check for the effect type is only a safety mechanism. We've set this in "
"our ``_init`` function, however it is possible for the user to change this "
"in the UI."
msgstr ""
"Níl ach meicníocht sábháilteachta an seiceáil don chineál éifeachta. Tá sé "
"seo socraithe againn inár bhfeidhm ``_init``, ach is féidir don úsáideoir é "
"seo a athrú sa UI."

msgid ""
"Our ``p_render_data`` parameter gives us access to an object that holds data "
"specific to the frame we're currently rendering. We're currently only "
"interested in our render scene buffers, which provide us access to all the "
"internal buffers used by the rendering engine. Note that we cast this "
"to :ref:`RenderSceneBuffersRD <class_RenderSceneBuffersRD>` to expose the "
"full API to this data."
msgstr ""
"Tugann ár bparaiméadar ``p_render_data`` rochtain dúinn ar réad a choinníonn "
"sonraí a bhaineann go sonrach leis an bhfráma atá á rindreáil againn faoi "
"láthair. Níl spéis againn faoi láthair ach inár maoláin radhairc rindreála, "
"a thugann rochtain dúinn ar na maoláin inmheánacha go léir a úsáideann an t-"
"inneall rindreála. Tabhair faoi deara gur chaitheamar é seo "
"chuig :ref:`RenderSceneBuffersRD <class_RenderSceneBuffersRD>` chun an API "
"iomlán a nochtadh do na sonraí seo."

msgid ""
"Next we obtain our ``internal size`` which is the resolution of our 3D "
"render buffers before they are upscaled (if applicable), upscaling happens "
"after our post processes have run."
msgstr ""
"Ansin faighimid ár “méid inmheánach” arb é sin réiteach ár mmaoláin "
"rindreála 3D sula ndéantar iad a uasscálú (más infheidhme), tarlaíonn "
"uasscálú tar éis dár bpróisis iar-bhunaithe rith."

msgid ""
"From our internal size we calculate our group size, see our local size in "
"our template shader."
msgstr ""
"Ónár méid inmheánach ríomhaímid méid ár ngrúpa, féach ár méid áitiúil inár "
"scáthóir teimpléad."

msgid ""
"We also populate our push constant so our shader knows our size. Godot does "
"not support structs here **yet** so we use a ``PackedFloat32Array`` to store "
"this data into. Note that we have to pad this array with a 16 byte "
"alignment. In other words, the length of our array needs to be a multiple of "
"4."
msgstr ""
"Déanaimid ár gcomhsheasmhach brú freisin ionas go bhfuil a fhios ag ár "
"scáthaitheoir ár méid. Ní thacaíonn Godot le struchtúir anseo **fós ** mar "
"sin úsáidimid ``PackedFloat32Array`` chun na sonraí seo a stóráil isteach. "
"Tabhair faoi deara go gcaithfimid an tsraith seo a phapáil le ailíniú 16 "
"byte. Is é sin le rá, caithfidh fad ár n-eagar a bheith ina iolrach de 4."

msgid ""
"Now we loop through our views, this is in case we're using multiview "
"rendering which is applicable for stereo rendering (XR). In most cases we "
"will only have one view."
msgstr ""
"Anois déanaimid lúb trínár dtuairimí, is é seo i gcás go bhfuilimid ag úsáid "
"rindreáil il-amharc atá infheidhme maidir le rindreáil steirió (XR). I "
"bhformhór na gcásanna ní bheidh ach dearcadh amháin againn."

msgid ""
"There is no performance benefit to use multiview for post processing here, "
"handling the views separately like this will still enable the GPU to use "
"parallelism if beneficial."
msgstr ""
"Níl aon sochar feidhmíochta ann multiview a úsáid le haghaidh iar-phróiseála "
"anseo, cuirfidh na tuairimí a láimhseáil ar leithligh mar seo ar chumas an "
"GPU comhthreomhaíocht a úsáid má tá sé tairbheach."

msgid ""
"Next we obtain the color buffer for this view. This is the buffer into which "
"our 3D scene has been rendered."
msgstr ""
"Ansin faighimid an maolán dathanna don radharc seo. Is é seo an maolán inar "
"rinneadh ár radharc 3D isteach."

msgid ""
"We then prepare a uniform set so we can communicate the color buffer to our "
"shader."
msgstr ""
"Ansin ullmhaímid tacar aonfhoirmeach ionas gur féidir linn an maolán "
"dathanna a chur in iúl dár scáthóir."

msgid ""
"Note the use of our :ref:`UniformSetCacheRD <class_UniformSetCacheRD>` cache "
"which ensures we can check for our uniform set each frame. As our color "
"buffer can change from frame to frame and our uniform cache will "
"automatically clean up uniform sets when buffers are freed, this is the safe "
"way to ensure we do not leak memory or use an outdated set."
msgstr ""
"Tabhair faoi deara úsáid ár taisce :ref:`UniformSetCacheRD "
"<class_UniformSetCacheRD>` a chinntíonn gur féidir linn a sheiceáil le "
"haghaidh ár n-éide tacair gach fráma. Toisc gur féidir lenár maolán datha "
"athrú ó fhráma go fráma agus glanfaidh ár dtaisce aonfhoirmeach tacair "
"aonfhoirmeacha go huathoibríoch nuair a scaoiltear maoláin, is é seo an "
"bealach sábháilte chun a chinntiú nach sceitheadh cuimhne nó úsáidimid "
"sraith atá as dáta."

msgid ""
"Finally we build our compute list by binding our pipeline, binding our "
"uniform set, pushing our push constant data, and calling dispatch for our "
"groups."
msgstr ""
"Mar fhocal scoir déanaimid ár liosta ríomha a thógáil trínár bpíblíne a "
"cheangal, ár dtacar aonfhoirmeach a cheangal, ár sonraí tairiseacha brú a "
"bhrú, agus seolta a chur chuig ár ngrúpaí."

msgid ""
"With our compositor effect completed, we now need to add it to our "
"compositor."
msgstr ""
"Agus ár n-éifeacht cumadóir críochnaithe, ní mór dúinn anois é a chur lenár "
"gcumadóir."

msgid ""
"On our compositor we expand the compositor effects property and press ``Add "
"Element``."
msgstr ""
"Ar ár gcumadóir leathnaímid maoin na héifeachtaí cumadóirí agus brúimid "
"``Add Elements ``."

msgid "Now we can add our compositor effect:"
msgstr "Anois is féidir linn ár n-éifeacht cumadóir a chur leis:"

msgid ""
"After selecting our ``PostProcessShader`` we need to set our user shader "
"code:"
msgstr ""
"Tar éis dúinn ár “PostProcessShader” a roghnú ní mór dúinn ár gcód "
"scáthaithe úsáideora a shocrú:"

msgid "With that all done, our output is in grayscale."
msgstr "Leis sin go léir déanta, tá ár n-aschur i scála liath."

msgid ""
"For a more advanced example of post effects, check out the `Radial blur "
"based sky rays <https://github.com/BastiaanOlij/RERadialSunRays>`_ example "
"project created by Bastiaan Olij."
msgstr ""
"Le haghaidh sampla níos forbartha d’iarmhairtí, féach ar an sampla "
"`Ghathanna spéirbhunaithe gathacha <https://github.com/BastiaanOlij/"
"RERadialSunRays>`_ cruthaithe ag Bastiaan Olij."
