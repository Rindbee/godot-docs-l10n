#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Screen-reading shaders"
msgstr "Scáthóirí léamh scáileáin"

msgid "Introduction"
msgstr "Réamhrá"

msgid ""
"It is often desired to make a shader that reads from the same screen to "
"which it's writing. 3D APIs, such as OpenGL or DirectX, make this very "
"difficult because of internal hardware limitations. GPUs are extremely "
"parallel, so reading and writing causes all sorts of cache and coherency "
"problems. As a result, not even the most modern hardware supports this "
"properly."
msgstr ""
"Is minic a theastaíonn sé scáthóir a dhéanamh a léann ón scáileán céanna a "
"bhfuil sé ag scríobh. Déanann APIs 3D, mar OpenGL nó DirectX, é seo an-"
"deacair mar gheall ar theorainneacha crua-earraí inmheánacha. Tá GPUanna "
"thar a bheith comhthreomhar, mar sin is cúis le gach cineál fadhbanna taisce "
"agus comhtháthaithe is cúis le léamh agus scríobh. Mar thoradh air sin, ní "
"thacaíonn fiú na crua-earraí is nua-aimseartha leis seo i gceart."

msgid ""
"The workaround is to make a copy of the screen, or a part of the screen, to "
"a back-buffer and then read from it while drawing. Godot provides a few "
"tools that make this process easy."
msgstr ""
"Is é an réiteach ná cóip den scáileán, nó cuid den scáileán, a dhéanamh "
"chuig maolán cúil agus ansin léamh uaidh agus tú ag líníocht. Soláthraíonn "
"Godot cúpla uirlis a fhágann go bhfuil an próiseas seo éasca."

msgid "Screen texture"
msgstr "Uigeacht scáileáin"

msgid ""
"Godot :ref:`doc_shading_language` has a special texture to access the "
"already rendered contents of the screen. It is used by specifying a hint "
"when declaring a ``sampler2D`` uniform: ``hint_screen_texture``. A special "
"built-in varying ``SCREEN_UV`` can be used to obtain the UV relative to the "
"screen for the current fragment. As a result, this canvas_item fragment "
"shader results in an invisible object, because it only shows what lies "
"behind:"
msgstr ""
"Godot:ref: Tá uigeacht speisialta ag `doc_shading_language` chun rochtain a "
"fháil ar ábhar an scáileáin a rindreáiltear cheana féin. Úsáidtear é trí "
"leid a shonrú agus aonfhoirm `Sampler2D`` a dhearbhú: "
"``hint_screen_texture``. Is féidir ``SCREEN_UV`` éagsúil ionsuite speisialta "
"a úsáid chun an UV a fháil i gcoibhneas leis an scáileán don bhrúin reatha. "
"Mar thoradh air sin, bíonn réad dofheicthe mar thoradh ar an scáthóir brúin "
"canvas_item seo, toisc nach léiríonn sé ach cad atá taobh thiar de:"

msgid ""
"``textureLod`` is used here as we only want to read from the bottom mipmap. "
"If you want to read from a blurred version of the texture instead, you can "
"increase the third argument to ``textureLod`` and change the hint "
"``filter_nearest`` to ``filter_nearest_mipmap`` (or any other filter with "
"mipmaps enabled). If using a filter with mipmaps, Godot will automatically "
"calculate the blurred texture for you."
msgstr ""
"Úsáidtear ``texturelod`` anseo mar ní theastaíonn uainn ach léamh ón mipmap "
"bun. Más mian leat léamh ó leagan doiléir den uigeacht ina ionad sin, is "
"féidir leat an tríú argóint a mhéadú go ``texturelod`` agus an leid "
"``filter_nearest`` a athrú go `filter_nearest_mipmap`` (nó aon scagaire eile "
"le mipmaps cumasaithe). Má úsáideann tú scagaire le mipmaps, ríomfaidh Godot "
"an uigeacht doiléir duit go huathoibríoch."

msgid ""
"If the filter mode is not changed to a filter mode that contains ``mipmap`` "
"in its name, ``textureLod`` with an LOD parameter greater than ``0.0`` will "
"have the same appearance as with the ``0.0`` LOD parameter."
msgstr ""
"Mura n-athraítear an modh scagaire go modh scagaire ina bhfuil `mipmap`` ina "
"ainm, beidh an chuma céanna ag ``textureLOD`` le paraiméadar LOD níos mó ná "
"``0.0`` le paraiméadar LOD ``0.0``."

msgid "Screen texture example"
msgstr "Sampla uigeachta scáileáin"

msgid ""
"The screen texture can be used for many things. There is a special demo for "
"*Screen Space Shaders*, that you can download to see and learn. One example "
"is a simple shader to adjust brightness, contrast and saturation:"
msgstr ""
"Is féidir uigeacht an scáileáin a úsáid le haghaidh go leor rudaí. Tá "
"taispeántas speisialta ann le haghaidh *Scáileán Spás Scáileán*, is féidir "
"leat a íoslódáil chun a fheiceáil agus a fhoghlaim. Sampla amháin is ea "
"scáthóir simplí chun gile, codarsnacht agus sáithiú a choigeartú:"

msgid "Behind the scenes"
msgstr "Taobh thiar de na radhairc"

msgid ""
"While this seems magical, it's not. In 2D, when ``hint_screen_texture`` is "
"first found in a node that is about to be drawn, Godot does a full-screen "
"copy to a back-buffer. Subsequent nodes that use it in shaders will not have "
"the screen copied for them, because this ends up being inefficient. In 3D, "
"the screen is copied after the opaque geometry pass, but before the "
"transparent geometry pass, so transparent objects will not be captured in "
"the screen texture."
msgstr ""
"Cé gur cosúil go bhfuil sé seo draíochta, níl sé. In 2D, nuair a aimsítear "
"``leid_screen_texture`` ar dtús i nód atá ar tí a tharraingt, déanann Godot "
"cóip lánscáileáin de chúl-mhaolán. Ní dhéanfar an scáileán a chóipeáil ar na "
"nóid ina dhiaidh sin a úsáideann é i scáthaitheoirí, toisc go mbeidh sé seo "
"neamhéifeachtach mar thoradh air sin. I 3D, déantar an scáileán a chóipeáil "
"tar éis an pas céimseata teimhneach, ach roimh an pas céimseata "
"trédhearcach, mar sin ní ghlacfar le rudaí trédhearcacha in uigeacht an "
"scáileáin."

msgid ""
"As a result, in 2D, if shaders that use ``hint_screen_texture`` overlap, the "
"second one will not use the result of the first one, resulting in unexpected "
"visuals:"
msgstr ""
"Mar thoradh air sin, i 2D, má fhorluíonn scáthóirí a úsáideann "
"``hint_screen_texture`, ní úsáidfidh an dara ceann toradh an chéad cheann, "
"agus mar thoradh air sin beidh íomhánna gan choinne:"

msgid ""
"In the above image, the second sphere (top right) is using the same source "
"for the screen texture as the first one below, so the first one "
"\"disappears\", or is not visible."
msgstr ""
"San íomhá thuas, tá an dara sféar (barr ar dheis) ag úsáid an fhoinse "
"chéanna don uigeacht scáileáin leis an gcéad cheann thíos, mar sin “imíonn” "
"an chéad cheann, nó nach bhfuil sé le feiceáil."

msgid ""
"In 2D, this can be corrected via the :ref:`BackBufferCopy "
"<class_BackBufferCopy>` node, which can be instantiated between both "
"spheres. BackBufferCopy can work by either specifying a screen region or the "
"whole screen:"
msgstr ""
"In 2D, is féidir é seo a cheartú tríd an nód :ref:`BackBufferCopy "
"<class_BackBufferCopy>`, ar féidir é a mheandlú idir an dá sféar. Is féidir "
"le BackBufferCopy oibriú trí réigiún scáileáin nó an scáileán iomlán a "
"shonrú:"

msgid "With correct back-buffer copying, the two spheres blend correctly:"
msgstr "Le cóipeáil chúl-mhaolán ceart, meascnaíonn an dá réimse i gceart:"

msgid ""
"In 3D, materials that use ``hint_screen_texture`` are considered transparent "
"themselves and will not appear in the resulting screen texture of other "
"materials. If you plan to instance a scene that uses a material with "
"``hint_screen_texture``, you will need to use a BackBufferCopy node."
msgstr ""
"I 3D, meastar go bhfuil ábhair a úsáideann ``hint_screen_texture` "
"trédhearcach iad féin agus ní bheidh siad le feiceáil in uigeacht scáileáin "
"ábhar eile mar thoradh air. Má tá sé ar intinn agat radharc a úsáideann "
"ábhar le `hint_screen_texture``, beidh ort nód BackBufferCopy a úsáid."

msgid ""
"In 3D, there is less flexibility to solve this particular issue because the "
"screen texture is only captured once. Be careful when using the screen "
"texture in 3D as it won't capture transparent objects and may capture some "
"opaque objects that are in front of the object using the screen texture."
msgstr ""
"I 3D, tá níos lú solúbthachta ann chun an cheist áirithe seo a réiteach "
"toisc nach ngabhtar uigeacht an scáileáin ach uair amháin. Bí cúramach agus "
"tú ag úsáid uigeacht an scáileáin i 3D mar ní ghabhann sé rudaí "
"trédhearcacha agus féadfaidh sé roinnt rudaí trédhearcacha atá os comhair an "
"réada a ghabháil ag baint úsáide as uigeacht an scáileáin."

msgid ""
"You can reproduce the back-buffer logic in 3D by creating a :ref:`Viewport "
"<class_Viewport>` with a camera in the same position as your object, and "
"then use the :ref:`Viewport's <class_Viewport>` texture instead of the "
"screen texture."
msgstr ""
"Is féidir leat an loighic maolán cúil a atáirgeadh i 3D trí :ref:`Viewport "
"<class_Viewport>` a chruthú le ceamara sa suíomh céanna le do réad, agus "
"ansin úsáid a bhaint as uigeacht :ref:`Viewport <class_Viewport>` in ionad "
"an uigeacht scáileáin."

msgid "Back-buffer logic"
msgstr "Loighic cúl-maolán"

msgid ""
"So, to make it clearer, here's how the backbuffer copying logic works in 2D "
"in Godot:"
msgstr ""
"Mar sin, chun é a dhéanamh níos soiléire, seo an chaoi a n-oibríonn an "
"loighic cóipeála backbuffer i 2D i Godot:"

msgid ""
"If a node uses ``hint_screen_texture``, the entire screen is copied to the "
"back buffer before drawing that node. This only happens the first time; "
"subsequent nodes do not trigger this."
msgstr ""
"Má úsáideann nód ``hint_screen_texture``, déantar an scáileán iomlán a "
"chóipeáil chuig an maolán cúil sula ndéantar an nód sin a tharraingt. Ní "
"tharlaíonn sé seo ach an chéad uair; ní spreagann nóid ina dhiaidh sin é seo."

msgid ""
"If a BackBufferCopy node was processed before the situation in the point "
"above (even if ``hint_screen_texture`` was not used), the behavior described "
"in the point above does not happen. In other words, automatic copying of the "
"entire screen only happens if ``hint_screen_texture`` is used in a node for "
"the first time and no BackBufferCopy node (not disabled) was found before in "
"tree-order."
msgstr ""
"Má phróiseáladh nód BackBufferCopy roimh an staid sa phointe thuas (fiú mura "
"n-úsáideadh ``hint_screen_texture``), ní tharlaíonn an t-iompar a "
"thuairiscítear sa phointe thuas. Is é sin le rá, ní tharlaíonn cóipeáil "
"uathoibríoch an scáileáin iomlán ach má úsáidtear ``hint_screen_texture`` i "
"nód den chéad uair agus níor aimsíodh aon nód BackBufferCopy (nach bhfuil "
"míchumasaithe) roimhe seo in ord crainn."

msgid ""
"BackBufferCopy can copy either the entire screen or a region. If set to only "
"a region (not the whole screen) and your shader uses pixels not in the "
"region copied, the result of that read is undefined (most likely garbage "
"from previous frames). In other words, it's possible to use BackBufferCopy "
"to copy back a region of the screen and then read the screen texture from a "
"different region. Avoid this behavior!"
msgstr ""
"Is féidir le BackBufferCopy an scáileán iomlán nó réigiún a chóipeáil. Má tá "
"sé socraithe ar réigiún amháin (ní an scáileán iomlán) agus má úsáideann do "
"scáthóir picteilíní nach bhfuil sa réigiún cóipeáilte, níl toradh an léamh "
"sin neamhshainithe (is dóichí truflais ó fhrámaí roimhe seo). Is é sin le "
"rá, is féidir BackBufferCopy a úsáid chun réigiún den scáileán a chóipeáil "
"ar ais agus ansin uigeacht an scáileáin a léamh ó réigiún difriúil. Seachain "
"an t-iompar seo!"

msgid "Depth texture"
msgstr "Uigeacht doimhneachta"

msgid ""
"For 3D shaders, it's also possible to access the screen depth buffer. For "
"this, the ``hint_depth_texture`` hint is used. This texture is not linear; "
"it must be converted using the inverse projection matrix."
msgstr ""
"I gcás scáthaitheoirí 3D, is féidir rochtain a fháil ar mhaolán doimhneacht "
"an scáileáin. Chuige seo, úsáidtear an leid ``leid_depth_texture``. Níl an "
"uigeacht seo líneach; ní mór é a thiontú ag baint úsáide as an maitrís "
"inbhéartach teilgean."

msgid ""
"The following code retrieves the 3D position below the pixel being drawn:"
msgstr ""
"Aisghabhann an cód seo a leanas an suíomh 3D faoi bhun an picteilín atá á "
"tharraingt:"

msgid "Normal-roughness texture"
msgstr "Uigeacht ghnáth-garbh"

msgid ""
"Normal-roughness texture is only supported in the Forward+ rendering method, "
"not Mobile or Compatibility."
msgstr ""
"Ní thacaítear le uigeacht ghnáth-garbh ach sa modh rindreála Forward+, ní "
"Soghluaiste nó Comhoiriúnacht."

msgid ""
"Similarly, the normal-roughness texture can be used to read the normals and "
"roughness of objects rendered in the depth prepass. The normal is stored in "
"the ``.xyz`` channels (mapped to the 0-1 range) while the roughness is "
"stored in the ``.w`` channel."
msgstr ""
"Ar an gcaoi chéanna, is féidir an uigeacht ghnáth-garbh a úsáid chun "
"gnáthmhála agus garbh rudaí a rinneadh sa réamh-mheas doimhneachta a léamh. "
"Stóráiltear an gnáthghnáth sna cainéil ``.xyz`` (mapáilte leis an raon 0-1) "
"agus stóráiltear an garbh sa chainéal ``.w`."

msgid "Redefining screen textures"
msgstr "Athshainiú uigeachtaí scáileáin"

msgid ""
"The screen texture hints (``hint_screen_texture``, ``hint_depth_texture``, "
"and ``hint_normal_roughness_texture``) can be used with multiple uniforms. "
"For example, you may want to read from the texture multiple times with a "
"different repeat flag or filter flag."
msgstr ""
"Is féidir leideanna uigeachta an scáileáin (``hint_screen_texture``, "
"`hint_depth_texture``, agus ``hint_normal_roughness_texture``) a úsáid le "
"éide iolracha. Mar shampla, b'fhéidir gur mhaith leat léamh ón uigeacht arís "
"agus arís eile le bratach athfhillteach nó scagaire difriúil."

msgid ""
"The following example shows a shader that reads the screen space normal with "
"linear filtering, but reads the screen space roughness using nearest "
"neighbor filtering."
msgstr ""
"Taispeánann an sampla seo a leanas scáthlán a léann an spás scáileáin gnáth "
"le scagadh líneach, ach a léann garbh an spás scáileáin ag baint úsáide as "
"scagadh comharsan is gaire."
