#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 3D shader"
msgstr "Do chéad shader 3D"

msgid ""
"You have decided to start writing your own custom Spatial shader. Maybe you "
"saw a cool trick online that was done with shaders, or you have found that "
"the :ref:`StandardMaterial3D <class_StandardMaterial3D>` isn't quite meeting "
"your needs. Either way, you have decided to write your own and now you need "
"to figure out where to start."
msgstr ""
"Tá sé socraithe agat tosú ag scríobh do scáthóir spáis saincheaptha féin. "
"B'fhéidir go bhfaca tú cleas iontach ar líne a rinneadh le shaders, nó go "
"bhfuair tú amach nach bhfuil an :ref:`StandardMaterial3D "
"<class_StandardMaterial3D>` ag freastal ar do chuid riachtanas go hiomlán. "
"Slí amháin nó slí, tá cinneadh déanta agat do chuid féin a scríobh agus "
"anois ní mór duit a dhéanamh amach cá háit le tosú."

msgid ""
"This tutorial will explain how to write a Spatial shader and will cover more "
"topics than the :ref:`CanvasItem <doc_your_first_canvasitem_shader>` "
"tutorial."
msgstr ""
"Míneoidh an rang teagaisc seo conas scáthaitheoir spáis a scríobh agus "
"clúdóidh sé níos mó topaicí ná an :ref:`CanvasItem "
"<doc_your_first_canvasitem_shader>`."

msgid ""
"Spatial shaders have more built-in functionality than CanvasItem shaders. "
"The expectation with spatial shaders is that Godot has already provided the "
"functionality for common use cases and all the user needs to do in the "
"shader is set the proper parameters. This is especially true for a PBR "
"(physically based rendering) workflow."
msgstr ""
"Tá feidhmiúlacht níos tógtha ag shaders spásúla ná shaders CanvasItem. Is é "
"an t-ionchas le shaders spásúil go bhfuil Godot ar fáil cheana féin ar an "
"fheidhmiúlacht le haghaidh cásanna úsáide coitianta agus go léir is gá an t-"
"úsáideoir a dhéanamh sa shader leagtar na paraiméadair chuí. Tá sé seo fíor "
"go háirithe le haghaidh sreabhadh oibre PBR (rindreáil atá bunaithe go "
"fisiciúil)."

msgid ""
"This is a two-part tutorial. In this first part we will create terrain using "
"vertex displacement from a heightmap in the vertex function. In the :ref:"
"`second part <doc_your_second_spatial_shader>` we will take the concepts "
"from this tutorial and set up custom materials in a fragment shader by "
"writing an ocean water shader."
msgstr ""
"Is teagaisc dhá chuid é seo. Sa chéad chuid seo cruthóimid tír-raon ag baint "
"úsáide as díláithriú rinn ó léarscáil airde san fheidhm rinn. Sa :ref:`dara "
"cuid <doc_your_second_spatial_shader>` tógfaimid na coincheapa ón rang "
"teagaisc seo agus socróimid ábhair shaincheaptha i scáthlánóir blúire trí "
"scáthadóir uisce farraige a scríobh."

msgid ""
"This tutorial assumes some basic shader knowledge such as types (``vec2``, "
"``float``, ``sampler2D``), and functions. If you are uncomfortable with "
"these concepts it is best to get a gentle introduction from `The Book of "
"Shaders <https://thebookofshaders.com>`_ before completing this tutorial."
msgstr ""
"Glacann an rang teagaisc seo le roinnt eolas bunúsach shader cosúil le "
"cineálacha (``vec2``, `` snámhphointe``, ``sampler2D``), agus feidhmeanna. "
"Mura bhfuil tú compordach leis na coincheapa seo is fearr réamhrá breá a "
"fháil ó `The Book of Shaders <https://thebookofshaders.com>`_ sula "
"gcríochnaíonn tú an rang teagaisc seo."

msgid "Where to assign my material"
msgstr "Cá háit le m'ábhar a shannadh"

msgid ""
"In 3D, objects are drawn using :ref:`Meshes <class_Mesh>`. Meshes are a "
"resource type that store geometry (the shape of your object) and materials "
"(the color and how the object reacts to light) in units called \"surfaces\". "
"A Mesh can have multiple surfaces, or just one. Typically, you would import "
"a mesh from another program (e.g. Blender). But Godot also has a few :ref:"
"`PrimitiveMeshes <class_primitivemesh>` that allow you to add basic geometry "
"to a scene without importing Meshes."
msgstr ""
"I 3D, tarraingítear réada le :ref:`Meshes <class_Mesh>`. Is cineál acmhainne "
"iad mogaill a stórálann céimseata (cruth do réad) agus ábhair (an dath agus "
"an chaoi a n-imoibríonn an réad don solas) in aonaid ar a dtugtar "
"\"dromchla\". Is féidir le dromchlaí iolracha, nó díreach ceann amháin, a "
"bheith ag mogalra. Go hiondúil, dhéanfá mogall a allmhairiú ó ríomhchlár "
"eile (m.sh. Cumascóir). Ach tá cúpla :ref:`PrimitiveMeshes "
"<class_primitivemesh>` ag Godot a ligeann duit bunchéimseata a chur le "
"radharc gan meshes a allmhairiú."

msgid ""
"There are multiple node types that you can use to draw a mesh. The main one "
"is :ref:`MeshInstance3D <class_MeshInstance3D>`, but you can also use :ref:"
"`GPUParticles3D <class_GPUParticles3D>`, :ref:`MultiMeshes "
"<class_MultiMesh>` (with a :ref:`MultiMeshInstance3D "
"<class_MultiMeshInstance3D>`), or others."
msgstr ""
"Tá cineálacha éagsúla nód ann ar féidir leat a úsáid chun mogalra a "
"tharraingt. Is é an príomhcheann ná :ref:`MeshInstance3D "
"<class_MeshInstance3D>`, ach is féidir leat :ref:`GPUParticles3D "
"<class_GPUParticles3D>` a úsáid freisin, :ref:`MultiMeshes "
"<class_MultiMesh>` (le :ref:`MultiMesh> <class_MultiMesh>\" ), nó daoine "
"eile."

msgid ""
"Typically, a material is associated with a given surface in a mesh, but some "
"nodes, like MeshInstance3D, allow you to override the material for a "
"specific surface, or for all surfaces."
msgstr ""
"De ghnáth, baineann ábhar le dromchla ar leith i mogalra, ach ligeann roinnt "
"nóid, cosúil le MeshInstance3D, duit an t-ábhar a shárú le haghaidh dromchla "
"ar leith, nó do gach dromchla."

msgid ""
"If you set a material on the surface or mesh itself, then all "
"MeshInstance3Ds that share that mesh will share that material. However, if "
"you want to reuse the same mesh across multiple mesh instances, but have "
"different materials for each instance then you should set the material on "
"the MeshInstance3D."
msgstr ""
"Má shocraíonn tú ábhar ar an dromchla nó ar an mogalra féin, ansin roinnfidh "
"gach MeshInstance3Ds a roinneann an mogalra sin an t-ábhar sin. Mar sin "
"féin, más mian leat an mogalra céanna a athúsáid ar fud cásanna mogalra "
"éagsúla, ach má tá ábhair éagsúla agat do gach cás ansin ba chóir duit an t-"
"ábhar a shocrú ar an MeshInstance3D."

msgid ""
"For this tutorial we will set our material on the mesh itself rather than "
"taking advantage of the MeshInstance3D's ability to override materials."
msgstr ""
"Maidir leis an rang teagaisc seo, socróimid ár n-ábhar ar an mogalra féin "
"seachas leas a bhaint as cumas MeshInstance3D ábhair a shárú."

msgid "Setting up"
msgstr "Ag bhunú"

msgid ""
"Add a new :ref:`MeshInstance3D <class_MeshInstance3D>` node to your scene."
msgstr ""
"Cuir nód nua :ref:`MeshInstance3D <class_MeshInstance3D>` le do radharc."

msgid ""
"In the inspector tab beside \"Mesh\" click \"[empty]\" and select \"New "
"PlaneMesh\". Then click on the image of a plane that appears."
msgstr ""
"Sa chluaisín cigire in aice le \"Mogalra\" cliceáil \"[folamh]\" agus "
"roghnaigh \"New PlaneMesh\". Ansin cliceáil ar an íomhá d'eitleán atá le "
"feiceáil."

msgid "This adds a :ref:`PlaneMesh <class_planemesh>` to our scene."
msgstr "Cuireann sé seo :ref:`PlaneMesh <class_planemesh>` lenár radharc."

msgid ""
"Then, in the viewport, click in the upper left corner on the button that "
"says \"Perspective\". A menu will appear. In the middle of the menu are "
"options for how to display the scene. Select 'Display Wireframe'."
msgstr ""
"Ansin, sa viewport, cliceáil sa chúinne uachtarach ar chlé ar an gcnaipe a "
"deir \"Peirspictíocht\". Beidh roghchlár le feiceáil. I lár an roghchláir tá "
"roghanna maidir le conas an radharc a thaispeáint. Roghnaigh 'Taispeáin "
"Sreangfhráma'."

msgid "This will allow you to see the triangles making up the plane."
msgstr ""
"Ligfidh sé seo duit na triantáin a fheiceáil ag déanamh suas an eitleáin."

msgid ""
"Now set ``Subdivide Width`` and ``Subdivide Depth`` of the :ref:`PlaneMesh "
"<class_planemesh>` to ``32``."
msgstr ""
"Anois socraigh ``Subdivide Width`` agus ``Foroinn Doimhneacht`` den :ref:"
"`PlaneMesh <class_planemesh>` go ``32``."

msgid ""
"You can see that there are now many more triangles in the :ref:"
"`MeshInstance3D<class_MeshInstance3D>`. This will give us more vertices to "
"work with and thus allow us to add more detail."
msgstr ""
"Is féidir leat a fheiceáil go bhfuil i bhfad níos mó triantáin sa :ref:"
"`MeshInstance3D<class MeshInstance3D>`. Tabharfaidh sé seo níos mó rinn "
"dúinn oibriú leo agus mar sin beimid in ann níos mó sonraí a chur leis."

msgid ""
":ref:`PrimitiveMeshes <class_primitivemesh>`, like PlaneMesh, only have one "
"surface, so instead of an array of materials there is only one. Click beside "
"\"Material\" where it says \"[empty]\" and select \"New ShaderMaterial\". "
"Then click the sphere that appears."
msgstr ""
":ref:`PrimitiveMeshes <class_primitivemesh>`, cosúil le PlaneMesh, níl ach "
"dromchla amháin acu, mar sin in ionad raon ábhar níl ach ceann amháin ann. "
"Cliceáil in aice le \"Ábhar\" áit a ndeir sé \"[folamh]\" agus roghnaigh "
"\"New ShaderMaterial\". Ansin cliceáil ar an sféar atá le feiceáil."

msgid ""
"Now click beside \"Shader\" where it says \"[empty]\" and select \"New "
"Shader\"."
msgstr ""
"Anois cliceáil in aice le \"Shader\" áit a deir sé \"[folamh]\" agus "
"roghnaigh \"New Shader\"."

msgid ""
"The shader editor should now pop up and you are ready to begin writing your "
"first Spatial shader!"
msgstr ""
"Ba chóir don eagarthóir shader pop suas anois agus tá tú réidh chun tús a "
"scríobh do chéad shader Spásúil!"

msgid "Shader magic"
msgstr "Draíocht shader"

msgid ""
"The new shader is already generated with a ``shader_type`` variable and the "
"``fragment()`` function. The first thing Godot shaders need is a declaration "
"of what type of shader they are. In this case the ``shader_type`` is set to "
"``spatial`` because this is a spatial shader."
msgstr ""
"Gintear an scáthóir nua cheana féin le hathróg ''shader_type'' agus an "
"fheidhm ''fragment()'''. Is é an chéad rud a theastaíonn ó shaders Godot ná "
"dearbhú ar an gcineál scáthóra atá iontu. Sa chás seo tá an ''shader_type'' "
"leagtha ar ''spásúil'' toisc gur scáthóir spásúil é seo."

msgid ""
"For now ignore the ``fragment()`` function and define the ``vertex()`` "
"function. The ``vertex()`` function determines where the vertices of your :"
"ref:`MeshInstance3D<class_MeshInstance3D>` appear in the final scene. We "
"will be using it to offset the height of each vertex and make our flat plane "
"appear like a little terrain."
msgstr ""
"Faoi láthair déan neamhaird den fheidhm ``bhroinn ()`` agus sainmhínigh an "
"fheidhm `` rinn ()``. Cinneann an fheidhm `` rinn ()`` cá bhfuil na rinn do :"
"ref:`MeshInstance3D <class_MeshInstance3D>` le feiceáil sa radharc deiridh. "
"Beidh sé á úsáid againn chun airde gach rinn a fhritháireamh agus chun ár n-"
"eitleán comhréidh a dhéanamh cosúil le tír-raon beag."

msgid "We define the vertex shader like so:"
msgstr "Sainmhínímid an shader vertex mar sin:"

msgid ""
"With nothing in the ``vertex()`` function, Godot will use its default vertex "
"shader. We can easily start to make changes by adding a single line:"
msgstr ""
"Le rud ar bith sa fheidhm ''vertex()'', úsáidfidh Godot a shader vertex "
"réamhshocraithe. Is féidir linn tosú go héasca ar athruithe a dhéanamh trí "
"líne amháin a chur leis:"

msgid "Adding this line, you should get an image like the one below."
msgstr ""
"Agus an líne seo á cur leis, ba chóir duit íomhá a fháil cosúil leis an "
"gceann thíos."

msgid ""
"Okay, let's unpack this. The ``y`` value of the ``VERTEX`` is being "
"increased. And we are passing the ``x`` and ``z`` components of the "
"``VERTEX`` as arguments to ``cos`` and ``sin``; that gives us a wave-like "
"appearance across the ``x`` and ``z`` axes."
msgstr ""
"Ceart go leor, déanaimis é seo a dhíphacáil. Tá luach ''y'' an ''VERTEX'' á "
"mhéadú. Agus táimid ag dul thar na comhpháirteanna ''x'' agus ''z'' den "
"''VERTEX'' mar argóintí ar ''cos'' agus ''sin''; Tugann sé sin cuma cosúil "
"le tonn dúinn ar na haiseanna ''x'' agus ''z''."

msgid ""
"What we want to achieve is the look of little hills; after all. ``cos`` and "
"``sin`` already look kind of like hills. We do so by scaling the inputs to "
"the ``cos`` and ``sin`` functions."
msgstr ""
"An rud atáimid ag iarraidh a bhaint amach ná cuma na gcnoc beag; Tar éis an "
"tsaoil. Tá cuma na gcnoc ar ''cos'' agus ''sin'' cheana féin. Déanaimid "
"amhlaidh trí na hionchuir a scálú chuig na feidhmeanna ''cos'' agus ''sin''."

msgid ""
"This looks better, but it is still too spiky and repetitive, let's make it a "
"little more interesting."
msgstr ""
"Breathnaíonn sé seo níos fearr, ach tá sé fós ró-spiky agus athchleachtach, "
"a ligean ar é a dhéanamh beagán níos suimiúla."

msgid "Noise heightmap"
msgstr "Mapa airde torainn"

msgid ""
"Noise is a very popular tool for faking the look of terrain. Think of it as "
"similar to the cosine function where you have repeating hills except, with "
"noise, each hill has a different height."
msgstr ""
"Is uirlis an-tóir é torann chun cuma an tír-raoin a fheiceáil. Smaoinigh air "
"mar atá cosúil leis an bhfeidhm cosine áit a bhfuil cnoic athrá agat ach "
"amháin, le torann, tá airde dhifriúil ag gach cnoc."

msgid ""
"Godot provides the :ref:`NoiseTexture2D <class_noisetexture2D>` resource for "
"generating a noise texture that can be accessed from a shader."
msgstr ""
"Soláthraíonn Godot an acmhainn :ref:`NoiseTexture2D <class_noisetexture2D>` "
"chun uigeacht torainn a ghiniúint ar féidir rochtain a fháil air ó scáthóir."

msgid ""
"To access a texture in a shader add the following code near the top of your "
"shader, outside the ``vertex()`` function."
msgstr ""
"Chun rochtain a fháil ar uigeacht i shader cuir an cód seo a leanas in aice "
"le barr do shader, lasmuigh den fheidhm ''vertex()''."

msgid ""
"This will allow you to send a noise texture to the shader. Now look in the "
"inspector under your material. You should see a section called \"Shader "
"Params\". If you open it up, you'll see a section called \"noise\"."
msgstr ""
"Ligfidh sé seo duit uigeacht torainn a sheoladh chuig an shader. Anois féach "
"ar an gcigire faoi d'ábhar. Ba chóir duit rannóg ar a dtugtar \"Shader "
"Params\" a fheiceáil. Má osclaíonn tú é, feicfidh tú rannóg ar a dtugtar "
"\"torann\"."

msgid ""
"Click beside it where it says \"[empty]\" and select \"New NoiseTexture2D\". "
"Then in your :ref:`NoiseTexture2D <class_noisetexture2D>` click beside where "
"it says \"Noise\" and select \"New FastNoiseLite\"."
msgstr ""
"Cliceáil in aice leis áit a ndeir sé \"[folamh]\" agus roghnaigh \"New "
"NoiseTexture2D\". Ansin i do :ref:`NoiseTexture2D <class_noisetexture2D>` "
"cliceáil in aice leis an áit a ndeir sé \"Torainn\" agus roghnaigh \"New "
"FastNoiseLite\"."

msgid ""
":ref:`FastNoiseLite <class_fastnoiselite>` is used by the NoiseTexture2D to "
"generate a heightmap."
msgstr ""
":ref:`Úsáideann an NoiseTexture2D `FastNoiseLite <class_fastnoiselite>` chun "
"léarscáil airde a ghiniúint."

msgid "Once you set it up and should look like this."
msgstr "Nuair a chuireann tú ar bun é agus ba chóir duit breathnú mar seo."

msgid ""
"Now, access the noise texture using the ``texture()`` function. "
"``texture()`` takes a texture as the first argument and a ``vec2`` for the "
"position on the texture as the second argument. We use the ``x`` and ``z`` "
"channels of ``VERTEX`` to determine where on the texture to look up. Note "
"that the PlaneMesh coordinates are within the [-1,1] range (for a size of "
"2), while the texture coordinates are within [0,1], so to normalize we "
"divide by the size of the PlaneMesh by 2.0 and add 0.5. ``texture()`` "
"returns a ``vec4`` of the ``r, g, b, a`` channels at the position. Since the "
"noise texture is grayscale, all of the values are the same, so we can use "
"any one of the channels as the height. In this case we'll use the ``r``, or "
"``x`` channel."
msgstr ""
"Anois, faigh rochtain ar uigeacht an torainn ag baint úsáide as an bhfeidhm "
"''uigeacht()''. Glacann ''uigeacht()'' uigeacht mar an chéad argóint agus "
"''vec2'' don seasamh ar an uigeacht mar an dara hargóint. Bainimid úsáid as "
"na cainéil ''x'' agus ''z'' de ''VERTEX'' chun a fháil amach cá háit ar an "
"uigeacht le breathnú suas. Tabhair faoi deara go bhfuil na comhordanáidí "
"PlaneMesh laistigh den raon [-1,1] (ar feadh méid 2), cé go bhfuil na "
"comhordanáidí uigeachta laistigh de [0,1], ionas go ndéanfaimid normalú ar "
"mhéid an PlaneMesh faoi 2.0 agus cuir 0.5 leis. Filleann ''uigeacht()'' "
"''vec4'' de na cainéil ''R, G, B, A'' ag an suíomh. Ós rud é go bhfuil an "
"uigeacht torainn liathscála, tá na luachanna go léir mar an gcéanna, ionas "
"gur féidir linn aon cheann de na bealaí a úsáid mar an airde. Sa chás seo "
"úsáidfimid an cainéal ''r'', nó ''x''."

msgid ""
"Note: ``xyzw`` is the same as ``rgba`` in GLSL, so instead of ``texture()."
"x`` above, we could use ``texture().r``. See the `OpenGL documentation "
"<https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ for more "
"details."
msgstr ""
"Nóta: Tá ``xyzw`` mar an gcéanna le ``rgba`` i GLSL, mar sin in ionad `` "
"uigeacht (.x`` thuas, d'fhéadfaimis `` uigeacht().r`` a úsáid. Féach ar an "
"doiciméadú `OpenGL <https://www.khronos.org/opengl/wiki/"
"Data_Type_(GLSL)#Vectors>`_ le haghaidh tuilleadh sonraí."

msgid "Using this code you can see the texture creates random looking hills."
msgstr ""
"Ag baint úsáide as an gcód seo is féidir leat a fheiceáil go gcruthaíonn an "
"uigeacht cnoic randamacha ag lorg."

msgid ""
"Right now it is too spiky, we want to soften the hills a bit. To do that, we "
"will use a uniform. You already used a uniform above to pass in the noise "
"texture, now let's learn how they work."
msgstr ""
"Faoi láthair tá sé ró-spiky, ba mhaith linn na cnoic a mhaolú beagán. Chun é "
"sin a dhéanamh, úsáidfimid éide. D'úsáid tú éide thuas cheana féin chun pas "
"a fháil san uigeacht torainn, anois déanaimis foghlaim conas a oibríonn siad."

msgid "Uniforms"
msgstr "Éidí"

msgid ""
"Uniform variables allow you to pass data from the game into the shader. They "
"are very useful for controlling shader effects. Uniforms can be almost any "
"datatype that can be used in the shader. To use a uniform, you declare it in "
"your :ref:`Shader<class_Shader>` using the keyword ``uniform``."
msgstr ""
"Ligeann athróga aonfhoirmeacha duit sonraí ón gcluiche a chur isteach sa "
"scáthlán. Tá siad an-úsáideach chun éifeachtaí shader a rialú. Is féidir le "
"héide a bheith beagnach aon chineál sonraí is féidir a úsáid sa shader. Chun "
"éide a úsáid, dearbhaíonn tú é i do :ref:`Shader <class_Shader>` ag baint "
"úsáide as an eochairfhocal ``éide``."

msgid "Let's make a uniform that changes the height of the terrain."
msgstr "Déanaimis éide a athraíonn airde an tír-raoin."

msgid ""
"Godot lets you initialize a uniform with a value; here, ``height_scale`` is "
"set to ``0.5``. You can set uniforms from GDScript by calling the function "
"``set_shader_parameter()`` on the material corresponding to the shader. The "
"value passed from GDScript takes precedence over the value used to "
"initialize it in the shader."
msgstr ""
"Ligeann Godot duit éide a thúsú le luach; anseo, tá ''height_scale'' leagtha "
"ar ''0.5''. Is féidir leat éide ó GDScript a shocrú trí ghlaoch ar an "
"bhfeidhm ''set_shader_parameter()'' ar an ábhar a fhreagraíonn don shader. "
"Bíonn tosaíocht ag an luach a ritheadh ó GDScript ar an luach a úsáidtear "
"chun é a thúsú sa shader."

msgid ""
"Changing uniforms in Spatial-based nodes is different from CanvasItem-based "
"nodes. Here, we set the material inside the PlaneMesh resource. In other "
"mesh resources you may need to first access the material by calling "
"``surface_get_material()``. While in the MeshInstance3D you would access the "
"material using ``get_surface_material()`` or ``material_override``."
msgstr ""
"Tá éide athraitheacha i nóid spásúla-bhunaithe difriúil ó nóid chanbhásItem-"
"bhunaithe. Anseo, socraímid an t-ábhar taobh istigh den acmhainn PlaneMesh. "
"In acmhainní mogaill eile, b'fhéidir go mbeidh ort rochtain a fháil ar an "
"ábhar ar dtús trí ghlaoch ar ''surface_get_material()''. Agus tú sa "
"MeshInstance3D, bheadh teacht agat ar an ábhar le ''get_surface_material()'' "
"nó ''material_override''."

msgid ""
"Remember that the string passed into ``set_shader_parameter()`` must match "
"the name of the uniform variable in the :ref:`Shader<class_Shader>`. You can "
"use the uniform variable anywhere inside your :ref:`Shader<class_Shader>`. "
"Here, we will use it to set the height value instead of arbitrarily "
"multiplying by ``0.5``."
msgstr ""
"Cuimhnigh go gcaithfidh an teaghrán a chuirtear isteach i "
"``set_shader_parameter()`` teacht le hainm na hathróige aonfhoirmeach sa :"
"ref:`Shader <class_Shader>`. Is féidir leat an athróg aonfhoirmeach a úsáid "
"áit ar bith laistigh de do :ref:`Shader<class_Shader>`. Anseo, úsáidfimid é "
"chun an luach airde a shocrú seachas é a iolrú go treallach faoi ``0.5``."

msgid "Now it looks much better."
msgstr "Anois tá sé i bhfad níos fearr."

msgid ""
"Using uniforms, we can even change the value every frame to animate the "
"height of the terrain. Combined with :ref:`Tweens <class_Tween>`, this can "
"be especially useful for animations."
msgstr ""
"Ag baint úsáide as éide, is féidir linn fiú an luach gach fráma a athrú chun "
"airde an tír-raon a bheochan. In éineacht le :ref:`Tweens <class_Tween>`, is "
"féidir é seo a bheith an-úsáideach le haghaidh beochana."

msgid "Interacting with light"
msgstr "Idirghníomhú le solas"

msgid ""
"Note how the mesh color goes flat. This is because the lighting on it is "
"flat. Let's add a light!"
msgstr ""
"Tabhair faoi deara conas a théann an dath mogalra cothrom. Tá sé seo toisc "
"go bhfuil an soilsiú air cothrom. Cuirimis solas leis!"

msgid ""
"First, we will add an :ref:`OmniLight3D<class_OmniLight3D>` to the scene."
msgstr ""
"Ar dtús, cuirfimid :ref:`OmniLight3D<class_OmniLight3D>` leis an ardán."

msgid ""
"You can see the light affecting the terrain, but it looks odd. The problem "
"is the light is affecting the terrain as if it were a flat plane. This is "
"because the light shader uses the normals from the :ref:`Mesh <class_mesh>` "
"to calculate light."
msgstr ""
"Is féidir leat a fheiceáil go bhfuil tionchar ag an solas ar an tír-raon, "
"ach tá cuma aisteach air. Is í an fhadhb atá ann go bhfuil an solas ag cur "
"isteach ar an tír-raon amhail is dá mba eitleán cothrom. Tá sé seo amhlaidh "
"toisc go n-úsáideann an scáthlántóir solais na normanna ón :ref:`Mogalra "
"<class_mesh>` chun solas a ríomh."

msgid ""
"The normals are stored in the Mesh, but we are changing the shape of the "
"Mesh in the shader, so the normals are no longer correct. To fix this, we "
"can recalculate the normals in the shader or use a normal texture that "
"corresponds to our noise. Godot makes both easy for us."
msgstr ""
"Stóráiltear na gnáthaimh sa Mogalra, ach táimid ag athrú cruth an Mhogaill "
"sa shader, mar sin níl na gnáthaimh ceart a thuilleadh. Chun é seo a shocrú, "
"is féidir linn na gnáthaimh sa shader a athríomh nó gnáthuigeacht a "
"fhreagraíonn dár torann a úsáid. Déanann Godot an dá éasca dúinn."

msgid ""
"You can calculate the new normal manually in the vertex function and then "
"just set ``NORMAL``. With ``NORMAL`` set, Godot will do all the difficult "
"lighting calculations for us. We will cover this method in the next part of "
"this tutorial, for now we will read normals from a texture."
msgstr ""
"Is féidir leat an gnáthrud nua a ríomh de láimh san fheidhm stuaic agus "
"ansin ''NORMAL'' a shocrú. Le tacar ''NORMAL'', déanfaidh Godot na ríomhanna "
"soilsithe deacra go léir dúinn. Clúdóimid an modh seo sa chéad chuid eile "
"den rang teagaisc seo, le haghaidh anois léifimid gnáthaimh ó uigeacht."

msgid ""
"Instead we will rely on the NoiseTexture again to calculate normals for us. "
"We do that by passing in a second noise texture."
msgstr ""
"Ina áit sin beimid ag brath ar an TorannTexture arís chun gnáthaimh a ríomh "
"dúinn. Déanaimid é sin trí uigeacht torainn eile a chur ar aghaidh."

msgid ""
"Set this second uniform texture to another :ref:`NoiseTexture2D "
"<class_noisetexture2D>` with another :ref:`FastNoiseLite "
"<class_fastnoiselite>`. But this time, check **As Normalmap**."
msgstr ""
"Socraigh an dara uigeacht aonfhoirmeach seo go dtí ceann eile :ref:"
"`NoiseTexture2D <class_noisetexture2D>` le ceann eile :ref:`FastNoiseLite "
"<class_fastnoiselite>`. Ach an uair seo, seiceáil **Mar Normalmap**."

msgid ""
"Now, because this is a normalmap and not a per-vertex normal, we are going "
"to assign it in the ``fragment()`` function. The ``fragment()`` function "
"will be explained in more detail in the next part of this tutorial."
msgstr ""
"Anois, toisc gur gnáthmhapa é seo agus nach gnáthrud é in aghaidh an stuaic, "
"táimid chun é a shannadh san fheidhm ''fragment()''. Míneofar an fheidhm "
"''fragment()'' níos mine sa chéad chuid eile den rang teagaisc seo."

msgid ""
"When we have normals that correspond to a specific vertex we set ``NORMAL``, "
"but if you have a normalmap that comes from a texture, set the normal using "
"``NORMAL_MAP``. This way Godot will handle the wrapping of texture around "
"the mesh automatically."
msgstr ""
"Nuair a bhíonn gnáthaimh againn a fhreagraíonn do stuaic ar leith socraímid "
"''NORMAL'', ach má tá gnáthmhapa agat a thagann ó uigeacht, socraigh an "
"gnáthrud le ''NORMAL_MAP''. Ar an mbealach seo láimhseálfaidh Godot "
"timfhilleadh uigeachta timpeall an mhogaill go huathoibríoch."

msgid ""
"Lastly, in order to ensure that we are reading from the same places on the "
"noise texture and the normalmap texture, we are going to pass the ``VERTEX."
"xz`` position from the ``vertex()`` function to the ``fragment()`` function. "
"We do that with varyings."
msgstr ""
"Ar deireadh, d'fhonn a chinntiú go bhfuilimid ag léamh ó na háiteanna céanna "
"ar uigeacht an torainn agus ar uigeacht an ghnáthmhapa, táimid chun an "
"seasamh ''VERTEX.xz'' a chur ar aghaidh ón bhfeidhm ''vertex()'' go dtí an "
"fheidhm ''fragment()''. Déanaimid é sin le héagsúlachtaí."

msgid ""
"Above the ``vertex()`` define a ``vec2`` called ``tex_position``. And inside "
"the ``vertex()`` function assign ``VERTEX.xz`` to ``tex_position``."
msgstr ""
"Os cionn an ''vertex()'' sainmhínítear ''vec2'' ar a dtugtar "
"''tex_position''. Agus taobh istigh den fheidhm ''vertex()'' sannann "
"''VERTEX.xz'' go ''tex_position''."

msgid ""
"And now we can access ``tex_position`` from the ``fragment()`` function."
msgstr ""
"Agus anois is féidir linn teacht ar ''tex_position'' ón bhfeidhm "
"''fragment()''."

msgid ""
"With the normals in place the light now reacts to the height of the mesh "
"dynamically."
msgstr ""
"Leis na gnáthaimh i bhfeidhm imoibríonn an solas anois le hairde an mhogaill "
"go dinimiciúil."

msgid ""
"We can even drag the light around and the lighting will update automatically."
msgstr ""
"Is féidir linn an solas a tharraingt timpeall agus nuashonróidh an soilsiú "
"go huathoibríoch."

msgid ""
"Here is the full code for this tutorial. You can see it is not very long as "
"Godot handles most of the difficult stuff for you."
msgstr ""
"Seo an cód iomlán don rang teagaisc seo. Is féidir leat a fheiceáil nach "
"bhfuil sé an-fhada mar Láimhseálann Godot an chuid is mó de na rudaí deacra "
"ar do shon."

msgid ""
"That is everything for this part. Hopefully, you now understand the basics "
"of vertex shaders in Godot. In the next part of this tutorial we will write "
"a fragment function to accompany this vertex function and we will cover a "
"more advanced technique to turn this terrain into an ocean of moving waves."
msgstr ""
"Is é sin gach rud don chuid seo. Tá súil agam go dtuigeann tú anois "
"bunghnéithe na shaders vertex i Godot. Sa chéad chuid eile den rang teagaisc "
"seo scríobhfaimid feidhm bhlúire chun dul leis an bhfeidhm vertex seo agus "
"clúdóimid teicníc níos airde chun an tír-raon seo a iompú ina aigéan de "
"thonnta gluaisteacha."
