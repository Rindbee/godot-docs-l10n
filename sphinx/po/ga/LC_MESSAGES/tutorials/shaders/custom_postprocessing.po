#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom post-processing"
msgstr "Iar-phróiseáil saincheaptha"

msgid "Introduction"
msgstr "Réamhrá"

msgid ""
"Godot provides many post-processing effects out of the box, including Bloom, "
"DOF, and SSAO, which are described in :ref:"
"`doc_environment_and_post_processing`. However, advanced use cases may "
"require custom effects. This article explains how to write your own custom "
"effects."
msgstr ""
"Soláthraíonn Godot go leor éifeachtaí iar-phróiseála as an mbosca, lena n-"
"áirítear Bloom, DOF, agus SSAO, a ndéantar cur síos orthu in:ref: "
"`doc_environment_and_post_processing`. Mar sin féin, d'fhéadfadh éifeachtaí "
"saincheaptha a bheith ag teastáil ó chásanna Míníonn an t-alt seo conas do "
"chuid éifeachtaí saincheaptha féin a scríobh."

msgid ""
"The easiest way to implement a custom post-processing shader is to use "
"Godot's built-in ability to read from the screen texture. If you're not "
"familiar with this, you should read the :ref:`Screen Reading Shaders "
"Tutorial <doc_screen-reading_shaders>` first."
msgstr ""
"Is é an bealach is éasca chun shader saincheaptha iar-phróiseála a chur i "
"bhfeidhm ná cumas tógtha Godot a úsáid chun uigeacht an scáileáin a léamh. "
"Mura bhfuil tú eolach air seo, ba cheart duit an :ref:`Teagasc Scáileáin um "
"Léitheoireacht Scáileáin <doc_screen-reading_shaders>` a léamh ar dtús."

msgid "Single pass post-processing"
msgstr "Iar-phróiseáil pas aonair"

msgid ""
"Post-processing effects are shaders applied to a frame after Godot has "
"rendered it. To apply a shader to a frame, create a :ref:`CanvasLayer "
"<class_CanvasLayer>`, and give it a :ref:`ColorRect <class_ColorRect>`. "
"Assign a new :ref:`ShaderMaterial <class_ShaderMaterial>` to the newly "
"created ``ColorRect``, and set the ``ColorRect``'s layout to \"Full Rect\"."
msgstr ""
"Is éard is éifeachtaí iar-phróiseála ann ná scáthaitheoirí a chuirtear i "
"bhfeidhm ar fhráma tar éis do Godot é a rindreáil. Chun scáthóir a chur i "
"bhfeidhm ar fhráma, cruthaigh :ref:`CanvasLayer <class_CanvasLayer>`, agus "
"tabhair :ref:`ColorRect <class_ColorRect>` dó. Sann :ref:`ShaderMaterial "
"<class_ShaderMaterial>` don ``ColorRect`` nuachruthaithe, agus socraigh "
"leagan amach ``ColorRect`` go \"Full Rect\"."

msgid "Your scene tree will look something like this:"
msgstr "Beidh cuma mar seo ar do chrann radhairc:"

msgid ""
"Another more efficient method is to use a :ref:`BackBufferCopy "
"<class_BackBufferCopy>` to copy a region of the screen to a buffer and to "
"access it in a shader script through a ``sampler2D`` using "
"``hint_screen_texture``."
msgstr ""
"Modh eile atá níos éifeachtaí is ea :ref:`BackBufferCopy "
"<class_BackBufferCopy>` a úsáid chun réigiún den scáileán a chóipeáil go "
"maolán agus chun é a rochtain i script scáthaithe trí ``sampler2D`` ag baint "
"úsáide as `` hint_screen_texture``."

msgid ""
"As of the time of writing, Godot does not support rendering to multiple "
"buffers at the same time. Your post-processing shader will not have access "
"to other render passes and buffers not exposed by Godot (such as depth or "
"normal/roughness). You only have access to the rendered frame and buffers "
"exposed by Godot as samplers."
msgstr ""
"Amhail am na scríbhneoireachta, ní thacaíonn Godot le rindreáil ar iliomad "
"maoláin ag an am céanna. Ní bheidh rochtain ag do scáthóir iar-phróiseála ar "
"phasanna rindreála eile agus maoláin nach nochtann Godot (mar shampla "
"doimhneacht nó gnáth/garbh). Níl rochtain agat ach ar an bhfráma rindreáilte "
"agus ar na maoláin a nochtann Godot mar shamplóirí."

msgid ""
"For this demo, we will use this :ref:`Sprite <class_Sprite2D>` of a sheep."
msgstr ""
"Don taispeántas seo, úsáidfimid an :ref:`Sprite <class_Sprite2D>` seo de "
"chaoirigh."

msgid ""
"Copy the following code to your shader. The code below is a hex pixelization "
"shader by `arlez80 <https://bitbucket.org/arlez80/hex-mosaic/src/master/>`_,"
msgstr ""
"Cóipeáil an cód seo a leanas chuig do scáthóir. Tá an cód thíos ina scáthóir "
"heicsidheachúlach le `arlez80 <https://bitbucket.org/arlez80/hex-mosaic/src/"
"master/>`_,"

msgid "The sheep will look something like this:"
msgstr "Beidh cuma mar seo ar na caorach:"

msgid "Multi-pass post-processing"
msgstr "Iar-phróiseáil il-pas"

msgid ""
"Some post-processing effects like blurs are resource intensive. You can make "
"them run a lot faster if you break them down in multiple passes. In a "
"multipass material, each pass takes the result from the previous pass as an "
"input and processes it."
msgstr ""
"Tá roinnt éifeachtaí iar-phróiseála cosúil le blurs dian acmhainní. "
"Féadfaidh tú iad a chur ar rith i bhfad níos gasta má bhriseann tú síos iad "
"i iliomad pasanna. In ábhar multipass, tógann gach pas an toradh ón pas "
"roimhe seo mar ionchur agus próiseálann sé é."

msgid ""
"To produce a multi-pass post-processing shader, you stack ``CanvasLayer`` "
"and ``ColorRect`` nodes. In the example above, you use a ``CanvasLayer`` "
"object to render a shader using the frame on the layer below. Apart from the "
"node structure, the steps are the same as with the single-pass post-"
"processing shader."
msgstr ""
"Chun scáthóir iar-phróiseála il-pas a tháirgeadh, cruachann tú nóid "
"``CanvasLayer`` agus `ColorRect`. Sa sampla thuas, úsáideann tú réad "
"``CanvasLayer`` chun scáthóir a rinneadh ag baint úsáide as an fráma ar an "
"gciseal thíos. Seachas struchtúr an nód, tá na céimeanna mar an gcéanna leis "
"an scáthóir iar-phróiseála aon-pas."

msgid ""
"As an example, you could write a full screen Gaussian blur effect by "
"attaching the following pieces of code to each of the ``ColorRect`` nodes. "
"The order in which you apply the shaders depends on the position of the "
"``CanvasLayer`` in the scene tree, higher means sooner. For this blur "
"shader, the order does not matter."
msgstr ""
"Mar shampla, d'fhéadfá éifeacht doiléir Gaussian iomlán scáileáin a scríobh "
"trí na píosaí cód seo a leanas a cheangal le gach ceann de na nóid "
"`ColorRect`. Braitheann an t-ord ina gcuireann tú na scáthóirí i bhfeidhm ar "
"shuíomh an ``CanvasLayer`` sa chrann radhairc, ciallaíonn níos airde níos "
"luaithe. Maidir leis an scáthóir doiléir seo, ní cuma an t-ordú."

msgid ""
"Using the above code, you should end up with a full screen blur effect like "
"below."
msgstr ""
"Ag baint úsáide as an gcód thuas, ba cheart duit éifeacht doiléir scáileáin "
"iomlán mar atá thíos a bheith agat."
