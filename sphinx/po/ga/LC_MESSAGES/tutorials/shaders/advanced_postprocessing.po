#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Advanced post-processing"
msgstr "Iar-phróiseáil chun cinn"

msgid "Introduction"
msgstr "Réamhrá"

msgid ""
"This tutorial describes an advanced method for post-processing in Godot. In "
"particular, it will explain how to write a post-processing shader that uses "
"the depth buffer. You should already be familiar with post-processing "
"generally and, in particular, with the methods outlined in the :ref:`custom "
"post-processing tutorial <doc_custom_postprocessing>`."
msgstr ""
"Déanann an teagasc seo cur síos ar mhodh chun cinn le haghaidh iar-"
"phróiseála i Godot. Go háirithe, míneoidh sé conas shader iar-phróiseála a "
"scríobh a úsáideann an maolán doimhneachta. Ba cheart go mbeadh cur amach "
"agat cheana féin ar iarphróiseáil go ginearálta agus, go háirithe, ar na "
"modhanna atá leagtha amach sa :ref:`teagasc saincheaptha iar-phróiseála "
"<doc_custom_postprocessing>`."

msgid "Full screen quad"
msgstr "Scáileán iomlán quad"

msgid ""
"One way to make custom post-processing effects is by using a viewport. "
"However, there are two main drawbacks of using a Viewport:"
msgstr ""
"Bealach amháin chun éifeachtaí iar-phróiseála saincheaptha a dhéanamh ná trí "
"radharc a úsáid. Mar sin féin, tá dhá phríomh-mhíbhuntáiste ann a bhaineann "
"le Viewport a úsáid:"

msgid "The depth buffer cannot be accessed"
msgstr "Ní féidir teacht ar an maolán doimhneachta"

msgid "The effect of the post-processing shader is not visible in the editor"
msgstr ""
"Níl éifeacht an scáthaitheora iar-phróiseála le feiceáil san eagarthóir"

msgid ""
"To get around the limitation on using the depth buffer, use a :ref:"
"`MeshInstance3D <class_MeshInstance3D>` with a :ref:`QuadMesh "
"<class_QuadMesh>` primitive. This allows us to use a shader and to access "
"the depth texture of the scene. Next, use a vertex shader to make the quad "
"cover the screen at all times so that the post-processing effect will be "
"applied at all times, including in the editor."
msgstr ""
"Chun an teorannú ar an maolán doimhneachta a úsáid, úsáid :ref:"
"`MeshInstance3D <class_MeshInstance3D>` le :ref:`QuadMesh <class_QuadMesh>` "
"primitive. Ligeann sé seo dúinn scáthlánóir a úsáid agus rochtain a fháil ar "
"uigeacht doimhneacht an radhairc. Ansin, bain úsáid as scáilitheoir rinn "
"chun an quad a chlúdach ar an scáileán i gcónaí ionas go gcuirfear an "
"éifeacht iar-phróiseála i bhfeidhm i gcónaí, lena n-áirítear san eagarthóir."

msgid ""
"First, create a new MeshInstance3D and set its mesh to a QuadMesh. This "
"creates a quad centered at position ``(0, 0, 0)`` with a width and height of "
"``1``. Set the width and height to ``2`` and enable **Flip Faces**. Right "
"now, the quad occupies a position in world space at the origin. However, we "
"want it to move with the camera so that it always covers the entire screen. "
"To do this, we will bypass the coordinate transforms that translate the "
"vertex positions through the difference coordinate spaces and treat the "
"vertices as if they were already in clip space."
msgstr ""
"Ar dtús, cruthaigh MeshInstance3D nua agus socraigh a mogalra go QuadMesh. "
"Cruthaíonn sé seo quad dírithe ag suíomh ``(0, 0, 0)`` le leithead agus "
"airde ``1``. Socraigh an leithead agus an airde go ``2`` agus cumasaí**Flip "
"Faces**. Faoi láthair, tá suíomh ag an quad i spás domhanda ag an mbunús. "
"Mar sin féin, ba mhaith linn go mbogann sé leis an gceamara ionas go "
"gclúdóidh sé an scáileán iomlán i gcónaí. Chun seo a dhéanamh, seachnóimid "
"na claochruithe comhordaithe a aistríonn na suíomhanna vertex tríd na "
"spásanna comhordaithe difríochta agus déileálfaimid leis na beartacha amhail "
"is dá mbeadh siad i spás gearrthóg cheana féin."

msgid ""
"The vertex shader expects coordinates to be output in clip space, which are "
"coordinates ranging from ``-1`` at the left and bottom of the screen to "
"``1`` at the top and right of the screen. This is why the QuadMesh needs to "
"have height and width of ``2``. Godot handles the transform from model to "
"view space to clip space behind the scenes, so we need to nullify the "
"effects of Godot's transformations. We do this by setting the ``POSITION`` "
"built-in to our desired position. ``POSITION`` bypasses the built-in "
"transformations and sets the vertex position in clip space directly."
msgstr ""
"Tá súil leis an scáthaitheoir vertex go n-aschur comhordanáidí i spás "
"gearrthóg, ar comhordanáidí iad ag dul ó ``-1 ``ag clé agus bun an scáileáin "
"go ``1`` ag barr agus ar dheis an scáileáin. Sin é an fáth go gcaithfidh "
"airde agus leithead ``2`` a bheith ag an QuadMesh. Láimhseálann Godot an "
"claochlú ó mhúnla chun spás a fheiceáil chun spás a ghearradh taobh thiar de "
"na radhairc, mar sin ní mór dúinn éifeachtaí claochlú Godot a chur ar "
"neamhní. Déanaimid é seo tríd an ``POSITION`` atá ionsuite go dtí an suíomh "
"atá ag teastáil a shocrú. Seachnaíonn ``POSITION`` na claochlú ionsuite agus "
"socraíonn sé an suíomh vertex i spás gearrthóg go díreach."

msgid ""
"In versions of Godot earlier than 4.3, this code recommended using "
"``POSITION = vec4(VERTEX, 1.0);`` which implicitly assumed the clip-space "
"near plane was at ``0.0``. That code is now incorrect and will not work in "
"versions 4.3+ as we use a \"reversed-z\" depth buffer now where the near "
"plane is at ``1.0``."
msgstr ""
"I leaganacha de Godot níos luaithe ná 4.3, mhol an cód seo úsáid a bhaint as "
"``POSITION = vec4 (VERTEX, 1.0); ``a ghlac leis go hinneach go raibh an spás "
"clip-spás in aice leis an eitleán ag ``0.0``. Tá an cód sin mícheart anois "
"agus ní oibreoidh sé i leaganacha 4.3+ mar úsáidimid maolán doimhneachta "
"“reversed-z” anois áit a bhfuil an t-eitleán in aice láimhe ag ``1.0``."

msgid ""
"Even with this vertex shader, the quad keeps disappearing. This is due to "
"frustum culling, which is done on the CPU. Frustum culling uses the camera "
"matrix and the AABBs of Meshes to determine if the Mesh will be visible "
"*before* passing it to the GPU. The CPU has no knowledge of what we are "
"doing with the vertices, so it assumes the coordinates specified refer to "
"world positions, not clip space positions, which results in Godot culling "
"the quad when we turn away from the center of the scene. In order to keep "
"the quad from being culled, there are a few options:"
msgstr ""
"Fiú amháin leis an scáthóir vertex seo, coinníonn an quad ag imeacht. Tá sé "
"seo mar gheall ar fhulú frustum, a dhéantar ar an LAP. Úsáideann Frustum "
"culling an maitrís cheamara agus AABBanna de Meshes chun a chinneadh an "
"mbeidh an Mogalra le feice* roimh* é a chur chuig an GPU. Níl aon eolas ag "
"an LAP faoin méid atá á dhéanamh againn leis na coirteanna, mar sin glacann "
"sé leis na comhordanáidí a shonraítear tagraíonn do shuíomhanna domhanda, ní "
"do shuíomhanna spáis gearrthóg, rud a fhágann go gcuireann Godot an quad a "
"chailleadh nuair a chasann muid ar shiúl ó lár an radhairc. D'fhonn an quad "
"a choinneáil ó dhíothú, tá cúpla rogha ann:"

msgid ""
"Add the QuadMesh as a child to the camera, so the camera is always pointed "
"at it"
msgstr ""
"Cuir an QuadMesh mar leanbh leis an gceamara, ionas go ndéantar an ceamara "
"dírithe air i gcónaí"

msgid ""
"Set the Geometry property ``extra_cull_margin`` as large as possible in the "
"QuadMesh"
msgstr ""
"Socraigh an mhaoin Geoiméadra ``extra_cull_margin`` chomh mór agus is féidir "
"sa QuadMesh"

msgid ""
"The second option ensures that the quad is visible in the editor, while the "
"first option guarantees that it will still be visible even if the camera "
"moves outside the cull margin. You can also use both options."
msgstr ""
"Cinntíonn an dara rogha go bhfuil an quad le feiceáil san eagarthóir, agus "
"ráthaíonn an chéad rogha go mbeidh sé le feiceáil fós fiú má ghluaiseann an "
"ceamara taobh amuigh den corrlach cull. Is féidir leat an dá rogha a úsáid "
"freisin."

msgid "Depth texture"
msgstr "Uigeacht doimhneachta"

msgid ""
"To read from the depth texture, we first need to create a texture uniform "
"set to the depth buffer by using ``hint_depth_texture``."
msgstr ""
"Chun léamh ón uigeacht doimhneachta, ní mór dúinn aonfhoirmeach uigeachta a "
"chruthú ar dtús go dtús go dtí an maolán doimhneachta trí "
"`hint_depth_texture` a úsáid."

msgid ""
"Once defined, the depth texture can be read with the ``texture()`` function."
msgstr ""
"Nuair a bheidh sé sainmhínithe, is féidir an uigeacht doimhneachta a léamh "
"leis an bhfeidhm ``uigeacht () ``."

msgid ""
"Similar to accessing the screen texture, accessing the depth texture is only "
"possible when reading from the current viewport. The depth texture cannot be "
"accessed from another viewport to which you have rendered."
msgstr ""
"Cosúil le rochtain a fháil ar uigeacht an scáileáin, ní féidir rochtain a "
"fháil ar an uigeacht doimhneachta ach amháin agus tú ag léamh ón radharc "
"reatha Ní féidir rochtain a fháil ar an uigeacht doimhneachta ó thaobh "
"amhairc eile ar rinne tú léirithe air."

msgid ""
"Firstly, take the screen space coordinates and transform them into "
"normalized device coordinates (NDC). NDC run ``-1.0`` to ``1.0`` in ``x`` "
"and ``y`` directions and from ``0.0`` to ``1.0`` in the ``z`` direction when "
"using the Vulkan backend. Reconstruct the NDC using ``SCREEN_UV`` for the "
"``x`` and ``y`` axis, and the depth value for ``z``."
msgstr ""
"Ar dtús, tóg comhordanáidí spáis na scáileáin agus déan iad a athrú ina "
"gcomhordanáidí feiste normalaithe (NDC). Ritheann NDC ``-1.0`` go `1.0`` i "
"dtreoracha ``x`` agus ``y`` agus ó ``0.0`` go ``1.0`` sa treo ``z ``nuair a "
"bhíonn cúltaca Vulkan á úsáid agat. Athchóirigh an NDC ag baint úsáide as "
"``SCREEN_UV`` don ais ``x`` agus ``y``, agus an luach doimhneachta do `z``."

msgid ""
"Convert NDC to view space by multiplying the NDC by "
"``INV_PROJECTION_MATRIX``. Recall that view space gives positions relative "
"to the camera, so the ``z`` value will give us the distance to the point."
msgstr ""
"Tiontaigh NDC chun spás a fheiceáil tríd an NDC a iolrú le "
"``INV_PROJECTION_MATRIX``. Cuimhnigh go dtugann spás amharc suíomhanna i "
"gcoibhneas leis an gceamara, mar sin tabharfaidh an luach `z ``an fad go dtí "
"an pointe dúinn."

msgid ""
"Because the camera is facing the negative ``z`` direction, the position will "
"have a negative ``z`` value. In order to get a usable depth value, we have "
"to negate ``view.z``."
msgstr ""
"Toisc go bhfuil an ceamara os comhair an treo diúltach `z ``, beidh luach "
"diúltach `z`` ag an suíomh. D'fhonn luach doimhneachta inúsáidte a fháil, ní "
"mór dúinn ``view.z`` a dhiúltú."

msgid "An optimization"
msgstr "Optamú"

msgid ""
"You can benefit from using a single large triangle rather than using a full "
"screen quad. The reason for this is explained `here <https://michaldrobot."
"com/2014/04/01/gcn-execution-patterns-in-full-screen-passes>`_. However, the "
"benefit is quite small and only beneficial when running especially complex "
"fragment shaders."
msgstr ""
"Is féidir leas a bhaint as triantán mór amháin a úsáid seachas cuad "
"lánscáileáin a úsáid. Mínítear an chúis atá leis seo `anseo <https://"
"michaldrobot.com/2014/04/01/gcn-execution-patterns-in-full-screen-passes "
">`_. Mar sin féin, tá an tairbhe sách beag agus ní thairbheach ach amháin "
"nuair a bhíonn scáthaitheoirí blúire casta ar siúl."

msgid ""
"Set the Mesh in the MeshInstance3D to an :ref:`ArrayMesh <class_ArrayMesh>`. "
"An ArrayMesh is a tool that allows you to easily construct a Mesh from "
"Arrays for vertices, normals, colors, etc."
msgstr ""
"Socraigh an mogalra sa MeshInstance3D chuig :tag:`ArrayMesh "
"<class_ArrayMesh>`. Is uirlis é ArrayMesh a ligeann duit mogalra a thógáil "
"go héasca ó Arrays le haghaidh rinn, normanna, dathanna, etc."

msgid "Now, attach a script to the MeshInstance3D and use the following code:"
msgstr ""
"Anois, ceangail script leis an MeshInstance3D agus bain úsáid as an gcód seo "
"a leanas:"

msgid ""
"The triangle is specified in normalized device coordinates. Recall, NDC run "
"from ``-1.0`` to ``1.0`` in both the ``x`` and ``y`` directions. This makes "
"the screen ``2`` units wide and ``2`` units tall. In order to cover the "
"entire screen with a single triangle, use a triangle that is ``4`` units "
"wide and ``4`` units tall, double its height and width."
msgstr ""
"Sonraítear an triantán i gcomhordanáidí feiste normalaithe. Cuimhnigh, "
"ritheann NDC ó ``-1.0`` go ``1.0`` sna treoracha ``x`` agus ``y`` araon. "
"Fágann sé seo an scáileán aonaid ``2`` ar leithead agus ```2`` aonaid ar "
"airde. D'fhonn an scáileán iomlán a chlúdach le triantán amháin, bain úsáid "
"as triantán atá ag ``4` aonaid ar leithead agus ``4` aonaid ar airde agus a "
"leithead a dhúbailt."

msgid ""
"Assign the same vertex shader from above and everything should look exactly "
"the same."
msgstr ""
"Sannaigh an scáthóir vertex céanna ó thuas agus ba chóir go mbeadh cuma mar "
"an gcéanna ar gach rud."

msgid ""
"The one drawback to using an ArrayMesh over using a QuadMesh is that the "
"ArrayMesh is not visible in the editor because the triangle is not "
"constructed until the scene is run. To get around that, construct a single "
"triangle Mesh in a modeling program and use that in the MeshInstance3D "
"instead."
msgstr ""
"Is é an míbhuntáiste amháin a bhaineann le ArrayMesh a úsáid thar QuadMesh a "
"úsáid ná nach bhfuil an ArrayMesh le feiceáil san eagarthóir toisc nach "
"ndéantar an triantán a thógáil go dtí go reáchtar an radharc. Chun timpeall "
"air sin, tóg Mogalra triantán amháin i gclár samhaltaithe agus bain úsáid as "
"é sin sa MeshInstance3D ina ionad sin."
