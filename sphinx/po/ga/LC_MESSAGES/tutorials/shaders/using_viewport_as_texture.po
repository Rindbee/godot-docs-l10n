#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ga\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using a SubViewport as a texture"
msgstr "SubViewPort a úsáid mar uigeacht"

msgid "Introduction"
msgstr "Réamhrá"

msgid ""
"This tutorial will introduce you to using the :ref:`SubViewport "
"<class_SubViewport>` as a texture that can be applied to 3D objects. In "
"order to do so, it will walk you through the process of making a procedural "
"planet like the one below:"
msgstr ""
"Cuirfidh an rang teagaisc seo in iúl duit an :ref:`SubViewport "
"<class_SubViewport>` a úsáid mar uigeacht is féidir a chur i bhfeidhm ar "
"réada 3D. Chun é sin a dhéanamh, rachaidh sé tríd an bpróiseas chun pláinéad "
"nós imeachta a dhéanamh mar an ceann thíos:"

msgid ""
"This tutorial does not cover how to code a dynamic atmosphere like the one "
"this planet has."
msgstr ""
"Ní chlúdaíonn an rang teagaisc seo conas atmaisféar dinimiciúil cosúil leis "
"an bpláinéad seo a chódú."

msgid ""
"This tutorial assumes you are familiar with how to set up a basic scene "
"including: a :ref:`Camera3D <class_Camera3D>`, a :ref:`light source "
"<class_OmniLight3D>`, a :ref:`MeshInstance3D <class_MeshInstance3D>` with a :"
"ref:`Primitive Mesh <class_PrimitiveMesh>`, and applying a :ref:"
"`StandardMaterial3D <class_StandardMaterial3D>` to the mesh. The focus will "
"be on using the :ref:`SubViewport <class_SubViewport>` to dynamically create "
"textures that can be applied to the mesh."
msgstr ""
"Glacann an rang teagaisc seo leis go bhfuil tú eolach ar conas bunradharc a "
"chur ar bun lena n-áirítear: a :ref:`Camera3D <class_Camera3D>`, a :ref:"
"`foinse solais <class_OmniLight3D>`, a :ref:`MeshInstance3D "
"<class_MeshInstance3D>` le a :ref:`Mogall primitive <class_PrimitiveMesh>`, "
"agus :ref:`StandardMaterial3D <class_StandardMaterial3D>` a chur leis an "
"mogalra. Díreofar ar an :ref:`SubViewport <class_SubViewport>` a úsáid chun "
"uigeachtaí a chruthú go dinimiciúil is féidir a chur i bhfeidhm ar an "
"mogalra."

msgid "In this tutorial, we'll cover the following topics:"
msgstr "Sa rang teagaisc seo, clúdóimid na hábhair seo a leanas:"

msgid "How to use a :ref:`SubViewport <class_SubViewport>` as a render texture"
msgstr ""
"Conas :ref:`SubViewport <class_SubViewport>` a úsáid mar uigeacht rindreála"

msgid "Mapping a texture to a sphere with equirectangular mapping"
msgstr "Mapáil uigeachta go sféar le mapáil cothroinneog"

msgid "Fragment shader techniques for procedural planets"
msgstr "Teicnící scáthaithe blúirte do phláinéid"

msgid ""
"Setting a Roughness map from a :ref:`Viewport Texture "
"<class_ViewportTexture>`"
msgstr ""
"Léarscáil Giorrachta a shocrú ó :ref:`Uigeacht Viewport "
"<class_ViewportTexture>`"

msgid "Setting up the scene"
msgstr "An radharc a bhunú"

msgid "Create a new scene and add the following nodes exactly as shown below."
msgstr ""
"Cruthaigh radharc nua agus cuir na nóid seo a leanas go díreach mar a "
"thaispeántar thíos."

msgid "Go into the the MeshInstance3D and make the mesh a SphereMesh"
msgstr "Téigh isteach sa MeshInstance3d agus déan an mogalra ina SphereMesh"

msgid "Setting up the SubViewport"
msgstr "An SubViewPort a bhunú"

msgid ""
"Click on the :ref:`SubViewport <class_SubViewport>` node and set its size to "
"``(1024, 512)``. The :ref:`SubViewport <class_SubViewport>` can actually be "
"any size so long as the width is double the height. The width needs to be "
"double the height so that the image will accurately map onto the sphere, as "
"we will be using equirectangular projection, but more on that later."
msgstr ""
"Cliceáil ar an nód :ref:`SubViewport <class_SubViewport>` agus socraigh a "
"mhéid go ``(1024, 512)``. Is féidir leis an :ref:`SubViewport "
"<class_SubViewport>` a bheith ar aon mhéid chomh fada agus a bhíonn an "
"leithead dhá oiread an airde. Ní mór an leithead a bheith dhá oiread an "
"airde ionas go mbeidh an íomhá mapáil go cruinn ar an sféar, mar beidh muid "
"ag baint úsáide as teilgean chomhionann, ach níos mó ar sin níos déanaí."

msgid ""
"Next disable 3D. We will be using a :ref:`ColorRect <class_ColorRect>` to "
"render the surface, so we don't need 3D either."
msgstr ""
"Ar Aghaidh díchumasaigh 3D. Beimid ag úsáid :ref:`ColorRect "
"<class_ColorRect>` chun an dromchla a rindreáil, mar sin níl 3D ag teastáil "
"uainn ach an oiread."

msgid ""
"Select the :ref:`ColorRect <class_ColorRect>` and in the inspector set the "
"anchors preset to ``Full Rect``. This will ensure that the :ref:`ColorRect "
"<class_ColorRect>` takes up the entire :ref:`SubViewport "
"<class_SubViewport>`."
msgstr ""
"Roghnaigh an :ref:`ColorRect <class_ColorRect>` agus sa chigire socraigh na "
"hancairí mar ``Full Rect``. Cinnteoidh sé seo go nglacfaidh an :ref:"
"`ColorRect <class_ColorRect>` suas an t-iomlán :ref:`SubViewport "
"<class_SubViewport>`."

msgid ""
"Next, we add a :ref:`Shader Material <class_ShaderMaterial>` to the :ref:"
"`ColorRect <class_ColorRect>` (ColorRect > CanvasItem > Material > Material "
"> ``New ShaderMaterial``)."
msgstr ""
"Ansin, cuirimid :ref:`Ábhar Shader <class_ShaderMaterial>` leis an :ref:"
"`ColorRect <class_ColorRect>` (ColorRect > CanvasItem > Material > Material "
"> ``New ShaderMaterial``)."

msgid ""
"Basic familiarity with shading is recommended for this tutorial. However, "
"even if you are new to shaders, all the code will be provided, so you should "
"have no problem following along."
msgstr ""
"Moltar eolas bunúsach ar scáthú don rang teagaisc seo. Mar sin féin, fiú má "
"tá tú nua do scáthóirí, cuirfear an cód go léir ar fáil, mar sin níor cheart "
"go mbeadh aon fhadhb agat leanúint."

msgid ""
"Click the dropdown menu button for the shader material and click / Edit. "
"From here go to Shader > ``New Shader``. give it a name and click "
"\"Create\". click the shader in the inspector to open the shader editor. "
"Delete the default code and add the following:"
msgstr ""
"Cliceáil ar an gcnaipe roghchlár anuas don ábhar shader agus cliceáil / Cuir "
"in Eagar. As seo téigh go dtí Shader > ``Scáthán Nua``. tabhair ainm dó agus "
"cliceáil \"Cruthaigh\". cliceáil ar an shader sa chigire chun an t-"
"eagarthóir shader a oscailt. Scrios an cód réamhshocraithe agus cuir an méid "
"seo a leanas leis:"

msgid ""
"save the shader code, you'll see in the inspector that the above code "
"renders a gradient like the one below."
msgstr ""
"sábháil an cód scáthaithe, feicfidh tú sa chigire go dtugann an cód thuas "
"grádán cosúil leis an gceann thíos."

msgid ""
"Now we have the basics of a :ref:`SubViewport <class_SubViewport>` that we "
"render to and we have a unique image that we can apply to the sphere."
msgstr ""
"Anois tá na bunghnéithe againn de :ref:`SubViewport <class_SubViewport>` a "
"thugaimid dó agus tá íomhá uathúil againn ar féidir linn a chur i bhfeidhm "
"ar an sféar."

msgid "Applying the texture"
msgstr "An uigeacht i bhfeidhm"

msgid ""
"Now go into the :ref:`MeshInstance3D <class_MeshInstance3D>` and add a :ref:"
"`StandardMaterial3D <class_StandardMaterial3D>` to it. No need for a "
"special :ref:`Shader Material <class_ShaderMaterial>` (although that would "
"be a good idea for more advanced effects, like the atmosphere in the example "
"above)."
msgstr ""
"Anois téigh isteach sa :ref:`MeshInstance3D <class_MeshInstance3D>` agus "
"cuir :ref:`StandardMaterial3D <class_StandardMaterial3D>` leis. Níl gá le :"
"ref:`Ábhar Shader <class_ShaderMaterial>` speisialta (cé gur smaoineamh "
"maith é sin le haghaidh éifeachtaí níos forbartha, cosúil leis an atmaisféar "
"sa sampla thuas)."

msgid ""
"MeshInstance3D > GeometryInstance > Geometry > Material Override > ``New "
"StandardMaterial3D``"
msgstr ""
"MeshInstance3D > CéimseataInstance > Céimseata > Sárú Ábhar > ``New "
"StandardMaterial3D``"

msgid "Then click the dropdown for the StandardMaterial3D and click \"Edit\""
msgstr ""
"Ansin cliceáil ar an anuas le haghaidh an StandardMaterial3D agus cliceáil "
"“Eagar”"

msgid ""
"Go to the \"Resource\" section and check the ``Local to scene`` box. Then, "
"go to the \"Albedo\" section and click beside the \"Texture\" property to "
"add an Albedo Texture. Here we will apply the texture we made. Choose \"New "
"ViewportTexture\""
msgstr ""
"Téigh go dtí an rannán “Acmhainn” agus seiceáil an bosca ``Áitiúil go "
"radharc``. Ansin, téigh go dtí an chuid “Albedo” agus cliceáil in aice leis "
"an maoin “Uigeacht” chun uigeacht Albedo a chur leis. Cuirfimid an uigeacht "
"a rinneamar i bhfeidhm anseo. Roghnaigh “ViewPortTexture nua”"

msgid ""
"Click on the ViewportTexture you just created in the inspector, then click "
"\"Assign\". Then, from the menu that pops up, select the Viewport that we "
"rendered to earlier."
msgstr ""
"Cliceáil ar an ViewPortTexture a chruthaigh tú díreach sa chigire, ansin "
"cliceáil “Sann”. Ansin, ón roghchlár a thaispeánann suas, roghnaigh an "
"Viewport a rinneamar níos luaithe."

msgid ""
"Your sphere should now be colored in with the colors we rendered to the "
"Viewport."
msgstr ""
"Ba chóir go mbeadh do réimse daite anois leis na dathanna a rinneamar don "
"Viewport."

msgid ""
"Notice the ugly seam that forms where the texture wraps around? This is "
"because we are picking a color based on UV coordinates and UV coordinates do "
"not wrap around the texture. This is a classic problem in 2D map projection. "
"Game developers often have a 2-dimensional map they want to project onto a "
"sphere, but when it wraps around, it has large seams. There is an elegant "
"workaround for this problem that we will illustrate in the next section."
msgstr ""
"Tabhair faoi deara an tsáim gránna a fhoirmíonn an áit a bhfuil an uigeacht "
"timpeall Tá sé seo toisc go bhfuilimid ag piocadh dath bunaithe ar "
"chomhordanáidí UV agus ní fhilleann comhordanáidí UV timpeall an uigeachta. "
"Is fadhb clasaiceach í seo i teilgean léarscáileanna 2D. Is minic a bhíonn "
"léarscáil dhíthoiseach ag forbróirí cluiche ar mhaith leo a thionscadadh ar "
"sféar, ach nuair a fhilleann sé timpeall, tá seamanna móra aige. Tá réiteach "
"galánta ann don fhadhb seo a léireofar sa chéad chuid eile."

msgid "Making the planet texture"
msgstr "Uigeacht an phláinéid a dhéanamh"

msgid ""
"So now, when we render to our :ref:`SubViewport <class_SubViewport>`, it "
"appears magically on the sphere. But there is an ugly seam created by our "
"texture coordinates. So how do we get a range of coordinates that wrap "
"around the sphere in a nice way? One solution is to use a function that "
"repeats on the domain of our texture. ``sin`` and ``cos`` are two such "
"functions. Let's apply them to the texture and see what happens. Replace the "
"existing color code in the shader with the following:"
msgstr ""
"Mar sin anois, nuair a dhéanaimid ár :ref:`SubViewport <class_SubViewport>`, "
"feictear go draíochta é ar an sféar. Ach tá seam gránna cruthaithe ag ár "
"gcomhordanáidí uigeachta. Mar sin, conas a fhaighimid raon comhordanáidí a "
"chuimsíonn an sféar ar bhealach deas? Réiteach amháin is ea feidhm a úsáid a "
"athrá ar an bhfearann ár n-uigeacht. Dhá fheidhm dá leithéid is ea ``peaca`` "
"agus ``cos``. Déanaimis iad a chur i bhfeidhm ar an uigeacht agus féach cad "
"a tharlaíonn. Cuir an méid seo a leanas in ionad an dathchód atá ann cheana "
"féin sa scáthlán:"

msgid ""
"Not too bad. If you look around, you can see that the seam has now "
"disappeared, but in its place, we have pinching at the poles. This pinching "
"is due to the way Godot maps textures to spheres in its :ref:"
"`StandardMaterial3D <class_StandardMaterial3D>`. It uses a projection "
"technique called equirectangular projection, which translates a spherical "
"map onto a 2D plane."
msgstr ""
"Ní ró-olc. Má fhéachann tú thart, is féidir leat a fheiceáil go bhfuil an "
"seam imithe anois, ach ina áit, ní mór dúinn pinching ag na cuaillí. Is mar "
"gheall ar an mbealach a léarscáilíonn Godot uigeachtaí go sféir ina :ref:"
"`StandardMaterial3D <class_StandardMaterial3D>` is cúis leis an greadadh "
"seo. Úsáideann sé teicníocht teilgin ar a dtugtar teilgean comhchothrom, a "
"aistríonn léarscáil sféarúil go eitleán 2T."

msgid ""
"If you are interested in a little extra information on the technique, we "
"will be converting from spherical coordinates into Cartesian coordinates. "
"Spherical coordinates map the longitude and latitude of the sphere, while "
"Cartesian coordinates are, for all intents and purposes, a vector from the "
"center of the sphere to the point."
msgstr ""
"Má tá suim agat i mbeagán faisnéise breise ar an teicníc, beimid ag tiontú ó "
"chomhordanáidí sféarúla go comhordanáidí Cartesian. Déanann comhordanáidí "
"sféarúla léarscáil ar fhad agus domhanleithead an sféar, agus is veicteoir ó "
"lár an sféar go dtí an pointe iad comhordanáidí Cartesian, chun gach rún "
"agus críocha."

msgid ""
"For each pixel, we will calculate its 3D position on the sphere. From that, "
"we will use 3D noise to determine a color value. By calculating the noise in "
"3D, we solve the problem of the pinching at the poles. To understand why, "
"picture the noise being calculated across the surface of the sphere instead "
"of across the 2D plane. When you calculate across the surface of the sphere, "
"you never hit an edge, and hence you never create a seam or a pinch point on "
"the pole. The following code converts the ``UVs`` into Cartesian coordinates."
msgstr ""
"I gcás gach picteilín, ríomfaimid a shuíomh 3D ar an sféar. Ón sin, "
"úsáidfimid torann 3D chun luach datha a chinneadh. Trí an torann a ríomh i "
"3D, réitímid fadhb an phriontála ag na cuaillí. Chun tuiscint cén fáth, déan "
"pictiúr an torann atá á ríomh ar fud dromchla an sféar in ionad trasna an "
"eitleáin 2D. Nuair a ríomhann tú trasna dromchla an sféar, ní bhuail tú "
"imeall riamh, agus dá bhrí sin ní chruthaíonn tú sáim ná pointe píosa ar an "
"gcuaille riamh. Athraíonn an cód seo a leanas na `UVS`` ina gcomhordanáidí "
"Cartesian."

msgid "And if we use ``unit`` as an output ``COLOR`` value, we get:"
msgstr "Agus má úsáidimid ``aonad ``mar aschur ``COLOR` luach, faighimid:"

msgid ""
"Now that we can calculate the 3D position of the surface of the sphere, we "
"can use 3D noise to make the planet. We will be using this noise function "
"directly from a `Shadertoy <https://www.shadertoy.com/view/Xsl3Dl>`_:"
msgstr ""
"Anois gur féidir linn suíomh 3D dhromchla an sféir a ríomh, is féidir linn "
"torann 3D a úsáid chun an pláinéad a dhéanamh. Beidh an fheidhm torainn seo "
"á úsáid againn go díreach ó `Shadertoy <https://www.shadertoy.com/view/"
"Xsl3Dl>`_:"

msgid ""
"All credit goes to the author, Inigo Quilez. It is published under the "
"``MIT`` licence."
msgstr ""
"Téann gach creidmheas chuig an údar, Inigo Quilez. Foilsítear é faoin "
"gceadúnas ``MIT``."

msgid ""
"Now to use ``noise``, add the following to the    ``fragment`` function:"
msgstr ""
"Anois chun ``torann ``a úsáid, cuir an méid seo a leanas leis an bhfeidhm "
"``fragment`:"

msgid "In order to highlight the texture, we set the material to unshaded."
msgstr ""
"D'fhonn aird a tharraingt ar an uigeacht, socraíomar an t-ábhar go "
"neamhscáthaithe."

msgid ""
"You can see now that the noise indeed wraps seamlessly around the sphere. "
"Although this looks nothing like the planet you were promised. So let's move "
"onto something more colorful."
msgstr ""
"Is féidir leat a fheiceáil anois go ndéanann an torann timpeall an réimse "
"gan uaim i ndáiríre. Cé nach bhfuil aon chuma air seo cosúil leis an "
"bpláinéad a gealladh duit. Mar sin déanaimis bogadh ar rud éigin níos "
"ildaite."

msgid "Coloring the planet"
msgstr "Dathú an phláinéid"

msgid ""
"Now to make the planet colors. While there are many ways to do this, for "
"now, we will stick with a gradient between water and land."
msgstr ""
"Anois chun na dathanna pláinéid a dhéanamh. Cé go bhfuil go leor bealaí ann "
"chun é seo a dhéanamh, anois, cloífimid le grádán idir uisce agus talamh."

msgid ""
"To make a gradient in GLSL, we use the ``mix`` function. ``mix`` takes two "
"values to interpolate between and a third argument to choose how much to "
"interpolate between them; in essence, it *mixes* the two values together. In "
"other APIs, this function is often called ``lerp``. However, ``lerp`` is "
"typically reserved for mixing two floats together; ``mix`` can take any "
"values whether it be floats or vector types."
msgstr ""
"Chun grádán a dhéanamh i GLSL, úsáidimid an fheidhm ``measc``. Tógann "
"``measc`` dhá luach chun idirphóiriú idir agus tríú argóint chun a roghnú cé "
"mhéid atá le hidirphógáil eatarthu; go bunúsach, meascnaíonn sé * an dá "
"luach le chéile. In APIs eile, is minic a thugtar `lerp`` ar an bhfeidhm "
"seo. Mar sin féin, is gnách go gcuirtear `lerp`` in áirithe chun dhá snámh a "
"mheascadh le chéile; is féidir le ``measc`` aon luachanna a ghlacadh cibé "
"acu is snámha nó cineálacha veicteora iad."

msgid ""
"The first color is blue for the ocean. The second color is a kind of reddish "
"color (because all alien planets need red terrain). And finally, they are "
"mixed together by ``n * 0.5 + 0.5``. ``n`` smoothly varies between ``-1`` "
"and ``1``. So we map it into the ``0-1`` range that ``mix`` expects. Now you "
"can see that the colors change between blue and red."
msgstr ""
"Is é an chéad dath gorm don aigéan. Is cineál dath reddish é an dara dath "
"(toisc go dteastaíonn tír-raon dearg ar gach pláinéad eachtrannach). Agus ar "
"deireadh, tá siad measctha le chéile ag `` n * 0.5 + 0.5``. Athraíonn ``n`` "
"go réidh idir ``-1`` agus ``1``. Mar sin déanaimid é a mhapáil isteach sa "
"raon `` 0-1`` a bhfuil súil ag ``meascán``. Anois is féidir leat a fheiceáil "
"go n-athraíonn na dathanna idir gorm agus dearg."

msgid ""
"That is a little more blurry than we want. Planets typically have a "
"relatively clear separation between land and sea. In order to do that, we "
"will change the last term to ``smoothstep(-0.1, 0.0, n)``. And thus the "
"whole line becomes:"
msgstr ""
"Tá sé sin beagán níos doiléire ná mar a theastaíonn uainn. De ghnáth bíonn "
"scaradh réasúnta soiléir ag pláinéid idir talamh agus farraige D'fhonn é sin "
"a dhéanamh, athróimid an téarma deireanach go ``smoothstep (-0.1, 0.0, n) "
"``. Agus dá bhrí sin bíonn an líne iomlán:"

msgid ""
"What ``smoothstep`` does is return ``0`` if the third argument is below the "
"first and ``1`` if the third argument is larger than the second and smoothly "
"blends between ``0`` and ``1`` if the third number is between the first and "
"the second. So in this line, ``smoothstep`` returns ``0`` whenever ``n`` is "
"less than ``-0.1`` and it returns ``1`` whenever ``n`` is above ``0``."
msgstr ""
"Is é an rud a dhéanann ``smoothstep`` ná `0`` a thabhairt ar ais má tá an "
"tríú argóint faoi bhun an chéad agus ``1`` má tá an tríú argóint níos mó ná "
"an dara argóint agus cumasc go réidh idir `0`` agus ``1`` má tá an tríú "
"uimhir idir an chéad agus an dara. Mar sin sa líne seo, filleann "
"``smoothstep`` ``0`` aon uair a bhíonn ``n`` níos lú ná ``-0.1`` agus "
"filleann sé ``1`` aon uair a bhíonn ``n`` os cionn ``0``."

msgid ""
"One more thing to make this a little more planet-y. The land shouldn't be so "
"blobby; let's make the edges a little rougher. A trick that is often used in "
"shaders to make rough looking terrain with noise is to layer levels of noise "
"over one another at various frequencies. We use one layer to make the "
"overall blobby structure of the continents. Then another layer breaks up the "
"edges a bit, and then another, and so on. What we will do is calculate ``n`` "
"with four lines of shader code instead of just one. ``n`` becomes:"
msgstr ""
"Rud amháin eile chun é seo a dhéanamh beagán níos mó pláinéada-y. Níor chóir "
"go mbeadh an talamh chomh cruach; déanaimis na himill beagán níos garbh. "
"Cleas a úsáidtear go minic i scáthóirí chun tír-raon garbh a dhéanamh le "
"torann ná leibhéil torainn a shraith thar a chéile ag minicíochtaí éagsúla. "
"Úsáidimid ciseal amháin chun struchtúr foriomlán blobby na mór-roinn a "
"dhéanamh. Ansin briseann ciseal eile suas na himill beagán, agus ansin ceann "
"eile, agus mar sin de. Is é an rud a dhéanfaimid ná ``n`` a ríomh le ceithre "
"líne de chód shader in ionad amháin amháin. Éiríonn ``n``:"

msgid "And now the planet looks like:"
msgstr "Agus anois tá cuma ar an bpláinéad:"

msgid "Making an ocean"
msgstr "Aigéan a dhéanamh"

msgid ""
"One final thing to make this look more like a planet. The ocean and the land "
"reflect light differently. So we want the ocean to shine a little more than "
"the land. We can do this by passing a fourth value into the ``alpha`` "
"channel of our output ``COLOR`` and using it as a Roughness map."
msgstr ""
"Rud deiridh amháin chun go mbeidh cuma níos cosúil le pláinéad air seo. "
"Léiríonn an aigéan agus an talamh solas ar bhealach difriúil. Mar sin ba "
"mhaith linn go ndéanfadh an aigéan beagán níos mó ná an talamh. Is féidir "
"linn é seo a dhéanamh tríd an gceathrú luach a chur isteach sa chainéal "
"``alpha`` dár n-aschur `COLOR`` agus é a úsáid mar léarscáil garbh."

msgid ""
"This line returns ``0.3`` for water and ``1.0`` for land. This means that "
"the land is going to be quite rough, while the water will be quite smooth."
msgstr ""
"Tugann an líne seo ``0.3`` ar ais d'uisce agus ``1.0`` don talamh. "
"Ciallaíonn sé seo go mbeidh an talamh garbh go leor, agus beidh an t-uisce "
"réidh go leor."

msgid ""
"And then, in the material, under the \"Metallic\" section, make sure "
"``Metallic`` is set to ``0`` and ``Specular`` is set to ``1``. The reason "
"for this is the water reflects light really well, but isn't metallic. These "
"values are not physically accurate, but they are good enough for this demo."
msgstr ""
"Agus ansin, san ábhar, faoin rannán “Miotalach”, déan cinnte go bhfuil "
"``Metallic`` socraithe go ``0`` agus go socraítear ``Specular`` go ``1``. Is "
"é an chúis atá leis seo ná go léiríonn an t-uisce solas go han-mhaith, ach "
"níl sé miotalach. Níl na luachanna seo cruinn go fisiciúil, ach tá siad go "
"maith go leor don taispeántas seo."

msgid ""
"Next, under the \"Roughness\" section set the roughness texture to a :ref:"
"`Viewport Texture <class_ViewportTexture>` pointing to our planet texture :"
"ref:`SubViewport <class_SubViewport>`. Finally, set the ``Texture Channel`` "
"to ``Alpha``. This instructs the renderer to use the ``alpha`` channel of "
"our output ``COLOR`` as the ``Roughness`` value."
msgstr ""
"Ansin, faoin rannán \"Gairneacht\" socraigh uigeacht an gharbh chuig :ref:"
"`Uigeacht Viewport <class_ViewportTexture>` ag díriú ar uigeacht ár "
"bpláinéad :ref:`SubViewport <class_SubViewport>`. Ar deireadh, socraigh an "
"`` Cainéal Uigeacht`` go `` Alfa`. Treoraíonn sé seo don rindreálaí an "
"cainéal `` alfa`` dár n-aschur `` COLOR`` a úsáid mar luach ``Gearntacht``."

msgid ""
"You'll notice that very little changes except that the planet is no longer "
"reflecting the sky. This is happening because, by default, when something is "
"rendered with an alpha value, it gets drawn as a transparent object over the "
"background. And since the default background of the :ref:`SubViewport "
"<class_SubViewport>` is opaque, the ``alpha`` channel of the :ref:`Viewport "
"Texture <class_ViewportTexture>` is ``1``, resulting in the planet texture "
"being drawn with slightly fainter colors and a ``Roughness`` value of ``1`` "
"everywhere. To correct this, we go into the :ref:`SubViewport "
"<class_SubViewport>` and enable the \"Transparent Bg\" property. Since we "
"are now rendering one transparent object on top of another, we want to "
"enable ``blend_premul_alpha``:"
msgstr ""
"Feicfidh tú faoi deara gur beag athruithe ach amháin nach bhfuil an "
"phláinéid ag frithchaitheamh an spéir a thuilleadh. Tá sé seo ag tarlú mar, "
"de réir réamhshocraithe, nuair a dhéantar rud éigin a bhfuil luach alfa air, "
"tarraingítear é mar réad trédhearcach thar an gcúlra. Agus ós rud é go "
"bhfuil cúlra réamhshocraithe an :ref:`SubViewport <class_SubViewport>` "
"teimhneach, is é an cainéal `` alfa`` den :ref:`Uigeacht Viewport "
"<class_ViewportTexture>` ná ``1`, agus uigeacht an phláinéid mar thoradh air "
"á dtarraingt le dathanna beagán níos laige agus luach ``Roughness`` de ``1`` "
"i ngach áit. Chun é seo a cheartú, téann muid isteach sa :ref:`SubViewport "
"<class_SubViewport>` agus cumasaíonn muid an t-airí \"Transparent Bg\". Ós "
"rud é go bhfuil muid ag rindreáil réad trédhearcach amháin ar bharr ceann "
"eile, ba mhaith linn ``blend_premul_alpha`` a chumasú:"

msgid ""
"This pre-multiplies the colors by the ``alpha`` value and then blends them "
"correctly together. Typically, when blending one transparent color on top of "
"another, even if the background has an ``alpha`` of ``0`` (as it does in "
"this case), you end up with weird color bleed issues. Setting "
"``blend_premul_alpha`` fixes that."
msgstr ""
"Déanann sé seo na dathanna réamh-iolrú leis an luach ``alpha`` agus ansin "
"déanann sé iad a chumasc i gceart le chéile. De ghnáth, agus dath "
"trédhearcach amháin á chumasc ar bharr ceann eile, fiú má tá ``alpha`` de "
"`0` sa chúlra (mar a dhéanann sé sa chás seo), bíonn saincheisteanna "
"fuilithe dathanna aisteach agat. Socraíonn sé sin ag socrú "
"``blend_premul_alpha``."

msgid ""
"Now the planet should look like it is reflecting light on the ocean but not "
"the land. move around the :ref:`OmniLight3D <class_OmniLight3D>` in the "
"scene so you can see the effect of the reflections on the ocean."
msgstr ""
"Anois ba cheart go mbeadh cuma ar an bpláinéad go bhfuil sé ag "
"frithchaitheamh solais ar an aigéan ach ní ar an talamh. bog timpeall an :"
"ref:`OmniLight3D <class_OmniLight3D>` sa radharc ionas gur féidir leat "
"éifeacht an fhrithchaitheamh ar an aigéan a fheiceáil."

msgid ""
"And there you have it. A procedural planet generated using a :ref:"
"`SubViewport <class_SubViewport>`."
msgstr ""
"Agus tá sé agat. Pláinéad nós imeachta ginte ag baint úsáide as :ref:"
"`SubViewport <class_SubViewport>`."
