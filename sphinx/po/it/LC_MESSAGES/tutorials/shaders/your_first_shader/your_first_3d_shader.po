#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 3D shader"
msgstr "Il tuo primo shader 3D"

msgid ""
"You have decided to start writing your own custom Spatial shader. Maybe you "
"saw a cool trick online that was done with shaders, or you have found that "
"the :ref:`StandardMaterial3D <class_StandardMaterial3D>` isn't quite meeting "
"your needs. Either way, you have decided to write your own and now you need "
"to figure out where to start."
msgstr ""
"Hai deciso di cominciare a scrivere il tuo shader Spatial personalizzato. "
"Forse hai trovato online un trucco interessante realizzato con gli shader, "
"oppure hai scoperto che :ref:`StandardMaterial3D <class_StandardMaterial3D>` "
"non soddisfa del tutto i tuoi bisogni. In ogni caso, hai deciso di scriverne "
"uno tuo e ora devi capire da dove cominciare."

msgid ""
"This tutorial will explain how to write a Spatial shader and will cover more "
"topics than the :ref:`CanvasItem <doc_your_first_canvasitem_shader>` "
"tutorial."
msgstr ""
"Questo tutorial spiegherà come scrivere uno shader Spatial e coprirà più "
"argomenti rispetto al tutorial :ref:`CanvasItem "
"<doc_your_first_canvasitem_shader>`."

msgid "Where to assign my material"
msgstr "Dove assegnare il mio materiale"

msgid ""
"In 3D, objects are drawn using :ref:`Meshes <class_Mesh>`. Meshes are a "
"resource type that store geometry (the shape of your object) and materials "
"(the color and how the object reacts to light) in units called \"surfaces\". "
"A Mesh can have multiple surfaces, or just one. Typically, you would import "
"a mesh from another program (e.g. Blender). But Godot also has a "
"few :ref:`PrimitiveMeshes <class_primitivemesh>` that allow you to add basic "
"geometry to a scene without importing Meshes."
msgstr ""
"In 3D, gli oggetti vengono disegnati utilizzando :ref:`Mesh <class_Mesh>`. "
"Le mesh sono un tipo di risorsa che memorizza la geometria (la forma "
"dell'oggetto) e i materiali (il colore e la reazione dell'oggetto alla luce) "
"in unità chiamate \"superfici\". Una mesh può avere più superfici o solo "
"una. In genere, si importa una mesh da un altro programma (ad esempio "
"Blender). Ma Godot offre anche alcune :ref:`PrimitiveMeshes "
"<class_primitivemesh>` che consentono di aggiungere geometria di base a una "
"scena senza importare mesh."

msgid ""
"There are multiple node types that you can use to draw a mesh. The main one "
"is :ref:`MeshInstance3D <class_MeshInstance3D>`, but you can also "
"use :ref:`GPUParticles3D <class_GPUParticles3D>`, :ref:`MultiMeshes "
"<class_MultiMesh>` (with a :ref:`MultiMeshInstance3D "
"<class_MultiMeshInstance3D>`), or others."
msgstr ""
"Esistono diversi tipi di nodi che puoi utilizzare per disegnare una mesh. "
"Quello principale è :ref:`MeshInstance3D <class_MeshInstance3D>`, ma puoi "
"anche usare :ref:`GPUParticles3D <class_GPUParticles3D>`, :ref:`MultiMesh "
"<class_MultiMesh>` (con :ref:`MultiMeshInstance3D "
"<class_MultiMeshInstance3D>`) o altri."

msgid ""
"Typically, a material is associated with a given surface in a mesh, but some "
"nodes, like MeshInstance3D, allow you to override the material for a "
"specific surface, or for all surfaces."
msgstr ""
"In genere, un materiale è associato a una determinata superficie in una "
"mesh, ma alcuni nodi, come MeshInstance3D, consentono di sovrascrivere il "
"materiale per una superficie specifica o per tutte le superfici."

msgid ""
"If you set a material on the surface or mesh itself, then all "
"MeshInstance3Ds that share that mesh will share that material. However, if "
"you want to reuse the same mesh across multiple mesh instances, but have "
"different materials for each instance then you should set the material on "
"the MeshInstance3D."
msgstr ""
"Se imposti un materiale sulla superficie o sulla mesh stessa, tutte le "
"MeshInstance3D che condividono quella mesh condivideranno quel materiale. "
"Tuttavia, se desideri riutilizzare la stessa mesh su più istanze, ma con "
"materiali diversi per ogni istanza, è necessario impostare il materiale "
"sulla MeshInstance3D."

msgid ""
"For this tutorial we will set our material on the mesh itself rather than "
"taking advantage of the MeshInstance3D's ability to override materials."
msgstr ""
"In questo tutorial imposteremo il nostro materiale sulla mesh stessa anziché "
"sfruttare la capacità di MeshInstance3D di sovrascrivere i materiali."

msgid "Setting up"
msgstr "Impostare"

msgid ""
"Add a new :ref:`MeshInstance3D <class_MeshInstance3D>` node to your scene."
msgstr ""
"Aggiungi un nuovo nodo :ref:`MeshInstance3D <class_MeshInstance3D>` alla tua "
"scena."

msgid ""
"In the inspector tab, set the MeshInstance3D's **Mesh** property to a "
"new :ref:`PlaneMesh <class_planemesh>` resource, by clicking on ``<empty>`` "
"and choosing **New PlaneMesh**. Then expand the resource by clicking on the "
"image of a plane that appears."
msgstr ""
"Nella scheda dell'ispettore, imposta la proprietà **Mesh** di MeshInstance3D "
"su una nuova risorsa :ref:`PlaneMesh <class_planemesh>`, cliccando su "
"``<vuoto>`` e scegliendo **Nuovo PlaneMesh**. Poi espandi la risorsa "
"cliccando sull'immagine di un piano che appare."

msgid "This adds a plane to our scene."
msgstr "Questo aggiunge un piano alla nostra scena."

msgid ""
"Then, in the viewport, click in the upper left corner on the **Perspective** "
"button. In the menu that appears, select **Display Wireframe**."
msgstr ""
"Quindi, nella viewport, fai clic sul pulsante **Prospettiva** nell'angolo in "
"alto a sinistra. Nel menu che appare, seleziona **Visualizza wireframe**."

msgid "This will allow you to see the triangles making up the plane."
msgstr "Questo ti permetterà di vedere i triangoli che compongono il piano."

msgid ""
"You can see that there are now many more triangles in "
"the :ref:`MeshInstance3D<class_MeshInstance3D>`. This will give us more "
"vertices to work with and thus allow us to add more detail."
msgstr ""
"Come puoi vedere, ora ci sono molti più triangoli "
"in :ref:`MeshInstance3D<class_MeshInstance3D>`. Questo ci darà più vertici "
"con cui lavorare e ci permetterà di aggiungere più dettagli."

msgid ""
":ref:`PrimitiveMeshes <class_primitivemesh>`, like PlaneMesh, only have one "
"surface, so instead of an array of materials there is only one. Set the "
"**Material** to a new ShaderMaterial, then expand the material by clicking "
"on the sphere that appears."
msgstr ""
":ref:`PrimitiveMeshes <class_primitivemesh>`, come PlaneMesh, hanno una sola "
"superficie, quindi invece di un array di materiali ce n'è solo uno. Imposta "
"**Material** su un nuovo ShaderMaterial, quindi espandi il materiale "
"cliccando sulla sfera che appare."

msgid ""
"Materials that inherit from the :ref:`class_Material` resource, such "
"as :ref:`class_StandardMaterial3D` and :ref:`class_ParticleProcessMaterial`, "
"can be converted to a :ref:`class_ShaderMaterial` and their existing "
"properties will be converted to an accompanying text shader. To do so, right-"
"click on the material in the FileSystem dock and choose **Convert to "
"ShaderMaterial**. You can also do so by right-clicking on any property "
"holding a reference to the material in the inspector."
msgstr ""
"I materiali che ereditano dalla risorsa :ref:`class_Material`, "
"come :ref:`class_StandardMaterial3D` e :ref:`class_ParticleProcessMaterial`, "
"si possono convertire in un :ref:`class_ShaderMaterial` e le loro proprietà "
"esistenti saranno convertite in uno shader di testo corrispondente. Per "
"farlo, fai clic destro sul materiale nel pannello FileSystem e scegli "
"**Converti in ShaderMaterial**. Puoi anche fare clic destro su qualsiasi "
"proprietà che contenga un riferimento al materiale nell'ispettore."

msgid ""
"Now set the material's **Shader** to a new Shader by clicking ``<empty>`` "
"and select **New Shader...**. Leave the default settings, give your shader a "
"name, and click **Create**."
msgstr ""
"Ora imposta lo **Shader** del materiale su un nuovo Shader cliccando su "
"``<vuoto>`` e selezionando **Nuovo Shader...**. Lascia le impostazioni "
"predefinite, assegna un nome allo shader e clicca su **Crea**."

msgid ""
"Click on the shader in the inspector, and the shader editor should now pop "
"up. You are ready to begin writing your first Spatial shader!"
msgstr ""
"Fai clic sullo shader nell'ispettore, e dovrebbe apparire l'editor degli "
"shader. Sei pronto per cominciare a scrivere il tuo primo shader Spatial!"

msgid ""
"The new shader is already generated with a ``shader_type`` variable, the "
"``vertex()`` function, and the ``fragment()`` function. The first thing "
"Godot shaders need is a declaration of what type of shader they are. In this "
"case the ``shader_type`` is set to ``spatial`` because this is a spatial "
"shader."
msgstr ""
"Il nuovo shader è già generato con la variabile ``shader_type``, la funzione "
"``vertex()`` e la funzione ``fragment()``. La prima cosa di cui hanno "
"bisogno gli shader di Godot è una dichiarazione del tipo di shader. In "
"questo caso, ``shader_type`` è impostato su ``spatial`` perché è uno shader "
"spaziale."

msgid "Adding this line, you should get an image like the one below."
msgstr ""
"Aggiungendo questa riga dovresti ottenere un'immagine come quella qui sotto."

msgid ""
"Okay, let's unpack this. The ``y`` value of the ``VERTEX`` is being "
"increased. And we are passing the ``x`` and ``z`` components of the "
"``VERTEX`` as arguments to :ref:`cos() <shader_func_cos>` and :ref:`sin() "
"<shader_func_sin>`; that gives us a wave-like appearance across the ``x`` "
"and ``z`` axes."
msgstr ""
"Ok, analizziamo. Il valore ``y`` di ``VERTEX`` viene aumentato. E stiamo "
"passando le componenti ``x`` e ``z`` di ``VERTEX`` come argomenti "
"a :ref:`cos() <shader_func_cos>` e :ref:`sin() <shader_func_sin>`; questo ci "
"dà un aspetto ondulato lungo gli assi ``x`` e ``z``."

msgid ""
"What we want to achieve is the look of little hills; after all. ``cos()`` "
"and ``sin()`` already look kind of like hills. We do so by scaling the "
"inputs to the ``cos()`` and ``sin()`` functions."
msgstr ""
"Quel che vogliamo ottenere è l'aspetto di piccole colline; dopotutto, "
"``cos()`` e ``sin()`` hanno già un aspetto simile a delle colline. Lo "
"facciamo scalando gli input delle funzioni ``cos()`` e ``sin()``."

msgid ""
"This looks better, but it is still too spiky and repetitive, let's make it a "
"little more interesting."
msgstr ""
"Sembra meglio, ma è ancora troppo spinoso e ripetitivo. Rendiamolo un po' "
"più interessante."

msgid ""
"Godot provides the :ref:`NoiseTexture2D <class_noisetexture2D>` resource for "
"generating a noise texture that can be accessed from a shader."
msgstr ""
"Godot fornisce la risorsa :ref:`NoiseTexture2D <class_noisetexture2D>` per "
"generare una texture di noise a cui è possibile accedere da uno shader."

msgid ""
"To access a texture in a shader add the following code near the top of your "
"shader, outside the ``vertex()`` function."
msgstr ""
"Per accedere a una texture in uno shader, aggiungi il seguente codice in "
"cima allo shader, fuori dalla funzione ``vertex()``."

msgid ""
"This will allow you to send a noise texture to the shader. Now look in the "
"inspector under your material. You should see a section called **Shader "
"Parameters**. If you open it up, you'll see a parameter called \"Noise\"."
msgstr ""
"Questo ti permetterà di inviare una texture di noise allo shader. Ora guarda "
"nell'ispettore sotto il tuo materiale. Dovresti vedere una sezione chiamata "
"**Parametri dello shader**. Se la apri, vedrai un parametro chiamato "
"\"Noise\"."

msgid ""
"Set this **Noise** parameter to a new :ref:`NoiseTexture2D "
"<class_noisetexture2D>`. Then in your NoiseTexture2D, set its **Noise** "
"property to a new :ref:`FastNoiseLite <class_fastnoiselite>`. The "
"FastNoiseLite class is used by the NoiseTexture2D to generate a heightmap."
msgstr ""
"Imposta questo parametro **Noise** su un nuovo :ref:`NoiseTexture2D "
"<class_noisetexture2D>`. Quindi, in NoiseTexture2D, imposta la sua proprietà "
"**Noise** su un nuovo :ref:`FastNoiseLite <class_fastnoiselite>`. La classe "
"FastNoiseLite è utilizzata da NoiseTexture2D per generare una heightmap."

msgid "Once you set it up and should look like this."
msgstr "Una volta che l'hai impostato e dovrebbe apparire così."

msgid "Now, access the noise texture using the ``texture()`` function:"
msgstr ""
"Ora, accedi alla texture di noise attraverso la funzione ``texture()``:"

msgid ""
"Since the PlaneMesh coordinates are within the ``[-1.0, 1.0]`` range (for a "
"size of ``2.0``), while the texture coordinates are within ``[0.0, 1.0]``, "
"to remap the coordinates we divide by the size of the PlaneMesh by ``2.0`` "
"and add ``0.5`` ."
msgstr ""
"Poiché le coordinate del PlaneMesh rientrano nell'intervallo ``[-1.0, 1.0]`` "
"(per una dimensione di ``2.0``), mentre le coordinate della texture "
"rientrano in ``[0.0, 1.0]``, per rimappare le coordinate dividiamo per la "
"dimensione del PlaneMesh per ``2.0`` e aggiungiamo ``0.5``."

msgid ""
"``texture()`` returns a ``vec4`` of the ``r, g, b, a`` channels at the "
"position. Since the noise texture is grayscale, all of the values are the "
"same, so we can use any one of the channels as the height. In this case "
"we'll use the ``r``, or ``x`` channel."
msgstr ""
"``texture()`` restituisce un ``vec4`` dei canali ``r, g, b, a`` nella "
"posizione. Poiché la texture di noise è in scala di grigi, tutti i valori "
"sono identici, quindi possiamo usare uno qualsiasi dei canali come altezza. "
"In questo caso useremo il canale ``r`` o ``x``."

msgid ""
"``xyzw`` is the same as ``rgba`` in GLSL, so instead of ``texture().x`` "
"above, we could use ``texture().r``. See the `OpenGL documentation <https://"
"www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ for more details."
msgstr ""
"``xyzw`` è uguale a ``rgba`` in GLSL, quindi invece di ``texture().x``, "
"potremmo usare ``texture().r``. Consulta la `documentazione di OpenGL "
"<https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ per più "
"dettagli."

msgid "Using this code you can see the texture creates random looking hills."
msgstr ""
"Utilizzando questo codice puoi vedere come la texture crea delle colline "
"dall'aspetto casuale."

msgid ""
"Right now it is too spiky, we want to soften the hills a bit. To do that, we "
"will use a uniform. You already used a uniform above to pass in the noise "
"texture, now let's learn how they work."
msgstr ""
"Al momento è troppo spigoloso, vogliamo ammorbidire un pochetto le colline. "
"Per farlo, useremo un'uniforme. Hai già usato un'uniforme prima per passare "
"la texture di noise, ora impariamo come funzionano."

msgid "Uniforms"
msgstr "Uniformi"

msgid ""
":ref:`Uniform variables <doc_shading_language_uniforms>` allow you to pass "
"data from the game into the shader. They are very useful for controlling "
"shader effects. Uniforms can be almost any datatype that can be used in the "
"shader. To use a uniform, you declare it in your :ref:`Shader<class_Shader>` "
"using the keyword ``uniform``."
msgstr ""
":ref:`Le variabili uniformi <doc_shading_language_uniforms>` permettono di "
"passare dati dal gioco allo shader. Sono molto utili per controllare gli "
"effetti dello shader. Le uniformi possono essere praticamente di qualsiasi "
"tipo di dato utilizzabile nello shader. Per usare un'uniforme, la si "
"dichiara nel proprio :ref:`Shader<class_Shader>` usando la parola chiave "
"``uniform``."

msgid "Let's make a uniform that changes the height of the terrain."
msgstr "Creiamo un'uniforme che cambi l'altezza del terreno."

msgid ""
"Godot lets you initialize a uniform with a value; here, ``height_scale`` is "
"set to ``0.5``. You can set uniforms from GDScript by calling the "
"function :ref:`set_shader_parameter() "
"<class_ShaderMaterial_method_set_shader_parameter>` on the material "
"corresponding to the shader. The value passed from GDScript takes precedence "
"over the value used to initialize it in the shader."
msgstr ""
"Godot consente di inizializzare un'uniforme con un valore; in questo caso, "
"``height_scale`` è impostato su ``0.5``. È possibile impostare le uniformi "
"da GDScript chiamando la funzione :ref:`set_shader_parameter() "
"<class_ShaderMaterial_method_set_shader_parameter>` sul materiale "
"corrispondente allo shader. Il valore passato da GDScript ha la precedenza "
"sul valore utilizzato per inizializzarlo nello shader."

msgid ""
"Changing uniforms in Spatial-based nodes is different from CanvasItem-based "
"nodes. Here, we set the material inside the PlaneMesh resource. In other "
"mesh resources you may need to first access the material by calling "
"``surface_get_material()``. While in the MeshInstance3D you would access the "
"material using ``get_surface_material()`` or ``material_override``."
msgstr ""
"La modifica delle uniformi nei nodi basati su Spatial è diversa da quella "
"nei nodi basati su CanvasItem. Qui, impostiamo il materiale all'interno "
"della risorsa PlaneMesh. In altre risorse mesh potrebbe essere necessario "
"prima accedere al materiale chiamando ``surface_get_material()``. In "
"MeshInstance3D, invece, si accede al materiale tramite "
"``get_surface_material()`` o ``material_override``."

msgid ""
"Remember that the string passed into ``set_shader_parameter()`` must match "
"the name of the uniform variable in the shader. You can use the uniform "
"variable anywhere inside your shader. Here, we will use it to set the height "
"value instead of arbitrarily multiplying by ``0.5``."
msgstr ""
"Ricorda che la stringa passata a ``set_shader_parameter()`` deve "
"corrispondere al nome della variabile uniforme nello shader. Puoi usare la "
"variabile uniforme ovunque all'interno dello shader. Qui, la useremo per "
"impostare il valore dell'altezza invece di moltiplicarla arbitrariamente per "
"``0.5``."

msgid ""
"Using uniforms, we can even change the value every frame to animate the "
"height of the terrain. Combined with :ref:`Tweens <class_Tween>`, this can "
"be especially useful for animations."
msgstr ""
"Utilizzando le uniformi, possiamo persino modificare il valore a ogni frame "
"per animare l'altezza del terreno. In combinazione con :ref:`Tweens "
"<class_Tween>`, ciò può essere particolarmente utile per le animazioni."

msgid "Interacting with light"
msgstr "Interagire con la luce"

msgid ""
"First, turn wireframe off. To do so, open the **Perspective** menu in the "
"upper-left of the viewport again, and select **Display Normal**. "
"Additionally in the 3D scene toolbar, turn off preview sunlight."
msgstr ""
"Per prima cosa, disattiva il wireframe. Per farlo, apri di nuovo il menu "
"**Prospettiva** in alto a sinistra della viewport e seleziona **Visualizza "
"predefinita**. Inoltre, nella barra degli strumenti della scena 3D, "
"disattiva l'anteprima della luce solare."

msgid ""
"Note how the mesh color goes flat. This is because the lighting on it is "
"flat. Let's add a light!"
msgstr ""
"Nota come il colore della mesh diventa piatto. Questo perché l'illuminazione "
"è piatta. Aggiungiamo una luce!"

msgid ""
"First, we will add an :ref:`OmniLight3D<class_OmniLight3D>` to the scene, "
"and drag it up so it is above the terrain."
msgstr ""
"Per prima cosa aggiungeremo un :ref:`OmniLight3D<class_OmniLight3D>` alla "
"scena e lo trascineremo verso l'alto in modo che si trovi sopra il terreno."

msgid ""
"You can see the light affecting the terrain, but it looks odd. The problem "
"is the light is affecting the terrain as if it were a flat plane. This is "
"because the light shader uses the normals from the :ref:`Mesh <class_mesh>` "
"to calculate light."
msgstr ""
"Puoi vedere la luce che influenza il terreno, ma sembra strano. Il problema "
"è che la luce influenza il terreno come se fosse un piano piatto. Questo "
"perché lo shader di luce utilizza le normali della :ref:`Mesh <class_mesh>` "
"per calcolare la luce."

msgid ""
"You can calculate the new normal manually in the vertex function and then "
"just set ``NORMAL``. With ``NORMAL`` set, Godot will do all the difficult "
"lighting calculations for us. We will cover this method in the next part of "
"this tutorial, for now we will read normals from a texture."
msgstr ""
"È possibile calcolare manualmente la nuova normale nella funzione vertex e "
"poi impostare ``NORMAL``. Con ``NORMAL`` impostato, Godot eseguirà tutti i "
"complessi calcoli di illuminazione per noi. Parleremo di questo metodo nella "
"prossima parte di questo tutorial, per ora leggeremo le normali da una "
"texture."

msgid ""
"Instead we will rely on the NoiseTexture again to calculate normals for us. "
"We do that by passing in a second noise texture."
msgstr ""
"Ci affideremo nuovamente alla NoiseTexture per calcolare le normali al posto "
"nostro. Lo faremo passando una seconda texture di noise."

msgid ""
"When we have normals that correspond to a specific vertex we set ``NORMAL``, "
"but if you have a normalmap that comes from a texture, set the normal using "
"``NORMAL_MAP`` in the ``fragment()`` function. This way Godot will handle "
"wrapping the texture around the mesh automatically."
msgstr ""
"Quando abbiamo normali che corrispondono a un vertice specifico, impostiamo "
"``NORMAL``, ma se abbiamo una mappa di normali che deriva da una texture, "
"impostiamo la normale usando ``NORMAL_MAP`` nella funzione ``fragment()``. "
"In questo modo Godot gestirà automaticamente l'avvolgimento della texture "
"attorno alla mesh."

msgid ""
"Above the ``vertex()`` define a ``varying vec2`` called ``tex_position``. "
"And inside the ``vertex()`` function assign ``VERTEX.xz`` to "
"``tex_position``."
msgstr ""
"Sopra ``vertex()`` definisci un ``varying vec2`` chiamato ``tex_position``. "
"E dentro la funzione ``vertex()`` assegna ``VERTEX.xz`` a ``tex_position``."

msgid ""
"And now we can access ``tex_position`` from the ``fragment()`` function."
msgstr ""
"Ora possiamo accedere a ``tex_position`` dalla funzione ``fragment()``."

msgid ""
"With the normals in place the light now reacts to the height of the mesh "
"dynamically."
msgstr ""
"Con le normali a posto, la luce ora reagisce dinamicamente all'altezza della "
"mesh."

msgid ""
"We can even drag the light around and the lighting will update automatically."
msgstr ""
"Possiamo anche trascinare la luce e l'illuminazione si aggiornerà "
"automaticamente."

msgid "Full code"
msgstr "Codice completo"
