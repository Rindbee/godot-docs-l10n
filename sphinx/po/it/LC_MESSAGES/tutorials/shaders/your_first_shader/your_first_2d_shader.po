#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 2D shader"
msgstr "Il tuo primo shader 2D"

msgid "Introduction"
msgstr "Introduzione"

msgid ""
"Shaders are special programs that execute on the GPU and are used for "
"rendering graphics. All modern rendering is done with shaders. For a more "
"detailed description of what shaders are please see :ref:`What are shaders "
"<doc_introduction_to_shaders>`."
msgstr ""
"Gli shader sono programmi speciali che vengono eseguiti sulla GPU e "
"utilizzati per renderizzare la grafica. Tutto il rendering moderno è "
"eseguiti con gli shader. Per una descrizione più dettagliata degli shader, "
"consultare :ref:`Cosa sono gli shader <doc_introduction_to_shaders>`."

msgid "Setup"
msgstr "Configura"

msgid ""
"Next, look down in the Inspector, under the CanvasItem section, click beside "
"\"Material\" and select \"New ShaderMaterial\". This creates a new Material "
"resource. Click on the sphere that appears. Godot currently doesn't know "
"whether you are writing a CanvasItem Shader or a Spatial Shader and it "
"previews the output of spatial shaders. So what you are seeing is the output "
"of the default Spatial Shader."
msgstr ""
"Quindi, guarda in basso nell'Ispettore, nella sezione CanvasItem, clicca "
"accanto a \"Material\" e seleziona \"Nuovo ShaderMaterial\". Questo crea una "
"nuova risorsa Materiale. Clicca sulla sfera che appare. Godot al momento non "
"sa se stai scrivendo uno shader CanvasItem o uno shader Spatial e mostra in "
"anteprima il risultato degli shader Spatial. Perciò quel che vedi è il "
"risultato dello shader Spatial predefinito."

msgid ""
"Materials that inherit from the :ref:`class_Material` resource, such "
"as :ref:`class_StandardMaterial3D` and :ref:`class_ParticleProcessMaterial`, "
"can be converted to a :ref:`class_ShaderMaterial` and their existing "
"properties will be converted to an accompanying text shader. To do so, right-"
"click on the material in the FileSystem dock and choose **Convert to "
"ShaderMaterial**. You can also do so by right-clicking on any property "
"holding a reference to the material in the inspector."
msgstr ""
"I materiali che ereditano dalla risorsa :ref:`class_Material`, "
"come :ref:`class_StandardMaterial3D` e :ref:`class_ParticleProcessMaterial`, "
"si possono convertire in un :ref:`class_ShaderMaterial` e le loro proprietà "
"esistenti saranno convertite in uno shader di testo corrispondente. Per "
"farlo, fai clic destro sul materiale nel pannello FileSystem e scegli "
"**Converti in ShaderMaterial**. Puoi anche fare clic destro su qualsiasi "
"proprietà che contenga un riferimento al materiale nell'ispettore."

msgid ""
"Click beside \"Shader\" and select \"New Shader\". Finally, click on the "
"shader you just created and the shader editor will open. You are now ready "
"to begin writing your first shader."
msgstr ""
"Fai clic su \"Shader\" e seleziona \"Nuovo Shader\". Infine, fai clic sullo "
"shader appena creato e si aprirà l'editor. Ora sei pronto per cominciare a "
"scrivere il tuo primo shader."

msgid "Your first CanvasItem shader"
msgstr "Il tuo primo shader CanvasItem"

msgid ""
"In Godot, all shaders start with a line specifying what type of shader they "
"are. It uses the following format:"
msgstr ""
"In Godot, tutti gli shader iniziano con una riga che specifica il tipo di "
"shader. Il formato utilizzato è il seguente:"

msgid ""
"Because we are writing a CanvasItem shader, we specify ``canvas_item`` in "
"the first line. All our code will go beneath this declaration."
msgstr ""
"Poiché stiamo scrivendo uno shader CanvasItem, specifichiamo ``canvas_item`` "
"nella prima riga. Tutto il nostro codice andrà sotto questa dichiarazione."

msgid ""
"This line tells the engine which built-in variables and functionality to "
"supply you with."
msgstr ""
"Questa riga indica al motore quali variabili e funzionalità integrate "
"fornirti."

msgid ""
"In Godot you can override three functions to control how the shader "
"operates; ``vertex``, ``fragment``, and ``light``. This tutorial will walk "
"you through writing a shader with both vertex and fragment functions. Light "
"functions are significantly more complex than vertex and fragment functions "
"and so will not be covered here."
msgstr ""
"In Godot è possibile sovrascrivere tre funzioni per controllare il "
"funzionamento dello shader: ``vertex``, ``fragment`` e ``light``. Questo "
"tutorial ti guiderà nella scrittura di uno shader con funzioni sia di "
"vertice sia di frammento. Le funzioni di luce sono vastamente più complesse "
"delle funzioni di vertice e frammento e pertanto non saranno trattate in "
"questo articolo."

msgid "Your first fragment function"
msgstr "La tua prima funzione fragment"

msgid ""
"The fragment function runs for every pixel in a Sprite2D and determines what "
"color that pixel should be."
msgstr ""
"La funzione fragment viene eseguita per ogni pixel in uno Sprite2D e "
"determina il colore che dovrebbe avere quel pixel."

msgid ""
"They are restricted to the pixels covered by the Sprite2D, that means you "
"cannot use one to, for example, create an outline around a Sprite2D."
msgstr ""
"Sono limitati ai pixel coperti dallo Sprite2D, il che significa che non è "
"possibile utilizzarne uno, ad esempio, per creare un contorno attorno a uno "
"Sprite2D."

msgid ""
"The most basic fragment function does nothing except assign a single color "
"to every pixel."
msgstr ""
"La funzione di frammento più basilare non fa altro che assegnare un singolo "
"colore a ogni pixel."

msgid ""
"For more information about usage see the :ref:`Shading Language doc "
"<doc_shading_language>`."
msgstr ""
"Per maggiori informazioni sull'uso vedi :ref:`Shading Language doc "
"<doc_shading_language>`."

msgid "Conclusion"
msgstr "Conclusione"
