#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Import plugins"
msgstr "Estensioni di importazione"

msgid ""
"This tutorial assumes you already know how to make generic plugins. If in "
"doubt, refer to the :ref:`doc_making_plugins` page. This also assumes you "
"are acquainted with Godot's import system."
msgstr ""
"Questo tutorial presuppone che si sappia già come creare estensioni "
"generici. Se in dubbio, consultare la pagina :ref:`doc_making_plugins`. Si "
"presume anche che si abbia familiarità con il sistema di importazione di "
"Godot."

msgid "Introduction"
msgstr "Introduzione"

msgid ""
"This tutorial shows how to create an import plugin to load a custom text "
"file as a material resource. This text file will contain three numeric "
"values separated by comma, which represents the three channels of a color, "
"and the resulting color will be used as the albedo (main color) of the "
"imported material. In this example it contains the pure blue color (zero "
"red, zero green, and full blue):"
msgstr ""
"Questo tutorial mostra come creare un'estensione di importazione per "
"caricare un file di testo personalizzato come risorsa materiale. Questo file "
"di testo conterrà tre valori numerici separati da virgola, che rappresentano "
"i tre canali di un colore, e il colore risultante sarà utilizzato come "
"albedo (colore principale) del materiale importato. In questo esempio "
"contiene il colore blu puro (zero rosso, zero verde e blu pieno):"

msgid "Configuration"
msgstr "Conﬁgurazione"

msgid ""
"First we need a generic plugin that will handle the initialization and "
"destruction of our import plugin. Let's add the ``plugin.cfg`` file first:"
msgstr ""
"Prima di tutto, abbiamo bisogno di un'estensione generica che gestisca "
"l'inizializzazione e la distruzione della nostra estensione di importazione. "
"Aggiungiamo prima il file ``plugin.cfg``:"

msgid ""
"Then we need the ``material_import.gd`` file to add and remove the import "
"plugin when needed:"
msgstr ""
"Quindi abbiamo bisogno del file ``material_import.gd`` per aggiungere e "
"rimuovere l'estensione di importazione quando necessario:"

msgid ""
"When this plugin is activated, it will create a new instance of the import "
"plugin (which we'll soon make) and add it to the editor using "
"the :ref:`add_import_plugin() <class_EditorPlugin_method_add_import_plugin>` "
"method. We store a reference to it in a class member ``import_plugin`` so we "
"can refer to it later when removing it. The :ref:`remove_import_plugin() "
"<class_EditorPlugin_method_remove_import_plugin>` method is called when the "
"plugin is deactivated to clean up the memory and let the editor know the "
"import plugin isn't available anymore."
msgstr ""
"Quando questa estensione viene attivata, creerà una nuova istanza "
"dell'estensione di importazione (che realizzeremo a breve) e la aggiungerà "
"all'editor attraverso il metodo :ref:`add_import_plugin() "
"<class_EditorPlugin_method_add_import_plugin>`. Memorizziamo un riferimento "
"ad essa in un membro della classe ``import_plugin`` in modo da poterla "
"utilizzare in seguito quando la rimuoviama. Il "
"metodo :ref:`remove_import_plugin() "
"<class_EditorPlugin_method_remove_import_plugin>` viene chiamato quando "
"l'estensione viene disattivata per liberare memoria e informare l'editor che "
"l'estensione di importazione non è più disponibile."

msgid ""
"Note that the import plugin is a reference type, so it doesn't need to be "
"explicitly released from memory with the ``free()`` function. It will be "
"released automatically by the engine when it goes out of scope."
msgstr ""
"Si noti che l'estensione di importazione è un tipo di riferimento, quindi "
"non è necessario rilasciarlo esplicitamente dalla memoria con la funzione "
"``free()``. Sarà rilasciato automaticamente dal motore quando non è più in "
"uso."

msgid "The EditorImportPlugin class"
msgstr "La classe EditorImportPlugin"

msgid ""
"The main character of the show is the :ref:`EditorImportPlugin class "
"<class_EditorImportPlugin>`. It is responsible for implementing the methods "
"that are called by Godot when it needs to know how to deal with files."
msgstr ""
"Il personaggio principale dello spettacolo è la :ref:`classe "
"EditorImportPlugin <class_EditorImportPlugin>`. È responsabile di "
"implementare i metodi chiamati da Godot quando deve sapere come gestire i "
"file."

msgid "Let's begin to code our plugin, one method at time:"
msgstr "Cominciamo a programmare la nostra estensione, un metodo alla volta:"

msgid ""
"The first method is "
"the :ref:`_get_importer_name()<class_EditorImportPlugin_private_method__get_importer_name>`. "
"This is a unique name for your plugin that is used by Godot to know which "
"import was used in a certain file. When the files needs to be reimported, "
"the editor will know which plugin to call."
msgstr ""
"Il primo metodo "
"è :ref:`_get_importer_name()<class_EditorImportPlugin_private_method__get_importer_name>`. "
"Questo è un nome univoco per l'estensione, utilizzato da Godot per "
"identificare quale importazione è stata utilizzata in un determinato file. "
"Quando i file si devono reimportare, l'editor saprà quale estensione "
"chiamare."

msgid ""
"The :ref:`_get_visible_name()<class_EditorImportPlugin_private_method__get_visible_name>` "
"method is responsible for returning the name of the type it imports and it "
"will be shown to the user in the Import dock."
msgstr ""
"Il "
"metodo :ref:`_get_visible_name()<class_EditorImportPlugin_private_method__get_visible_name>` "
"è responsabile di restituire il nome del tipo importato e sarà mostrato "
"all'utente nel pannello di importazione."

msgid ""
"You should choose this name as a continuation to \"Import as\", e.g. "
"*\"Import as Silly Material\"*. You can name it whatever you want but we "
"recommend a descriptive name for your plugin."
msgstr ""
"Si dovrebbe scegliere questo nome come continuazione di \"Importa come\", ad "
"esempio *\"Importa come Materiale ridicolo\"*. Il nome da dargli è a "
"piacere, ma consigliamo un nome descrittivo per la propria estensione."

msgid ""
"Godot's import system detects file types by their extension. In "
"the :ref:`_get_recognized_extensions()<class_EditorImportPlugin_private_method__get_recognized_extensions>` "
"method you return an array of strings to represent each extension that this "
"plugin can understand. If an extension is recognized by more than one "
"plugin, the user can select which one to use when importing the files."
msgstr ""
"Il sistema di importazione di Godot rileva i tipi di file in base alla loro "
"estensione. Nel "
"metodo :ref:`_get_recognized_extensions()<class_EditorImportPlugin_private_method__get_recognized_extensions>` "
"si restituisce un array di stringhe per rappresentare ciascuna estensione "
"che questa estensione può riconoscere. Se un'estensione è riconosciuta da "
"più di una estensione, l'utente può selezionare quale utilizzare "
"all'importazione dei file."

msgid ""
"Common extensions like ``.json`` and ``.txt`` might be used by many plugins. "
"Also, there could be files in the project that are just data for the game "
"and should not be imported. You have to be careful when importing to "
"validate the data. Never expect the file to be well-formed."
msgstr ""
"Estensioni comuni come ``.json`` e ``.txt`` potrebbero essere utilizzate da "
"molte estensioni. Inoltre, potrebbero esserci file nel progetto che "
"contengono solo dati per il gioco e non si dovrebbero importare. È "
"necessario prestare attenzione durante l'importazione per convalidare i "
"dati. Non aspettarsi mai che il file sia ben formato."

msgid ""
"The imported files are saved in the ``.import`` folder at the project's "
"root. Their extension should match the type of resource you are importing, "
"but since Godot can't tell what you'll use (because there might be multiple "
"valid extensions for the same resource), you need to declare what will be "
"used in the import."
msgstr ""
"I file importati sono salvati nella cartella ``.import`` alla radice del "
"progetto. La loro estensione dovrebbe corrispondere al tipo di risorsa che "
"si sta importando, ma poiché Godot non può dire quale sarà usata (perché "
"potrebbero esserci più estensioni valide per la stessa risorsa), è "
"necessario dichiarare cosa sarà utilizzato nell'importazione."

msgid ""
"Since we're importing a Material, we'll use the special extension for such "
"resource types. If you are importing a scene, you can use ``scn``. Generic "
"resources can use the ``res`` extension. However, this is not enforced in "
"any way by the engine."
msgstr ""
"Dato che stiamo importando un materiale, useremo l'estensione speciale per "
"questo tipo di risorse. Se si importa una scena, è possibile usare ``scn``. "
"Le risorse generiche possono usare l'estensione ``res``. Tuttavia, il motore "
"non obbliga in alcun modo questa opzione."

msgid ""
"The imported resource has a specific type, so the editor can know which "
"property slot it belongs to. This allows drag and drop from the FileSystem "
"dock to a property in the Inspector."
msgstr ""
"La risorsa importata ha un tipo specifico, perciò l'editor può sapere a "
"quale slot di proprietà appartiene. Questo consente di trascinare una "
"risorsa dal pannello FileSystem a una proprietà nell'Ispettore."

msgid ""
"In our case it's a :ref:`class_StandardMaterial3D`, which can be applied to "
"3D objects."
msgstr ""
"Nel nostro caso è uno :ref:`class_StandardMaterial3D`, che può essere "
"applicato agli oggetti 3D."

msgid ""
"If you need to import different types from the same extension, you have to "
"create multiple import plugins. You can abstract the import code on another "
"file to avoid duplication in this regard."
msgstr ""
"Se si devono importare tipi diversi dalla stessa estensione, è necessario "
"creare più estensioni di importazione. Si può astrarre il codice di "
"importazione in un altro file per evitare duplicazioni al riguardo."

msgid "Options and presets"
msgstr "Opzioni e preimpostazioni"

msgid ""
"Your plugin can provide different options to allow the user to control how "
"the resource will be imported. If a set of selected options is common, you "
"can also create different presets to make it easier for the user. The "
"following image shows how the options will appear in the editor:"
msgstr ""
"La propria estensione può offrire diverse opzioni per consentire all'utente "
"di controllare come la risorsa sarà importata. Se un insieme di opzioni "
"selezionate è comune, è anche possibile creare diverse preimpostazioni per "
"semplificare la procedura. L'immagine seguente mostra come appariranno le "
"opzioni nell'editor:"

msgid ""
"Since there might be many presets and they are identified with a number, "
"it's a good practice to use an enum so you can refer to them using names."
msgstr ""
"Poiché potrebbero esserci molte preimpostazioni e sono identificati da un "
"numero, è una buona norma utilizzare un enumerazione in modo da poterci fare "
"riferimento per nome."

msgid ""
"Now that the enum is defined, let's keep looking at the methods of an import "
"plugin:"
msgstr ""
"Ora che l'enumerazione è definita, continuiamo a esaminare i metodi di "
"un'estensione di importazione:"

msgid ""
"The :ref:`_get_preset_count() "
"<class_EditorImportPlugin_private_method__get_preset_count>` method returns "
"the amount of presets that this plugins defines. We only have one preset "
"now, but we can make this method future-proof by returning the size of our "
"``Presets`` enumeration."
msgstr ""
"Il metodo :ref:`_get_preset_count() "
"<class_EditorImportPlugin_private_method__get_preset_count>` restituisce il "
"numero di preimpostazioni definite da questa estensione. Al momento abbiamo "
"una sola preimpostazione, ma possiamo rendere questo metodo a prova di "
"futuro restituendo la dimensione della nostra enumerazione ``Presets``."

msgid ""
"Here we have the :ref:`_get_preset_name() "
"<class_EditorImportPlugin_private_method__get_preset_name>` method, which "
"gives names to the presets as they will be presented to the user, so be sure "
"to use short and clear names."
msgstr ""
"Qui abbiamo il metodo :ref:`_get_preset_name() "
"<class_EditorImportPlugin_private_method__get_preset_name>`, che assegna i "
"nomi alle preimpostazioni così come saranno presentati all'utente, quindi "
"assicurarsi di usare nomi brevi e chiari."

msgid ""
"We can use the ``match`` statement here to make the code more structured. "
"This way it's easy to add new presets in the future. We use the catch all "
"pattern to return something too. Although Godot won't ask for presets beyond "
"the preset count you defined, it's always better to be on the safe side."
msgstr ""
"Possiamo usare l'istruzione ``match`` qui per rendere il codice più "
"strutturato. In questo modo sarà facile aggiungere nuove preimpostazioni in "
"futuro. Usiamo anche il pattern catch-all per restituire qualcosa. Anche se "
"Godot non richiederà preimpostazioni oltre il numero di preimpostazioni "
"definito, è sempre meglio andare sul sicuro."

msgid ""
"If you have only one preset you could simply return its name directly, but "
"if you do this you have to be careful when you add more presets."
msgstr ""
"Se c'è una sola preimpostazione, è concesso restituirne direttamente il "
"nome, ma facendo questo bisogna fare attenzione quando se ne aggiungono "
"altri."

msgid ""
"This is the method which defines the available "
"options. :ref:`_get_import_options() "
"<class_EditorImportPlugin_private_method__get_import_options>` returns an "
"array of dictionaries, and each dictionary contains a few keys that are "
"checked to customize the option as its shown to the user. The following "
"table shows the possible keys:"
msgstr ""
"Questo è il metodo che definisce le opzioni "
"disponibili. :ref:`_get_import_options() "
"<class_EditorImportPlugin_private_method__get_import_options>` restituisce "
"un array di dizionari, ognuno dei quali contiene alcune chiavi che vengono "
"controllate per personalizzare le opzioni visualizzate dall'utente. La "
"tabella seguente mostra le possibili chiavi:"

msgid "Key"
msgstr "Chiave"

msgid "Type"
msgstr "Tipo"

msgid "Description"
msgstr "Descrizione"

msgid "``name``"
msgstr "``name``"

msgid "String"
msgstr "Stringa"

msgid ""
"The name of the option. When showed, underscores become spaces and first "
"letters are capitalized."
msgstr ""
"Il nome dell'opzione. Quando viene mostrata, i trattini bassi diventano "
"spazi e le prime lettere sono scritte in maiuscolo."

msgid "``default_value``"
msgstr "``default_value``"

msgid "Any"
msgstr "Qualsiasi"

msgid "The default value of the option for this preset."
msgstr "Il valore predefinito dell'opzione per questa preimpostazione."

msgid "``property_hint``"
msgstr "``property_hint``"

msgid "Enum value"
msgstr "Valore di enumerazione"

msgid ""
"One of the :ref:`PropertyHint <enum_@GlobalScope_PropertyHint>` values to "
"use as hint."
msgstr ""
"Uno dei valori di :ref:`PropertyHint <enum_@GlobalScope_PropertyHint>` da "
"usare come indicazione."

msgid "``hint_string``"
msgstr "``hint_string``"

msgid ""
"The hint text of the property. The same as you'd add in the ``export`` "
"statement in GDScript."
msgstr ""
"Il testo indicativo della proprietà. Lo stesso che si aggiungerebbe "
"nell'istruzione ``export`` in GDScript."

msgid "``usage``"
msgstr "``usage``"

msgid ""
"One of the :ref:`PropertyUsageFlags <enum_@GlobalScope_PropertyUsageFlags>` "
"values to define the usage."
msgstr ""
"Uno dei valori di :ref:`PropertyUsageFlags "
"<enum_@GlobalScope_PropertyUsageFlags>` per definire l'utilizzo."

msgid ""
"The ``name`` and ``default_value`` keys are **mandatory**, the rest are "
"optional."
msgstr ""
"Le chiavi ``name`` e ``default_value`` sono **obbligatorie**, le altre sono "
"facoltative."

msgid ""
"Note that the ``_get_import_options`` method receives the preset number, so "
"you can configure the options for each different preset (especially the "
"default value). In this example we use the ``match`` statement, but if you "
"have lots of options and the presets only change the value you may want to "
"create the array of options first and then change it based on the preset."
msgstr ""
"Si noti che il metodo ``_get_import_options`` riceve il numero di "
"preimpostazioni, in modo da poter configurare le opzioni per ogni "
"preimpostazione (in particolare il valore predefinito). In questo esempio "
"utilizziamo l'istruzione ``match``, ma se si hanno molte opzioni e le "
"preimpostazioni cambiano solo il valore, si consiglia di creare prima "
"l'array di opzioni e poi modificarlo in base alla preimpostazione."

msgid ""
"The ``_get_import_options`` method is called even if you don't define "
"presets (by making ``_get_preset_count`` return zero). You have to return an "
"array even it's empty, otherwise you can get errors."
msgstr ""
"Il metodo ``_get_import_options`` viene chiamato anche se non si definiscono "
"preimpostazioni (facendo in modo che ``_get_preset_count`` restituisca "
"zero). È necessario restituire un array anche se è vuoto, altrimenti si "
"potrebbero verificare errori."

msgid ""
"For the :ref:`_get_option_visibility() "
"<class_EditorImportPlugin_private_method__get_option_visibility>` method, we "
"simply return ``true`` because all of our options (i.e. the single one we "
"defined) are visible all the time."
msgstr ""
"Per il metodo :ref:`_get_option_visibility() "
"<class_EditorImportPlugin_private_method__get_option_visibility>`, "
"restituiamo semplicemente ``true`` perché tutte le nostre opzioni (vale a "
"dire l'unica che abbiamo definito) sono visibili tutto il tempo."

msgid ""
"If you need to make certain option visible only if another is set with a "
"certain value, you can add the logic in this method."
msgstr ""
"Se è necessario rendere certe opzioni visibili solo se un'altra è impostata "
"su un determinato valore, è possibile aggiungere la logica in questo metodo."

msgid "The ``import`` method"
msgstr "Il metodo ``import``"

msgid ""
"The heavy part of the process, responsible for converting the files into "
"resources, is covered by the :ref:`_import() "
"<class_EditorImportPlugin_private_method__import>` method. Our sample code "
"is a bit long, so let's split in a few parts:"
msgstr ""
"La parte più pesante del processo, responsabile della conversione dei file "
"in risorse, è gestita dal metodo :ref:`_import() "
"<class_EditorImportPlugin_private_method__import>`. Il nostro codice di "
"esempio è un po' lungo, quindi dividiamolo in più parti:"

msgid ""
"The first part of our import method opens and reads the source file. We use "
"the :ref:`FileAccess <class_FileAccess>` class to do that, passing the "
"``source_file`` parameter which is provided by the editor."
msgstr ""
"La prima parte del nostro metodo di importazione apre e legge il file "
"sorgente. Utilizziamo la classe :ref:`FileAccess <class_FileAccess>`, "
"passando il parametro ``source_file`` che è fornito dall'editor."

msgid ""
"If there's an error when opening the file, we return it to let the editor "
"know that the import wasn't successful."
msgstr ""
"Se si verifica un errore all'apertura del file, lo restituiamo per informare "
"l'editor che l'importazione non è avvenuta con successo."

msgid ""
"This code takes the line of the file it read before and splits it in pieces "
"that are separated by a comma. If there are more or less than the three "
"values, it considers the file invalid and reports an error."
msgstr ""
"Questo codice prende la riga del file letta in precedenza e la divide in "
"parti separate da una virgola. Se i valori sono più o meno di tre, considera "
"il file non valido e segnala un errore."

msgid ""
"Then it creates a new :ref:`Color <class_Color>` variable and sets its "
"values according to the input file. If the ``use_red_anyway`` option is "
"enabled, then it sets the color as a pure red instead."
msgstr ""
"Poi crea una nuova variabile :ref:`Color <class_Color>` e ne imposta i "
"valori in base al file di input. Se l'opzione ``use_red_anyway`` è "
"abilitata, imposta invece il colore come rosso puro."

msgid ""
"This part makes a new :ref:`StandardMaterial3D <class_StandardMaterial3D>` "
"that is the imported resource. We create a new instance of it and then set "
"its albedo color as the value we got before."
msgstr ""
"Questa parte crea un nuovo :ref:`StandardMaterial3D "
"<class_StandardMaterial3D>` che è la risorsa importata. Ne creiamo una nuova "
"istanza e ne impostiamo il colore dell'albedo con il valore ottenuto in "
"precedenza."

msgid ""
"This is the last part and quite an important one, because here we save the "
"made resource to the disk. The path of the saved file is generated and "
"informed by the editor via the ``save_path`` parameter. Note that this comes "
"**without** the extension, so we add it using :ref:`string formatting "
"<doc_gdscript_printf>`. For this we call the ``_get_save_extension`` method "
"that we defined earlier, so we can be sure that they won't get out of sync."
msgstr ""
"Questa è l'ultima parte, ed è piuttosto importante, perché qui salviamo la "
"risorsa creata sul disco. Il percorso del file salvato viene generato e "
"comunicato dall'editor tramite il parametro ``save_path``. Si noti che "
"questo percorso è **senza** l'estensione, quindi la aggiungiamo tramite "
"una :ref:`formattazione di stringa <doc_gdscript_printf>`. Per questo, "
"chiamiamo il metodo ``_get_save_extension`` che abbiamo definito in "
"precedenza, in modo da essere sicuri che non si desincronizzino."

msgid ""
"We also return the result from the :ref:`ResourceSaver.save() "
"<class_ResourceSaver_method_save>` method, so if there's an error in this "
"step, the editor will know about it."
msgstr ""
"Restituiamo anche il risultato del metodo :ref:`ResourceSaver.save() "
"<class_ResourceSaver_method_save>`, quindi se si verifica un errore in "
"questo passaggio, l'editor ne sarà a conoscenza."

msgid "Platform variants and generated files"
msgstr "Varianti di piattaforma e file generati"

msgid ""
"You may have noticed that our plugin ignored two arguments of the ``import`` "
"method. Those are *return arguments* (hence the ``r`` at the beginning of "
"their name), which means that the editor will read from them after calling "
"your import method. Both of them are arrays that you can fill with "
"information."
msgstr ""
"Si potrebbe aver notato che il nostro plugin ha ignorato due argomenti del "
"metodo ``import``. Questi sono *argomenti di ritorno* (da cui la ``r`` "
"all'inizio del loro nome), il che significa che l'editor leggerà da essi "
"dopo aver chiamato il metodo di importazione. Entrambi sono array che si "
"possono riempire con informazioni."

msgid ""
"The ``r_platform_variants`` argument is used if you need to import the "
"resource differently depending on the target platform. While it's called "
"*platform* variants, it is based on the presence of :ref:`feature tags "
"<doc_feature_tags>`, so even the same platform can have multiple variants "
"depending on the setup."
msgstr ""
"L'argomento ``r_platform_variants`` è utilizzato se è necessario importare "
"la risorsa in modo diverso a seconda della piattaforma di destinazione. "
"Sebbene si chiami varianti di *piattaforma*, si basa sulla presenza "
"delle :ref:`tag di funzionalità <doc_feature_tags>`, quindi anche la stessa "
"piattaforma può avere più varianti a seconda della configurazione."

msgid ""
"To import a platform variant, you need to save it with the feature tag "
"before the extension, and then push the tag to the ``r_platform_variants`` "
"array so the editor can know that you did."
msgstr ""
"Per importare una variante di piattaforma, è necessario salvarla con il tag "
"di funzionalità prima dell'estensione, quindi inserire il tag nell'array "
"``r_platform_variants`` in modo che l'editor possa sapere che è stato fatto."

msgid ""
"For example, let's say we save a different material for a mobile platform. "
"We would need to do something like the following:"
msgstr ""
"Ad esempio, supponiamo di salvare un materiale diverso per una piattaforma "
"mobile. Dovremmo fare qualcosa del genere:"

msgid ""
"The ``r_gen_files`` argument is meant for extra files that are generated "
"during your import process and need to be kept. The editor will look at it "
"to understand the dependencies and make sure the extra file is not "
"inadvertently deleted."
msgstr ""
"L'argomento ``r_gen_files`` è per i file aggiuntivi generati durante il "
"processo di importazione che si devono conservare. L'editor lo esaminerà per "
"comprenderne le dipendenze e assicurare che il file aggiuntivo non sia "
"eliminato inavvertitamente."

msgid ""
"This is also an array and should be filled with full paths of the files you "
"save. As an example, let's create another material for the next pass and "
"save it in a different file:"
msgstr ""
"Anche questo è un array e dovrebbe contenere i percorsi completi dei file "
"salvati. Ad esempio, creiamo un altro materiale per il prossimo passaggio e "
"salviamolo in un file diverso:"

msgid "Trying the plugin"
msgstr "Provare l'estensione"

msgid ""
"This has been theoretical, but now that the import plugin is done, let's "
"test it. Make sure you created the sample file (with the contents described "
"in the introduction section) and save it as ``test.mtxt``. Then activate the "
"plugin in the Project Settings."
msgstr ""
"Finora è stata tutta teoria, ma ora che l'estensione di importazione è "
"pronta, proviamola. Assicurarsi di aver creato il file di esempio (con i "
"contenuti descritti nella sezione introduttiva) e salvarlo come "
"``test.mtxt``. Quindi attivare l'estensione nelle Impostazioni del progetto."

msgid ""
"If everything goes well, the import plugin is added to the editor and the "
"file system is scanned, making the custom resource appear on the FileSystem "
"dock. If you select it and focus the Import dock, you can see the only "
"option to select there."
msgstr ""
"Se tutto va bene, l'estensione di importazione viene aggiunto all'editor e "
"il file system viene scansionato, facendo apparire la risorsa personalizzata "
"nel pannello FileSystem. Selezionandola e focalizzando il pannello "
"Importazione, si può vedere l'unica opzione selezionabile."

msgid ""
"Create a MeshInstance3D node in the scene, and for its Mesh property set up "
"a new SphereMesh. Unfold the Material section in the Inspector and then drag "
"the file from the FileSystem dock to the material property. The object will "
"update in the viewport with the blue color of the imported material."
msgstr ""
"Creare un nodo MeshInstance3D nella scena e impostare un nuovo SphereMesh "
"per la sua proprietà Mesh. Espandere la sezione Material nell'Ispettore e "
"trascinare il file dal pannello FileSystem alla proprietà material. "
"L'oggetto verrà aggiornato nella viewport con il colore blu del materiale "
"importato."

msgid ""
"Go to Import dock, enable the \"Use Red Anyway\" option, and click on "
"\"Reimport\". This will update the imported material and should "
"automatically update the view showing the red color instead."
msgstr ""
"Andare al pannello di importazione, attivare l'opzione \"Use Red Anyway\" e "
"cliccare su \"Reimporta\". Ciò aggiornerà il materiale importato e dovrebbe "
"aggiornare automaticamente la vista mostrando il colore rosso."
