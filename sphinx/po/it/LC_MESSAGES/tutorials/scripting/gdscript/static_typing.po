#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Static typing in GDScript"
msgstr "Tipizzazione statica in GDScript"

msgid "In this guide, you will learn:"
msgstr "In questa guida imparerai:"

msgid "how to use static typing in GDScript;"
msgstr "come utilizzare la tipizzazione statica in GDScript;"

msgid "that static types can help you avoid bugs;"
msgstr "che la tipizzazione statica può aiutarti a evitare bug;"

msgid "that static typing improves your experience with the editor."
msgstr "che la tipizzazione statica migliora la tua esperienza con l'editor."

msgid ""
"Where and how you use this language feature is entirely up to you: you can "
"use it only in some sensitive GDScript files, use it everywhere, or don't "
"use it at all."
msgstr ""
"Dove e come usare questa nuova funzionalità del linguaggio dipende "
"completamente da te: puoi usarla solo in certi file GDScript sensibili, "
"dappertutto o non usarla affatto."

msgid ""
"Static types can be used on variables, constants, functions, parameters, and "
"return types."
msgstr ""
"La tipizzazione statica può essere usata su variabili, costanti, funzioni, "
"parametri e tipi restituiti."

msgid "A brief look at static typing"
msgstr "Un breve sguardo alla tipizzazione statica"

msgid ""
"With static typing, GDScript can detect more errors without even running the "
"code. Also type hints give you and your teammates more information as you're "
"working, as the arguments' types show up when you call a method. Static "
"typing improves editor autocompletion and :ref:`documentation "
"<doc_gdscript_documentation_comments>` of your scripts."
msgstr ""
"Grazie alla tipizzazione statica, GDScript può rilevare più errori senza "
"nemmeno eseguire il codice. Inoltre, i suggerimenti sui tipi forniscono a te "
"e ai tuoi colleghi più informazioni mentre programmate, poiché i tipi degli "
"argomenti appaiono quando chiamate un metodo. La tipizzazione statica "
"migliora il completamento automatico dell'editor e la :ref:`documentazione "
"<doc_gdscript_documentation_comments>` dei tuoi script."

msgid ""
"Imagine you're programming an inventory system. You code an ``Item`` class, "
"then an ``Inventory``. To add items to the inventory, the people who work "
"with your code should always pass an ``Item`` to the ``Inventory.add()`` "
"method. With types, you can enforce this::"
msgstr ""
"Immagina di programmare un sistema di inventario. Programmi una classe "
"``Item``, poi un ``Inventory``. Per aggiungere elementi all'inventario, le "
"persone che lavorano con il tuo codice devono sempre passare un oggetto di "
"tipo ``Item`` al metodo ``Inventory.add()``. Con la tipizzazione, ciò si può "
"imporre:"

msgid ""
"Static types also give you better code completion options. Below, you can "
"see the difference between a dynamic and a static typed completion options."
msgstr ""
"La tipizzazione statica inoltre fornisce migliori opzioni di completamento "
"del codice. Di seguito, puoi vedere la differenza tra le opzioni di "
"completamento di tipo dinamico e di tipo statico."

msgid ""
"You've probably encountered a lack of autocomplete suggestions after a dot:"
msgstr ""
"Hai probabilmente riscontrato la mancanza di suggerimenti di completamento "
"automatico dopo un punto:"

msgid "Completion options for dynamic typed code."
msgstr "Opzioni di completamento per il codice dinamicamente tipizzato."

msgid ""
"This is due to dynamic code. Godot cannot know what value type you're "
"passing to the function. If you write the type explicitly however, you will "
"get all methods, properties, constants, etc. from the value:"
msgstr ""
"Questo è per via della tipizzazione dinamica. Godot non può sapere quale "
"nodo o tipo stai passando alla funzione. Tuttavia, se dichiari il tipo "
"esplicitamente, otterrai tutti i metodi, proprietà, costanti, ecc. dal "
"valore:"

msgid "Completion options for static typed code."
msgstr "Opzioni di completamento per il codice staticamente tipizzato."

msgid ""
"If you prefer static typing, we recommend enabling the **Text Editor > "
"Completion > Add Type Hints** editor setting. Also consider enabling `some "
"warnings <Warning system_>`_ that are disabled by default."
msgstr ""
"Se preferisci la tipizzazione statica, ti consigliamo di abilitare "
"l'impostazione **Editor di testo > Completamento > Aggiungi suggerimenti del "
"tipo**. Considera anche di abilitare `alcuni avvertimenti <Warning "
"system_>`_ che sono disabilitati come predefiniti."

msgid ""
"Also, typed GDScript improves performance by using optimized opcodes when "
"operand/argument types are known at compile time. More GDScript "
"optimizations are planned in the future, such as JIT/AOT compilation."
msgstr ""
"Inoltre, il GDScript tipizzato migliora le prestazioni utilizzando opcode "
"ottimizzati quando i tipi di operandi/argomenti sono noti in fase di "
"compilazione. Sono previste ulteriori ottimizzazioni di GDScript in futuro, "
"come la compilazione JIT/AOT."

msgid ""
"Overall, typed programming gives you a more structured experience. It helps "
"prevent errors and improves the self-documenting aspect of your scripts. "
"This is especially helpful when you're working in a team or on a long-term "
"project: studies have shown that developers spend most of their time reading "
"other people's code, or scripts they wrote in the past and forgot about. The "
"clearer and the more structured the code, the faster it is to understand, "
"the faster you can move forward."
msgstr ""
"In generale, la programmazione tipizzata offre un'esperienza più "
"strutturata. Aiuta a prevenire gli errori e migliora l'aspetto auto-"
"documentante degli script. Questo è particolarmente utile quando si lavora "
"in team o su progetti a lungo termine: studi hanno dimostrato che gli "
"sviluppatori trascorrono la maggior parte del tempo a leggere il codice di "
"altri o script scritti in passato e dimenticati. Più il codice è chiaro e "
"strutturato, più è veloce da comprendere e più velocemente si può procedere."

msgid "How to use static typing"
msgstr "Come utilizzare la tipizzazione statica"

msgid ""
"To define the type of a variable, parameter, or constant, write a colon "
"after the name, followed by its type. E.g. ``var health: int``. This forces "
"the variable's type to always stay the same::"
msgstr ""
"Per definire il tipo di una variabile, un parametro o una costante, scrivi "
"due punti dopo il nome, seguito dal suo tipo. Ad esempio, ``var health: "
"int``. Questo forza il tipo della variabile a rimanere sempre lo stesso::"

msgid ""
"Godot will try to infer types if you write a colon, but you omit the type::"
msgstr ""
"Godot proverà a dedurre il tipo se scrivi i due punti, ma ometti il tipo::"

msgid "There is no difference between ``=`` and ``:=`` for constants."
msgstr "Non c'è differenza tra ``=`` e ``:=`` per le costanti."

msgid ""
"You don't need to write type hints for constants, as Godot sets it "
"automatically from the assigned value. But you can still do so to make the "
"intent of your code clearer. Also, this is useful for typed arrays (like "
"``const A: Array[int] = [1, 2, 3]``), since untyped arrays are used by "
"default."
msgstr ""
"Non è necessario scrivere suggerimenti di tipo per le costanti, poiché Godot "
"le imposta automaticamente in base al valore assegnato. Tuttavia, è comunque "
"possibile farlo per rendere più chiaro l'intento del codice. Inoltre, questo "
"è utile per gli array tipizzati (come ``const A: Array[int] = [1, 2, 3]``), "
"poiché normalmente gli array non sono tipizzati."

msgid "What can be a type hint"
msgstr "Cosa può essere un suggerimento del tipo"

msgid "Here is a complete list of what can be used as a type hint:"
msgstr ""
"Ecco un elenco completo di ciò che si può utilizzare come suggerimento del "
"tipo:"

msgid ""
"``Variant``. Any type. In most cases this is not much different from an "
"untyped declaration, but increases readability. As a return type, forces the "
"function to explicitly return some value."
msgstr ""
"``Variant``. Qualsiasi tipo. Nella maggior parte dei casi non è molto "
"diverso da una dichiarazione non tipizzata, ma aumenta la leggibilità. Come "
"tipo restituito, costringe la funzione a restituire esplicitamente un valore."

msgid ""
"*(Only return type)* ``void``. Indicates that the function does not return "
"any value."
msgstr ""
"*(Solo tipo restituito)* ``void``. Indica che la funzione non restituisce "
"alcun valore."

msgid ":ref:`Built-in types <doc_gdscript_builtin_types>`."
msgstr ":ref:`Tipi integrati <doc_gdscript_builtin_types>`."

msgid "Native classes (``Object``, ``Node``, ``Area2D``, ``Camera2D``, etc.)."
msgstr "Classi native (``Object``, ``Node``, ``Area2D``, ``Camera2D``, ecc.)."

msgid ":ref:`Global classes <doc_gdscript_basics_class_name>`."
msgstr ":ref:`Classi globali <doc_gdscript_basics_class_name>`."

msgid ":ref:`Inner classes <doc_gdscript_basics_inner_classes>`."
msgstr ":ref:`Classi interne <doc_gdscript_basics_inner_classes>`."

msgid ""
"Global, native and custom named enums. Note that an enum type is just an "
"``int``, there is no guarantee that the value belongs to the set of enum "
"values."
msgstr ""
"Enumerazioni denominate globali, native e personalizzate. Si noti che un "
"tipo di enumerazione è semplicemente un ``int``, non vi è alcuna garanzia "
"che il valore appartenga all'insieme dei valori nell'enumerazione."

msgid ""
"Constants (including local ones) if they contain a preloaded class or enum."
msgstr ""
"Costanti (comprese quelle locali) se contengono una classe o un'enumerazione "
"precaricata."

msgid ""
"You can use any class, including your custom classes, as types. There are "
"two ways to use them in scripts. The first method is to preload the script "
"you want to use as a type in a constant::"
msgstr ""
"Puoi usare qualsiasi classe, incluse le tue classi personalizzate, come "
"tipo. Ci sono due modi per usarle negli script. Il primo metodo consiste nel "
"precaricare in una costante lo script che vuoi usare come tipo::"

msgid ""
"The second method is to use the ``class_name`` keyword when you create. For "
"the example above, your ``rifle.gd`` would look like this::"
msgstr ""
"Il secondo metodo consiste nell'utilizzare la parola chiave ``class_name`` "
"nella creazione. Nell'esempio precedente, il file ``rifle.gd`` avrebbe "
"questo aspetto:"

msgid ""
"If you use ``class_name``, Godot registers the ``Rifle`` type globally in "
"the editor, and you can use it anywhere, without having to preload it into a "
"constant::"
msgstr ""
"Se si utilizza ``class_name``, Godot registra il tipo ``Rifle`` globalmente "
"nell'editor, e sarà possibile utilizzarlo ovunque, senza doverlo precaricare "
"in una costante::"

msgid "Specify the return type of a function with the arrow ``->``"
msgstr "Definisci il tipo restituito da una funzione con la freccia ``->``"

msgid ""
"To define the return type of a function, write a dash and a right angle "
"bracket ``->`` after its declaration, followed by the return type::"
msgstr ""
"Per definire il tipo restituito di una funzione, scrivi un trattino e una "
"parentesi angolare destra ``->`` dopo la sua dichiarazione, seguiti dal tipo "
"restituito:"

msgid ""
"The type ``void`` means the function does not return anything. You can use "
"any type, as with variables::"
msgstr ""
"Il tipo ``void`` significa che la funzione non restituisce nulla. È "
"possibile utilizzare qualsiasi tipo, come per le variabili:"

msgid "You can also use your own classes as return types::"
msgstr "Puoi anche utilizzare le tue classi come tipi restituiti:"

msgid "Covariance and contravariance"
msgstr "Covarianza e controvarianza"

msgid ""
"When inheriting base class methods, you should follow the `Liskov "
"substitution principle <https://en.wikipedia.org/wiki/"
"Liskov_substitution_principle>`__."
msgstr ""
"Quando si ereditano i metodi di una classe padre, si dovrebbe seguire il "
"`principio di sostituzione di Liskov <https://it.wikipedia.org/wiki/"
"Principio_di_sostituzione_di_Liskov>`__."

msgid ""
"**Covariance:** When you inherit a method, you can specify a return type "
"that is more specific (**subtype**) than the parent method."
msgstr ""
"**Covarianza:** quando si eredita un metodo, è possibile specificare un tipo "
"restituito più specifico (**sottotipo**) rispetto al metodo padre."

msgid ""
"**Contravariance:** When you inherit a method, you can specify a parameter "
"type that is less specific (**supertype**) than the parent method."
msgstr ""
"**Controvarianza:** quando si eredita un metodo, è possibile specificare un "
"tipo di parametro meno specifico (**supertipo**) rispetto al metodo padre."

msgid "Example::"
msgstr "Esempio::"

msgid "Specify the element type of an ``Array``"
msgstr "Definire il tipo degli elementi in un ``Array``"

msgid "To define the type of an ``Array``, enclose the type name in ``[]``."
msgstr ""
"Per definire il tipo di un ``Array``, racchiudere il nome del tipo tra "
"``[]``."

msgid ""
"An array's type applies to ``for`` loop variables, as well as some operators "
"like ``[]``, ``[]=``, and ``+``. Array methods (such as ``push_back``) and "
"other operators (such as ``==``) are still untyped. Built-in types, native "
"and custom classes, and enums may be used as element types. Nested array "
"types (like ``Array[Array[int]]``) are not supported."
msgstr ""
"Il tipo di un array si applica alle variabili del ciclo ``for``, così come "
"ad alcuni operatori come ``[]``, ``[]=`` e ``+``. I metodi degli array (come "
"``push_back``) e altri operatori (come ``==``) sono comunque non tipizzati. "
"Tipi integrati, classi native e personalizzate ed enumerazioni si possono "
"utilizzare come tipi degli elementi. I tipi di array annidati (come "
"``Array[Array[int]]``) non sono supportati."

msgid ""
"Since Godot 4.2, you can also specify a type for the loop variable in a "
"``for`` loop. For instance, you can write::"
msgstr ""
"A partire da Godot 4.2, è anche possibile specificare un tipo per la "
"variabile di ciclo in un ciclo ``for``. Ad esempio, si può scrivere:"

msgid ""
"The array will remain untyped, but the ``name`` variable within the ``for`` "
"loop will always be of ``String`` type."
msgstr ""
"L'array rimarrà non tipizzato, ma la variabile ``name`` all'interno del "
"ciclo ``for`` sarà sempre di tipo ``String``."

msgid "Type casting"
msgstr "Type casting"

msgid ""
"Type casting is an important concept in typed languages. Casting is the "
"conversion of a value from one type to another."
msgstr ""
"Il type casting è un concetto importante nei linguaggi tipizzati. Il casting "
"è la conversione di un valore da un tipo a un altro."

msgid ""
"Imagine an ``Enemy`` in your game, that ``extends Area2D``. You want it to "
"collide with the ``Player``, a ``CharacterBody2D`` with a script called "
"``PlayerController`` attached to it. You use the ``body_entered`` signal to "
"detect the collision. With typed code, the body you detect is going to be a "
"generic ``PhysicsBody2D``, and not your ``PlayerController`` on the "
"``_on_body_entered`` callback."
msgstr ""
"Immagina un ``Enemy`` nel tuo gioco, che ``extends Area2D``. Vuoi che entri "
"in collisione con il ``Player``, un ``CharacterBody2D`` con uno script "
"denominato ``PlayerController`` associato. Utilizzi il segnale "
"``body_entered`` per rilevare la collisione. Con codice tipizzato, il corpo "
"rilevato sarà un ``PhysicsBody2D`` generico, e non il tuo "
"``PlayerController`` sul callback ``_on_body_entered``."

msgid ""
"You can check if this ``PhysicsBody2D`` is your ``Player`` with the ``as`` "
"keyword, and using the colon ``:`` again to force the variable to use this "
"type. This forces the variable to stick to the ``PlayerController`` type::"
msgstr ""
"Puoi verificare se ``PhysicsBody2D`` è il tuo ``Player`` con la parola "
"chiave ``as`` e usando nuovamente i due punti ``:`` per forzare la variabile "
"a usare questo tipo. Ciò forza la variabile a rimanere di tipo "
"``PlayerController``::"

msgid ""
"As we're dealing with a custom type, if the ``body`` doesn't extend "
"``PlayerController``, the ``player`` variable will be set to ``null``. We "
"can use this to check if the body is the player or not. We will also get "
"full autocompletion on the player variable thanks to that cast."
msgstr ""
"Dato che abbiamo a che fare con un tipo personalizzato, se ``body`` non "
"estende ``PlayerController``, la variabile ``player`` verrà impostata a "
"``null``. Possiamo utilizzare questo per verificare se il corpo è il player "
"o meno. Otterremo anche il completamento automatico completo sulla variabile "
"player grazie a questa conversione."

msgid ""
"The ``as`` keyword silently casts the variable to ``null`` in case of a type "
"mismatch at runtime, without an error/warning. While this may be convenient "
"in some cases, it can also lead to bugs. Use the ``as`` keyword only if this "
"behavior is intended. A safer alternative is to use the ``is`` keyword::"
msgstr ""
"La parola chiave ``as`` converte silenziosamente la variabile a ``null`` in "
"caso di incompatibilità di tipo in fase di esecuzione, senza generare errori/"
"avvertimenti. Sebbene ciò sia comodo in alcuni casi, può anche causare bug. "
"Utilizzare la parola chiave ``as`` solo se si desidera questo comportamento. "
"Un'alternativa più sicura è utilizzare la parola chiave ``is``::"

msgid "You can also simplify the code by using the ``is not`` operator::"
msgstr ""
"È anche possibile semplificare il codice utilizzando l'operatore ``is not``:"

msgid "Alternatively, you can use the ``assert()`` statement::"
msgstr "In alternativa, è possibile utilizzare l'istruzione ``assert()``::"

msgid ""
"If you try to cast with a built-in type and it fails, Godot will throw an "
"error."
msgstr ""
"Se si tenta di convertire con un tipo integrato e l'operazione fallisce, "
"Godot genererà un errore."

msgid "Safe lines"
msgstr "Righe sicure"

msgid "Unsafe line (line 7) vs Safe Lines (line 6 and 8)"
msgstr "Riga non sicura (riga 7) vs Righe sicure (righe 6 e 8)"

msgid ""
"Safe lines do not always mean better or more reliable code. See the note "
"above about the ``as`` keyword. For example::"
msgstr ""
"Le righe sicure non sempre significano codice migliore o più affidabile. "
"Consultare la nota precedente sulla parola chiave ``as``. Per esempio:"

msgid ""
"Even though ``node_2`` declaration is marked as an unsafe line, it is more "
"reliable than ``node_1`` declaration. Because if you change the node type in "
"the scene and accidentally forget to change it in the script, the error will "
"be detected immediately when the scene is loaded. Unlike ``node_1``, which "
"will be silently cast to ``null`` and the error will be detected later."
msgstr ""
"Sebbene la dichiarazione di ``node_2`` sia contrassegnata come riga non "
"sicura, è più affidabile della dichiarazione di ``node_1``. Infatti, se si "
"modifica il tipo di nodo nella scena e si dimentica accidentalmente di "
"modificarlo nello script, l'errore verrà rilevato immediatamente al "
"caricamento della scena. A differenza di ``node_1``, che verrà "
"automaticamente convertito in ``null`` e l'errore verrà rilevato dopo."

msgid ""
"You can turn off safe lines or change their color in the editor settings."
msgstr ""
"È possibile disattivare le righe sicure o modificarne il colore nelle "
"impostazioni dell'editor."

msgid "Typed or dynamic: stick to one style"
msgstr "Tipizzazione statica o dinamica: attieniti a un unico stile"

msgid ""
"Typed code takes a little more writing, but you get the benefits we "
"discussed above. Here's an example of the same, empty script, in a dynamic "
"style::"
msgstr ""
"Il codice tipizzato richiede un po' più da scrivere, ma si ottengono i "
"vantaggi di cui abbiamo parlato sopra. Ecco un esempio dello stesso script "
"vuoto, in stile dinamico:"

msgid "And with static typing::"
msgstr "E con la tipizzazione statica::"

msgid ""
"As you can see, you can also use types with the engine's virtual methods. "
"Signal callbacks, like any methods, can also use types. Here's a "
"``body_entered`` signal in a dynamic style::"
msgstr ""
"Come puoi vedere, puoi usare i tipi anche con i metodi virtuali del motore. "
"Anche i callback dei segnali, come qualsiasi metodo, possono usare i tipi. "
"Ecco un segnale ``body_entered`` in stile dinamico::"

msgid "And the same callback, with type hints::"
msgstr "E lo stesso callback, con suggerimenti di tipo::"

msgid "Warning system"
msgstr "Sistema di avvertimento"

msgid ""
"Detailed documentation about the GDScript warning system has been moved "
"to :ref:`doc_gdscript_warning_system`."
msgstr ""
"La documentazione dettagliata sul sistema di avvertimento in GDScript è "
"stata spostata in :ref:`doc_gdscript_warning_system`."

msgid ""
"Godot gives you warnings about your code as you write it. The engine "
"identifies sections of your code that may lead to issues at runtime, but "
"lets you decide whether or not you want to leave the code as it is."
msgstr ""
"Godot emette avvertimenti mentre scrivi il tuo codice: il motore identifica "
"sezioni del tuo codice che potrebbero causare problemi in fase di "
"esecuzione, ma lascia a te decidere se mantenere il codice così com'è."

msgid ""
"We have a number of warnings aimed specifically at users of typed GDScript. "
"By default, these warnings are disabled, you can enable them in Project "
"Settings (**Debug > GDScript**, make sure **Advanced Settings** is enabled)."
msgstr ""
"Esistono una serie di avvisi rivolti specificamente agli utenti di GDScript "
"tipizzato. Normalmente, questi avvisi sono disabilitati; è possibile "
"abilitarli nelle Impostazioni del progetto (**Debug > GDScript**, "
"assicurandosi che **Impostazioni avanzate** sia abilitato)."

msgid ""
"You can enable the ``UNTYPED_DECLARATION`` warning if you want to always use "
"static types. Additionally, you can enable the ``INFERRED_DECLARATION`` "
"warning if you prefer a more readable and reliable, but more verbose syntax."
msgstr ""
"È possibile abilitare l'avvertimento ``UNTYPED_DECLARATION`` se si desidera "
"utilizzare sempre tipi statici. Inoltre, è possibile abilitare "
"l'avvertimento ``INFERRED_DECLARATION`` se si preferisce una sintassi più "
"leggibile e affidabile, ma più verbosa."

msgid ""
"``UNSAFE_*`` warnings make unsafe operations more noticeable, than unsafe "
"lines. Currently, ``UNSAFE_*`` warnings do not cover all cases that unsafe "
"lines cover."
msgstr ""
"Gli avvertimenti ``UNSAFE_*`` rendono le operazioni non sicure più evidenti "
"rispetto alle righe non sicure. Attualmente, gli avvertimenti ``UNSAFE_*`` "
"non coprono tutti i casi coperti dalle righe non sicure."

msgid "Common unsafe operations and their safe counterparts"
msgstr "Operazioni comuni non sicure e le loro controparti sicure"

msgid "``UNSAFE_PROPERTY_ACCESS`` and ``UNSAFE_METHOD_ACCESS`` warnings"
msgstr "Avvertimenti ``UNSAFE_PROPERTY_ACCESS`` e ``UNSAFE_METHOD_ACCESS``"

msgid ""
"In this example, we aim to set a property and call a method on an object "
"that has a script attached with ``class_name MyScript`` and that ``extends "
"Node2D``. If we have a reference to the object as a ``Node2D`` (for "
"instance, as it was passed to us by the physics system), we can first check "
"if the property and method exist and then set and call them if they do::"
msgstr ""
"In questo esempio, vogliamo impostare una proprietà e chiamare un metodo su "
"un oggetto a cui è associato uno script con ``class_name MyScript`` e che "
"``extends Node2D``. Se abbiamo un riferimento all'oggetto sotto forma di un "
"``Node2D`` (ad esempio, come ci è stato passato dal sistema di fisica), "
"possiamo prima verificare se la proprietà e il metodo esistono e poi "
"impostarli e chiamarli in tal caso::"

msgid ""
"However, this code will produce ``UNSAFE_PROPERTY_ACCESS`` and "
"``UNSAFE_METHOD_ACCESS`` warnings as the property and method are not present "
"in the referenced type - in this case a ``Node2D``. To make these operations "
"safe, you can first check if the object is of type ``MyScript`` using the "
"``is`` keyword and then declare a variable with the type ``MyScript`` on "
"which you can set its properties and call its methods::"
msgstr ""
"Tuttavia, questo codice genererà gli avvertimenti ``UNSAFE_PROPERTY_ACCESS`` "
"e ``UNSAFE_METHOD_ACCESS`` poiché la proprietà e il metodo non sono presenti "
"nel tipo referenziato, in questo caso ``Node2D``. Per rendere queste "
"operazioni sicure, è possibile prima verificare se l'oggetto è di tipo "
"``MyScript`` utilizzando la parola chiave ``is`` e poi dichiarare una "
"variabile di tipo ``MyScript`` su cui è possibile impostarne le proprietà e "
"chiamarne i metodi::"

msgid ""
"Alternatively, you can declare a variable and use the ``as`` operator to try "
"to cast the object. You'll then want to check whether the cast was "
"successful by confirming that the variable was assigned::"
msgstr ""
"Alternativamente, è possibile dichiarare una variabile e usare l'operatore "
"``as`` per provare a convertire l'oggetto. Sarà quindi necessario verificare "
"se la conversione è riuscita confermando che la variabile sia stata "
"assegnata::"

msgid "``UNSAFE_CAST`` warning"
msgstr "Avvertimento ``UNSAFE_CAST``"

msgid ""
"In this example, we would like the label connected to an object entering our "
"collision area to show the area's name. Once the object enters the collision "
"area, the physics system sends a signal with a ``Node2D`` object, and the "
"most straightforward (but not statically typed) solution to do what we want "
"could be achieved like this::"
msgstr ""
"In questo esempio, vorremmo che un ``Label`` collegato a un oggetto che "
"entra nella nostra area di collisione ne mostrasse il nome. Una volta che "
"l'oggetto entra nell'area di collisione, il sistema di fisica invia un "
"segnale con un oggetto ``Node2D`` e la soluzione più semplice (ma non "
"staticamente tipizzata) per ottenere ciò che desideriamo si potrebbe "
"ottenere in questo modo:"

msgid ""
"This piece of code produces an ``UNSAFE_PROPERTY_ACCESS`` warning because "
"``label`` is not defined in ``Node2D``. To solve this, we could first check "
"if the ``label`` property exist and cast it to type ``Label`` before "
"settings its text property like so::"
msgstr ""
"Questo frammento di codice genera un avvertimento ``UNSAFE_PROPERTY_ACCESS`` "
"perché ``label`` non è definito in ``Node2D``. Per risolvere questo "
"problema, potremmo prima verificare se la proprietà ``label`` esiste e "
"convertirla al tipo ``Label`` prima di impostare la sua proprietà text, in "
"questo modo::"

msgid ""
"However, this produces an ``UNSAFE_CAST`` warning because ``body.label`` is "
"of a ``Variant`` type. To safely get the property in the type you want, you "
"can use the ``Object.get()`` method which returns the object as a "
"``Variant`` value or returns ``null`` if the property doesn't exist. You can "
"then determine whether the property contains an object of the right type "
"using the ``is`` keyword, and finally declare a statically typed variable "
"with the object::"
msgstr ""
"Tuttavia, questo genera un avvertimento ``UNSAFE_CAST`` perché "
"``body.label`` è di tipo ``Variant``. Per ottenere in modo sicuro la "
"proprietà nel tipo desiderato, è possibile utilizzare il metodo "
"``Object.get()`` che restituisce l'oggetto sotto forma di un valore "
"``Variant`` o restituisce ``null`` se la proprietà non esiste. È quindi "
"possibile determinare se la proprietà contiene un oggetto del tipo corretto "
"tramite la parola chiave ``is`` e infine dichiarare una variabile "
"staticamente tipizzata con l'oggetto::"

msgid "Cases where you can't specify types"
msgstr "Casi in cui non è possibile specificare i tipi"

msgid ""
"To wrap up this introduction, let's mention cases where you can't use type "
"hints. This will trigger a **syntax error**."
msgstr ""
"Per concludere questa introduzione, accenniamo ai casi in cui non è "
"possibile utilizzare i suggerimenti di tipi. Questo genererà un **errore di "
"sintassi**."

msgid ""
"You can't specify the type of individual elements in an array or a "
"dictionary::"
msgstr ""
"Non è possibile specificare il tipo di singoli elementi in un array o in un "
"dizionario::"

msgid "Nested types are not currently supported::"
msgstr "I tipi annidati non sono attualmente supportati::"

msgid "Summary"
msgstr "Sommario"

msgid ""
"Typed GDScript is a powerful tool. It helps you write more structured code, "
"avoid common errors, and create scalable and reliable systems. Static types "
"improve GDScript performance and more optimizations are planned for the "
"future."
msgstr ""
"GDScript tipizzato è uno strumento potente. Aiuta a scrivere codice più "
"strutturato, evitare errori comuni e creare sistemi scalabili e affidabili. "
"I tipi statici migliorano le prestazioni di GDScript e sono previste "
"ulteriori ottimizzazioni per il futuro."
