#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "When and how to avoid using nodes for everything"
msgstr "Quando e come evitare di utilizzare i nodi per tutto"

msgid ""
"Nodes are cheap to produce, but even they have their limits. A project may "
"have tens of thousands of nodes all doing things. The more complex their "
"behavior though, the larger the strain each one adds to a project's "
"performance."
msgstr ""
"I nodi sono economici da produrre, ma anche loro hanno i loro limiti. Un "
"progetto può avere decine di migliaia di nodi che svolgono tutti delle "
"attività. Tuttavia, più complesso è il loro comportamento, maggiore è il "
"carico che ciascuno di essi aggiunge alle prestazioni del progetto."

msgid ""
"Godot provides more lightweight objects for creating APIs which nodes use. "
"Be sure to keep these in mind as options when designing how you wish to "
"build your project's features."
msgstr ""
"Godot fornisce oggetti più leggeri per la creazione di API utilizzate dai "
"nodi. Ciò è da tenere a mente quando si progetta come sviluppare le "
"funzionalità del proprio progetto."

msgid ""
":ref:`Object <class_Object>`: The ultimate lightweight object, the original "
"Object must use manual memory management. With that said, it isn't too "
"difficult to create one's own custom data structures, even node structures, "
"that are also lighter than the :ref:`Node <class_Node>` class."
msgstr ""
":ref:`Object <class_Object>`: L'oggetto leggero supremo, l'originale Object, "
"deve gestire manualmente la propria memoria. Detto questo, non è troppo "
"difficile creare strutture dati personalizzate, anche strutture a nodi, che "
"siano anche più leggere della classe :ref:`Node <class_Node>`."

msgid ""
"**Example:** See the :ref:`Tree <class_Tree>` node. It supports a high level "
"of customization for a table of content with an arbitrary number of rows and "
"columns. The data that it uses to generate its visualization though is "
"actually a tree of :ref:`TreeItem <class_TreeItem>` Objects."
msgstr ""
"**Esempio:** Consultare il nodo :ref:`Tree <class_Tree>`. Supporta un "
"elevato livello di personalizzazione per una tabella di contenuti con un "
"numero arbitrario di righe e colonne. I dati che utilizza per generare la "
"visualizzazione sono in realtà un albero di oggetti :ref:`TreeItem "
"<class_TreeItem>`."

msgid ""
"**Advantages:** Simplifying one's API to smaller scoped objects helps "
"improve its accessibility and improve iteration time. Rather than working "
"with the entire Node library, one creates an abbreviated set of Objects from "
"which a node can generate and manage the appropriate sub-nodes."
msgstr ""
"**Vantaggi:** Semplificare la propria API in oggetti, con ambito ridotto, "
"contribuisce a migliorarne l'accessibilità e a ridurre i tempi di "
"iterazione. Anziché lavorare con l'intera libreria di Node, si crea un "
"insieme abbreviato di oggetti da cui un nodo può generare e gestire i sotto-"
"nodi appropriati."

msgid ""
"One should be careful when handling them. One can store an Object into a "
"variable, but these references can become invalid without warning. For "
"example, if the object's creator decides to delete it out of nowhere, this "
"would trigger an error state when one next accesses it."
msgstr ""
"Bisogna fare attenzione quando li si gestisce. È possibile memorizzare un "
"oggetto in una variabile, ma questi riferimenti possono diventare non "
"validi, senza preavviso. Ad esempio, se il creatore dell'oggetto decide di "
"eliminarlo all'improvviso, ciò genererebbe uno stato di errore al prossimo "
"accesso."

msgid ""
":ref:`RefCounted <class_RefCounted>`: Only a little more complex than "
"Object. They track references to themselves, only deleting loaded memory "
"when no further references to themselves exist. These are useful in the "
"majority of cases where one needs data in a custom class."
msgstr ""
":ref:`RefCounted <class_RefCounted>`: Solo un po' più complesso di Object. "
"Registra i riferimenti a se stesso, cancellando la memoria caricata solo "
"quando non esistono ulteriori riferimenti a se stesso. Sono utili nella "
"maggior parte dei casi in cui sono necessari dati in una classe "
"personalizzata."

msgid ""
"**Example:** See the :ref:`FileAccess <class_FileAccess>` object. It "
"functions just like a regular Object except that one need not delete it "
"themselves."
msgstr ""
"**Esempio:** Consultare l'oggetto :ref:`FileAccess <class_FileAccess>`. "
"Funziona esattamente come un normale Object, solo che non è necessario "
"eliminarlo manualmente."

msgid "**Advantages:** same as the Object."
msgstr "**Vantaggi:** uguali a Object."

msgid ""
":ref:`Resource <class_Resource>`: Only slightly more complex than "
"RefCounted. They have the innate ability to serialize/deserialize (i.e. save "
"and load) their object properties to/from Godot resource files."
msgstr ""
":ref:`Resource <class_Resource>`: Solamente un po' più complesso di "
"RefCounted. Hanno la capacità innata di serializzare/deserializzare (ovvero "
"salvare e caricare) le proprietà dei loro oggetti da/a file di risorse di "
"Godot."

msgid ""
"**Example:** Scripts, PackedScene (for scene files), and other types like "
"each of the :ref:`AudioEffect <class_AudioEffect>` classes. Each of these "
"can be saved and loaded, therefore they extend from Resource."
msgstr ""
"**Esempio:** Script, PackedScene (per i file di scena) e altri tipi come "
"ciascuna delle classi :ref:`AudioEffect <class_AudioEffect>`. Ognuna di "
"queste si può salvare e caricare, quindi si estendono da Resource."

msgid ""
"**Advantages:** Much has :ref:`already been said <doc_resources>` "
"on :ref:`Resource <class_Resource>`'s advantages over traditional data "
"storage methods. In the context of using Resources over Nodes though, their "
"main advantage is in Inspector-compatibility. While nearly as lightweight as "
"Object/RefCounted, they can still display and export properties in the "
"Inspector. This allows them to fulfill a purpose much like sub-Nodes on the "
"usability front, but also improve performance if one plans to have many such "
"Resources/Nodes in their scenes."
msgstr ""
"**Vantaggi:** Molto è :ref:`già stato detto <doc_resources>` sui vantaggi "
"di :ref:`Resource <class_Resource>` rispetto ai metodi tradizionali di "
"archiviazione dati. Eppure, nel contesto dell'utilizzo di risorse rispetto a "
"nodi, il loro vantaggio principale è la loro compatibilità con l'Ispettore. "
"Pur essendo quasi leggeri come Object/RefCounted, possono comunque "
"visualizzare ed esportare proprietà nell'Ispettore. Questo consente loro di "
"svolgere una funzione simile a quella dei sotto-nodi, in termini di "
"usabilità, nonché di migliorare le prestazioni se si prevede di avere molte "
"di queste risorse/nodi nelle proprie scene."
