#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Moving the player with code"
msgstr "Движение игрока с помощью кода"

msgid ""
"It's time to code! We're going to use the input actions we created in the "
"last part to move the character."
msgstr ""
"Пришло время для написания кода! Мы собираемся использовать действия ввода, "
"который мы уже создали в предыдущих частях, чтобы персонаж двигался."

msgid "For this project, we will be following the Godot naming conventions."
msgstr "Для этого проекта мы будем следовать правилам именования Godot."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Классы (узлы) используют PascalCase, переменные и функции - "
"snake_case, константы - ALL_CAPS (см. :ref:`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**: Классы, экспортные переменные и методы используют PascalCase, "
"приватные поля используют _camelCase, локальные переменные и параметры "
"используют camelCase (См. :ref:`doc_c_sharp_styleguide`). Будьте "
"внимательны, чтобы точно набирать имена методов при подключении сигналов."

msgid "|image0|"
msgstr "|image0|"

msgid "image0"
msgstr "image0"

msgid ""
"Let's start with the class's properties. We're going to define a movement "
"speed, a fall acceleration representing gravity, and a velocity we'll use to "
"move the character."
msgstr ""
"Давайте начнем со свойств класса. Мы собираемся определить скорость "
"движения, ускорение свободного падения, представляющее гравитацию, и "
"скорость, которую мы будем использовать для движений персонажа."

msgid ""
"The values are quite different from 2D code because distances are in meters. "
"While in 2D, a thousand units (pixels) may only correspond to half of your "
"screen's width, in 3D, it's a kilometer."
msgstr ""
"Значения довольно сильно отличаются от 2D-кода, потому что расстояние здесь "
"измеряется в метрах. В то время как в 2D тысяча единиц (пикселей) может "
"соответствовать только половине ширины Вашего экрана, в 3D же это будет "
"равняться километру."

msgid ""
"Here, we're going to make all calculations using the ``_physics_process()`` "
"virtual function. Like ``_process()``, it allows you to update the node "
"every frame, but it's designed specifically for physics-related code like "
"moving a kinematic or rigid body."
msgstr ""
"Здесь мы собираемся сделать расчет, используя виртуальную функцию "
"``_physics_process()``. Так же как и ``_physics_process()``, она позволяет "
"Вам обновлять узел в каждом кадре, но она создана специально для кодирования "
"в области физики, как, например, движения кинематического или негибкого тела."

msgid ""
"To learn more about the difference between ``_process()`` and "
"``_physics_process()``, see :ref:`doc_idle_and_physics_processing`."
msgstr ""
"Для получения дополнительной информации о разнице между ``_process()`` и "
"``_physics_process()``, прочитайте :ref:`doc_idle_and_physics_processing`."

msgid ""
"We start by initializing a ``direction`` variable to ``Vector3.ZERO``. Then, "
"we check if the player is pressing one or more of the ``move_*`` inputs and "
"update the vector's ``x`` and ``z`` components accordingly. These correspond "
"to the ground plane's axes."
msgstr ""
"Сперва инициализируем переменную ``direction`` со значением ``Vector3."
"ZERO``. После этого мы проверяем, использует ли игрок один или больше вводов "
"``move_*`` и обновляем ``x`` и ``z`` векторов. Они соответствуют осям "
"опорной плоскости."

msgid ""
"These four conditions give us eight possibilities and eight possible "
"directions."
msgstr ""
"Эти четыре условия дают нам восемь возможных вариантов и восемь возможных "
"направлений."

msgid ""
"Here, we only normalize the vector if the direction has a length greater "
"than zero, which means the player is pressing a direction key."
msgstr ""
"Здесь мы нормализуем вектор, только если направление имеет длину больше "
"нуля, что означает, что игрок нажимает клавишу направления."

msgid ""
"We compute the direction the ``$Pivot`` is looking by creating a :ref:`Basis "
"<class_Basis>` that looks in the ``direction`` direction."
msgstr ""
"Мы вычисляем направление, в котором смотрит ``$Pivot``, создавая :ref:`Basis "
"<class_Basis>`, который смотрит в ``direction`` направлении."

msgid ""
"The physics engine can only detect interactions with walls, the floor, or "
"other bodies during a given frame if movement and collisions happen. We will "
"use this property later to code the jump."
msgstr ""
"Физический движок может только распознавать взаимодействия со стенами, полом "
"или другими телами во время предоставленного кадра, если происходит движение "
"и столкновение. Позже мы будем использовать это свойство, чтобы написать код "
"к прыжку."

msgid ""
"On the last line, we call ``CharacterBody3D.move_and_slide()`` which is a "
"powerful method of the ``CharacterBody3D`` class that allows you to move a "
"character smoothly. If it hits a wall midway through a motion, the engine "
"will try to smooth it out for you. It uses the *velocity* value native to "
"the :ref:`CharacterBody3D <class_CharacterBody3D>`"
msgstr ""
"В последней строке мы вызываем ``KinematicBody.move_and_slide()``. Это "
"эффективный метод класса ``KinematicBody``, который позволяет плавно "
"передвигать персонажа. Если он ударяется об стену в середине движения, то "
"движок попытается сгладить действие. Он использует значение *velocity*, "
"присущее :ref:`Тело персонажа 3D <class_Character Body 3D>`"

msgid "And that's all the code you need to move the character on the floor."
msgstr "Вот и весь код, необходимый для перемещения персонажа по полу."

msgid "Testing our player's movement"
msgstr "Проверка движения нашего игрока"

msgid "|image1|"
msgstr "|image1|"

msgid "image1"
msgstr "image1"

msgid "|image2|"
msgstr "|image2|"

msgid "image2"
msgstr "image2"

msgid "Adding a camera"
msgstr "Добавление камеры"

msgid "|image3|"
msgstr "|image3|"

msgid "image3"
msgstr "image3"

msgid "|image4|"
msgstr "|image4|"

msgid "image4"
msgstr "image4"

msgid ""
"We're going to use the *Pivot* to rotate the camera as if it was on a crane. "
"Let's first split the 3D view to be able to freely navigate the scene and "
"see what the camera sees."
msgstr ""
"Мы будем использовать *Pivot* для поворота камеры, как будто она находится "
"на кране. Сначала давайте разделим 3D-вид, чтобы иметь возможность свободно "
"перемещаться по сцене и видеть то, что видит камера."

msgid ""
"In the toolbar right above the viewport, click on *View*, then *2 "
"Viewports*. You can also press :kbd:`Ctrl + 2` (:kbd:`Cmd + 2` on macOS)."
msgstr ""
"На панели инструментов прямо над вьюпортом нажмите *View*, затем *2 "
"Viewports*. Вы также можете нажать :kbd:`Ctrl + 2` (:kbd:`Cmd + 2` на macOS)."

msgid "|image11|"
msgstr "|image11|"

msgid "image11"
msgstr "image11"

msgid "|image5|"
msgstr "|image5|"

msgid "image5"
msgstr "image5"

msgid "|image6|"
msgstr "|image6|"

msgid "image6"
msgstr "image6"

msgid "|image7|"
msgstr "|image7|"

msgid "image7"
msgstr "image7"

msgid "|image8|"
msgstr "|image8|"

msgid "image8"
msgstr "image8"

msgid ""
"You can run the scene by pressing :kbd:`F6` and press the arrow keys to move "
"the character."
msgstr ""
"Вы можете запустить сцену, нажав :kbd:`F6` и нажимая клавиши со стрелками "
"перемещать персонаж."

msgid "|image9|"
msgstr "|image9|"

msgid "image9"
msgstr "image9"

msgid ""
"We can see some empty space around the character due to the perspective "
"projection. In this game, we're going to use an orthographic projection "
"instead to better frame the gameplay area and make it easier for the player "
"to read distances."
msgstr ""
"Мы можем видеть пустое пространство вокруг персонажа из-за перспективы. В "
"этой игре мы наоборот собираемся использовать орфографическую проекцию, "
"чтобы лучше структурировать область геймплея и упростить для игрока "
"считывание дистанций."

msgid ""
"Select the *Camera* again and in the *Inspector*, set the *Projection* to "
"*Orthogonal* and the *Size* to ``19``. The character should now look flatter "
"and the ground should fill the background."
msgstr ""
"Снова выберите *Camera* и в *Inspector* установите *Projection* на "
"*Orthogonal* и *Size* на ``19``. Теперь персонаж должен выглядеть более "
"плоским и поверхность должна заполнять задний план."

msgid "|image10|"
msgstr "|image10|"

msgid "image10"
msgstr "image10"

msgid "Translation status"
msgstr "Статус перевода"
