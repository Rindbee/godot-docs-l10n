#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating the player scene"
msgstr "Создание сцены игрока"

msgid ""
"With the project settings in place, we can start working on the player-"
"controlled character."
msgstr ""
"С установленными настройками проекта, мы можем начать работу над игроком."

msgid ""
"The first scene will define the ``Player`` object. One of the benefits of "
"creating a separate Player scene is that we can test it separately, even "
"before we've created other parts of the game."
msgstr ""
"Первая сцена будет определять объект ``Player``. Одним из преимуществ "
"создания отдельной сцены Player является то, что мы можем протестировать ее "
"отдельно, даже до того, как создадим другие части игры."

msgid "Node structure"
msgstr "Структура узла"

msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"С помощью ``Area2D`` мы можем обнаруживать объекты, которые перекрывают или "
"сталкиваются с игроком. Измените имя узла на ``Player``, дважды щёлкнув по "
"нему. Теперь, когда мы установили корневой узел сцены, мы можем добавлять "
"дочерние узлы, чтобы придать ему больше функциональности."

msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock. Its tooltip says \"Groups the "
"selected node with its children. This causes the parent to be selected when "
"any child node is clicked in 2D and 3D view.\""
msgstr ""
"Прежде чем мы добавим дочерних узлов на узел ``Player``, мы хотим убедиться, "
"что нажав на них, мы случайно не переместим их и не изменим их размер. "
"Выберите узел и нажмите на значок справа от блокировки; его всплывающая "
"подсказка гласит: \"Группирует выбранный узел с его дочерними узлами. В этом "
"случае, при клике на любой дочерний узел во вкладке 2D и 3D будет выбран "
"родитель.\""

msgid "For this project, we will be following the Godot naming conventions."
msgstr "Для этого проекта мы будем следовать правилам именования Godot."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Классы (узлы) используют PascalCase, переменные и функции - "
"snake_case, константы - ALL_CAPS (см. :ref:`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**: Классы, экспортные переменные и методы используют PascalCase, "
"приватные поля используют _camelCase, локальные переменные и параметры "
"используют camelCase (См. :ref:`doc_c_sharp_styleguide`). Будьте "
"внимательны, чтобы точно набирать имена методов при подключении сигналов."

msgid "Sprite animation"
msgstr "Анимация спрайтов"

msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite2D`` node and set the "
"``Scale`` property to ``(0.5, 0.5)``. You can find it in the Inspector under "
"the ``Node2D`` heading."
msgstr ""
"Изображения игрока слишком большие, поэтому нам надо их слегка уменьшить. "
"Нажмите на узел ``AnimatedSprite2D`` и установите параметр ``Scale`` в "
"``(0.5, 0.5)``. Вы можете найти его в Инспекторе под названием ``Node2D``."

msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"[empty]\" -> \"New "
"CapsuleShape2D\". Using the two size handles, resize the shape to cover the "
"sprite:"
msgstr ""
"Наконец, добавьте :ref:`CollisionShape2D <class_CollisionShape2D>` в "
"качестве дочернего узла ``Player``. Это определит \"хитбокс\" игрока, или "
"границы его области столкновения. Для нашего персонажа лучше всего подходит "
"узел ``CapsuleShape2D``, поэтому рядом с \"Shape\" в Инспекторе нажмите "
"\"[пусто]\" -> \"Создать CapsuleShape2D\". Используя две стрелки размера, "
"измените размер фигуры так, чтобы она покрывала спрайт:"

msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr "Когда вы закончите, сцена ``Player`` будет выглядеть вот так:"

msgid "Make sure to save the scene again after these changes."
msgstr "После этих изменений обязательно сохраните сцену еще раз."

msgid ""
"In the next part, we'll add a script to the player node to move and animate "
"it. Then, we'll set up collision detection to know when the player got hit "
"by something."
msgstr ""
"В следующей части мы добавим скрипт к узлу игрока, чтобы перемещать и "
"анимировать его. Позже, мы настроим обнаружение столкновений, чтобы знать, в "
"какой момент игрок столкнулся с чем-то."
