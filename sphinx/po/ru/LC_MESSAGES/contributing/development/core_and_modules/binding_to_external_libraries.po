#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Binding to external libraries"
msgstr "Связывание внешних библиотек"

msgid "Modules"
msgstr "Модули"

msgid ""
"To bind to an external library, set up a module directory similar to the "
"Summator example:"
msgstr ""
"Для связки внешней библиотеки, установить директорию модуля подобно примеру "
"с Summator :"

msgid "And then you'll add the cpp file."
msgstr "И затем вы добавляете файл cpp."

msgid ""
"Just as before, the new class needs to be registered somehow, so two more "
"files need to be created:"
msgstr ""
"Также как и ранее, новый класс нуждается в регистрации, так что нужно "
"добавить ещё два файла:"

msgid ""
"If you don't want the external repository source files committed to your "
"repository, you can link to them instead by adding them as submodules (from "
"within the modules/tts/ directory), as seen below:"
msgstr ""
"Если вы не хотите чтобы внешние кодовые файлы репозитория соединились с "
"вашим репозиторием, вы может связаться с ними вместо добавления их как под-"
"модулей (внутри папки modules/tts/), как показано ниже:"

msgid ""
"To add include directories for the compiler to look at you can append it to "
"the environment's paths:"
msgstr ""
"Чтобы добавить директории включения(include) для компилятора, вы может "
"добавить их в пути переменных сред:"

msgid ""
"If you want to add custom compiler flags when building your module, you need "
"to clone `env` first, so it won't add those flags to whole Godot build "
"(which can cause errors). Example `SCsub` with custom flags:"
msgstr ""
"Если вы желаете добавить собственные флаги компиляции когда строите модуль, "
"вы должны сначала клонировать `env`, чтобы он не добавлял флаги целиком в "
"Godot (что вызовет ошибки). К примеру `SCsub` с собственными флагами:"

msgid "The final module should look like this:"
msgstr "В итоге скрипт должен выглядеть так:"

msgid "Using the module"
msgstr "Использование модуля"

msgid "You can now use your newly created module from any script:"
msgstr "Теперь вы можете использовать ваш новый модуль из любого скрипта:"

msgid "And the output will be ``is_spoken: True`` if the text is spoken."
msgstr "А вывод будет ``is_spoken: True`` если текст будет произнесён."
