#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"Beyond achieving a unique look for your game, this system also enables "
"developers to provide customization options to the end users, including "
"accessibility settings. UI themes are applied in a cascading manner (i.e. "
"they propagate from parent controls to their children), which means that "
"font settings or adjustments for colorblind users can be applied in a single "
"place and affect the entire UI tree. Of course this system can also be used "
"for gameplay purposes: your hero-based game can change its style for the "
"selected player character, or you can give different flavors to the sides in "
"your team-based project."
msgstr ""
"Помимо достижения уникального внешнего вида вашей игры, эта система также "
"позволяет разработчикам предоставлять конечным пользователям возможности "
"настройки, включая параметры доступности. Темы пользовательского интерфейса "
"применяются каскадным образом (т.е. распространяются от родительских "
"элементов управления к их дочерним элементам), что означает, что настройки "
"шрифта или корректировки для слепых пользователей могут применяться в одном "
"месте и влиять на все дерево пользовательского интерфейса. Конечно, эта "
"система может быть использована и в игровых целях: ваша игра, основанная на "
"герое, может менять свой стиль в зависимости от выбранного персонажа игрока, "
"или вы можете придать разный вкус сторонам в вашем командном проекте."

msgid ""
"The skinning system is driven by the :ref:`Theme <class_Theme>` resource. "
"Every Godot project has an inherent default theme that contains the settings "
"used by the built-in control nodes. This is what gives the controls their "
"distinct look out of the box. A theme only describes the configuration, "
"however, and it is still the job of each individual control to use that "
"configuration in the way it requires to display itself. This is important to "
"remember when implementing :ref:`your own custom controls "
"<doc_custom_gui_controls>`."
msgstr ""
"Система скинов управляется ресурсом :ref:`Theme <class_Theme>`. Каждый "
"проект Godot имеет встроенную тему по умолчанию, которая содержит настройки, "
"используемые встроенными узлами управления. Это то, что придает элементам "
"управления их отличительный внешний вид из коробки. Однако тема описывает "
"только конфигурацию, и каждый отдельный элемент управления должен "
"использовать эту конфигурацию так, как ему нужно для своего отображения. Это "
"важно помнить при реализации :ref:`собственных пользовательских элементов "
"управления <doc_custom_gui_controls>`."

msgid "**Font**"
msgstr "**Font**"

msgid ""
"It is important to remember that for child classes that process is "
"automated. Whenever a built-in control requests a theme item from the theme "
"it can omit the theme type, and its class name will be used instead. On top "
"of that, the class names of its parent classes will also be used in turn. "
"This allows changes to the parent class, such as ``Button``, to affect all "
"derived classes without the need to customize every one of them."
msgstr ""
"Важно помнить, что для дочерних классов этот процесс автоматизирован. Всякий "
"раз, когда встроенный элемент управления запрашивает элемент темы, он может "
"опустить тип темы, и вместо него будет использовано имя его класса. Кроме "
"того, в свою очередь будут использоваться имена классов его родительских "
"классов. Это позволяет изменять родительский класс, например ``Button``, "
"чтобы повлиять на все производные классы без необходимости настраивать "
"каждый из них."

msgid ""
"To give more customization opportunities types can also be linked together "
"as type variations. This is another use-case for custom theme types. For "
"example, a theme can contain a type ``Header`` which can be marked as a "
"variation of the base ``Label`` type. An individual ``Label`` control can "
"then be set to use the ``Header`` variation for its type, and every time a "
"theme item is requested from a theme this variation will be used before any "
"other type. This allows to store various presets of theme items for the same "
"class of the control node in the single ``Theme`` resource."
msgstr ""
"Чтобы предоставить больше возможностей для настройки, типы можно также "
"соединять вместе в виде вариантов типов. Это еще один случай использования "
"пользовательских типов тем. Например, тема может содержать тип ``Header``, "
"который может быть отмечен как вариация базового типа ``Label``. Затем "
"отдельный элемент управления ``Label`` можно настроить на использование "
"вариации ``Header`` для своего типа, и каждый раз, когда элемент темы "
"запрашивается из темы, эта вариация будет использоваться перед любым другим "
"типом. Это позволяет хранить различные предустановки элементов темы для "
"одного и того же класса узла управления в одном ресурсе ``Theme``."

msgid "Customizing a control"
msgstr "Настройка элементов управления"

msgid ""
"This allows you to configure the default look of every Godot control with a "
"single theme resource, but you can go more granular than that. Every control "
"node also has a :ref:`theme <class_Control_property_theme>` property, which "
"allows you to set a custom theme for the branch of nodes starting with that "
"control. This means that the control and all of its children, and their "
"children in turn, would first check that custom theme resource before "
"falling back on the project and the default themes."
msgstr ""
"Это позволяет вам настроить внешний вид каждого элемента управления Godot по "
"умолчанию с помощью одного ресурса темы, но вы можете сделать это более "
"детально. Каждый узел элемента управления также имеет свойство :ref:`theme "
"<class_Control_property_theme>`, которое позволяет задать пользовательскую "
"тему для ветви узлов, начинающейся с этого элемента управления. Это "
"означает, что элемент управления и все его дочерние элементы, а также их "
"дочерние элементы в свою очередь, сначала проверят ресурс пользовательской "
"темы, прежде чем вернуться к проекту и темам по умолчанию."

msgid ""
"For example, you can have a certain style for buttons in your project theme, "
"but want a different look for buttons inside of a popup dialog. You can set "
"a custom theme resource to the root control of your popup and define a "
"different style for buttons within that resource. As long as the chain of "
"control nodes between the root of the popup and the buttons is "
"uninterrupted, those buttons will use the styles defined in the theme "
"resource that is closest to them. All other controls will still be styled "
"using the project-wide theme and the default theme styles."
msgstr ""
"Например, вы можете использовать определенный стиль для кнопок в теме "
"проекта, но хотите, чтобы кнопки во всплывающем диалоговом окне выглядели по-"
"другому. Вы можете установить ресурс пользовательской темы для корневого "
"элемента управления всплывающего окна и определить другой стиль для кнопок в "
"этом ресурсе. Пока цепочка узлов управления между корнем всплывающего окна и "
"кнопками не прервется, эти кнопки будут использовать стили, определенные в "
"ближайшем к ним ресурсе темы. Все остальные элементы управления будут по-"
"прежнему оформлены с использованием общей темы проекта и стилей темы по "
"умолчанию."

msgid "Beyond controls"
msgstr "Не только controls"

msgid ""
"An example of using themes for something beyond controls can be a modulation "
"of sprites for the same units on different teams in a strategy game. A theme "
"resource can define a collection of colors, and sprites (with a help from "
"scripts) can use those colors to draw the texture. The main benefit being "
"that you could make different themes using the same theme items for red, "
"blue, and green teams, and swap them with a single resource change."
msgstr ""
"Примером использования тем для чего-то помимо управления может быть "
"модуляция спрайтов для одних и тех же юнитов в разных командах в "
"стратегической игре. Ресурс темы может определить коллекцию цветов, а "
"спрайты (с помощью скриптов) могут использовать эти цвета для рисования "
"текстуры. Главное преимущество заключается в том, что вы можете создавать "
"разные темы, используя одни и те же элементы темы для красной, синей и "
"зеленой команд, и менять их местами одним изменением ресурса."
