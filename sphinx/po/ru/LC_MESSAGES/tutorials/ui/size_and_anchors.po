#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Size and anchors"
msgstr "Размер и якоря"

msgid ""
"If a game was always going to be run on the same device and at the same "
"resolution, positioning controls would be a simple matter of setting the "
"position and size of each one of them. Unfortunately, that is rarely the "
"case."
msgstr ""
"Если игра всегда работала на одинаковом устройстве и разрешении, тогда "
"позиционирование и масштабирование кнопок управления было бы проще некуда. К "
"сожалению, этот случай работает не всегда."

msgid ""
"While some configurations may be more common than others, devices like "
"phones, tablets and portable gaming consoles can vary greatly. Therefore, we "
"often have to account for different aspect ratios, resolutions and user "
"scaling."
msgstr ""
"Хотя некоторые конфигурации встречаются чаще других, устройства вроде "
"смартфонов, планшетов и портативных игровых консолей могут сильно "
"различаться. Поэтому нам часто приходится учитывать разные соотношения "
"сторон, разрешения и пользовательское масштабирование."

msgid ""
"There are several ways to account for this, but for now, let's just imagine "
"that the screen resolution has changed and the controls need to be re-"
"positioned. Some will need to follow the bottom of the screen, others the "
"top of the screen, or maybe the right or left margins."
msgstr ""
"Существует много способов как с этим бороться, но давайте пока представим "
"что разрешение экрана изменилось и кнопки управления должны быть перемещены. "
"Некоторые должны быть внизу экрана, остальные наверху экрана, или же на "
"остальных боковых сторонах."

msgid ""
"This is done by editing the *anchor offsets* of controls, which behave "
"similar to a margin. To access these settings, you will first need to select "
"the *Custom* anchor preset."
msgstr ""
"Это делается путём редактирования *якорей* элементов управления, которые "
"работают аналогично отступам. Чтобы получить доступ к этим настройкам, "
"сначала нужно выбрать пресет *Custom* для якорей."

msgid ""
"Each control has four anchor offsets: left, right, bottom, and top, which "
"correspond to the respective edges of the control. By default, all of them "
"represent a distance in pixels relative to the top-left corner of the parent "
"control or (in case there is no parent control) the viewport."
msgstr ""
"Каждый элемент управления имеет четыре якорных смещения: левое, правое, "
"нижнее и верхнее, которые соответствуют соответствующим границам элемента. "
"По умолчанию все они представляют расстояние в пикселях относительно "
"верхнего левого угла родительского элемента или (если родительский элемент "
"отсутствует) вьюпорта."

msgid ""
"So to make the control wider you can make the right offset larger and/or "
"make the left offset smaller. This lets you set the exact placement and "
"shape of the control."
msgstr ""
"Таким образом, чтобы сделать элемент управления шире, вы можете увеличить "
"правое смещение и/или уменьшить левое смещение. Это позволяет задать точное "
"положение и форму элемента."

msgid ""
"The *anchor* properties adjust where the offsets are relative *to*. Each "
"offset has an individual anchor that can be adjusted from the beginning to "
"the end of the parent. So the vertical (top, bottom) anchors adjust from "
"``0.0`` (top of parent) to ``1.0`` (bottom of parent) with ``0.5`` being the "
"center, and the control offsets will be placed relative to that point. The "
"horizontal (left, right) anchors similarly adjust from left to right of the "
"parent."
msgstr ""
"Свойства *якорей* определяют, *относительно чего* рассчитываются смещения. "
"Каждое смещение имеет индивидуальный якорь, который можно настраивать от "
"начала до конца родительского элемента. Вертикальные якори (верхний и "
"нижний) изменяются от ``0.0`` (верх родителя) до ``1.0`` (низ родителя), где "
"``0.5`` соответствует центру, и смещения элемента будут рассчитываться "
"относительно этой точки. Горизонтальные якори (левый и правый) аналогично "
"настраиваются от левого до правого края родителя."

msgid ""
"Note that when you wish the edge of a control to be above or left of the "
"anchor point, you must change the offset value to be negative."
msgstr ""
"Обратите внимание: если требуется, чтобы грань элемента управления "
"находилась выше или левее якорной точки, необходимо задать отрицательное "
"значение смещения."

msgid ""
"For example: when horizontal anchors are changed to ``1.0``, the offset "
"values become relative to the top-right corner of the parent control or "
"viewport."
msgstr ""
"Например: при изменении горизонтальных якорей на ``1.0`` смещения "
"рассчитываются относительно верхнего правого угла родительского элемента или "
"вьюпорта."

msgid ""
"Adjusting the two horizontal or the two vertical anchors to different values "
"will make the control change size when the parent control does. Here, the "
"control is set to anchor its bottom-right corner to the parent's bottom-"
"right, while the top-left control offsets are still anchored to the top-left "
"of the parent, so when re-sizing the parent, the control will always cover "
"it, leaving a 20 pixel offset:"
msgstr ""
"Настройка двух горизонтальных или двух вертикальных якорей на разные "
"значения приведёт к изменению размера элемента управления при изменении "
"размера родительского элемента. В этом примере элемент управления привязан "
"нижним правым углом к нижнему правому углу родителя, в то время как смещения "
"верхнего левого угла остаются привязанными к верхнему левому углу родителя. "
"Таким образом, при изменении размера родителя элемент управления всегда "
"будет покрывать его, сохраняя смещение в 20 пикселей:"

msgid "Centering a control"
msgstr "Центрирование control узла"

msgid ""
"To center a control in its parent, set its anchors to ``0.5`` and each "
"offset to half of its relevant dimension. For example, the code below shows "
"how a TextureRect can be centered in its parent:"
msgstr ""
"Чтобы центрировать узел управления в его родительском узде, установите его "
"якоря в ``0.5``, а каждое смещение — в половину соответствующего измерения. "
"Например, следующий код демонстрирует центрирование TextureRect в его "
"родительском узле:"

msgid ""
"Setting each anchor to ``0.5`` moves the reference point for the offsets to "
"the center of its parent. From there, we set negative offsets so that the "
"control gets its natural size."
msgstr ""
"Установка каждого якоря в ``0.5`` перемещает точку отсчёта для смещений в "
"центр родительского элемента. После этого мы задаём отрицательные смещения, "
"чтобы узел управления сохранил свой естественный размер."

msgid "Anchor Presets"
msgstr "Пресеты якорей"

msgid ""
"Instead of manually adjusting the offset and anchor values, you can use the "
"toolbar's Anchor menu, above the viewport. Besides centering, it gives you "
"many options to align and resize control nodes."
msgstr ""
"Вместо ручной настройки смещений и якорей вы можете использовать меню якоря "
"на панели инструментов над окном просмотра. Помимо центрирования, оно "
"предоставляет множество опций для выравнивания и изменения размеров узлов "
"control."
