#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Procedural geometry"
msgstr "Процедурная геометрия"

msgid ""
"There are many ways to procedurally generate geometry in Godot. In this "
"tutorial series, we will explore a few of them. Each technique has its own "
"benefits and drawbacks, so it is best to understand each one and how it can "
"be useful in a given situation."
msgstr ""
"В Godot существует несколько способов процедурной генерации геометрии. В "
"этой серии туториалов мы рассмотрим некоторые из них. Каждая техника имеет "
"свои плюсы и минусы, поэтому важно понимать, как и когда она может быть "
"полезна."

msgid ""
"All the procedural geometry generation methods described here run on the "
"CPU. Godot doesn't support generating geometry on the GPU yet."
msgstr ""
"Все описанные здесь методы процедурной генерации геометрии выполняются на "
"CPU. Генерация геометрии на GPU в Godot пока не поддерживается."

msgid "What is geometry?"
msgstr "Что такое геометрия?"

msgid ""
"Geometry is a fancy way of saying shape. In computer graphics, geometry is "
"typically represented by an array of positions called \"vertices\". In "
"Godot, geometry is represented by Meshes."
msgstr ""
"Геометрия - это причудливый способ обозначения формы. В компьютерной графике "
"геометрия обычно представлена массивом позиций, называемых \"вершинами\". В "
"Godot геометрия представлена сетками (Meshes)."

msgid "What is a Mesh?"
msgstr "Что такое меш?"

msgid ""
"Many things in Godot have mesh in their name: the :ref:`Mesh <class_Mesh>`, "
"the :ref:`ArrayMesh <class_ArrayMesh>`, the :ref:`ImmediateMesh "
"<class_ImmediateMesh>`, the :ref:`MeshInstance3D <class_MeshInstance3D>`, "
"the :ref:`MultiMesh <class_MultiMesh>`, and the :ref:`MultiMeshInstance3D "
"<class_MultiMeshInstance3D>`. While they are all related, they have slightly "
"different uses."
msgstr ""
"Во многих вещах в Godot присутствует слово \"mesh\" в названии: :ref:`Mesh "
"<class_Mesh>`, :ref:`ArrayMesh <class_ArrayMesh>`, :ref:`ImmediateMesh "
"<class_ImmediateMesh>`, :ref:`MeshInstance3D "
"<class_MeshInstance3D>`, :ref:`MultiMesh <class_MultiMesh>`, "
"и :ref:`MultiMeshInstance3D <class_MultiMeshInstance3D>`. Хотя все они "
"связаны между собой, их назначение немного различается."

msgid ""
"Meshes and ArrayMeshes are resources that are drawn using a MeshInstance3D "
"node. Resources like Meshes and ArrayMeshes cannot be added to the scene "
"directly. A MeshInstance3D represents one instance of a mesh in your scene. "
"You can reuse a single mesh in multiple MeshInstance3Ds to draw it in "
"different parts of your scene with different materials or transformations "
"(scale, rotation, position etc.)."
msgstr ""
"Mesh и ArrayMesh — это ресурсы, которые отображаются с помощью узла "
"MeshInstance3D. Такие ресурсы, как Mesh и ArrayMesh, нельзя добавлять в "
"сцену напрямую. Узел MeshInstance3D представляет собой один экземпляр меша в "
"вашей сцене. Один и тот же меш можно использовать в нескольких "
"MeshInstance3D, чтобы отобразить его в разных частях сцены с разными "
"материалами или преобразованиями (масштаб, вращение, позиция и т.д.)."

msgid ""
"If you are going to draw the same object many times, it can be helpful to "
"use a MultiMesh with a MultiMeshInstance3D. MultiMeshInstance3Ds draw meshes "
"thousands of times very cheaply by taking advantage of hardware instancing. "
"The drawback with using a MultiMeshInstance3D is that each of your mesh's "
"surfaces are limited to one material for all instances. It uses an instance "
"array to store different colors and transformations for each instance, but "
"all the instances of each surface use the same material."
msgstr ""
"Если вы собираетесь отрисовывать один и тот же объект много раз, имеет смысл "
"использовать MultiMesh вместе с MultiMeshInstance3D. Узлы "
"MultiMeshInstance3D позволяют очень эффективно отрисовывать меши тысячи раз, "
"используя аппаратное инстансирование. Недостатком MultiMeshInstance3D "
"является то, что каждая поверхность меша ограничена одним материалом для "
"всех экземпляров. Для хранения различных цветов и преобразований "
"используется массив экземпляров, но все экземпляры одной поверхности "
"используют общий материал."

msgid "What a Mesh is"
msgstr "Что такое Сетка"

msgid ""
"A Mesh is composed of one or more surfaces. A surface is an array composed "
"of multiple sub-arrays containing vertices, normals, UVs, etc. Normally the "
"process of constructing surfaces and meshes is hidden from the user in "
"the :ref:`RenderingServer <class_RenderingServer>`, but with ArrayMeshes, "
"the user can construct a Mesh manually by passing in an array containing the "
"surface information."
msgstr ""
"Mesh состоит из одной или нескольких поверхностей. Поверхность — это массив, "
"содержащий несколько подмассивов с вершинами, нормалями, UV-координатами и "
"т.д. Обычно процесс создания поверхностей и мешей скрыт от пользователя и "
"происходит внутри :ref:`RenderingServer <class_RenderingServer>`, но с "
"помощью ArrayMesh пользователь может вручную создать Mesh, передав массив с "
"информацией о поверхности."

msgid "Surfaces"
msgstr "Поверхности"

msgid ""
"Each surface has its own material. Alternatively, you can override the "
"material for all surfaces in the Mesh when you use a MeshInstance3D using "
"the :ref:`material_override "
"<class_GeometryInstance3D_property_material_override>` property."
msgstr ""
"Каждая поверхность имеет свой собственный материал. Также можно "
"переопределить материал для всех поверхностей Mesh при использовании "
"MeshInstance3D с помощью свойства :ref:`material_override "
"<class_GeometryInstance3D_property_material_override>`."

msgid "Surface array"
msgstr "Массив поверхности"

msgid ""
"The surface array is an array of length ``ArrayMesh.ARRAY_MAX``. Each "
"position in the array is filled with a sub-array containing per-vertex "
"information. For example, the array located at ``ArrayMesh.ARRAY_NORMAL`` is "
"a :ref:`PackedVector3Array <class_PackedVector3Array>` of vertex normals. "
"See :ref:`Mesh.ArrayType <enum_Mesh_ArrayType>` for more information."
msgstr ""
"Массив поверхности представляет собой массив длины ``ArrayMesh.ARRAY_MAX``. "
"Каждая позиция в этом массиве содержит подмассив с информацией о вершинах. "
"Например, массив по индексу ``ArrayMesh.ARRAY_NORMAL`` — "
"это :ref:`PackedVector3Array <class_PackedVector3Array>` с нормалями вершин. "
"Подробнее см. в :ref:`Mesh.ArrayType <enum_Mesh_ArrayType>`."

msgid ""
"The surface array can be indexed or non-indexed. Creating a non-indexed "
"array is as easy as not assigning an array at the index "
"``ArrayMesh.ARRAY_INDEX``. A non-indexed array stores unique vertex "
"information for every triangle, meaning that when two triangles share a "
"vertex, the vertex is duplicated in the array. An indexed surface array only "
"stores vertex information for each unique vertex and then also stores an "
"array of indices which maps out how to construct the triangles from the "
"vertex array. In general, using an indexed array is faster, but it means you "
"have to share vertex data between triangles, which is not always desired "
"(e.g. when you want per-face normals)."
msgstr ""
"Массив поверхности может быть индексированным или неиндексированным. Создать "
"неиндексированный массив так же просто, как не назначать массив по индексу "
"``ArrayMesh.ARRAY_INDEX``. Неиндексированный массив хранит уникальную "
"информацию о вершине для каждого треугольника, что означает, что когда два "
"треугольника имеют общую вершину, эта вершина дублируется в массиве. "
"Индексированный массив поверхностей хранит информацию о вершинах только для "
"каждой уникальной вершины, а затем также хранит массив индексов, которые "
"указывают, как построить треугольники из массива вершин. В целом, "
"использование индексированного массива быстрее, но это означает, что вам "
"придётся обмениваться вершинными данными между треугольниками, что не всегда "
"желательно (например, когда вам нужны нормали для каждой грани)."

msgid "Tools"
msgstr "Инструменты"

msgid ""
"Godot provides different ways of accessing and working with geometry. More "
"information on each will be provided in the following tutorials."
msgstr ""
"Godot предоставляет различные способы доступа к геометрии и работы с ней. "
"Более подробная информация по каждому из них будет предоставлена в следующих "
"уроках."

msgid "ArrayMesh"
msgstr "ArrayMеsh"

msgid ""
"The ArrayMesh resource extends Mesh to add a few different quality of life "
"functions and, most importantly, the ability to construct a Mesh surface "
"through scripting."
msgstr ""
"Ресурс ArrayMesh расширяет Mesh, добавляя несколько различных функций "
"качества жизни и, самое главное, возможность построения поверхности Mesh с "
"помощью скриптов."

msgid ""
"For more information about the ArrayMesh, please see the :ref:`ArrayMesh "
"tutorial <doc_arraymesh>`."
msgstr ""
"Для получения дополнительной информации об ArrayMesh, пожалуйста, "
"смотрите :ref:`ArrayMesh tutorial <doc_arraymesh>`."

msgid "MeshDataTool"
msgstr "Инструмент \"Данные Меша\""

msgid ""
"The MeshDataTool is a resource that converts Mesh data into arrays of "
"vertices, faces, and edges that can be modified at runtime."
msgstr ""
"MeshDataTool - это ресурс, преобразующий данные Mesh в массивы вершин, "
"граней и ребер, которые могут быть изменены во время выполнения."

msgid ""
"For more information about the MeshDataTool, please see "
"the :ref:`MeshDataTool tutorial <doc_meshdatatool>`."
msgstr ""
"Более подробную информацию о MeshDataTool можно найти в :ref:`MeshDataTool "
"tutorial <doc_meshdatatool>`."

msgid "SurfaceTool"
msgstr "SurfaceTool (Инструмент поверхности)"

msgid ""
"The SurfaceTool allows the creation of Meshes using an OpenGL 1.x immediate "
"mode style interface."
msgstr ""
"Инструмент SurfaceTool позволяет создавать сетки, используя интерфейс OpenGL "
"1.x в стиле немедленного режима."

msgid ""
"For more information about the SurfaceTool, please see the :ref:`SurfaceTool "
"tutorial <doc_surfacetool>`."
msgstr ""
"Для получения дополнительной информации о SurfaceTool, пожалуйста, "
"обратитесь к :ref:`SurfaceTool tutorial <doc_surfacetool>`."

msgid "ImmediateMesh"
msgstr "ImmediateMesh (Немедленная сетка)"

msgid ""
"ImmediateMesh is a mesh that uses an immediate mode style interface (like "
"SurfaceTool) to draw objects. The difference between ImmediateMesh and the "
"SurfaceTool is that ImmediateMesh is drawn directly with code dynamically, "
"while the SurfaceTool is used to generate a Mesh that you can do whatever "
"you want with."
msgstr ""
"ImmediateMesh — это меш, использующий интерфейс в стиле режима немедленного "
"рисования (как и SurfaceTool) для отображения объектов. Разница между "
"ImmediateMesh и SurfaceTool заключается в том, что ImmediateMesh "
"отрисовывается напрямую через код в реальном времени, тогда как SurfaceTool "
"используется для генерации Mesh, с которым затем можно делать всё, что "
"угодно."

msgid ""
"ImmediateMesh is useful for prototyping because of its straightforward API, "
"but it is slow because the geometry is rebuilt each time you make a change. "
"It is most useful for adding simple geometry for visual debugging (e.g. by "
"drawing lines to visualize physics raycasts etc.)."
msgstr ""
"ImmediateMesh полезен для прототипирования благодаря простому API, но "
"работает медленно, поскольку геометрия пересоздаётся при каждом изменении. "
"Чаще всего его используют для визуального отладки с простой геометрией "
"(например, для отображения линий при визуализации физических лучей и т.п.)."

msgid ""
"For more information about ImmediateMesh, please see the :ref:`ImmediateMesh "
"tutorial <doc_immediatemesh>`."
msgstr ""
"Более подробную информацию о ImmediateMesh можно найти в :ref:`руководстве "
"по ImmediateMesh <doc_immediatemesh>`."

msgid "Which one should I use?"
msgstr "Какой из них мне следует использовать?"

msgid ""
"Which approach you use depends on what you are trying to do and what kind of "
"procedure you are comfortable with."
msgstr ""
"Какой подход вы используете, зависит от того, что вы пытаетесь сделать и "
"какой вид процедуры вам удобен."

msgid ""
"Both SurfaceTool and ArrayMesh are excellent for generating static geometry "
"(meshes) that don't change over time."
msgstr ""
"И SurfaceTool, и ArrayMesh отлично подходят для создания статической "
"геометрии (сетки), которая не меняется со временем."

msgid ""
"Using an ArrayMesh is slightly faster than using a SurfaceTool, but the API "
"is a little more challenging. Additionally, SurfaceTool has a few quality of "
"life methods such as ``generate_normals()`` and ``index()``."
msgstr ""
"Использование ArrayMesh немного быстрее, чем использование SurfaceTool, но "
"API немного сложнее. Кроме того, SurfaceTool имеет несколько методов "
"качества жизни, таких как ``generate_normals()`` и ``index()``."

msgid ""
"ImmediateMesh is more limited than both ArrayMesh and SurfaceTool. However, "
"if you need the geometry to change every frame anyway, it provides a much "
"easier interface that can be slightly faster than generating an ArrayMesh "
"every frame."
msgstr ""
"ImmediateMesh более ограничен, чем ArrayMesh и SurfaceTool. Однако если вам "
"всё равно нужно изменять геометрию каждый кадр, он предоставляет гораздо "
"более простой интерфейс, который может быть немного быстрее, чем генерация "
"ArrayMesh каждый кадр."

msgid ""
"The MeshDataTool is not fast, but it gives you access to all kinds of "
"properties of the mesh that you don't get with the others (edges, faces, "
"etc.). It is incredibly useful when you need that sort of data to transform "
"the mesh, but it is not a good idea to use it if that extra information is "
"not needed. The MeshDataTool is best used if you are going to be using an "
"algorithm that requires access to the face or edge array."
msgstr ""
"MeshDataTool не является быстрым, но он даёт вам доступ ко всем видам "
"свойств сетки, которые вы не можете получить с помощью других инструментов "
"(рёбра, грани и т.д.). Он невероятно полезен, когда вам нужны такие данные "
"для преобразования сетки, но его не стоит использовать, если эта "
"дополнительная информация не нужна. Инструмент MeshDataTool лучше "
"использовать, если вы собираетесь использовать алгоритм, требующий доступа к "
"массиву граней или рёбер."
