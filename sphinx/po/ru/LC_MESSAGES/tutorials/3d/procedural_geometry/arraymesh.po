#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the ArrayMesh"
msgstr "Использование ArrayMesh"

msgid ""
"This tutorial will present the basics of using an :ref:`ArrayMesh "
"<class_arraymesh>`."
msgstr ""
"В этом уроке будут представлены основы использования :ref:`ArrayMesh "
"<class_arraymesh>`."

msgid ""
"The first parameter is the ``PrimitiveType``, an OpenGL concept that "
"instructs the GPU how to arrange the primitive based on the vertices given, "
"i.e. whether they represent triangles, lines, points, etc. See :ref:`Mesh."
"PrimitiveType <enum_Mesh_PrimitiveType>` for the options available."
msgstr ""
"Первым параметром является ``PrimitiveType``, концепция OpenGL, которая "
"указывает GPU, как расположить примитив на основе заданных вершин, т.е. "
"представляют ли они треугольники, линии, точки и т.д. Доступные варианты см. "
"в :ref:`Mesh.PrimitiveType <enum_Mesh_PrimitiveType>`."

msgid "Index"
msgstr "Индекс"

msgid "Mesh.ArrayType Enum"
msgstr "Mesh.ArrayType - перечисление"

msgid "Array type"
msgstr "Тип массива"

msgid "0"
msgstr "0"

msgid "``ARRAY_VERTEX``"
msgstr "``ARRAY_VERTEX``"

msgid "1"
msgstr "1"

msgid "``ARRAY_NORMAL``"
msgstr "``ARRAY_NORMAL``"

msgid "2"
msgstr "2"

msgid "``ARRAY_TANGENT``"
msgstr "``ARRAY_TANGENT``"

msgid "3"
msgstr "3"

msgid "``ARRAY_COLOR``"
msgstr "``ARRAY_COLOR``"

msgid "4"
msgstr "4"

msgid "``ARRAY_TEX_UV``"
msgstr "``ARRAY_TEX_UV``"

msgid "5"
msgstr "5"

msgid "``ARRAY_TEX_UV2``"
msgstr "``ARRAY_TEX_UV2``"

msgid "10"
msgstr "10"

msgid "``ARRAY_BONES``"
msgstr "``ARRAY_BONES``"

msgid "11"
msgstr "11"

msgid "``ARRAY_WEIGHTS``"
msgstr "``ARRAY_WEIGHTS``"

msgid "12"
msgstr "12"

msgid "``ARRAY_INDEX``"
msgstr "``ARRAY_INDEX``"

msgid "Under ``_ready()``, create a new Array."
msgstr "Ниже ``_ready()`` создайте новый массив."

msgid ""
"This will be the array that we keep our surface information in - it will "
"hold all the arrays of data that the surface needs. Godot will expect it to "
"be of size ``Mesh.ARRAY_MAX``, so resize it accordingly."
msgstr ""
"Это будет массив, в котором мы храним нашу информацию о поверхности, он "
"будет содержать все массивы данных, которые нужны поверхности. Godot "
"ожидает, что он будет иметь размер ``Mesh.ARRAY_MAX``, поэтому измените его "
"размер соответствующим образом."

msgid "Next create the arrays for each data type you will use."
msgstr ""
"Затем создайте массивы для каждого типа данных, который вы будете "
"использовать."

msgid ""
"Once you have filled your data arrays with your geometry you can create a "
"mesh by adding each array to ``surface_array`` and then committing to the "
"mesh."
msgstr ""
"После того, как вы заполнили свои массивы данных своей геометрией, вы можете "
"создать сетку, добавив каждый массив в `surface_array`, а затем зафиксировав "
"его в сетке."

msgid ""
"In this example, we used ``Mesh.PRIMITIVE_TRIANGLES``, but you can use any "
"primitive type available from mesh."
msgstr ""
"В этом примере мы использовали `Mesh.PRIMITIVE_TRIANGLES`, но вы можете "
"использовать любой примитивный тип, доступный из сетки."

msgid "Put together, the full code looks like:"
msgstr "В совокупности полный код выглядит следующим образом:"

msgid ""
"The code that goes in the middle can be whatever you want. Below we will "
"present some example code for generating a sphere."
msgstr ""
"Код, который находится в середине, может быть любым, каким вы захотите. Ниже "
"мы приведем пример кода для генерации сферы."

msgid "Generating geometry"
msgstr "Создаём геометрию"

msgid ""
"Here is sample code for generating a sphere. Although the code is presented "
"in GDScript, there is nothing Godot specific about the approach to "
"generating it. This implementation has nothing in particular to do with "
"ArrayMeshes and is just a generic approach to generating a sphere. If you "
"are having trouble understanding it or want to learn more about procedural "
"geometry in general, you can use any tutorial that you find online."
msgstr ""
"Здесь приведен пример кода для генерации сферы. Хотя код представлен на "
"GDScript, в подходе к генерации сферы нет ничего специфичного для Godot. Эта "
"реализация не имеет ничего общего с ArrayMeshes и является просто общим "
"подходом к генерации сферы. Если у вас возникли трудности с пониманием или "
"вы хотите узнать больше о процедурной геометрии в целом, вы можете "
"воспользоваться любым учебником, который найдете в Интернете."

msgid "Saving"
msgstr "Сохранение"

msgid ""
"Finally, we can use the :ref:`ResourceSaver <class_resourcesaver>` class to "
"save the ArrayMesh. This is useful when you want to generate a mesh and then "
"use it later without having to re-generate it."
msgstr ""
"Наконец, мы можем использовать класс :ref:`ResourceSaver "
"<class_resourcesaver>` для сохранения ArrayMesh. Это полезно, когда вы "
"хотите сгенерировать сетку, а затем использовать ее позже без необходимости "
"повторной генерации."
