#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Model export considerations"
msgstr "Рекомендации по экспорту модели"

msgid ""
"Before exporting a 3D model from a 3D modeling application, such as Blender, "
"there are some considerations that should be taken into account to ensure "
"that the model follows the conventions and best practices for Godot."
msgstr ""
"Перед экспортом 3D-модели из приложения для 3D-моделирования, например "
"Blender, следует учесть некоторые соображения, чтобы модель соответствовала "
"соглашениям и передовым практикам Godot."

msgid "3D asset direction conventions"
msgstr "Условные обозначения направления 3D-активов"

msgid ""
"Godot uses a right-handed, Y-is-up coordinate system, with the -Z axis as "
"the camera's forward direction. This is the same as OpenGL. This implies "
"that +Z is back, +X is right, and -X is left for a camera."
msgstr ""
"Godot использует правостороннюю систему координат с осью Y вверху, где ось "
"-Z соответствует направлению движения камеры вперёд. Это аналогично OpenGL. "
"Это означает, что для камеры ось +Z — назад, +X — вправо, а -X — влево."

msgid ""
"The convention for 3D assets is to face the opposite direction as the "
"camera, so that characters and other assets are facing the camera by "
"default. This convention is extremely common in 3D modeling applications, "
"and is `codified in glTF as part of the glTF 2.0 specification <https://"
"registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#coordinate-system-and-"
"units>`__. This means that for oriented 3D assets (such as characters), the "
"+Z axis is the direction of the front, so -Z is the rear, +X is the left "
"side, and -X is the right side for a 3D asset. In Blender, this means that "
"+Y is rear and -Y is front for an asset."
msgstr ""
"Принято, что 3D-ресурсы должны быть обращены в противоположном направлении "
"от камеры, поэтому персонажи и другие ресурсы по умолчанию обращены к "
"камере. Это соглашение чрезвычайно распространено в приложениях 3D-"
"моделирования и `кодифицировано в glTF как часть спецификации glTF 2.0 "
"<https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#coordinate-system-"
"and-units>`__. Это означает, что для ориентированных 3D-ресурсов (таких как "
"персонажи) ось +Z является направлением передней стороны, поэтому -Z — это "
"задняя сторона, +X — левая сторона, а -X — правая сторона для 3D-ресурса. В "
"Blender это означает, что +Y — задняя сторона, а -Y — передняя сторона для "
"ресурса."

msgid ""
"When rotating an oriented 3D asset in Godot, use the ``use_model_front`` "
"option on the ``look_at`` functions, and use the ``Vector3.MODEL_*`` "
"constants to perform calculations in the oriented asset's local space."
msgstr ""
"При вращении ориентированного 3D-актива в Godot используйте параметр "
"``use_model_front`` в функциях ``look_at`` и константы ``Vector3.MODEL_*`` "
"для выполнения вычислений в локальном пространстве ориентированного актива."

msgid ""
"For assets without an intrinsic front side or forward direction, such as a "
"game map or terrain, take note of the cardinal directions instead. The "
"convention in Godot and the vast majority of other applications is that +X "
"is east and -X is west. Due to Godot's right-handed Y-is-up coordinate "
"system, this implies that +Z is south and -Z is north. In Blender, this "
"means that +Y is north and -Y is south."
msgstr ""
"Для ресурсов без внутренней передней стороны или направления вперёд, таких "
"как игровая карта или ландшафт, вместо этого учитывайте стороны света. В "
"Godot и подавляющем большинстве других приложений принято, что +X — это "
"восток, а -X — запад. В Godot ось Y расположена справа, поэтому +Z — это юг, "
"а -Z — север. В Blender это означает, что +Y — это север, а -Y — юг."

msgid "Exporting textures separately"
msgstr "Экспортирование текстур раздельно"

msgid ""
"While textures can be exported with a model in certain file formats, such as "
"glTF 2.0, you can also export them separately. Godot uses PBR (physically "
"based rendering) for its materials, so if a texturing program can export PBR "
"textures, they can work in Godot. This includes the `Substance suite "
"<https://www.adobe.com/creativecloud/3d-ar.html>`__, `ArmorPaint (open "
"source) <https://armorpaint.org/>`__, and `Material Maker (open source) "
"<https://github.com/RodZill4/material-maker>`__."
msgstr ""
"Хотя текстуры можно экспортировать вместе с моделью в определённых форматах, "
"например, glTF 2.0, их также можно экспортировать отдельно. Godot использует "
"PBR (физически корректный рендеринг) для своих материалов, поэтому, если "
"программа текстурирования может экспортировать PBR-текстуры, они будут "
"работать и в Godot. К ним относятся `Substance Suite <https://www.adobe.com/"
"creativecloud/3d-ar.html>`__, `ArmorPaint (с открытым исходным кодом) "
"<https://armorpaint.org/>`__ и `Material Maker (с открытым исходным кодом) "
"<https://github.com/RodZill4/material-maker>`__."

msgid ""
"For more information on Godot's materials, "
"see :ref:`doc_standard_material_3d`."
msgstr ""
"Более подробную информацию о материалах Godot "
"см. :ref:`doc_standard_material_3d`."

msgid "Exporting considerations"
msgstr "Размышления о экспорте"

msgid ""
"Since GPUs can only render triangles, meshes that contain quads or N-gons "
"have to be *triangulated* before they can be rendered. Godot can triangulate "
"meshes on import, but results may be unpredictable or incorrect, especially "
"with N-gons. Regardless of the target application, triangulating *before* "
"exporting the scene will lead to more consistent results and should be done "
"whenever possible."
msgstr ""
"Поскольку графические процессоры могут отображать только треугольники, "
"сетки, содержащие квадраты или N-угольники, должны быть *триангулированы*, "
"прежде чем их можно будет визуализировать. Godot может триангулировать сетки "
"при импорте, но результаты могут быть непредсказуемыми или неверными, "
"особенно с N-угольниками. Независимо от целевого приложения, триангуляция "
"*перед* экспортом сцены приведет к более согласованным результатам и должна "
"выполняться по возможности."

msgid ""
"To avoid issues with incorrect triangulation after importing in Godot, it is "
"recommended to make the 3D modeling software triangulate objects on its own. "
"In Blender, this can be done by adding a Triangulate modifier to your "
"objects and making sure **Apply Modifiers** is checked in the export dialog. "
"Alternatively, depending on the exporter, you may be able to find and enable "
"a **Triangulate Faces** option in the export dialog."
msgstr ""
"Чтобы избежать проблем с некорректной триангуляцией после импорта в Godot, "
"рекомендуется настроить программу для 3D-моделирования на самостоятельную "
"триангуляцию объектов. В Blender это можно сделать, добавив к объектам "
"модификатор «Triangulate» и убедившись, что в диалоговом окне экспорта "
"установлен флажок **Apply Modifiers**. Кроме того, в зависимости от "
"экспортера, вы можете найти и включить параметр **Triangulate Faces** в "
"диалоговом окне экспорта."

msgid ""
"To avoid issues with 3D selection in the editor, it is recommended to apply "
"the object transform in the 3D modeling software before exporting the scene."
msgstr ""
"Чтобы избежать проблем с 3D-выделением в редакторе, рекомендуется перед "
"экспортом сцены применить преобразование объекта в программе для 3D-"
"моделирования."

msgid ""
"It is important that the mesh is not deformed by bones when exporting. Make "
"sure that the skeleton is reset to its T-pose or default rest pose before "
"exporting with your favorite 3D editor."
msgstr ""
"Важно, чтобы при экспорте сетка не деформировалась костями. Перед экспортом "
"с помощью вашего любимого 3D-редактора убедитесь, что скелет сброшен в Т-"
"образную позу или позу покоя по умолчанию."

msgid "Lighting considerations"
msgstr "Вопросы освещения"

msgid ""
"While it's possible to import lights from a 3D scene using the glTF, "
"``.blend`` or Collada formats, it's generally advised to design the scene's "
"lighting in the Godot editor after importing the scene."
msgstr ""
"Хотя можно импортировать источники света из 3D-сцены с использованием "
"форматов glTF, ``.blend`` или Collada, обычно рекомендуется проектировать "
"освещение сцены в редакторе Godot после импорта сцены."

msgid ""
"This allows you to get a more accurate feel for the final result, as "
"different engines will render lights in a different manner. This also avoids "
"any issues with lights appearing excessively strong or faint as a result of "
"the import process."
msgstr ""
"Это позволяет более точно оценить конечный результат, поскольку разные "
"движки визуализируют свет по-разному. Это также позволяет избежать проблем "
"со слишком ярким или тусклым светом в результате импорта."
