#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Saving games"
msgstr "Сохранение игр"

msgid "Introduction"
msgstr "Введение"

msgid ""
"Save games can be complicated. For example, it may be desirable to store "
"information from multiple objects across multiple levels. Advanced save game "
"systems should allow for additional information about an arbitrary number of "
"objects. This will allow the save function to scale as the game grows more "
"complex."
msgstr ""
"Игры с сохранением могут быть сложными. Например, может быть желательно "
"сохранить информацию о нескольких объектах на нескольких уровнях. "
"Продвинутые системы сохранения игр должны позволять сохранять дополнительную "
"информацию о произвольном количестве объектов. Это позволит масштабировать "
"функцию сохранения по мере усложнения игры."

msgid ""
"If you're looking to save user configuration, you can use the :ref:"
"`class_ConfigFile` class for this purpose."
msgstr ""
"Если вы хотите сохранить конфигурацию пользователя, вы можете использовать "
"для этого класс :ref:`class_ConfigFile`."

msgid "Identify persistent objects"
msgstr "Идентификация постоянных объектов"

msgid ""
"Firstly, we should identify what objects we want to keep between game "
"sessions and what information we want to keep from those objects. For this "
"tutorial, we will use groups to mark and handle objects to be saved, but "
"other methods are certainly possible."
msgstr ""
"Во-первых, мы должны определить, какие объекты мы хотим сохранить между "
"игровыми сессиями и какую информацию мы хотим сохранить от этих объектов. В "
"этом учебнике мы будем использовать группы для маркировки и обработки "
"объектов для сохранения, но, конечно, возможны и другие методы."

msgid ""
"We will start by adding objects we wish to save to the \"Persist\" group. We "
"can do this through either the GUI or script. Let's add the relevant nodes "
"using the GUI:"
msgstr ""
"Мы начнем с добавления объектов, которые мы хотим сохранить, в группу "
"\"Persist\". Мы можем сделать это с помощью графического интерфейса или "
"скрипта. Давайте добавим соответствующие узлы с помощью графического "
"интерфейса:"

msgid ""
"Once this is done, when we need to save the game, we can get all objects to "
"save them and then tell them all to save with this script:"
msgstr ""
"Когда это будет сделано, когда нам понадобится сохранить игру, мы сможем "
"получить все объекты для сохранения, а затем сказать им всем сохраниться с "
"помощью этого скрипта:"

msgid "Serializing"
msgstr "Сериализация"

msgid ""
"The next step is to serialize the data. This makes it much easier to read "
"from and store to disk. In this case, we're assuming each member of group "
"Persist is an instanced node and thus has a path. GDScript has helper class :"
"ref:`JSON<class_json>` to convert between dictionary and string, Our node "
"needs to contain a save function that returns this data. The save function "
"will look like this:"
msgstr ""
"Следующий шаг — сериализация данных. Это значительно упрощает чтение и "
"сохранение на диск. В этом случае мы предполагаем, что каждый член группы "
"Persist является экземпляром узлом и, следовательно, имеет путь. В GDScript "
"есть вспомогательный класс :ref:`JSON<class_json>` для преобразования между "
"словарем и строкой. Наш узел должен содержать функцию сохранения, которая "
"возвращает эти данные. Функция сохранения будет выглядеть так:"

msgid ""
"This gives us a dictionary with the style ``{ \"variable_name\":"
"value_of_variable }``, which will be useful when loading."
msgstr ""
"Это дает нам словарь со стилем ``{\"имя_переменной\":значение_переменной }"
"``, который будет полезен при загрузке."

msgid "Saving and reading data"
msgstr "Сохранение и чтение данных"

msgid ""
"Now we can save and load an arbitrary number of objects laid out almost "
"anywhere across the scene tree! Each object can store different data "
"depending on what it needs to save."
msgstr ""
"Теперь мы можем сохранять и загружать произвольное количество объектов, "
"расположенных практически в любом месте дерева сцены! Каждый объект может "
"хранить различные данные в зависимости от того, что ему нужно сохранить."

msgid "Some notes"
msgstr "Некоторые примечания"

msgid ""
"We have glossed over setting up the game state for loading. It's ultimately "
"up to the project creator where much of this logic goes. This is often "
"complicated and will need to be heavily customized based on the needs of the "
"individual project."
msgstr ""
"Мы подробно остановились на настройке состояния игры для загрузки. В "
"конечном итоге от создателя проекта зависит, куда будет направлена большая "
"часть этой логики. Это часто бывает сложно и требует значительной настройки "
"в зависимости от потребностей конкретного проекта."

msgid ""
"Additionally, our implementation assumes no Persist objects are children of "
"other Persist objects. Otherwise, invalid paths would be created. To "
"accommodate nested Persist objects, consider saving objects in stages. Load "
"parent objects first so they are available for the :ref:`add_child() "
"<class_node_method_add_child>` call when child objects are loaded. You will "
"also need a way to link children to parents as the :ref:`NodePath "
"<class_nodepath>` will likely be invalid."
msgstr ""
"Кроме того, наша реализация предполагает, что никакие объекты Persist не "
"являются дочерними для других объектов Persist. В противном случае будут "
"создаваться недопустимые пути. Чтобы учесть вложенные объекты Persist, "
"рассмотрите возможность поэтапного сохранения объектов. Сначала загрузите "
"родительские объекты, чтобы они были доступны для вызова :ref:`add_child() "
"<class_node_method_add_child>`, когда загружаются дочерние объекты. Вам "
"также понадобится способ связать дочерние объекты с родительскими, "
"поскольку :ref:`NodePath <class_nodepath>`, скорее всего, будет "
"недействительным."

msgid "Translation status"
msgstr "Статус перевода"
