#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "Введение"

msgid ""
"Even with this vertex shader, the quad keeps disappearing. This is due to "
"frustum culling, which is done on the CPU. Frustum culling uses the camera "
"matrix and the AABBs of Meshes to determine if the Mesh will be visible "
"*before* passing it to the GPU. The CPU has no knowledge of what we are "
"doing with the vertices, so it assumes the coordinates specified refer to "
"world positions, not clip space positions, which results in Godot culling "
"the quad when we turn away from the center of the scene. In order to keep "
"the quad from being culled, there are a few options:"
msgstr ""
"Даже с этим вершинным (вертексным) шейдером квадрант продолжает исчезать. "
"Это происходит из-за выборки фрустума, которая выполняется на CPU. "
"Фрустумная очистка использует матрицу камеры и AABBs сетки, чтобы "
"определить, будет ли сетка видимой *до* передачи ее на GPU. CPU не знает, "
"что мы делаем с вершинами, поэтому он предполагает, что указанные координаты "
"относятся к мировым позициям, а не к позициям пространства клипа, что "
"приводит к тому, что Godot выбраковывает квад, когда мы отворачиваемся от "
"центра сцены. Для того чтобы квадрант не сворачивался, есть несколько "
"вариантов:"

msgid "Example shader"
msgstr "Пример шейдера"
