#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"From a high-level, what Godot does is give the user a bunch of parameters "
"that can be optionally set (``AO``, ``SSS_Strength``, ``RIM``, etc.). These "
"parameters correspond to different complex effects (Ambient Occlusion, "
"SubSurface Scattering, Rim Lighting, etc.). When not written to, the code is "
"thrown out before it is compiled and so the shader does not incur the cost "
"of the extra feature. This makes it easy for users to have complex PBR-"
"correct shading, without writing complex shaders. Of course, Godot also "
"allows you to ignore all these parameters and write a fully customized "
"shader."
msgstr ""
"На высоком уровне, то, что делает Godot, дает пользователю кучу параметров, "
"которые можно установить по желанию (``AO``, ``SSS_Strength``, ``RIM`` и т."
"д.). Эти параметры соответствуют различным сложным эффектам (Ambient "
"Occlusion, SubSurface Scattering, Rim Lighting и т.д.). Если эти параметры "
"не записаны, код выбрасывается до компиляции, и таким образом шейдер не "
"несет затрат на дополнительную функцию. Это позволяет пользователям легко "
"получить сложное PBR-корректное затенение без написания сложных шейдеров. "
"Конечно, Godot также позволяет игнорировать все эти параметры и написать "
"полностью индивидуальный шейдер."

msgid ""
"As mentioned in the previous part of this tutorial. The standard use of the "
"fragment function in Godot is to set up different material properties and "
"let Godot handle the rest. In order to provide even more flexibility, Godot "
"also provides things called render modes. Render modes are set at the top of "
"the shader, directly below ``shader_type``, and they specify what sort of "
"functionality you want the built-in aspects of the shader to have."
msgstr ""
"Как уже упоминалось в предыдущей части этого руководства. Стандартное "
"использование функции фрагмента в Godot - это установка различных свойств "
"материала и предоставление Godot сделать все остальное. Для того чтобы "
"обеспечить еще большую гибкость, Godot также предоставляет вещи, называемые "
"режимами рендеринга. Режимы рендеринга устанавливаются в верхней части "
"шейдера, непосредственно под ``shader_type``, и они определяют, какой "
"функциональностью вы хотите наделить встроенные аспекты шейдера."

msgid ""
"For a full list of render modes see the :ref:`Spatial shader reference "
"<doc_spatial_shader>`."
msgstr ""
"Полный список режимов рендера смотрите в :ref:`Spatial shader reference "
"<doc_spatial_shader>`."

msgid "Let's set it to a nice shade of blue."
msgstr "Давайте установим красивый оттенок синего."

msgid ""
"We set it to a very dark shade of blue because most of the blueness of the "
"water will come from reflections from the sky."
msgstr ""
"Мы установили очень темный оттенок синего, потому что большая часть синевы "
"воды будет обусловлена отражением от неба."

msgid ""
"The PBR model that Godot uses relies on two main parameters: ``METALLIC`` "
"and ``ROUGHNESS``."
msgstr ""
"Модель PBR, которую использует Godot, опирается на два основных параметра: "
"``МЕТАЛЛИЧЕСКИЙ`` и ``РОГАННОСТЬ``."

msgid ""
"``ROUGHNESS`` specifies how smooth/rough the surface of a material is. A low "
"``ROUGHNESS`` will make a material appear like a shiny plastic, while a high "
"roughness makes the material appear more solid in color."
msgstr ""
"``ROUGHNESS`` определяет, насколько гладкой/шероховатой является поверхность "
"материала. Низкая ``ROUGHNESS`` сделает материал похожим на блестящий "
"пластик, в то время как высокая шероховатость заставит материал казаться "
"более твердым по цвету."

msgid ""
"``METALLIC`` specifies how much like a metal the object is. It is better set "
"close to ``0`` or ``1``. Think of ``METALLIC`` as changing the balance "
"between the reflection and the ``ALBEDO`` color. A high ``METALLIC`` almost "
"ignores ``ALBEDO`` altogether, and looks like a mirror of the sky. While a "
"low ``METALLIC`` has a more equal representation of sky color and ``ALBEDO`` "
"color."
msgstr ""
"``METALLIC`` определяет, насколько объект похож на металл. Лучше установить "
"значение, близкое к ``0`` или ``1``. Думайте о ``METALLIC`` как об изменении "
"баланса между отражением и цветом ``ALBEDO``. При высоком ``METALLIC`` почти "
"полностью игнорируется ``ALBEDO`` и выглядит как зеркало неба. В то время "
"как низкий ``METALLIC`` имеет более равное представление цвета неба и "
"``ALBEDO``."

msgid ""
"``ROUGHNESS`` increases from ``0`` to ``1`` from left to right while "
"``METALLIC`` increase from ``0`` to ``1`` from top to bottom."
msgstr ""
"``ROUGHNESS`` увеличивается от ``0`` к ``1`` слева направо, а ``METALLIC`` "
"увеличивается от ``0`` к ``1`` сверху вниз."

msgid ""
"``METALLIC`` should be close to ``0`` or ``1`` for proper PBR shading. Only "
"set it between them for blending between materials."
msgstr ""
"``METALLIC`` должен быть близок к ``0`` или ``1`` для правильного затенения "
"PBR. Для смешивания материалов устанавливайте только между ними."

msgid ""
"Water is not a metal, so we will set its ``METALLIC`` property to ``0.0``. "
"Water is also highly reflective, so we will set its ``ROUGHNESS`` property "
"to be quite low as well."
msgstr ""
"Вода не является металлом, поэтому мы установим ее свойство ``METALLIC`` на "
"``0.0``. Вода также обладает высокой отражательной способностью, поэтому мы "
"установим ее свойство ``ROUGHNESS`` на довольно низком уровне."

msgid ""
"Now we have a smooth plastic looking surface. It is time to think about some "
"particular properties of water that we want to emulate. There are two main "
"ones that will take this from a weird plastic surface to nice stylized "
"water. The first is specular reflections. Specular reflections are those "
"bright spots you see from where the sun reflects directly into your eye. The "
"second is fresnel reflectance. Fresnel reflectance is the property of "
"objects to become more reflective at shallow angles. It is the reason why "
"you can see into water below you, but farther away it reflects the sky."
msgstr ""
"Теперь у нас есть гладкая поверхность, похожая на пластик. Пришло время "
"подумать о некоторых свойствах воды, которые мы хотим имитировать. Есть два "
"основных свойства, которые позволят нам превратить странную пластиковую "
"поверхность в красивую стилизованную воду. Первое - это зеркальные "
"отражения. Спекулярные отражения - это яркие пятна, которые вы видите, когда "
"солнце отражается прямо в ваш глаз. Второе - отражение Френеля. Отражение "
"Френеля - это свойство объектов становиться более отражающими под небольшим "
"углом. Именно по этой причине вы можете видеть воду под собой, а вдали от "
"вас отражается небо."

msgid ""
"In order to increase the specular reflections, we will do two things. First, "
"we will change the render mode for specular to toon because the toon render "
"mode has larger specular highlights."
msgstr ""
"Для того чтобы увеличить зеркальные отражения, мы сделаем две вещи. Во-"
"первых, мы изменим режим рендеринга для specular на toon, потому что режим "
"рендеринга toon имеет больше спекулярных бликов."

msgid ""
"Second we will add rim lighting. Rim lighting increases the effect of light "
"at glancing angles. Usually it is used to emulate the way light passes "
"through fabric on the edges of an object, but we will use it here to help "
"achieve a nice watery effect."
msgstr ""
"Во-вторых, мы добавим ободковое освещение. Окантовочное освещение усиливает "
"эффект света под скользящими углами. Обычно оно используется для имитации "
"прохождения света через ткань на краях объекта, но мы будем использовать его "
"здесь, чтобы добиться красивого эффекта воды."

msgid "Translation status"
msgstr "Статус перевода"
