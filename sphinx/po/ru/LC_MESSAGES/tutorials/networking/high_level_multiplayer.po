#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "High-level multiplayer"
msgstr "Высокоуровневый мультиплеер"

msgid ""
"The following explains the differences of high- and low-level networking in "
"Godot as well as some fundamentals. If you want to jump in head-first and "
"add networking to your first nodes, skip to `Initializing the network`_ "
"below. But make sure to read the rest later on!"
msgstr ""
"Ниже объясняются различия между высоко- и низкоуровневых сетей в Godot, а "
"также некоторые базовые основы. Если вы хотите перейти сразу к делу и "
"добавить сеть в свои первые узлы, перейдите к разделу `Инициализация сети`_ "
"ниже. Но не забудьте прочитать остальные разделы позже!"

msgid "This is due to the inherent limitations of the low-level protocols:"
msgstr "Это связано с присущими ему ограничениями протоколов низкого уровня:"

msgid ""
"TCP ensures packets will always arrive reliably and in order, but latency is "
"generally higher due to error correction. It's also quite a complex protocol "
"because it understands what a \"connection\" is, and optimizes for goals "
"that often don't suit applications like multiplayer games. Packets are "
"buffered to be sent in larger batches, trading less per-packet overhead for "
"higher latency. This can be useful for things like HTTP, but generally not "
"for games. Some of this can be configured and disabled (e.g. by disabling "
"\"Nagle's algorithm\" for the TCP connection)."
msgstr ""
"TCP гарантирует, что пакеты всегда будут поступать надежно и в правильном "
"порядке, но задержка обычно выше из-за исправления ошибок. Это также "
"довольно сложный протокол, потому что он понимает, что такое \"соединение\", "
"и оптимизируется для целей, которые часто не подходят для приложений, таких "
"как многопользовательские игры. Пакеты буферизуются для отправки большими "
"партиями, что снижает накладные расходы на пакеты для увеличения задержки. "
"Это может быть полезно для таких вещей, как HTTP, но обычно не для игр. "
"Некоторые из них можно настроить и отключить (например, отключив \"алгоритм "
"Nagle\" для TCP-подключения)."

msgid ""
"UDP is a simpler protocol, which only sends packets (and has no concept of a "
"\"connection\"). No error correction makes it pretty quick (low latency), "
"but packets may be lost along the way or received in the wrong order. Added "
"to that, the MTU (maximum packet size) for UDP is generally low (only a few "
"hundred bytes), so transmitting larger packets means splitting them, "
"reorganizing them and retrying if a part fails."
msgstr ""
"UDP - это более простой протокол, который только отправляет пакеты (и не "
"имеет понятия \"соединение\"). Отсутствие коррекции ошибок делает его "
"довольно быстрым (низкая задержка), но пакеты могут быть потеряны по пути "
"или получены в неправильном порядке. Кроме того, MTU (максимальный размер "
"пакета) для UDP обычно невелик (всего несколько сотен байт), поэтому "
"передача больших пакетов означает их разделение, реорганизацию и повторную "
"попытку в случае неудачи."

msgid ""
"In general, TCP can be thought of as reliable, ordered, and slow; UDP as "
"unreliable, unordered and fast. Because of the large difference in "
"performance, it often makes sense to re-build the parts of TCP wanted for "
"games (optional reliability and packet order), while avoiding the unwanted "
"parts (congestion/traffic control features, Nagle's algorithm, etc). Due to "
"this, most game engines come with such an implementation, and Godot is no "
"exception."
msgstr ""
"В целом, TCP можно считать надежным, упорядоченным и медленным; UDP - "
"ненадежным, неупорядоченным и быстрым. Из-за большой разницы в "
"производительности часто имеет смысл перестроить те части TCP, которые нужны "
"для игр (необязательная надежность и порядок пакетов), избегая при этом "
"ненужных частей (функции контроля перегрузок/трафика, алгоритм Нагла и т."
"д.). В связи с этим большинство игровых движков поставляются с такой "
"реализацией, и Godot не является исключением."

msgid ""
"Most of Godot's supported platforms offer all or most of the mentioned high- "
"and low-level networking features. As networking is always largely hardware "
"and operating system dependent, however, some features may change or not be "
"available on some target platforms. Most notably, the HTML5 platform "
"currently offers WebSockets and WebRTC support but lacks some of the higher-"
"level features, as well as raw access to low-level protocols like TCP and "
"UDP."
msgstr ""
"Большинство поддерживаемых Godot платформ предлагают все или большинство из "
"перечисленных высоко- и низкоуровневых сетевых функций. Однако, поскольку "
"сетевое взаимодействие всегда в значительной степени зависит от аппаратного "
"обеспечения и операционной системы, некоторые функции могут быть изменены "
"или недоступны на некоторых целевых платформах. В частности, платформа HTML5 "
"в настоящее время предлагает поддержку WebSockets и WebRTC, но не имеет "
"некоторых высокоуровневых функций, а также необработанного доступа к "
"низкоуровневым протоколам, таким как TCP и UDP."

msgid ""
"This is always the case when networking is involved and has nothing to do "
"with Godot. You can of course experiment, but when you release a networked "
"application, always take care of any possible security concerns."
msgstr ""
"Это тот случай, когда сеть существует и не имеет ничего общего с Godot. "
"Конечно, вы можете экспериментировать, но когда вы выпускаете сетевое "
"приложение, всегда заботьтесь о любых возможных проблемах безопасности."

msgid ""
"Before going into how we would like to synchronize a game across the "
"network, it can be helpful to understand how the base network API for "
"synchronization works."
msgstr ""
"Прежде чем перейти к тому, как синхронизировать игру по сети, может быть "
"полезно понять, как работает базовый сетевой API для синхронизации."

msgid ""
"This object extends from :ref:`PacketPeer <class_PacketPeer>`, so it "
"inherits all the useful methods for serializing, sending and receiving data. "
"On top of that, it adds methods to set a peer, transfer mode, etc. It also "
"includes signals that will let you know when peers connect or disconnect."
msgstr ""
"Этот объект простирается от :ref:`PacketPeer <class_PacketPeer>` таким "
"образом, он наследует все полезные методы сериализации, отправки и получения "
"данных. Кроме того, он добавляет методы для установки однорангового узла, "
"режима передачи и т. д. Она также включает в себя сигналы, которые позволят "
"вам знать, когда участник сети подключается или отключается."

msgid "Initializing the network"
msgstr "Инициализация сети"

msgid "Managing connections"
msgstr "Управление соединениями"

msgid "Exporting for dedicated servers"
msgstr "Экспортирование на выделенные серверы"

msgid "Translation status"
msgstr "Статус перевода"
