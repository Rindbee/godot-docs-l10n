#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "WebRTC"
msgstr "WebRTС"

msgid "HTML5, WebSocket, WebRTC"
msgstr "HTML5, WebSocket, WebRTC"

msgid ""
"One of Godot's great features is its ability to export to the HTML5/"
"WebAssembly platform, allowing your game to run directly in the browser when "
"a user visit your webpage."
msgstr ""
"Одна из мощных возможностей Godot — экспорт на платформу HTML5/WebAssembly, "
"что позволяет вашей игре запускаться прямо в браузере при посещении "
"пользователем вашей веб-страницы."

msgid ""
"This is a great opportunity for both demos and full games, but used to come "
"with some limitations. In the area of networking, browsers used to support "
"only HTTPRequests until recently, when first WebSocket and then WebRTC were "
"proposed as standards."
msgstr ""
"Это отличная возможность как для демо, так и для полноценных игр, но раньше "
"здесь были ограничения. В сфере сетевых взаимодействий браузеры до недавнего "
"времени поддерживали только HTTP-запросы, пока WebSocket, а затем и WebRTC "
"не стали стандартами."

msgid "WebSocket"
msgstr "WebSocket"

msgid ""
"When the WebSocket protocol was standardized in December 2011, it allowed "
"browsers to create stable and bidirectional connections to a WebSocket "
"server. The protocol is a very powerful tool to send push notifications to "
"browsers, and has been used to implement chats, turn-based games, etc."
msgstr ""
"Когда протокол WebSocket был стандартизирован в декабре 2011 года, это "
"позволило браузерам создавать стабильные двусторонние соединения с WebSocket-"
"сервером. Этот протокол является мощным инструментом для отправки push-"
"уведомлений в браузеры и используется для реализации чатов, пошаговых игр и "
"т.д."

msgid ""
"WebSockets, though, still use a TCP connection, which is good for "
"reliability but not for latency, so not good for real-time applications like "
"VoIP and fast-paced games."
msgstr ""
"Однако соединения WebSocket по-прежнему используют TCP, что обеспечивает "
"надёжность, но не снижает задержек, поэтому они не подходят для приложений "
"реального времени, таких как VoIP и динамичные игры."

msgid ""
"For this reason, since 2010, Google started working on a new technology "
"called WebRTC, which later on, in 2017, became a W3C candidate "
"recommendation. WebRTC is a much more complex set of specifications, and "
"relies on many other technologies behind the scenes (ICE, DTLS, SDP) to "
"provide fast, real-time, and secure communication between two peers."
msgstr ""
"По этой причине, начиная с 2010 года, Google начал разработку новой "
"технологии WebRTC, которая позже, в 2017 году, стала кандидатом в "
"рекомендации W3C. WebRTC представляет собой значительно более сложный набор "
"спецификаций, использующий множество вспомогательных технологий (ICE, DTLS, "
"SDP) для обеспечения быстрого, реального времени и безопасного соединения "
"между двумя пирами."

msgid ""
"The idea is to find the fastest route between the two peers and establish "
"whenever possible a direct communication (i.e. try to avoid a relaying "
"server)."
msgstr ""
"Основная идея — найти самый быстрый маршрут между двумя пирами и установить "
"прямое соединение там, где это возможно (т.е. избежать использования "
"ретранслирующего сервера)."

msgid ""
"However, this comes at a price, which is that some media information must be "
"exchanged between the two peers before the communication can start (in the "
"form of Session Description Protocol - SDP strings). This usually takes the "
"form of a so-called WebRTC Signaling Server."
msgstr ""
"Но за это приходится платить: перед началом связи пиры должны обменяться "
"медиа-информацией в виде строк протокола описания сессии (SDP). Обычно для "
"этого используется специальный сигнальный сервер WebRTC."

msgid ""
"Peers connect to a signaling server (for example a WebSocket server) and "
"send their media information. The server then relays this information to "
"other peers, allowing them to establish the desired direct communication. "
"Once this step is done, peers can disconnect from the signaling server and "
"keep the direct Peer-to-Peer (P2P) connection open."
msgstr ""
"Пиры подключаются к сигнальному серверу (например, WebSocket-серверу) и "
"отправляют свою медиа-информацию. Сервер передаёт эту информацию другим "
"пирам, позволяя им установить желаемое прямое соединение. После выполнения "
"этого шага пиры могут отключиться от сигнального сервера, сохраняя прямое "
"P2P-соединение активным."

msgid "Using WebRTC in Godot"
msgstr "WebRTC в контексте Godot"

msgid ""
"WebRTC is implemented in Godot via two main "
"classes :ref:`WebRTCPeerConnection <class_WebRTCPeerConnection>` "
"and :ref:`WebRTCDataChannel <class_WebRTCDataChannel>`, plus the multiplayer "
"API implementation :ref:`WebRTCMultiplayerPeer "
"<class_WebRTCMultiplayerPeer>`. See section on :ref:`high-level multiplayer "
"<doc_high_level_multiplayer>` for more details."
msgstr ""
"WebRTC реализован в Godot через два основных "
"класса: :ref:`WebRTCPeerConnection <class_WebRTCPeerConnection>` "
"и :ref:`WebRTCDataChannel <class_WebRTCDataChannel>`, плюс реализацию "
"мультиплеерного API :ref:`WebRTCMultiplayerPeer "
"<class_WebRTCMultiplayerPeer>`. Подробнее см. раздел :ref:`high-level "
"multiplayer <doc_high_level_multiplayer>`."

msgid ""
"These classes are available automatically in HTML5, but **require an "
"external GDExtension plugin on native (non-HTML5) platforms**. Check out the "
"`webrtc-native plugin repository <https://github.com/godotengine/webrtc-"
"native>`__ for instructions and to get the latest `release <https://"
"github.com/godotengine/webrtc-native/releases>`__."
msgstr ""
"Эти классы доступны автоматически на платформе HTML5, но **требуют внешнего "
"GDExtension-плагина для нативных (не-HTML5) платформ**. Инструкции и "
"последние версии смотрите в `репозитории плагина webrtc-native <https://"
"github.com/godotengine/webrtc-native>`__ и разделе `релизов <https://"
"github.com/godotengine/webrtc-native/releases>`__."

msgid ""
"When exporting to Android, make sure to enable the ``INTERNET`` permission "
"in the Android export preset before exporting the project or using one-click "
"deploy. Otherwise, network communication of any kind will be blocked by "
"Android."
msgstr ""
"При экспорте под Android обязательно включите разрешение ``INTERNET`` в "
"пресете экспорта Android до экспорта проекта или использования "
"одноразвёртывания. Иначе любое сетевое взаимодействие будет заблокировано "
"системой Android."

msgid "Minimal connection example"
msgstr "Простой пример соединения"

msgid ""
"This example will show you how to create a WebRTC connection between two "
"peers in the same application. This is not very useful in real life, but "
"will give you a good overview of how a WebRTC connection is set up."
msgstr ""
"В этом примере показано, как создать WebRTC-соединение между двумя пирами в "
"одном приложении. Хотя такой подход мало полезен в реальных сценариях, он "
"даст вам чёткое представление о процессе настройки WebRTC-соединения."

msgid "This will print:"
msgstr "Вывод в консоли:"

msgid "Local signaling example"
msgstr "Пример локального сигналлинга"

msgid ""
"This example expands on the previous one, separating the peers in two "
"different scenes, and using a :ref:`singleton <doc_singletons_autoload>` as "
"a signaling server."
msgstr ""
"Этот пример развивает предыдущий: пиры разделены на две разные сцены, а в "
"качестве сигнального сервера используется :ref:`синглтон (автозагружаемый "
"скрипт) <doc_singletons_autoload>`."

msgid "And now for the local signaling server:"
msgstr "Теперь для локального сигнального сервера:"

msgid ""
"This local signaling server is supposed to be used as a :ref:`singleton "
"<doc_singletons_autoload>` to connect two peers in the same scene."
msgstr ""
"Этот локальный сигнальный сервер должен использоваться как :ref:`синглтон "
"(автозагружаемый скрипт) <doc_singletons_autoload>` для соединения двух "
"пиров в одной сцене."

msgid "Then you can use it like this:"
msgstr "Теперь его можно использовать вот так:"

msgid "This will print something similar to this:"
msgstr "Вывод в консоль будет примерно таким:"

msgid "Remote signaling with WebSocket"
msgstr "Удалённый сигналлинг через WebSocket"

msgid ""
"A more advanced demo using WebSocket for signaling peers "
"and :ref:`WebRTCMultiplayerPeer <class_WebRTCMultiplayerPeer>` is available "
"in the `godot demo projects <https://github.com/godotengine/godot-demo-"
"projects>`_ under `networking/webrtc_signaling`."
msgstr ""
"Более продвинутый пример с использованием WebSocket для сигналлинга между "
"пирами и :ref:`WebRTCMultiplayerPeer <class_WebRTCMultiplayerPeer>` доступен "
"в `демо-проектах Godot <https://github.com/godotengine/godot-demo-"
"projects>`_ по пути `networking/webrtc_signaling`."
