#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "Введение"

msgid ""
"This series is a collection of best practices to help you work efficiently "
"with Godot."
msgstr ""
"В этом разделе представлены примеры лучших практик, которые помогут вам "
"эффективно работать с Godot."

msgid ""
"Godot allows for a great amount of flexibility in how you structure a "
"project's codebase and break it down into scenes. Each approach has its pros "
"and cons, and they can be hard to weigh until you've worked with the engine "
"for long enough."
msgstr ""
"Godot предоставляет большую гибкость в структурировании кодовой базы проекта "
"и разбиения проекта на сцены. У каждого подхода свои плюсы и минусы, и их "
"будет сложно взвесить, пока вы не поработаете в движке достаточно долго."

msgid ""
"There are always many ways to structure your code and solve specific "
"programming problems. It would be impossible to cover them all here."
msgstr ""
"Существует много способов структурировать свой код и решать специфические "
"задачи в программировании. Однако, невозможно охватить их все здесь."

msgid ""
"That is why each article starts from a real-world problem. We will break "
"down each problem in fundamental questions, suggest solutions, analyze the "
"pros and cons of each option, and highlight the best course of action for "
"the problem at hand."
msgstr ""
"По этой причине, каждая статья будет начинаться с постановки реальной "
"задачи, которая может встретиться при разработке. Мы разберем каждую задачу "
"на основополагающие вопросы, предложим решения, проанализируем все плюсы и "
"минусы каждого варианта и выделим наилучшие способы решения данной задачи."

msgid ""
"You should start by reading :ref:`doc_what_are_godot_classes`. It explains "
"how Godot's nodes and scenes relate to classes and objects in other Object-"
"Oriented programming languages. It will help you make sense of the rest of "
"the series."
msgstr ""
"Вам следует начать с чтения :ref:`doc_what_are_godot_classes`. Он объясняет, "
"как узлы и сцены Godot связаны с классами и объектами в других объектно-"
"ориентированных языках программирования. Это поможет вам разобраться в "
"остальной части серии."

msgid ""
"The best practices in Godot rely on Object-Oriented design principles. We "
"use tools like the `single responsibility <https://en.wikipedia.org/wiki/"
"Single_responsibility_principle>`_ principle and `encapsulation <https://en."
"wikipedia.org/wiki/Encapsulation_(computer_programming)>`_."
msgstr ""
"Лучшие практики в Godot основаны на принципах объектно-ориентированного "
"дизайна. Мы используем такие инструменты, как `принцип единственной "
"ответственности <https://ru.wikipedia.org/wiki/"
"%D0%9F%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF_%D0%B5%D0%B4%D0%B8%D0%BD%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%B9_%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B8>`_ "
"и `инкапсуляцию <https://ru.wikipedia.org/wiki/"
"%D0%98%D0%BD%D0%BA%D0%B0%D0%BF%D1%81%D1%83%D0%BB%D1%8F%D1%86%D0%B8%D1%8F_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)>`_."
