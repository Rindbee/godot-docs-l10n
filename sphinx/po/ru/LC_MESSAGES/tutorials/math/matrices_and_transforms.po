#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Matrices and transforms"
msgstr "Матрицы и преобразования"

msgid "Introduction"
msgstr "Введение"

msgid ""
"Before reading this tutorial, we recommend that you thoroughly read and "
"understand the :ref:`doc_vector_math` tutorial, as this tutorial requires a "
"knowledge of vectors."
msgstr ""
"Перед прочтением этого руководства мы рекомендуем вам внимательно прочитать "
"и понять руководство :ref:`doc_vector_math`, так как для этого руководства "
"требуются знания векторов."

msgid ""
"This tutorial is about *transformations* and how we represent them in Godot "
"using matrices. It is not a full in-depth guide to matrices. Transformations "
"are most of the time applied as translation, rotation, and scale, so we will "
"focus on how to represent those with matrices."
msgstr ""
"В этом руководстве мы расскажем о *преобразованиях* и о том, как мы "
"представляем их в Godot с помощью матриц. Это не исчерпывающее руководство "
"по матрицам. Преобразования чаще всего применяются в виде переноса, поворота "
"и масштабирования, поэтому мы сосредоточимся на том, как представить их с "
"помощью матриц."

msgid ""
"Most of this guide focuses on 2D, using :ref:`class_Transform2D` "
"and :ref:`class_Vector2`, but the way things work in 3D is very similar."
msgstr ""
"Большая часть этого руководства посвящена 2D с "
"использованием :ref:`class_Transform2D` и :ref:`class_Vector2`, но в 3D все "
"работает очень похоже."

msgid ""
"As mentioned in the previous tutorial, it is important to remember that in "
"Godot, the Y axis points *down* in 2D. This is the opposite of how most "
"schools teach linear algebra, with the Y axis pointing up."
msgstr ""
"Как упоминалось в предыдущем уроке, важно помнить, что в модели Godot ось Y "
"в двумерном пространстве направлена *вниз*. Это противоположно тому, как в "
"большинстве школ преподают линейную алгебру, где ось Y направлена вверх."

msgid ""
"The convention is that the X axis is red, the Y axis is green, and the Z "
"axis is blue. This tutorial is color-coded to match these conventions, but "
"we will also represent the origin vector with a blue color."
msgstr ""
"Ось X обозначается красным цветом, ось Y — зелёным, а ось Z — синим. В этом "
"уроке используется соответствующая цветовая схема, но синий цвет также "
"применяется для отображения вектора начала координат."

msgid "Matrix components and the Identity matrix"
msgstr "Компоненты матрицы и Единичная матрица"

msgid ""
"The identity matrix represents a transform with no translation, no rotation, "
"and no scale. Let's start by looking at the identity matrix and how its "
"components relate to how it visually appears."
msgstr ""
"Единичная матрица — это преобразование без перемещения, поворота и "
"масштабирования. Давайте начнём с рассмотрения единичной матрицы и того, как "
"её компоненты связаны с её визуальным представлением."

msgid ""
"Matrices have rows and columns, and a transformation matrix has specific "
"conventions on what each does."
msgstr ""
"Матрицы состоят из строк и столбцов, а матрица преобразования имеет "
"определенные соглашения о том, что делает каждая из них."

msgid ""
"In the image above, we can see that the red X vector is represented by the "
"first column of the matrix, and the green Y vector is likewise represented "
"by the second column. A change to the columns will change these vectors. We "
"will see how they can be manipulated in the next few examples."
msgstr ""
"На изображении выше видно, что красный вектор X представлен первым столбцом "
"матрицы, а зелёный вектор Y — вторым. Изменение столбцов изменит эти "
"векторы. В следующих нескольких примерах мы рассмотрим, как ими "
"манипулировать."

msgid ""
"You should not worry about manipulating rows directly, as we usually work "
"with columns. However, you can think of the rows of the matrix as showing "
"which vectors contribute to moving in a given direction."
msgstr ""
"Вам не стоит беспокоиться о непосредственной работе со строками, поскольку "
"мы обычно работаем со столбцами. Однако строки матрицы можно рассматривать "
"как индикаторы векторов, способствующих движению в заданном направлении."

msgid ""
"When we refer to a value such as ``t.x.y``, that's the Y component of the X "
"column vector. In other words, the bottom-left of the matrix. Similarly, "
"``t.x.x`` is top-left, ``t.y.x`` is top-right, and ``t.y.y`` is bottom-"
"right, where ``t`` is the Transform2D."
msgstr ""
"Когда мы говорим о значении вроде ``t.x.y``, это Y-компонент вектор-столбца "
"X. Другими словами, левый нижний элемент матрицы. Аналогично, ``t.x.x`` — "
"это левый верхний, ``t.y.x`` — правый верхний, а ``t.y.y`` — правый нижний, "
"где ``t`` — это Transform2D."

msgid ""
"Applying a scale is one of the easiest operations to understand. Let's start "
"by placing the Godot logo underneath our vectors so that we can visually see "
"the effects on an object:"
msgstr ""
"Масштабирование — одна из самых простых для понимания операций. Начнём с "
"размещения логотипа Godot под нашими векторами, чтобы наглядно увидеть "
"влияние преобразования на объект:"

msgid ""
"Now, to scale the matrix, all we need to do is multiply each component by "
"the scale we want. Let's scale it up by 2. 1 times 2 becomes 2, and 0 times "
"2 becomes 0, so we end up with this:"
msgstr ""
"Теперь, чтобы масштабировать матрицу, нам достаточно умножить каждый её "
"компонент на нужный коэффициент масштабирования. Увеличим масштаб в 2 раза.1 "
"умножить на 2 станет 2, а 0 умноженный на 2 останется 0, в результате "
"получаем:"

msgid "To do this in code, we multiply each of the vectors:"
msgstr "Чтобы сделать это в коде, мы перемножаем каждый из векторов:"

msgid ""
"If we wanted to return it to its original scale, we can multiply each "
"component by 0.5. That's pretty much all there is to scaling a "
"transformation matrix."
msgstr ""
"Если нужно вернуть исходный масштаб, достаточно умножить каждый компонент на "
"0.5. Это, в целом, всё, что требуется знать о масштабировании матрицы "
"преобразования."

msgid ""
"To calculate the object's scale from an existing transformation matrix, you "
"can use ``length()`` on each of the column vectors."
msgstr ""
"Чтобы вычислить масштаб объекта из существующей матрицы преобразования, вы "
"можете использовать ``length()`` для каждого из векторов-столбцов."

msgid ""
"In actual projects, you can use the ``scaled()`` method to perform scaling."
msgstr ""
"В реальных проектах для выполнения масштабирования можно использовать метод "
"``scaled()``."

msgid ""
"We'll start the same way as earlier, with the Godot logo underneath the "
"identity matrix:"
msgstr ""
"Начнём так же, как и ранее — разместим логотип Godot под единичной матрицей:"

msgid ""
"As an example, let's say we want to rotate our Godot logo clockwise by 90 "
"degrees. Right now the X axis points right and the Y axis points down. If we "
"rotate these in our head, we would logically see that the new X axis should "
"point down and the new Y axis should point left."
msgstr ""
"Предположим, мы хотим повернуть наш логотип по часовой стрелке на 90 "
"градусов. Сейчас ось X направлена вправо, а ось Y - вниз. Если мы представим "
"их поворот, то логически увидим, что новая ось X должна указывать вниз, а "
"новая ось Y - влево."

msgid ""
"You can imagine that you grab both the Godot logo and its vectors, and then "
"spin it around the center. Wherever you finish spinning, the orientation of "
"the vectors determines what the matrix is."
msgstr ""
"Можете представить, будто вы берёте и логотип Godot, и его векторы, а затем "
"вращаете их вокруг центра. В каком бы положении вы ни остановили вращение, "
"ориентация векторов будет определять значение матрицы."

msgid ""
"We need to represent \"down\" and \"left\" in normal coordinates, so means "
"we'll set X to (0, 1) and Y to (-1, 0). These are also the values of "
"``Vector2.DOWN`` and ``Vector2.LEFT``. When we do this, we get the desired "
"result of rotating the object:"
msgstr ""
"Нам нужно представить «вниз» и «влево» в нормальных координатах, поэтому мы "
"установим X в (0, 1), а Y в (-1, 0). Это также значения ``Vector2.DOWN`` и "
"``Vector2.LEFT``. Когда мы это сделаем, мы получим желаемый результат в виде "
"вращения объекта:"

msgid ""
"If you have trouble understanding the above, try this exercise: Cut a square "
"of paper, draw X and Y vectors on top of it, place it on graph paper, then "
"rotate it and note the endpoints."
msgstr ""
"Если вам сложно понять вышесказанное, попробуйте такое упражнение: вырежьте "
"из бумаги квадрат, нарисуйте на нём векторы X и Y, положите его на лист в "
"клетку, затем поверните и отметьте конечные точки векторов."

msgid ""
"To perform rotation in code, we need to be able to calculate the values "
"programmatically. This image shows the formulas needed to calculate the "
"transformation matrix from a rotation angle. Don't worry if this part seems "
"complicated, I promise it's the hardest thing you need to know."
msgstr ""
"Для выполнения поворота в коде нам нужно уметь программно вычислять "
"значения. Это изображение показывает формулы, необходимые для расчёта "
"матрицы преобразования из угла поворота. Не волнуйтесь, если эта часть "
"кажется сложной — обещаю, это самое трудное, что вам нужно знать."

msgid ""
"Godot represents all rotations with radians, not degrees. A full turn is "
"`TAU` or `PI*2` radians, and a quarter turn of 90 degrees is `TAU/4` or `PI/"
"2` radians. Working with `TAU` usually results in more readable code."
msgstr ""
"В Godot все вращения задаются в радианах, а не в градусах. Полный оборот "
"равен `TAU` или `PI*2` радиан, а поворот на 90 градусов (четверть оборота) — "
"`TAU/4` или `PI/2` радиан. Использование `TAU` обычно делает код более "
"читаемым."

msgid ""
"Fun fact: In addition to Y being *down* in Godot, rotation is represented "
"clockwise. This means that all the math and trig functions behave the same "
"as a Y-is-up CCW system, since these differences \"cancel out\". You can "
"think of rotations in both systems being \"from X to Y\"."
msgstr ""
"Интересный факт: В дополнение к тому, что в Godot ось Y указывает вниз, "
"вращение представлено по часовой стрелке. Это означает, что все "
"математические и тригонометрические функции работают так же, как в системе с "
"осью Y вверх и вращением против часовой стрелки (CCW), поскольку эти "
"различия \"компенсируются\". Можно считать, что вращение в обеих системах "
"происходит \"от X к Y\"."

msgid "Here's how that would be done in code (place the script on a Node2D):"
msgstr "Вот как это реализуется в коде (поместите скрипт на узел Node2D):"

msgid "Basis of the transformation matrix"
msgstr "Основа матрицы преобразования"

msgid ""
"Let's work through an example to help understand this. We will start with "
"the identity transform like last time, except we will keep track of the "
"origin vector this time."
msgstr ""
"Разберём пример для понимания. Начнём с единичного преобразования, как в "
"прошлый раз, но теперь будем отслеживать вектор начала координат."

msgid ""
"Godot's 2D uses coordinates based on pixels, so in actual projects you will "
"want to translate by hundreds of units."
msgstr ""
"Godot в 2D использует координаты, основанные на пикселях, поэтому в реальных "
"проектах вам потребуется перемещать объекты на сотни единиц."

msgid ""
"Let's set the translation to (350, 150), rotate by -0.5 rad, and scale by 3. "
"I've posted a screenshot, and the code to reproduce it, but I encourage you "
"to try and reproduce the screenshot without looking at the code!"
msgstr ""
"Давайте установим перемещение на (350, 150), поворот на -0.5 радиан и "
"масштаб на 3. Я приложил скриншот и код для воспроизведения, но советую вам "
"попробовать воссоздать скриншот, не заглядывая в код!"

msgid "Shearing the transformation matrix (advanced)"
msgstr "Скос с помощью матрицы преобразования (дополнительно)"

msgid ""
"If you are only looking for how to *use* transformation matrices, feel free "
"to skip this section of the tutorial. This section explores an uncommonly "
"used aspect of transformation matrices for the purpose of building an "
"understanding of them."
msgstr ""
"Если вам нужно только узнать, как *использовать* матрицы преобразования, "
"смело пропускайте этот раздел. Здесь рассматривается редко применяемый "
"аспект матриц преобразования для более глубокого понимания их работы."

msgid ""
"You may have noticed that a transform has more degrees of freedom than the "
"combination of the above actions. The basis of a 2D transformation matrix "
"has four total numbers in two :ref:`class_Vector2` values, while a rotation "
"value and a Vector2 for scale only has 3 numbers. The high-level concept for "
"the missing degree of freedom is called *shearing*."
msgstr ""
"Возможно, вы заметили, что преобразование имеет больше степеней свободы, чем "
"комбинация указанных выше действий. Основа матрицы 2D-преобразования "
"содержит четыре числа в двух значениях :ref:`class_Vector2`, тогда как угол "
"поворота и Vector2 масштаба — только 3 числа. Этот недостающий параметр "
"называется *перекосом* (shearing)."

msgid ""
"Similarly, the top-right corner of the grid, which is always at the UV "
"position of (1, -1), is at the world position of (0, -1), which is "
"calculated from X*1 + Y*-1, which is (1, 0) - (1, 1), or (1 - 1, 0 - 1), or "
"(0, -1). This matches up with our observation of where the top-right corner "
"of the image is."
msgstr ""
"Аналогично, правый верхний угол сетки, который всегда находится в "
"ультрафиолетовой позиции (1, -1), находится в мировой позиции (0, -1), "
"которая вычисляется по X*1 + Y*-1, что составляет (1, 0) - (1, 1), или (1 - "
"1, 0 - 1), или (0, -1). Это совпадает с нашими наблюдениями о том, где "
"находится правый верхний угол изображения."

msgid "When multiplying matrices, order matters! Don't mix them up."
msgstr ""
"При умножении матриц порядок имеет значение! Не смешивайте элементы матриц."

msgid "Lastly, applying the identity transform will always do nothing."
msgstr "В итоге, применение преобразования тождества никогда ничего не дает."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about matrix composition: https://www.youtube.com/watch?"
"v=XkY2DOUCWMU"
msgstr ""
"Если вам нужно дополнительное объяснение, вам стоит посмотреть отличное "
"видео от 3Blue1Brown о композиции (умножении) матриц: https://"
"www.youtube.com/watch?v=XkY2DOUCWMU"

msgid ""
"Multiplying an inverse transform by the normal transform undoes all "
"transformations:"
msgstr ""
"Умножение обратного преобразования на нормальное отменяет все преобразования:"

msgid "How does it all work in 3D?"
msgstr "Как все это работает в 3D?"

msgid ""
"All of the concepts for how translation, rotation, scale, and shearing work "
"in 3D are all the same compared to 2D. To scale, we take each component and "
"multiply it; to rotate, we change where each basis vector is pointing; to "
"translate, we manipulate the origin; and to shear, we change the basis "
"vectors to be non-perpendicular."
msgstr ""
"Все концепции перемещения, поворота, масштабирования и сдвига, работают в 3D "
"также, как и в 2D. Для масштабирования мы берем каждый компонент и умножаем "
"его; для поворота мы изменяем направление каждого базисного вектора; для "
"перемещения мы управляем началом координат; для сдвига мы делаем базисные "
"векторы неперпендикулярными."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about 3D linear transformations: https://www.youtube.com/"
"watch?v=rHLEWRxRGiM"
msgstr ""
"Если вам нужно дополнительное объяснение, вам следует посмотреть отличное "
"видео от 3Blue1Brown о трехмерных линейных преобразованиях: https://"
"www.youtube.com/watch?v=rHLEWRxRGiM"

msgid "https://www.youtube.com/watch?v=mvmuCPvRoWQ"
msgstr "https://www.youtube.com/watch?v=mvmuCPvRoWQ"

msgid "https://www.youtube.com/watch?v=d4EgbgTm0Bg"
msgstr "https://www.youtube.com/watch?v=d4EgbgTm0Bg"

msgid "https://eater.net/quaternions"
msgstr "https://eater.net/quaternions"
