#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Matrices and transforms"
msgstr "Матрицы и преобразования"

msgid "Introduction"
msgstr "Введение"

msgid ""
"Similarly, the top-right corner of the grid, which is always at the UV "
"position of (1, -1), is at the world position of (0, -1), which is "
"calculated from X*1 + Y*-1, which is (1, 0) - (1, 1), or (1 - 1, 0 - 1), or "
"(0, -1). This matches up with our observation of where the top-right corner "
"of the image is."
msgstr ""
"Аналогично, правый верхний угол сетки, который всегда находится в "
"ультрафиолетовой позиции (1, -1), находится в мировой позиции (0, -1), "
"которая вычисляется по X*1 + Y*-1, что составляет (1, 0) - (1, 1), или (1 - "
"1, 0 - 1), или (0, -1). Это совпадает с нашими наблюдениями о том, где "
"находится правый верхний угол изображения."

msgid "When multiplying matrices, order matters! Don't mix them up."
msgstr ""
"При умножении матриц порядок имеет значение! Не смешивайте элементы матриц."

msgid "Lastly, applying the identity transform will always do nothing."
msgstr "В итоге, применение преобразования тождества никогда ничего не дает."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about matrix composition: https://www.youtube.com/watch?"
"v=XkY2DOUCWMU"
msgstr ""
"Если вам нужно дополнительное объяснение, вам стоит посмотреть отличное "
"видео от 3Blue1Brown о композиции (умножении) матриц: https://www.youtube."
"com/watch?v=XkY2DOUCWMU"

msgid ""
"Multiplying an inverse transform by the normal transform undoes all "
"transformations:"
msgstr ""
"Умножение обратного преобразования на нормальное отменяет все преобразования:"

msgid "How does it all work in 3D?"
msgstr "Как все это работает в 3D?"

msgid ""
"All of the concepts for how translation, rotation, scale, and shearing work "
"in 3D are all the same compared to 2D. To scale, we take each component and "
"multiply it; to rotate, we change where each basis vector is pointing; to "
"translate, we manipulate the origin; and to shear, we change the basis "
"vectors to be non-perpendicular."
msgstr ""
"Все концепции перемещения, поворота, масштабирования и сдвига, работают в 3D "
"также, как и в 2D. Для масштабирования мы берем каждый компонент и умножаем "
"его; для поворота мы изменяем направление каждого базисного вектора; для "
"перемещения мы управляем началом координат; для сдвига мы делаем базисные "
"векторы неперпендикулярными."

msgid ""
"If you would like additional explanation, you should check out 3Blue1Brown's "
"excellent video about 3D linear transformations: https://www.youtube.com/"
"watch?v=rHLEWRxRGiM"
msgstr ""
"Если вам нужно дополнительное объяснение, вам следует посмотреть отличное "
"видео от 3Blue1Brown о трехмерных линейных преобразованиях: https://www."
"youtube.com/watch?v=rHLEWRxRGiM"

msgid "https://www.youtube.com/watch?v=mvmuCPvRoWQ"
msgstr "https://www.youtube.com/watch?v=mvmuCPvRoWQ"

msgid "https://www.youtube.com/watch?v=d4EgbgTm0Bg"
msgstr "https://www.youtube.com/watch?v=d4EgbgTm0Bg"

msgid "https://eater.net/quaternions"
msgstr "https://eater.net/quaternions"
