#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Advanced post-processing"
msgstr "Post procesamiento avanzado"

msgid "Introduction"
msgstr "Introducción"

msgid ""
"This tutorial describes an advanced method for post-processing in Godot. In "
"particular, it will explain how to write a post-processing shader that uses "
"the depth buffer. You should already be familiar with post-processing "
"generally and, in particular, with the methods outlined in the :ref:`custom "
"post-processing tutorial <doc_custom_postprocessing>`."
msgstr ""
"Este tutorial describe un método avanzado para el post-procesamiento en "
"Godot. En particular, explicará cómo escribir un shader de post-"
"procesamiento que utilice el buffer de profundidad. Ya deberías estar "
"familiarizado con el post-procesamiento en general y, en particular, con los "
"métodos descritos en el :ref:`tutorial de post-procesamiento personalizado "
"<doc_custom_postprocessing>`."

msgid "Full screen quad"
msgstr "Quad de pantalla completa"

msgid "The depth buffer cannot be accessed"
msgstr "No se puede acceder al buffer de profundidad"

msgid "The effect of the post-processing shader is not visible in the editor"
msgstr "El efecto del shader de post-procesamiento no es visible en el editor"

msgid ""
"Even with this vertex shader, the quad keeps disappearing. This is due to "
"frustum culling, which is done on the CPU. Frustum culling uses the camera "
"matrix and the AABBs of Meshes to determine if the Mesh will be visible "
"*before* passing it to the GPU. The CPU has no knowledge of what we are "
"doing with the vertices, so it assumes the coordinates specified refer to "
"world positions, not clip space positions, which results in Godot culling "
"the quad when we turn away from the center of the scene. In order to keep "
"the quad from being culled, there are a few options:"
msgstr ""
"Incluso con este shader de vértices, el quad sigue desapareciendo. Esto se "
"debe a la recolección de frustum, que se hace en la CPU. El Frustum culling "
"utiliza la matriz de la cámara y el AABB de las mallas para determinar si la "
"malla será visible *antes* de pasarla a la GPU. La CPU no tiene conocimiento "
"de lo que estamos haciendo con los vértices, por lo que asume que las "
"coordenadas especificadas se refieren a las posiciones del mundo, no a las "
"posiciones del espacio de recorte, lo que resulta en la selección de Godot "
"en el quad cuando nos alejamos del centro de la escena. Para evitar que el "
"quad sea eliminado, hay algunas opciones:"

msgid ""
"Add the QuadMesh as a child to the camera, so the camera is always pointed "
"at it"
msgstr ""
"Añade la QuadMesh como un hijo a la cámara, para que la cámara siempre esté "
"apuntando a ella"

msgid ""
"Set the Geometry property ``extra_cull_margin`` as large as possible in the "
"QuadMesh"
msgstr ""
"Establecer la propiedad de Geometría \"extra_cull_margin\" tan grande como "
"sea posible en el QuadMesh"

msgid ""
"The second option ensures that the quad is visible in the editor, while the "
"first option guarantees that it will still be visible even if the camera "
"moves outside the cull margin. You can also use both options."
msgstr ""
"La segunda opción asegura que el quad sea visible en el editor, mientras que "
"la primera garantiza que seguirá siendo visible incluso si la cámara se "
"mueve fuera del margen de selección. También puedes usar ambas opciones."

msgid "Depth texture"
msgstr "Textura de profundidad (depth)"

msgid ""
"Similar to accessing the screen texture, accessing the depth texture is only "
"possible when reading from the current viewport. The depth texture cannot be "
"accessed from another viewport to which you have rendered."
msgstr ""
"De manera similar al acceso a la textura de la pantalla, el acceso a la "
"textura de profundidad sólo es posible cuando se lee desde el puerto de "
"visualización actual. No se puede acceder a la textura de profundidad desde "
"otra ventana de visualización en la que se haya renderizado."

msgid ""
"Convert NDC to view space by multiplying the NDC by "
"``INV_PROJECTION_MATRIX``. Recall that view space gives positions relative "
"to the camera, so the ``z`` value will give us the distance to the point."
msgstr ""
"En primer lugar, tomar las coordenadas del espacio de la pantalla y "
"transformarlas en coordenadas normalizadas del dispositivo (NDC). Las NDC "
"van de ``-1`` a ``1``, similares a las coordenadas del espacio de recorte. "
"Reconstruye el NDC usando ``SCREEN_UV`` para el eje ``x`` y ``y``, y el "
"valor de profundidad para ``z``."

msgid ""
"Because the camera is facing the negative ``z`` direction, the position will "
"have a negative ``z`` value. In order to get a usable depth value, we have "
"to negate ``view.z``."
msgstr ""
"Debido a que la cámara está orientada hacia la dirección ``z`` negativa, la "
"posición tendrá un valor ``z`` negativo. Para obtener un valor de "
"profundidad utilizable, tenemos que negar ``view.z``."

msgid "An optimization"
msgstr "Una optimización"

msgid ""
"You can benefit from using a single large triangle rather than using a full "
"screen quad. The reason for this is explained `here <https://michaldrobot."
"com/2014/04/01/gcn-execution-patterns-in-full-screen-passes>`_. However, the "
"benefit is quite small and only beneficial when running especially complex "
"fragment shaders."
msgstr ""
"Puedes beneficiarte de usar un solo triángulo grande en lugar de usar un "
"cuadrángulo de pantalla completa. La razón de esto se explica `aquí <https://"
"michaldrobot.com/2014/04/01/gcn-execution-patterns-in-full-screen-passes>`_. "
"Sin embargo, el beneficio es bastante pequeño y sólo beneficioso cuando se "
"ejecutan shaders de fragmentos especialmente complejos."

msgid ""
"Assign the same vertex shader from above and everything should look exactly "
"the same."
msgstr ""
"Asigne el mismo shader de vértice desde arriba y todo debería verse "
"exactamente igual."
