#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 3D shader"
msgstr "Tu primer shader 3D"

msgid ""
"This tutorial will explain how to write a Spatial shader and will cover more "
"topics than the :ref:`CanvasItem <doc_your_first_canvasitem_shader>` "
"tutorial."
msgstr ""
"Este tutorial explicará cómo escribir un Spatial shader y cubrirá más temas "
"que el tutorial :ref:`CanvasItem <doc_your_first_canvasitem_shader>`."

msgid ""
"Spatial shaders have more built-in functionality than CanvasItem shaders. "
"The expectation with spatial shaders is that Godot has already provided the "
"functionality for common use cases and all the user needs to do in the "
"shader is set the proper parameters. This is especially true for a PBR "
"(physically based rendering) workflow."
msgstr ""
"Los Spatial shaders tienen más funcionalidad incorporada que los shaders "
"CanvasItem. Lo que se espera de los shaders espaciales es que Godot ya ha "
"proporcionado la funcionalidad para los casos de uso común y todo lo que el "
"usuario necesita hacer en el shader es establecer los parámetros adecuados. "
"Esto es especialmente cierto para un flujo de trabajo de PBR (renderización "
"basada en la física)."

msgid ""
"This tutorial assumes some basic shader knowledge such as types (``vec2``, "
"``float``, ``sampler2D``), and functions. If you are uncomfortable with "
"these concepts it is best to get a gentle introduction from `The Book of "
"Shaders <https://thebookofshaders.com>`_ before completing this tutorial."
msgstr ""
"Este tutorial asume algunos conocimientos básicos de shader como los tipos "
"(``vec2``, ``float``, ``sampler2D``), y las funciones. Si te sientes "
"incómodo con estos conceptos es mejor obtener una introducción suave de `The "
"Book of Shaders <https://thebookofshaders.com>`_ antes de completar este "
"tutorial."

msgid "Where to assign my material"
msgstr "Dónde asignar mi material"

msgid ""
"In 3D, objects are drawn using :ref:`Meshes <class_Mesh>`. Meshes are a "
"resource type that store geometry (the shape of your object) and materials "
"(the color and how the object reacts to light) in units called \"surfaces\". "
"A Mesh can have multiple surfaces, or just one. Typically, you would import "
"a mesh from another program (e.g. Blender). But Godot also has a few :ref:"
"`PrimitiveMeshes <class_primitivemesh>` that allow you to add basic geometry "
"to a scene without importing Meshes."
msgstr ""
"En 3D, los objetos se dibujan usando :ref:`Meshes <class_Mesh>`. Las mallas "
"son un tipo de recurso que almacena la geometría (la forma de su objeto) y "
"los materiales (el color y cómo el objeto reacciona a la luz) en unidades "
"llamadas \"superficies\". Una Malla puede tener múltiples superficies, o "
"sólo una. Típicamente, importarías una malla de otro programa (por ejemplo, "
"Blender). Pero Godot también tiene unos cuantos :ref:`PrimitiveMeshes "
"<class_primitivemesh>` que te permiten añadir geometría básica a una escena "
"sin importar las Mallas."

msgid "Setting up"
msgstr "Configurando"

msgid ""
"In the inspector tab beside \"Mesh\" click \"[empty]\" and select \"New "
"PlaneMesh\". Then click on the image of a plane that appears."
msgstr ""
"En la pestaña del inspector al lado de \"Mesh\" haga clic en \"[empty]\" y "
"seleccione \"New PlaneMesh\". Luego haga clic en la imagen de un avión que "
"aparece."

msgid "This adds a :ref:`PlaneMesh <class_planemesh>` to our scene."
msgstr "Esto agrega un :ref:`PlaneMesh <class_planemesh>` a nuestra escena."

msgid ""
"Then, in the viewport, click in the upper left corner on the button that "
"says \"Perspective\". A menu will appear. In the middle of the menu are "
"options for how to display the scene. Select 'Display Wireframe'."
msgstr ""
"Luego, en el viewport, haga clic en la esquina superior izquierda en el "
"botón que dice \"Perspectiva\". Aparecerá un menú. En el medio del menú hay "
"opciones para mostrar la escena. Selecciona 'Display Wireframe'."

msgid "This will allow you to see the triangles making up the plane."
msgstr "Esto te permitirá ver los triángulos que componen el avión."

msgid ""
"Now click beside \"Shader\" where it says \"[empty]\" and select \"New "
"Shader\"."
msgstr ""
"Ahora haz clic al lado de \"Shader\" donde dice \"[empty]\" y selecciona "
"\"New Shader\"."

msgid ""
"The shader editor should now pop up and you are ready to begin writing your "
"first Spatial shader!"
msgstr ""
"El editor shader debería aparecer ahora y estás listo para empezar a "
"escribir tu primer shader Espacial!"

msgid "Shader magic"
msgstr "Magia Shader"

msgid "We define the vertex shader like so:"
msgstr "Definimos el shader de vértices así:"

msgid ""
"With nothing in the ``vertex()`` function, Godot will use its default vertex "
"shader. We can easily start to make changes by adding a single line:"
msgstr ""
"Sin nada en la función ``vertex()``, Godot usará su shader de vértices por "
"defecto. Podemos empezar a hacer cambios fácilmente añadiendo una sola línea:"

msgid "Adding this line, you should get an image like the one below."
msgstr "Añadiendo esta línea, deberías obtener una imagen como la de abajo."

msgid ""
"Okay, let's unpack this. The ``y`` value of the ``VERTEX`` is being "
"increased. And we are passing the ``x`` and ``z`` components of the "
"``VERTEX`` as arguments to ``cos`` and ``sin``; that gives us a wave-like "
"appearance across the ``x`` and ``z`` axes."
msgstr ""
"Bien, vamos a desempacar esto. El valor ``y`` del ``VERTEX`` se está "
"incrementando. Y estamos pasando los componentes ``x`` y ``z`` del "
"``VERTEX`` como argumentos para ``cos`` y ``sin``; eso nos da una apariencia "
"de onda a través de los ejes ``x`` y ``z``."

msgid ""
"What we want to achieve is the look of little hills; after all. ``cos`` and "
"``sin`` already look kind of like hills. We do so by scaling the inputs to "
"the ``cos`` and ``sin`` functions."
msgstr ""
"Lo que queremos lograr es el aspecto de pequeñas colinas; después de todo. "
"``cos`` y ``sin`` ya se parecen a las colinas. Lo hacemos escalando las "
"entradas a las funciones ``cos`` y ``sin``."

msgid ""
"This looks better, but it is still too spiky and repetitive, let's make it a "
"little more interesting."
msgstr ""
"Esto se ve mejor, pero sigue siendo demasiado puntiagudo y repetitivo, "
"hagámoslo un poco más interesante."

msgid "Noise heightmap"
msgstr "Mapa de altura con ruido"

msgid ""
"Noise is a very popular tool for faking the look of terrain. Think of it as "
"similar to the cosine function where you have repeating hills except, with "
"noise, each hill has a different height."
msgstr ""
"Noise(Ruido) es una herramienta muy popular para fingir el aspecto del "
"terreno. Piense en ello como en la función del coseno, donde tiene colinas "
"que se repiten, excepto que, con el ruido, cada colina tiene una altura "
"diferente."

msgid ""
"To access a texture in a shader add the following code near the top of your "
"shader, outside the ``vertex()`` function."
msgstr ""
"Para acceder a una textura en un shader agregue el siguiente código cerca de "
"la parte superior de su shader, fuera de la función ``vertex()``."

msgid ""
"This will allow you to send a noise texture to the shader. Now look in the "
"inspector under your material. You should see a section called \"Shader "
"Params\". If you open it up, you'll see a section called \"noise\"."
msgstr ""
"Esto te permitirá enviar una textura de ruido al shader. Ahora mira en el "
"inspector debajo de tu material. Deberías ver una sección llamada \"Shader "
"Params\". Si la abres, verás una sección llamada \"noise\"."

msgid ""
":ref:`FastNoiseLite <class_fastnoiselite>` is used by the NoiseTexture2D to "
"generate a heightmap."
msgstr ""
":ref:`FastNoiseLite <class_fastnoiselite>` es utilizado por NoiseTexture2D "
"para generar un heightmap (mapa de altura)."

msgid "Once you set it up and should look like this."
msgstr "Una vez que esté todo configurado, debería verse así."

msgid ""
"Note: ``xyzw`` is the same as ``rgba`` in GLSL, so instead of ``texture()."
"x`` above, we could use ``texture().r``. See the `OpenGL documentation "
"<https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ for more "
"details."
msgstr ""
"Nota: ``xyzw`` es lo mismo que ``rgba`` en GLSL, así que en lugar de "
"``texture().x`` arriba, podríamos usar ``texture().r``. Mira la "
"``Documentación OpenGL <https://www.khronos.org/opengl/wiki/"
"Data_Type_(GLSL)#Vectores>`_ para mayor detalle."

msgid "Using this code you can see the texture creates random looking hills."
msgstr ""
"Usando este código puedes ver que la textura crea colinas de aspecto "
"aleatorio."

msgid ""
"Right now it is too spiky, we want to soften the hills a bit. To do that, we "
"will use a uniform. You already used a uniform above to pass in the noise "
"texture, now let's learn how they work."
msgstr ""
"Ahora mismo es demasiado puntiagudo, queremos suavizar un poco las colinas. "
"Para ello, usaremos un uniforme. Ya usaste un uniforme arriba para pasar la "
"textura del ruido, ahora vamos a aprender cómo funcionan."

msgid "Uniforms"
msgstr "Uniforms"

msgid ""
"Uniform variables allow you to pass data from the game into the shader. They "
"are very useful for controlling shader effects. Uniforms can be almost any "
"datatype that can be used in the shader. To use a uniform, you declare it in "
"your :ref:`Shader<class_Shader>` using the keyword ``uniform``."
msgstr ""
"Las variables uniformes permiten pasar datos del juego al shader. Son muy "
"útiles para controlar los efectos shader. Los uniformes pueden ser casi "
"cualquier tipo de dato que se pueda usar en el shader. Para usar un "
"uniforme, lo declaras en tu :ref:`Shader<class_Shader>` usando la palabra "
"clave ``uniform``."

msgid "Let's make a uniform that changes the height of the terrain."
msgstr "Hagamos un uniforme que cambie la altura del terreno."

msgid "Now it looks much better."
msgstr "Ahora se ve mucho mejor."

msgid "Interacting with light"
msgstr "Interactuar con la luz"

msgid ""
"First, turn wireframe off. To do so, click in the upper-left of the Viewport "
"again, where it says \"Perspective\", and select \"Display Normal\"."
msgstr ""
"Primero, apaga el marco de alambre. Para ello, haz clic en la parte superior "
"izquierda del Viewport de nuevo, donde dice \"Perspectiva\", y selecciona "
"\"Visualización Normal\"."

msgid ""
"Note how the mesh color goes flat. This is because the lighting on it is "
"flat. Let's add a light!"
msgstr ""
"Fíjese en cómo el color de la malla se vuelve plano. Esto se debe a que la "
"iluminación de la misma es plana. ¡Añadamos una luz!"

msgid ""
"You can see the light affecting the terrain, but it looks odd. The problem "
"is the light is affecting the terrain as if it were a flat plane. This is "
"because the light shader uses the normals from the :ref:`Mesh <class_mesh>` "
"to calculate light."
msgstr ""
"Se puede ver la luz que afecta al terreno, pero se ve rara. El problema es "
"que la luz está afectando al terreno como si fuera plano. Esto se debe a que "
"el shader de luz utiliza las normales de la :ref:`Mesh <class_mesh>` para "
"calcular la iluminación."

msgid ""
"The normals are stored in the Mesh, but we are changing the shape of the "
"Mesh in the shader, so the normals are no longer correct. To fix this, we "
"can recalculate the normals in the shader or use a normal texture that "
"corresponds to our noise. Godot makes both easy for us."
msgstr ""
"Los normales se almacenan en la Mesh, pero estamos cambiando la forma de la "
"Malla en el shader, por lo que los normales ya no son correctos. Para "
"arreglar esto, podemos recalcular los normales en el shader o usar una "
"textura normal que corresponda a nuestro ruido. Godot hace ambas cosas "
"fáciles para nosotros."

msgid ""
"You can calculate the new normal manually in the vertex function and then "
"just set ``NORMAL``. With ``NORMAL`` set, Godot will do all the difficult "
"lighting calculations for us. We will cover this method in the next part of "
"this tutorial, for now we will read normals from a texture."
msgstr ""
"Puedes calcular la nueva normalidad manualmente en la función de vértice y "
"luego sólo tienes que poner \"NORMAL\". Con \"NORMAL\", Godot hará todos los "
"cálculos de iluminación difíciles para nosotros. Cubriremos este método en "
"la próxima parte de este tutorial, por ahora leeremos normales de una "
"textura."

msgid ""
"Instead we will rely on the NoiseTexture again to calculate normals for us. "
"We do that by passing in a second noise texture."
msgstr ""
"En cambio, confiaremos en el NoiseTexture de nuevo para calcular las "
"normales por nosotros. Lo hacemos pasando una segunda textura de ruido."

msgid ""
"Now, because this is a normalmap and not a per-vertex normal, we are going "
"to assign it in the ``fragment()`` function. The ``fragment()`` function "
"will be explained in more detail in the next part of this tutorial."
msgstr ""
"Ahora, porque este es un mapa normal y no un normal por vértice, vamos a "
"asignarlo en la función ``fragment()``. La función ``fragment()`` se "
"explicará con más detalle en la siguiente parte de este tutorial."

msgid ""
"Lastly, in order to ensure that we are reading from the same places on the "
"noise texture and the normalmap texture, we are going to pass the ``VERTEX."
"xz`` position from the ``vertex()`` function to the ``fragment()`` function. "
"We do that with varyings."
msgstr ""
"Por último, para asegurarnos de que estamos leyendo de los mismos lugares en "
"la textura del ruido y la textura del mapa normal, vamos a pasar la posición "
"``VERTEX.xz`` de la función ``vertex()`` a la función ``fragment()``. Lo "
"hacemos con variaciones."

msgid ""
"Above the ``vertex()`` define a ``vec2`` called ``tex_position``. And inside "
"the ``vertex()`` function assign ``VERTEX.xz`` to ``tex_position``."
msgstr ""
"Sobre el ``vertex()`` define un ``vec2`` llamado ``tex_position``. Y dentro "
"de la función ``vertex()`` asigna ``VERTEX.xz`` a la ``tex_position``."

msgid ""
"And now we can access ``tex_position`` from the ``fragment()`` function."
msgstr ""
"Y ahora podemos acceder a ``tex_position`` desde la función ``fragment()``."

msgid ""
"With the normals in place the light now reacts to the height of the mesh "
"dynamically."
msgstr ""
"Con los normales en su lugar la luz ahora reacciona a la altura de la malla "
"de forma dinámica."

msgid ""
"We can even drag the light around and the lighting will update automatically."
msgstr ""
"Incluso podemos arrastrar la luz y la iluminación se actualizará "
"automáticamente."

msgid ""
"Here is the full code for this tutorial. You can see it is not very long as "
"Godot handles most of the difficult stuff for you."
msgstr ""
"Aquí está el código completo de este tutorial. Puedes ver que no es muy "
"largo ya que Godot maneja la mayoría de las cosas difíciles para ti."

msgid ""
"That is everything for this part. Hopefully, you now understand the basics "
"of vertex shaders in Godot. In the next part of this tutorial we will write "
"a fragment function to accompany this vertex function and we will cover a "
"more advanced technique to turn this terrain into an ocean of moving waves."
msgstr ""
"Eso es todo para esta parte. Esperemos que ahora entiendas lo básico de los "
"sombreadores de vértices en Godot. En la próxima parte de este tutorial "
"escribiremos una función de fragmento para acompañar esta función de vértice "
"y cubriremos una técnica más avanzada para convertir este terreno en un "
"océano de olas en movimiento."

msgid "Translation status"
msgstr "Estado de la traducción"
