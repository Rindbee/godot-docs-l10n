#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "CPU optimization"
msgstr "Optimización de CPU"

msgid "Measuring performance"
msgstr "Medición de desempeño"

msgid ""
"For the CPU, the easiest way to identify bottlenecks is to use a profiler."
msgstr ""
"Para identificar los cuellos de botella en la CPU, la forma más sencilla es "
"utilizar un perfilador (profiler)."

msgid "CPU profilers"
msgstr "Perfiladores de CPU"

msgid ""
"Profilers run alongside your program and take timing measurements to work "
"out what proportion of time is spent in each function."
msgstr ""
"Los perfiladores se ejecutan junto con tu programa y toman mediciones de "
"tiempo para determinar qué proporción del tiempo se gasta en cada función."

msgid ""
"The Godot IDE conveniently has a built-in profiler. It does not run every "
"time you start your project: it must be manually started and stopped. This "
"is because, like most profilers, recording these timing measurements can "
"slow down your project significantly."
msgstr ""
"El IDE de Godot tiene convenientemente un perfilador integrado. No se "
"ejecuta automáticamente cada vez que inicias tu proyecto, sino que debe ser "
"iniciado y detenido manualmente. Esto se debe a que, al igual que la mayoría "
"de los perfiladores, grabar estas mediciones de tiempo puede ralentizar "
"significativamente tu proyecto."

msgid "After profiling, you can look back at the results for a frame."
msgstr ""
"Después de realizar el perfilado, puedes revisar los resultados para un "
"fotograma específico."

msgid "Screenshot of the Godot profiler"
msgstr "Captura de pantalla del perfilador de Godot"

msgid "Results of a profile of one of the demo projects."
msgstr "Resultados de un perfil de un de los proyectos demo."

msgid ""
"We can see the cost of built-in processes such as physics and audio, as well "
"as seeing the cost of our own scripting functions at the bottom."
msgstr ""
"Podemos ver el costo de los procesos integrados, como la física y el audio, "
"así como el costo de nuestras propias funciones de script en la parte "
"inferior."

msgid ""
"Time spent waiting for various built-in servers may not be counted in the "
"profilers. This is a known bug."
msgstr ""
"El tiempo que se pasa esperando a varios servidores incorporados puede no "
"contabilizarse en los perfiladores. Este es un error conocido."

msgid ""
"When a project is running slowly, you will often see an obvious function or "
"process taking a lot more time than others. This is your primary bottleneck, "
"and you can usually increase speed by optimizing this area."
msgstr ""
"Cuando un proyecto se ejecuta lentamente, a menudo se puede identificar una "
"función o proceso específico que está consumiendo mucho más tiempo que los "
"demás. Este es tu principal cuello de botella y generalmente puedes aumentar "
"la velocidad optimizando esta área."

msgid ""
"For more info about using Godot's built-in profiler, "
"see :ref:`doc_debugger_panel`."
msgstr ""
"Para obtener más información sobre el uso del generador de perfiles "
"integrado de Godot, consulta :ref:`doc_debugger_panel`."

msgid "External profilers"
msgstr "Perfiladores externos"

msgid ""
"Although the Godot IDE profiler is very convenient and useful, sometimes you "
"need more power, and the ability to profile the Godot engine source code "
"itself."
msgstr ""
"Aunque el perfilador integrado en el IDE de Godot es muy conveniente y útil, "
"a veces se necesita más potencia y la capacidad de perfilar el código fuente "
"del motor de Godot en sí mismo."

msgid "Screenshot of Callgrind"
msgstr "Capturas de pantalla de Callgrind"

msgid "Example results from Callgrind, which is part of Valgrind."
msgstr "Ejemplo de resultados de Callgrind, que es parte de Valgrind."

msgid ""
"From the left, Callgrind is listing the percentage of time within a function "
"and its children (Inclusive), the percentage of time spent within the "
"function itself, excluding child functions (Self), the number of times the "
"function is called, the function name, and the file or module."
msgstr ""
"Desde la izquierda, Callgrind enumera el porcentaje de tiempo dentro de una "
"función y sus funciones hijas (Inclusivo), el porcentaje de tiempo gastado "
"dentro de la propia función, excluyendo las funciones hijas (Propio), el "
"número de veces que se llama a la función, el nombre de la función y el "
"archivo o módulo correspondiente."

msgid ""
"This is actually an excellent example because, in an ideal world, only a "
"very small proportion of time would be spent in the graphics driver. This is "
"an indication that there is a problem with too much communication and work "
"being done in the graphics API. This specific profiling led to the "
"development of 2D batching, which greatly speeds up 2D rendering by reducing "
"bottlenecks in this area."
msgstr ""
"Este es realmente un excelente ejemplo porque, en un mundo ideal, solo una "
"pequeña proporción de tiempo se gastaría en el controlador gráfico. Esto es "
"una indicación de que hay un problema con una comunicación y trabajo "
"excesivos que se realizan en la API gráfica. Este perfilado específico "
"condujo al desarrollo de la agrupación en 2D, lo cual acelera "
"considerablemente el renderizado en 2D al reducir los cuellos de botella en "
"esta área."

msgid "Manually timing functions"
msgstr "Funciones de sincronización manual"

msgid ""
"Another handy technique, especially once you have identified the bottleneck "
"using a profiler, is to manually time the function or area under test. The "
"specifics vary depending on the language, but in GDScript, you would do the "
"following:"
msgstr ""
"Otra técnica útil, especialmente una vez que hayas identificado el cuello de "
"botella utilizando un perfilador, es medir manualmente el tiempo de "
"ejecución de una función o área bajo prueba. Los detalles específicos pueden "
"variar según el lenguaje, pero en GDScript, podrías hacer lo siguiente:"

msgid ""
"When manually timing functions, it is usually a good idea to run the "
"function many times (1,000 or more times), instead of just once (unless it "
"is a very slow function). The reason for doing this is that timers often "
"have limited accuracy. Moreover, CPUs will schedule processes in a haphazard "
"manner. Therefore, an average over a series of runs is more accurate than a "
"single measurement."
msgstr ""
"Cuando mides manualmente el tiempo de las funciones, generalmente es una "
"buena idea ejecutar la función muchas veces (1,000 o más veces), en lugar de "
"solo una vez (a menos que sea una función muy lenta). La razón para hacer "
"esto es que los temporizadores a menudo tienen una precisión limitada. "
"Además, las CPUs programan los procesos de manera aleatoria. Por lo tanto, "
"un promedio de una serie de ejecuciones es más preciso que una sola medición."

msgid ""
"As you attempt to optimize functions, be sure to either repeatedly profile "
"or time them as you go. This will give you crucial feedback as to whether "
"the optimization is working (or not)."
msgstr ""
"A medida que intentes optimizar las funciones, asegúrate de perfilar o medir "
"el tiempo de manera repetida a medida que avanzas. Esto te brindará una "
"retroalimentación crucial para determinar si la optimización está "
"funcionando (o no)."

msgid "Caches"
msgstr "Cachés"

msgid ""
"CPU caches are something else to be particularly aware of, especially when "
"comparing timing results of two different versions of a function. The "
"results can be highly dependent on whether the data is in the CPU cache or "
"not. CPUs don't load data directly from the system RAM, even though it's "
"huge in comparison to the CPU cache (several gigabytes instead of a few "
"megabytes). This is because system RAM is very slow to access. Instead, CPUs "
"load data from a smaller, faster bank of memory called cache. Loading data "
"from cache is very fast, but every time you try and load a memory address "
"that is not stored in cache, the cache must make a trip to main memory and "
"slowly load in some data. This delay can result in the CPU sitting around "
"idle for a long time, and is referred to as a \"cache miss\"."
msgstr ""
"Las caches de la CPU son unas cosas a las que hay que tener muy en cuenta, "
"especialmente cuando se comparan los resultados de las medidas de tiempo de "
"dos versiones diferentes de una función. Los resultados pueden ser muy "
"dependientes del hecho de que los datos estén en la cache de la CPU o no. "
"Las CPUs no cargan los datos directamente desde la RAM del sistema, aunque "
"esta sea enorme en comparación de la cache de la CPU (varios gigabytes en "
"vez de algunos megabytes). Esto es así debido a que el acceso a la RAM del "
"sistema es muy lento. En su lugar, las CPUs cargan los datos banco de "
"memoria pequeño y rápido llamado cache. Cargar datos desde la cache es muy "
"rápido, pero cada vez que intentas acceder a una dirección de memoria que no "
"esta almacenada en la cache, la misma tendrá que ir a la memoria principal y "
"lentamente cargar algunos datos. Esta demora puede resultar en que la CPU se "
"quede inactiva por un tiempo largo, lo que es conocido como \"cache miss\"."

msgid ""
"This means that the first time you run a function, it may run slowly because "
"the data is not in the CPU cache. The second and later times, it may run "
"much faster because the data is in the cache. Due to this, always use "
"averages when timing, and be aware of the effects of cache."
msgstr ""
"Esto significa que la primera vez que ejecutas una función, puede ser lenta "
"porque los datos no están en la memoria caché de la CPU. Las veces "
"siguientes, puede ejecutarse mucho más rápido porque los datos están en la "
"caché. Debido a esto, siempre utiliza promedios al medir el tiempo y ten en "
"cuenta los efectos de la memoria caché."

msgid ""
"Understanding caching is also crucial to CPU optimization. If you have an "
"algorithm (routine) that loads small bits of data from randomly spread out "
"areas of main memory, this can result in a lot of cache misses, a lot of the "
"time, the CPU will be waiting around for data instead of doing any work. "
"Instead, if you can make your data accesses localised, or even better, "
"access memory in a linear fashion (like a continuous list), then the cache "
"will work optimally and the CPU will be able to work as fast as possible."
msgstr ""
"Comprender el funcionamiento de la memoria caché también es crucial para la "
"optimización de la CPU. Si tienes un algoritmo (rutina) que carga pequeñas "
"partes de datos desde áreas aleatoriamente dispersas en la memoria "
"principal, esto puede resultar en muchas \"faltas de caché\" (cache misses) "
"y, en muchos casos, la CPU estará esperando los datos en lugar de realizar "
"trabajo. En cambio, si puedes hacer que los accesos a los datos sean "
"localizados o, aún mejor, acceder a la memoria de manera lineal (como una "
"lista continua), entonces la caché funcionará de manera óptima y la CPU "
"podrá trabajar tan rápido como sea posible."

msgid "Languages"
msgstr "Idiomas"

msgid ""
"Godot supports a number of different languages, and it is worth bearing in "
"mind that there are trade-offs involved. Some languages are designed for "
"ease of use at the cost of speed, and others are faster but more difficult "
"to work with."
msgstr ""
"Es cierto que Godot admite varios lenguajes diferentes, y es importante "
"tener en cuenta que existen compensaciones involucradas. Algunos lenguajes "
"están diseñados para ser fáciles de usar a costa de la velocidad, mientras "
"que otros son más rápidos pero más difíciles de trabajar."

msgid ""
"Built-in engine functions run at the same speed regardless of the scripting "
"language you choose. If your project is making a lot of calculations in its "
"own code, consider moving those calculations to a faster language."
msgstr ""
"Las funciones incorporadas del motor se ejecutan a la misma velocidad sin "
"importar el lenguaje de script que elijas. Si tu proyecto realiza muchas "
"operaciones de cálculo en su propio código, considera trasladar esas "
"operaciones a un lenguaje más rápido."

msgid "GDScript"
msgstr "GDScript"

msgid "C#"
msgstr "C#"

msgid "Other languages"
msgstr "Otros idiomas"

msgid "C++"
msgstr "C++"

msgid "Threads"
msgstr "Hilos"

msgid ""
"Consider using threads when making a lot of calculations that can run in "
"parallel to each other. Modern CPUs have multiple cores, each one capable of "
"doing a limited amount of work. By spreading work over multiple threads, you "
"can move further towards peak CPU efficiency."
msgstr ""
"Considera utilizar hilos (threads) cuando realices una gran cantidad de "
"cálculos que pueden ejecutarse en paralelo. Los procesadores modernos tienen "
"múltiples núcleos, cada uno capaz de realizar una cantidad limitada de "
"trabajo. Al distribuir el trabajo en múltiples hilos, puedes acercarte más a "
"la máxima eficiencia de la CPU."

msgid "For more information on threads, see :ref:`doc_using_multiple_threads`."
msgstr ""
"Para obtener más información sobre subprocesos, "
"consulta :ref:`doc_using_multiple_threads`."

msgid "SceneTree"
msgstr "Árbol de Escenas"

msgid ""
"Each node is handled individually in the Godot renderer. Therefore, a "
"smaller number of nodes with more in each can lead to better performance."
msgstr ""
"Cada nodo se maneja de forma individual en el motor de renderizado de Godot. "
"Por lo tanto, tener un menor número de nodos con más contenido en cada uno "
"puede conducir a un mejor rendimiento."

msgid ""
"One quirk of the :ref:`SceneTree <class_SceneTree>` is that you can "
"sometimes get much better performance by removing nodes from the SceneTree, "
"rather than by pausing or hiding them. You don't have to delete a detached "
"node. You can for example, keep a reference to a node, detach it from the "
"scene tree using :ref:`Node.remove_child(node) "
"<class_Node_method_remove_child>`, then reattach it later "
"using :ref:`Node.add_child(node) <class_Node_method_add_child>`. This can be "
"very useful for adding and removing areas from a game, for example."
msgstr ""
"Una particularidad del :ref:`SceneTree <class_SceneTree>` es que a veces se "
"puede obtener un mejor rendimiento al eliminar nodos del SceneTree en lugar "
"de pausarlos u ocultarlos. No es necesario eliminar un nodo que ha sido "
"desvinculado. Por ejemplo, puedes mantener una referencia a un nodo, "
"desvincularlo del SceneTree "
"utilizando :ref:`Node.remove_child(node)<class_Node_method_remove_child>`, y "
"luego volver a vincularlo más adelante "
"utilizando :ref:`Node.add_child(node)<class_Node_method_add_child>`. Esto "
"puede ser muy útil para agregar y eliminar áreas de un juego, por ejemplo."

msgid ""
"You can avoid the SceneTree altogether by using Server APIs. For more "
"information, see :ref:`doc_using_servers`."
msgstr ""
"Es posible evitar el uso del SceneTree por completo utilizando las API de "
"los servidores (Server APIs). Para obtener más información, consulta la "
"documentación sobre cómo utilizar los servidores (:ref:`doc_using_servers`)."

msgid "Physics"
msgstr "Física"

msgid ""
"In some situations, physics can end up becoming a bottleneck. This is "
"particularly the case with complex worlds and large numbers of physics "
"objects."
msgstr ""
"En algunas situaciones, la física puede convertirse en un cuello de botella. "
"Esto ocurre especialmente en mundos complejos y con un gran número de "
"objetos físicos."

msgid "Here are some techniques to speed up physics:"
msgstr "Aquí hay algunas técnicas para acelerar la física:"

msgid ""
"Try using simplified versions of your rendered geometry for collision "
"shapes. Often, this won't be noticeable for end users, but can greatly "
"increase performance."
msgstr ""
"Intenta utilizar versiones simplificadas de la geometría renderizada para "
"las formas de colisión. A menudo, esto no será perceptible para los usuarios "
"finales, pero puede aumentar considerablemente el rendimiento."

msgid ""
"Try removing objects from physics when they are out of view / outside the "
"current area, or reusing physics objects (maybe you allow 8 monsters per "
"area, for example, and reuse these)."
msgstr ""
"Intenta eliminar los objetos de la física cuando estén fuera de la vista o "
"fuera del área actual, o reutilizar los objetos físicos. Por ejemplo, "
"(podrías permitir un máximo de 8 monstruos por área y reutilizarlos)."

msgid ""
"Another crucial aspect to physics is the physics tick rate. In some games, "
"you can greatly reduce the tick rate, and instead of for example, updating "
"physics 60 times per second, you may update them only 30 or even 20 times "
"per second. This can greatly reduce the CPU load."
msgstr ""
"Otro aspecto crucial de la física es la tasa de actualización de los ticks "
"físicos. En algunos juegos, puedes reducir considerablemente la tasa de "
"ticks, en lugar de, por ejemplo, actualizar la física 60 veces por segundo, "
"puedes hacerlo solo 30 o incluso 20 veces por segundo. Esto puede reducir "
"considerablemente la carga de la CPU."

msgid ""
"The downside of changing physics tick rate is you can get jerky movement or "
"jitter when the physics update rate does not match the frames per second "
"rendered. Also, decreasing the physics tick rate will increase input lag. "
"It's recommended to stick to the default physics tick rate (60 Hz) in most "
"games that feature real-time player movement."
msgstr ""
"El inconveniente de cambiar la tasa de ticks de la física es que puedes "
"experimentar movimientos bruscos o temblores cuando la tasa de actualización "
"de la física no coincide con los cuadros por segundo que se renderizan. "
"Además, disminuir la tasa de ticks de la física aumentará la latencia de "
"entrada. Se recomienda mantener la tasa de ticks de la física predeterminada "
"(60 Hz) en la mayoría de los juegos que presentan movimientos en tiempo real "
"del jugador."

msgid ""
"The solution to jitter is to use *fixed timestep interpolation*, which "
"involves smoothing the rendered positions and rotations over multiple frames "
"to match the physics. You can either implement this yourself or use a `third-"
"party addon <https://github.com/lawnjelly/smoothing-addon>`__. Performance-"
"wise, interpolation is a very cheap operation compared to running a physics "
"tick. It's orders of magnitude faster, so this can be a significant "
"performance win while also reducing jitter."
msgstr ""
"La solución para el temblor es utilizar la \"interpolación de pasos de "
"tiempo fijos\" (fixed timestep interpolation), que implica suavizar las "
"posiciones y rotaciones renderizadas a lo largo de varios cuadros para que "
"coincidan con la física. Puedes implementar esto por ti mismo o utilizar un "
"`third-party addon <https://github.com/lawnjelly/smoothing-addon>`__. En "
"cuanto al rendimiento, la interpolación es una operación muy económica en "
"comparación con la ejecución de un tick de física. Es varias órdenes de "
"magnitud más rápida, por lo que puede suponer un gran beneficio en "
"rendimiento al tiempo que reduce el temblor."
