#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using InputEvent"
msgstr "Usando InputEvent"

msgid "What is it?"
msgstr "¿Qué es eso?"

msgid ""
"Managing input is usually complex, no matter the OS or platform. To ease "
"this a little, a special built-in type is provided, :ref:`InputEvent "
"<class_InputEvent>`. This datatype can be configured to contain several "
"types of input events. Input events travel through the engine and can be "
"received in multiple locations, depending on the purpose."
msgstr ""
"Administrar inputs (o entradas) es normalmente complejo, sin importar en qué "
"SO o plataforma. Para aliviar un poco esto se provee un tipo built-in "
"especial, :ref:`InputEvent <class_InputEvent>`, este puede ser configurado "
"para contener varios tipos de eventos. Los eventos de entrada van a través "
"del motor y pueden ser recibidos en múltiples lugares, dependiendo de su "
"propósito."

msgid "Here is a quick example, closing your game if the escape key is hit:"
msgstr ""
"Aquí hay un ejemplo rápido de cerrar el juego cuando se presiona la tecla "
"\"escape\":"

msgid ""
"However, it is cleaner and more flexible to use the provided :ref:`InputMap "
"<class_InputMap>` feature, which allows you to define input actions and "
"assign them different keys. This way, you can define multiple keys for the "
"same action (e.g. the keyboard escape key and the start button on a "
"gamepad). You can then more easily change this mapping in the project "
"settings without updating your code, and even build a key mapping feature on "
"top of it to allow your game to change the key mapping at runtime!"
msgstr ""
"Sin embargo, es más limpio y flexible usar la funcionalidad :ref:`InputMap "
"<class_InputMap>`, la que permite definir acciones de entrada y asignarlas a "
"diferentes teclas. De este modo, se pueden definir múltiples teclas para la "
"misma acción (por ejemplo, la tecla escape y el botón start de un gamepad). "
"Así se puede cambiar el mapeo fácilmente en las opciones de proyecto sin "
"necesidad de modificar el código, incluso se puede crear una funcionalidad "
"de mapeo que permita cambiar las teclas utilizadas dentro del juego en "
"ejecución!"

msgid ""
"You can set up your InputMap under **Project > Project Settings > Input "
"Map** and then use those actions like this:"
msgstr ""
"Puedes configurar el InputMap dentro de **Proyecto > Ajustes del Proyecto > "
"Mapa de Entradas** y luego usa las acciones de este modo:"

msgid "How does it work?"
msgstr "¿Cómo funciona?"

msgid ""
"When sending events to its child and descendant nodes, the viewport will do "
"so, as depicted in the following graphic, in a reverse depth-first order, "
"starting with the node at the bottom of the scene tree, and ending at the "
"root node. Excluded from this process are Windows and SubViewports."
msgstr ""
"Cuando se envían eventos a hijos y nodos descendientes, el viewport lo hará "
"como se indica en la siguiente imagen, en un orden depth-first (primero en "
"profundidad), comenzando por el nodo al final del árbol de escenas y "
"finalizando en el nodo raíz. Están excluidos de este proceso los nodos "
"Window y Subviewport."

msgid ""
"GUI events also travel up the scene tree but, since these events target "
"specific Controls, only direct ancestors of the targeted Control node "
"receive the event."
msgstr ""
"Los eventos de GUI irán hacia arriba del árbol de escenas, como los eventos "
"apuntan a Controls específicos, sólo se dirige a ancestros de los nodos "
"Control indicados para recibir el evento."

msgid ""
"In accordance with Godot's node-based design, this enables specialized child "
"nodes to handle and consume particular events, while their ancestors, and "
"ultimately the scene root, can provide more generalized behavior if needed."
msgstr ""
"De acuerdo al diseño basado en nodos de Godot, esto habilita que nodos hijos "
"especializados manipulen y consuman eventos particulares, mientras que los "
"ancestros y finalmente el árbol de escenas, pueden proveer un comportamiento "
"más generalizado si es necesario."

msgid "Anatomy of an InputEvent"
msgstr "Anatomía de un InputEvent"

msgid ""
":ref:`InputEvent <class_InputEvent>` is just a base built-in type, it does "
"not represent anything and only contains some basic information, such as "
"event ID (which is increased for each event), device index, etc."
msgstr ""
":ref:`InputEvent <class_InputEvent>` es un tipo base integrado, no "
"representa nada y sólo contiene información básica, como el identificador "
"del evento (ID, el cual es incrementado por cada evento), índice de "
"dispositivo, etc."

msgid ""
"There are several specialized types of InputEvent, described in the table "
"below:"
msgstr ""
"Existen varios tipos de InputEvent especializados, descriptos en la "
"siguiente tabla:"

msgid "Event"
msgstr "Evento"

msgid "Description"
msgstr "Descripción"

msgid ":ref:`InputEvent <class_InputEvent>`"
msgstr ":ref:`InputEvent <class_InputEvent>`"

msgid "Empty Input Event."
msgstr "Evento de entrada vacío."

msgid ":ref:`InputEventKey <class_InputEventKey>`"
msgstr ":ref:`InputEventKey <class_InputEventKey>`"

msgid ":ref:`InputEventMouseButton <class_InputEventMouseButton>`"
msgstr ":ref:`InputEventMouseButton <class_InputEventMouseButton>`"

msgid "Contains click information, such as button, modifiers, etc."
msgstr "Contiene información de click como botón, modificadores, etc."

msgid ":ref:`InputEventMouseMotion <class_InputEventMouseMotion>`"
msgstr ":ref:`InputEventMouseMotion <class_InputEventMouseMotion>`"

msgid ":ref:`InputEventJoypadMotion <class_InputEventJoypadMotion>`"
msgstr ":ref:`InputEventJoypadMotion <class_InputEventJoypadMotion>`"

msgid "Contains Joystick/Joypad analog axis information."
msgstr "Contiene información de ejes análogos de Joystick/Joypad."

msgid ":ref:`InputEventJoypadButton <class_InputEventJoypadButton>`"
msgstr ":ref:`InputEventJoypadButton <class_InputEventJoypadButton>`"

msgid "Contains Joystick/Joypad button information."
msgstr "Contiene información de botones de Joystick/Joypad."

msgid ":ref:`InputEventScreenTouch <class_InputEventScreenTouch>`"
msgstr ":ref:`InputEventScreenTouch <class_InputEventScreenTouch>`"

msgid ""
"Contains multi-touch press/release information. (only available on mobile "
"devices)"
msgstr ""
"Contiene información sobre press/release de multi-touch. (sólo disponible en "
"dispositivos móviles)"

msgid ":ref:`InputEventScreenDrag <class_InputEventScreenDrag>`"
msgstr ":ref:`InputEventScreenDrag <class_InputEventScreenDrag>`"

msgid ""
"Contains multi-touch drag information. (only available on mobile devices)"
msgstr ""
"Contiene información de arrastre multi-touch. (sólo disponible en "
"dispositivos móviles)"

msgid "Contains a shortcut."
msgstr "Contiene un atajo."

msgid ":ref:`InputEventAction <class_InputEventAction>`"
msgstr ":ref:`InputEventAction <class_InputEventAction>`"

msgid ""
"Contains a generic action. These events are often generated by the "
"programmer as feedback. (more on this below)"
msgstr ""
"Contiene una acción genérica. Estos eventos a menudo son generados por el "
"programador como feedback. (más información a continuación)"

msgid "Actions"
msgstr "Acciones"

msgid ""
"The same code to work on different devices with different inputs (e.g., "
"keyboard on PC, Joypad on console)."
msgstr ""
"Que el mismo código funcione para diferentes dispositivos con distintos "
"dispositivos de entrada (por ejemplo, teclado en PC, Joypad en consolas)."

msgid "Input to be reconfigured at run-time."
msgstr "Las entradas pueden ser reconfiguradas en tiempo de ejecución."

msgid ""
"Any event has the methods :ref:`InputEvent.is_action() "
"<class_InputEvent_method_is_action>`, :ref:`InputEvent.is_pressed() "
"<class_InputEvent_method_is_pressed>` and :ref:`InputEvent "
"<class_InputEvent>`."
msgstr ""
"Todos los eventos tienen los métodos :ref:`InputEvent.is_action() "
"<class_InputEvent_method_is_action>`, :ref:`InputEvent.is_pressed() "
"<class_InputEvent_is_pressed>` y :ref:`InputEvent <class_InputEvent>`."

msgid ""
"Alternatively, it may be desired to supply the game back with an action from "
"the game code (a good example of this is detecting gestures). The Input "
"singleton has a method for this: :ref:`Input.parse_input_event() "
"<class_input_method_parse_input_event>`. You would normally use it like this:"
msgstr ""
"Alternativamente, es posible que quieras enviar una acción al juego desde el "
"código (un ejemplo de esto es la detección de gestos). El singleton Input "
"tiene un método para esto: :ref:`Input.parse_input_event() "
"<class_input_method_parse_input_event>`. Se usa normalmente así:"

msgid "InputMap"
msgstr "InputMap"

msgid ""
"Customizing and re-mapping input from code is often desired. If your whole "
"workflow depends on actions, the :ref:`InputMap <class_InputMap>` singleton "
"is ideal for reassigning or creating different actions at run-time. This "
"singleton is not saved (must be modified manually) and its state is run from "
"the project settings (project.godot). So any dynamic system of this type "
"needs to store settings in the way the programmer best sees fit."
msgstr ""
"A menudo se desea personalizar y re-mapear la entrada desde código. Si todo "
"el flujo de trabajo depende de las acciones, el singleton :ref:`InputMap "
"<class_InputMap>` es ideal para reasignar o crear diferentes acciones en "
"tiempo de ejecución. Este singleton no se guarda (debe ser modificado "
"manualmente) y su estado se ejecuta desde la configuración del proyecto "
"(project.godot). Por lo tanto, cualquier sistema dinámico de este tipo "
"necesita almacenar los ajustes de la forma que el programador considere más "
"adecuada."

msgid "Translation status"
msgstr "Estado de la traducción"
