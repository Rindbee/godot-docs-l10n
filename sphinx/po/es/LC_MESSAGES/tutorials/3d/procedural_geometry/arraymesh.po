#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the ArrayMesh"
msgstr "Usando ArrayMesh"

msgid ""
"This tutorial will present the basics of using an :ref:`ArrayMesh "
"<class_arraymesh>`."
msgstr ""
"Este tutorial presentará los fundamentos del uso de un :ref:`ArrayMesh "
"<class_arraymesh>`."

msgid ""
"To do so, we will use the function :ref:`add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`, which takes up to five "
"parameters. The first two are required, while the last three are optional."
msgstr ""
"Para ello, utilizaremos la función :ref:`add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`, que toma hasta cinco "
"parámetros. Los dos primeros son obligatorios, mientras que los últimos tres "
"son opcionales."

msgid ""
"The first parameter is the ``PrimitiveType``, an OpenGL concept that "
"instructs the GPU how to arrange the primitive based on the vertices given, "
"i.e. whether they represent triangles, lines, points, etc. "
"See :ref:`Mesh.PrimitiveType <enum_Mesh_PrimitiveType>` for the options "
"available."
msgstr ""
"El primer parámetro es el ``PrimitiveType``, un concepto de OpenGL que "
"instruye a la GPU cómo organizar el primitivo basado en los vértices "
"proporcionados, es decir, si representan triángulos, líneas, puntos, etc. "
"Consulta :ref:`Mesh.PrimitiveType <enum_Mesh_PrimitiveType>` para ver las "
"opciones disponibles."

msgid ""
"Common elements of ``arrays`` are listed below, together with the position "
"they must have within ``arrays``. See :ref:`Mesh.ArrayType "
"<enum_Mesh_ArrayType>` for a full list."
msgstr ""
"Los posibles elementos de los ``arrays`` se enumeran a continuación, junto "
"con la posición que deben tener dentro de ``arrays``. "
"Consulta :ref:`Mesh.ArrayType <enum_Mesh_ArrayType>` para obtener una lista "
"completa."

msgid "Index"
msgstr "Index"

msgid "Mesh.ArrayType Enum"
msgstr "Mesh.ArrayType Enum"

msgid "Array type"
msgstr "Tipo de array"

msgid "0"
msgstr "0"

msgid "``ARRAY_VERTEX``"
msgstr "``ARRAY_VERTEX``"

msgid ""
":ref:`PackedVector3Array <class_PackedVector3Array>` "
"or :ref:`PackedVector2Array <class_PackedVector2Array>`"
msgstr ""
":ref:`PackedVector3Array <class_PackedVector3Array>` "
"o :ref:`PackedVector2Array <class_PackedVector2Array>`"

msgid "1"
msgstr "1"

msgid "``ARRAY_NORMAL``"
msgstr "``ARRAY_NORMAL``"

msgid ":ref:`PackedVector3Array <class_PackedVector3Array>`"
msgstr ":ref:`PackedVector3Array <class_PackedVector3Array>`"

msgid "2"
msgstr "2"

msgid "``ARRAY_TANGENT``"
msgstr "``ARRAY_TANGENT``"

msgid "3"
msgstr "3"

msgid "``ARRAY_COLOR``"
msgstr "``ARRAY_COLOR``"

msgid ":ref:`PackedColorArray <class_PackedColorArray>`"
msgstr ":ref:`PackedColorArray <class_PackedColorArray>`"

msgid "4"
msgstr "4"

msgid "``ARRAY_TEX_UV``"
msgstr "``ARRAY_TEX_UV``"

msgid ""
":ref:`PackedVector2Array <class_PackedVector2Array>` "
"or :ref:`PackedVector3Array <class_PackedVector3Array>`"
msgstr ""
":ref:`PackedVector2Array <class_PackedVector2Array>` "
"o :ref:`PackedVector3Array <class_PackedVector3Array>`"

msgid "5"
msgstr "5"

msgid "``ARRAY_TEX_UV2``"
msgstr "``ARRAY_TEX_UV2``"

msgid "10"
msgstr "10"

msgid "``ARRAY_BONES``"
msgstr "``ARRAY_BONES``"

msgid "11"
msgstr "11"

msgid "``ARRAY_WEIGHTS``"
msgstr "``ARRAY_WEIGHTS``"

msgid "12"
msgstr "12"

msgid "``ARRAY_INDEX``"
msgstr "``ARRAY_INDEX``"

msgid ""
"In most cases when creating a mesh, we define it by its vertex positions. So "
"usually, the array of vertices (at index 0) is required, while the index "
"array (at index 12) is optional and will only be used if included. It is "
"also possible to create a mesh with only the index array and no vertex "
"array, but that's beyond the scope of this tutorial."
msgstr ""
"En la mayoría de casos, al crear un mesh, lo definimos pro las posiciones de "
"sus vertices. Por lo tanto, generalmente se requiere el arreglo de indices "
"(en el indice 0) mientras que el arreglo de índices (en el índice 12) es "
"opcional y solo se utilizará si se incluye. También es posible crear una "
"mesh solo con el arreglo de índices y sin el arreglo de vértices, pero eso "
"está más allá del alcance de este tutorial."

msgid "Under ``_ready()``, create a new Array."
msgstr "Dentro de ``_ready()``, crea un nuevo Array."

msgid ""
"This will be the array that we keep our surface information in - it will "
"hold all the arrays of data that the surface needs. Godot will expect it to "
"be of size ``Mesh.ARRAY_MAX``, so resize it accordingly."
msgstr ""
"Este será el arreglo en el que guardaremos la información de la superficie; "
"contendrá todos los arrays de datos que la superficie necesita. Godot espera "
"que tenga un tamaño de ``Mesh.ARRAY_MAX``, así que redimensiona el arreglo "
"en consecuencia."

msgid "Next create the arrays for each data type you will use."
msgstr ""
"A continuación, crea los arreglos para cada tipo de datos que utilizarás."

msgid ""
"Once you have filled your data arrays with your geometry you can create a "
"mesh by adding each array to ``surface_array`` and then committing to the "
"mesh."
msgstr ""
"Una vez que hayas llenado tus arreglos de datos con tu geometría, puedes "
"crear una malla agregando cada arreglo a ``surface_array`` y luego "
"comprometiéndolo a la malla."

msgid ""
"In this example, we used ``Mesh.PRIMITIVE_TRIANGLES``, but you can use any "
"primitive type available from mesh."
msgstr ""
"En este ejemplo, utilizamos ``Mesh.PRIMITIVE_TRIANGLES``, pero puedes "
"utilizar cualquier tipo de primitiva disponible en la malla."

msgid "Put together, the full code looks like:"
msgstr "A continuación se muestra el código completo:"

msgid ""
"The code that goes in the middle can be whatever you want. Below we will "
"present some example code for generating a sphere."
msgstr ""
"El código que se coloca en el medio puede ser el que desees. A continuación, "
"presentaremos un ejemplo de código para generar una esfera."

msgid "Generating geometry"
msgstr "Generando geometría"

msgid ""
"Here is sample code for generating a sphere. Although the code is presented "
"in GDScript, there is nothing Godot specific about the approach to "
"generating it. This implementation has nothing in particular to do with "
"ArrayMeshes and is just a generic approach to generating a sphere. If you "
"are having trouble understanding it or want to learn more about procedural "
"geometry in general, you can use any tutorial that you find online."
msgstr ""
"Aquí tienes un ejemplo de código para generar una esfera. Aunque el código "
"está presentado en GDScript, no hay nada específico de Godot en el enfoque "
"para generarlo. Esta implementación no tiene nada en particular que ver con "
"ArrayMeshes y es simplemente un enfoque genérico para generar una esfera. Si "
"tienes dificultades para entenderlo o quieres aprender más sobre geometría "
"procedural en general, puedes utilizar cualquier tutorial que encuentres en "
"línea."

msgid "Saving"
msgstr "Guardando"

msgid ""
"Finally, we can use the :ref:`ResourceSaver <class_resourcesaver>` class to "
"save the ArrayMesh. This is useful when you want to generate a mesh and then "
"use it later without having to re-generate it."
msgstr ""
"Finalmente, podemos utilizar la clase :ref:`ResourceSaver "
"<class_resourcesaver>` para guardar la ArrayMesh. Esto es útil cuando "
"queremos generar una malla y luego utilizarla posteriormente sin tener que "
"volver a generarla."
