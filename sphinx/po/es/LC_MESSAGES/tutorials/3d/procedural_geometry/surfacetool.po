#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the SurfaceTool"
msgstr "Usando SurfaceTool"

msgid ""
"The SurfaceTool also provides some useful helper functions like ``index()`` "
"and ``generate_normals()``."
msgstr ""
"El SurfaceTool también proporciona algunas funciones auxiliares útiles como "
"``index()`` y ``generate_normals()``."

msgid "Attributes are added before each vertex is added:"
msgstr "Los atributos se agregan antes de agregar cada vértice:"

msgid ""
"Similarly, if you have an index array, but you want each vertex to be unique "
"(e.g. because you want to use unique normals or colors per face instead of "
"per-vertex), you can call ``deindex()``."
msgstr ""
"De manera similar, si tienes un array de índices pero deseas que cada "
"vértice sea único (por ejemplo, porque deseas utilizar normales o colores "
"únicos por cara en lugar de por vértice), puedes llamar a ``deindex()``."

msgid ""
"If you don't add custom normals yourself, you can add them using "
"``generate_normals()``, which should be called after generating geometry and "
"before committing the mesh using ``commit()`` or ``commit_to_arrays()``. "
"Calling ``generate_normals(true)`` will flip the resulting normals. As a "
"side note, ``generate_normals()`` only works if the primitive type is set to "
"``Mesh.PRIMITIVE_TRIANGLES``."
msgstr ""
"Si no agregas normales personalizadas tú mismo, puedes añadirlas usando "
"``generate_normals()``, que debe ser llamado después de generar la geometría "
"y antes de confirmar la malla utilizando ``commit()`` o "
"``commit_to_arrays()``. Llamar a ``generate_normals(true)`` invertirá las "
"normales resultantes. Como nota adicional, ``generate_normals()`` solo "
"funciona si el tipo primitivo está establecido en "
"``Mesh.PRIMITIVE_TRIANGLES``."
