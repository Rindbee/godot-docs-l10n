#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cross-language scripting"
msgstr "Scripting de varios lenguajes"

msgid ""
"Godot allows you to mix and match scripting languages to suit your needs. "
"This means a single project can define nodes in both C# and GDScript. This "
"page will go through the possible interactions between two nodes written in "
"different languages."
msgstr ""
"Godot permite mezclar lenguajes de script según tus necesidades. Esto quiere "
"decir que un proyecto puede definir nodos en C# y GDScript. Esta página "
"mostrará las posibles interacciones entre dos nodos escritos en diferentes "
"lenguajes."

msgid ""
"The following two scripts will be used as references throughout this page."
msgstr ""
"Los siguientes dos scripts se utilizarán como referencias a lo largo de esta "
"página."

msgid "Instantiating nodes"
msgstr "Instanciando nodos"

msgid ""
"If you're not using nodes from the scene tree, you'll probably want to "
"instantiate nodes directly from the code."
msgstr ""
"Si no estás usando nodos del árbol de escena, probablemente quieras "
"instanciar nodos directamente desde código."

msgid "Instantiating C# nodes from GDScript"
msgstr "Instanciando nodos C# desde GDScript"

msgid ""
"Using C# from GDScript doesn't need much work. Once loaded "
"(see :ref:`doc_gdscript_classes_as_resources`), the script can be "
"instantiated with :ref:`new() <class_CSharpScript_method_new>`."
msgstr ""
"Usar C# de GDScript no necesita mucho trabajo. Una vez cargado "
"(ver :ref:`doc_gdscript_classes_as_resources`), el script puede ser "
"instanciado con :ref:`new() <class_CSharpScript_method_new>`."

msgid ""
"When creating ``.cs`` scripts, you should always keep in mind that the class "
"Godot will use is the one named like the ``.cs`` file itself. If that class "
"does not exist in the file, you'll see the following error: ``Invalid call. "
"Nonexistent function `new` in base``."
msgstr ""
"Cuando se crea un script ``.cs``, ten siempre en mente que la clase que "
"usará Godot es la que está nombrada como el archivo ``.cs``. Si esa clase no "
"existe en el archivo, verás el siguiente error: ``Invalid call. Nonexistent "
"function `new` in base``."

msgid "For example, MyCoolNode.cs should contain a class named MyCoolNode."
msgstr ""
"Por ejemplo, \"MyCoolNode.cs\"debe contener una clase llamada \"MyCoolNode\"."

msgid ""
"You also need to check your ``.cs`` file is referenced in the project's "
"``.csproj`` file. Otherwise, the same error will occur."
msgstr ""
"También necesitas revisar que tu archivo ``.cs`` esté referenciado en el "
"archivo de proyecto``.csproj``. De otro modo sucederá el mismo error."

msgid "Instantiating GDScript nodes from C#"
msgstr "Instanciando nodos GDScript desde C#"

msgid ""
"From the C# side, everything work the same way. Once loaded, the GDScript "
"can be instantiated with :ref:`GDScript.New() <class_GDScript_method_new>`."
msgstr ""
"Desde el lado de C#, todo funciona de la misma manera. Una vez cargado, el "
"GDScript puede ser instanciado con :ref:`GDScript.New() "
"<class_GDScript_method_new>`."

msgid ""
"Here we are using an :ref:`class_Object`, but you can use type conversion "
"like explained in :ref:`doc_c_sharp_features_type_conversion_and_casting`."
msgstr ""
"Aquí usaremos un :ref:`class_Object`, pero puedes usar conversión de tipos "
"como está explicado "
"en :ref:`doc_c_sharp_features_type_conversion_and_casting`."

msgid "Accessing fields"
msgstr "Accediendo campos"

msgid "Accessing C# fields from GDScript"
msgstr "Accediendo campos C# desde GDScript"

msgid ""
"Accessing C# fields from GDScript is straightforward, you shouldn't have "
"anything to worry about."
msgstr ""
"Acceder a los campos C# desde GDScript es sencillo, no deberías tener nada "
"de qué preocuparte."

msgid "Accessing GDScript fields from C#"
msgstr "Accediendo a los campos de GDScript desde C#"

msgid "Calling methods"
msgstr "Llamando métodos"

msgid "Calling C# methods from GDScript"
msgstr "Llamando métodos C# desde GDScript"

msgid ""
"Again, calling C# methods from GDScript should be straightforward. The "
"marshalling process will do its best to cast the arguments to match function "
"signatures. If that's impossible, you'll see the following error: ``Invalid "
"call. Nonexistent function `FunctionName```."
msgstr ""
"Una vez más, llamar a métodos C# desde GDScript debería ser sencillo. El "
"proceso de clasificación hará todo lo posible para convertir los argumentos "
"para que coincidan con las firmas de funciones. Si eso es imposible, verá el "
"siguiente error: ``Llamada no válida. Función `FunctionName``` inexistente."

msgid "Calling GDScript methods from C#"
msgstr "Llamando métodos GDScript desde C#"

msgid "Inheritance"
msgstr "Herencia"

msgid ""
"A GDScript file may not inherit from a C# script. Likewise, a C# script may "
"not inherit from a GDScript file. Due to how complex this would be to "
"implement, this limitation is unlikely to be lifted in the future. See `this "
"GitHub issue <https://github.com/godotengine/godot/issues/38352>`__ for more "
"information."
msgstr ""
"Un archivo GDSCript no puede heredar de un script C# del mismo en que un "
"script C# no puede heredar de un archivo GDScript. Debido a la complejidad "
"que llevaría implementarla, es poco probable que esta limitación sea "
"cambiada en el futuro. Ver `esta issue en GitHub <https://github.com/"
"godotengine/godot/issues/38352>`__ para más información."
