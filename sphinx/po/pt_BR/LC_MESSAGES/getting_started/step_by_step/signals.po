#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Sinal"

msgid "Using signals"
msgstr "Usando sinais"

msgid ""
"In this lesson, we will look at signals. They are messages that nodes emit "
"when something specific happens to them, like a button being pressed. Other "
"nodes can connect to that signal and call a function when the event occurs."
msgstr ""
"Nesta lição, veremos os sinais. São mensagens que os nós emitem quando algo "
"específico acontece com eles, como um botão sendo pressionado. Outros nós "
"podem se conectar a esse sinal e chamar uma função quando o evento ocorrer."

msgid ""
"Signals are a delegation mechanism built into Godot that allows one game "
"object to react to a change in another without them referencing one another. "
"Using signals limits `coupling <https://en.wikipedia.org/wiki/"
"Coupling_(computer_programming)>`_ and keeps your code flexible."
msgstr ""
"Os sinais são um mecanismo de delegação embutido no Godot que permite que um "
"objeto do jogo reaja a uma mudança em outro sem que eles façam referência um "
"ao outro. O uso de sinais limita o `acoplamento <https://en.wikipedia.org/"
"wiki/Coupling_(computer_programming)>`_ e mantém seu código flexível."

msgid ""
"Like methods (:ref:`class_callable`), signals are a first-class type since "
"Godot 4.0. This means you can pass them around as method arguments directly "
"without having to pass them as strings, which allows for better "
"autocompletion and is less error-prone. See the :ref:`class_signal` class "
"reference for a list of what you can do with the Signal type directly."
msgstr ""
"Assim como métodos (:ref:`class_callable`), sinais são um tipo de dado de "
"primeira classe desde a Godot 4.0. Isso significa que você pode passá-los "
"diretamente como argumentos de método sem precisar usá-los como strings, o "
"que permite um melhor autocompletar e reduz a chance de erros. Consulte a "
"referência da classe :ref:`class_signal` para ver uma lista do que você pode "
"fazer diretamente com o tipo \"Signal\"."

msgid ""
"As mentioned in the introduction, signals are Godot's version of the "
"observer pattern. You can learn more about it in `Game Programming Patterns "
"<https://gameprogrammingpatterns.com/observer.html>`__."
msgstr ""
"Conforme mencionado na introdução, os sinais são a versão de Godot do padrão "
"do observador. Você pode aprender mais sobre isso aqui: `Padrões de "
"Programações de Jogos <https://gameprogrammingpatterns.com/observer.html>`__."

msgid ""
"We will now use a signal to make our Godot icon from the previous lesson (:"
"ref:`doc_scripting_player_input`) move and stop by pressing a button."
msgstr ""
"Vamos agora usar um sinal para fazer nosso ícone Godot da lição anterior (:"
"ref:`doc_scripting_player_input`) se mover e parar ao pressionar um botão."

msgid "For this project, we will be following the Godot naming conventions."
msgstr "Para esse projeto, vamos seguir as convenções de nomeação do Godot."

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Classes (nós) usam o estilo ``PascalCase`` "
"(IniciaisMaiúsculas), variáveis e funções usam ``snake_case`` "
"(minúsculas_separadas_por_sublinha) e constantes usam ``ALL_CAPS`` "
"(TODAS_MAIÚSCULAS) (Veja mais em :ref:`doc_gdscript_styleguide`)."

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**: Classes, variáveis de exportação e métodos usam PascalCase, campos "
"privados usam _camelCase, variáveis locais e parâmetros usam camelCase "
"(Veja :ref: `doc_c_sharp_styleguide`). Tenha o cuidado de digitar os nomes "
"dos métodos com precisão ao conectar os sinais."

msgid "Scene setup"
msgstr "Configuração da cena"

msgid "Create a new scene by going to the menu Scene -> New Scene."
msgstr "Crie uma nova cena acessando o menu Cena -> Nova cena."

msgid ""
"The node is small by default. Click and drag on the bottom-right handle of "
"the Button in the viewport to resize it."
msgstr ""
"O nó é pequeno por padrão. Clique e arraste a alça inferior direita do "
"Button na viewport para redimensioná-lo."

msgid ""
"If you don't see the handles, ensure the select tool is active in the "
"toolbar."
msgstr ""
"Se você não vir as alças, verifique se a ferramenta de seleção está ativa na "
"barra de ferramentas."

msgid "Click and drag on the button itself to move it closer to the sprite."
msgstr "Clique e arraste o botão para aproximá-lo do sprite."

msgid "Your scene tree and viewport should look like this."
msgstr "Sua árvore da cena e o Viewport devem se parecer com isso."

msgid "Connecting a signal in the editor"
msgstr "Conectando um sinal no editor"

msgid ""
"You can connect signals in the Node dock. Select the Button node and, on the "
"right side of the editor, click on the tab named \"Node\" next to the "
"Inspector."
msgstr ""
"Você pode conectar sinais no painel do Nó. Selecione o nó Botão e, no lado "
"direito do editor, clique na aba \"Nó\" ao lado do Inspetor."

msgid "The dock displays a list of signals available on the selected node."
msgstr "O painel exibe uma lista de sinais disponíveis no nó selecionado."

msgid "Double-click the \"pressed\" signal to open the node connection window."
msgstr ""
"Clique duas vezes no sinal \"pressed\" para abrir a janela de conexão do nó."

msgid ""
"When connecting signals via the editor's Node dock, you can use two modes. "
"The simple one only allows you to connect to nodes that have a script "
"attached to them and creates a new callback function on them."
msgstr ""
"Ao conectar sinais por meio do encaixe do nó do editor, você pode usar dois "
"modos. O simples permite apenas conectar-se a nós que possuem um script "
"anexado a eles e cria uma nova função de retorno de chamada neles."

msgid ""
"The advanced view lets you connect to any node and any built-in function, "
"add arguments to the callback, and set options. You can toggle the mode in "
"the window's bottom-right by clicking the Advanced button."
msgstr ""
"O avançado permite conectar-se a qualquer nó e qualquer função integrada, "
"adicionar argumentos ao retorno de chamada e definir opções. Você pode "
"alternar o modo no canto inferior esquerdo da janela clicando no botão "
"Avançado."

msgid ""
"Click the Connect button to complete the signal connection and jump to the "
"Script workspace. You should see the new method with a connection icon in "
"the left margin."
msgstr ""
"Clique no botão Conectar para concluir a conexão do sinal e vá para a área "
"de trabalho Script. Você deve ver o novo método com um ícone de conexão na "
"margem esquerda."

msgid ""
"If you click the icon, a window pops up and displays information about the "
"connection. This feature is only available when connecting nodes in the "
"editor."
msgstr ""
"Se você clicar no ícone, uma janela aparecerá e exibirá informações sobre a "
"conexão. Este recurso está disponível apenas ao conectar nós no editor."

msgid ""
"Let's replace the line with the ``pass`` keyword with code that'll toggle "
"the node's motion."
msgstr ""
"Vamos substituir a linha com a palavra-chave ``pass`` com o código que "
"alternará o movimento do nó."

msgid ""
"This function will toggle processing and, in turn, the icon's motion on and "
"off upon pressing the button."
msgstr ""
"Esta função alternará o processamento e, por sua vez, o movimento do ícone "
"ligado e desligado ao pressionar o botão."

msgid ""
"Before trying the game, we need to simplify our ``_process()`` function to "
"move the node automatically and not wait for user input. Replace it with the "
"following code, which we saw two lessons ago:"
msgstr ""
"Antes de testar o jogo, precisamos simplificar nossa função ``_process()`` "
"para mover o nó automaticamente e não esperar pela entrada do usuário. "
"Substitua-o pelo seguinte código, que vimos duas lições atrás:"

msgid ""
"Run the scene now and click the button to see the sprite start and stop."
msgstr ""
"Execute a cena agora e clique no botão para ver o sprite andar e parar."

msgid "Connecting a signal via code"
msgstr "Conectando um sinal via código"

msgid ""
"You can connect signals via code instead of using the editor. This is "
"necessary when you create nodes or instantiate scenes inside of a script."
msgstr ""
"Você pode conectar sinais via código em vez de usar o editor. Isso é "
"necessário quando você cria nós ou instancia cenas dentro de um script."

msgid ""
"Let's use a different node here. Godot has a :ref:`Timer <class_Timer>` node "
"that's useful to implement skill cooldown times, weapon reloading, and more."
msgstr ""
"Vamos usar um nó diferente aqui. Godot tem um nó :ref:`Timer <class_Timer>` "
"que é útil para implementar o tempo de resfriamento de habilidades, recarga "
"de armas e muito mais."

msgid "We need to do two operations to connect the nodes via code:"
msgstr "Precisamos fazer duas operações para conectar os nós via código:"

msgid ""
"To get a reference to a node relative to the current one, we use the method :"
"ref:`Node.get_node() <class_Node_method_get_node>`. We can store the "
"reference in a variable."
msgstr ""
"Para obter uma referência a um nó relativo ao atual, usamos o método :ref:"
"`Node.get_node() <class_Node_method_get_node>`. Podemos armazenar a "
"referência em uma variável."

msgid ""
"By convention, we name these callback methods in GDScript as "
"\"_on_node_name_signal_name\" and in C# as \"OnNodeNameSignalName\". Here, "
"it'll be \"_on_timer_timeout\" for GDScript and OnTimerTimeout() for C#."
msgstr ""
"Por convenção, nomeamos estes métodos de callback em GDScript como "
"\"_on_nome_do_no_nome_do_sinal\" e em C# como \"OnNomeDoNoNomeDoSinal\". "
"Aqui, ele será \"_on_timer_timeout para GDScript e OnTimerTimeout() para C#."

msgid ""
"The ``visible`` property is a boolean that controls the visibility of our "
"node. The line ``visible = not visible`` toggles the value. If ``visible`` "
"is ``true``, it becomes ``false``, and vice-versa."
msgstr ""
"A propriedade ``visible`` é um booleano que controla a visibilidade do nosso "
"nó. A linha ``visible = not visible`` alterna o valor. Se ``visible`` for "
"``true``, torna-se ``false``, e vice-versa."

msgid "Complete script"
msgstr "Script completo"

msgid "Custom signals"
msgstr "Sinais personalizados"

msgid ""
"This section is a reference on how to define and use your own signals, and "
"does not build upon the project created in previous lessons."
msgstr ""
"Esta seção é uma referência sobre como definir e usar seus próprios sinais e "
"não se baseia no projeto criado nas lições anteriores."

msgid ""
"You can define custom signals in a script. Say, for example, that you want "
"to show a game over screen when the player's health reaches zero. To do so, "
"you could define a signal named \"died\" or \"health_depleted\" when their "
"health reaches 0."
msgstr ""
"Você pode definir sinais personalizados em um script. Digamos, por exemplo, "
"que você deseja mostrar uma tela de game over quando a saúde do jogador "
"chegar a zero. Para fazer isso, você pode definir um sinal chamado \"died\" "
"ou \"health_depleted\" quando a saúde chegar a 0."

msgid ""
"As signals represent events that just occurred, we generally use an action "
"verb in the past tense in their names."
msgstr ""
"Como os sinais representam eventos que acabaram de ocorrer, geralmente "
"usamos um verbo de ação no pretérito em seus nomes."

msgid ""
"Your signals work the same way as built-in ones: they appear in the Node tab "
"and you can connect to them like any other."
msgstr ""
"Seus sinais funcionam da mesma forma que os integrados: eles aparecem na "
"guia Nó e você pode se conectar a eles como qualquer outro."

msgid ""
"A signal can optionally declare one or more arguments. Specify the argument "
"names between parentheses:"
msgstr ""
"Um sinal também pode opcionalmente declarar um ou mais argumentos. "
"Especifique os nomes dos argumentos entre parênteses:"

msgid ""
"The signal arguments show up in the editor's node dock, and Godot can use "
"them to generate callback functions for you. However, you can still emit any "
"number of arguments when you emit signals. So it's up to you to emit the "
"correct values."
msgstr ""
"Os argumentos de sinal aparecem na aba nó do editor e o Godot pode usá-los "
"para gerar funções de retorno de chamada para você. No entanto, você ainda "
"pode emitir qualquer número de argumentos ao emitir sinais. Então cabe a "
"você emitir os valores corretos."

msgid "Summary"
msgstr "Resumo"

msgid ""
"Any node in Godot emits signals when something specific happens to them, "
"like a button being pressed. Other nodes can connect to individual signals "
"and react to selected events."
msgstr ""
"Qualquer nó em Godot emite sinais quando algo específico acontece com eles, "
"como um botão sendo pressionado. Outros nós podem se conectar a sinais "
"individuais e reagir a eventos selecionados."

msgid ""
"Signals have many uses. With them, you can react to a node entering or "
"exiting the game world, to a collision, to a character entering or leaving "
"an area, to an element of the interface changing size, and much more."
msgstr ""
"Os sinais têm muitos usos. Com eles, você pode reagir a um nó entrando ou "
"saindo do mundo do jogo, a uma colisão, a um personagem entrando ou saindo "
"de uma área, a um elemento da interface que muda de tamanho e muito mais."

msgid ""
"For example, an :ref:`Area2D <class_Area2D>` representing a coin emits a "
"``body_entered`` signal whenever the player's physics body enters its "
"collision shape, allowing you to know when the player collected it."
msgstr ""
"Por exemplo, um :ref:`Area2D <class_Area2D>` representando uma moeda emite "
"um sinal ``body_entered`` sempre que o corpo físico do jogador entra em "
"forma de colisão, permitindo que você saiba quando o jogador a coletou."

msgid ""
"In the next section, :ref:`doc_your_first_2d_game`, you'll create a complete "
"2D game and put everything you learned so far into practice."
msgstr ""
"Na próxima seção, :ref:`doc_your_first_game`, você criará um jogo completo "
"contendo vários usos de sinais para conectar diferentes componentes do jogo."
