#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Godot notifications"
msgstr "Notificações em Godot"

msgid ""
"Some of these notifications, like draw, are useful to override in scripts. "
"So much so that Godot exposes many of them with dedicated functions:"
msgstr ""
"Algumas destas notificações, como desenhar, são úteis para sobrepor em "
"scripts. Tanto que o Godot expões muitas delas com funções dedicadas:"

msgid ""
":ref:`Object::NOTIFICATION_POSTINITIALIZE "
"<class_Object_constant_NOTIFICATION_POSTINITIALIZE>`: a callback that "
"triggers during object initialization. Not accessible to scripts."
msgstr ""
":ref:`Object::NOTIFICATION_POSTINITIALIZE "
"<class_Object_constant_NOTIFICATION_POSTINITIALIZE>`: uma chamada de retorno "
"que aciona durante a inicialização do objeto. Não acessível a scripts."

msgid ""
"And many of the callbacks that *do* exist in Nodes don't have any dedicated "
"methods, but are still quite useful."
msgstr ""
"E muitas das chamadas de retorno que *existem* em Nós não têm métodos "
"dedicados mas ainda são bastante úteis."

msgid ""
":ref:`Node::NOTIFICATION_PARENTED "
"<class_Node_constant_NOTIFICATION_PARENTED>`: a callback that triggers "
"anytime one adds a child node to another node."
msgstr ""
":ref:`Node::NOTIFICATION_PARENTED "
"<class_Node_constant_NOTIFICATION_PARENTED>`: uma chamada de retorno que "
"aciona sempre que se adiciona um nó filho a outro nó."

msgid ""
":ref:`Node::NOTIFICATION_UNPARENTED "
"<class_Node_constant_NOTIFICATION_UNPARENTED>`: a callback that triggers "
"anytime one removes a child node from another node."
msgstr ""
":ref:`Node::NOTIFICATION_UNPARENTED "
"<class_Node_constant_NOTIFICATION_UNPARENTED>`: uma chamada de retorno que "
"aciona sempre que se remove um nó filho de outro nó."

msgid ""
"Methods in the documentation labeled as \"virtual\" are also intended to be "
"overridden by scripts."
msgstr ""
"Os métodos na documentação rotulados como \"virtual\" também são destinados "
"a serem substituídos por scripts."

msgid ""
"So, in which situation should one use each of these notifications or virtual "
"functions?"
msgstr ""
"Então, em que situação se deve usar cada uma destas notificações ou funções "
"virtuais?"

msgid "_process vs. _physics_process vs. \\*_input"
msgstr "_process vs. _physics_process vs. \\*_input"

msgid "_init vs. initialization vs. export"
msgstr "_init vs. initialization vs. export"

msgid "The C# equivalent to GDScript's ``_init()`` method is the constructor."
msgstr "O equivalente em C# ao método ``_init()`` do GDScript é o construtor."

msgid ""
"**Exported value assignment:** an exported property's value is again "
"replaced by any value set in the Inspector, triggering the setter."
msgstr ""
"**Atribuição de valor exportado:** o valor de uma propriedade exportada é "
"novamente substituído por qualquer valor definido no Inspetor, acionando o "
"setter."

msgid "_ready vs. _enter_tree vs. NOTIFICATION_PARENTED"
msgstr "_ready vs. _enter_tree vs. NOTIFICATION_PARENTED"

msgid ""
"If one needs to trigger behavior that occurs as nodes parent to another, "
"regardless of whether it occurs as part of the main/active scene or not, one "
"can use the :ref:`PARENTED <class_Node_constant_NOTIFICATION_PARENTED>` "
"notification. For example, here is a snippet that connects a node's method "
"to a custom signal on the parent node without failing. Useful on data-"
"centric nodes that one might create at runtime."
msgstr ""
"Se for necessário disparar o comportamento que ocorre como nós pais de "
"outro, independentemente de ocorrer como parte da cena principal/ativa ou "
"não, pode-se usar a notificação :ref:`PARENTED "
"<class_Node_constant_NOTIFICATION_PARENTED>`. Por exemplo, aqui está um "
"trecho que conecta o método de um nó a um sinal personalizado no nó pai sem "
"falhar. Útil em nós centrados em dados que podem ser criados durante a "
"execução."
