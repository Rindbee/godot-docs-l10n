#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Autoloads versus regular nodes"
msgstr "Autoloads versus nós normais"

msgid ""
"In this guide, you will learn when to use the Autoload feature, and "
"techniques you can use to avoid it."
msgstr ""
"Neste guia, você aprenderá quando usar a funcionalidade Autoload e as "
"técnicas que você pode usar para evitá-lo."

msgid "The cutting audio issue"
msgstr "O problema do corte de áudio"

msgid ""
"Other engines can encourage the use of creating manager classes, singletons "
"that organize a lot of functionality into a globally accessible object. "
"Godot offers many ways to avoid global state thanks to the node tree and "
"signals."
msgstr ""
"Outros motores podem encorajar o uso da criação de classes de gerenciador, "
"singletons que organizam muita funcionalidade em um objeto globalmente "
"acessível. O Godot oferece muitas maneiras de evitar o estado global graças "
"à árvore de nós e aos sinais."

msgid ""
"For example, let's say we are building a platformer and want to collect "
"coins that play a sound effect. There's a node for that: "
"the :ref:`AudioStreamPlayer <class_AudioStreamPlayer>`. But if we call the "
"``AudioStreamPlayer`` while it is already playing a sound, the new sound "
"interrupts the first."
msgstr ""
"Por exemplo, digamos que estamos construindo um jogo de plataforma e "
"queremos coletar moedas que reproduzam um efeito sonoro. Há um nó para isso: "
"o :ref:`AudioStreamPlayer <class_AudioStreamPlayer>`. Mas se chamarmos o "
"``AudioStreamPlayer`` enquanto ele já está tocando um som, o novo som "
"interrompe o primeiro."

msgid ""
"**Global state**: one object is now responsible for all objects' data. If "
"the ``Sound`` class has errors or doesn't have an AudioStreamPlayer "
"available, all the nodes calling it can break."
msgstr ""
"**Estado global**: um objeto agora é responsável pelos dados de todos os "
"objetos. Se a classe ``Sound`` tem erros ou não tem um AudioStreamPlayer "
"disponível, todos os nós que o chamam podem quebrar."

msgid ""
"**Global access**: now that any object can call ``Sound.play(sound_path)`` "
"from anywhere, there's no longer an easy way to find the source of a bug."
msgstr ""
"**Acesso global**: agora que qualquer objeto pode chamar "
"``Sound.play(sound_path)`` de qualquer lugar, não há mais uma maneira fácil "
"de encontrar a origem de um bug."

msgid ""
"**Global resource allocation**: with a pool of ``AudioStreamPlayer`` nodes "
"stored from the start, you can either have too few and face bugs, or too "
"many and use more memory than you need."
msgstr ""
"**Alocação global de recursos***: com um conjunto de nós "
"``AudioStreamPlayer`` armazenados desde o início, você pode ou ter muito "
"poucos e enfrentar bugs, ou muitos e utilizar mais memória do que você "
"precisa."

msgid ""
"When you keep code inside a scene, only one or two scripts may be involved "
"in audio."
msgstr ""
"Quando você mantém o código dentro de uma cena, apenas um ou dois scripts "
"podem estar envolvidos no áudio."

msgid ""
"Contrast this with each scene keeping as many ``AudioStreamPlayer`` nodes as "
"it needs within itself and all these problems go away:"
msgstr ""
"Contraste isto com cada cena mantendo tantos nós ``AudioStreamPlayer`` "
"quantos forem necessários dentro de si e todos estes problemas desaparecem:"

msgid ""
"Each scene manages its own state information. If there is a problem with the "
"data, it will only cause issues in that one scene."
msgstr ""
"Cada cena gerencia suas próprias informações de estado. Se houver um "
"problema com os dados, isso causará problemas apenas naquela cena."

msgid ""
"Each scene accesses only its own nodes. Now, if there is a bug, it's easy to "
"find which node is at fault."
msgstr ""
"Cada cena acessa apenas seus próprios nós. Agora, se houver um bug, é fácil "
"descobrir qual nó é o culpado."

msgid "Each scene allocates exactly the amount of resources it needs."
msgstr "Cada cena aloca exatamente a quantidade de recursos de que precisa."

msgid "Managing shared functionality or data"
msgstr "Gestão de funcionalidades ou dados compartilhados"

msgid ""
"Another reason to use an Autoload can be that you want to reuse the same "
"method or data across many scenes."
msgstr ""
"Outra razão para usar um Autoload pode ser que você queira reutilizar o "
"mesmo método ou dados em muitas cenas."

msgid ""
"In the case of functions, you can create a new type of ``Node`` that "
"provides that feature for an individual scene using the :ref:`class_name "
"<doc_gdscript_basics_class_name>` keyword in GDScript."
msgstr ""
"No caso de funções, você pode criar um novo tipo de ``Node`` que fornece "
"esse recurso para uma cena individual utilizando a palavra-"
"chave :ref:`class_name <doc_scripting_continued_class_name>` em GDScript."

msgid "When it comes to data, you can either:"
msgstr "Quando se trata de dados, você pode:"

msgid ""
"Create a new type of :ref:`Resource <class_Resource>` to share the data."
msgstr ""
"Cria um novo tipo de :ref:`Resource <class_Resource>` para compartilhar os "
"dados."

msgid ""
"Store the data in an object to which each node has access, for example using "
"the ``owner`` property to access the scene's root node."
msgstr ""
"Armazenar os dados em um objeto ao qual cada nó tem acesso, por exemplo "
"utilizando a propriedade ``owner`` para acessar o nó raiz da cena."

msgid "When you should use an Autoload"
msgstr "Quando você deve usar um Autoload"

msgid ""
"GDScript supports the creation of ``static`` functions using ``static "
"func``. When combined with ``class_name``, this makes it possible to create "
"libraries of helper functions without having to create an instance to call "
"them. The limitation of static functions is that they can't reference member "
"variables, non-static functions or ``self``."
msgstr ""
"GDScript suporta a criação de funções ``static`` usando ``static func```. "
"Quando combinado com ``class_name``, isso torna possível criar bibliotecas "
"de funções auxiliares sem ter que criar uma instância para chamá-los. A "
"limitação de funções estáticas é que elas não podem referenciar variáveis de "
"membros, funções não estáticas ou ``self``."
