#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom drawing in 2D"
msgstr "Desenho personalizado em 2D"

msgid "Introduction"
msgstr "Introdução"

msgid ""
"Custom drawing in a 2D node is *really* useful. Here are some use cases:"
msgstr ""
"O desenho personalizado em um nó 2D é *realmente* útil. Aqui estão alguns "
"casos de uso:"

msgid ""
"Drawing shapes or logic that existing nodes can't do, such as an image with "
"trails or a special animated polygon."
msgstr ""
"Desenhar formas ou lógica que os nós existentes não podem fazer, como uma "
"imagem com rastros ou um polígono animado especial."

msgid ""
"Making a custom UI control. There are plenty of controls available, but when "
"you have unusual needs, you will likely need a custom control."
msgstr ""
"Fazendo um controle de interface do usuário personalizado. Há muitos "
"controles disponíveis, mas quando você tiver necessidades incomuns, "
"provavelmente precisará de um controle personalizado."

msgid "Drawing"
msgstr "Desenhando"

msgid "Updating"
msgstr "Atualizando"

msgid "Antialiased drawing"
msgstr "Desenho com suavização de serrilhado"

msgid "Tools"
msgstr "Ferramentas"

msgid "Drawing a custom polygon shape"
msgstr "Criando um nó de um polígono personalizado"

msgid ""
"While there is a dedicated node to draw custom polygons ( :ref:`Polygon2D "
"<class_Polygon2D>`), we will use in this case exclusively lower level "
"drawing functions to combine them on the same node and be able to create "
"more complex shapes later on."
msgstr ""
"Embora haja um nó dedicado para desenhar polígonos personalizados ( :ref:"
"`Polygon2D <class_Polygon2D>`), vamos usar neste caso exclusivamente funções "
"de desenho de nível inferior para combiná-los no mesmo nó e ser capaz de "
"criar formas mais complexas mais tarde."

msgid ""
"First, we will define a set of points -or X and Y coordinates- that will "
"form the base of our shape:"
msgstr ""
"Primeiro, definiremos um conjunto de pontos -ou coordenadas X e Y - que "
"formarão a base da nossa forma:"

msgid ""
"This format, while compact, is not the one that Godot understands to draw a "
"polygon. In a different scenario we could have to load these coordinates "
"from a file or calculate the positions while the application is running, so "
"some transformation may be needed."
msgstr ""
"Este formato, enquanto compacto, não é aquele que Godot entende desenhar um "
"polígono. Em um cenário diferente, poderíamos ter que carregar essas "
"coordenadas de um arquivo ou calcular as posições enquanto o aplicativo está "
"sendo executado, então alguma transformação pode ser necessária."

msgid ""
"To transform these coordinates into the right format, we will create a new "
"method ``float_array_to_Vector2Array()``. Then we will override the "
"``_ready()`` function, which Godot will call only once -at the start of the "
"execution- to load those coordinates into a variable:"
msgstr ""
"Para transformar essas coordenadas no formato certo, criaremos um novo "
"método ``float_array_to_Vector2Array()``. Então vamos substituir a função "
"``_ready()``, que Godot vai chamar apenas uma vez - no início da execução- "
"para carregar essas coordenadas em uma variável:"

msgid ""
"To finally draw our first shape, we will use the method :ref:`draw_polygon "
"<class_CanvasItem_method_draw_polygon>` and pass the points (as an array of "
"Vector2 coordinates) and its color, like this:"
msgstr ""
"Para finalmente desenhar nossa primeira forma, vamos usar o método :ref:"
"`draw_polygon <class_CanvasItem_method_draw_polygon>` e passar os pontos "
"(como uma matriz de coordenadas Vector2) e sua cor, como esta:"

msgid "When running it you should see something like this:"
msgstr "Ao executá-lo você deve ver algo assim:"

msgid ""
"Note the lower part of the logo looks segmented- this is because a low "
"amount of points were used to define that part. To simulate a smooth curve, "
"we could add more points to our array, or maybe use a mathematical function "
"to interpolate a curve and create a smooth shape from code (see :ref:"
"`example 2<doc_draw_custom_example_2>`)."
msgstr ""
"Note a parte inferior do logotipo parece segmentada - isto é porque uma "
"baixa quantidade de pontos foram usados para definir essa parte. Para "
"simular uma curva lisa, poderíamos adicionar mais pontos ao nosso array, ou "
"talvez usar uma função matemática para interpor uma curva e criar uma forma "
"lisa do código (ver :ref:`example 2<doc_draw_custom_example_2>`)."

msgid ""
"Polygons will always **connect its last defined point to its first one** in "
"order to have a closed shape."
msgstr ""
"Os polígonos sempre **conectam seu último ponto definido ao seu primeiro** a "
"fim de ter uma forma fechada."

msgid "Drawing connected lines"
msgstr "Desenhando linhas conectadas"

msgid ""
"Drawing a sequence of connected lines that don't close down to form a "
"polygon is very similar to the previous method. We will use a connected set "
"of lines to draw Godot's logo mouth."
msgstr ""
"Desenhar uma sequência de linhas conectadas que não se fecham para formar um "
"polígono é muito semelhante ao método anterior. Usaremos um conjunto de "
"linhas conectadas para desenhar a boca do logotipo do Godot."

msgid ""
"First, we will define the list of coordinates that form the mouth shape, "
"like this:"
msgstr ""
"Primeiro, vamos definir a lista de coordenadas que formam a forma da boca, "
"assim:"

msgid ""
"We will load these coordinates into a variable and define an additional "
"variable with the configurable line thickness:"
msgstr ""
"Vamos carregar essas coordenadas em uma variável e definir uma variável "
"adicional com a espessura da linha configurável:"

msgid ""
"And finally we will use the method :ref:`draw_polyline "
"<class_CanvasItem_method_draw_polyline>` to actually draw the line, like "
"this:"
msgstr ""
"E finalmente usaremos o método :ref:`draw_polyline "
"<class_CanvasItem_method_draw_polyline>` para realmente desenhar a linha, "
"assim:"

msgid "You should get the following output:"
msgstr "Você deve obter a seguinte saída:"

msgid ""
"The order of the ``_draw`` calls is important- like with the Node positions "
"on the tree hierarchy, the different shapes will be drawn from top to "
"bottom, resulting in the latest shapes hiding earlier ones if they overlap. "
"In this case we want the mouth drawn over the head, so we put it afterwards."
msgstr ""
"A ordem das chamadas ``_draw`` é importante - como que com as posições dos "
"Nós na hierarquia da árvore, as diferentes formas serão desenhadas de cima "
"para baixo, resultando nas formas mais recentes que se escondem mais cedo se "
"eles se sobrepõem. Neste caso queremos a boca desenhada sobre a cabeça, "
"então colocamos depois."

msgid ""
"Notice how we can define colors in different ways, either with a hexadecimal "
"code or a predefined color name. Check the class :ref:`Color <class_Color>` "
"for other constants and ways to define Colors."
msgstr ""
"Observe como podemos definir cores de maneiras diferentes, seja com um "
"código hexadecimal ou um nome de cor predefinido. Confira a classe :ref:"
"`Color <class_Color>` para outras constantes e formas de definir Cores."

msgid "Drawing circles"
msgstr "Desenhando Círculos"

msgid ""
"To create the eyes, we are going to add 4 additional calls to draw the eye "
"shapes, in different sizes, colors and positions."
msgstr ""
"Para criar os olhos, vamos adicionar 4 chamadas adicionais para desenhar as "
"formas dos olhos, em diferentes tamanhos, cores e posições."

msgid ""
"To draw a circle, you position it based on its center using the :ref:"
"`draw_circle <class_CanvasItem_method_draw_circle>` method. The first "
"parameter is a :ref:`Vector2<class_Vector2>` with the coordinates of its "
"center, the second is its radius, and the third is its color:"
msgstr ""
"Para desenhar um círculo, você posiciona-o com base em seu centro usando o "
"método :ref:`draw_circle <class_CanvasItem_method_draw_circle>`. O primeiro "
"parâmetro é um :ref:`Vector2<class_Vector2> com as coordenadas de seu "
"centro, o segundo é seu raio, e o terceiro é sua cor:"

msgid "When executing it, you should have something like this:"
msgstr "Ao executá-lo, você deve ter algo assim:"

msgid ""
"For partial, unfilled arcs (portions of a circle shape between certain "
"arbitrary angles), you can use the method :ref:`draw_arc "
"<class_CanvasItem_method_draw_arc>`."
msgstr ""
"Para arcos parciais, não preenchidos (porções de uma forma círculo entre "
"certos ângulos arbitrários), você pode usar o método :ref:`draw_arc "
"<class_CanvasItem_method_draw_arc>`."

msgid "Drawing lines"
msgstr "Desenhando linhas"

msgid ""
"To draw the final shape (the nose) we will use a line to approximate it."
msgstr ""
"Para desenhar a forma final (o nariz) usaremos uma linha para aproximá-la."

msgid ""
":ref:`draw_line <class_CanvasItem_method_draw_line>` can be used to draw a "
"single segment by providing its start and end coordinates as arguments, like "
"this:"
msgstr ""
":ref:`draw_line <class_CanvasItem_method_draw_line>` pode ser usado para "
"desenhar um único segmento fornecendo suas coordenadas de início e fim como "
"argumentos, como este:"

msgid "You should now be able to see the following shape on screen:"
msgstr "Agora você deve ser capaz de ver a seguinte forma na tela:"

msgid ""
"Note that if multiple unconnected lines are going to be drawn at the same "
"time, you may get additional performance by drawing all of them in a single "
"call, using the :ref:`draw_multiline "
"<class_CanvasItem_method_draw_multiline>` method."
msgstr ""
"Note que se várias linhas não conectadas forem desenhadas ao mesmo tempo, "
"você pode obter desempenho adicional desenhando todas elas em uma única "
"chamada, usando o método :ref:`draw_multiline "
"<class_CanvasItem_method_draw_multiline>`."

msgid "Drawing text"
msgstr "Desenhando texto"

msgid ""
"While using the :ref:`Label <class_Label>` Node is the most common way to "
"add text to your application, the low level `_draw` function includes "
"functionality to add text to your custom Node drawing. We will use it to add "
"the name \"GODOT\" under the robot head."
msgstr ""
"Embora o nó :ref:`Label <class_Label>` seja a maneira mais comum de "
"adicionar texto à sua aplicação, a função `_draw` de baixo nível inclui "
"funcionalidade para adicionar texto ao seu desenho de nó personalizado. "
"Vamos usá-lo para adicionar o nome \"GODOT\" sob a cabeça do robô."

msgid ""
"We will use the :ref:`draw_string <class_CanvasItem_method_draw_string>` "
"method to do it, like this:"
msgstr ""
"Vamos usar o método :ref:`draw_string <class_CanvasItem_method_draw_string>` "
"para fazê-lo, assim:"

msgid ""
"Here we first load into the defaultFont variable the configured default "
"theme font (a custom one can be set instead) and then we pass the following "
"parameters: font, position, text, horizontal alignment, width, and font size."
msgstr ""
"Aqui nós primeiro carregamos a variável defaultFont a fonte padrão "
"configurada no tema(uma personalizada pode ser definida no lugar) e então "
"passamos os seguintes parâmetros: fonte, posição, texto, alinhamento "
"horizontal, largura e tamanho da fonte."

msgid "You should see the following on your screen:"
msgstr "Você deve ver o seguinte em sua tela:"

msgid ""
"Additional parameters as well as other methods related to text and "
"characters can be found on the :ref:`CanvasItem <class_CanvasItem>` class "
"reference."
msgstr ""
"Parâmetros adicionais, bem como outros métodos relacionados ao texto e "
"caracteres podem ser encontrados na referência de classe :ref:`CanvasItem "
"<class_CanvasItem>`."

msgid "Show the drawing while editing"
msgstr "Mostrar o desenho durante a edição"

msgid ""
"While the code so far is able to draw the logo on a running window, it will "
"not show up on the ``2D view`` on the editor. In certain cases you would "
"also like to show your custom Node2D or control on the editor, to position "
"and scale it appropriately, like most other nodes do."
msgstr ""
"Enquanto o código até agora é capaz de desenhar o logotipo em uma janela em "
"execução, ele não aparecerá na view ``2D`` no editor. Em certos casos, você "
"também gostaria de mostrar seu Node2D personalizado ou controle no editor, "
"posicionar e dimensioná-lo adequadamente, como a maioria dos outros nós "
"fazem."

msgid ""
"To show the logo directly on the editor (without running it), you can use "
"the :ref:`@tool<doc_gdscript_tool_mode>` annotation to request the custom "
"drawing of the node to also appear while editing, like this:"
msgstr ""
"Para mostrar o logotipo diretamente no editor (sem executá-lo), você pode "
"usar o :ref:`@tool<doc_gdscript_tool_mode>` anotação para solicitar o "
"desenho personalizado do nó também aparecer enquanto edita, assim:"

msgid ""
"You will need to save your scene, rebuild your project (for C# only) and "
"reload the current scene manually at the menu option ``Scene > Reload Saved "
"Scene`` to refresh the current node in the ``2D`` view the first time you "
"add or remove the ``@tool`` annotation."
msgstr ""
"Você precisará salvar sua cena, refazer a build seu projeto (apenas para C#) "
"e recarregar a cena atual manualmente na opção menu ``Scene > Recarregue "
"Saved Scene`` para refrescar o nó atual na view ``2D`` da primeira vez que "
"você adicionar ou remover a anotação ``@tool``."

msgid "Animation"
msgstr "Animação"

msgid ""
"If we wanted to make the custom shape change at runtime, we could modify the "
"methods called or its arguments at execution time, or apply a transform."
msgstr ""
"Se quiséssemos fazer a mudança de forma personalizada no tempo de execução, "
"poderíamos modificar os métodos chamados ou seus argumentos no tempo de "
"execução, ou aplicar uma transformação."

msgid ""
"For example, if we want the custom shape we just designed to rotate, we "
"could add the following variable and code to the ``_ready`` and ``_process`` "
"methods:"
msgstr ""
"Por exemplo, se quisermos a forma personalizada que acabamos de projetar "
"para girar, poderíamos adicionar a seguinte variável e código aos métodos "
"``_ready`` e ``_process``:"

msgid ""
"The problem with the above code is that because we have created the points "
"approximately on a rectangle starting from the upper left corner, the ``(0, "
"0)`` coordinate and extending to the right and down, we see that the "
"rotation is done using the top left corner as pivot. A position transform "
"change on the node won't help us here, as the rotation transform is applied "
"first."
msgstr ""
"O problema com o código acima é que porque criamos os pontos aproximadamente "
"em um retângulo a partir do canto superior esquerdo, a coordenada ``(0, "
"0)``` e estendendo-se para a direita e para baixo, vemos que a rotação é "
"feita usando o canto superior esquerdo como pivô. Uma mudança de posição de "
"transformação no nó não nos ajudará aqui, pois a transformação de rotação é "
"aplicada primeiro."

msgid ""
"While we could rewrite all of the points' coordinates to be centered around "
"``(0, 0)``, including negative coordinates, that would be a lot of work."
msgstr ""
"Embora pudéssemos reescrever todas as coordenadas dos pontos para serem "
"centradas em torno de ``(0, 0)``, incluindo coordenadas negativas, isso "
"seria muito trabalho."

msgid ""
"One possible way to work around this is to use the lower level :ref:"
"`draw_set_transform<class_CanvasItem_method_draw_set_transform>` method to "
"fix this issue, translating all points in the CanvasItem's own space, and "
"then moving it back to its original place with a regular node transform, "
"either in the editor or in code, like this:"
msgstr ""
"Uma maneira possível de trabalhar em torno disso é usar o método de nível "
"mais baixo :ref:"
"`draw_set_transform<class_CanvasItem_method_draw_set_transform>` para "
"corrigir este problema, traduzindo todos os pontos no próprio espaço do "
"CanvasItem, e depois movendo-o de volta para o seu lugar original com um nó "
"regular transforma, tanto no editor ou no código, como este:"

msgid "This is the result, rotating around a pivot now on ``(60, 60)``:"
msgstr "Este é o resultado, girando em torno de um pivô agora em ``(60, 60)``:"

msgid ""
"If what we wanted to animate was a property inside the ``_draw()`` call, we "
"must remember to call ``queue_redraw()`` to force a refresh, as otherwise it "
"would not be updated on screen."
msgstr ""
"Se o que queríamos animar era uma propriedade dentro da chamada ``_draw()``, "
"devemos lembrar de chamar ``queue_redraw()`` para forçar uma atualização, "
"como de outra forma não seria atualizado na tela."

msgid ""
"For example, this is how we can make the robot appear to open and close its "
"mouth, by changing the width of its mouth line follow a sinusoidal (:ref:"
"`sin<class_@globalscope_method_sin>`) curve:"
msgstr ""
"Por exemplo, é assim que podemos fazer o robô parecer abrir e fechar a boca, "
"alterando a largura de sua linha da boca seguir uma curva sinusoidal (:ref:"
"`sin<class_@globalscope_method_sin>`):"

msgid "It will look somewhat like this when run:"
msgstr "Vai parecer um pouco assim quando executar:"
