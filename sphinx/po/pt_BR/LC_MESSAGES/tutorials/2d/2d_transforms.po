#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Viewport and canvas transforms"
msgstr "Transformações de janela de exibição e tela"

msgid "Introduction"
msgstr "Introdução"

msgid ""
"The goal of this tutorial is to teach a way for feeding input events to the "
"Input with a position in the correct coordinate system."
msgstr ""
"O objetivo deste tutorial é ensinar uma maneira de alimentar eventos de "
"entrada com uma posição no sistema de coordenadas correto."

msgid ""
"A more extensive description of all coordinate systems and 2d transforms is "
"available in :ref:`doc_2d_coordinate_systems`."
msgstr ""
"Uma descrição mais extensa de todos os sistemas de coordenadas e "
"transformações 2D está disponível em :ref:`doc_2d_coordinate_systems`."

msgid "Canvas transform"
msgstr "Transformação de tela"

msgid ""
"As mentioned in the previous tutorial, :ref:`doc_canvas_layers`, every "
"CanvasItem node (remember that Node2D and Control based nodes use CanvasItem "
"as their common root) will reside in a *Canvas Layer*. Every canvas layer "
"has a transform (translation, rotation, scale, etc.) that can be accessed as "
"a :ref:`Transform2D <class_Transform2D>`."
msgstr ""
"Como mencionado no tutorial anterior, :ref:`doc_canvas_layers`, cada nó "
"CanvasItem (lembre-se que os nós baseados em Node2D e Control usam "
"CanvasItem como sua raiz comum) residirão em uma *Canvas Layer*. Cada camada "
"de canvas tem uma transformação (translação, rotação, escala, etc.) que pode "
"ser acessada como :ref:`Transform2D <class_Transform2D>`."

msgid ""
"Also covered in the previous tutorial, nodes are drawn by default in Layer "
"0, in the built-in canvas. To put nodes in a different layer, "
"a :ref:`CanvasLayer <class_CanvasLayer>` node can be used."
msgstr ""
"Também abordado no tutorial anterior, os nós são desenhados por padrão na "
"Camada 0, na tela embutida. Para colocar nós em uma camada diferente, um "
"nó :ref:`CanvasLayer <class_CanvasLayer>` pode ser usado."

msgid "Global canvas transform"
msgstr "Transformação global de canvas"

msgid "Stretch transform"
msgstr "Transformação de alongamento"

msgid ""
"Finally, viewports have a *Stretch Transform*, which is used when resizing "
"or stretching the screen. This transform is used internally (as described "
"in :ref:`doc_multiple_resolutions`), but can also be manually set on each "
"viewport."
msgstr ""
"Finalmente, as viewports possuem uma *Stretch Transform*, que é usada ao "
"redimensionar ou esticar a tela. Esta transformação é usada internamente "
"(conforme descrito em :ref:`doc_multiple_resolutions`), mas também pode ser "
"configurada manualmente em cada viewport."

msgid ""
"The root viewport is a :ref:`Window <class_Window>`. In order to scale and "
"position the *Window's* content as described "
"in :ref:`doc_multiple_resolutions`, each :ref:`Window <class_Window>` "
"contains a *window transform*. It is for example responsible for the black "
"bars at the *Window's* sides so that the *Viewport* is displayed with a "
"fixed aspect ratio."
msgstr ""
"A viewport raiz é um node do tipo :ref:`Window <class_Window>`. Para "
"dimensionar e posicionar o conteúdo da *Window* conforme descrito "
"em :ref:`doc_multiple_resolutions`, cada :ref:`Window <class_Window>` contém "
"uma *transformação da janela* (window transform). Ela é responsável, por "
"exemplo, pelas barras pretas nas laterais da *Window* para que a *Viewport* "
"seja exibida com uma proporção fixa."

msgid "Transform order"
msgstr "Ordem de transformação"

msgid "Transform functions"
msgstr "Funções de transformação"

msgid ""
"The above graphic shows some available transform functions. All transforms "
"are directed from right to left, this means multiplying a transform with a "
"coordinate results in a coordinate system further to the left, multiplying "
"the :ref:`affine inverse <class_Transform2D_method_affine_inverse>` of a "
"transform results in a coordinate system further to the right:"
msgstr ""
"A imagem acima mostra algumas funções de transformação disponíveis. Todas as "
"transformações são aplicadas da direita para a esquerda, o que significa que "
"multiplicar uma transformação por uma coordenada resulta em um sistema de "
"coordenadas mais à esquerda, enquanto multiplicar o :ref:`inverso afim "
"<class_Transform2D_method_affine_inverse>` de uma transformação resulta em "
"um sistema de coordenadas mais à direita:"

msgid ""
"Finally, then, to convert a CanvasItem local coordinates to screen "
"coordinates, just multiply in the following order:"
msgstr ""
"Finalmente, para converter as coordenadas locais de um CanvasItem em "
"coordenadas de tela, basta multiplicar na seguinte ordem:"

msgid ""
"Keep in mind, however, that it is generally not desired to work with screen "
"coordinates. The recommended approach is to simply work in Canvas "
"coordinates (``CanvasItem.get_global_transform()``), to allow automatic "
"screen resolution resizing to work properly."
msgstr ""
"Tenha em mente, no entanto, que geralmente não é desejável trabalhar com "
"coordenadas de tela. A abordagem recomendada é simplesmente trabalhar nas "
"coordenadas do Canvas (``CanvasItem.get_global_transform()``), para permitir "
"que o redimensionamento automático da resolução da tela funcione "
"corretamente."

msgid "Feeding custom input events"
msgstr "Alimentando eventos de entrada personalizados"
