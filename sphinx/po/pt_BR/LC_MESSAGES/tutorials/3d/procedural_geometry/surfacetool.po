#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the SurfaceTool"
msgstr "Usando o SurfaceTool"

msgid ""
"The :ref:`SurfaceTool <class_surfacetool>` provides a useful interface for "
"constructing geometry. The interface is similar to the :ref:`ImmediateMesh "
"<class_ImmediateMesh>` class. You set each per-vertex attribute (e.g. "
"normal, uv, color) and then when you add a vertex it captures the attributes."
msgstr ""
"O :ref:`SurfaceTool <class_surfacetool>` oferece uma interface útil para "
"construção de geometria. A interface é semelhante à da "
"classe :ref:`ImmediateMesh <class_ImmediateMesh>`. Você define cada atributo "
"por vértice (por exemplo, normal, uv, cor) e, ao adicionar um vértice, ele "
"captura esses atributos."

msgid ""
"The SurfaceTool also provides some useful helper functions like ``index()`` "
"and ``generate_normals()``."
msgstr ""
"O SurfaceTool também oferece algumas funções auxiliares úteis, como "
"``index()`` e ``generate_normals()``."

msgid "Attributes are added before each vertex is added:"
msgstr "Os atributos são adicionados antes de cada vértice ser inserido:"

msgid ""
"When finished generating your geometry with the :ref:`SurfaceTool "
"<class_surfacetool>` call ``commit()`` to finish generating the mesh. If "
"an :ref:`ArrayMesh <class_ArrayMesh>` is passed to ``commit()`` then it "
"appends a new surface to the end of the ArrayMesh. While if nothing is "
"passed in, ``commit()`` returns an ArrayMesh."
msgstr ""
"Ao terminar de gerar sua geometria com o :ref:`SurfaceTool "
"<class_surfacetool>`, chame ``commit()`` para finalizar a geração da malha. "
"Se um :ref:`ArrayMesh <class_ArrayMesh>` for passado para ``commit()``, "
"então uma nova superfície será adicionada ao final do ArrayMesh. Caso nada "
"seja passado, ``commit()`` retorna um ArrayMesh."

msgid "Code creates a triangle with indices"
msgstr "O código cria um triângulo com índices"

msgid ""
"You can optionally add an index array, either by calling ``add_index()`` and "
"adding vertices to the index array or by calling ``index()`` which shrinks "
"the vertex array to remove duplicate vertices."
msgstr ""
"Você pode, opcionalmente, adicionar um array de índices, seja chamando "
"``add_index()`` e adicionando vértices ao array de índices, ou chamando "
"``index()``, que reduz o array de vértices para remover vértices duplicados."

msgid ""
"Similarly, if you have an index array, but you want each vertex to be unique "
"(e.g. because you want to use unique normals or colors per face instead of "
"per-vertex), you can call ``deindex()``."
msgstr ""
"Da mesma forma, se você tiver um array de índices, mas quiser que cada "
"vértice seja único (por exemplo, porque deseja usar normais ou cores únicas "
"por face em vez de por vértice), você pode chamar ``deindex()``."

msgid ""
"If you don't add custom normals yourself, you can add them using "
"``generate_normals()``, which should be called after generating geometry and "
"before committing the mesh using ``commit()`` or ``commit_to_arrays()``. "
"Calling ``generate_normals(true)`` will flip the resulting normals. As a "
"side note, ``generate_normals()`` only works if the primitive type is set to "
"``Mesh.PRIMITIVE_TRIANGLES``."
msgstr ""
"Se você não adicionar normais personalizadas manualmente, pode adicioná-las "
"usando ``generate_normals()``, que deve ser chamada após gerar a geometria e "
"antes de finalizar a malha com ``commit()`` ou ``commit_to_arrays()``. "
"Chamar ``generate_normals(true)`` irá inverter as normais resultantes. Como "
"observação, ``generate_normals()`` só funciona se o tipo de primitiva "
"estiver definido como ``Mesh.PRIMITIVE_TRIANGLES``."

msgid ""
"You may notice that normal mapping or other material properties look broken "
"on the generated mesh. This is because normal mapping **requires** the mesh "
"to feature *tangents*, which are separate from *normals*. You can either add "
"custom tangents manually, or generate them automatically with "
"``generate_tangents()``. This method requires that each vertex have UVs and "
"normals set already."
msgstr ""
"Você pode perceber que o mapeamento de normais ou outras propriedades do "
"material parecem estar com problemas na malha gerada. Isso acontece porque o "
"mapeamento de normais **requer** que a malha possua *tangentes*, que são "
"diferentes das *normais*. Você pode adicionar tangentes personalizadas "
"manualmente ou gerá-las automaticamente com ``generate_tangents()``. Esse "
"método exige que cada vértice já tenha UVs e normais definidos."

msgid ""
"By default, when generating normals, they will be calculated on a per-face "
"basis. If you want smooth vertex normals, when adding vertices, call "
"``add_smooth_group()``. ``add_smooth_group()`` needs to be called while "
"building the geometry, e.g. before the call to ``add_vertex()`` (if non-"
"indexed) or ``add_index()`` (if indexed)."
msgstr ""
"Por padrão, ao gerar normais, elas serão calculadas por face. Se você quiser "
"normais suavizadas por vértice, ao adicionar vértices, chame "
"``add_smooth_group()``. ``add_smooth_group()`` precisa ser chamada durante a "
"construção da geometria, ou seja, antes da chamada de ``add_vertex()`` (se "
"não for indexada) ou ``add_index()`` (se for indexada)."
