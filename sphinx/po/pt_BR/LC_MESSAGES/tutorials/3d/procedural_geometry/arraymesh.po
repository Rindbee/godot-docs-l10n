#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the ArrayMesh"
msgstr "Usando o ArrayMesh"

msgid ""
"This tutorial will present the basics of using an :ref:`ArrayMesh "
"<class_arraymesh>`."
msgstr ""
"Este tutorial apresentará o básico de uso de um :ref:`ArrayMesh "
"<class_arraymesh>`."

msgid ""
"To do so, we will use the function :ref:`add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`, which takes up to five "
"parameters. The first two are required, while the last three are optional."
msgstr ""
"Para isso, usaremos a função :ref:`add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`, que aceita até cinco "
"parâmetros. Os dois primeiros são obrigatórios, enquanto os três últimos são "
"opcionais."

msgid ""
"The first parameter is the ``PrimitiveType``, an OpenGL concept that "
"instructs the GPU how to arrange the primitive based on the vertices given, "
"i.e. whether they represent triangles, lines, points, etc. "
"See :ref:`Mesh.PrimitiveType <enum_Mesh_PrimitiveType>` for the options "
"available."
msgstr ""
"O primeiro parâmetro é o ``PrimitiveType``, um conceito do OpenGL que "
"instrui a GPU sobre como organizar a primitiva com base nos vértices "
"fornecidos, ou seja, se eles representam triângulos, linhas, pontos etc. "
"Veja :ref:`Mesh.PrimitiveType <enum_Mesh_PrimitiveType>` para as opções "
"disponíveis."

msgid ""
"The second parameter, ``arrays``, is the actual Array that stores the mesh "
"information. The array is a normal Godot array that is constructed with "
"empty brackets ``[]``. It stores a ``Packed**Array`` (e.g. "
"PackedVector3Array, PackedInt32Array, etc.) for each type of information "
"that will be used to build the surface."
msgstr ""
"O segundo parâmetro, ``arrays``, é o Array propriamente dito que armazena as "
"informações da malha. O array é um array normal do Godot, construído com "
"colchetes vazios ``[]``. Ele armazena um ``Packed**Array`` (por exemplo, "
"PackedVector3Array, PackedInt32Array etc.) para cada tipo de informação que "
"será usada para construir a superfície."

msgid ""
"Common elements of ``arrays`` are listed below, together with the position "
"they must have within ``arrays``. See :ref:`Mesh.ArrayType "
"<enum_Mesh_ArrayType>` for a full list."
msgstr ""
"Elementos comuns de ``arrays`` estão listados abaixo, junto com a posição "
"que devem ocupar dentro de ``arrays``. Veja :ref:`Mesh.ArrayType "
"<enum_Mesh_ArrayType>` para a lista completa."

msgid "Index"
msgstr "Índice"

msgid "Mesh.ArrayType Enum"
msgstr "Mesh.ArrayType Enum"

msgid "Array type"
msgstr "Tipo de matriz"

msgid "0"
msgstr "0"

msgid "``ARRAY_VERTEX``"
msgstr "``ARRAY_VERTEX``"

msgid "1"
msgstr "1"

msgid "``ARRAY_NORMAL``"
msgstr "``ARRAY_NORMAL``"

msgid "2"
msgstr "2"

msgid "``ARRAY_TANGENT``"
msgstr "``ARRAY_TANGENT``"

msgid ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>` "
"or :ref:`PackedFloat64Array <class_PackedFloat64Array>` of groups of 4 "
"floats. The first 3 floats determine the tangent, and the last float the "
"binormal direction as -1 or 1."
msgstr ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>` "
"ou :ref:`PackedFloat64Array <class_PackedFloat64Array>` de grupos de 4 "
"números float. Os primeiros 3 floats determinam a tangente, e o último float "
"determina a direção da binormal como -1 ou 1."

msgid "3"
msgstr "3"

msgid "``ARRAY_COLOR``"
msgstr "``ARRAY_COLOR``"

msgid "4"
msgstr "4"

msgid "``ARRAY_TEX_UV``"
msgstr "``ARRAY_TEX_UV``"

msgid "5"
msgstr "5"

msgid "``ARRAY_TEX_UV2``"
msgstr "``ARRAY_TEX_UV2``"

msgid "10"
msgstr "10"

msgid "``ARRAY_BONES``"
msgstr "``ARRAY_BONES``"

msgid ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>` of groups of 4 floats "
"or :ref:`PackedInt32Array <class_PackedInt32Array>` of groups of 4 ints. "
"Each group lists indexes of 4 bones that affects a given vertex."
msgstr ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>` de grupos de 4 floats "
"ou :ref:`PackedInt32Array <class_PackedInt32Array>` de grupos de 4 inteiros. "
"Cada grupo lista os índices de 4 ossos que afetam um determinado vértice."

msgid "11"
msgstr "11"

msgid "``ARRAY_WEIGHTS``"
msgstr "``ARRAY_WEIGHTS``"

msgid ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>` "
"or :ref:`PackedFloat64Array <class_PackedFloat64Array>` of groups of 4 "
"floats. Each float lists the amount of weight the corresponding bone in "
"``ARRAY_BONES`` has on a given vertex."
msgstr ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>` "
"ou :ref:`PackedFloat64Array <class_PackedFloat64Array>` de grupos de 4 "
"floats. Cada float indica a quantidade de influência que o osso "
"correspondente em ``ARRAY_BONES`` tem sobre um determinado vértice."

msgid "12"
msgstr "12"

msgid "``ARRAY_INDEX``"
msgstr "``ARRAY_INDEX``"

msgid ""
"In most cases when creating a mesh, we define it by its vertex positions. So "
"usually, the array of vertices (at index 0) is required, while the index "
"array (at index 12) is optional and will only be used if included. It is "
"also possible to create a mesh with only the index array and no vertex "
"array, but that's beyond the scope of this tutorial."
msgstr ""
"Geralmente ao criar uma malha, ela é definida pelas posições dos vértices. "
"Portanto, geralmente o array de vértices (no índice 0) é obrigatório, "
"enquanto o array de índices (no índice 12) é opcional e só será usado se for "
"incluído. Também é possível criar uma malha apenas com o array de índices e "
"sem o array de vértices, mas isso está além do escopo deste tutorial."

msgid ""
"All the other arrays carry information about the vertices. They are optional "
"and will only be used if included. Some of these arrays (e.g. "
"``ARRAY_COLOR``) use one entry per vertex to provide extra information about "
"vertices. They must have the same size as the vertex array. Other arrays "
"(e.g. ``ARRAY_TANGENT``) use four entries to describe a single vertex. These "
"must be exactly four times larger than the vertex array."
msgstr ""
"Todos os outros arrays carregam informações sobre os vértices. Eles são "
"opcionais e só serão usados se incluídos. Alguns desses arrays (por exemplo, "
"``ARRAY_COLOR``) usam uma entrada por vértice para fornecer informações "
"extras sobre os vértices. Eles devem ter o mesmo tamanho do array de "
"vértices. Outros arrays (por exemplo, ``ARRAY_TANGENT``) usam quatro "
"entradas para descrever um único vértice. Esses devem ter exatamente quatro "
"vezes o tamanho do array de vértices."

msgid ""
"For normal usage, the last three parameters "
"in :ref:`add_surface_from_arrays() "
"<class_arraymesh_method_add_surface_from_arrays>` are typically left empty."
msgstr ""
"Para uso comum, os três últimos parâmetros "
"de :ref:`add_surface_from_arrays() "
"<class_arraymesh_method_add_surface_from_arrays>` são geralmente deixados em "
"branco."

msgid ""
"In the editor, create a :ref:`MeshInstance3D <class_meshinstance3d>` and add "
"an :ref:`ArrayMesh <class_arraymesh>` to it in the Inspector. Normally, "
"adding an ArrayMesh in the editor is not useful, but in this case it allows "
"us to access the ArrayMesh from code without creating one."
msgstr ""
"No editor, crie um :ref:`MeshInstance3D <class_meshinstance3d>` e adicione "
"um :ref:`ArrayMesh <class_arraymesh>` a ele no Inspetor. Normalmente, "
"adicionar um ArrayMesh no editor não é útil, mas neste caso isso nos permite "
"acessar o ArrayMesh pelo código sem precisar criar um."

msgid "Under ``_ready()``, create a new Array."
msgstr "Em ''_ready()'', crie uma nova Array."

msgid ""
"This will be the array that we keep our surface information in - it will "
"hold all the arrays of data that the surface needs. Godot will expect it to "
"be of size ``Mesh.ARRAY_MAX``, so resize it accordingly."
msgstr ""
"Esta será a matriz na qual manteremos nossas informações de superfície - ela "
"conterá todas as matrizes de dados que a superfície necessita. Godot espera "
"que ela seja do tamanho ``Mesh.ARRAY_MAX``, portanto, redimensione-a de "
"acordo."

msgid "Next create the arrays for each data type you will use."
msgstr "Em seguida, crie as matrizes para cada tipo de dado que você usará."

msgid ""
"Once you have filled your data arrays with your geometry you can create a "
"mesh by adding each array to ``surface_array`` and then committing to the "
"mesh."
msgstr ""
"Uma vez que você tenha preenchido suas matrizes de dados com sua geometria, "
"você pode criar uma malha adicionando cada matriz a ``surface_array`` e, em "
"seguida, comitando para a malha."

msgid ""
"In this example, we used ``Mesh.PRIMITIVE_TRIANGLES``, but you can use any "
"primitive type available from mesh."
msgstr ""
"Neste exemplo, utilizamos ``Mesh.PRIMITIVE_TRIANGLES``, mas você pode "
"utilizar qualquer tipo primitivo disponível na malha."

msgid "Put together, the full code looks like:"
msgstr "Juntos, o código completo se parece com:"

msgid ""
"The code that goes in the middle can be whatever you want. Below we will "
"present some example code for generating a sphere."
msgstr ""
"O código que vai no meio pode ser o que você quiser. A seguir apresentaremos "
"um exemplo de código para gerar uma esfera."

msgid "Generating geometry"
msgstr "Gerando geometria"

msgid ""
"Here is sample code for generating a sphere. Although the code is presented "
"in GDScript, there is nothing Godot specific about the approach to "
"generating it. This implementation has nothing in particular to do with "
"ArrayMeshes and is just a generic approach to generating a sphere. If you "
"are having trouble understanding it or want to learn more about procedural "
"geometry in general, you can use any tutorial that you find online."
msgstr ""
"Aqui está uma amostra de código para gerar uma esfera. Embora o código seja "
"apresentado no GDScript, não há nada de específico do Godot sobre a "
"abordagem para gerá-lo. Esta implementação não tem nada em particular a ver "
"com ArrayMeshes e é apenas uma abordagem genérica para a geração de uma "
"esfera. Se você estiver tendo problemas para compreendê-la ou quiser "
"aprender mais sobre a geometria de procedimentos em geral, você pode usar "
"qualquer tutorial que encontrar on-line."

msgid "Saving"
msgstr "Salvando"

msgid ""
"Finally, we can use the :ref:`ResourceSaver <class_resourcesaver>` class to "
"save the ArrayMesh. This is useful when you want to generate a mesh and then "
"use it later without having to re-generate it."
msgstr ""
"Finalmente, podemos usar a classe :ref:'ResourceSaver<class_resourcesaver>' "
"para salvar a ArrayMesh. Isso é útil quando você deseja gerar uma malha e, "
"em seguida, usá-la mais tarde sem ter que gerá-la novamente."
