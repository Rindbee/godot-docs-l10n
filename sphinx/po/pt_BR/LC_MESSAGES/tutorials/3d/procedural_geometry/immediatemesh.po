#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"The :ref:`ImmediateMesh <class_ImmediateMesh>` is a convenient tool to "
"create dynamic geometry using an OpenGL 1.x-style API. Which makes it both "
"approachable to use and efficient for meshes which need to be updated every "
"frame."
msgstr ""
"O :ref:`ImmediateMesh <class_ImmediateMesh>` é uma ferramenta prática para "
"criar geometria dinâmica usando uma API no estilo do OpenGL 1.x. Isso o "
"torna tanto acessível de usar quanto eficiente para malhas que precisam ser "
"atualizadas a cada frame."

msgid ""
"Generating complex geometry (several thousand vertices) with this tool is "
"inefficient, even if it's done only once. Instead, it is designed to "
"generate simple geometry that changes every frame."
msgstr ""
"Gerar geometria complexa (com vários milhares de vértices) com essa "
"ferramenta é ineficiente, mesmo que seja feito apenas uma vez. Em vez disso, "
"ela foi projetada para gerar geometria simples que muda a cada frame."

msgid ""
"First, you need to create a :ref:`MeshInstance3D <class_meshinstance3d>` and "
"add an :ref:`ImmediateMesh <class_ImmediateMesh>` to it in the Inspector."
msgstr ""
"Primeiro, você precisa criar um :ref:`MeshInstance3D <class_meshinstance3d>` "
"e adicionar um :ref:`ImmediateMesh <class_ImmediateMesh>` a ele no Inspetor."

msgid ""
"Next, add a script to the MeshInstance3D. The code for the ImmediateMesh "
"should go in the ``_process()`` function if you want it to update each "
"frame, or in the ``_ready()`` function if you want to create the mesh once "
"and not update it. If you only generate a surface once, the ImmediateMesh is "
"just as efficient as any other kind of mesh as the generated mesh is cached "
"and reused."
msgstr ""
"Em seguida, adicione um script ao MeshInstance3D. O código para o "
"ImmediateMesh deve ser colocado na função ``_process()`` se você quiser que "
"ele seja atualizado a cada frame, ou na função ``_ready()`` se quiser criar "
"a malha apenas uma vez e não atualizá-la. Se você gerar uma superfície "
"apenas uma vez, o ImmediateMesh é tão eficiente quanto qualquer outro tipo "
"de malha, pois a malha gerada é armazenada em cache e reutilizada."

msgid ""
"To begin generating geometry you must call ``surface_begin()``. "
"``surface_begin()`` takes a ``PrimitiveType`` as an argument. "
"``PrimitiveType`` instructs the GPU how to arrange the primitive based on "
"the vertices given whether it is triangles, lines, points, etc. A complete "
"list can be found under the :ref:`Mesh <class_mesh>` class reference page."
msgstr ""
"Para começar a gerar geometria, você deve chamar ``surface_begin()``. "
"``surface_begin()`` recebe um ``PrimitiveType`` como argumento. O "
"``PrimitiveType`` instrui a GPU sobre como organizar a primitiva com base "
"nos vértices fornecidos, seja em triângulos, linhas, pontos etc. Uma lista "
"completa pode ser encontrada na página de referência da classe :ref:`Mesh "
"<class_mesh>`."

msgid ""
"Once you have called ``surface_begin()`` you are ready to start adding "
"vertices. You add vertices one at a time. First you add vertex specific "
"attributes such as normals or UVs using ``surface_set_****()`` (e.g. "
"``surface_set_normal()``). Then you call ``surface_add_vertex()`` to add a "
"vertex with those attributes. For example:"
msgstr ""
"Depois de chamar ``surface_begin()``, você está pronto para começar a "
"adicionar vértices. Os vértices são adicionados um por vez. Primeiro, você "
"adiciona os atributos específicos do vértice, como normais ou UVs, usando "
"``surface_set_****()`` (por exemplo, ``surface_set_normal()``). Em seguida, "
"você chama ``surface_add_vertex()`` para adicionar um vértice com esses "
"atributos. Por exemplo:"

msgid ""
"Only attributes added before the call to ``surface_add_vertex()`` will be "
"included in that vertex. If you add an attribute twice before calling "
"``surface_add_vertex()``, only the second call will be used."
msgstr ""
"Apenas os atributos adicionados antes da chamada de ``surface_add_vertex()`` "
"serão incluídos naquele vértice. Se você adicionar um atributo duas vezes "
"antes de chamar ``surface_add_vertex()``, apenas a segunda chamada será "
"usada."

msgid ""
"Finally, once you have added all your vertices call ``surface_end()`` to "
"signal that you have finished generating the surface. You can call "
"``surface_begin()`` and ``surface_end()`` multiple times to generate "
"multiple surfaces for the mesh."
msgstr ""
"Por fim, após adicionar todos os seus vértices, chame ``surface_end()`` para "
"sinalizar que terminou de gerar a superfície. Você pode chamar "
"``surface_begin()`` e ``surface_end()`` várias vezes para gerar múltiplas "
"superfícies para a malha."

msgid ""
"The ImmediateMesh can also be used across frames. Each time you call "
"``surface_begin()`` and ``surface_end()``, you are adding a new surface to "
"the ImmediateMesh. If you want to recreate the mesh from scratch each frame, "
"call ``clear_surfaces()`` before calling ``surface_begin()``."
msgstr ""
"O ImmediateMesh também pode ser usado entre frames. Cada vez que você chama "
"``surface_begin()`` e ``surface_end()``, uma nova superfície é adicionada ao "
"ImmediateMesh. Se quiser recriar a malha do zero a cada frame, chame "
"``clear_surfaces()`` antes de chamar ``surface_begin()``."

msgid ""
"The above code will dynamically create and draw a single surface each frame."
msgstr ""
"O código acima criará e desenhará dinamicamente uma única superfície em cada "
"quadro."
