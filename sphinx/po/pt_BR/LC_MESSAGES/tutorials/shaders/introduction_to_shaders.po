#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to shaders"
msgstr "Introdução aos shaders"

msgid ""
"This page explains what shaders are and will give you an overview of how "
"they work in Godot. For a detailed reference of the engine's shading "
"language, see :ref:`doc_shading_language`."
msgstr ""
"Esta página explica o que são shaders e lhe dará uma visão geral de como "
"eles funcionam no Godot. Para uma referência detalhada da linguagem de "
"shading do motor, veja :ref:`doc_shading_language`."

msgid ""
"Shaders are a special kind of program that runs on Graphics Processing Units "
"(GPUs). They were initially used to shade 3D scenes but can nowadays do much "
"more. You can use them to control how the engine draws geometry and pixels "
"on the screen, allowing you to achieve all sorts of effects."
msgstr ""
"Shaders são um tipo especial de programa executado em unidades de "
"processamento gráfico (GPUs). Eles foram inicialmente usados para sombrear "
"cenas 3D, mas hoje em dia podem fazer muito mais. Você pode usá-los para "
"controlar como o motor desenha a geometria e os pixels na tela, permitindo "
"obter todos os tipos de efeitos."

msgid ""
"Modern rendering engines like Godot draw everything with shaders: graphics "
"cards can run thousands of instructions in parallel, leading to incredible "
"rendering speed."
msgstr ""
"Motores de renderização modernos como o Godot desenham tudo com shaders: "
"placas gráficas podem executar milhares de instruções em paralelo, levando a "
"uma incrível velocidade de renderização."

msgid ""
"Because of their parallel nature, though, shaders don't process information "
"the way a typical program does. Shader code runs on each vertex or pixel in "
"isolation. You cannot store data between frames either. As a result, when "
"working with shaders, you need to code and think differently from other "
"programming languages."
msgstr ""
"Por causa de sua natureza paralela, porém, os shaders não processam "
"informações da mesma forma que um programa típico faz. O código do shader é "
"executado em cada vértice ou pixel isoladamente. Você também não pode "
"armazenar dados entre quadros. Como resultado, ao trabalhar com shaders, "
"você precisa programar e pensar de forma diferente de outras linguagens de "
"programação."

msgid ""
"Suppose you want to update all the pixels in a texture to a given color. In "
"GDScript, your code would use ``for`` loops::"
msgstr ""
"Suponha que você queira atualizar todos os pixels em uma textura para uma "
"determinada cor. Em GDScript, seu código utilizaria loops ``for``::"

msgid ""
"Your code is already part of a loop in a shader, so the corresponding code "
"would look like this."
msgstr ""
"Seu código já é parte de um loop em um shader, então o código correspondente "
"ficaria assim."

msgid ""
"The graphics card calls the ``fragment()`` function once or more for each "
"pixel it has to draw. More on that below."
msgstr ""
"A placa gráfica chama a função ``fragment()`` uma ou mais vezes para cada "
"pixel a ser desenhado. Mais sobre isso abaixo."

msgid "Shaders in Godot"
msgstr "Shaders em Godot"

msgid "Shader types"
msgstr "Tipos de shader"

msgid ""
"In Godot, all shaders need to specify their type in the first line, like so:"
msgstr ""
"Em Godot, todos os shaders precisam especificar seu tipo na primeira linha, "
"assim:"

msgid "Here are the available types:"
msgstr "Aqui estão os tipos disponíveis:"

msgid ":ref:`spatial <doc_spatial_shader>` for 3D rendering."
msgstr ":ref:`spatial <doc_spatial_shader>` para renderização 3D."

msgid ":ref:`canvas_item <doc_canvas_item_shader>` for 2D rendering."
msgstr ":ref:`canvas_item <doc_canvas_item_shader>` para renderização 2D."

msgid ":ref:`particles <doc_particle_shader>` for particle systems."
msgstr ":ref:`particles <doc_particle_shader>` para sistemas de partículas."

msgid "Render modes"
msgstr "Modos de renderização"

msgid ""
"Each shader type has different render modes. See the reference for each "
"shader type for a complete list of render modes."
msgstr ""
"Cada tipo de shader tem diferentes modos de renderização. Veja a referência "
"para cada tipo de shader para uma lista completa de modos de renderização."

msgid "Vertex processor"
msgstr "Processador de vértice"

msgid ""
"By default, Godot transforms your vertex information for you, which is "
"necessary to project geometry onto the screen. You can use render modes to "
"transform the data yourself; see the :ref:`Spatial shader doc "
"<doc_spatial_shader>` for an example."
msgstr ""
"Por padrão, Godot transforma suas informações de vértices para você, o que é "
"necessário para projetar a geometria na tela. Você pode utilizar modos de "
"renderização para transformar os dados você mesmo; veja o :ref:`Spatial "
"shader doc <doc_spatial_shader>` para um exemplo."

msgid "Fragment processor"
msgstr "Processador de fragmentos"

msgid ""
"The standard use of the fragment function is to set up material properties "
"used to calculate lighting. For example, you would set values for "
"``ROUGHNESS``, ``RIM``, or ``TRANSMISSION``, which would tell the light "
"function how the lights respond to that fragment. This makes it possible to "
"control a complex shading pipeline without the user having to write much "
"code. If you don't need this built-in functionality, you can ignore it and "
"write your own light processing function, and Godot will optimize it away. "
"For example, if you do not write a value to ``RIM``, Godot will not "
"calculate rim lighting. During compilation, Godot checks to see if ``RIM`` "
"is used; if not, it cuts all the corresponding code out. Therefore, you will "
"not waste calculations on the effects that you do not use."
msgstr ""
"O uso padrão da função de fragmento é configurar as propriedades do material "
"usadas para calcular a iluminação. Por exemplo, você definiria valores para "
"``ROUGHNESS``, ``RIM`` ou ``TRANSMISSION``, que informariam à função de luz "
"como as luzes respondem a esse fragmento. Isso torna possível controlar um "
"pipeline de sombreamento complexo sem que o usuário precise escrever muito "
"código. Se você não precisa dessa funcionalidade integrada, pode ignorá-la e "
"escrever sua própria função de processamento de luz, e Godot a otimizará. "
"Por exemplo, se você não escrever um valor para ``RIM``, o Godot não "
"calculará a iluminação do aro. Durante a compilação, Godot verifica se "
"``RIM`` é usado; caso contrário, ele corta todo o código correspondente. "
"Portanto, você não desperdiçará cálculos nos efeitos que não usa."

msgid "Light processor"
msgstr "Processador de luz"

msgid ""
"The ``light()`` processor runs per pixel too, and it runs once for every "
"light that affects the object. It does not run if no lights affect the "
"object. It exists as a function called inside the ``fragment()`` processor "
"and typically operates on the material properties setup inside the "
"``fragment()`` function."
msgstr ""
"O processador ``light()`` funciona por pixel também, e funciona uma vez para "
"cada luz que afeta o objeto. Ele não funciona se nenhuma luz afetar o "
"objeto. Existe como uma função chamada dentro do processador ``fragment()`` "
"e normalmente opera na configuração das propriedades do material dentro da "
"função ``fragment()``."

msgid ""
"The ``light()`` processor works differently in 2D than it does in 3D; for a "
"description of how it works in each, see their documentation, :ref:"
"`CanvasItem shaders <doc_canvas_item_shader>` and :ref:`Spatial shaders "
"<doc_spatial_shader>`, respectively."
msgstr ""
"O processador ``light()`` funciona de forma diferente em 2D do que em 3D; "
"para uma descrição de como funciona em cada um deles, veja sua "
"documentação, :ref:`CanvasItem shaders <doc_canvas_item_shader>` e :ref:"
"`Shaders espaciais <doc_spatial_shader>`, respectivamente."

msgid "Translation status"
msgstr "Progresso da Tradução"
