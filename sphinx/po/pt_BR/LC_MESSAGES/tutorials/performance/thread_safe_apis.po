#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Threads"
msgstr "Partes_Paralelizáveis"

msgid ""
"Threads are used to balance processing power across CPUs and cores. Godot "
"supports multithreading, but not in the whole engine."
msgstr ""
"Partes_Paralelizáveis são usadas para equilibrar o poder de processamento "
"entre CPUs e núcleos. Godot suporta multithreading(paralelismo), mas não em "
"todo o Motor."

msgid ""
"Below is a list of ways multithreading can be used in different areas of "
"Godot."
msgstr ""
"Abaixo está uma lista de maneiras como o paralelismo(multithreading) pode "
"ser utilizado em diferentes áreas do Godot."

msgid "Global scope"
msgstr "Escopo global"

msgid ""
":ref:`Global Scope<class_@GlobalScope>` singletons are all thread-safe. "
"Accessing servers from threads is supported (for RenderingServer and Physics "
"servers, ensure threaded or thread-safe operation is enabled in the project "
"settings!)."
msgstr ""
":ref:`Global Scope<class_@GlobalScope>` singletons(padrão: único) são todos "
"parte_paralelizável segura(thread-safe). O acesso a servidores a partir de "
"partes_paralelizáveis é suportado (para servidores RenderingServer e "
"Physics, certifique-se de que a operação threaded ou thread-safe esteja "
"habilitada nas configurações do projeto!)."

msgid ""
"This makes them ideal for code that creates dozens of thousands of instances "
"in servers and controls them from threads. Of course, it requires a bit more "
"code, as this is used directly and not within the scene tree."
msgstr ""
"Isso os torna ideais para códigos que criam dezenas de milhares de "
"instâncias em servidores e as controlam a partir de partes_paralelizáveis. "
"Claro, isso requer um pouco mais de código, pois é usado diretamente e não "
"na árvore de cena."

msgid "Scene tree"
msgstr "Árvore de cena"

msgid ""
"Interacting with the active scene tree is **NOT** thread-safe. Make sure to "
"use mutexes when sending data between threads. If you want to call functions "
"from a thread, the *call_deferred* function may be used:"
msgstr ""
"Interagir com a árvore de cena ativa **NÃO** é seguro para "
"partes_paralelizáveis. Certifique-se de usar mutexes ao enviar dados entre "
"threads(partes_paralelizáveis). Se você quiser chamar funções de um thread, "
"a função *call_deferred* pode ser usada:"

msgid ""
"However, creating scene chunks (nodes in tree arrangement) outside the "
"active tree is fine. This way, parts of a scene can be built or instantiated "
"in a thread, then added in the main thread:"
msgstr ""
"No entanto, criar partes da cena (nós em uma disposição em árvore) fora da "
"árvore ativa é aceitável. Dessa forma, partes de uma cena podem ser "
"construídas ou instanciadas em uma parte_paralelizavel(thread), e depois "
"adicionadas na parte principal_paralelizavel principal(main thread):"

msgid ""
"Still, this is only really useful if you have **one** thread loading data. "
"Attempting to load or create scene chunks from multiple threads may work, "
"but you risk resources (which are only loaded once in Godot) tweaked by the "
"multiple threads, resulting in unexpected behaviors or crashes."
msgstr ""
"Ainda assim, isso só é realmente útil se você tiver **uma** "
"parte_paralelizável carregando dados. Tentar carregar ou criar partes da "
"cena a partir de várias partes_paralelizáveis pode funcionar, mas você corre "
"o risco de que recursos (que são carregados apenas uma vez no Godot) sejam "
"modificados pelas várias partes_paralelizáveis, resultando em comportamentos "
"inesperados ou falhas."

msgid ""
"Only use more than one thread to generate scene data if you *really* know "
"what you are doing and you are sure that a single resource is not being used "
"or set in multiple ones. Otherwise, you are safer just using the servers API "
"(which is fully thread-safe) directly and not touching scene or resources."
msgstr ""
"Use mais de uma parte_paralelizavel(thread) para gerar dados de cena apenas "
"se você realmente souber o que está fazendo e tiver certeza de que um único "
"recurso não está sendo utilizado ou modificado em múltiplas "
"partes_paralelizaveis(threads). Caso contrário, é mais seguro utilizar "
"diretamente a API dos servidores (que é totalmente segura para paralelização "
"= thread-safe) e não mexer em cenas ou recursos."

msgid "Rendering"
msgstr "Renderização"

msgid ""
"You should avoid calling functions involving direct interaction with the GPU "
"on other threads, such as creating new textures or modifying and retrieving "
"image data, these operations can lead to performance stalls because they "
"require synchronization with "
"the :ref:`RenderingServer<class_RenderingServer>`, as data needs to be "
"transmitted to or updated on the GPU."
msgstr ""
"Você deve evitar chamar funções que envolvam interação direta com a GPU em "
"outras partes_paralelizáveis, como criar novas texturas ou modificar e "
"recuperar dados de imagem, essas operações podem levar a travamentos de "
"desempenho porque requerem sincronização com "
"o :ref:`RenderingServer<class_RenderingServer>`, pois os dados precisam ser "
"transmitidos ou atualizados na GPU."

msgid "GDScript arrays, dictionaries"
msgstr "GDScript matrizes, dicionários"

msgid ""
"In GDScript, reading and writing elements from multiple threads is OK, but "
"anything that changes the container size (resizing, adding or removing "
"elements) requires locking a mutex."
msgstr ""
"No GDScript, ler e escrever elementos de várias partes_paralelizáveis é "
"aceitável, mas qualquer coisa que altere o tamanho do contêiner "
"(redimensionamento, adição ou remoção de elementos) requer o bloqueio de um "
"mutex."

msgid "Resources"
msgstr "Recursos"

msgid ""
"Modifying a unique resource from multiple threads is not supported. However "
"handling references on multiple threads is supported, hence loading "
"resources on a thread is as well - scenes, textures, meshes, etc - can be "
"loaded and manipulated on a thread and then added to the active scene on the "
"main thread. The limitation here is as described above, one must be careful "
"not to load the same resource from multiple threads at once, therefore it is "
"easiest to use **one** thread for loading and modifying resources, and then "
"the main thread for adding them."
msgstr ""
"Modificar um recurso único a partir de várias partes_paralelizaveis(threads) "
"não é suportado. No entanto, manipular referências em múltiplas "
"partes_paralelizaveis é suportado, o que permite o carregamento de recursos "
"em uma parte_paralelizavel — cenas, texturas, malhas, etc. — que podem ser "
"carregados e manipulados em uma parte_paralelizavel e depois adicionados à "
"cena ativa na parte_paralelizavel principal(main thread). A limitação aqui, "
"conforme descrito acima, é que deve-se ter cuidado para não carregar o mesmo "
"recurso a partir de várias partes_paralelizaveis ao mesmo tempo. Portanto, é "
"mais fácil usar uma parte_paralelizavel para carregar e modificar recursos "
"e, em seguida, a parte_paralelizavel principal(main thread) para adicioná-"
"los."
