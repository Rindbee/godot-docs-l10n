#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Nodes and Scenes"
msgstr "節點與場景"

msgid ""
"In :ref:`doc_key_concepts_overview`, we saw that a Godot game is a tree of "
"scenes and that each scene is a tree of nodes. In this lesson, we explain a "
"bit more about them. You will also create your first scene."
msgstr ""
"在 :ref:`doc_key_concepts_overview` 中，我們看到 Godot 遊戲就是由場景構成的樹"
"狀結構，而每一個場景又是一個由節點構成的樹狀結構。在這一節中，我們將更詳細地"
"解釋這些概念，你還將建立你的第一個場景。"

msgid "Nodes"
msgstr "節點"

msgid ""
"**Nodes are the fundamental building blocks of your game**. They are like "
"the ingredients in a recipe. There are dozens of kinds that can display an "
"image, play a sound, represent a camera, and much more."
msgstr ""
"**節點是你的遊戲的基本構件** 。它們就像食譜裡的食材。Godot 引擎包含很多種節"
"點，可以用來顯示圖像、播放聲音、表示相機等等。"

msgid "All nodes have the following characteristics:"
msgstr "有下列事項需注意："

msgid "A name."
msgstr "名稱。"

msgid "Editable properties."
msgstr "節點有可編輯的屬性。"

msgid "They receive callbacks to update every frame."
msgstr "節點能接收用來處理每一影格的回呼函式。"

msgid "You can extend them with new properties and functions."
msgstr "可以擴充節點（讓節點有更多功能）。"

msgid "You can add them to another node as a child."
msgstr "可以新增節點到另一個節點，變成另一個節點的子節點。"

msgid ""
"The last characteristic is important. **Together, nodes form a tree**, which "
"is a powerful feature to organize projects. Since different nodes have "
"different functions, combining them produces more complex behavior. As we "
"saw before, you can build a playable character the camera follows using "
"a :ref:`CharacterBody2D <class_CharacterBody2D>` node, a :ref:`Sprite2D "
"<class_Sprite2D>` node, a :ref:`Camera2D <class_Camera2D>` node, and "
"a :ref:`CollisionShape2D <class_CollisionShape2D>` node."
msgstr ""
"最後一個特性非常重要。**節點共同組成一個樹狀結構**，這是一個組織專案的強大功"
"能。由於不同的節點有不同的功能，組合它們可以產生更複雜的行為。如同我們之前看"
"到的，你可以使用一個 :ref:`CharacterBody2D <class_CharacterBody2D>` 節點、一"
"個 :ref:`Sprite2D <class_Sprite2D>` 節點、一個 :ref:`Camera2D "
"<class_Camera2D>` 節點和一個 :ref:`CollisionShape2D "
"<class_CollisionShape2D>` 節點來建立一個可操作的角色，並讓攝影機跟隨它。"

msgid "Scenes"
msgstr "場景"

msgid ""
"When you organize nodes in a tree, like our character, we call this "
"construct a scene. Once saved, scenes work like new node types in the "
"editor, where you can add them as a child of an existing node. In that case, "
"the instance of the scene appears as a single node with its internals hidden."
msgstr ""
"當你在樹中組織節點時，就像我們的角色一樣，我們稱之為場景建構。保存後，場景的"
"工作方式類似於編輯器中的新節點型別，您可以在其中將它們新增為現有節點的子節"
"點。在這種情況下，場景實例顯示為隱藏其內部結構的單個節點。"

msgid ""
"Scenes allow you to structure your game's code however you want. You can "
"**compose nodes** to create custom and complex node types, like a game "
"character that runs and jumps, a life bar, a chest with which you can "
"interact, and more."
msgstr ""
"場景允許你以你想要的方式來建構你的遊戲程式碼。你可以 **組合節點** 來建立自訂"
"和複雜的節點型別，比如能跑能跳的遊戲角色、生命條、可以互動的箱子等等。"

msgid ""
"The Godot editor essentially is a **scene editor**. It has plenty of tools "
"for editing 2D and 3D scenes, as well as user interfaces. A Godot project "
"can contain as many of these scenes as you need. The engine only requires "
"one as your application's **main scene**. This is the scene Godot will first "
"load when you or a player runs the game."
msgstr ""
"基本上，Godot 編輯器就是一個 **場景編輯器**，有著各種能夠編輯 2D 與 3D 場景以"
"及使用者介面的工具。但編輯器基本上就只是用來編輯場景以及編輯構成場景的節點。"

msgid "On top of acting like nodes, scenes have the following characteristics:"
msgstr "有下列事項需注意："

msgid "They always have one root node, like the \"Player\" in our example."
msgstr "它們總是會有一個根節點，就像我們範例中的「Player」一樣。"

msgid "You can save them to your local drive and load them later."
msgstr "可以新增節點到另一個節點，變成另一個節點的子節點。"

msgid ""
"You can create as many instances of a scene as you'd like. You could have "
"five or ten characters in your game, created from your Character scene."
msgstr ""
"您可以根據需要建立任意數量的場景實例。您的遊戲中可以有五個或十個角色，這些角"
"色是從角色場景中建立的。"

msgid "Creating your first scene"
msgstr "建立內容"

msgid ""
"Let's create our first scene with a single node. To do so, you will need "
"to :ref:`create a new project <doc_creating_and_importing_projects>` first. "
"After opening the project, you should see an empty editor."
msgstr ""
"讓我們只用一個節點來建立我們的第一個場景吧。首先你需要 :ref:`建立一個新專案 "
"<doc_creating_and_importing_projects>` 。在打開專案後，你看到的應該是一個空的"
"編輯器。"

msgid ""
"We're going to add a single :ref:`Label <class_Label>` node to our scene. "
"Its function is to draw text on the screen."
msgstr ""
"我們要往場景中新增一個 :ref:`Label <class_Label>` 節點。它的功能是在螢幕上繪"
"製文字。"

msgid "Select the Label node. You can type its name to filter down the list."
msgstr "選擇 Label 節點。您可以輸入這個名字來對列表進行篩選。"

msgid ""
"A lot happens when you add a scene's first node. The scene changes to the 2D "
"workspace because Label is a 2D node type. The Label appears, selected, in "
"the top-left corner of the viewport. The node appears in the Scene dock on "
"the left, and the node's properties appear in the Inspector dock on the "
"right."
msgstr ""
"新增場景中的第一個節點時會發生很多事。場景會切換到 2D 工作區，因為 Label 是 "
"2D 節點型別。該 Label 會以選中的狀態出現在視口的左上角。這個節點也會出現在左"
"側的“場景”面板中，它的屬性會書現在右側的“屬性檢視器”面板裡。"

msgid "Changing a node's properties"
msgstr "訊號與屬性"

msgid "You will see the text draw in the viewport as you type."
msgstr "在你打字的同時，你會發現視口中也繪製出了這段文字。"

msgid ""
"You can edit any property listed in the Inspector as we did with the Text. "
"For a complete reference of the Inspector dock, "
"see :ref:`doc_editor_inspector_dock`."
msgstr ""
"您可以編輯檢測器中列出的任何屬性，就像我們對「文字」所做的那樣。有關檢測器停"
"靠視窗的完整參考，請參閱 :ref:`doc_editor_inspector_dock`。"

msgid ""
"You can move your Label node in the viewport by selecting the move tool in "
"the toolbar."
msgstr "選擇工具列上的移動工具，就可以在視口中移動你的 Label 節點。"

msgid ""
"With the Label selected, click and drag anywhere in the viewport to move it "
"to the center of the view delimited by the rectangle."
msgstr ""
"選中 Label，點擊並拖拽視口中的任何位置，將它移動到矩形框所表示的視圖中心。"

msgid "Running the scene"
msgstr "執行遊戲"

msgid ""
"The application should open in a new window and display the text \"Hello "
"World\"."
msgstr "程式會打開一個新視窗，顯示“Hello World”字樣。"

msgid ""
"Close the window or press :kbd:`F8` (:kbd:`Cmd + .` on macOS) to quit the "
"running scene."
msgstr ""
"關閉視窗或按 :kbd:`F8` （在 macOS 上是 :kbd:`Cmd + .` ）就可以退出正在運作的"
"場景。"

msgid "Setting the main scene"
msgstr "設定主要場景"

msgid "A popup window appears and invites you to select the main scene."
msgstr "出現快顯視窗讓你選擇主場景。"

msgid ""
"The demo should run again. Moving forward, every time you run the project, "
"Godot will use this scene as a starting point."
msgstr ""
"演示程式又會開始運作。此後，每次你運作專案，Godot 都會使用該場景作為起點。"

msgid ""
"In the next part, we will discuss another key concept in games and in Godot: "
"creating instances of a scene."
msgstr ""
"下一部分中，我們將討論遊戲和 Godot 中的另一個關鍵概念：建立場景的實例。"
