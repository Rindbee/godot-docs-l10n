#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Setting up the game area"
msgstr "設定遊戲區域"

msgid ""
"In this first part, we're going to set up the game area. Let's get started "
"by importing the start assets and setting up the game scene."
msgstr ""
"在第一部分中，我們將設定遊戲區域。讓我們從匯入初始素材、設定遊戲場景入手。"

msgid ""
"Once you downloaded it, extract the .zip archive on your computer. Open the "
"Godot Project Manager and click the *Import* button."
msgstr ""
"一旦下在完成，解壓縮到任意處，然後打開 Godot 並在專案管理員裡點擊 [匯入] 按鈕"
"來新增該專案。"

msgid ""
"A window notifying you that the project was generated by an older Godot "
"version may appear. Click *Convert Full Project* to convert the project to "
"your current Godot version."
msgstr ""
"可能會出現一個視窗通知您專案是由較舊的 Godot 版本產生的。點擊「轉換完整專案」"
"以將專案轉換為您目前的 Godot 版本。"

msgid ""
"The start project contains an icon and two folders: ``art/`` and ``fonts/``. "
"There, you will find the art assets and music we'll use in the game."
msgstr ""
"起始專案中包含一個圖示和兩個資料夾：``art/`` 和 ``fonts/``。你可以在裡面找到"
"遊戲中我們會用到的藝術素材和音樂。"

msgid ""
"There are two 3D models, ``player.glb`` and ``mob.glb``, some materials that "
"belong to these models, and a music track."
msgstr ""
"裡面有兩個 3D 模型，``player.glb`` 和 ``mob.glb``，一些模型使用的材質，以及一"
"首音樂。"

msgid "Setting up the playable area"
msgstr "設定建置系統"

msgid ""
"We're going to create our main scene with a plain :ref:`Node <class_Node>` "
"as its root. In the *Scene* dock, click the *Add Child Node* button "
"represented by a \"+\" icon in the top-left and double-click on *Node*. Name "
"the node ``Main``. An alternate method to rename the node is to right-click "
"on *Node* and choose *Rename* (or :kbd:`F2`). Alternatively, to add a node "
"to the scene, you can press :kbd:`Ctrl + A` (:kbd:`Cmd + A` on macOS)."
msgstr ""
"我們將建立我們的主要場景，並以一個純粹的 :ref:`Node <class_Node>` 作為它的根"
"節點。在 *場景* 面板中，點擊位於左上角、以「+」圖示表示的 *新增子節點* 按鈕，"
"然後雙擊 *Node*。將該節點命名為 ``Main`` 。另一種重新命名節點的方法是右鍵點"
"擊 *Node* 並選擇 *重新命名* （或按下 :kbd:`F2`）。或者，要新增節點到場景中，"
"您可以按下 :kbd:`Ctrl + A`（macOS 上是 :kbd:`Cmd + A`）。"

msgid ""
"Save the scene as ``main.tscn`` by pressing :kbd:`Ctrl + S` (:kbd:`Cmd + S` "
"on macOS)."
msgstr ""
"按下 :kbd:`Ctrl + S` (macOS 請按 :kbd:`Cmd + S`) 將場景儲存為 "
"``main.tscn`` 。"

msgid ""
"We'll start by adding a floor that'll prevent the characters from falling. "
"To create static colliders like the floor, walls, or ceilings, you can "
"use :ref:`StaticBody3D <class_StaticBody3D>` nodes. They "
"require :ref:`CollisionShape3D <class_CollisionShape3D>` child nodes to "
"define the collision area. With the ``Main`` node selected, add "
"a :ref:`StaticBody3D <class_StaticBody3D>` node, then "
"a :ref:`CollisionShape3D <class_CollisionShape3D>`. Rename "
"the :ref:`StaticBody3D <class_StaticBody3D>` to ``Ground``."
msgstr ""
"我們先新增一個地板，以防止角色掉落。要建立地板、牆壁或天花板等靜態碰撞器，可"
"以使用 :ref:`StaticBody3D <class_StaticBody3D>` 節點。它們需"
"要 :ref:`CollisionShape3D <class_CollisionShape3D>` 子節點來定義碰撞區域。選"
"擇 *Main* 節點後，新增 :ref:`StaticBody3D <class_StaticBody3D>` 節點，然後新"
"增 :ref:`CollisionShape3D <class_CollisionShape3D>`。將 :ref:`StaticBody3D "
"<class_StaticBody3D>` 重命名為 ``Ground`` 。"

msgid "Your scene tree should look like this"
msgstr "現在場景看起來會這樣："

msgid ""
"A warning sign next to the :ref:`CollisionShape3D <class_CollisionShape3D>` "
"appears because we haven't defined its shape. If you click the icon, a popup "
"appears to give you more information."
msgstr ""
"在 :ref:`CollisionShape3D <class_CollisionShape3D>` 旁邊會出現一個警告旗標，"
"因為我們還沒有定義它的形狀。如果你點擊這個圖示，就會彈出一個視窗，為你提供更"
"多資訊。"

msgid ""
"To create a shape, select the :ref:`CollisionShape3D "
"<class_CollisionShape3D>` node, head to the *Inspector* and click the "
"*<empty>* field next to the *Shape* property. Create a new *BoxShape3D*."
msgstr ""
"要建立形狀，請選中 :ref:`CollisionShape3D <class_CollisionShape3D>`，轉到*屬"
"性檢視器*，然後按一下 *Shape*（形狀）屬性旁邊的 *<空>* 欄位。建立一個新的 "
"*BoxShape3D*。"

msgid ""
"The box shape is perfect for flat ground and walls. Its thickness makes it "
"reliable to block even fast-moving objects."
msgstr ""
"盒子形狀非常適合平坦的地面和牆壁。它的厚度使它能夠可靠地阻擋甚至快速移動的物"
"體。"

msgid ""
"A box's wireframe appears in the viewport with three orange dots. You can "
"click and drag these to edit the shape's extents interactively. We can also "
"precisely set the size in the inspector. Click on the :ref:`BoxShape3D "
"<class_BoxShape3D>` to expand the resource. Set its *Size* to ``60`` on the "
"X-axis, ``2`` for the Y-axis, and ``60`` for the Z-axis."
msgstr ""
"一個立方體的線框會在視埠中出現，並帶有三個橘色點。您可以點擊並拖曳這些點來互"
"動式地編輯形狀的範圍。我們也可以在屬性檢視器中精確地設定尺寸。點"
"擊 :ref:`BoxShape3D <class_BoxShape3D>` 以展開資源。將其 *Size* 的 X 軸設為 "
"``60`` ，Y 軸設為 ``2`` ，Z 軸設為 ``60`` 。"

msgid ""
"Collision shapes are invisible. We need to add a visual floor that goes "
"along with it. Select the ``Ground`` node and add a :ref:`MeshInstance3D "
"<class_MeshInstance3D>` as its child."
msgstr ""
"碰撞形狀是不可見的。我們需要新增一個與之配套的視覺層。選擇 ``Ground`` 節點並"
"新增一個 :ref:`MeshInstance3D <class_MeshInstance3D>` 作為其子節點。"

msgid ""
"In the *Inspector*, click on the field next to *Mesh* and create "
"a :ref:`BoxMesh <class_BoxMesh>` resource to create a visible box."
msgstr ""
"在 *屬性面板*（Inspector）中，點擊 *Mesh* 旁的欄位，建立一個 :ref:`BoxMesh "
"<class_BoxMesh>` 資源，產生一個可見的立方體。"

msgid ""
"Once again, it's too small by default. Click the box icon to expand the "
"resource and set its *Size* to ``60``, ``2``, and ``60``."
msgstr ""
"再次設定大小，對於預設值來說它有點太小了。點擊立方體圖示展開資源，並將其 "
"*Size* 設定為 ``60``、``2``、``60``。由於立方體資源使用的是大小（size）而不是"
"範圍（extents），我們需要使用這些值，以便它與我們的碰撞形狀相配對。"

msgid ""
"You should see a wide grey slab that covers the grid and blue and red axes "
"in the viewport."
msgstr "您應該會在視口中看到一個覆蓋網格以及藍色和紅色軸的寬灰色平板。"

msgid ""
"We're going to move the ground down so we can see the floor grid. To do "
"this, the grid snapping feature can be used. Grid snapping can be activated "
"2 ways in the 3D editor. The first is by pressing the *Use Snap* button (or "
"pressing the :kbd:`Y` key). The second is by selecting a node, dragging a "
"handle on the gizmo **then** holding :kbd:`Ctrl` while still clicking to "
"enable snapping as long as :kbd:`Ctrl` is held."
msgstr ""
"我們要把地面往下移動，這樣才能看到地板網格。要做到這一點，可以使用網格吸附功"
"能。在 3D 編輯器中，有兩種方式可以啟用網格吸附。第一種是按下「使用吸附」按鈕"
"（或按下 :kbd:`Y` 鍵）。第二種是選取一個節點，拖曳變形控制器的控制柄， **然後"
"** 在按住滑鼠的同時按住 :kbd:`Ctrl` 鍵，只要 :kbd:`Ctrl` 鍵持續按住，就會啟用"
"吸附功能。"

msgid ""
"Start by setting snapping with your preferred method. Then move the "
"``Ground`` node using the Y-axis (the green arrow on the gizmo)."
msgstr ""
"首先，使用您偏好的方式設定 **吸附** 。然後使用 Y 軸（場景編輯器上的綠色箭頭）"
"移動 ``Ground`` 節點。"

msgid ""
"If you can't see the 3D object manipulator like on the image above, ensure "
"the *Select Mode* is active in the toolbar above the view."
msgstr ""
"如果你沒有看到如上圖所示的 3D 物件操作器，請確保已啟動視圖上方工具列中的*選擇"
"模式*。"

msgid ""
"Move the ground down ``1`` meter, in order to have a visible editor grid. A "
"label in the bottom-left corner of the viewport tells you how much you're "
"translating the node."
msgstr ""
"為了有一個可見的編輯器柵格，可以將地面往下移動 ``1`` 米。視口左下角的標籤會顯"
"示你將該節點平移了多遠。"

msgid ""
"Moving the *Ground* node down moves both children along with it. Ensure you "
"move the *Ground* node, **not** the *MeshInstance3D* or the "
"*CollisionShape3D*."
msgstr ""
"子節點會跟隨 *Ground* 節點一起往下移動。請確保你移動的是 *Ground* 節點，而不"
"是 *MeshInstance3D* 和 *CollisionShape3D*。"

msgid "Ultimately, ``Ground``'s transform.position.y should be -1"
msgstr "最終，``Ground`` 的 transform.position.y 應當是 -1"

msgid ""
"Let's add a directional light so our scene isn't all grey. Select the "
"``Main`` node and add a child node :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>`."
msgstr ""
"現在來新增一個平行光，從而讓我們的整個場景不全都是灰色的。選擇 ``Main`` 節"
"點，然後新增一個子節點 :ref:`DirectionalLight3D <class_DirectionalLight3D>`。"

msgid ""
"We need to move and rotate the :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>` node. Move it up by clicking and dragging on the "
"manipulator's green arrow and click and drag on the red arc to rotate it "
"around the X-axis, until the ground is lit."
msgstr ""
"我們需要移動並旋轉 :ref:`DirectionalLight3D <class_DirectionalLight3D>` 節"
"點。點擊並拖曳操作器的綠色箭頭將其向上移動，然後點擊並拖曳紅色弧線以繞 X 軸旋"
"轉，直到地面被照亮為止。"

msgid ""
"In the *Inspector*, turn on *Shadow -> Enabled* by clicking the checkbox."
msgstr "在*屬性檢視器*中，勾選核取方塊打開*Shadow -> Enabled*。"

msgid "At this point, your project should look like this."
msgstr "此時你的專案應該會長這樣。"

msgid ""
"That's our starting point. In the next part, we will work on the player "
"scene and base movement."
msgstr "這就是我們的起點了。在下一部分中，我們將處理玩家場景與基礎移動。"
