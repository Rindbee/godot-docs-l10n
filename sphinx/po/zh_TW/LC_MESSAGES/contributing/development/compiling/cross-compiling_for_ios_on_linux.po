#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cross-compiling for iOS on Linux"
msgstr "在 Linux 上為 iOS 進行交叉編譯"

msgid ""
"The procedure for this is somewhat complex and requires a lot of steps, but "
"once you have the environment properly configured you can compile Godot for "
"iOS anytime you want."
msgstr ""
"這個流程相當複雜，需要多個步驟，但只要正確設定好環境，就能隨時為 iOS 編譯 "
"Godot。"

msgid "Disclaimer"
msgstr "免責聲明"

msgid ""
"While it is possible to compile for iOS on a Linux environment, Apple is "
"very restrictive about the tools to be used (especially hardware-wise), "
"allowing pretty much only their products to be used for development. So this "
"is **not official**. However, in 2010 Apple said they relaxed some of the "
"`App Store review guidelines <https://developer.apple.com/app-store/review/"
"guidelines/>`__ to allow any tool to be used, as long as the resulting "
"binary does not download any code, which means it should be OK to use the "
"procedure described here and cross-compiling the binary."
msgstr ""
"雖然可以在 Linux 環境下為 iOS 編譯，但 Apple 對於所使用工具（特別是硬體）極為"
"嚴格，幾乎只允許使用自家產品開發，因此此流程 **並非官方方式**。不過，Apple "
"在 2010 年曾表示，已放寬部分 `App Store 審查方針 <https://"
"developer.apple.com/app-store/review/guidelines/>`__，只要產生的二進位檔不會"
"下載任何程式碼，即可使用任何工具。這代表本頁介紹的交叉編譯流程原則上可行。"

msgid "Requirements"
msgstr "系統需求"

msgid ""
"`XCode with the iOS SDK <https://developer.apple.com/download/all/?"
"q=Xcode>`__ (you must be logged into an Apple ID to download Xcode)."
msgstr ""
"`iOS SDK 版 Xcode <https://developer.apple.com/download/all/?q=Xcode>`__ （需"
"登入 Apple ID 才能下載）。"

msgid ""
"`Clang >= 3.5 <https://clang.llvm.org>`__ for your development machine "
"installed and in the ``PATH``. It has to be version >= 3.5 to target "
"``arm64`` architecture."
msgstr ""
"`Clang >= 3.5 <https://clang.llvm.org>`__ ，安裝於開發主機並設定於 ``PATH`` "
"中，版本需為 3.5 或以上才能支援 ``arm64`` 架構。"

msgid ""
"`xar <https://mackyle.github.io/xar/>`__ and `pbzx <https://github.com/"
"NiklasRosenstein/pbzx>`__ (required to extract the ``.xip`` archive Xcode "
"comes in)."
msgstr ""
"`xar <https://mackyle.github.io/xar/>`__ 和 `pbzx <https://github.com/"
"NiklasRosenstein/pbzx>`__ （用於解壓 Xcode 的 ``.xip`` 封裝檔）。"

msgid ""
"For building xar and pbzx, you may want to follow `this guide <https://"
"gist.github.com/phracker/1944ce190e01963c550566b749bd2b54>`__."
msgstr ""
"若需編譯 xar 與 pbzx，可參考 `這份指南 <https://gist.github.com/phracker/"
"1944ce190e01963c550566b749bd2b54>`__。"

msgid ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__ for the "
"needed build tools. The procedure for building is quite peculiar and is "
"described below."
msgstr ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__ （建置所需的"
"工具）。建置流程較特別，說明如下。"

msgid "This also has some extra dependencies: automake, autogen, libtool."
msgstr "此外還需額外安裝：automake、autogen、libtool。"

msgid "Configuring the environment"
msgstr "設定開發環境"

msgid "Preparing the SDK"
msgstr "準備 SDK"

msgid ""
"Extract the Xcode ``.xip`` file you downloaded from Apple's developer "
"website:"
msgstr "請將從 Apple 開發者網站下載的 Xcode ``.xip`` 檔解壓縮："

msgid ""
"Note that for the commands below, you will need to replace the version "
"(``x.x``) with whatever iOS SDK version you're using. If you don't know your "
"iPhone SDK version, you can see the JSON file inside of ``Xcode.app/Contents/"
"Developer/Platforms/iPhoneOS.platform/Developer/SDKs``."
msgstr ""
"請注意，下方指令中的 ``x.x`` 需替換為你所使用的 iOS SDK 版本。如果不確定 SDK "
"版本，可於 ``Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/"
"Developer/SDKs`` 目錄下查看 JSON 檔案以獲得資訊。"

msgid "Extract the iOS SDK:"
msgstr "解壓縮 iOS SDK："

msgid "Pack the SDK so that cctools can use it:"
msgstr "將 SDK 打包，讓 cctools 可以使用："

msgid "Toolchain"
msgstr "工具鏈"

msgid "Build cctools:"
msgstr "建置 cctools："

msgid ""
"Copy the tools to a nicer place. Note that the SCons scripts for building "
"will look under ``usr/bin`` inside the directory you provide for the "
"toolchain binaries, so you must copy to such subdirectory, akin to the "
"following commands:"
msgstr ""
"將工具複製到適當的資料夾。請注意，SCons 建置腳本會在你指定的工具鏈目錄下的 "
"``usr/bin`` 子目錄尋找二進位檔，因此必須照下列指令將檔案複製到對應子目錄："

msgid ""
"Now you should have the iOS toolchain binaries in ``$HOME/iostoolchain/usr/"
"bin``."
msgstr ""
"現在你應該已在 ``$HOME/iostoolchain/usr/bin`` 目錄下取得 iOS 工具鏈的二進位"
"檔。"

msgid "Compiling Godot for iPhone"
msgstr "編譯 Godot 為 iPhone 版本"

msgid ""
"Once you've done the above steps, you should keep two things in your "
"environment: the built toolchain and the iPhoneOS SDK directory. Those can "
"stay anywhere you want since you have to provide their paths to the SCons "
"build command."
msgstr ""
"完成上述步驟後，請將已建置好的工具鏈與 iPhoneOS SDK 資料夾保存在開發環境中。"
"這兩者可任意放置，只要在 SCons 編譯時提供正確路徑即可。"

msgid ""
"For the iPhone platform to be detected, you need the ``OSXCROSS_IOS`` "
"environment variable defined to anything."
msgstr ""
"為讓 SCons 能正確偵測到 iPhone 平台，需設置 ``OSXCROSS_IOS`` 環境變數（內容可"
"任意設）。"

msgid ""
"Now you can compile for iPhone using SCons like the standard Godot way, with "
"some additional arguments to provide the correct paths:"
msgstr ""
"現在你可以使用 SCons 以標準 Godot 方式編譯 iPhone 版本，只需額外傳入正確路徑"
"參數即可："
