#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for macOS"
msgstr "在 macOS 上編譯"

msgid ""
"This page describes how to compile macOS editor and export template binaries "
"from source. If you're looking to export your project to macOS instead, "
"read :ref:`doc_exporting_for_macos`."
msgstr ""
"本頁說明如何從原始碼編譯 macOS 編輯器與匯出樣板二進位檔。如果你想將專案匯出"
"到 macOS，請參閱 :ref:`doc_exporting_for_macos`。"

msgid "Requirements"
msgstr "系統需求"

msgid "For compiling under macOS, the following is required:"
msgstr "在 macOS 下編譯時，需符合以下需求："

msgid "`Python 3.8+ <https://www.python.org/downloads/macos/>`_."
msgstr "`Python 3.8+ <https://www.python.org/downloads/macos/>`_。"

msgid "`SCons 4.0+ <https://scons.org/pages/download.html>`_ build system."
msgstr "`SCons 4.0+ <https://scons.org/pages/download.html>`_ 建置系統。"

msgid ""
"`Xcode <https://apps.apple.com/us/app/xcode/id497799835>`_ (or the more "
"lightweight Command Line Tools for Xcode)."
msgstr ""
"`Xcode <https://apps.apple.com/us/app/xcode/id497799835>`_ （或更輕量的 "
"Xcode 命令列工具）。"

msgid ""
"`Vulkan SDK <https://sdk.lunarg.com/sdk/download/latest/mac/vulkan-"
"sdk.dmg>`_ for MoltenVK (macOS doesn't support Vulkan out of the box). The "
"latest Vulkan SDK version can be installed quickly by running ``misc/scripts/"
"install_vulkan_sdk_macos.sh`` within the Godot source repository."
msgstr ""
"適用於 MoltenVK 的 `Vulkan SDK <https://sdk.lunarg.com/sdk/download/latest/"
"mac/vulkan-sdk.dmg>`_ （macOS 預設不支援 Vulkan）。可在 Godot 原始碼資料夾中"
"執行 ``misc/scripts/install_vulkan_sdk_macos.sh`` 以快速安裝最新版 Vulkan "
"SDK。"

msgid ""
"Installing Homebrew will also fetch the Command Line Tools for Xcode "
"automatically if you don't have them already."
msgstr "安裝 Homebrew 時，若尚未安裝 Xcode 命令列工具，會自動下載安裝。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr "如需取得 Godot 編譯所需的原始碼，請參閱 :ref:`doc_getting_source`。"

msgid ""
"For a general overview of SCons usage for Godot, "
"see :ref:`doc_introduction_to_the_buildsystem`."
msgstr ""
"關於 Godot 使用 SCons 的基本說明，請參"
"閱 :ref:`doc_introduction_to_the_buildsystem`。"

msgid "Compiling"
msgstr "編譯"

msgid "Start a terminal, go to the root directory of the engine source code."
msgstr "開啟終端機，切換至引擎原始碼的根目錄。"

msgid ""
"If you are compiling Godot to make changes or contribute to the engine, you "
"may want to use the SCons options ``dev_build=yes`` or ``dev_mode=yes``. "
"See :ref:`doc_introduction_to_the_buildsystem_development_and_production_aliases` "
"for more info."
msgstr ""
"若你自行編譯 Godot 以進行修改或貢獻開發，建議在 SCons 加上 ``dev_build=yes`` "
"或 ``dev_mode=yes`` 選項。詳情請參"
"閱 :ref:`doc_introduction_to_the_buildsystem_development_and_production_aliases`。"

msgid ""
"If all goes well, the resulting binary executable will be placed in the "
"``bin/`` subdirectory. This executable file contains the whole engine and "
"runs without any dependencies. Executing it will bring up the Project "
"Manager."
msgstr ""
"若一切順利，產生的二進位執行檔會放在 ``bin/`` 子資料夾中。此執行檔包含完整引"
"擎，無須任何相依套件即可執行。啟動後會顯示專案管理員。"

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"若希望自編譯 Godot 和官方版本使用不同編輯器設定，可在 ``bin/`` 資料夾內建立 "
"``._sc_`` 或 ``_sc_`` 檔案，以啟"
"用 :ref:`doc_data_paths_self_contained_mode`。"

msgid "Automatic ``.app`` bundle creation"
msgstr "自動建立 ``.app`` 應用程式包"

msgid "Manual ``.app`` bundle creation"
msgstr "手動建立 ``.app`` 應用程式包"

msgid "Running a headless/server build"
msgstr "執行無介面／伺服器版本"

msgid "Building export templates"
msgstr "建構匯出樣板"

msgid ""
"To build macOS export templates, you have to compile using the targets "
"without the editor: ``target=template_release`` (release template) and "
"``target=template_debug``."
msgstr ""
"要建構 macOS 匯出樣板，需以無編輯器目標進行編譯：``target=template_release``"
"（發行樣板）及 ``target=template_debug``。"

msgid ""
"Official templates are *Universal 2* binaries which support both ARM64 and "
"Intel x86_64 architectures."
msgstr ""
"官方樣板為 *Universal 2* 二進位檔，可同時支援 ARM64 及 Intel x86_64 架構。"

msgid ""
"In most cases, static linking should be preferred as it makes distribution "
"easier. The main upside of dynamic linking is that it allows updating "
"MoltenVK without having to recompile export templates."
msgstr ""
"大多數情況下建議使用靜態連結，方便發佈。動態連結的好處是日後可更新 MoltenVK "
"而無需重新編譯匯出樣板。"

msgid "Cross-compiling for macOS from Linux"
msgstr "於 Linux 上為 macOS 進行交叉編譯"

msgid ""
"It is possible to compile for macOS in a Linux environment (and maybe also "
"in Windows using the Windows Subsystem for Linux). For that, you'll need to "
"install `OSXCross <https://github.com/tpoechtrager/osxcross>`__ to be able "
"to use macOS as a target. First, follow the instructions to install it:"
msgstr ""
"你可以在 Linux 環境下編譯 macOS 執行檔（也可在 Windows 的子系統 Linux 上嘗"
"試）。需安裝 `OSXCross <https://github.com/tpoechtrager/osxcross>`__，以將 "
"macOS 設為目標平台。請先依下列說明安裝："

msgid ""
"Follow the instructions to package the SDK: https://github.com/tpoechtrager/"
"osxcross#packaging-the-sdk"
msgstr ""
"請依官方說明包裝 SDK：https://github.com/tpoechtrager/osxcross#packaging-the-"
"sdk"

msgid ""
"Follow the instructions to install OSXCross: https://github.com/tpoechtrager/"
"osxcross#installation"
msgstr ""
"請依官方說明安裝 OSXCross：https://github.com/tpoechtrager/"
"osxcross#installation"

msgid "Troubleshooting"
msgstr "疑難排解"
