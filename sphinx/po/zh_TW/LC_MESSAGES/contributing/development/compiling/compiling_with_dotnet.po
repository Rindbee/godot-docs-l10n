#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling with .NET"
msgstr "使用 .NET 編譯"

msgid "Requirements"
msgstr "系統需求"

msgid "`.NET SDK 8.0+ <https://dotnet.microsoft.com/download>`_"
msgstr "`.NET SDK 8.0+ <https://dotnet.microsoft.com/download>`_"

msgid ""
"You can use ``dotnet --info`` to check which .NET SDK versions are installed."
msgstr "你可以使用 ``dotnet --info`` 來檢查已安裝的 .NET SDK 版本。"

msgid "Enable the .NET module"
msgstr "啟用 .NET 模組"

msgid ""
"C# support for Godot has historically used the `Mono <https://www.mono-"
"project.com/>`_ runtime instead of the `.NET Runtime <https://github.com/"
"dotnet/runtime>`_ and internally many things are still named ``mono`` "
"instead of ``dotnet`` or otherwise referred to as ``mono``."
msgstr ""
"Godot 的 C# 支援過去一直使用 `Mono <https://www.mono-project.com/>`_ 執行階"
"段，而非 `.NET Runtime <https://github.com/dotnet/runtime>`_，因此在內部許多"
"名稱仍以 ``mono`` 命名，而非 ``dotnet`` 或其他名稱。"

msgid ""
"By default, the .NET module is disabled when building. To enable it, add the "
"option ``module_mono_enabled=yes`` to the SCons command line, while "
"otherwise following the instructions for building the desired Godot binaries."
msgstr ""
"預設情況下，.NET 模組在建置時是關閉的。若要啟用，請在 SCons 命令列加上 "
"``module_mono_enabled=yes`` 選項，其餘步驟請參照一般 Godot 二進位檔的建置說"
"明。"

msgid "Generate the glue"
msgstr "產生 Glue（黏合代碼）"

msgid ""
"Parts of the sources of the managed libraries are generated from the "
"ClassDB. These source files must be generated before building the managed "
"libraries. They can be generated by any .NET-enabled Godot editor binary by "
"running it with the parameters ``--headless --generate-mono-glue`` followed "
"by the path to an output directory. This path must be ``modules/mono/glue`` "
"in the Godot directory::"
msgstr ""
"部分託管函式庫的原始碼是由 ClassDB 自動產生。這些檔案在建置託管函式庫前必須先"
"產生。可以使用任何啟用 .NET 的 Godot 編輯器執行檔，搭配 ``--headless --"
"generate-mono-glue`` 參數與輸出路徑來產生。該路徑需為 Godot 專案目錄下的 "
"``modules/mono/glue``："

msgid ""
"This command will tell Godot to generate the C# bindings for the Godot API "
"at ``modules/mono/glue/GodotSharp/GodotSharp/Generated``, and the C# "
"bindings for the editor tools at ``modules/mono/glue/GodotSharp/"
"GodotSharpEditor/Generated``. Once these files are generated, you can build "
"Godot's managed libraries for all the desired targets without having to "
"repeat this process."
msgstr ""
"這個指令會讓 Godot 產生 Godot API 的 C# 繫結於 ``modules/mono/glue/"
"GodotSharp/GodotSharp/Generated``，以及編輯器工具的繫結於 ``modules/mono/"
"glue/GodotSharp/GodotSharpEditor/Generated``。完成後，你就可以針對所有目標平"
"台建置 Godot 的託管函式庫，無須重複產生這些檔案。"

msgid ""
"``<godot_binary>`` refers to the editor binary you compiled with the .NET "
"module enabled. Its exact name will differ based on your system and "
"configuration, but should be of the form ``bin/godot.<platform>.editor."
"<arch>.mono``, e.g. ``bin/godot.linuxbsd.editor.x86_64.mono`` or ``bin/"
"godot.windows.editor.x86_32.mono.exe``. Be especially aware of the **.mono** "
"suffix! If you've previously compiled Godot without .NET support, you might "
"have similarly named binaries without this suffix. These binaries can't be "
"used to generate the .NET glue."
msgstr ""
"``<godot_binary>`` 指的是你用來啟用 .NET 模組編譯出來的 Godot 編輯器執行檔。"
"檔案名稱會依作業系統與設定而異，但通常格式為 ``bin/godot.<平台>.editor.<架構"
">.mono``，例如 ``bin/godot.linuxbsd.editor.x86_64.mono`` 或 ``bin/"
"godot.windows.editor.x86_32.mono.exe``。請特別注意 **.mono** 字尾！若你先前編"
"譯時未啟用 .NET 支援，也許會有名稱類似但不含 .mono 字尾的執行檔，這些不能用來"
"產生 .NET glue。"

msgid ""
"The glue sources must be regenerated every time the ClassDB-registered API "
"changes. That is, for example, when a new method is registered to the "
"scripting API or one of the parameters of such a method changes. Godot will "
"print an error at startup if there is an API mismatch between ClassDB and "
"the glue sources."
msgstr ""
"每當 ClassDB 註冊的 API 有變動時（例如新增腳本 API 方法或更改參數），都必須重"
"新產生 Glue 原始檔。若 ClassDB 與 Glue 檔案的 API 不一致，Godot 啟動時會出現"
"錯誤訊息。"

msgid "Building the managed libraries"
msgstr "建置託管函式庫"

msgid ""
"Once you have generated the .NET glue, you can build the managed libraries "
"with the ``build_assemblies.py`` script::"
msgstr ""
"產生 .NET glue 後，可以使用 ``build_assemblies.py`` 腳本來建置託管函式庫："

msgid ""
"If everything went well, the ``GodotSharp`` directory, containing the "
"managed libraries, should have been created in the ``bin`` directory."
msgstr ""
"若順利完成，包含託管函式庫的 ``GodotSharp`` 目錄應會在 ``bin`` 目錄下被建立。"

msgid ""
"By default, all development builds share a version number, which can cause "
"some issues with caching of the NuGet packages. To solve this issue either "
"use ``GODOT_VERSION_STATUS`` to give every build a unique version or delete "
"``GodotNuGetFallbackFolder`` after every build to clear the package cache."
msgstr ""
"預設情況下，所有開發版都共用同一個版本號，這可能導致 NuGet 套件快取出現問題。"
"可透過設定 ``GODOT_VERSION_STATUS`` 為每個建置指定唯一版本，或在每次建置後刪"
"除 ``GodotNuGetFallbackFolder`` 以清除套件快取來解決此問題。"

msgid ""
"Unlike \"classical\" Godot builds, when building with the .NET module "
"enabled (and depending on the target platform), a data directory may be "
"created both for the editor and for exported projects. This directory is "
"important for proper functioning and must be distributed together with "
"Godot. More details about this directory in :ref:`Data "
"directory<compiling_with_dotnet_data_directory>`."
msgstr ""
"與「傳統」Godot 建置不同，啟用 .NET 模組（且依目標平台）時，可能會為編輯器與"
"匯出專案產生資料目錄。這個目錄對 Godot 的正常運作非常重要，必須與 Godot 一同"
"發行。更多細節請參見 :ref:`資料目錄 <compiling_with_dotnet_data_directory>`。"

msgid "Build Platform"
msgstr "建置平台"

msgid ""
"Provide the ``--godot-platform=<platform>`` argument to control for which "
"platform specific the libraries are built. Omit this argument to build for "
"the current system."
msgstr ""
"請使用 ``--godot-platform=<platform>`` 參數來指定要建置哪個平台的函式庫。如不"
"指定，則會針對目前系統建置。"

msgid ""
"This currently only controls the inclusion of the support for Visual Studio "
"as an external editor, the libraries are otherwise identical."
msgstr ""
"目前，這僅影響是否包含 Visual Studio 作為外部編輯器的支援，其餘函式庫內容則相"
"同。"

msgid "NuGet packages"
msgstr "NuGet 套件"

msgid ""
"The API assemblies, source generators, and custom MSBuild project SDK are "
"distributed as NuGet packages. This is all transparent to the user, but it "
"can make things complicated during development."
msgstr ""
"API 組件、原始碼產生器與自訂 MSBuild 專案 SDK 會以 NuGet 套件形式發佈。這些對"
"使用者來說是透明的，但在開發過程中可能會帶來複雜度。"

msgid ""
"In order to use Godot with a development version of those packages, a local "
"NuGet source must be created where MSBuild can find them."
msgstr ""
"若要讓 Godot 使用這些套件的開發版本，你必須建立一個本機 NuGet 來源，讓 "
"MSBuild 能找到這些套件。"

msgid ""
"First, pick a location for the local NuGet source. If you don't have a "
"preference, create an empty directory at one of these recommended locations:"
msgstr ""
"首先，選擇一個作為本機 NuGet 來源的位置。如果沒有偏好，建議於下列其中一個位置"
"建立一個空目錄："

msgid "On Windows, ``C:\\Users\\<username>\\MyLocalNugetSource``"
msgstr "在 Windows 上，``C:\\Users\\<username>\\MyLocalNugetSource``"

msgid "On Linux, \\*BSD, etc., ``~/MyLocalNugetSource``"
msgstr "在 Linux、\\*BSD 等系統上，``~/MyLocalNugetSource``"

msgid "This path is referred to later as ``<my_local_source>``."
msgstr "後續會以 ``<my_local_source>`` 代表此路徑。"

msgid ""
"After picking a directory, run this .NET CLI command to configure NuGet to "
"use your local source:"
msgstr "選定資料夾後，請執行以下 .NET CLI 指令以設定 NuGet 使用你的本機來源："

msgid ""
"When you run the ``build_assemblies.py`` script, pass ``<my_local_source>`` "
"to the ``--push-nupkgs-local`` option:"
msgstr ""
"執行 ``build_assemblies.py`` 腳本時，請將 ``<my_local_source>`` 傳給 ``--"
"push-nupkgs-local`` 選項："

msgid ""
"This option ensures the packages will be added to the specified local NuGet "
"source and that conflicting versions of the package are removed from the "
"NuGet cache. It's recommended to always use this option when building the C# "
"solutions during development to avoid mistakes."
msgstr ""
"這個選項會將套件加入指定的本機 NuGet 來源，並移除 NuGet 快取中的衝突版本。建"
"議在開發期間建置 C# 解決方案時一律使用此選項，以避免出錯。"

msgid "Building without depending on deprecated features (NO_DEPRECATED)"
msgstr "不依賴已淘汰功能的建置（NO_DEPRECATED）"

msgid ""
"When building Godot without deprecated classes and functions, i.e. the "
"``deprecated=no`` argument for scons, the managed libraries must also be "
"built without dependencies to deprecated code. This is done by passing the "
"``--no-deprecated`` argument:"
msgstr ""
"當以 ``deprecated=no`` 參數（scons）建置 Godot、排除所有已淘汰的類別與函式"
"時，託管函式庫也需同樣排除這些相依。可於建置時加入 ``--no-deprecated`` 參數："

msgid "::"
msgstr "::"

msgid ""
"./modules/mono/build_scripts/build_assemblies.py --godot-output-dir ./bin --"
"push-nupkgs-local <my_local_source> --no-deprecated"
msgstr ""
"./modules/mono/build_scripts/build_assemblies.py --godot-output-dir ./bin --"
"push-nupkgs-local <my_local_source> --no-deprecated"

msgid "Double Precision Support (REAL_T_IS_DOUBLE)"
msgstr "雙精度支援 (REAL_T_IS_DOUBLE)"

msgid ""
"When building Godot with double precision support, i.e. the "
"``precision=double`` argument for scons, the managed libraries must be "
"adjusted to match by passing the ``--precision=double`` argument:"
msgstr ""
"當以 ``precision=double`` 參數（scons）建置支援雙精度的 Godot 時，託管函式庫"
"也必須加入 ``--precision=double`` 參數以配合："

msgid "Examples"
msgstr "範例"

msgid "Example (Windows)"
msgstr "範例（Windows）"

msgid "Example (Linux, \\*BSD)"
msgstr "範例（Linux、\\*BSD）"

msgid "Data directory"
msgstr "資料目錄"

msgid ""
"The data directory is a dependency for Godot binaries built with the .NET "
"module enabled. It contains important files for the correct functioning of "
"Godot. It must be distributed together with the Godot executable."
msgstr ""
"資料目錄是啟用 .NET 模組編譯的 Godot 二進位檔所需的相依檔案，裡面包含 Godot "
"正常運作所需的重要檔案。發佈 Godot 執行檔時必須一併發佈此目錄。"

msgid "Editor"
msgstr "編輯器"

msgid ""
"The name of the data directory for the Godot editor will always be "
"``GodotSharp``. This directory contains an ``Api`` subdirectory with the "
"Godot API assemblies and a ``Tools`` subdirectory with the tools required by "
"the editor, like the ``GodotTools`` assemblies and its dependencies."
msgstr ""
"Godot 編輯器的資料目錄名稱永遠為 ``GodotSharp``。此目錄下有 ``Api`` 子目錄"
"（包含 Godot API 組件）與 ``Tools`` 子目錄（包含編輯器所需工具，如 "
"``GodotTools`` 組件及其相依檔案）。"

msgid ""
"On macOS, if the Godot editor is distributed as a bundle, the ``GodotSharp`` "
"directory may be placed in the ``<bundle_name>.app/Contents/Resources/`` "
"directory inside the bundle."
msgstr ""
"在 macOS 上，若 Godot 編輯器以 App Bundle 發佈，則 ``GodotSharp`` 目錄會放在 "
"``<bundle_name>.app/Contents/Resources/`` 目錄內。"

msgid "Export templates"
msgstr "匯出樣板"

msgid ""
"The data directory for exported projects is generated by the editor during "
"the export. It is named ``data_<APPNAME>_<ARCH>``, where ``<APPNAME>`` is "
"the application name as specified in the project setting ``application/"
"config/name`` and ``<ARCH>`` is the current architecture of the export."
msgstr ""
"匯出專案時，資料目錄會由編輯器自動產生。其名稱為 ``data_<APPNAME>_<ARCH>``，"
"其中 ``<APPNAME>`` 取自專案設定 ``application/config/name``，``<ARCH>`` 則為"
"當前匯出的架構。"

msgid ""
"In the case of multi-architecture exports multiple such data directories "
"will be generated."
msgstr "若匯出多架構版本，則會產生多個對應的資料目錄。"

msgid "Command-line options"
msgstr "命令列選項"

msgid ""
"The following is the list of command-line options available when building "
"with the .NET module:"
msgstr "以下是使用 .NET 模組建置時可用的命令列選項："

msgid "**module_mono_enabled**\\ =yes | **no**"
msgstr "**module_mono_enabled**\\ =yes | **no**"

msgid "Build Godot with the .NET module enabled."
msgstr "啟用 .NET 模組建置 Godot。"
