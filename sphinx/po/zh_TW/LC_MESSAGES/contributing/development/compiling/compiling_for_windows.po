# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-20 18:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Windows"
msgstr "為 Windows 進行編譯"

msgid ""
"This page describes how to compile Windows editor and export template "
"binaries from source. If you're looking to export your project to Windows "
"instead, read :ref:`doc_exporting_for_windows`."
msgstr ""
"這個頁面描述的是如何從源碼編譯 Windows 編輯器和匯出範本二進位檔案。如果你要找"
"的是匯出專案到 Windows，請閱讀 :ref:`doc_exporting_for_windows`。"

msgid "Requirements"
msgstr "系統需求"

msgid "For compiling under Windows, the following is required:"
msgstr "若要在 Windows 下進行編譯，需要滿足下列條件："

#, fuzzy
msgid ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_, "
"version 2019 or later. Visual Studio 2022 is recommended. **Make sure to "
"enable C++ in the list of workflows to install.** If you've already "
"installed Visual Studio without C++ support, run the installer again; it "
"should present you a **Modify** button."
msgstr ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_ 2017 "
"版或更新版本。建議使用 VS 2019。 **請務必閱讀下方的「Visual Studio 安裝須"
"知」，否則會需要重新執行或下載安裝程式。**"

msgid ""
"`MinGW-w64 <https://mingw-w64.org/>`_ with GCC can be used as an alternative "
"to Visual Studio. Be sure to install/configure it to use the ``posix`` "
"thread model. **Important:** When using MinGW to compile the ``master`` "
"branch, you need GCC 9 or later."
msgstr ""
"配有 GCC 的 `MinGW-w64 <http://mingw-w64.org/>`__ 可用來代替 Visual Studio。"
"請確定有以 ``posix`` 執行緒模型來進行安裝或設定。"

msgid ""
"`Python 3.6+ <https://www.python.org/downloads/windows/>`_. **Make sure to "
"enable the option to add Python to the ``PATH`` in the installer.**"
msgstr ""
"`Python 3.5+ <https://www.python.org/downloads/windows/>`_。**請確保在安裝程"
"式中勾選將 Python 新增到 ``PATH`` 的選項。**"

#, fuzzy
msgid ""
"`SCons 3.1.2+ <https://scons.org/pages/download.html>`_ build system. Using "
"the latest release is recommended, especially for proper support of recent "
"Visual Studio releases."
msgstr ""
"`SCons <https://www.scons.org/>`_ 建構系統。推薦使用最新版本，尤其是為了支援"
"最近的 Visual Studio 版本。"

msgid ""
"If you have `Scoop <https://scoop.sh/>`_ installed, you can easily install "
"MinGW and other dependencies using the following command::"
msgstr ""
"若有安裝 ``Scoop <https://scoop.sh/>`_ ，則可以通過下列指令來輕鬆安裝 MinGW "
"以及其他相依性套件："

msgid ""
"If you have `MSYS2 <https://www.msys2.org/>`_ installed, you can easily "
"install MinGW and other dependencies using the following command::"
msgstr ""
"若有安裝 `MSYS2 <https://www.msys2.org/>`_ ，則可以通過下列指令輕鬆安裝 "
"MinGW 以及其他相依性套件："

msgid ""
"For each MSYS2 MinGW subsystem, you should then run `pip3 install scons` in "
"its shell."
msgstr "必須於各個 MSYS2 MinGW 子系統的 Shell 中執行 `pip install scons` 。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr "要獲取編譯所需的 Godot 源碼，請參閱 :ref:`doc_getting_source`。"

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有關配合 Godot 使用 SCons 的一般說明，請參考 :ref:"
"`doc_introduction_to_the_buildsystem` 。"

msgid "Setting up SCons"
msgstr "設定 SCons"

msgid ""
"To install SCons, open the command prompt and run the following command::"
msgstr "若要安裝 SCons，請開啟命令提示字元並輸入下列指令。"

msgid ""
"If you are prompted with the message ``Defaulting to user installation "
"because normal site-packages is not writeable``, you may have to run that "
"command again using elevated permissions. Open a new command prompt as an "
"Administrator then run the command again to ensure that SCons is available "
"from the ``PATH``."
msgstr ""
"如果你看到提示資訊 ``Defaulting to user installation because normal site-"
"packages is not writeable``，那麼你就需要提升許可權後再重新執行該命令。使用管"
"理員身份打開一個新的命令提示符，然後再執行該命令，確保 SCons 可以通過 "
"``PATH`` 存取。"

msgid ""
"To check whether you have installed Python and SCons correctly, you can type "
"``python --version`` and ``scons --version`` into a command prompt (``cmd."
"exe``)."
msgstr ""
"若要檢查是否有正確安裝 Python 與 SCons，可以在命令提示字元 (``cmd.exe``) 中輸"
"入 ``python --version`` 與 ``scons --version`` 。"

msgid ""
"If the commands above don't work, make sure to add Python to your ``PATH`` "
"environment variable after installing it, then check again. You can do so by "
"running the Python installer again and enabling the option to add Python to "
"the ``PATH``."
msgstr ""
"若上述指令執行失敗，請確定有在安裝 Python 後將 Python 加至 ``PATH`` 環境變數"
"中，然後再試一次。要將 Python 加入 ``PATH`` 環境變數，可以再次執行 Python 安"
"裝程式，並開啟將 Python 加至 ``PATH`` 的選項。"

msgid ""
"If SCons cannot detect your Visual Studio installation, it might be that "
"your SCons version is too old. Update it to the latest version with ``python "
"-m pip install --upgrade scons``."
msgstr ""
"如果 SCons 無法偵測到你的 Visual Studio 安裝，可能是因為你的 SCons 版本太老"
"了。請使用 ``python -m pip install --upgrade scons`` 將其更新為最新版本。"

msgid "Downloading Godot's source"
msgstr "下載 Godot 原始碼"

msgid "Refer to :ref:`doc_getting_source` for detailed instructions."
msgstr "更多資訊請參考 :ref:`doc_exporting_projects` 。"

msgid ""
"The tutorial will assume from now on that you placed the source code in ``C:"
"\\godot``."
msgstr "本教學假設原始碼放置於 ``C:\\godot`` 中。"

msgid ""
"To prevent slowdowns caused by continuous virus scanning during compilation, "
"add the Godot source folder to the list of exceptions in your antivirus "
"software."
msgstr ""
"為了防止編譯過程中由於連續病毒掃描而導致的速度減慢，請將 Godot 原始檔案夾新增"
"到殺毒軟體中的例外列表中。"

#, fuzzy
msgid ""
"For Windows Defender, hit the :kbd:`Windows` key, type \"Windows Security\" "
"then hit :kbd:`Enter`. Click on **Virus & threat protection** on the left "
"panel. Under **Virus & threat protection settings** click on **Manage "
"Settings** and scroll down to **Exclusions**. Click **Add or remove "
"exclusions** then add the Godot source folder."
msgstr ""
"對於 Windows Defender，請按 :kbd:`Windows` 鍵，輸入“Windows Defender "
"Settings”然後按 :kbd:`Enter`。在 **病毒和威脅防護** 下，進入**病毒和威脅防護"
"設定**，並向下滾動至**排除項**。按一下**新增或刪除排除項**，然後新增 Godot 原"
"始檔案夾。"

msgid "Compiling"
msgstr "編譯"

msgid "Selecting a compiler"
msgstr "選擇編譯器"

msgid ""
"SCons will automatically find and use an existing Visual Studio "
"installation. If you do not have Visual Studio installed, it will attempt to "
"use MinGW instead. If you already have Visual Studio installed and want to "
"use MinGW, pass ``use_mingw=yes`` to the SCons command line. Note that MSVC "
"builds cannot be performed from the MSYS2 or MinGW shells. Use either ``cmd."
"exe`` or PowerShell instead."
msgstr ""
"SCons 會自動找到並使用現有的 Visual Studio 安裝。若尚未安裝 Visual Studio，"
"則 SCons 會試著使用 MinGW 來代替。若有安裝 Visual Studio，但想使用 MinGW 的"
"話，可以在命令行中將 ``use_mingw=yes`` 傳給 SCons。"

#, fuzzy
msgid ""
"During development, using the Visual Studio compiler is usually a better "
"idea, as it links the Godot binary much faster than MinGW. However, MinGW "
"can produce more optimized binaries using link-time optimization (see "
"below), making it a better choice for production use. This is particularly "
"the case for the GDScript VM which performs much better with MinGW compared "
"to MSVC. Therefore, it's recommended to use MinGW to produce builds that you "
"distribute to players."
msgstr ""
"在開發時，最好選擇使用 Visual Studio 編譯器，因為 Visual Studio 編譯器連結到 "
"Godot 二進位檔的速度比 MinGW 快多了。但，MinGW 通過使用連結時期最佳化 (詳見下"
"方)，能產生更加最佳化的二進位檔，因此對於正式使用，MinGW 比起 Visual Studio "
"編譯器來得更好。"

msgid ""
"All official Godot binaries are built in `custom containers <https://github."
"com/godotengine/build-containers>`__ using MinGW."
msgstr ""

msgid "Running SCons"
msgstr "執行 SCons"

#, fuzzy
msgid ""
"After opening a command prompt, change to the root directory of the engine "
"source code (using ``cd``) and type:"
msgstr ""
"開啟命令提示字元後，請 (使用 ``cd``) 將目錄更改至 Godot 原始碼的根目錄，然後"
"輸入："

msgid ""
"When compiling with multiple CPU threads, SCons may warn about pywin32 being "
"missing. You can safely ignore this warning."
msgstr ""
"當使用多個 CPU 執行緒進行編譯，SCons 可能會提示缺少 pywin32。可以安心地忽略這"
"個警告。"

#, fuzzy
msgid ""
"If all goes well, the resulting binary executable will be placed in ``C:"
"\\godot\\bin\\`` with the name ``godot.windows.editor.x86_32.exe`` or "
"``godot.windows.editor.x86_64.exe``. By default, SCons will build a binary "
"matching your CPU architecture, but this can be overridden using "
"``arch=x86_64`` or ``arch=x86_32``."
msgstr ""
"若沒出現什麼問題的話，最後產生的二進位可執行檔會放置於 ``C:\\godot\\bin\\`` "
"中，檔名為 ``godot.windows.tools.32.exe`` 或 ``godot.windows.tools.64."
"exe`` 。預設情況下，SCons 會使用與你的 CPU 相同的架構來建置二進位檔，但可以通"
"過 ``bits=64`` 或 ``bits=32`` 選項來複寫此一自動偵測。"

msgid ""
"This executable file contains the whole engine and runs without any "
"dependencies. Running it will bring up the Project Manager."
msgstr ""
"該執行檔包含了完整的 Godot 遊戲引擎，並且不需任何相依性套件即可執行。執行這個"
"檔案會開啟專案管理員。"

#, fuzzy
msgid ""
"If you are compiling Godot for production use, you can make the final "
"executable smaller and faster by adding the SCons option ``production=yes``. "
"This enables additional compiler optimizations and link-time optimization."
msgstr ""
"若是要為正式環境編譯 Godot，則可以通過加上 ``target=release_debug`` SCons 選"
"項來讓最終產生的可執行檔更小且更快速。"

msgid ""
"LTO takes some time to run and requires about 7 GB of available RAM while "
"compiling. If you're running out of memory with the above option, use "
"``production=yes lto=none`` or ``production=yes lto=thin`` for a lightweight "
"but less effective form of LTO."
msgstr ""

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"若想在客製化建置上使用與 Godot 官方釋出版本不同的編輯器設定，可以通過在 "
"``bin/`` 資料夾中建立檔名為 ``._sc_`` 或 ``_sc_`` 的檔案來開啟 :ref:"
"`doc_data_paths_self_contained_mode` 。"

msgid "Compiling with support for Direct3D 12"
msgstr ""

msgid ""
"By default, builds of Godot do not contain support for the Direct3D 12 "
"graphics API."
msgstr ""

msgid ""
"To compile Godot with Direct3D 12 support you need at least the following:"
msgstr ""

msgid ""
"`The DirectX Shader Compiler <https://github.com/Microsoft/"
"DirectXShaderCompiler/releases>`_. The zip folder will be named \"dxc\\_\" "
"followed by the date of release. Download it anywhere, unzip it and remember "
"the path to the unzipped folder, you will need it below."
msgstr ""

msgid ""
"`godot-nir-static library <https://github.com/godotengine/godot-nir-static/"
"releases/>`_. We compile the Mesa libraries you will need into a static "
"library. Download it anywhere, unzip it and remember the path to the "
"unzipped folder, you will need it below."
msgstr ""

msgid ""
"You can optionally build the godot-nir-static libraries yourself with the "
"following steps:"
msgstr ""

msgid ""
"Install the Python package `mako <https://www.makotemplates.org>`_ which is "
"needed to generate some files."
msgstr ""

#, fuzzy
msgid ""
"Clone the `godot-nir-static <https://github.com/godotengine/godot-nir-"
"static>`_ directory and navigate to it."
msgstr ""
"在這份文件之外，你可能也會想看看 `Godot 的 demo 專案 <https://github.com/"
"godotengine/godot-demo-projects>`_。"

#, fuzzy
msgid "Run the following::"
msgstr "請注意下列事項："

msgid ""
"If you are building with MinGW, add ``use_mingw=yes`` to the ``scons`` "
"command, you can also specify build architecture using ``arch={architecture}"
"``."
msgstr ""

msgid ""
"Mesa static library should be built using the same compiler you are using "
"for building Godot."
msgstr ""

msgid "Optionally, you can compile with the following for additional features:"
msgstr ""

msgid ""
"`PIX <https://devblogs.microsoft.com/pix/download>`_ is a performance tuning "
"and debugging application for Direct3D12 applications. If you compile-in "
"support for it, you can get much more detailed information through PIX that "
"will help you optimize your game and troubleshoot graphics bugs. To use it, "
"download the WinPixEventRuntime package. You will be taken to a NuGet "
"package page where you can click \"Download package\" to get it. Once "
"downloaded, change the file extension to .zip and unzip the file to some "
"path."
msgstr ""

msgid ""
"`Agility SDK <https://devblogs.microsoft.com/directx/directx12agility>`_ can "
"be used to provide access to the latest Direct3D 12 features without relying "
"on driver updates. To use it, download the latest Agility SDK package. You "
"will be taken to a NuGet package page where you can click \"Download "
"package\" to get it. Once downloaded, change the file extension to .zip and "
"unzip the file to some path."
msgstr ""

msgid ""
"If you use a preview version of the Agility SDK, remember to enable "
"developer mode in Windows; otherwise it won't be used."
msgstr ""

msgid ""
"If you want to use a PIX with MinGW build, navigate to PIX runtime directory "
"and use the following commands to generate import library::"
msgstr ""

msgid ""
"When building Godot, you will need to tell SCons to use Direct3D 12 and "
"where to look for the additional libraries:"
msgstr ""

msgid "Or, with all options enabled:"
msgstr ""

msgid ""
"The build process will copy ``dxil.dll`` from the ``bin/<arch>/`` directory "
"in the DXC folder to the Godot binary directory and the appropriate ``bin/"
"<arch>`` file in the Godot binary directory. Direct3D 12-enabled Godot "
"packages for distribution to end users must include the ``dxil.dll`` (and "
"relevant folders if using multi-arch), both for the editor and games. At "
"runtime, the renderer will try to load the DLL from the arch-specific "
"folders, and will fall back to the same directory as the Godot executable if "
"the appropriate arch isn't found."
msgstr ""

msgid ""
"For the Agility SDK's DLLs you have to explicitly choose the kind of "
"workflow. Single-arch is the default (DLLs copied to ``bin/``). If you pass "
"``agility_sdk_multi_arch=yes`` to SCons, you'll opt-in for multi-arch. DLLs "
"will be copied to the appropriate ``bin/<arch>/`` subdirectories and at "
"runtime the right one will be loaded."
msgstr ""

#, fuzzy
msgid "Compiling with ANGLE support"
msgstr "通過 Mono 進行編譯"

msgid ""
"ANGLE provides a translation layer from OpenGL ES 3.x to Direct3D 11 and can "
"be used to improve support for the Compatibility renderer on some older GPUs "
"with outdated OpenGL drivers and on Windows for ARM."
msgstr ""

msgid ""
"By default, Godot is built with dynamically linked ANGLE, you can use it by "
"placing ``libEGL.dll`` and ``libGLESv2.dll`` alongside the executable."
msgstr ""

msgid ""
"You can use dynamically linked ANGLE with export templates as well, rename "
"aforementioned DLLs to ``libEGL.{architecture}.dll`` and ``libGLESv2."
"{architecture}.dll`` and place them alongside export template executables, "
"and libraries will be automatically copied during the export process."
msgstr ""

msgid "To compile Godot with statically linked ANGLE:"
msgstr ""

msgid ""
"Download pre-built static libraries from `godot-angle-static library "
"<https://github.com/godotengine/godot-angle-static/releases>`_, and unzip "
"them."
msgstr ""

msgid ""
"When building Godot, add ``angle_libs={path}`` to tell SCons where to look "
"for the ANGLE libraries::"
msgstr ""

msgid ""
"You can optionally build the godot-angle-static libraries yourself with the "
"following steps:"
msgstr ""

#, fuzzy
msgid ""
"Clone the `godot-angle-static <https://github.com/godotengine/godot-angle-"
"static>`_ directory and navigate to it."
msgstr ""
"在這份文件之外，你可能也會想看看 `Godot 的 demo 專案 <https://github.com/"
"godotengine/godot-demo-projects>`_。"

#, fuzzy
msgid "Run the following command::"
msgstr "在下方範例中："

msgid ""
"If you are buildng with MinGW, add ``use_mingw=yes`` to the command, you can "
"also specify build architecture using ``arch={architecture}``."
msgstr ""

msgid ""
"ANGLE static library should be built using the same compiler you are using "
"for building Godot."
msgstr ""

msgid "Development in Visual Studio"
msgstr "使用 Visual Studio 或其他 IDE 來進行開發"

msgid ""
"Using an IDE is not required to compile Godot, as SCons takes care of "
"everything. But if you intend to do engine development or debugging of the "
"engine's C++ code, you may be interested in configuring a code editor or an "
"IDE."
msgstr ""
"編譯 Godot 不需要使用 IDE，SCons 會處理所有事情。但是如果你想要做引擎開發，或"
"者除錯引擎的 C++ 程式碼，你可能會對配置程式碼編輯器或者 IDE 感興趣。"

msgid ""
"Folder-based editors don't require any particular setup to start working "
"with Godot's codebase. To edit projects with Visual Studio they need to be "
"set up as a solution."
msgstr ""
"基於資料夾的編輯器不需要任何特殊的設定就可以開始使用 Godot 的程式碼庫。要使"
"用 Visual Studio 來編輯專案，需要先設定解決方案。"

msgid ""
"You can create a Visual Studio solution via SCons by running SCons with the "
"``vsproj=yes`` parameter, like this::"
msgstr ""
"可以通過 SCons 來建立 Visual Studio 解決方案。要建立解決方案，請使用 "
"``vsproj=yes`` 參數來執行 SCons，如："

msgid ""
"You will be able to open Godot's source in a Visual Studio solution now, and "
"able to build Godot using Visual Studio's **Build** button."
msgstr ""
"現在可以在 Visual Studio 解決方案中開啟 Godot 原始碼了，然後可以通過 Visual "
"Studio 的 **建置** 按鈕來建置 Godot。"

msgid "See :ref:`doc_configuring_an_ide_vs` for further details."
msgstr "SCons 3.0+ (詳情請參考 :ref:`doc_compiling_for_windows`)。"

msgid "Cross-compiling for Windows from other operating systems"
msgstr "從其他作業系統上為 Windows 進行交叉編譯"

msgid ""
"If you are a Linux or macOS user, you need to install `MinGW-w64 <https://"
"mingw-w64.org/doku.php>`__, which typically comes in 32-bit and 64-bit "
"variants. The package names may differ based on your distribution, here are "
"some known ones:"
msgstr ""
"若你使用 Linux 或 macOS，則需要安裝 `MinGW-w64 <https://mingw-w64.org/doku."
"php>`__ 。MinGW-w64 通常會有 32 位元與 64 位元的版本。依據發行版不同，可能會"
"有不同的套件名稱。下列為一些已知的套件名稱："

msgid "**Arch Linux**"
msgstr "**Arch Linux**"

msgid "**Debian** / **Ubuntu**"
msgstr "**Debian** / **Ubuntu**"

msgid "**Fedora**"
msgstr "**Fedora**"

msgid "**macOS**"
msgstr "**macOS**"

msgid "**Mageia**"
msgstr "**Mageia**"

msgid ""
"Before attempting the compilation, SCons will check for the following "
"binaries in your ``PATH`` environment variable::"
msgstr "在嘗試編譯前，SCons 會在 ``PATH`` 環境變數中檢查下列二進位檔："

#, fuzzy
msgid ""
"If the binaries are not located in the ``PATH`` (e.g. ``/usr/bin``), you can "
"define the following environment variable to give a hint to the build "
"system::"
msgstr ""
"若這些二進位檔沒有放在 ``PATH`` 中 (如 ``/usr/bin``) ，則必須定義下列變數來讓"
"建置系統找到："

msgid ""
"Where ``/path/to/mingw`` is the path containing the ``bin`` directory where "
"``i686-w64-mingw32-gcc`` and ``x86_64-w64-mingw32-gcc`` are located (e.g. ``/"
"opt/mingw-w64`` if the binaries are located in ``/opt/mingw-w64/bin``)."
msgstr ""

msgid ""
"To make sure you are doing things correctly, executing the following in the "
"shell should result in a working compiler (the version output may differ "
"based on your system)::"
msgstr ""
"若要確定是否有正確設定，可以通過在 Shell 中執行下列指令來確認是否有可使用的編"
"譯器 (輸出的版本可能會依據不同系統而有所不同)："

msgid ""
"When cross-compiling for Windows using MinGW-w64, keep in mind only "
"``x86_64`` and ``x86_32`` architectures are supported. Be sure to specify "
"the right ``arch=`` option when invoking SCons if building from a different "
"architecture."
msgstr ""

msgid "Troubleshooting"
msgstr "疑難排解"

msgid ""
"Cross-compiling from some Ubuntu versions may lead to `this bug <https://"
"github.com/godotengine/godot/issues/9258>`_, due to a default configuration "
"lacking support for POSIX threading."
msgstr ""
"在某些 Ubuntu 版本中進行交叉編譯可能會出現 `這個 Bug <https://github.com/"
"godotengine/godot/issues/9258>`_ ，這是因為預設的設定未包含 POSIX 執行緒支"
"援。"

msgid ""
"You can change that configuration following those instructions, for 64-bit::"
msgstr "可以通過如下說明來更改此一設定。64 位元："

msgid "And for 32-bit::"
msgstr "32 位元："

msgid "Creating Windows export templates"
msgstr "建立 Windows 匯出樣板"

#, fuzzy
msgid ""
"Windows export templates are created by compiling Godot without the editor, "
"with the following flags:"
msgstr ""
"可以通過編譯不含編輯器的 Godot 來建立 Windows 匯出樣板。請使用下列旗標："

#, fuzzy
msgid ""
"If you plan on replacing the standard export templates, copy these to the "
"following location, replacing ``<version>`` with the version identifier "
"(such as ``4.2.1.stable`` or ``4.3.dev``):"
msgstr ""
"若之後有準備要取代標準匯出樣板，請將這些檔案複製到下列位置。請將其中的 "
"``<version>`` 改為版本識別項 (如 ``3.1.1.stable`` 或 ``3.2.dev``)："

msgid "With the following names::"
msgstr "並改為下列名稱："

msgid ""
"However, if you are using custom modules or custom engine code, you may "
"instead want to configure your binaries as custom export templates here:"
msgstr ""
"但是，如果使用自定模組或自定引擎原始碼，則可能會需要在此將自定二進位檔設為自"
"定匯出樣板："

msgid ""
"You don't need to copy them in this case, just reference the resulting files "
"in the ``bin\\`` directory of your Godot source folder, so the next time you "
"build, you will automatically have the custom templates referenced."
msgstr ""
"這種情況下則不需要複製檔案，只需要將產生的檔案參照進 Godot 原始碼資料夾的 "
"``bin\\`` 目錄中即可。這樣一來，下次進行建置時，便會自動參照自定樣板。"

msgid "Translation status"
msgstr "翻譯狀態"
