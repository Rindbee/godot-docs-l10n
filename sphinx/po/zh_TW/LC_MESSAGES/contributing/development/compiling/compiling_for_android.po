#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Android"
msgstr "編譯 Android 版本"

msgid ""
"This page describes how to compile Android export template binaries from "
"source. If you're looking to export your project to Android instead, "
"read :ref:`doc_exporting_for_android`."
msgstr ""
"本頁說明如何從原始碼編譯 Android 匯出範本二進位檔。如果你的需求是將專案匯出"
"到 Android，請參閱 :ref:`doc_exporting_for_android`。"

msgid "Note"
msgstr "注意"

msgid ""
"In most cases, using the built-in deployer and export templates is good "
"enough. Compiling the Android APK manually is mostly useful for custom "
"builds or custom packages for the deployer."
msgstr ""
"在大多數情況下，使用內建的部署工具與匯出範本即可滿足需求。手動編譯 Android "
"APK 通常僅用於自訂建置或為部署工具製作自訂套件。"

msgid ""
"Also, you still need to follow the steps mentioned in "
"the :ref:`doc_exporting_for_android` tutorial before attempting to build a "
"custom export template."
msgstr ""
"此外，在建置自訂匯出範本之前，仍需遵循 :ref:`doc_exporting_for_android` 教學"
"中提到的步驟。"

msgid "Requirements"
msgstr "系統需求"

msgid "For compiling under Windows, Linux or macOS, the following is required:"
msgstr "欲於 Windows、Linux 或 macOS 進行編譯，需具備以下條件："

msgid "`Python 3.8+ <https://www.python.org/downloads/>`_."
msgstr "`Python 3.8+ <https://www.python.org/downloads/>`_。"

msgid "`SCons 4.0+ <https://scons.org/pages/download.html>`_ build system."
msgstr "`SCons 4.0+ <https://scons.org/pages/download.html>`_ 建置系統。"

msgid ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ "
"(command-line tools are sufficient)."
msgstr ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ （命令列"
"工具即可）。"

msgid "Required SDK components will be automatically installed."
msgstr "必要的 SDK 元件會自動安裝（NDK 除外）。"

msgid ""
"On Linux, **do not use an Android SDK provided by your distribution's "
"repositories** as it will often be outdated."
msgstr ""
"在 Linux 上，**請勿使用由發行版套件庫提供的 Android SDK，因為這些版本通常過舊"
"**。"

msgid ""
"On macOS, **do not use an Android SDK provided by Homebrew** as it will not "
"be installed in a unified location."
msgstr ""
"在 macOS 上，**請勿使用 Homebrew 安裝的 Android SDK**，因其安裝路徑不統一。"

msgid "Gradle (will be downloaded and installed automatically if missing)."
msgstr "Gradle（若尚未安裝，將自動下載並安裝）。"

msgid "JDK 17 (either OpenJDK or Oracle JDK)."
msgstr "JDK 17（可用 OpenJDK 或 Oracle JDK）。"

msgid ""
"You can download a build from `Adoptium <https://adoptium.net/temurin/"
"releases/?variant=openjdk17>`_."
msgstr ""
"你可以從 `Adoptium <https://adoptium.net/temurin/releases/?"
"variant=openjdk17>`_ 下載。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr "如需取得 Godot 編譯所需的原始碼，請參閱 :ref:`doc_getting_source`。"

msgid ""
"For a general overview of SCons usage for Godot, "
"see :ref:`doc_introduction_to_the_buildsystem`."
msgstr ""
"關於 Godot 使用 SCons 的基本說明，請參"
"閱 :ref:`doc_introduction_to_the_buildsystem`。"

msgid "Setting up the buildsystem"
msgstr "建置系統設定"

msgid ""
"Set the environment variable ``ANDROID_HOME`` to point to the Android SDK. "
"If you downloaded the Android command-line tools, this would be the folder "
"where you extracted the contents of the ZIP archive."
msgstr ""
"請將環境變數 ``ANDROID_HOME`` 指向 Android SDK 的路徑。若你下載的是 Android "
"命令列工具，請設為你解壓縮 ZIP 檔案後的目錄。"

msgid ""
"Windows: Press :kbd:`Windows + R`, type \"control system\", then click on "
"**Advanced system settings** in the left pane, then click on **Environment "
"variables** on the window that appears."
msgstr ""
"Windows：按下 :kbd:`Windows + R`，輸入「control system」，在左側點擊 **進階系"
"統設定**，接著於出現的視窗中點擊 **環境變數**。"

msgid ""
"Linux or macOS: Add the text ``export ANDROID_HOME=\"/path/to/android-"
"sdk\"`` to your ``.bashrc`` or ``.zshrc`` where ``/path/to/android-sdk`` "
"points to the root of the SDK directories."
msgstr ""
"Linux 或 macOS：請將 ``export ANDROID_HOME=\"/path/to/android-sdk\"`` 加入至"
"你的 ``.bashrc`` 或 ``.zshrc``，其中 ``/path/to/android-sdk`` 請換成 SDK 的根"
"目錄路徑。"

msgid "Install the necessary SDK components in this folder:"
msgstr "請在該資料夾內安裝必要的 SDK 元件："

msgid ""
"Accept the SDK component licenses by running the following command where "
"``android_sdk_path`` is the path to the Android SDK, then answering all the "
"prompts with ``y``:"
msgstr ""
"請在 ``android_sdk_path``（Android SDK 路徑）下執行以下指令以接受 SDK 元件的"
"授權，並在所有提示輸入 ``y``："

msgid ""
"Complete setup by running the following command where ``android_sdk_path`` "
"is the path to the Android SDK."
msgstr "在 ``android_sdk_path`` （Android SDK 路徑）下執行以下指令以完成安裝。"

msgid ""
"After setting up the SDK and environment variables, be sure to **restart "
"your terminal** to apply the changes. If you are using an IDE with an "
"integrated terminal, you need to restart the IDE."
msgstr ""
"設定好 SDK 與環境變數後，請**重新啟動終端機**以套用變更。若你使用的是有整合終"
"端機的 IDE，也請一併重啟該 IDE。"

msgid ""
"Run ``scons platform=android``. If this fails, go back and check the steps. "
"If you completed the setup correctly, the NDK will begin downloading. If you "
"are trying to compile GDExtension, you need to first compile the engine to "
"download the NDK, then you can compile GDExtension."
msgstr ""
"執行 ``scons platform=android``。若失敗，請回頭檢查各步驟。若設定正確，NDK 會"
"開始下載。若你要編譯 GDExtension，必須先編譯引擎以下載 NDK，之後才能編譯 "
"GDExtension。"

msgid "Building the export templates"
msgstr "建置匯出範本"

msgid ""
"Godot needs three export templates for Android: the optimized \"release\" "
"template (``android_release.apk``), the debug template "
"(``android_debug.apk``), and the Gradle build template "
"(``android_source.zip``). As Google requires all APKs to include ARMv8 (64-"
"bit) libraries since August 2019, the commands below build templates "
"containing both ARMv7 and ARMv8 libraries."
msgstr ""
"Godot 需要三個 Android 匯出範本：最佳化的「release」範本"
"（``android_release.apk``）、除錯範本（``android_debug.apk``）、以及 Gradle "
"建置用範本（``android_source.zip``）。自 2019 年 8 月起 Google 規定所有 APK "
"必須包含 ARMv8（64 位元）函式庫，因此下方指令會同時產生包含 ARMv7 與 ARMv8 函"
"式庫的範本。"

msgid ""
"Compiling the standard export templates is done by calling SCons from the "
"Godot root directory with the following arguments:"
msgstr ""
"透過在 Godot 原始碼根目錄下，使用以下參數呼叫 SCons，即可編譯標準匯出範本："

msgid ""
"Release template (used when exporting with **Debugging Enabled** unchecked)"
msgstr "釋出範本（於匯出時未勾選 **Debugging Enabled** 時使用）"

msgid "Debug template (used when exporting with **Debugging Enabled** checked)"
msgstr "除錯範本（於匯出時有勾選 **Debugging Enabled** 時使用）"

msgid "(**Optional**) Dev template (used when troubleshooting)"
msgstr "（**選用**）開發範本（用於疑難排解時）"

msgid "The resulting templates will be located under the ``bin`` directory:"
msgstr "產生的範本將會位於 ``bin`` 目錄下："

msgid "``bin/android_release.apk`` for the release template"
msgstr "``bin/android_release.apk`` 對應釋出範本"

msgid "``bin/android_debug.apk`` for the debug template"
msgstr "``bin/android_debug.apk`` 對應除錯範本"

msgid "``bin/android_dev.apk`` for the dev template"
msgstr "``bin/android_dev.apk`` 對應開發範本"

msgid "``bin/android_source.zip`` for the Gradle build template"
msgstr "``bin/android_source.zip`` 對應 Gradle 建置範本"

msgid ""
"If you are changing the list of architectures you're building, remember to "
"add ``generate_apk=yes`` to the *last* architecture you're building, so that "
"the template files are generated after the build."
msgstr ""
"若你更動了建置的架構清單，請記得在**最後一個**建置的架構加上 "
"``generate_apk=yes``，這樣範本檔案才能在建置結束後正確產生。"

msgid ""
"To include debug symbols in the generated templates, add the "
"``debug_symbols=yes`` parameter to the SCons command."
msgstr ""
"若需於產生的範本中包含除錯符號，請於 SCons 指令加上 ``debug_symbols=yes`` 參"
"數。"

msgid ""
"If you want to enable Vulkan validation layers, see :ref:`Vulkan validation "
"layers on Android <doc_vulkan_validation_layers_android>`."
msgstr ""
"若要啟用 Vulkan 驗證層，請參閱 :ref:`Android 上的 Vulkan 驗證層 "
"<doc_vulkan_validation_layers_android>`。"

msgid "Adding support for x86 devices"
msgstr "支援 x86 裝置"

msgid ""
"If you also want to include support for x86 and x86_64 devices, run the "
"SCons command a third and fourth time with the ``arch=x86_32``, and "
"``arch=x86_64`` arguments before building the APK with Gradle. For example, "
"for the release template:"
msgstr ""
"若想同時支援 x86 與 x86_64 裝置，請於以 Gradle 建置 APK 前，分別以 "
"``arch=x86_32`` 與 ``arch=x86_64`` 參數再次執行 SCons 指令。以釋出範本為例："

msgid ""
"This will create template binaries that works on all platforms. The final "
"binary size of exported projects will depend on the platforms you choose to "
"support when exporting; in other words, unused platforms will be removed "
"from the binary."
msgstr ""
"這樣會建立能在所有平台運作的範本二進位檔。專案最終匯出的檔案大小會根據你選擇"
"支援的平台而定，也就是未啟用的平台將自動被移除。"

msgid "Cleaning the generated export templates"
msgstr "清除產生的匯出範本"

msgid ""
"You can use the following commands to remove the generated export templates:"
msgstr "你可以用以下指令移除產生的匯出範本："

msgid "Using the export templates"
msgstr "使用匯出範本"

msgid ""
"Godot needs release and debug binaries that were compiled against the same "
"version/commit as the editor. If you are using official binaries for the "
"editor, make sure to install the matching export templates, or build your "
"own from the same version."
msgstr ""
"Godot 需要使用與編輯器相同版本（或 Commit）編譯的釋出與除錯二進位檔。若使用官"
"方編輯器執行檔，請確保安裝的匯出範本版本相符，或自行以相同版本建置。"

msgid ""
"When exporting your game, Godot uses the templates as a base, and updates "
"their content as needed."
msgstr "匯出遊戲時，Godot 會以範本為基底，並依需求更新其內容。"

msgid "Installing the templates"
msgstr "安裝範本"

msgid ""
"The newly-compiled templates (``android_debug.apk`` , "
"``android_release.apk``, and ``android_source.zip``) must be copied to "
"Godot's templates folder with their respective names. The templates folder "
"can be located in:"
msgstr ""
"新編譯的範本（``android_debug.apk``、``android_release.apk``、"
"``android_source.zip``）必須以正確名稱複製到 Godot 的範本資料夾。範本資料夾位"
"置如下："

msgid "Windows: ``%APPDATA%\\Godot\\export_templates\\<version>\\``"
msgstr "Windows：``%APPDATA%\\Godot\\export_templates\\<版本>\\``"

msgid "Linux: ``$HOME/.local/share/godot/export_templates/<version>/``"
msgstr "Linux：``$HOME/.local/share/godot/export_templates/<版本>/``"

msgid ""
"macOS: ``$HOME/Library/Application Support/Godot/export_templates/<version>/"
"``"
msgstr ""
"macOS：``$HOME/Library/Application Support/Godot/export_templates/<版本>/``"

msgid ""
"``<version>`` is of the form ``major.minor[.patch].status`` using values "
"from ``version.py`` in your Godot source repository (e.g. ``4.1.3.stable`` "
"or ``4.2.dev``). You also need to write this same version string to a "
"``version.txt`` file located next to your export templates."
msgstr ""
"``<版本>`` 格式為 ``major.minor[.patch].status``，數值取自 Godot 原始碼中的 "
"``version.py``（例如 ``4.1.3.stable`` 或 ``4.2.dev``）。你也需要將相同的版本"
"字串寫入匯出範本同層的 ``version.txt`` 檔案。"

msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your template binaries as custom export "
"templates here:"
msgstr ""
"但如果你正在撰寫自訂模組或 C++ 程式碼，建議將你產生的範本二進位設定為自訂匯出"
"範本："

msgid ""
"You don't even need to copy them, you can just reference the resulting file "
"in the ``bin\\`` directory of your Godot source folder, so that the next "
"time you build you will automatically have the custom templates referenced."
msgstr ""
"此時甚至不必複製檔案，只需直接參照 Godot 原始碼資料夾下的 ``bin\\`` 內結果檔"
"案，下次建置時就會自動使用該自訂範本。"

msgid "Building the Godot editor"
msgstr "編譯 Godot 編輯器"

msgid ""
"Compiling the editor is done by calling SCons from the Godot root directory "
"with the following arguments:"
msgstr "於 Godot 原始碼根目錄執行 SCons 並帶入下列參數，即可編譯編輯器："

msgid ""
"You can add the ``dev_build=yes`` parameter to generate a dev build of the "
"Godot editor."
msgstr "你可以加上 ``dev_build=yes`` 參數，產生 Godot 編輯器的開發版本。"

msgid ""
"You can add the ``debug_symbols=yes`` parameter to include the debug symbols "
"in the generated build."
msgstr "你可以加上 ``debug_symbols=yes`` 參數，於產生的建置中包含除錯符號。"

msgid ""
"You can skip certain architectures depending on your target device to speed "
"up compilation."
msgstr "你可以根據目標裝置略過某些架構，以加快編譯速度。"

msgid ""
"Remember to add ``generate_apk=yes`` to the *last* architecture you're "
"building, so that binaries are generated after the build."
msgstr ""
"請記得在**最後一個**建置的架構加上 ``generate_apk=yes``，這樣二進位檔才能在建"
"置完成後正確產生。"

msgid ""
"The resulting binaries will be located under ``bin/android_editor_builds/``."
msgstr "產生的編輯器二進位檔會位於 ``bin/android_editor_builds/``。"

msgid "Removing the Editor binaries"
msgstr "移除編輯器二進位檔"

msgid ""
"You can use the following commands to remove the generated editor binaries:"
msgstr "你可以用以下指令移除產生的編輯器二進位檔："

msgid "Installing the Godot editor APK"
msgstr "安裝 Godot 編輯器 APK"

msgid ""
"With an Android device with Developer Options enabled, connect the Android "
"device to your computer via its charging cable to a USB/USB-C port. Open up "
"a Terminal/Command Prompt and run the following commands from the root "
"directory with the following arguments:"
msgstr ""
"於已啟用開發者選項的 Android 裝置上，以充電線連接至電腦的 USB/USB-C 連接埠。"
"開啟終端機／命令提示字元，並於根目錄下執行以下指令："

msgid "Troubleshooting"
msgstr "疑難排解"

msgid "Platform doesn't appear in SCons"
msgstr "SCons 未顯示平台"

msgid ""
"Double-check that you've set the ``ANDROID_HOME`` environment variable. This "
"is required for the platform to appear in SCons' list of detected platforms. "
"See :ref:`Setting up the buildsystem "
"<doc_android_setting_up_the_buildsystem>` for more information."
msgstr ""
"請再次確認你有設定 ``ANDROID_HOME`` 環境變數。必須設定這個環境變數，平台才會"
"出現在 SCons 偵測列表中。詳情請參閱 :ref:`建置系統設定 "
"<doc_android_setting_up_the_buildsystem>`。"

msgid "Application not installed"
msgstr "應用程式無法安裝"

msgid ""
"Android might complain the application is not correctly installed. If so:"
msgstr "Android 可能會提示應用程式未正確安裝，請依下列步驟檢查："

msgid "Check that the debug keystore is properly generated."
msgstr "檢查除錯金鑰儲存區是否有正確產生。"

msgid "Check that the jarsigner executable is from JDK 8."
msgstr "檢查 jarsigner 執行檔是否為 JDK 8 的版本。"

msgid ""
"If it still fails, open a command line and run `logcat <https://"
"developer.android.com/studio/command-line/logcat>`_:"
msgstr ""
"若仍然失敗，請開啟命令列並執行 `logcat <https://developer.android.com/studio/"
"command-line/logcat>`_："

msgid ""
"Then check the output while the application is installed; the error message "
"should be presented there. Seek assistance if you can't figure it out."
msgstr ""
"安裝應用程式時檢查 logcat 輸出，錯誤訊息應會顯示於其中。若無法自行解決，請尋"
"求協助。"

msgid "Application exits immediately"
msgstr "應用程式立即退出"

msgid ""
"If the application runs but exits immediately, this might be due to one of "
"the following reasons:"
msgstr "若應用程式可啟動但立即退出，可能原因如下："

msgid ""
"Make sure to use export templates that match your editor version; if you use "
"a new Godot version, you *have* to update the templates too."
msgstr ""
"請務必使用與編輯器相同版本的匯出範本；若有更新 Godot 版本， **也必須** 一併更"
"新範本。"

msgid ""
"``libgodot_android.so`` is not in ``libs/<arch>/`` where ``<arch>`` is the "
"device's architecture."
msgstr ""
"``libs/<arch>/`` 資料夾內缺少 ``libgodot_android.so``，其中 ``<arch>`` 為裝置"
"架構。"

msgid ""
"The device's architecture does not match the exported one(s). Make sure your "
"templates were built for that device's architecture, and that the export "
"settings included support for that architecture."
msgstr ""
"裝置架構與匯出範本不符。請確認範本有針對該裝置架構建置，且匯出設定有包含對此"
"架構的支援。"

msgid "In any case, ``adb logcat`` should also show the cause of the error."
msgstr "不論何種狀況，``adb logcat`` 應也會顯示錯誤原因。"
