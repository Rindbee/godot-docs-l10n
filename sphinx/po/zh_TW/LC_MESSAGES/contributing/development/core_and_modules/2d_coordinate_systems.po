#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D coordinate systems and 2D transforms"
msgstr "2D 座標系與 2D 變換"

msgid "Introduction"
msgstr "前言"

msgid ""
"This is a detailed overview of the available 2D coordinate systems and 2D "
"transforms that are built in. The basic concepts are covered "
"in :ref:`doc_viewport_and_canvas_transforms`."
msgstr ""
"這是一份關於 Godot 內建 2D 座標系與 2D 變換的詳細說明。基本概念請參"
"考 :ref:`doc_viewport_and_canvas_transforms`。"

msgid ""
":ref:`Transform2D <class_Transform2D>` are matrices that convert coordinates "
"from one coordinate system to an other. In order to use them, it is "
"beneficial to know which coordinate systems are available in Godot. For a "
"deeper understanding, the :ref:`doc_matrices_and_transforms` tutorial offers "
"insights to the underlying functionality."
msgstr ""
":ref:`Transform2D <class_Transform2D>` 是用來將座標從一個座標系轉換到另一個座"
"標系的矩陣。要有效運用它們，建議先了解 Godot 支援哪些座標系。若想深入理解其底"
"層原理，請參考 :ref:`doc_matrices_and_transforms` 教學。"

msgid "Godot 2D coordinate systems"
msgstr "Godot 2D 座標系"

msgid ""
"The following graphic gives an overview of Godot 2D coordinate systems and "
"the available node-transforms, transform-functions and coordinate-system "
"related functions. At the left is the OS Window Manager screen, at the right "
"are the :ref:`CanvasItems <class_CanvasItem>`. For simplicity reasons this "
"graphic doesn't include :ref:`SubViewport "
"<class_SubViewport>`, :ref:`SubViewportContainer "
"<class_SubViewportContainer>`, :ref:`ParallaxLayer<class_ParallaxLayer>` "
"and :ref:`ParallaxBackground<class_ParallaxBackground>` all of which also "
"influence transforms."
msgstr ""
"下方圖示概述了 Godot 2D 座標系，以及可用的節點變換、變換函式和座標系相關函"
"式。左側為作業系統視窗管理器螢幕，右側為 :ref:`CanvasItems "
"<class_CanvasItem>`。為簡化說明，圖中未包含 :ref:`SubViewport "
"<class_SubViewport>`、:ref:`SubViewportContainer "
"<class_SubViewportContainer>`、:ref:`ParallaxLayer<class_ParallaxLayer>` "
"和 :ref:`ParallaxBackground<class_ParallaxBackground>`，這些也會影響變換。"

msgid ""
"The graphic is based on a node tree of the following form: ``Root Window "
"(embed Windows)`` ⇒ ``Window (don't embed Windows)`` ⇒ ``CanvasLayer`` ⇒ "
"``CanvasItem`` ⇒ ``CanvasItem`` ⇒ ``CanvasItem``. There are more complex "
"combinations possible, like deeply nested Window and SubViewports, however "
"this example intends to provide an overview of the methodology in general."
msgstr ""
"該圖以如下結構的節點樹為基礎： ``根視窗（嵌入視窗）`` ⇒ ``視窗（不嵌入視窗）"
"`` ⇒ ``CanvasLayer`` ⇒ ``CanvasItem`` ⇒ ``CanvasItem`` ⇒ ``CanvasItem`` 。實"
"際應用中可能有更複雜的組合，例如多層嵌套的視窗和子視口，本範例僅做方法論上的"
"概述。"

msgid "Click graphic to enlarge."
msgstr "點擊圖示可放大。"

msgid "**Item Coordinates**"
msgstr "**物件座標**"

msgid ""
"This is the local coordinate system of a :ref:`CanvasItem "
"<class_CanvasItem>`."
msgstr "這是 :ref:`CanvasItem <class_CanvasItem>` 的本地座標系。"

msgid "**Parent Item Coordinates**"
msgstr "**父物件座標**"

msgid ""
"This is the local coordinate system of the parent's *CanvasItem*. When "
"positioning *CanvasItems* in the *Canvas*, they usually inherit the "
"transformations of their parent *CanvasItems*. An exceptions "
"is :ref:`CanvasItems.top_level <class_CanvasItem_property_top_level>`."
msgstr ""
"這是父級 *CanvasItem* 的本地座標系。當在 *Canvas* 中擺放 *CanvasItems* 時，通"
"常會繼承父級 *CanvasItem* 的變換。例外情況為 :ref:`CanvasItems.top_level "
"<class_CanvasItem_property_top_level>`。"

msgid "**Canvas Coordinates**"
msgstr "**畫布座標**"

msgid ""
"As mentioned in the previous tutorial :ref:`doc_canvas_layers`, there are "
"two types of canvases (*Viewport* canvas and *CanvasLayer* canvas) and both "
"have a canvas coordinate system. These are also called world coordinates. A "
"*Viewport* can contain multiple *Canvases* with different coordinate systems."
msgstr ""
"如前述 :ref:`doc_canvas_layers`，Godot 有兩種畫布（*Viewport* 畫布與 "
"*CanvasLayer* 畫布），皆有其座標系。這些也稱為世界座標系。一個 *Viewport* 可"
"包含多個不同座標系的畫布。"

msgid "**Viewport Coordinates**"
msgstr "**視口座標**"

msgid "This is the coordinate system of the :ref:`Viewport <class_Viewport>`."
msgstr "這是 :ref:`Viewport <class_Viewport>` 的座標系。"

msgid "**Camera Coordinates**"
msgstr "**相機座標**"

msgid ""
"This is only used internally for functionality like 3D-camera ray "
"projections."
msgstr "這僅供內部如 3D 相機射線投影等功能使用。"

msgid "**Embedder Coordinates / Screen Coordinates**"
msgstr "**嵌入器座標／螢幕座標**"

msgid ""
"Every *Viewport* (*Window* or *SubViewport*) in the scene tree is embedded "
"either in a different node or in the OS Window Manager. This coordinate "
"system's origin is identical to the top-left corner of the *Window* or "
"*SubViewport* and its scale is the one of the embedder or the OS Window "
"Manager."
msgstr ""
"場景樹中的每個 *Viewport*（*Window* 或 *SubViewport*）都會嵌入於其他節點，或"
"作業系統的視窗管理器中。此座標系的原點為 *Window* 或 *SubViewport* 的左上角，"
"比例則與其嵌入對象或作業系統視窗管理器一致。"

msgid ""
"If the embedder is the OS Window Manager, then they are also called Screen "
"Coordinates."
msgstr "若嵌入對象為作業系統視窗管理器，則稱為螢幕座標。"

msgid "**Absolute Embedder Coordinates / Absolute Screen Coordinates**"
msgstr "**絕對嵌入器座標／絕對螢幕座標**"

msgid ""
"The origin of this coordinate system is the top-left corner of the embedding "
"node or the OS Window Manager screen. Its scale is the one of the embedder "
"or the OS Window Manager."
msgstr ""
"此座標系的原點是嵌入節點或作業系統視窗管理器畫面的左上角，比例與嵌入器或作業"
"系統視窗管理器相同。"

msgid ""
"If the embedder is the OS Window Manager, then they are also called Absolute "
"Screen Coordinates."
msgstr "若嵌入對象為作業系統視窗管理器，則稱為絕對螢幕座標。"

msgid "Node transforms"
msgstr "節點變換"

msgid ""
"Each of the mentioned nodes have one or more transforms associated with them "
"and the combination of these nodes infer the transforms between the "
"different coordinate systems. With a few exceptions, the transforms "
"are :ref:`Transform2D <class_Transform2D>` and the following list shows "
"details and effects of each of them."
msgstr ""
"上述每個節點皆有一個或多個變換，這些節點組合起來便構成不同座標系間的變換。除"
"了少數例外，這些變換均為 :ref:`Transform2D <class_Transform2D>`，下方列表說明"
"各自細節與影響。"

msgid "**CanvasItem transform**"
msgstr "**CanvasItem 變換**"

msgid "*CanvasItems* are either *Control*-nodes or *Node2D*-nodes."
msgstr "*CanvasItem* 可以是 *Control* 節點或 *Node2D* 節點。"

msgid ""
"For *Control* nodes this transform consists of a :ref:`position "
"<class_Control_property_position>` relative to the parent's origin and "
"a :ref:`scale <class_Control_property_scale>` and :ref:`rotation "
"<class_Control_property_rotation>` around a :ref:`pivot point "
"<class_Control_property_pivot_offset>`."
msgstr ""
"對於 *Control* 節點，變換包含相對於父節點原點的 :ref:`position "
"<class_Control_property_position>`，以及以 :ref:`pivot point "
"<class_Control_property_pivot_offset>` 為中心的 :ref:`scale "
"<class_Control_property_scale>` 與 :ref:`rotation "
"<class_Control_property_rotation>`。"

msgid ""
"For *Node2D* nodes :ref:`transform <class_Node2D_property_transform>` "
"consists of :ref:`position <class_Node2D_property_position>`, :ref:`rotation "
"<class_Node2D_property_rotation>`, :ref:`scale "
"<class_Node2D_property_scale>` and :ref:`skew <class_Node2D_property_skew>`."
msgstr ""
"對於 *Node2D* 節點，:ref:`transform <class_Node2D_property_transform>` 包"
"含 :ref:`position <class_Node2D_property_position>`、:ref:`rotation "
"<class_Node2D_property_rotation>`、:ref:`scale "
"<class_Node2D_property_scale>` 以及 :ref:`skew "
"<class_Node2D_property_skew>`。"

msgid ""
"The transform affects the item itself and usually also child-*CanvasItems* "
"and in the case of a *SubViewportContainer* it affects the contained "
"*SubViewport*."
msgstr ""
"這個變換會影響自身，通常也會連帶影響子 *CanvasItem*；若為 "
"*SubViewportContainer*，則會影響其所包含的 *SubViewport*。"

msgid "**CanvasLayer transform**"
msgstr "**CanvasLayer 變換**"

msgid ""
"The *CanvasLayer's* :ref:`transform <class_CanvasLayer_property_transform>` "
"affects all *CanvasItems* within the *CanvasLayer*. It doesn't affect other "
"*CanvasLayers* or *Windows* in its *Viewport*."
msgstr ""
"*CanvasLayer* 的 :ref:`transform <class_CanvasLayer_property_transform>` 會影"
"響該層內所有 *CanvasItem*，但不會影響同一 *Viewport* 內的其他 *CanvasLayer* "
"或 *Window*。"

msgid "**CanvasLayer follow viewport transform**"
msgstr "**CanvasLayer 跟隨視口變換**"

msgid ""
"The *follow viewport transform* is an automatically calculated transform, "
"that is based on the *Viewport's* :ref:`canvas transform "
"<class_Viewport_property_canvas_transform>` and the "
"*CanvasLayer's* :ref:`follow viewport scale "
"<class_CanvasLayer_property_follow_viewport_scale>` and can be used, "
"if :ref:`enabled <class_CanvasLayer_property_follow_viewport_enabled>`, to "
"achieve a pseudo-3D effect. It affects the same child nodes as the "
"*CanvasLayer transform*."
msgstr ""
"*跟隨視口變換* 是一種自動計算的變換，依據 *Viewport* 的 :ref:`canvas "
"transform <class_Viewport_property_canvas_transform>` 及 *CanvasLayer* "
"的 :ref:`follow viewport scale "
"<class_CanvasLayer_property_follow_viewport_scale>` 而定。若啟"
"用 :ref:`follow viewport enabled "
"<class_CanvasLayer_property_follow_viewport_enabled>`，可用來實現類 3D 效果。"
"其影響對象與 *CanvasLayer 變換* 相同。"

msgid "**Viewport canvas transform**"
msgstr "**Viewport 畫布變換**"

msgid ""
"The :ref:`canvas transform <class_Viewport_property_canvas_transform>` "
"affects all *CanvasItems* in the *Viewport's* default canvas. It also "
"affects *CanvasLayers*, that have follow viewport transform enabled. The "
"*Viewport's* active :ref:`Camera2D <class_Camera2D>` works by changing this "
"transform. It doesn't affect this *Viewport's* embedded *Windows*."
msgstr ""
":ref:`canvas transform <class_Viewport_property_canvas_transform>` 會影響 "
"*Viewport* 預設畫布內的所有 *CanvasItem*，也會影響啟用跟隨視口變換的 "
"*CanvasLayer*。*Viewport* 內活動的 :ref:`Camera2D <class_Camera2D>` 會調整這"
"個變換。但不影響該 *Viewport* 下嵌入的 *Window*。"

msgid "**Viewport global canvas transform**"
msgstr "**Viewport 全域畫布變換**"

msgid ""
"*Viewports* also have a :ref:`global canvas transform "
"<class_Viewport_property_global_canvas_transform>`. This is the master "
"transform and affects all individual *Canvas Layer* and embedded *Window* "
"transforms. This is primarily used in Godot's CanvasItem Editor."
msgstr ""
"*Viewport* 也有 :ref:`global canvas transform "
"<class_Viewport_property_global_canvas_transform>`，這是主變換，會影響所有子 "
"*CanvasLayer* 及嵌入的 *Window* 變換。此功能主要用於 Godot 編輯器的 "
"CanvasItem 編輯工具。"

msgid "**Viewport stretch transform**"
msgstr "**Viewport 拉伸變換**"

msgid ""
"Finally, *Viewports* have a *stretch transform*, which is used when resizing "
"or stretching the viewport. This transform is used for :ref:`Windows "
"<class_Window>` as described in :ref:`doc_multiple_resolutions`, but can "
"also be manually set on *SubViewports* by means of :ref:`size "
"<class_SubViewport_property_size>` and :ref:`size_2d_override "
"<class_SubViewport_property_size_2d_override>`. It's :ref:`translation "
"<class_Transform2D_method_get_origin>`, :ref:`rotation "
"<class_Transform2D_method_get_rotation>` and :ref:`skew "
"<class_Transform2D_method_get_skew>` are the default values and it can only "
"have non-default :ref:`scale <class_Transform2D_method_get_scale>`."
msgstr ""
"最後，*Viewport* 有 *拉伸變換*，當視口調整大小或拉伸時會套用這個變換。此變換"
"用於 :ref:`Window <class_Window>`（詳見 :ref:`doc_multiple_resolutions`），也"
"可透過 :ref:`size <class_SubViewport_property_size>` "
"或 :ref:`size_2d_override <class_SubViewport_property_size_2d_override>` 手動"
"設定於 *SubViewport*。其 :ref:`translation "
"<class_Transform2D_method_get_origin>`、:ref:`rotation "
"<class_Transform2D_method_get_rotation>`、:ref:`skew "
"<class_Transform2D_method_get_skew>` 為預設值，僅 :ref:`scale "
"<class_Transform2D_method_get_scale>` 可設為非預設值。"

msgid "**Window transform**"
msgstr "**Window 變換**"

msgid ""
"In order to scale and position the *Window's* content as described "
"in :ref:`doc_multiple_resolutions`, each :ref:`Window <class_Window>` "
"contains a *window transform*. It is for example responsible for the black "
"bars at the *Window's* sides so that the *Viewport* is displayed with a "
"fixed aspect ratio."
msgstr ""
"為了按照 :ref:`doc_multiple_resolutions` 的描述縮放與定位 *Window* 內容，每"
"個 :ref:`Window <class_Window>` 都有一個 *window transform*。例如，這就是讓 "
"*Window* 兩側出現黑邊，確保 *Viewport* 以固定寬高比顯示的原因。"

msgid "**Window position**"
msgstr "**Window 位置**"

msgid ""
"Every *Window* also has a :ref:`position <class_Window_property_position>` "
"to describe its position within its embedder. The embedder can be another "
"*Viewport* or the OS Window Manager."
msgstr ""
"每個 *Window* 也有 :ref:`position <class_Window_property_position>`，用來描述"
"其在嵌入器（例如另一個 *Viewport* 或作業系統視窗管理器）內的位置。"

msgid "**SubViewportContainer shrink transform**"
msgstr "**SubViewportContainer 縮放變換**"

msgid ""
":ref:`stretch <class_SubViewportContainer_property_stretch>` together "
"with :ref:`stretch_shrink "
"<class_SubViewportContainer_property_stretch_shrink>` declare for a "
"*SubViewportContainer* if and by what integer factor the contained "
"*SubViewport* should be scaled in comparison to the container's size."
msgstr ""
":ref:`stretch <class_SubViewportContainer_property_stretch>` 搭"
"配 :ref:`stretch_shrink "
"<class_SubViewportContainer_property_stretch_shrink>`，用以設定 "
"*SubViewportContainer* 內的 *SubViewport* 是否要根據容器大小縮放，以及縮放的"
"整數比例因數。"
