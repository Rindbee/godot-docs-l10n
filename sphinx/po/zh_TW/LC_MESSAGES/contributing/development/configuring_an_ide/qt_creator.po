#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Qt Creator"
msgstr "Qt Creator"

msgid ""
"`Qt Creator <https://doc.qt.io/qtcreator/index.html>`_ is a free, open "
"source IDE for all desktop platforms."
msgstr ""
"`Qt Creator <https://doc.qt.io/qtcreator/index.html>`_ 是免費、開放原始碼，支"
"援所有桌面平台的 IDE。"

msgid "Importing the project"
msgstr "匯入專案"

msgid ""
"From the Qt Creator's main screen select **New Project > Import Project > "
"Import Existing Project**."
msgstr ""
"在 Qt Creator 主畫面選擇 **New Project > Import Project > Import Existing "
"Project**。"

msgid "Under **Location** select the Godot root folder."
msgstr "於 **Location** 選擇 Godot 根目錄。"

msgid ""
"Next, you can choose which folders and files will be visible to the project. "
"While C/C++ files are added automatically, other extensions can be "
"potentially useful: ``*.glsl`` for shader files, ``*.py`` for buildsystem "
"files, ``*.java`` for Android platform development, ``*.mm`` for macOS "
"platform development."
msgstr ""
"接下來你可以選擇要讓哪些資料夾與檔案在專案中可見。C/C++ 檔案會自動加入，也可"
"考慮加入其它副檔名如：著色器檔案 ``*.glsl``、建置系統 ``*.py``、Android 平台"
"用 ``*.java``、macOS 平台用 ``*.mm`` 等。"

msgid ""
"You can change this configuration later by right-clicking on your project "
"and selecting the **Edit Files...** option."
msgstr "日後可在專案上點右鍵，選擇 **Edit Files...** 來調整這些設定。"

msgid "Finish the import."
msgstr "完成匯入。"

msgid ""
"Open the ``project_name.includes`` file and add a line containing ``.`` to "
"it to correctly enable the code completion."
msgstr ""
"打開 ``project_name.includes`` 檔案，加入一行 ``.`` 以正確啟用程式碼補全。"

msgid "From the left-side menu select **Projects** and open the **Build** tab."
msgstr "於左側選單選擇 **Projects**，並切到 **Build** 分頁。"

msgid "Delete the predefined ``make`` build step."
msgstr "刪除預設的 ``make`` 建置步驟。"

msgid ""
"Click **Add Build Step > Custom Process Step** to add a new build step with "
"the following settings:"
msgstr "點擊 **Add Build Step > Custom Process Step** 新增建置步驟，內容如下："

msgid "Command"
msgstr "命令"

msgid "**scons**"
msgstr "**scons**"

msgid "Arguments"
msgstr "參數"

msgid ""
"See :ref:`doc_introduction_to_the_buildsystem` for a full list of arguments."
msgstr "所有可用參數請見 :ref:`doc_introduction_to_the_buildsystem`。"

msgid ""
"If the build fails with ``Could not start process \"scons\"``, it can mean "
"that ``scons`` is not in your ``PATH`` environment variable. In this case, "
"you'll have to specify the full path to the SCons binary."
msgstr ""
"如果出現 ``Could not start process \"scons\"`` 等錯誤，代表 ``scons`` 沒有在"
"你的 ``PATH`` 環境變數中，請填入 SCons 執行檔的完整路徑。"

msgid "Debugging the project"
msgstr "除錯專案"

msgid "From the left-side menu select **Projects** and open the **Run** tab."
msgstr "於左側選單選擇 **Projects**，切到 **Run** 分頁。"

msgid ""
"Under **Executable** specify the path to your executable located in the "
"``<Godot root directory>/bin`` folder. The name depends on your build "
"configuration, e.g. ``godot.linuxbsd.editor.dev.x86_64`` for 64-bit LinuxBSD "
"platform with ``platform=editor`` and ``dev_build=yes``. You can use ``%"
"{buildDir}`` to reference the project root, e.g: ``%{buildDir}/bin/"
"godot.linuxbsd.editor.dev.x86_64``."
msgstr ""
"於 **Executable** 欄位指定你在 ``<Godot 根目錄>/bin`` 下的執行檔。檔名會依建"
"置設定而異，例如 64 位元 LinuxBSD 編輯器開發版會是 "
"``godot.linuxbsd.editor.dev.x86_64``。你也可用 ``%{buildDir}`` 來參照專案根目"
"錄，例如 ``%{buildDir}/bin/godot.linuxbsd.editor.dev.x86_64``。"

msgid ""
"If you want to run a specific project, specify its root folder under "
"**Working directory**."
msgstr "若要執行特定 Godot 專案，請在 **Working directory** 指定該專案資料夾。"

msgid ""
"If you want to run the editor, add ``-e`` to the **Command line arguments** "
"field."
msgstr "若想啟動 Godot 編輯器，請在 **Command line arguments** 加入 ``-e``。"

msgid ""
"To learn more about command line arguments, refer to the :ref:`command line "
"tutorial <doc_command_line_tutorial>`."
msgstr ""
"更多命令列參數資訊請參考 :ref:`命令列教學 <doc_command_line_tutorial>`。"

msgid "Code style configuration"
msgstr "程式碼風格設定"

msgid ""
"Developers must follow the project's :ref:`code style "
"<doc_code_style_guidelines>` and the IDE should help them follow it. By "
"default, Qt Creator uses spaces for indentation which doesn't match the "
"Godot code style guidelines. You can change this behavior by changing the "
"**Code Style** in **Tools > Options > C++**."
msgstr ""
"開發者必須遵循專案的 :ref:`程式碼風格 <doc_code_style_guidelines>`，IDE 可以"
"協助你自動套用。Qt Creator 預設以空白鍵縮排，這與 Godot 標準不合，請到 "
"**Tools > Options > C++** 的 **Code Style** 調整為符合 Godot 規範。"

msgid ""
"Click on **Edit** to change the current settings, then click on **Copy Built-"
"in Code Style** button to set a new code style. Set a name for it (e.g. "
"Godot) and change the Tab policy to be **Tabs Only**."
msgstr ""
"點選 **Edit** 編輯目前設定，按 **Copy Built-in Code Style** 建立新風格，命名"
"（例如 Godot），將縮排類型（Tab policy）設為 **Tabs Only**。"

msgid ""
"If you run into any issues, ask for help in one of `Godot's community "
"channels <https://godotengine.org/community>`__."
msgstr ""
"如遇問題，歡迎到 `Godot 社群頻道 <https://godotengine.org/community>`__ 求"
"助。"
