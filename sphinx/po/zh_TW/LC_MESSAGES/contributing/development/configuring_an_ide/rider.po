#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "JetBrains Rider"
msgstr "JetBrains Rider"

msgid ""
"`JetBrains Rider <https://www.jetbrains.com/rider/>`_ is a commercial "
"`JetBrains <https://www.jetbrains.com/>`_ IDE for C# and C++ that uses the "
"same solution system as Visual Studio."
msgstr ""
"`JetBrains Rider <https://www.jetbrains.com/rider/>`_ 是 `JetBrains <https://"
"www.jetbrains.com/>`_ 提供的商業級 C# 與 C++ IDE，與 Visual Studio 採用相同解"
"決方案（solution）系統。"

msgid ""
"This documentation is for contributions to the game engine, and not using "
"JetBrains Rider as a C# or GDScript editor. To code C# or GDScript in an "
"external editor, see :ref:`the C# guide to configure an external editor "
"<doc_c_sharp_setup_external_editor>`."
msgstr ""
"此文件說明如何以 Rider 參與引擎開發，不是用來設定 C# 或 GDScript 編輯器。如果"
"你想用外部編輯器撰寫 C# 或 GDScript，請見 :ref:`C# 外部編輯器設定教學 "
"<doc_c_sharp_setup_external_editor>`。"

msgid "Importing the project"
msgstr "匯入專案"

msgid ""
"You will need to install `Python <https://www.python.org/>`_ in your "
"development environment along with `MinGW <https://www.mingw-w64.org/"
"downloads/>`_. You will also need the Visual Studio C++ Build Tools, which "
"you can install using the Visual Studio Installer. Ensure all dependencies "
"are installed before you continue to the next steps."
msgstr ""
"你需要在開發環境安裝好 `Python <https://www.python.org/>`_、`MinGW <https://"
"www.mingw-w64.org/downloads/>`_，還有 Visual Studio 的 C++ Build Tools（可用 "
"Visual Studio Installer 安裝）。請確認所有相依工具都已安裝完畢再繼續。"

msgid ""
"If you already use Visual Studio as your main IDE, you can use the same "
"solution file in Rider. Rider and Visual Studio use the same solution "
"format, so you can switch between the two IDEs without rebuilding the "
"solution file. Debug configurations need to be changed when going from one "
"IDE to another."
msgstr ""
"如果你已使用 Visual Studio 作為主要 IDE，可以直接用同一個 solution 檔在 "
"Rider 開啟。Rider 與 Visual Studio 的 solution 格式相容，兩者切換無須重建解決"
"方案。但 IDE 間切換時需重新設定偵錯參數。"

msgid ""
"Rider requires a solution file to work on a C++ project. While Godot does "
"not come with a solution file, it can be generated using SCons."
msgstr ""
"Rider 需要 solution 檔才能開發 C++ 專案。雖然 Godot 沒有附 solution 檔，但可"
"用 SCons 產生。"

msgid ""
"Navigate to the Godot root folder and open a Command Prompt or PowerShell "
"window."
msgstr "前往 Godot 根目錄並開啟命令提示字元或 PowerShell 視窗。"

msgid "Copy, paste and run the next command to generate the solution."
msgstr "複製、貼上並執行下列指令以產生 solution。"

msgid ""
"The ``vsproj`` parameter signals that you want Visual Studio solution "
"generated. The ``dev_build`` parameter makes sure the debug symbols are "
"included, allowing to e.g. step through code using breakpoints."
msgstr ""
"``vsproj`` 參數代表要產生 Visual Studio solution，``dev_build`` 會包含偵錯符"
"號，讓你能逐步除錯。"

msgid ""
"If you have Rider setup as your main IDE for .sln, you can now open the "
"project by double-clicking on the ``godot.sln`` in the project root or by "
"using the **Open** option inside of Rider."
msgstr ""
"如果你已將 Rider 設為 .sln 的預設 IDE，現在可以直接在專案根目錄雙擊 "
"``godot.sln`` 開啟，或在 Rider 內選擇 **Open** 開啟。"

msgid ""
"Rider could fail to build the solution. If that is the case, try running "
"`git clean -xdf` to remove all traces of the previous build artifacts and "
"regenerate the build files using the `scons` command again. Restarting the "
"terminal and your development environment may help."
msgstr ""
"若 Rider 無法建置 solution，請嘗試執行 `git clean -xdf` 移除所有先前的建置產"
"物，再用 `scons` 重新產生 solution。必要時也可重啟終端機與 IDE。"

msgid "Compiling and debugging the project"
msgstr "編譯與除錯專案"

msgid ""
"Rider comes with a built-in debugger that can be used to debug the Godot "
"project. You can launch the debugger by pressing the **Debug** icon at the "
"top of the screen, this only works for the Project manager, if you want to "
"debug the editor, you need to configure the debugger first."
msgstr ""
"Rider 內建偵錯器，可用於除錯 Godot。點畫面上方的 **Debug** 圖示即可啟動偵錯"
"（預設僅針對專案管理員），若要除錯 Godot 編輯器，需先進行偵錯設定。"

msgid ""
"Click on the **Godot > Edit Configurations** option at the top of the screen."
msgstr "點畫面頂端 **Godot > Edit Configurations** 進行設定。"

msgid "Ensure the following values for the C++ Project Run Configuration:"
msgstr "請確認 C++ 專案執行設定如下："

msgid "Exe Path : ``$(LocalDebuggerCommand)``"
msgstr "Exe Path：``$(LocalDebuggerCommand)``"

msgid "Program Arguments: ``-e --path <path to the Godot project>``"
msgstr "Program Arguments：``-e --path <Godot 專案路徑>``"

msgid "Working Directory: ``$(LocalDebuggerWorkingDirectory)``"
msgstr "Working Directory：``$(LocalDebuggerWorkingDirectory)``"

msgid "Before Launch has a value of \"Build Project\""
msgstr "Before Launch 設為「Build Project」"

msgid ""
"This will tell the executable to debug the specified project without using "
"the project manager. Use the root path to the project folder, not "
"``project.godot`` file path."
msgstr ""
"這樣啟動時會直接除錯你指定的專案而不會經過專案管理員。請填入專案資料夾的根路"
"徑，不是 ``project.godot`` 檔案路徑。"

msgid "Finally click on \"Apply\" and \"OK\" to save the changes."
msgstr "最後點選「Apply」與「OK」儲存設定。"

msgid ""
"When you press the **Debug** icon at the top of the screen, JetBrains Rider "
"will launch the Godot editor with the debugger attached."
msgstr ""
"之後你只要按頂端的 **Debug** 圖示，Rider 就會用偵錯器啟動 Godot 編輯器。"

msgid ""
"Alternatively you can use **Run > Attach to Process** to attach the debugger "
"to a running Godot instance."
msgstr ""
"你也可以用 **Run > Attach to Process** 將偵錯器附加到已啟動的 Godot 程序。"

msgid ""
"You can find the Godot instance by searching for ``godot.editor`` and then "
"clicking ``Attach with LLDB``"
msgstr ""
"你可以搜尋 ``godot.editor`` 找到執行中的 Godot 實例，然後點擊 ``Attach with "
"LLDB`` 附加偵錯"

msgid ""
"Please consult the `JetBrains Rider documentation <https://www.jetbrains.com/"
"rider/documentation/>`_ for any specific information about the JetBrains IDE."
msgstr ""
"如需 JetBrains IDE 進階資訊，請參考 `JetBrains Rider 官方文件 <https://"
"www.jetbrains.com/rider/documentation/>`_。"
