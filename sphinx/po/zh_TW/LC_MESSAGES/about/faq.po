#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "FAQ"
msgstr "常見問題"

msgid "Frequently asked questions"
msgstr "常見問題"

msgid ""
"What can I do with Godot? How much does it cost? What are the license terms?"
msgstr "Godot 可以做什麼？要花多少錢？授權條款是什麼呢？"

msgid ""
"Godot is `Free and open source Software <https://en.wikipedia.org/wiki/"
"Free_and_open_source_software>`_ available under the `OSI-approved <https://"
"opensource.org/licenses/MIT>`_ MIT license. This means it is free as in "
"\"free speech\" as well as in \"free beer.\""
msgstr ""
"Godot 是 MIT 授權條款發布的 `自由及開放原始碼軟體 <https://en.wikipedia.org/"
"wiki/Free_and_open_source_software>`_ ，基於 `OSI 認可 <https://"
"opensource.org/licenses/MIT>`_ 。這表示它的「自由」如同「言論自由」一樣，也如"
"同「免費啤酒」"

msgid "In short:"
msgstr "簡單來說："

msgid ""
"You are free to download and use Godot for any purpose: personal, non-"
"profit, commercial, or otherwise."
msgstr "你可以自由下載與使用 Godot，並可用於個人、非盈利或商業性等任何目的。"

msgid ""
"You are free to modify, distribute, redistribute, and remix Godot to your "
"heart's content, for any reason, both non-commercially and commercially."
msgstr ""
"不論理由為何、不管有沒有商業目的，都可以根據需求自由修改、發行、再發行，或是"
"重組 Godot。"

msgid ""
"All the contents of this accompanying documentation are published under the "
"permissive Creative Commons Attribution 3.0 (`CC BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0/>`_) license, with attribution to \"Juan "
"Linietsky, Ariel Manzur and the Godot Engine community.\""
msgstr ""
"這份文件所有內容都以寬鬆的創用CC—姓名標示 (`CC-BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0>`_) 授權條款發行，作者標示為「Juan "
"Linietsky, Ariel Manzur 與 Godot Engine 社群。」"

msgid ""
"Logos and icons are generally under the same Creative Commons license. Note "
"that some third-party libraries included with Godot's source code may have "
"different licenses."
msgstr ""
"Logo 與圖示基本上也是用同一個創用 CC 條款授權。但請注意，Godot 原始碼所包含的"
"一些第三方函式庫可能使用了不同的授權條款。"

msgid ""
"For full details, look at the `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_ as well as the `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ and "
"`LOGO_LICENSE.txt <https://github.com/godotengine/godot/blob/master/"
"LOGO_LICENSE.txt>`_ files in the Godot repository."
msgstr ""
"完整細節請參閱 Godot 儲存庫中的 `COPYRIGHT.txt <https://github.com/"
"godotengine/godot/blob/master/COPYRIGHT.txt>`_、`LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ 和 `LOGO_LICENSE.txt "
"<https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.txt>`_ 檔案。"

msgid ""
"Also, see `the license page on the Godot website <https://godotengine.org/"
"license>`_."
msgstr ""
"另外，也請參考 `Godot 網站上的授權條款頁面 (英文) <https://godotengine.org/"
"license>`_。"

msgid "Which platforms are supported by Godot?"
msgstr "Godot 支援哪些平台？"

msgid "**For the editor:**"
msgstr "**編輯器：**"

msgid "Windows"
msgstr "Windows"

msgid "macOS"
msgstr "macOS"

msgid "Linux, \\*BSD"
msgstr "Linux, \\*BSD"

msgid "Android (experimental)"
msgstr "Android (實驗性)"

msgid "`Web <https://editor.godotengine.org/>`__ (experimental)"
msgstr "`網頁 <https://editor.godotengine.org/>`__ （實驗性）"

msgid "**For exporting your games:**"
msgstr "**匯出遊戲：**"

msgid "Android"
msgstr "Android"

msgid "iOS"
msgstr "iOS"

msgid "Web"
msgstr "Web"

msgid ""
"Both 32- and 64-bit binaries are supported where it makes sense, with 64 "
"being the default. Official macOS builds support Apple Silicon natively as "
"well as x86_64."
msgstr "預設使用 64 位元，依情況可同時支援 32 位元與 64 位元的執行檔。"

msgid ""
"Some users also report building and using Godot successfully on ARM-based "
"systems with Linux, like the Raspberry Pi."
msgstr ""
"部分使用者也在基於 ARM 的 Linux 系統上成功使用 Godot，如 Raspberry Pi。"

msgid ""
"The Godot team can't provide an open source console export due to the "
"licensing terms imposed by console manufacturers. Regardless of the engine "
"you use, though, releasing games on consoles is always a lot of work. You "
"can read more about :ref:`doc_consoles`."
msgstr ""
"由於遊戲主機製造商施加的許可條款，Godot 團隊無法提供開源的主機匯出專案。但是"
"無論使用哪種引擎，在主機上發行遊戲始終是一項繁重的工作。更多相關內容"
"見 :ref:`doc_consoles` 。"

msgid ""
"For more on this, see the sections on :ref:`exporting <toc-learn-workflow-"
"export>` and :ref:`compiling Godot yourself <toc-devel-compiling>`."
msgstr ""
"有關匯出遊戲的詳細資訊請參考 :ref:`匯出 <toc-learn-workflow-export>` "
"與 :ref:`自行編譯 Godot <toc-devel-compiling>` 章節。"

msgid ""
"Godot 3 also had support for Universal Windows Platform (UWP). This platform "
"port was removed in Godot 4 due to lack of maintenance, and it being "
"deprecated by Microsoft. It is still available in the current stable release "
"of Godot 3 for interested users."
msgstr ""
"Godot 3 也曾支援通用 Windows 平台 (UWP)。這個平台移植版本已在 Godot 4 中移"
"除，原因是缺乏維護且微軟已不再推薦使用。對於有興趣的使用者，它仍然可以在 "
"Godot 3 的目前穩定版本中使用。"

msgid "Which programming languages are supported in Godot?"
msgstr "Godot 支援哪些程式語言？"

msgid ""
"The officially supported languages for Godot are GDScript, C#, and C++. See "
"the subcategories for each language in the :ref:`scripting <toc-learn-"
"scripting>` section."
msgstr ""
"Godot 正式支援的語言有 GDScript、視覺腳本 (Visual Script)、C# 與 C++。請參"
"考 :ref:`撰寫腳本 <toc-learn-scripting>` 章節中關於各個語言的子分類。"

msgid ""
"If you are just starting out with either Godot or game development in "
"general, GDScript is the recommended language to learn and use since it is "
"native to Godot. While scripting languages tend to be less performant than "
"lower-level languages in the long run, for prototyping, developing Minimum "
"Viable Products (MVPs), and focusing on Time-To-Market (TTM), GDScript will "
"provide a fast, friendly, and capable way of developing your games."
msgstr ""
"不論你是剛開始使用 Godot，或是剛開始進行遊戲開發，都推薦使用 GDScript，因為 "
"GDScript 是 Godot 的原生語言。雖然腳本語言的效能遠比低階程式語言還低，但在原"
"型設計 (Prototype)、最小可行產品 (MVP, Minimun Viable Product) 或是專注於上市"
"時間 (TTM) 的開發上，GDScript 對於開發遊戲來說是一個快速友好、可靠的選擇。"

msgid ""
"Note that C# support is still relatively new, and as such, you may encounter "
"some issues along the way. C# support is also currently missing on the web "
"platform. Our friendly and hard-working development community is always "
"ready to tackle new problems as they arise, but since this is an open source "
"project, we recommend that you first do some due diligence yourself. "
"Searching through discussions on `open issues <https://github.com/"
"godotengine/godot/issues?q=is%3Aopen+is%3Aissue+label%3Atopic%3Adotnet>`__ "
"is a great way to start your troubleshooting."
msgstr ""
"請注意，C# 支援仍相對較新，因此你在使用過程中可能會遇到一些問題。目前網頁平台"
"尚未支援 C#。我們友善且積極的開發社群總是會協助解決新問題，但由於這是一個開放"
"原始碼專案，建議你先自行進行基本排查。瀏覽 `未解決問題 <https://github.com/"
"godotengine/godot/issues?q=is%3Aopen+is%3Aissue+label%3Atopic%3Adotnet>`__ 討"
"論，是開始疑難排解的好方法。"

msgid ""
"As for new languages, support is possible via third parties with "
"GDExtensions. (See the question about plugins below). Work is currently "
"underway, for example, on unofficial bindings for Godot to `Python <https://"
"github.com/touilleMan/godot-python>`_ and `Nim <https://github.com/pragmagic/"
"godot-nim>`_."
msgstr ""
"更多語言可以通過 GDNative / NativeScript / PluginScript 搭配第三方套件來支"
"援。(詳細請參考下列關於外掛的問答。) 目前有些正在開發的非官方語言綁定專案如 "
"`Python <https://github.com/touilleMan/godot-python>`_ 與 `Nim <https://"
"github.com/pragmagic/godot-nim>`_ 。"

msgid "What is GDScript and why should I use it?"
msgstr "GDScript 是什麼？為什麼要用 GDScript？"

msgid ""
"GDScript is Godot's integrated scripting language. It was built from the "
"ground up to maximize Godot's potential in the least amount of code, "
"affording both novice and expert developers alike to capitalize on Godot's "
"strengths as fast as possible. If you've ever written anything in a language "
"like Python before, then you'll feel right at home. For examples and a "
"complete overview of the power GDScript offers you, check out "
"the :ref:`GDScript scripting guide <doc_gdscript>`."
msgstr ""
"GDScript 是與 Godot 整合的腳本語言。是為了以最少的程式碼發揮 Godot 最大的潛能"
"而從 0 打造的，同時也能讓不論新手或專業開發者都能儘可能快速地駕馭 Godot 優"
"勢。若你曾經使用過如 Python 之類的語言，肯定也能快速上手 GDScript。請參"
"考 :ref:`GDScript 腳本編寫指南 <doc_gdscript>` 取得範例程式碼、歷史、以及 "
"GDScript 功能的完整簡介。"

msgid ""
"There are several reasons to use GDScript, but the most salient reason is "
"the overall **reduction of complexity**."
msgstr ""
"使用 GDScript 有許多原因，但最主要也最顯著的原因是整體**複雜度的降低**。"

msgid ""
"The original intent of creating a tightly integrated, custom scripting "
"language for Godot was two-fold: first, it reduces the amount of time "
"necessary to get up and running with Godot, giving developers a rapid way of "
"exposing themselves to the engine with a focus on productivity; second, it "
"reduces the overall burden of maintenance, attenuates the dimensionality of "
"issues, and allows the developers of the engine to focus on squashing bugs "
"and improving features related to the engine core, rather than spending a "
"lot of time trying to get a small set of incremental features working across "
"a large set of languages."
msgstr ""
"最開始會想從頭客製化一個與 Godot 深度整合的腳本語言主要有兩個原因：首先，自己"
"做的語言做可以降低程式在 Godot 內的啟動與執行時間，能讓開發者更快上手引擎並專"
"注於產品開發；再來，也能降低維護成本與避免遇到複雜問題，讓引擎開發者能專心找"
"出 Bug 並提升引擎核心功能，而不是花一堆時間支援一大堆語言結果只獲得一小撮新功"
"能。"

msgid ""
"Since Godot is an open source project, it was imperative from the start to "
"prioritize a more integrated and seamless experience over attracting "
"additional users by supporting more familiar programming languages, "
"especially when supporting those more familiar languages would result in a "
"worse experience. We understand if you would rather use another language in "
"Godot (see the list of supported options above). That being said, if you "
"haven't given GDScript a try, try it for **three days**. Just like Godot, "
"once you see how powerful it is and how rapid your development becomes, we "
"think GDScript will grow on you."
msgstr ""
"由於 Godot 是一個開放原始碼專案，從一開始就必須優先考慮更整合且流暢的使用體"
"驗，而不是透過支援更多熟悉的程式語言來吸引額外使用者，尤其當支援這些更熟悉的"
"語言會導致更差的使用體驗時。我們理解您可能偏好在 Godot 中使用其他語言（請參閱"
"上方支援的選項列表）。話雖如此，如果您還沒有試用過 GDScript，請給它 **三天** "
"的時間。就像 Godot 一樣，一旦您了解它的強大之處以及開發速度的提升，我們相信您"
"會喜歡上 GDScript。"

msgid ""
"More information about getting comfortable with GDScript or dynamically "
"typed languages can be found in the :ref:`doc_gdscript_more_efficiently` "
"tutorial."
msgstr ""
"請參考 :ref:`doc_gdscript_more_efficiently` 一文瞭解如何熟悉 GDScript 或動態"
"型別語言的資訊。"

msgid "What were the motivations behind creating GDScript?"
msgstr "創造 GDScript 的動機是什麼？"

msgid ""
"In the early days, the engine used the `Lua <https://www.lua.org>`__ "
"scripting language. Lua can be fast thanks to LuaJIT, but creating bindings "
"to an object-oriented system (by using fallbacks) was complex and slow and "
"took an enormous amount of code. After some experiments with `Python "
"<https://www.python.org>`__, that also proved difficult to embed."
msgstr ""
"剛開始我們是用 `Lua <https://www.lua.org>`__ 腳本語言。Lua 很快，但如果要 (使"
"用 Fallback) 綁定物件導向系統，就變得很複雜而且很慢，也需要寫大量的程式碼。後"
"來我們也試了 `Python <https://www.python.org>`__，但事後證明要把 Python 嵌入"
"引擎有多困難。"

msgid ""
"The main reasons for creating a custom scripting language for Godot were:"
msgstr "為 Godot 建立一個客製化的腳本語言的主要原因："

msgid ""
"Poor threading support in most script VMs, and Godot uses threads (Lua, "
"Python, Squirrel, JavaScript, ActionScript, etc.)."
msgstr ""
"Godot 需要使用執行緒，但大部分腳本語言 VM 對執行緒的支援都很差。 (Lua, "
"Python, Squirrel, JavaScript, ActionScript …等)。"

msgid ""
"Poor class-extending support in most script VMs, and adapting to the way "
"Godot works is highly inefficient (Lua, Python, JavaScript)."
msgstr ""
"大多數腳本語言 VM 都不太支援擴充類別 (Class-extending)，而要在 Godot 上用就會"
"很沒效率。(Lua, Python, JavaScript)。"

msgid ""
"Many existing languages have horrible interfaces for binding to C++, "
"resulting in a large amount of code, bugs, bottlenecks, and general "
"inefficiency (Lua, Python, Squirrel, JavaScript, etc.). We wanted to focus "
"on a great engine, not a great number of integrations."
msgstr ""
"現存語言的 C++ 綁定界面都很可怕，會導致需要大量的程式碼、Bug、瓶頸、整體上來"
"說變得很沒效率 (Lua, Python, Squirrel, JavaScript…等)。我們想要專心做出好用的"
"引擎，而不是整合一堆東西。"

msgid ""
"No native vector types (Vector3, Transform3D, etc.), resulting in highly "
"reduced performance when using custom types (Lua, Python, Squirrel, "
"JavaScript, ActionScript, etc.)."
msgstr ""
"沒有原生向量型別（例如 Vector3、Transform3D 等），當使用自訂型別（Lua、"
"Python、Squirrel、JavaScript、ActionScript 等）時，效能會大幅降低。"

msgid ""
"Garbage collector results in stalls or unnecessarily large memory usage "
"(Lua, Python, JavaScript, ActionScript, etc.)."
msgstr ""
"記憶體回收行程 (Garbage Collector) 機制也導致了佔用或使用了大量不必要的記憶"
"體。(Lua, Python, JavaScript, ActionScript…等)。"

msgid ""
"Difficulty integrating with the code editor for providing code completion, "
"live editing, etc. (all of them)."
msgstr ""
"很難在程式碼編輯器中整合程式碼補全或即時編輯…等 (所有的語言都這樣)。而 "
"GDScript 就支援得很好。"

msgid "GDScript was designed to curtail the issues above, and more."
msgstr "GDScript 被設計來解決上述所有的問題，甚至能做得更好。"

msgid "Which programming language is fastest?"
msgstr "哪種程式語言最快？"

msgid ""
"In most games, the *scripting language* itself is not the cause of "
"performance problems. Instead, performance is slowed by inefficient "
"algorithms (which are slow in all languages), by GPU performance, or by the "
"common C++ engine code like physics or navigation. All languages supported "
"by Godot are fast enough for general-purpose scripting. You should choose a "
"language based on other factors, like ease-of-use, familiarity, platform "
"support, or language features."
msgstr ""
"在大多數遊戲中，「腳本語言」本身並非效能問題的根源。相反地，效能降低通常是由"
"於效率不彰的演算法（在所有語言中都很慢）、GPU 效能，或是常見的 C++ 引擎程式碼"
"（例如物理或導航）。Godot 支援的所有語言都夠快，足以應付一般用途的腳本編寫。"
"您應該根據其他因素選擇語言，例如易用性、熟悉度、平台支援或語言特性。"

msgid ""
"In general, the performance of C# and GDScript is within the same order of "
"magnitude, and C++ is faster than both."
msgstr "一般來說，C# 和 GDScript 的效能在同一個數量級內，而 C++ 比兩者都快。"

msgid ""
"Comparing GDScript performance to C# is tricky, since C# can be faster in "
"some specific cases. The C# *language* itself tends to be faster than "
"GDScript, which means that C# can be faster in situations with few calls to "
"Godot engine code. However, C# can be slower than GDScript when making many "
"Godot API calls, due to the cost of *marshalling*. C#'s performance can also "
"be brought down by garbage collection which occurs at random and "
"unpredictable moments. This can result in stuttering issues in complex "
"projects, and is not exclusive to Godot."
msgstr ""
"比較 GDScript 和 C# 的效能很難，因為 C# 在某些特定情況下可能更快。C# *語言* "
"本身通常比 GDScript 快，這表示在很少呼叫 Godot 引擎程式碼的情況下，C# 可能會"
"更快。然而，由於 *marshalling* 的成本，當進行大量 Godot API 呼叫時，C# 可能會"
"比 GDScript 慢。C# 的效能也可能因為隨機且無法預測發生的垃圾回收而降低。這可能"
"會導致複雜專案中出現卡頓問題，而且這並非 Godot 獨有的問題。"

msgid ""
"C++, using :ref:`GDExtension <doc_what_is_gdextension>`, will almost always "
"be faster than either C# or GDScript. However, C++ is less easy to use than "
"C# or GDScript, and is slower to develop with."
msgstr ""
"C++，透過 :ref:`GDExtension <doc_what_is_gdextension>`，幾乎總是會比 C# 或 "
"GDScript 快。然而，C++ 比 C# 或 GDScript 不容易使用，且開發速度較慢。"

msgid ""
"You can also use multiple languages within a single project, "
"with :ref:`cross-language scripting <doc_cross_language_scripting>`, or by "
"using GDExtension and scripting languages together. Be aware that doing so "
"comes with its own complications."
msgstr ""
"你也可以在單一專案內使用多種語言，透過 :ref:`跨語言腳本 "
"<doc_cross_language_scripting>`，或是同時使用 GDExtension 和腳本語言。請注"
"意，這樣做會帶來額外的複雜性。"

msgid "What 3D model formats does Godot support?"
msgstr "Godot 支援什麼格式的 3D 模型？"

msgid ""
"You can find detailed information on supported formats, how to export them "
"from your 3D modeling software, and how to import them for Godot in "
"the :ref:`doc_importing_3d_scenes` documentation."
msgstr ""
"你可以在 :ref:`doc_importing_3d_scenes` 文件中找到有關支援的格式、如何從 3D "
"建模軟體匯出以及如何匯入 Godot 的詳細資訊。"

msgid ""
"Will [insert closed SDK such as FMOD, GameWorks, etc.] be supported in Godot?"
msgstr "Godot 會支援 [自行帶入 FMOD, GameWorks 等閉源 SDK] 嗎？"

msgid ""
"The aim of Godot is to create a free and open source MIT-licensed engine "
"that is modular and extendable. There are no plans for the core engine "
"development community to support any third-party, closed-source/proprietary "
"SDKs, as integrating with these would go against Godot's ethos."
msgstr ""
"Godot 的目標是要建立一個模組化且可擴充的自由開源 MIT 引擎。目前，引擎開發核心"
"社群沒有計劃要支援任何第三方且閉源或專屬 (Proprietary) 的 SDK，因為整合這些 "
"SDK 有違 Godot 的初衷。"

msgid ""
"That said, because Godot is open source and modular, nothing prevents you or "
"anyone else interested in adding those libraries as a module and shipping "
"your game with them, as either open- or closed-source."
msgstr ""
"但其實，因為 Godot 開放原始碼且模組化，所以任何有興趣的人都可以將這些函式庫做"
"成模組，並隨著遊戲一起發行，不論開源或閉源。"

msgid ""
"To see how support for your SDK of choice could still be provided, look at "
"the Plugins question below."
msgstr "我們還是會告訴你你想要的 SDK 的支援程度，請參考下方關於外掛的問題。"

msgid ""
"If you know of a third-party SDK that is not supported by Godot but that "
"offers free and open source integration, consider starting the integration "
"work yourself. Godot is not owned by one person; it belongs to the "
"community, and it grows along with ambitious community contributors like you."
msgstr ""
"如果你知道什麼 Godot 不支援但卻是自由且開放原始碼整合的第三方 SDK，你可以考慮"
"自己整合。Godot 不屬於哪個人，而是屬於社群的，而這個社群會成長正是因為有想你"
"一樣野心勃勃的社群貢獻者。"

msgid "How can I extend Godot?"
msgstr "如何擴充 Godot？"

msgid ""
"For extending Godot, like creating Godot Editor plugins or adding support "
"for additional languages, take a look at :ref:`EditorPlugins "
"<doc_making_plugins>` and tool scripts."
msgstr ""
"如製作 Godot 編輯器外掛或是加上其他語言的支援等有關擴充 Godot 的內容，請參"
"考 :ref:`編輯器外掛 <doc_making_plugins>` 與工具腳本。"

msgid ""
"Also, see the official blog post on GDExtension, a way to develop native "
"extensions for Godot:"
msgstr ""
"另外，可以看看官方的部落格文章，瞭解 GDExtension ，一種為Godot開發原生擴充的"
"方法："

msgid ""
"`Introducing GDNative's successor, GDExtension <https://godotengine.org/"
"article/introducing-gd-extensions>`_"
msgstr ""
"`GDNative 的繼任者，GDExtension 來了！ <https://godotengine.org/article/"
"introducing-gd-extensions>`_"

msgid ""
"You can also take a look at the GDScript implementation, the Godot modules, "
"as well as the `Jolt physics engine integration <https://github.com/godot-"
"jolt/godot-jolt>`__ for Godot. This would be a good starting point to see "
"how another third-party library integrates with Godot."
msgstr ""
"您也可以看看 GDScript 的實作、Godot 的模組，以及 Godot 的 `Jolt 物理引擎整合 "
"<https://github.com/godot-jolt/godot-jolt>`__。這會是一個很好的起點，了解另一"
"個第三方函式庫是如何與 Godot 整合的。"

msgid ""
"How do I install the Godot editor on my system (for desktop integration)?"
msgstr "如何在我的作業系統上安裝 Godot 編輯器（進行桌面整合）？"

msgid ""
"Since you don't need to actually install Godot on your system to run it, "
"this means desktop integration is not performed automatically. There are two "
"ways to overcome this. You can install Godot from `Steam <https://"
"store.steampowered.com/app/404790/Godot_Engine/>`__ (all platforms), `Scoop "
"<https://scoop.sh/>`__ (Windows), `Homebrew <https://brew.sh/>`__ (macOS) or "
"`Flathub <https://flathub.org/apps/details/org.godotengine.Godot>`__ "
"(Linux). This will automatically perform the required steps for desktop "
"integration."
msgstr ""
"Godot 實際並不需要在你的作業系統上安裝就能執行，因此不會自動進行桌面整合。解"
"決方式有兩種。您可以透過`Steam <https://store.steampowered.com/app/404790/"
"Godot_Engine/>`__ （全平台）、`Scoop <https://scoop.sh/>`__ （Windows）、"
"`Homebrew <https://brew.sh/>`__（macOS）、`Flathub <https://flathub.org/apps/"
"details/org.godotengine.Godot>`__ （Linux）來安裝 Godot。 這樣就會自動執行桌"
"面整合所需的步驟。"

msgid ""
"Alternatively, you can manually perform the steps that an installer would do "
"for you:"
msgstr "另外您也可以手動執行安裝程式會幫您執行的步驟："

msgid ""
"Move the Godot executable to a stable location (i.e. outside of your "
"Downloads folder), so you don't accidentally move it and break the shortcut "
"in the future."
msgstr ""
"將 Godot 可執行檔案移動到一個穩定的位置（即在您的下載資料夾以外），這樣您就不"
"會不小心移動導致破壞快捷啟動方式。"

msgid "Right-click the Godot executable and choose **Create Shortcut**."
msgstr "右鍵點擊 Godot 可執行檔案，選擇 **建立快捷方式** 。"

msgid ""
"Move the created shortcut to ``%APPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``. This is the user-wide location for shortcuts that will "
"appear in the Start menu. You can also pin Godot in the task bar by right-"
"clicking the executable and choosing **Pin to Task Bar**."
msgstr ""
"將建立的快捷方式移動到``%LOCALAPPDATA%\\Microsoft\\Windows\\Start "
"Menu\\Programs``\\。 這是針對使用者的快捷方式存放位置，會顯示在開始選單中。 "
"你也可以將Godot固定在工作列上，按右鍵可執行文件並選擇\\ **固定至工作列**\\即"
"可。"

msgid ""
"Drag the extracted Godot application to ``/Applications/Godot.app``, then "
"drag it to the Dock if desired. Spotlight will be able to find Godot as long "
"as it's in ``/Applications`` or ``~/Applications``."
msgstr ""
"將解壓出的Godot應用拖拽至``/Applications/Godot.app``，如果需要的話還可以再拖"
"到Dock欄上。 只要Godot在``/Applications``或``~/Applications``中，“聚焦”就能找"
"到它。"

msgid "Linux"
msgstr "Linux"

msgid ""
"Move the Godot binary to a stable location (i.e. outside of your Downloads "
"folder), so you don't accidentally move it and break the shortcut in the "
"future."
msgstr ""
"移動 Godot 二進制檔至穩定的位置（也就是您的下載資料夾之外），這樣的話之後您就"
"可以避免不小心移動它並破壞捷徑。"

msgid ""
"Rename and move the Godot binary to a location present in your ``PATH`` "
"environment variable. This is typically ``/usr/local/bin/godot`` or ``/usr/"
"bin/godot``. Doing this requires administrator privileges, but this also "
"allows you to :ref:`run the Godot editor from a terminal "
"<doc_command_line_tutorial>` by entering ``godot``."
msgstr ""
"將 Godot 二進制檔案重新命名並移動到您的 ``PATH`` 環境變數中存在的路徑。這通常"
"是 ``/usr/local/bin/godot`` or ``/usr/bin/godot``。執行此操作需要系統管理員權"
"限，但這也允許您透過輸入 ``godot``，從終端機執行 Godot 編輯器（請參閱 :ref:`"
"從終端機執行 Godot 編輯器 <doc_command_line_tutorial>`）。"

msgid ""
"If you cannot move the Godot editor binary to a protected location, you can "
"keep the binary somewhere in your home directory, and modify the ``Path=`` "
"line in the ``.desktop`` file linked below to contain the full *absolute* "
"path to the Godot binary."
msgstr ""
"如果無法將 Godot 編輯器執行檔移到受保護的位置，你可以將執行檔放在你的家目錄中"
"的任何地方，然後修改下方連結的 ``.desktop`` 檔案中的 ``Path=`` 行，使其包含 "
"Godot 執行檔的完整*絕對*路徑。"

msgid ""
"Save `this .desktop file <https://raw.githubusercontent.com/godotengine/"
"godot/master/misc/dist/linux/org.godotengine.Godot.desktop>`__ to "
"``$HOME/.local/share/applications/``. If you have administrator privileges, "
"you can also save the ``.desktop`` file to ``/usr/local/share/applications`` "
"to make the shortcut available for all users."
msgstr ""
"儲存該 .desktop 檔案 <https://raw.githubusercontent.com/godotengine/godot/"
"3.x/misc/dist/linux/org.godotengine.Godot.desktop>`__ 至``$HOME/.local/share/"
"applications/``。如果有系統管理員權限，您也可以儲存 ``.desktop``檔至``/usr/"
"local/share/applications``讓所有使用者可以使用該捷徑。"

msgid "Is the Godot editor a portable application?"
msgstr "Godot 編輯器是個免安裝軟體嗎？"

msgid ""
"In its default configuration, Godot is *semi-portable*. Its executable can "
"run from any location (including non-writable locations) and never requires "
"administrator privileges."
msgstr ""
"在預設設定中，Godot是*半可攜式的*。其執行檔可以從任何位置（包括不可寫入的位"
"置）執行並且無需系統管理員權限。"

msgid ""
"However, configuration files will be written to the user-wide configuration "
"or data directory. This is usually a good approach, but this means "
"configuration files will not carry across machines if you copy the folder "
"containing the Godot executable. See :ref:`doc_data_paths` for more "
"information."
msgstr ""
"然而設定檔案將被寫入至使用者設定或資料目錄。這通常是好的方法，但這意味著如果"
"您複製含有Godot執行檔的資料夾，設定檔案將無法被攜帶至不同的機器。請參"
"閱 :ref:`doc_data_paths` 以獲得更多資訊。"

msgid ""
"If *true* portable operation is desired (e.g. for use on a USB stick), "
"follow the steps in :ref:`doc_data_paths_self_contained_mode`."
msgstr ""
"如果需要真正的「可攜式」操作（例如用於 USB 隨身碟），請依"
"照 :ref:`doc_data_paths_self_contained_mode` 中的步驟進行。"

msgid "Why does Godot prioritize Vulkan and OpenGL over Direct3D?"
msgstr "為什麼 Godot 優先採用 Vulkan 和 OpenGL 而不是 Direct3D？"

msgid ""
"Godot aims for cross-platform compatibility and open standards first and "
"foremost. OpenGL and Vulkan are the technologies that are both open and "
"available on (nearly) all platforms. Thanks to this design decision, a "
"project developed with Godot on Windows will run out of the box on Linux, "
"macOS, and more."
msgstr ""
"Godot 的目標是提供跨平台相容性與優先使用開放標準。OpenGL 與 Vulkan 這兩種技術"
"都是開放原始碼且 (幾乎) 可以在所有平台上使用。而得益於此一設計決定，使用 "
"Godot 在 Windows 上開發的專案可以直接在 Linux, macOS 等平台上執行。"

msgid ""
"While Vulkan and OpenGL remain our primary focus for their open standard and "
"cross-platform benefits, Godot 4.3 introduced experimental support for "
"Direct3D 12. This addition aims to enhance performance and compatibility on "
"platforms where Direct3D 12 is prevalent, such as Windows and Xbox. However, "
"Vulkan and OpenGL will continue as the default rendering drivers on all "
"platforms, including Windows."
msgstr ""
"雖然 Vulkan 和 OpenGL 由於其開放標準和跨平台優勢，仍然是我們主要專注的目標，"
"但 Godot 4.3 導入了實驗性的 Direct3D 12 支援。此新增旨在提升在 Direct3D 12 普"
"及的平台（例如 Windows 和 Xbox）上的效能和相容性。然而，Vulkan 和 OpenGL 將繼"
"續作為所有平台（包括 Windows）上的預設算繪驅動程式。"

msgid "Why does Godot aim to keep its core feature set small?"
msgstr "為什麼Godot致力於保持小型的核心功能集？"

msgid ""
"Godot intentionally does not include features that can be implemented by add-"
"ons unless they are used very often. One example of something not used often "
"is advanced artificial intelligence functionality."
msgstr ""
"Godot故意不包括可以由附加元件實作的功能，除非它們經常使用。例如進階人工智慧功"
"能。"

msgid "There are several reasons for this:"
msgstr "這有幾個原因："

msgid ""
"**Code maintenance and surface for bugs.** Every time we accept new code in "
"the Godot repository, existing contributors often take the responsibility of "
"maintaining it. Some contributors don't always stick around after getting "
"their code merged, which can make it difficult for us to maintain the code "
"in question. This can lead to poorly maintained features with bugs that are "
"never fixed. On top of that, the \"API surface\" that needs to be tested and "
"checked for regressions keeps increasing over time."
msgstr ""
"**程式碼維護和 bug 的介面。** 每次我們接受 Godot 儲存庫中的新程式碼時，現有的"
"貢獻者通常會承擔維護它的責任。一些貢獻者在合併程式碼後不一定會堅持下去，這有"
"可能讓我們難以維護有問題的程式碼，以致於功能維護不善，並出現從未修復的錯誤。"
"最重要的是，需要測試和檢查退步的“API介面”隨著時間的推移而不斷增加。"

msgid ""
"**Ease of contribution.** By keeping the codebase small and tidy, it can "
"remain fast and easy to compile from source. This makes it easier for new "
"contributors to get started with Godot, without requiring them to purchase "
"high-end hardware."
msgstr ""
"**易於貢獻。**，藉由保持程式碼庫小而整潔可以使編譯原始程式碼快速且容易。這使"
"得新的貢獻者更容易開始使用Godot，而無需購買高級的硬體。"

msgid ""
"**Keeping the binary size small for the editor.** Not everyone has a fast "
"Internet connection. Ensuring that everyone can download the Godot editor, "
"extract it and run it in less than 5 minutes makes Godot more accessible to "
"developers in all countries."
msgstr ""
"**保持編輯器二進制檔案的小巧。** 不是每個人都有快速的網路連線。確保每個人都可"
"以在 5 分鐘內下載、解壓縮並執行 Godot 編輯器，能讓 Godot 對所有國家的開發者更"
"友善。"

msgid ""
"**Keeping the binary size small for export templates.** This directly "
"impacts the size of projects exported with Godot. On mobile and web "
"platforms, keeping file sizes low is important to ensure fast installation "
"and loading on underpowered devices. Again, there are many countries where "
"high-speed Internet is not readily available. To add to this, strict data "
"usage caps are often in effect in those countries."
msgstr ""
"**為匯出範本保持較小的二進位檔大小。** 這直接影響 Godot 匯出專案的大小。在移"
"動裝置和 Web 平臺上，保持較小的檔案大小對於確保在功率不足的裝置上快速安裝和載"
"入至關重要。相同的，在許多國家中高速網路並不容易獲得。進一步來說，通常這些國"
"家有嚴格的資料使用上限。"

msgid ""
"For all the reasons above, we have to be selective of what we can accept as "
"core functionality in Godot. This is why we are aiming to move some core "
"functionality to officially supported add-ons in future versions of Godot. "
"In terms of binary size, this also has the advantage of making you pay only "
"for what you actually use in your project. (In the meantime, you "
"can :ref:`compile custom export templates with unused features disabled "
"<doc_optimizing_for_size>` to optimize the distribution size of your "
"project.)"
msgstr ""
"基於上述所有原因，我們必須謹慎選擇哪些功能可以納入 Godot 的核心功能。這也是為"
"什麼我們目標在未來的 Godot 版本中，將部分核心功能移至官方支援的擴充套件。就二"
"進制檔案大小而言，這樣做的好處是您只需要為專案中實際使用的功能付出代價。（在"
"此同時，您可以參閱 :ref:`編譯自訂匯出範本並停用未使用的功能 "
"<doc_optimizing_for_size>` 以優化專案的發布大小。）"

msgid ""
"How should assets be created to handle multiple resolutions and aspect "
"ratios?"
msgstr "要怎麼做出能應付多種解析度與長寬比的素材呢？"

msgid ""
"This question pops up often and it's probably thanks to the misunderstanding "
"created by Apple when they originally doubled the resolution of their "
"devices. It made people think that having the same assets in different "
"resolutions was a good idea, so many continued towards that path. That "
"originally worked to a point and only for Apple devices, but then several "
"Android and Apple devices with different resolutions and aspect ratios were "
"created, with a very wide range of sizes and DPIs."
msgstr ""
"這是一個很常見的問題，可能要感謝 Apple 公司，最開始 Apple 只是把裝置的解析度"
"變兩倍，讓大家以為可以直接在不同解析度下用同一個素材，所以許多人就一直這麼"
"做。剛開始這方法在 Apple 的裝置上還行，但不久後就開始出現各種有不同解析度與長"
"寬比的 Android 與 Apple 裝置，而且大小與 DPI 的差異還很大。"

msgid ""
"The most common and proper way to achieve this is to, instead, use a single "
"base resolution for the game and only handle different screen aspect ratios. "
"This is mostly needed for 2D, as in 3D, it's just a matter of camera "
"vertical or horizontal FOV."
msgstr ""
"達成此目的最常見且正確的方式是，改為遊戲使用單一基礎解析度，並僅處理不同的螢"
"幕長寬比。這在 2D 遊戲中尤其需要，因為在 3D 遊戲中，這只是調整攝影機垂直或水"
"平視野範圍的問題。"

msgid ""
"Choose a single base resolution for your game. Even if there are devices "
"that go up to 1440p and devices that go down to 400p, regular hardware "
"scaling in your device will take care of this at little or no performance "
"cost. The most common choices are either near 1080p (1920x1080) or 720p "
"(1280x720). Keep in mind the higher the resolution, the larger your assets, "
"the more memory they will take and the longer the time it will take for "
"loading."
msgstr ""
"為你的遊戲選擇一個基礎解析度。即使有裝置支援高達 1440p 的解析度，也有裝置只支"
"援 400p，裝置內建的硬體縮放功能也能輕鬆處理這些差異，幾乎不會造成效能損失。最"
"常見的選擇接近 1080p (1920x1080) 或 720p (1280x720)。請注意，解析度越高，你的"
"素材檔案也會越大，佔用的記憶體越多，載入時間也會更長。"

msgid ""
"Use the stretch options in Godot; canvas items stretching while keeping "
"aspect ratios works best. Check the :ref:`doc_multiple_resolutions` tutorial "
"on how to achieve this."
msgstr ""
"在 Godot 中使用延展選項；畫布項目在保持長寬比的同時延展效果最佳。請查"
"看 :ref:`doc_multiple_resolutions` 教學來了解如何達成此效果。"

msgid ""
"Determine a minimum resolution and then decide if you want your game to "
"stretch vertically or horizontally for different aspect ratios, or if there "
"is one aspect ratio and you want black bars to appear instead. This is also "
"explained in :ref:`doc_multiple_resolutions`."
msgstr ""
"確保最小解析度並決定在不同的長寬比下是要讓遊戲垂直還是水平伸縮，還是要在螢幕"
"旁邊顯示黑條。關於這點進一步的說明請參考 :ref:`doc_multiple_resolutions`。"

msgid ""
"For user interfaces, use the :ref:`anchoring <doc_size_and_anchors>` to "
"determine where controls should stay and move. If UIs are more complex, "
"consider learning about Containers."
msgstr ""
"使用者界面則請使用 :ref:`錨定 <doc_size_and_anchors>` 來判斷控制元件是要留在"
"原位還是要移動。如果是比較複雜的 UI，建議您瞭解有關容器 (Container) 的內容。"

msgid "And that's it! Your game should work in multiple resolutions."
msgstr "就這樣！現在遊戲應該可以在不同解析度底下運作。"

msgid "When is the next release of Godot out?"
msgstr "Godot 的下一個版本什麼時候發行？"

msgid ""
"When it's ready! See :ref:`doc_release_policy_when_is_next_release_out` for "
"more information."
msgstr ""
"準備好的時候！詳情請參閱 :ref:`doc_release_policy_when_is_next_release_out`。"

msgid "Which Godot version should I use for a new project?"
msgstr "新專案應該使用哪個版本的 Godot？"

msgid ""
"We recommend using Godot 4.x for new projects, but depending on the feature "
"set you need, it may be better to use 3.x instead. "
"See :ref:`doc_release_policy_which_version_should_i_use` for more "
"information."
msgstr ""
"我們建議在新專案中使用 Godot 4.x，但是取決於你所需的功能，也許使用 3.x 更好。"
"具體可參閱 :ref:`doc_release_policy_which_version_should_i_use`。"

msgid "Should I upgrade my project to use new Godot versions?"
msgstr "是否需要將我的專案升級到Godot的新版本？"

msgid ""
"Some new versions are safer to upgrade to than others. In general, whether "
"you should upgrade depends on your project's circumstances. "
"See :ref:`doc_release_policy_should_i_upgrade_my_project` for more "
"information."
msgstr ""
"新版本在某些方面更安全。一般來說，是否升級取決於你的專案環境。詳"
"見 :ref:`doc_release_policy_should_i_upgrade_my_project` 。"

msgid "Should I use the Forward+, Mobile, or Compatibility renderer?"
msgstr "我應該使用 Forward+、行動裝置，還是相容性算繪器？"

msgid ""
"You can find a detailed comparison of the renderers in :ref:`doc_renderers`."
msgstr "你可以在 :ref:`doc_renderers` 中找到算繪器的詳細比較。"

msgid "I would like to contribute! How can I get started?"
msgstr "我想參與貢獻！要從哪裡開始？"

msgid ""
"Awesome! As an open source project, Godot thrives off of the innovation and "
"the ambition of developers like you."
msgstr ""
"水啦！作為一個開源專案，Godot 沒有像你這種創新且野心勃勃的開發者可不行。"

msgid ""
"The best way to start contributing to Godot is by using it and reporting any "
"`issues <https://github.com/godotengine/godot/issues>`_ that you might "
"experience. A good bug report with clear reproduction steps helps your "
"fellow contributors fix bugs quickly and efficiently. You can also report "
"issues you find in the `online documentation <https://github.com/godotengine/"
"godot-docs/issues>`_."
msgstr ""
"開始為 Godot 做出貢獻的最佳方式是使用它並報告你可能遇到的任何 `問題 <https://"
"github.com/godotengine/godot/issues>`_ 。一份帶有清晰重現步驟的好 bug 報告可"
"以幫助其他貢獻者快速有效地修復 bug。你也可以在 `線上文件 <https://github.com/"
"godotengine/godot-docs/issues>`_ 中報告你發現的問題。"

msgid ""
"If you feel ready to submit your first PR, pick any issue that resonates "
"with you from one of the links above and try your hand at fixing it. You "
"will need to learn how to compile the engine from sources, or how to build "
"the documentation. You also need to get familiar with Git, a version control "
"system that Godot developers use."
msgstr ""
"如果您準備提交您的第一個 PR，請從上面的連結之一中選擇您感興趣的任何一個問題，"
"並嘗試解決它。您將需要學習如何從原始程式碼編譯引擎，或如何建構文件。您還需要"
"熟悉 Git，這是 Godot 開發人員使用的版本控制系統。"

msgid ""
"We explain how to work with the engine source, how to edit the "
"documentation, and what other ways to contribute are there in "
"our :ref:`documentation for contributors <doc_ways_to_contribute>`."
msgstr ""
"我們在 :ref:`貢獻者文件 <doc_ways_to_contribute>` 中解釋了如何使用引擎原始程"
"式碼、如何編輯文件以及其他形式的貢獻方式。"

msgid "I have a great idea for Godot. How can I share it?"
msgstr "我有個大膽的想法可以給 Godot。該分享去哪裡？"

msgid ""
"We are always looking for suggestions about how to improve the engine. User "
"feedback is the main driving force behind our decision-making process, and "
"limitations that you might face while working on your project are a great "
"data point for us when considering engine enhancements."
msgstr ""
"我們一直在尋找關於如何改進引擎的建議。使用者的回饋是我們決策過程背後的主要驅"
"動力，你在為自己的專案工作時可能遇到的限制是我們在考慮如何增強引擎時的重要依"
"據。"

msgid ""
"If you experience a usability problem or are missing a feature in the "
"current version of Godot, start by discussing it with our `community "
"<https://godotengine.org/community/>`_. There may be other, perhaps better, "
"ways to achieve the desired result that community members could suggest. And "
"you can learn if other users experience the same issue, and figure out a "
"good solution together."
msgstr ""
"如果您遇到可用性問題，或者目前版本的 Godot 缺少一項功能，請首先與我們的\\ `社"
"群 <https://godotengine.org/community/>`_\\ 討論。社群成員可能會提出其他更好"
"的方法來實作期望的結果。您可以瞭解其他使用者是否遇到過同樣的問題，並一起找出"
"一個好的解決方案。"

msgid ""
"If you come up with a well-defined idea for the engine, feel free to open a "
"`proposal issue <https://github.com/godotengine/godot-proposals/issues>`_. "
"Try to be specific and concrete while describing your problem and your "
"proposed solution — only actionable proposals can be considered. It is not "
"required, but if you want to implement it yourself, that's always "
"appreciated!"
msgstr ""
"如果你對引擎有一個明確的改進想法，請隨意打開一個 `提案 issue <https://"
"github.com/godotengine/godot-proposals/issues>`_ 。在描述您的問題和建議的解決"
"方案時，儘量具體和明確——只有可行的建議才會被考慮。這不是必須的，但如果您想自"
"己實作它，我們會非常感激！"

msgid ""
"If you only have a general idea without specific details, you can open a "
"`proposal discussion <https://github.com/godotengine/godot-proposals/"
"discussions>`_. These can be anything you want, and allow for a free-form "
"discussion in search of a solution. Once you find one, a proposal issue can "
"be opened."
msgstr ""
"如果你只有一個大致的想法，沒有具體的細節，你可以開啟一個 `提案討論 <https://"
"github.com/godotengine/godot-proposals/discussions>`_。討論可以包含您想要的任"
"何內容，並允許自由形式的討論以尋求解決方案。一旦找到了一個解決方案，就可以打"
"開提案 issue。"

msgid ""
"Please, read the `readme <https://github.com/godotengine/godot-proposals/"
"blob/master/README.md>`_ document before creating a proposal to learn more "
"about the process."
msgstr ""
"在建立提案之前，請閱讀 `讀我檔案 <https://github.com/godotengine/godot-"
"proposals/blob/master/README.md>`_，以瞭解有關該過程的更多資訊。"

msgid "Is it possible to use Godot to create non-game applications?"
msgstr "是否能用 Godot 建立非遊戲應用？"

msgid ""
"Yes! Godot features an extensive built-in UI system, and its small "
"distribution size can make it a suitable alternative to frameworks like "
"Electron or Qt."
msgstr ""
"是的！Godot 具有廣泛的內建 UI 系統，輕量化的特色可以使它成為 Electron 或 Qt "
"等框架的替代品。"

msgid ""
"When creating a non-game application, make sure to enable :ref:`low-"
"processor mode <class_ProjectSettings_property_application/run/"
"low_processor_mode>` in the Project Settings to decrease CPU and GPU usage."
msgstr ""
"當建立一個非遊戲的應用程式時，確保在專案設定中啟用 :ref:`節能處理器模式 "
"<class_ProjectSettings_property_application/run/low_processor_mode>` 以減少"
"CPU和GPU佔用。"

msgid ""
"Check out `Material Maker <https://github.com/RodZill4/material-maker>`__ "
"and `Pixelorama <https://github.com/Orama-Interactive/Pixelorama>`__ for "
"examples of open source applications made with Godot."
msgstr ""
"可以參考使用 Godot 開發的開源應用程式範例：`Material Maker <https://"
"github.com/RodZill4/material-maker>`__ 和 `Pixelorama <https://github.com/"
"Orama-Interactive/Pixelorama>`__。"

msgid "Is it possible to use Godot as a library?"
msgstr "可以把 Godot 當作函式庫來用嗎？"

msgid ""
"Godot is meant to be used with its editor. We recommend you give it a try, "
"as it will most likely save you time in the long term. There are no plans to "
"make Godot usable as a library, as it would make the rest of the engine more "
"convoluted and difficult to use for casual users."
msgstr ""
"Godot 是以使用編輯器為前提設計的。我們建議可以先試著用用編輯器，長期下來通常"
"可以節省很多時間。目前沒有計劃要讓 Godot 能作為函式庫使用，因為這樣會讓引擎其"
"他的功能變得很複雜，對一般的使用者來說難以使用。"

msgid ""
"If you want to use a rendering library, look into using an established "
"rendering engine instead. Keep in mind rendering engines usually have "
"smaller communities compared to Godot. This will make it more difficult to "
"find answers to your questions."
msgstr ""
"若您是想用算繪庫，建議改而使用其他正式的算繪引擎。請注意，算繪引擎的社群通常"
"與 Godot 相比來得小。這樣會讓尋找問題答案變得比較困難。"

msgid "What user interface toolkit does Godot use?"
msgstr "Godot 使用的使用者界面工具包是什麽？"

msgid ""
"Godot does not use a standard :abbr:`GUI (Graphical User Interface)` toolkit "
"like GTK, Qt or wxWidgets. Instead, Godot uses its own user interface "
"toolkit, rendered using OpenGL ES or Vulkan. This toolkit is exposed in the "
"form of Control nodes, which are used to render the editor (which is written "
"in C++). These Control nodes can also be used in projects from any scripting "
"language supported by Godot."
msgstr ""
"Godot 並未使用像 GTK、Qt 或 wxWidgets 這類標準的 :abbr:`GUI (圖形使用者介"
"面)` 工具組。相反地，Godot 使用的是自己開發的使用者介面工具組，透過 OpenGL "
"ES 或 Vulkan 進行算繪。這個工具組以 Control 節點的形式呈現，用於算繪編輯器"
"（編輯器是以 C++ 撰寫的）。這些 Control 節點也能在 Godot 支援的任何腳本語言專"
"案中使用。"

msgid ""
"This custom toolkit makes it possible to benefit from hardware acceleration "
"and have a consistent appearance across all platforms. On top of that, it "
"doesn't have to deal with the LGPL licensing caveats that come with GTK or "
"Qt. Lastly, this means Godot is \"eating its own dog food\" since the editor "
"itself is one of the most complex users of Godot's UI system."
msgstr ""
"這個定制的工具包使它能獲益於硬體加速，並在全平臺上擁有一致的外觀。 最重要的"
"是，它不必處理GTK或Qt所帶來的LGPL許可注意事項。 最後，這意味著Godot在“自產自"
"用”，因為編輯器本身就是Godot UI系統中最複雜的用例之一。"

msgid ""
"This custom UI toolkit :ref:`can't be used as a library "
"<doc_faq_use_godot_as_library>`, but you can still :ref:`use Godot to create "
"non-game applications by using the editor <doc_faq_non_game_applications>`."
msgstr ""
"這個自訂 UI 工具組 :ref:`無法作為函式庫使用 <doc_faq_use_godot_as_library>`，"
"但你仍然可以 :ref:`使用 Godot 編輯器來製作非遊戲應用程式 "
"<doc_faq_non_game_applications>`。"

msgid "Why does Godot use the SCons build system?"
msgstr "為什麼 Godot 使用 SCons 建構系統？"

msgid ""
"Godot uses the `SCons <https://www.scons.org/>`__ build system. There are no "
"plans to switch to a different build system in the near future. There are "
"many reasons why we have chosen SCons over other alternatives. For example:"
msgstr ""
"Godot 使用 `SCons <https://www.scons.org/>`__ 建構系統。近期沒有改用其他建構"
"系統的計畫。我們選擇 SCons 而不是其他建構系統的原因有很多，例如："

msgid ""
"Godot can be compiled for a dozen different platforms: all PC platforms, all "
"mobile platforms, many consoles, and WebAssembly."
msgstr ""
"Godot 可以編譯到數十種不同的平台上：所有 PC 平台、所有行動平台、各種遊戲主機"
"以及 WebAssembly。"

msgid ""
"Developers often need to compile for several of the platforms **at the same "
"time**, or even different targets of the same platform. They can't afford "
"reconfiguring and rebuilding the project each time. SCons can do this with "
"no sweat, without breaking the builds."
msgstr ""
"許多開發人員通常都需要 **同時** 為數個平台進行編譯，甚至需要為相同平台的不同"
"架構進行編譯。這些開發人員可沒精力每次都為專案重新設定並重新建置。SCons 則可"
"以輕鬆完成這項工作，且不會破壞建置的過程。"

msgid ""
"SCons will *never* break a build no matter how many changes, configurations, "
"additions, removals etc."
msgstr ""
"不論做了多少的更改、設定、新增、移除…等，SCons **永遠都不會** 把建置中斷。使"
"用 SCons 是，需要清理並重新建置的機率比你被雷劈的機率還要低。"

msgid ""
"Godot's build process is not simple. Several files are generated by code "
"(binders), others are parsed (shaders), and others need to offer "
"customization (:ref:`modules <doc_custom_modules_in_cpp>`). This requires "
"complex logic which is easier to write in an actual programming language "
"(like Python) rather than using a mostly macro-based language only meant for "
"building."
msgstr ""
"Godot 的建置過程並不簡單。有些檔案是由程式產生（binders），有些則需要解析（著"
"色器），還有一些需要提供自訂功能（:ref:`模組 <doc_custom_modules_in_cpp>`）。"
"這些都需要較複雜的邏輯，因此用真正的程式語言（如 Python）來撰寫會更合適，而不"
"是僅用以建置、以巨集為主的語言。"

msgid ""
"Godot's build process makes heavy use of cross-compiling tools. Each "
"platform has a specific detection process, and all these must be handled as "
"specific cases with special code written for each."
msgstr ""
"Godot 的建置流程大量使用跨平台編譯工具。每個平台都有其特定的偵測程序，所有這"
"些都必須作為個別案例處理，並針對每個平台撰寫專門的程式碼。"

msgid ""
"Please try to keep an open mind and get at least a little familiar with "
"SCons if you are planning to build Godot yourself."
msgstr ""
"所以，如果你想自己建置 Godot 的話，請儘量保持開放的態度，並至少稍微熟悉一下 "
"SCons。"

msgid "Why does Godot not use STL (Standard Template Library)?"
msgstr "為什麼Godot不使用STL(Standard Template Library)?"

msgid ""
"Like many other libraries (Qt as an example), Godot does not make use of STL "
"(with a few exceptions such as threading primitives). We believe STL is a "
"great general-purpose library, but we had special requirements for Godot."
msgstr ""
"如同其他的許多函式庫一樣（例如 Qt），Godot 沒有用到 STL (Standard Template "
"Library，標準樣板庫)。雖然 STL 是一個很厲害的通用函式庫，但 Godot 有一些特殊"
"需求。"

msgid ""
"STL templates create very large symbols, which results in huge debug "
"binaries. We use few templates with very short names instead."
msgstr ""
"STL 樣板會產生很大的符號 (Symbol)，進而讓偵錯用二進位檔的體積變大。我們用名稱"
"很短並、少量的樣板來代替。"

msgid ""
"Most of our containers cater to special needs, like Vector, which uses copy "
"on write and we use to pass data around, or the RID system, which requires "
"O(1) access time for performance. Likewise, our hash map implementations are "
"designed to integrate seamlessly with internal engine types."
msgstr ""
"大部分的容器都有特殊需求，例如 Vector 會需要使用寫入時複製 (Copy on Write) 來"
"傳遞資料；或是 RID 系統為了效能需要 O(1) 的存取時間。還有其他類似狀況，如我們"
"的雜湊表實作設計成能與引擎內部型別無縫整合。"

msgid ""
"Our containers have memory tracking built-in, which helps better track "
"memory usage."
msgstr "容器內建了記憶體追蹤，以改進記憶體使用狀況追蹤。"

msgid ""
"For large arrays, we use pooled memory, which can be mapped to either a "
"preallocated buffer or virtual memory."
msgstr ""
"在大型陣列中使用記憶體池，可以被對應到預分配緩衝區 (Preaoolocated Buffer) 或"
"是虛擬記憶體。"

msgid ""
"We use our custom String type, as the one provided by STL is too basic and "
"lacks proper internationalization support."
msgstr "使用自定字串型別，而 STL 提供的字串太簡陋且缺乏完善的在地化支援。"

msgid "Why does Godot not use exceptions?"
msgstr "Godot 怎麼不用例外 (Exception)？"

msgid ""
"We believe games should not crash, no matter what. If an unexpected "
"situation happens, Godot will print an error (which can be traced even to "
"script), but then it will try to recover as gracefully as possible and keep "
"going."
msgstr ""
"我們認為無論如何遊戲不應該 Crash。若發生了未預期的狀況，Godot 會輸出錯誤 (可"
"以被追蹤回腳本)，但接著會儘可能地修復並繼續執行。"

msgid ""
"Additionally, exceptions significantly increase the binary size for the "
"executable and result in increased compile times."
msgstr "另外，例外功能會導致二進位執行檔的大小大幅增加並減慢編譯速度。"

msgid "Does Godot use an ECS (Entity Component System)?"
msgstr "Godot使用 ECS（實體元件系統）嗎？"

msgid ""
"Godot does **not** use an ECS and relies on inheritance instead. While there "
"is no universally better approach, we found that using an inheritance-based "
"approach resulted in better usability while still being fast enough for most "
"use cases."
msgstr ""
"Godot不使用 ECS 而是依賴於繼承。雖然沒有一種普遍的更好的方法，我們發現使用繼"
"承的效率已經可以滿足於絕大多數使用場景。"

msgid ""
"That said, nothing prevents you from making use of composition in your "
"project by creating child Nodes with individual scripts. These nodes can "
"then be added and removed at runtime to dynamically add and remove behaviors."
msgstr ""
"話雖如此，您仍然可以透過在您的專案中建立帶有各自腳本的子節點來使用組合。這些"
"節點可以在執行時動態地新增和移除，以增加或移除行為。"

msgid ""
"More information about Godot's design choices can be found in `this article "
"<https://godotengine.org/article/why-isnt-godot-ecs-based-game-engine>`__."
msgstr ""
"可以在 `這篇文章 <https://godotengine.org/article/why-isnt-godot-ecs-based-"
"game-engine>`__ 中找到更多有關 Godot 設計抉擇的資訊。"

msgid "Why does Godot not force users to implement DOD (Data-Oriented Design)?"
msgstr "為什麼 Godot 不強制使用者實作 DOD（面向資料設計）？"

msgid ""
"While Godot internally attempts to use cache coherency as much as possible, "
"we believe users don't need to be forced to use DOD practices."
msgstr ""
"雖然 Godot 內部有儘可能地試著在很多吃效能的工作上都使用了快取一致性 (Cache "
"Coherency) 機制，但我們認為多數使用者都不是真的有需要強制使用 DoD (Data "
"oriented Design，資料導向設計)。"

msgid ""
"DOD is mostly a cache coherency optimization that can only provide "
"significant performance improvements when dealing with dozens of thousands "
"of objects which are processed every frame with little modification. That "
"is, if you are moving a few hundred sprites or enemies per frame, DOD won't "
"result in a meaningful improvement in performance. In such a case, you "
"should consider a different approach to optimization."
msgstr ""
"DoD 基本上就是一個快取一致性最佳化機制，只能讓處理成千上萬個物件 (每一影格都"
"需要執行一些少量的修改) 時能讓效能有顯著提升。舉個例子，若每一影格都需要移動"
"上百個 Sprite 或敵人時，DoD 就沒什麼用了，需要考慮另一種最佳化的方式。"

msgid ""
"The vast majority of games do not need this and Godot provides handy helpers "
"to do the job for most cases when you do."
msgstr ""
"絕大多數的遊戲都不需要 DoD。而且 Godot 對於大多數情況都提供了便利的工具來代"
"替。"

msgid ""
"If a game needs to process such a large amount of objects, our "
"recommendation is to use C++ and GDExtensions for performance-heavy tasks "
"and GDScript (or C#) for the rest of the game."
msgstr ""
"如果真的有遊戲需要處理這麼大量的物件，我們建議使用 C++ 與 GDNative 來處理吃效"
"能的部分，剩下的部分則使用 GDScript (或 C#)。"

msgid "How can I support Godot development or contribute?"
msgstr "要怎麼參與貢獻或支援 Godot 的開發呢？"

msgid "See :ref:`doc_ways_to_contribute`."
msgstr "請參考 :ref:`doc_ways_to_contribute`。"

msgid "Who is working on Godot? How can I contact you?"
msgstr "有誰在為 Godot 工作？如何聯路？"

msgid ""
"See the corresponding page on the `Godot website <https://godotengine.org/"
"contact>`_."
msgstr ""
"請參考 `Godot 網站 (英文) <https://godotengine.org/contact>`_ 上相應的頁面。"
