#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Node type customization using name suffixes"
msgstr "利用名稱後綴自訂節點型別"

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr "編輯完場景後，我們往往會需要在匯出後執行下列常見工作："

msgid "Adding collision detection to objects."
msgstr "為物件加上碰撞偵測。"

msgid "Setting objects as navigation meshes."
msgstr "將物件設為導覽網格。"

msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modeling)."
msgstr "刪除沒有在遊戲引擎中使用到的節點 (例如用於建模的特定燈光)。"

msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modeling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"為了簡化此工作流程，Godot 提供一些後綴，可以加到 3D 建模軟體中物件的名稱後"
"面。匯入時，Godot 將會偵測物件名稱中的後綴，並會自動執行動作。"

msgid ""
"All the suffixes described below can be used with ``-``, ``$``, and ``_`` "
"and are **case-insensitive**."
msgstr ""
"以下描述的所有後綴都可以與 ``-`` 、 ``$`` 和 ``_`` 一起使用，並且 **不區分大"
"小寫** 。"

msgid ""
"This is equivalent to enabling **Skip Import** for a node in the Advanced "
"Import Settings dialog."
msgstr "這相當於在“進階匯入設定”對話框中為節點啟用“跳過匯入”。"

msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "建立碰撞區塊（-col, -convcol, -colonly, -convcolonly）"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""
"``-col`` 只適用於 Mesh 物件。被偵測到時，匯入時會自動加一個靜態碰撞子節點，使"
"用相同幾何體。這會產生三角網格碰撞形狀，雖然慢但很精確，常用來做場景地形（但"
"有時可考慮 ``-colonly``，見下）。"

msgid ""
"The option ``-convcol`` will create a :ref:`class_ConvexPolygonShape3D` "
"instead of a :ref:`class_ConcavePolygonShape3D`. Unlike triangle meshes "
"which can be concave, a convex shape can only accurately represent a shape "
"that doesn't have any concave angles (a pyramid is convex, but a hollow box "
"is concave). Due to this, convex collision shapes are generally not suited "
"for level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""
"``-convcol`` 會建立 :ref:`class_ConvexPolygonShape3D` （凸型多邊形碰撞體），"
"不是 :ref:`class_ConcavePolygonShape3D` 。凸型碰撞體只能表示沒有凹角的形狀"
"（如金字塔是凸，空盒子是凹）。因此凸型碰撞通常不適合場景地形，但如果你的物件"
"夠簡單，凸型碰撞效能會比網格碰撞高得多。這適合中小型、需精確碰撞的動態物件。"

msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"然而，在這兩種情況，通常視覺幾何要拿來作為碰撞形體都太複雜且太不平滑了。這樣"
"會造成物理故障並不必要地降低引擎的速度。"

msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_StaticBody3D` collision "
"instead. This helps the visual mesh and actual collision to be separated."
msgstr ""
"``-colony`` 修飾詞就是為了解決這個問題，使用該後置詞會在匯入時將網格移除，並"
"改而建立 :ref:`class_StaticBody3D` 碰撞區域。如此便有助於分開視覺化網格與實際"
"的碰撞區域。"

msgid ""
"The option ``-convcolonly`` works in a similar way, but will create "
"a :ref:`class_ConvexPolygonShape3D` instead using convex decomposition."
msgstr ""
"使用 ``-convcolonly`` 選項會改而建立 :ref:`class_ConvexPolygonShape3D` 。"

msgid ""
"With Collada files, the option ``-colonly`` can also be used with Blender's "
"empty objects. On import, it will create a :ref:`class_StaticBody3D` with a "
"collision node as a child. The collision node will have one of a number of "
"predefined shapes, depending on Blender's empty draw type:"
msgstr ""
"``-colonly`` 也可與 Blender 的空體一起使用。匯入時，會建立一個有碰撞子節點"
"的 :ref:`class_StaticBody3D`。不同繪製型別的 Blender 空體所建立的碰撞節點會是"
"數種預定義形狀之一："

msgid "Choosing a draw type for an Empty on creation in Blender"
msgstr "在 Blender 中為 Empty 選擇建立時的繪製型別"

msgid "Single arrow will create a :ref:`class_SeparationRayShape3D`."
msgstr "單箭頭會建立 :ref:`class_SeparationRayShape3D` 。"

msgid "Cube will create a :ref:`class_BoxShape3D`."
msgstr "立方體會建立 :ref:`class_BoxShape3D` 。"

msgid "Image will create a :ref:`class_WorldBoundaryShape3D`."
msgstr "影像會建立 :ref:`class_WorldBoundaryShape3D` 。"

msgid ""
"Sphere (and the others not listed) will create a :ref:`class_SphereShape3D`."
msgstr "球體 (與其他未列出的形狀) 會建立 :ref:`class_SphereShape3D` 。"

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""
"如果可能的話， **請儘量使用初形碰撞區域** 來代替三角網格或凸型。初形通常有較"
"好的效能並較可靠。"

msgid ""
"For better visibility on Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them by changing **Edit "
"> Preferences > Themes > 3D Viewport > Empty**."
msgstr ""
"為了提高 Blender 編輯器中的可見性，可以開啟碰撞空體的「X-Ray」選項，並於 "
"**[使用者偏好設定] / [主題] / [3D 視圖] / [空體]** 中為空體設定不同的顏色。"

msgid ""
"If using Blender 2.79 or older, follow these steps instead: **User "
"Preferences > Themes > 3D View > Empty**."
msgstr ""
"如果使用 Blender 2.79 或更早版本，請依照下列步驟操作：**使用者首選項 > 主題 "
"> 3D視圖 > 空白**。"

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr "有關碰撞區域更全面的概覽，請參考 :ref:`doc_collision_shapes_3d` 。"

msgid "Create Occluder (-occ, -occonly)"
msgstr "建立遮擋剔除物件（-occ, -occonly）"

msgid ""
"If a mesh is imported with the ``-occ`` suffix an :ref:`class_occluder3D` "
"node will be created based on the geometry of the mesh, it does not replace "
"the mesh. A mesh node with the ``-occonly`` suffix will be converted to "
"an :ref:`class_occluder3D` on import."
msgstr ""
"如果匯入 Mesh 時帶有 ``-occ`` 字尾，將會根據 Mesh 的幾何體建立一"
"個 :ref:`class_occluder3D` 節點，它不會取代 Mesh。帶有 ``-occonly`` 字尾的 "
"Mesh 節點在匯入時將會轉換為 :ref:`class_occluder3D`。"

msgid "Create navigation (-navmesh)"
msgstr "建立尋路網格（-navmesh）"

msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"名稱帶 ``-navmesh`` 的 Mesh 節點會轉換為導覽用的 Navigation Mesh，原本的 "
"Mesh 物件會被移除。"

msgid "Create a VehicleBody (-vehicle)"
msgstr "建立 VehicleBody (-vehicle)"

msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to "
"a :ref:`class_VehicleBody3D` node."
msgstr ""
"有 ``-vehicle`` 後置詞的網格節點會被匯入為 :ref:`class_VehicleBody3D` 節點的"
"子節點。"

msgid "Create a VehicleWheel (-wheel)"
msgstr "建立 VehicleWheel (-wheel)"

msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to "
"a :ref:`class_VehicleWheel3D` node."
msgstr ""
"有 ``-wheel`` 後置詞的網格節點會被匯入為 :ref:`class_VehicleWheel3D` 節點的子"
"節點。"

msgid "Rigid Body (-rigid)"
msgstr "剛體 (-rigid)"

msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as "
"a :ref:`class_RigidBody3D`."
msgstr ""
"有 ``-rigid`` 後置詞的網格節點會被匯入為 :ref:`class_RigidBody3D` 節點的子節"
"點。"

msgid "Animation loop (-loop, -cycle)"
msgstr "動畫循環 (-loop, -cycle)"

msgid ""
"Animation clips in the source 3D file that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot :ref:`class_Animation` "
"with the loop flag set. **Unlike the other suffixes described above, this "
"does not require a hyphen.**"
msgstr ""
"在 COLLADA 文件中以 ``loop`` 或 ``cycle`` 結尾的動畫片段會被匯入為開啟循環旗"
"標的 Godot :ref:`class_Animation`。**於這裡介紹的其他後置詞不同，這個後置詞不"
"需要加減號**"

msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"在 Blender 中，需要使用 NLA 編輯器，並以 ``loop`` 或 ``cycle`` 前置或後置詞來"
"命名動作。"
