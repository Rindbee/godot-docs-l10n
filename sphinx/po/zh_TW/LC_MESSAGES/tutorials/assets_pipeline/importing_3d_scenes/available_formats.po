#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Available 3D formats"
msgstr "可用 3D 格式"

msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr "Godot 具備彈性且可設定的 3D 資源匯入器。"

msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D modeling software will be transferred as close as "
"possible."
msgstr ""
"Godot 以 **場景** 來作業。這表示，可以將您慣用的 3D DCC 中整個場景匯入轉換為"
"非常相近的結果。"

msgid "Godot supports the following 3D *scene file formats*:"
msgstr "Godot 支援下列 3D **場景檔案格式** ："

msgid ""
"glTF 2.0 **(recommended)**. Godot has support for both text (``.gltf``) and "
"binary (``.glb``) formats."
msgstr ""
"glTF 2.0（**推薦**）：Godot 支援純文字（``.gltf``）與二進位（``.glb``）兩種格"
"式。"

msgid ""
"``.blend`` (Blender). This works by calling Blender to export to glTF in a "
"transparent manner (requires Blender to be installed)."
msgstr ""
"``.blend`` (Blender)。這透過呼叫 Blender 以透明的方式匯出為 glTF 來實現 (需要"
"安裝 Blender)。"

msgid "DAE (COLLADA), an older format that is supported."
msgstr "DAE（COLLADA），較舊的格式，仍完整支援。"

msgid ""
"OBJ (Wavefront) format + their MTL material files. This is also supported, "
"but pretty limited given the format's limitations (no support for pivots, "
"skeletons, animations, UV2, PBR materials, ...)."
msgstr ""
"OBJ（Wavefront）格式及其 MTL 材質檔。Godot 支援，但格式功能有限（不支援 "
"pivot、骨架、動畫、UV2、PBR 材質等）。"

msgid ""
"Copy the scene file together with the textures and mesh data (if separate) "
"to the project repository, then Godot will do a full import when focusing "
"the editor window."
msgstr "只需要將場景檔與紋理一起複製到專案儲存庫中，Godot 就會完整匯入。"

msgid "Exporting glTF 2.0 files from Blender (recommended)"
msgstr "在 Blender 中匯出 glTF 2.0 檔案"

msgid "There are 3 ways to export glTF files from Blender:"
msgstr "有兩種方法可以為伺服器匯出專案："

msgid "As a glTF binary file (``.glb``)."
msgstr "匯出為 glTF 二進位檔（``.glb``）。"

msgid ""
"As a glTF text-based file with separate binary data and textures (``.gltf`` "
"file + ``.bin`` file + textures)."
msgstr "匯出為 glTF 純文字（``.gltf``）、外部二進位檔（``.bin``）及紋理檔案。"

msgid ""
"glTF binary files (``.glb``) are the smaller option. They include the mesh "
"and textures set up in Blender. When brought into Godot the textures are "
"part of the object's material file."
msgstr ""
"glTF 二進位檔（.glb）體積最小，包含所有網格與 Blender 設定好的紋理，匯入 "
"Godot 時紋理會內嵌在材質資源內。"

msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text-based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those, "
"glTF binary files are fine."
msgstr ""
"分開匯出 glTF 紋理的理由主要有兩個：一、方便用純文字檔追蹤場景內容改動（適合"
"用版本控制）；二、需要讓紋理檔獨立於場景檔外存放。若沒有上述需求，直接用二進"
"位 glb 最方便。"

msgid ""
"The glTF import process first loads the glTF file's data into an in-memory "
"GLTFState class. This data is then used to generate a Godot scene. When "
"importing files at runtime, this scene can be directly added to the tree. "
"The export process is the reverse of this, a Godot scene is converted to a "
"GLTFState class, then the glTF file is generated from that."
msgstr ""
"glTF 匯入流程會先將檔案資料載入 GLTFState 類別，再以此資料建立 Godot 場景。若"
"於執行階段匯入，該場景可直接加到場景樹。匯出則是反向操作，將 Godot 場景轉為 "
"GLTFState，再輸出為 glTF 檔。"

msgid ""
"Diagram explaining the runtime import and export process for glTF files in "
"Godot"
msgstr "說明 Godot 執行時 glTF 檔案匯入/匯出流程的圖解"

msgid ""
"When importing glTF files in the editor, there are two more steps. After "
"generating the Godot scene, the ResourceImporterScene class is used to apply "
"additional import settings, including settings you set through the Import "
"dock and the Advanced Import Settings dialog. This is then saved as a Godot "
"scene file, which is what gets used when you run/export your game."
msgstr ""
"編輯器匯入 glTF 時會多兩步：產生 Godot 場景後，ResourceImporterScene 會依據匯"
"入面板與進階匯入設定對話框套用其他設定，最後存為 Godot 場景檔，成為遊戲執行/"
"匯出時實際用到的場景。"

msgid "Diagram explaining the editor import process for glTF files in Godot"
msgstr "說明 Godot 編輯器匯入 glTF 檔案流程的圖解"

msgid "Exporting non-deforming bones anyway will lead to incorrect shading."
msgstr "無論如何匯出不變形的骨骼都會導致不正確的著色。"

msgid ""
"Blender versions older than 3.2 do not export emissive textures with the "
"glTF file. If your model uses one and you're using an older version of "
"Blender, it must be brought in separately."
msgstr ""
"Blender 匯出的 glTF 檔不包含放射紋理 (Emissive Texture)。若模型使用放射紋理，"
"則必須分開匯入。"

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""
"預設情況下，Blender 在材質上禁用背面剔除，匯出材質時配對其在 Blender 中的算繪"
"方式。這意味著 Godot 中的材質會將其剔除模式設定為 **Disabled**。這會降低性"
"能，因為背面將被算繪，即使它們不可見。要解決此問題，請在 Blender 的材質分頁中"
"啟用 **Backface Culling** ，然後再次將場景匯出為 glTF。"

msgid "Importing ``.blend`` files directly within Godot"
msgstr "直接在 Godot 中匯入 ``.blend`` 檔案"

msgid ""
"This functionality requires Blender 3.0 or later. For best results, we "
"recommend using Blender 3.5 or later, as it includes many fixes to the glTF "
"exporter."
msgstr "此功能需 Blender 3.0 以上，推薦 3.5 以上（glTF 匯出更穩定）。"

msgid ""
"It is **strongly** recommended to use an official Blender release downloaded "
"from blender.org, as opposed to a Linux distribution package or Flatpak. "
"This avoids any issues related to packaging, such as different library "
"versions that can cause incompatibilities or sandboxing restrictions."
msgstr ""
"**強烈建議** 使用從 blender.org 官方網站下載的 Blender，請勿用發行版套件或 "
"Flatpak，避免因函式庫版本不同、沙盒限制等導致匯入失敗或不相容。"

msgid ""
"The editor can directly import ``.blend`` files by calling `Blender <https://"
"www.blender.org/>`__'s glTF export functionality in a transparent manner."
msgstr ""
"編輯器可以透過以透明的方式呼叫 `Blender <https://www.blender.org/>`__ 的 "
"glTF 匯出功能，直接匯入 .blend 檔案。"

msgid ""
"This allows you to iterate on your 3D scenes faster, as you can save the "
"scene in Blender, alt-tab back to Godot then see your changes immediately. "
"When working with version control, this is also more efficient as you no "
"longer need to commit a copy of the exported glTF file to version control."
msgstr ""
"這可讓您更快地迭代 3D 場景，因為您可以將場景儲存在 Blender 中，按 alt-tab 返"
"回 Godot，然後立即查看您的變更。使用版本控制時，這也更有效，因為您不再需要將"
"匯出的 glTF 檔案的副本提交到版本控制。"

msgid ""
"To use ``.blend`` import, you must install Blender before opening the Godot "
"editor (if opening a project that already contains ``.blend`` files). If you "
"keep Blender installed at its default location, Godot should be able to "
"detect its path automatically. If this isn't the case, configure the path to "
"the Blender executable in the Editor Settings (**Filesystem > Import > "
"Blender > Blender Path**)."
msgstr ""
"若要使用 .blend 匯入，您必須在開啟 Godot 編輯器之前安裝 Blender (如果要開啟一"
"個已包含 .blend 檔案的專案)。如果您將 Blender 安裝在其預設位置，Godot 應該能"
"夠自動偵測其路徑。如果情況不是這樣，請在 **編輯器設定** 中，於 **檔案系統 > "
"匯入 > Blender > Blender 路徑** 設定 Blender 執行檔的路徑。"

msgid ""
"If you keep ``.blend`` files within your project folder but don't want them "
"to be imported by Godot, disable **Filesystem > Import > Blender > Enabled** "
"in the advanced Project Settings."
msgstr ""
"如果您將 .blend 檔案保留在專案資料夾中，但不希望 Godot 匯入它們，請在進階專案"
"設定中停用 **檔案系統 > 匯入 > Blender > 啟用**。"

msgid ""
"The ``.blend`` import process converts to glTF first, so it still uses "
"Godot's glTF import code. Therefore, the ``.blend`` import process is the "
"same as the glTF import process, but with an extra step at the beginning."
msgstr ""
"``.blend`` 匯入流程會先轉為 glTF，因此會用到 Godot 的 glTF 匯入程式碼。本質"
"上 ``.blend`` 匯入和 glTF 流程一致，只是多了開頭的轉檔步驟。"

msgid "Diagram explaining the import process for Blender files in Godot"
msgstr "說明 Godot 匯入 Blender 檔案流程的圖解"

msgid ""
"When working in a team, keep in mind using ``.blend`` files in your project "
"will require *all* team members to have Blender installed. While Blender is "
"a free download, this may add friction when working on the project. "
"``.blend`` import is also not available on the Android and web editors, as "
"these platforms can't call external programs."
msgstr ""
"若團隊專案中要用 .blend 原檔，請確保每位成員本機都有安裝 Blender。雖然 "
"Blender 免費但會增加開發摩擦；此外，Android 與 Web 版 Godot 無法用 .blend 匯"
"入，因為這些平台不能呼叫外部程式。"

msgid ""
"If this is problematic, consider using glTF scenes exported from Blender "
"instead."
msgstr "如果這有問題，請考慮使用從 Blender 匯出的 glTF 場景。"

msgid "Exporting DAE files from Blender"
msgstr "在 Blender 中匯出 DAE 檔"

msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and shouldn't be used as-is. However, scenes exported "
"with the built-in Collada support may still work for simple scenes without "
"animation."
msgstr ""
"Blender 內建 COLLADA 支援，但用起來不是很適合遊戲引擎，所以也不建議直接拿來"
"用。"

msgid ""
"For complex scenes or scenes that contain animations it is highly recommend "
"to use glTF instead."
msgstr "若場景較為複雜或包含動畫，強烈建議改用 glTF 格式。"

msgid "Importing OBJ files in Godot"
msgstr "於 Godot 3.0+ 匯入素材"

msgid ""
"OBJ is one of the simplest 3D formats out there, so Godot should be able to "
"import most OBJ files successfully. However, OBJ is also a very limited "
"format: it doesn't support skinning, animation, UV2 or PBR materials."
msgstr ""
"OBJ 是最簡單的 3D 格式之一，因此 Godot 應該能夠成功匯入大多數 OBJ 檔案。然"
"而，OBJ 也是一種非常有限的格式：它不支援蒙皮、動畫、UV2 或 PBR 材質。"

msgid "There are 2 ways to use OBJ meshes in Godot:"
msgstr "在 Godot 中使用 OBJ 網格有 2 種方式："

msgid ""
"Load them directly in a MeshInstance3D node, or any other property that "
"expects as mesh (such as GPUParticles3D). This is the default mode."
msgstr ""
"直接將它們載入到 MeshInstance3D 節點或任何其他需要網格的屬性（例如 "
"GPUParticles3D）中。這是預設模式。"

msgid ""
"Change their import mode to **OBJ as Scene** in the Import dock then restart "
"the editor. This allows you to use the same import options as glTF or "
"Collada scenes, such as unwrapping UV2 on import "
"(for :ref:`doc_using_lightmap_gi`)."
msgstr ""
"在匯入塢中將其匯入模式變更為 **OBJ 作為場景**，然後重新啟動編輯器。這允許您使"
"用與 glTF 或 Collada 場景相同的匯入選項，例如在匯入時展開 UV2（對"
"於 :ref:`doc_using_lightmap_gi`）。"

msgid ""
"Blender 3.4 and later can export RGB vertex colors in OBJ files (this is a "
"nonstandard extension of the OBJ format). Godot is able to import those "
"vertex colors, but they will not be displayed on the material unless you "
"enable **Vertex Color > Use As Albedo** on the material."
msgstr ""
"Blender 3.4 及更新版本可以將 RGB 頂點顏色匯出儲存在 OBJ 檔案中 (這是 OBJ 格式"
"的非標準擴充)。Godot 可以匯入那些頂點顏色，但它們將不會顯示在材質上，除非您啟"
"用材質上的 **頂點顏色 > 用作反照率**。"

msgid ""
"Vertex colors from OBJ meshes keep their original color space once imported "
"(sRGB/linear), but their brightness is clamped to 1.0 (they can't be "
"overbright)."
msgstr ""
"OBJ 網格的頂點顏色在匯入後會保留其原始色彩空間（sRGB/線性），但其亮度被限制"
"為 1.0（它們不能過亮）。"

msgid "Importing FBX files in Godot"
msgstr "於 Godot 3.0+ 匯入素材"

msgid ""
"By default any FBX file added to a Godot project in Godot 4.3 or later will "
"use the ufbx import method. Any file that was was added to a project in a "
"previous version, such as 4.2, will continue to be imported via the FBX2glTF "
"method unless you go into that files import settings, and change the "
"importer to  ``ufbx``."
msgstr ""
"預設下，Godot 4.3 及以後版本加入專案的 FBX 檔案都會使用 ufbx 匯入法。若在較舊"
"版本（如 4.2）專案中加入的 FBX，則仍會用 FBX2glTF 匯入，除非你於匯入設定中手"
"動改為 ``ufbx``。"

msgid ""
"If you keep ``.fbx`` files within your project folder but don't want them to "
"be imported by Godot, disable **Filesystem > Import > FBX > Enabled** in the "
"advanced Project Settings."
msgstr ""
"如果您將 .fbx 檔案保留在專案資料夾中，但不希望 Godot 匯入它們，請在進階專案設"
"定中停用 **檔案系統 > 匯入 > FBX > 啟用**。"

msgid ""
"If you want to setup the FBX2glTF workflow, which is generally not recommend "
"unless you have a specific reason to use it, you need to download the "
"`FBX2glTF <https://github.com/godotengine/FBX2glTF>`__ executable, then "
"specify the path to that executable in the editor settings under "
"**Filesystem > Import > FBX > FBX2glTFPath**"
msgstr ""
"若你確實有特殊需求需用舊版 FBX2glTF 工作流程，請下載 `FBX2glTF <https://"
"github.com/godotengine/FBX2glTF>`__ 執行檔，並於編輯器設定的 **Filesystem > "
"Import > FBX > FBX2glTFPath** 指定路徑"

msgid ""
"The FBX2glTF import process converts to glTF first, so it still uses Godot's "
"glTF import code. Therefore, the FBX import process is the same as the glTF "
"import process, but with an extra step at the beginning."
msgstr ""
"FBX2glTF 匯入流程會先轉為 glTF，因此最終仍會用 Godot 的 glTF 匯入程式。也就是"
"說，FBX 匯入流程和 glTF 匯入相同，只是多一道轉檔。"

msgid ""
"Diagram explaining the import process for FBX files in Godot  via FBX2glTF"
msgstr "說明 Godot 透過 FBX2glTF 匯入 FBX 檔案流程的圖解"

msgid ""
"The full installation process for using FBX2glTF in Godot is described on "
"the `FBX import page of the Godot website <https://godotengine.org/fbx-"
"import>`__."
msgstr ""
"完整的 FBX2glTF 設定流程請參考 Godot 官方網站的「FBX 匯入」頁面：<https://"
"godotengine.org/fbx-import>。"
