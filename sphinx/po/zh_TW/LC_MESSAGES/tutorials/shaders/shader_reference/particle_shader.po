#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Particle shaders"
msgstr "粒子著色器"

msgid ""
"Particle shaders are a special type of shader that runs before the object is "
"drawn. They are used for calculating material properties such as color, "
"position, and rotation. They are drawn with any regular material for "
"CanvasItem or Spatial, depending on whether they are 2D or 3D."
msgstr ""
"粒子著色器是一種特殊類型的著色器，在物件被繪製前執行。它們用來計算材質屬性，"
"例如顏色、位置與旋轉。根據粒子是 2D 還是 3D，會與 CanvasItem 或 Spatial 的一"
"般材質一同繪製。"

msgid ""
"Particle shaders are unique because they are not used to draw the object "
"itself; they are used to calculate particle properties, which are then used "
"by a :ref:`CanvasItem<doc_canvas_item_shader>` "
"or :ref:`Spatial<doc_spatial_shader>` shader. They contain two processor "
"functions: ``start()`` and ``process()``."
msgstr ""
"粒子著色器很特別，因為它們不是用來繪製物件本身，而是用來計算粒子的屬性，這些"
"屬性會被 :ref:`CanvasItem<doc_canvas_item_shader>` "
"或 :ref:`Spatial<doc_spatial_shader>` 著色器使用。粒子著色器包含兩個處理函"
"式：``start()`` 和 ``process()``。"

msgid ""
"Unlike other shader types, particle shaders keep the data that was output "
"the previous frame. Therefore, particle shaders can be used for complex "
"effects that take place over multiple frames."
msgstr ""
"與其他著色器類型不同，粒子著色器會保留上一幀輸出的資料。因此，粒子著色器能用"
"來實現需跨多幀運算的複雜特效。"

msgid ""
"Particle shaders are only available with GPU-based particle nodes "
"(:ref:`class_GPUParticles2D` and :ref:`class_GPUParticles3D`)."
msgstr ""
"粒子著色器僅能搭配 GPU 型粒子節點（:ref:`class_GPUParticles2D` "
"與 :ref:`class_GPUParticles3D`）使用。"

msgid ""
"CPU-based particle nodes (:ref:`class_CPUParticles2D` "
"and :ref:`class_CPUParticles3D`) are *rendered* on the GPU (which means they "
"can use custom CanvasItem or Spatial shaders), but their motion is "
"*simulated* on the CPU."
msgstr ""
"CPU 型粒子節點（:ref:`class_CPUParticles2D` 與 :ref:`class_CPUParticles3D`）"
"會在 GPU 上進行算繪（可使用自訂 CanvasItem 或 Spatial 著色器），但其運動是在 "
"CPU 上模擬的。"

msgid "Render modes"
msgstr "算繪模式"

msgid "Render mode"
msgstr "算繪模式"

msgid "Description"
msgstr "說明"

msgid "**keep_data**"
msgstr "**keep_data**"

msgid "Do not clear previous data on restart."
msgstr "重新啟動時不清除先前的資料。"

msgid "**disable_force**"
msgstr "**disable_force**"

msgid "Disable attractor force."
msgstr "停用吸引力。"

msgid "**disable_velocity**"
msgstr "**disable_velocity**"

msgid "Ignore ``VELOCITY`` value."
msgstr "忽略 ``VELOCITY`` 值。"

msgid "**collision_use_scale**"
msgstr "**collision_use_scale**"

msgid "Scale the particle's size for collisions."
msgstr "於碰撞時套用粒子的縮放大小。"

msgid "Built-ins"
msgstr "內建變數"

msgid ""
"Values marked as ``in`` are read-only. Values marked as ``out`` can "
"optionally be written to and will not necessarily contain sensible values. "
"Values marked as ``inout`` provide a sensible default value, and can "
"optionally be written to. Samplers cannot be written to so they are not "
"marked."
msgstr ""
"標記為 ``in`` 的值為唯讀。標記為 ``out`` 的值可以選擇寫入，且不一定包含合理的"
"預設值。標記為 ``inout`` 的值則有預設值，可以選擇寫入。取樣器（sampler）無法"
"寫入，因此未標註。"

msgid "Global built-ins"
msgstr "全域內建變數"

msgid "Global built-ins are available everywhere, including custom functions."
msgstr "全域內建變數可於任何地方使用，包括自訂函式。"

msgid "Built-in"
msgstr "內建變數"

msgid "in float **TIME**"
msgstr "in float **TIME**"

msgid ""
"Global time since the engine has started, in seconds. It repeats after every "
"``3,600`` seconds (which can  be changed with "
"the :ref:`rollover<class_ProjectSettings_property_rendering/limits/time/"
"time_rollover_secs>` setting). It's affected "
"by :ref:`time_scale<class_Engine_property_time_scale>` but not by pausing. "
"If you need a ``TIME`` variable that is not affected by time scale, add your "
"own :ref:`global shader uniform<doc_shading_language_global_uniforms>` and "
"update it each frame."
msgstr ""
"自引擎啟動以來的全域時間（秒）。每 3,600 秒會重設（可透"
"過 :ref:`rollover<class_ProjectSettings_property_rendering/limits/time/"
"time_rollover_secs>` 設定變更）。該值會受"
"到 :ref:`time_scale<class_Engine_property_time_scale>` 影響，但不受暫停影響。"
"如果你需要不受 time_scale 影響的 ``TIME``，請自訂 :ref:`全域著色器 "
"uniform<doc_shading_language_global_uniforms>` 並於每幀更新。"

msgid "in float **PI**"
msgstr "in float **PI**"

msgid ""
"A ``PI`` constant (``3.141592``). A ratio of a circle's circumference to its "
"diameter and amount of radians in half turn."
msgstr "常數 PI（3.141592），為圓周長與直徑的比值，也是一半圈的弧度數。"

msgid "in float **TAU**"
msgstr "in float **TAU**"

msgid ""
"A ``TAU`` constant (``6.283185``). An equivalent of ``PI * 2`` and amount of "
"radians in full turn."
msgstr "常數 TAU（6.283185），等於 PI * 2，也是一整圈的弧度數。"

msgid "in float **E**"
msgstr "in float **E**"

msgid ""
"An ``E`` constant (``2.718281``). Euler's number and a base of the natural "
"logarithm."
msgstr "常數 E（2.718281），歐拉數，也是自然對數的底數。"

msgid "Start and Process built-ins"
msgstr "Start 與 Process 內建變數"

msgid ""
"These properties can be accessed from both the ``start()`` and ``process()`` "
"functions."
msgstr "這些屬性可於 ``start()`` 與 ``process()`` 兩個函式中存取。"

msgid "Function"
msgstr "函式"

msgid "in float **LIFETIME**"
msgstr "in float **LIFETIME**"

msgid "Particle lifetime."
msgstr "粒子的存活時間。"

msgid "in float **DELTA**"
msgstr "in float **DELTA**"

msgid "Delta process time."
msgstr "每幀處理的時間差。"

msgid "in uint **NUMBER**"
msgstr "in uint **NUMBER**"

msgid "Unique number since emission start."
msgstr "自發射開始以來的唯一編號。"

msgid "in uint **INDEX**"
msgstr "in uint **INDEX**"

msgid "Particle index (from total particles)."
msgstr "粒子索引（來自所有粒子編號）。"

msgid "in mat4 **EMISSION_TRANSFORM**"
msgstr "in mat4 **EMISSION_TRANSFORM**"

msgid "Emitter transform (used for non-local systems)."
msgstr "發射器的變換（用於非本地座標系統）。"

msgid "in uint **RANDOM_SEED**"
msgstr "in uint **RANDOM_SEED**"

msgid "Random seed used as base for random."
msgstr "作為隨機產生基礎的亂數種子。"

msgid "inout bool **ACTIVE**"
msgstr "inout bool **ACTIVE**"

msgid "``true`` when the particle is active, can be set ``false``."
msgstr "當粒子啟用時為 ``true``，可設為 ``false`` 以禁用。"

msgid "inout vec4 **COLOR**"
msgstr "inout vec4 **COLOR**"

msgid ""
"Particle color, can be written to and accessed in mesh's vertex function."
msgstr "粒子的顏色，可寫入與於網格的頂點函式中存取。"

msgid "inout vec3 **VELOCITY**"
msgstr "inout vec3 **VELOCITY**"

msgid "Particle velocity, can be modified."
msgstr "粒子的速度，可修改。"

msgid "inout mat4 **TRANSFORM**"
msgstr "inout mat4 **TRANSFORM**"

msgid "Particle transform."
msgstr "粒子的變換。"

msgid "inout vec4 **CUSTOM**"
msgstr "inout vec4 **CUSTOM**"

msgid ""
"Custom particle data. Accessible from shader of mesh as ``INSTANCE_CUSTOM``."
msgstr "自訂粒子資料。可在網格的著色器中以 ``INSTANCE_CUSTOM`` 讀取。"

msgid "inout float **MASS**"
msgstr "inout float **MASS**"

msgid ""
"Particle mass, intended to be used with attractors. Equals ``1.0`` by "
"default."
msgstr "粒子的質量，通常搭配吸引器使用。預設值為 ``1.0``。"

msgid "in vec4 **USERDATAX**"
msgstr "in vec4 **USERDATAX**"

msgid ""
"Vector that enables the integration of supplementary user-defined data into "
"the particle process shader. ``USERDATAX`` are six built-ins identified by "
"number, ``X`` can be numbers between 1 and 6, for example ``USERDATA3``."
msgstr ""
"可將額外的自訂資料整合進入粒子處理著色器的向量。``USERDATAX`` 有六個內建變"
"數，以數字區分，``X`` 可為 1 到 6，例如 ``USERDATA3``。"

msgid "in uint **FLAG_EMIT_POSITION**"
msgstr "in uint **FLAG_EMIT_POSITION**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle()`` function to "
"assign a position to a new particle's transform."
msgstr ""
"用於 ``emit_subparticle()`` 函式最後一個參數的旗標，用來為新粒子的變換指定位"
"置。"

msgid "in uint **FLAG_EMIT_ROT_SCALE**"
msgstr "in uint **FLAG_EMIT_ROT_SCALE**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle()`` function to "
"assign the rotation and scale to a new particle's transform."
msgstr ""
"用於 ``emit_subparticle()`` 函式最後一個參數的旗標，用來為新粒子的變換指定旋"
"轉與縮放。"

msgid "in uint **FLAG_EMIT_VELOCITY**"
msgstr "in uint **FLAG_EMIT_VELOCITY**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle()`` function to "
"assign a velocity to a new particle."
msgstr ""
"用於 ``emit_subparticle()`` 函式最後一個參數的旗標，用來為新粒子指定速度。"

msgid "in uint **FLAG_EMIT_COLOR**"
msgstr "in uint **FLAG_EMIT_COLOR**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle()`` function to "
"assign a color to a new particle."
msgstr ""
"用於 ``emit_subparticle()`` 函式最後一個參數的旗標，用來為新粒子指定顏色。"

msgid "in uint **FLAG_EMIT_CUSTOM**"
msgstr "in uint **FLAG_EMIT_CUSTOM**"

msgid ""
"A flag for using on the last argument of ``emit_subparticle()`` function to "
"assign a custom data vector to a new particle."
msgstr ""
"用於 ``emit_subparticle()`` 函式最後一個參數的旗標，用來為新粒子指定自訂資料"
"向量。"

msgid "in vec3 **EMITTER_VELOCITY**"
msgstr "in vec3 **EMITTER_VELOCITY**"

msgid ""
"Velocity of the :ref:`Particles2D<class_GPUParticles2D>` "
"(:ref:`3D<class_GPUParticles3D>`) node."
msgstr ""
":ref:`Particles2D<class_GPUParticles2D>` "
"或 :ref:`Particles3D<class_GPUParticles3D>` 節點的發射器速度。"

msgid "in float **INTERPOLATE_TO_END**"
msgstr "in float **INTERPOLATE_TO_END**"

msgid ""
"Value of :ref:`interp_to_end<class_GPUParticles2D_property_interp_to_end>` "
"(:ref:`3D<class_GPUParticles3D_property_interp_to_end>`) property of "
"Particles node."
msgstr ""
"Particles 節點屬"
"性 :ref:`interp_to_end<class_GPUParticles2D_property_interp_to_end>` "
"（或 :ref:`3D<class_GPUParticles3D_property_interp_to_end>`）的數值。"

msgid "in uint **AMOUNT_RATIO**"
msgstr "in uint **AMOUNT_RATIO**"

msgid ""
"Value of :ref:`amount_ratio<class_GPUParticles2D_property_amount_ratio>` "
"(:ref:`3D<class_GPUParticles3D_property_amount_ratio>`) property of "
"Particles node."
msgstr ""
"Particles 節點屬"
"性 :ref:`amount_ratio<class_GPUParticles2D_property_amount_ratio>` "
"（或 :ref:`3D<class_GPUParticles3D_property_amount_ratio>`）的數值。"

msgid ""
"In order to use the ``COLOR`` variable in a StandardMaterial3D, set "
"``vertex_color_use_as_albedo`` to ``true``. In a ShaderMaterial, access it "
"with the ``COLOR`` variable."
msgstr ""
"若要在 StandardMaterial3D 中使用 ``COLOR`` 變數，請將 "
"``vertex_color_use_as_albedo`` 設為 ``true``。在 ShaderMaterial 中，直接以 "
"``COLOR`` 變數存取。"

msgid "Start built-ins"
msgstr "Start 內建變數"

msgid "in bool **RESTART_POSITION**"
msgstr "in bool **RESTART_POSITION**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom position "
"(i.e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_POSITION`` flag)."
msgstr ""
"若粒子被重新啟動，或未指定自訂位置時（即這個粒子是由 ``emit_subparticle()`` "
"且未帶 ``FLAG_EMIT_POSITION`` 旗標產生），則為 ``true``。"

msgid "in bool **RESTART_ROT_SCALE**"
msgstr "in bool **RESTART_ROT_SCALE**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom rotation or "
"scale (i.e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_ROT_SCALE`` flag)."
msgstr ""
"若粒子被重新啟動，或未指定自訂旋轉／縮放時（即這個粒子是由 "
"``emit_subparticle()`` 且未帶 ``FLAG_EMIT_ROT_SCALE`` 旗標產生），則為 "
"``true``。"

msgid "in bool **RESTART_VELOCITY**"
msgstr "in bool **RESTART_VELOCITY**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom velocity "
"(i.e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_VELOCITY`` flag)."
msgstr ""
"若粒子被重新啟動，或未指定自訂速度時（即這個粒子是由 ``emit_subparticle()`` "
"且未帶 ``FLAG_EMIT_VELOCITY`` 旗標產生），則為 ``true``。"

msgid "in bool **RESTART_COLOR**"
msgstr "in bool **RESTART_COLOR**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom color (i.e. "
"this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_COLOR`` flag)."
msgstr ""
"若粒子被重新啟動，或未指定自訂顏色時（即這個粒子是由 ``emit_subparticle()`` "
"且未帶 ``FLAG_EMIT_COLOR`` 旗標產生），則為 ``true``。"

msgid "in bool **RESTART_CUSTOM**"
msgstr "in bool **RESTART_CUSTOM**"

msgid ""
"``true`` if particle is restarted, or emitted without a custom property "
"(i.e. this particle was created by ``emit_subparticle()`` without the "
"``FLAG_EMIT_CUSTOM`` flag)."
msgstr ""
"若粒子被重新啟動，或未指定自訂屬性時（即這個粒子是由 ``emit_subparticle()`` "
"且未帶 ``FLAG_EMIT_CUSTOM`` 旗標產生），則為 ``true``。"

msgid "Process built-ins"
msgstr "Process 內建變數"

msgid "in bool **RESTART**"
msgstr "in bool **RESTART**"

msgid "``true`` if the current process frame is first for the particle."
msgstr "若目前處理的影格是該粒子的第一幀，則為 ``true``。"

msgid "in bool **COLLIDED**"
msgstr "in bool **COLLIDED**"

msgid "``true`` when the particle has collided with a particle collider."
msgstr "當粒子與碰撞器發生碰撞時為 ``true``。"

msgid "in vec3 **COLLISION_NORMAL**"
msgstr "in vec3 **COLLISION_NORMAL**"

msgid ""
"A normal of the last collision. If there is no collision detected it is "
"equal to ``(0.0, 0.0, 0.0)``."
msgstr "上一次碰撞的法線。如果沒有偵測到碰撞，則為 ``(0.0, 0.0, 0.0)``。"

msgid "in float **COLLISION_DEPTH**"
msgstr "in float **COLLISION_DEPTH**"

msgid ""
"A length of normal of the last collision. If there is no collision detected "
"it is equal to ``0.0``."
msgstr "上一次碰撞的法線長度。如果沒有偵測到碰撞，則為 ``0.0``。"

msgid "in vec3 **ATTRACTOR_FORCE**"
msgstr "in vec3 **ATTRACTOR_FORCE**"

msgid "A combined force of the attractors at the moment on that particle."
msgstr "該粒子當前受到的所有吸引器合力。"

msgid "Process functions"
msgstr "Process 函式"

msgid ""
"``emit_subparticle()`` is currently the only custom function supported by "
"particles shaders. It allows users to add a new particle with specified "
"parameters from a sub-emitter. The newly created particle will only use the "
"properties that match the ``flags`` parameter. For example, the following "
"code will emit a particle with a specified position, velocity, and color, "
"but unspecified rotation, scale, and custom value:"
msgstr ""
"目前粒子著色器僅支援 ``emit_subparticle()`` 這個自訂函式。它可讓你從子發射器"
"新增一個帶指定參數的新粒子。新建的粒子只會使用符合 ``flags`` 旗標的屬性。例"
"如，下列程式碼會發射一個有指定位置、速度及顏色的粒子，但不指定旋轉、縮放與自"
"訂值："

msgid ""
"bool **emit_subparticle** (mat4 xform, vec3 velocity, vec4 color, vec4 "
"custom, uint flags)"
msgstr ""
"bool **emit_subparticle** (mat4 xform, vec3 velocity, vec4 color, vec4 "
"custom, uint flags)"

msgid "Emits a particle from a sub-emitter."
msgstr "從子發射器發射一個粒子。"
