#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using VisualShaders"
msgstr "使用視覺化著色器"

msgid "VisualShaders are the visual alternative for creating shaders."
msgstr "VisualShader 是建立著色器的視覺化替代方式。"

msgid ""
"As shaders are inherently linked to visuals, the graph-based approach with "
"previews of textures, materials, etc. offers a lot of additional convenience "
"compared to purely script-based shaders. On the other hand, VisualShaders do "
"not expose all features of the shader script and using both in parallel "
"might be necessary for specific effects."
msgstr ""
"由於著色器本質上與視覺效果密切相關，圖形化方式（可預覽紋理、材質等）比純腳本"
"著色器提供了許多額外便利。但另一方面，VisualShader 並未涵蓋著色器腳本的所有功"
"能，某些特殊效果可能需要兩者並用。"

msgid ""
"If you are not familiar with shaders, start by "
"reading :ref:`doc_introduction_to_shaders`."
msgstr ""
"如果你對著色器還不熟悉，建議先閱讀 :ref:`doc_introduction_to_shaders`。"

msgid "Creating a VisualShader"
msgstr "建立視覺化著色器"

msgid ""
"VisualShaders can be created in any :ref:`class_ShaderMaterial`. To begin "
"using VisualShaders, create a new ``ShaderMaterial`` in an object of your "
"choice."
msgstr ""
"VisualShader 可以在任何 :ref:`class_ShaderMaterial` 中建立。要開始使用 "
"VisualShader，請在你選擇的物件上建立一個新的 ``ShaderMaterial``。"

msgid "Then assign a :ref:`class_Shader` resource to the ``Shader`` property."
msgstr "然後將一個 :ref:`class_Shader` 資源指派給 ``Shader`` 屬性。"

msgid ""
"Click on the new ``Shader`` resource and the Create Shader dialog will open "
"automatically. Change the Type option to :ref:`class_VisualShader` in the "
"dropdown, then give it a name."
msgstr ""
"點擊新的 ``Shader`` 資源，將會自動開啟建立著色器的對話框。請在下拉選單中將類"
"型改為 :ref:`class_VisualShader`，然後為它命名。"

msgid ""
"Click on the visual shader you just created to open the Shader Editor. The "
"layout of the Shader Editor comprises four parts, a file list on the right, "
"the upper toolbar, the graph itself, and a material preview on the right "
"that can be toggled off"
msgstr ""
"點擊你剛建立的 VisualShader 資源，會開啟著色器編輯器。編輯器介面包含四個部"
"分：右側檔案清單、上方工具列、圖形視窗本體，以及可開關的右側材質預覽"

msgid "From left to right in the toolbar:"
msgstr "工具列由左至右功能如下："

msgid ""
"The ``Add Node`` button displays a popup menu to let you add nodes to the "
"shader graph."
msgstr "「新增節點」按鈕會顯示一個彈出選單，讓你在著色器圖中加入節點。"

msgid ""
"The drop-down menu is the shader type: Vertex, Fragment and Light. Like for "
"script shaders, it defines what built-in nodes will be available."
msgstr ""
"下拉選單用來選擇著色器型態：頂點、片段、光源。就像腳本著色器一樣，這會決定可"
"用哪些內建節點。"

msgid ""
"The following buttons and number input control the zooming level, grid "
"snapping and distance between grid lines (in pixels)."
msgstr ""
"接下來的按鈕和數值輸入欄用於調整縮放比例、網格對齊，以及格線間距（像素）。"

msgid ""
"The toggle controls if the graph minimap in the bottom right of the editor "
"is visible or not."
msgstr "此切換開關可控制右下角小地圖的顯示或隱藏。"

msgid ""
"The automatically arrange selected nodes button will try to organize any "
"nodes you have selected as efficiently and cleanly as possible."
msgstr "自動排列已選節點按鈕會嘗試將你選取的節點自動排整齊，讓圖表更易閱讀。"

msgid ""
"The Manage Varyings button opens a dropdown that lets you add or remove a "
"varying."
msgstr "「管理 varying」按鈕會開啟下拉選單，讓你新增或移除 varying 變數。"

msgid ""
"The show generated code button shows shader code corresponding to your graph."
msgstr "「顯示產生程式碼」按鈕會顯示與圖形對應的著色器程式碼。"

msgid "The last icon toggles the material preview on or off."
msgstr "最後一個圖示為材質預覽的顯示開關。"

msgid ""
"Although VisualShaders do not require coding, they share the same logic with "
"script shaders. It is advised to learn the basics of both to have a good "
"understanding of the shading pipeline."
msgstr ""
"VisualShader 雖然不需要寫程式碼，但其運作邏輯和腳本著色器是一致的。建議兩者都"
"學習基本概念，才能深入理解著色流程。"

msgid ""
"The visual shader graph is converted to a script shader behind the scene, "
"and you can see this code by pressing the last button in the toolbar. This "
"can be convenient to understand what a given node does and how to reproduce "
"it in scripts."
msgstr ""
"視覺化著色器圖會在後台轉換為腳本著色器，你可以按下工具列最後一個按鈕來查看這"
"段程式碼。這有助於了解節點實際做了什麼，以及如何用腳本重現。"

msgid "Using the Visual Shader Editor"
msgstr "使用視覺化著色器編輯器"

msgid ""
"By default, every new ``VisualShader`` will have an output node. Every node "
"connection ends at one of the output node's sockets. A node is the basic "
"unit to create your shader. To add a new node, click on the ``Add Node`` "
"button on the upper left corner or right click on any empty location in the "
"graph, and a menu will pop up."
msgstr ""
"預設情況下，每個新的 VisualShader 都會有一個輸出節點。所有節點連接最終都會接"
"到輸出節點的端口上。節點是建立著色器的基本單元。要新增節點，可以點左上角「新"
"增節點」按鈕，或在圖上空白處按右鍵，都會彈出選單。"

msgid "This popup has the following properties:"
msgstr "這個快顯視窗有以下特性："

msgid ""
"If you right-click on the graph, this menu will be called at the cursor "
"position and the created node, in that case, will also be placed under that "
"position; otherwise, it will be created at the graph's center."
msgstr ""
"如果你在圖上右鍵點擊，選單會在游標位置彈出，新增的節點也會放在那個位置；否則"
"節點會放在圖形中央。"

msgid ""
"It can be resized horizontally and vertically allowing more content to be "
"shown. Size transform and tree content position are saved between the calls, "
"so if you suddenly closed the popup you can easily restore its previous "
"state."
msgstr ""
"這個快顯視窗可以水平或垂直調整大小，方便顯示更多內容。尺寸與樹狀內容位置會被"
"記住，下次開啟時可以恢復到之前狀態。"

msgid ""
"The ``Expand All`` and ``Collapse All`` options in the drop-down option menu "
"can be used to easily list the available nodes."
msgstr "下拉選單中的「全部展開」和「全部收合」可快速檢視所有可用節點。"

msgid "You can also drag and drop nodes from the popup onto the graph."
msgstr "你也可以將快顯視窗的節點直接拖曳到圖形上。"

msgid ""
"While the popup has nodes sorted in categories, it can seem overwhelming at "
"first. Try to add some of the nodes, plug them in the output socket and "
"observe what happens."
msgstr ""
"快顯視窗內的節點以類別分類，一開始可能會覺得種類繁多。可以先嘗試新增幾個節"
"點，接到輸出端口，看看會發生什麼變化。"

msgid ""
"When connecting any ``scalar`` output to a ``vector`` input, all components "
"of the vector will take the value of the scalar."
msgstr "將「純量」輸出連接到「向量」輸入時，向量所有分量都會取這個純量值。"

msgid ""
"When connecting any ``vector`` output to a ``scalar`` input, the value of "
"the scalar will be the average of the vector's components."
msgstr "將「向量」輸出連接到「純量」輸入時，純量值會是向量各分量的平均值。"

msgid "Visual Shader node interface"
msgstr "視覺化著色器節點介面"

msgid ""
"Visual shader nodes have input and output ports. The input ports are located "
"on the left side of the node, and output ports are located on the right side "
"of the node."
msgstr ""
"視覺化著色器節點擁有輸入與輸出端口。輸入端口在節點左側，輸出端口在右側。"

msgid "These ports are colored to differentiate type of port:"
msgstr "端口有不同顏色以區分資料型態："

msgid "Port types"
msgstr "端口型態"

msgid "Type"
msgstr "型別"

msgid "Color"
msgstr "顏色"

msgid "Description"
msgstr "說明"

msgid "Example"
msgstr "範例"

msgid "Scalar"
msgstr "純量"

msgid "Gray"
msgstr "灰色"

msgid "Scalar is a single value."
msgstr "純量代表單一數值。"

msgid "|scalar|"
msgstr "|scalar|"

msgid "scalar"
msgstr "純量"

msgid "Vector"
msgstr "向量"

msgid "Purple"
msgstr "紫色"

msgid "Vector is a set of values."
msgstr "向量為一組數值。"

msgid "|vector|"
msgstr "|vector|"

msgid "vector"
msgstr "向量"

msgid "Boolean"
msgstr "布林"

msgid "Green"
msgstr "綠色"

msgid "On or off, true or false."
msgstr "開或關，真或假。"

msgid "|boolean|"
msgstr "|boolean|"

msgid "boolean"
msgstr "布林值"

msgid "Transform"
msgstr "變換"

msgid "Pink"
msgstr "粉紅色"

msgid "A matrix, usually used to transform vertices."
msgstr "矩陣，通常用於變換頂點座標。"

msgid "|transform|"
msgstr "|transform|"

msgid "transform"
msgstr "矩陣"

msgid "Sampler"
msgstr "取樣器"

msgid "Orange"
msgstr "橘色"

msgid "A texture sampler. It can be used to sample textures."
msgstr "材質取樣器，可用來取樣紋理。"

msgid "|sampler|"
msgstr "|sampler|"

msgid "sampler"
msgstr "取樣器"

msgid ""
"All of the types are used in the calculations of vertices, fragments, and "
"lights in the shader. For example: matrix multiplication, vector addition, "
"or scalar division."
msgstr ""
"這些型態都會用於著色器中頂點、片段和光照的計算，例如矩陣乘法、向量加法或純量"
"除法。"

msgid "There are other types but these are the main ones."
msgstr "還有其他型態，但以上是主要常用的。"

msgid "Visual Shader nodes"
msgstr "視覺化著色器節點"

msgid ""
"Below are some special nodes that are worth knowing about. The list is not "
"exhaustive and might be expanded with more nodes and examples."
msgstr ""
"以下介紹一些值得認識的特殊節點。此列表非全列，未來會增加更多節點與範例。"

msgid "Expression node"
msgstr "Expression 節點"

msgid ""
"The ``Expression`` node allows you to write Godot Shading Language (GLSL-"
"like) expressions inside your visual shaders. The node has buttons to add "
"any amount of required input and output ports and can be resized. You can "
"also set up the name and type of each port. The expression you have entered "
"will apply immediately to the material (once the focus leaves the expression "
"text box). Any parsing or compilation errors will be printed to the Output "
"tab. The outputs are initialized to their zero value by default. The node is "
"located under the Special tab and can be used in all shader modes."
msgstr ""
"「Expression」節點允許你在視覺化著色器中直接撰寫 Godot 著色語言（類 GLSL）運"
"算式。你可以新增任意數量的輸入和輸出端口，並可自行調整節點大小，也能設定每個"
"端口的名稱與型別。輸入的運算式會在你離開文字框後立即套用到材質上。如有語法或"
"編譯錯誤，會顯示在「輸出」分頁。所有輸出預設會初始化為零值。此節點在「特殊」"
"分頁下，所有著色器模式皆可使用。"

msgid ""
"The possibilities of this node are almost limitless – you can write complex "
"procedures, and use all the power of text-based shaders, such as loops, the "
"``discard`` keyword, extended types, etc. For example:"
msgstr ""
"這個節點的功能幾乎沒有限制——你可以撰寫複雜的運算流程，並善用文字著色器支援的"
"所有功能，例如迴圈、`discard` 關鍵字、進階型別等。舉例："

msgid "Reroute node"
msgstr "Reroute 節點"

msgid ""
"The ``Reroute`` node is used purely for organizational purposes. In a "
"complicated shader with many nodes you may find that the paths between nodes "
"can make things hard to read. Reroute, as its name suggests, allows you to "
"adjust the path between nodes to make things easier to read. You can even "
"have multiple reroute nodes for a single path, which can be used to make "
"right angles."
msgstr ""
"「Reroute」節點主要用於整理線路。當著色器圖變得複雜時，節點間的連線可能會讓版"
"面難以閱讀。Reroute 節點可協助你調整連線路徑，使圖形更清楚。你也可以在單一路"
"徑上插入多個 Reroute 節點，方便做直角轉折等。"

msgid ""
"To move a reroute node move your mouse cursor above it, and grab the handle "
"that appears."
msgstr "將滑鼠游標移到 Reroute 節點上，點按出現的把手即可移動節點。"

msgid "Fresnel node"
msgstr "Fresnel 節點"

msgid ""
"The ``Fresnel`` node is designed to accept normal and view vectors and "
"produces a scalar which is the saturated dot product between them. "
"Additionally, you can setup the inversion and the power of equation. The "
"``Fresnel`` node is great for adding a rim-like lighting effect to objects."
msgstr ""
"Fresnel 節點用於接收法線向量與視角向量，並產生它們的飽和點積（純量）。你也可"
"以設定反相與冪次。Fresnel 節點常用來為物件加上邊緣光效果。"

msgid "Boolean node"
msgstr "Boolean 節點"

msgid ""
"The ``Boolean`` node can be converted to ``Scalar`` or ``Vector`` to "
"represent ``0`` or ``1`` and ``(0, 0, 0)`` or ``(1, 1, 1)`` respectively. "
"This property can be used to enable or disable some effect parts with one "
"click."
msgstr ""
"Boolean 節點可轉換為純量（0 或 1）或向量（(0,0,0) 或 (1,1,1)）。這特性可用來"
"一鍵啟用或關閉某些效果區塊。"

msgid "If node"
msgstr "If 節點"

msgid ""
"The ``If`` node allows you to setup a vector which will be returned the "
"result of the comparison between ``a`` and ``b``. There are three vectors "
"which can be returned: ``a == b`` (in that case the tolerance parameter is "
"provided as a comparison threshold – by default it is equal to the minimal "
"value, i.e. ``0.00001``), ``a > b`` and ``a < b``."
msgstr ""
"If 節點讓你設定根據比較結果回傳的向量。可回傳三種情況：`a == b`（此時容差參數"
"為比較門檻，預設值為最小值 0.00001）、`a > b` 及 `a < b`。"

msgid "Switch node"
msgstr "Switch 節點"

msgid ""
"The ``Switch`` node returns a vector if the boolean condition is ``true`` or "
"``false``. ``Boolean`` was introduced above. If you want to convert a vector "
"to a true boolean, all components of the vector should be non-zero."
msgstr ""
"Switch 節點會根據布林條件（真或假）回傳不同的向量。前述已說明 Boolean 節點。"
"若欲將向量轉換為真正的布林值，則向量所有分量都需非零。"

msgid "Mesh Emitter"
msgstr "網格發射器"

msgid ""
"The ``Mesh Emitter`` node is used for emitting particles from mesh vertices. "
"This is only available for shaders that are in ``Particles`` mode."
msgstr ""
"Mesh Emitter 節點用於從網格頂點發射粒子。此節點僅適用於「粒子」模式下的著色"
"器。"

msgid ""
"Keep in mind that not all 3D objects are mesh files. a glTF file can't be "
"dragged and dropped into the graph. However, you can create an inherited "
"scene from it, save the mesh in that scene as it's own file, and use that."
msgstr ""
"請注意，並非所有 3D 物件都是網格檔案。glTF 檔無法直接拖曳到圖形中。你可以從 "
"glTF 建立繼承場景，將該場景中的網格另存為獨立檔案後再使用。"

msgid ""
"You can also drag and drop obj files into the graph editor to add the node "
"for that specific mesh, other mesh files will not work for this."
msgstr ""
"你也可以將 obj 檔案直接拖曳進圖形編輯器，這樣會自動加入該網格的節點，但其他類"
"型網格檔案則不支援此功能。"
