#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Visual Shader plugins"
msgstr "視覺化著色器外掛"

msgid ""
"Visual Shader plugins are used to create custom :ref:`class_VisualShader` "
"nodes in GDScript."
msgstr ""
"視覺化著色器外掛用於在 GDScript 中建立自訂的 :ref:`class_VisualShader` 節點。"

msgid ""
"The creation process is different from usual editor plugins. You do not need "
"to create a ``plugin.cfg`` file to register it; instead, create and save a "
"script file and it will be ready to use, provided the custom node is "
"registered with ``class_name``."
msgstr ""
"建立流程與一般的編輯器外掛不同。你不需要建立 ``plugin.cfg`` 檔來註冊，只要建"
"立並儲存腳本檔案，並透過 ``class_name`` 註冊自訂節點後，即可直接使用。"

msgid ""
"This short tutorial will explain how to make a Perlin-3D noise node "
"(original code from this `GPU noise shaders plugin <https://github.com/curly-"
"brace/Godot-3.0-Noise-Shaders/blob/master/assets/gpu_noise_shaders/"
"classic_perlin3d.tres>`_."
msgstr ""
"這篇簡短的教學將說明如何建立一個 Perlin-3D 雜訊節點（原始碼來自 `GPU Noise "
"Shaders 外掛 <https://github.com/curly-brace/Godot-3.0-Noise-Shaders/blob/"
"master/assets/gpu_noise_shaders/classic_perlin3d.tres>`_）。"

msgid ""
"Create a Sprite2D and assign a :ref:`class_ShaderMaterial` to its material "
"slot:"
msgstr ""
"建立一個 Sprite2D，然後將 :ref:`class_ShaderMaterial` 指定到其材質插槽："

msgid "Assign :ref:`class_VisualShader` to the shader slot of the material:"
msgstr "將 :ref:`class_VisualShader` 指定到該材質的著色器插槽："

msgid ""
"Don't forget to change its mode to \"CanvasItem\" (if you are using a "
"Sprite2D):"
msgstr "別忘了把其模式設為「CanvasItem」（如果你使用的是 Sprite2D）："

msgid ""
"Create a script which derives from :ref:`class_VisualShaderNodeCustom`. This "
"is all you need to initialize your plugin."
msgstr ""
"建立一個繼承自 :ref:`class_VisualShaderNodeCustom` 的腳本。這就是初始化外掛所"
"需的全部步驟。"

msgid ""
"Save it and open the Visual Shader. You should see your new node type within "
"the member's dialog under the Addons category (if you can't see your new "
"node, try restarting the editor):"
msgstr ""
"儲存後打開視覺化著色器。你應該能在「外掛」分類下的節點選單中看到你新增的節點"
"類型（若沒有顯示，請試著重新啟動編輯器）："

msgid "Place it on a graph and connect the required ports:"
msgstr "將它放到節點圖上並連接所需的端口："

msgid ""
"That is everything you need to do, as you can see it is easy to create your "
"own custom VisualShader nodes!"
msgstr "這就是所有步驟，如你所見，建立自訂的 VisualShader 節點非常簡單！"
