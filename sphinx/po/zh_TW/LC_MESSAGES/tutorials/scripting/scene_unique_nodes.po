#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Scene Unique Nodes"
msgstr "場景唯一節點"

msgid "Introduction"
msgstr "前言"

msgid ""
"Using ``get_node()`` to reference nodes from a script can sometimes be "
"fragile. If you move a button in a UI scene from one panel to another, the "
"button's node path changes, and if a script uses ``get_node()`` with a hard-"
"coded node path, the script will not be able to find the button anymore."
msgstr ""
"使用 ``get_node()`` 在腳本中引用節點有時會很脆弱。如果你將 UI 場景中的按鈕從"
"一個面板移動到另一個面板，按鈕的節點路徑就會改變。如果腳本使用硬編碼的節點路"
"徑來呼叫 ``get_node()``，那麼腳本將無法再找到該按鈕。"

msgid ""
"In situations like this, the node can be turned into a scene unique node to "
"avoid having to update the script every time the node's path is changed."
msgstr ""
"在這種情況下，可以將該節點設為場景唯一節點，這樣每次節點路徑改變時，就不用再"
"去更新腳本。"

msgid "Creation and usage"
msgstr "建立與使用"

msgid "There are two ways to create a scene unique node."
msgstr "有兩種方式可以建立場景唯一節點。"

msgid ""
"In the Scene tree dock, right-click on a node and select **Access as Unique "
"Name** in the context menu."
msgstr ""
"在場景樹面板中，於節點上點擊右鍵，並在右鍵選單選擇 **作為唯一名稱存取**。"

msgid ""
"After selecting the option, the node will now have a percent symbol (**%**) "
"next to its name in the scene tree:"
msgstr "選擇此選項後，該節點在場景樹中的名稱旁邊會出現百分號（**%**）："

msgid ""
"You can also do this while renaming the node by adding \"%\" to the "
"beginning of the name. Once you confirm, the percent symbol will appear next "
"to its name."
msgstr ""
"你也可以在重新命名節點時，於名稱開頭加上「%」來達成。確認後，名稱旁邊會自動顯"
"示百分號。"

msgid ""
"You can now use the node in your script. For example, you can reference it "
"with a ``get_node()`` method call by typing the % symbol, followed by the "
"node's name:"
msgstr ""
"現在你可以在腳本中使用這個節點。例如，你可以在呼叫 ``get_node()`` 時，輸入 % "
"符號接著節點名稱來引用它："

msgid "Same-scene limitation"
msgstr "同場景限制"

msgid ""
"A scene unique node can only be retrieved by a node inside the same scene. "
"To demonstrate this limitation, consider this example **Player** scene that "
"instances a **Sword** scene:"
msgstr ""
"場景唯一節點只能被同一個場景內的節點取得。為了說明此限制，以下是一個 "
"**Player** 場景實例化 **Sword** 場景的範例："

msgid ""
"Here are the results of ``get_node()`` calls inside the **Player** script:"
msgstr "以下是在 **Player** 腳本內呼叫 ``get_node()`` 的結果："

msgid "``get_node(\"%Eyes\")`` returns the **Eyes** node."
msgstr "``get_node(\"%Eyes\")`` 會回傳 **Eyes** 節點。"

msgid "``get_node(\"%Hilt\")`` returns ``null``."
msgstr "``get_node(\"%Hilt\")`` 會回傳 ``null``。"

msgid ""
"These are the results of ``get_node()`` calls inside the **Sword** script:"
msgstr "以下是在 **Sword** 腳本內呼叫 ``get_node()`` 的結果："

msgid "``get_node(\"%Eyes\")`` returns ``null``."
msgstr "``get_node(\"%Eyes\")`` 會回傳 ``null``。"

msgid "``get_node(\"%Hilt\")`` returns the **Hilt** node."
msgstr "``get_node(\"%Hilt\")`` 會回傳 **Hilt** 節點。"

msgid ""
"If a script has access to a node in another scene, it can call "
"``get_node()`` on that node to get scene unique nodes from that node's "
"scene. This also works in a node path, which avoids multiple ``get_node()`` "
"calls. Here are two ways to get the **Hilt** node from the **Player** script "
"using scene unique nodes:"
msgstr ""
"如果腳本能取得另一個場景的節點，就可以在該節點上呼叫 ``get_node()``，以取得該"
"場景中的場景唯一節點。這同樣適用於節點路徑，可以避免重複呼叫 ``get_node()``。"
"以下是在 **Player** 腳本中使用場景唯一節點取得 **Hilt** 節點的兩種寫法："

msgid ""
"``get_node(\"Hand/Sword\").get_node(\"%Hilt\")`` returns the **Hilt** node."
msgstr ""
"``get_node(\"Hand/Sword\").get_node(\"%Hilt\")`` 會回傳 **Hilt** 節點。"

msgid "``get_node(\"Hand/Sword/%Hilt\")`` also returns the **Hilt** node."
msgstr "``get_node(\"Hand/Sword/%Hilt\")`` 也會回傳 **Hilt** 節點。"

msgid ""
"Scene unique names don't only work at the end of a node path. They can be "
"used in the middle to navigate from one node to another. For example, the "
"**Sword** node is marked as a scene unique node in the **Player** scene, so "
"this is possible:"
msgstr ""
"場景唯一名稱不只可以用在節點路徑的最末端，也可以在中間使用，讓你從一個節點導"
"覽到另一個節點。例如，**Sword** 節點在 **Player** 場景中被設為場景唯一節點，"
"因此你可以這樣寫："

msgid "``get_node(\"%Sword/%Hilt\")`` returns the **Hilt** node."
msgstr "``get_node(\"%Sword/%Hilt\")`` 會回傳 **Hilt** 節點。"

msgid "Alternatives"
msgstr "其他方法"

msgid ""
"Scene unique nodes are a useful tool to navigate a scene. However, there are "
"some situations where other techniques may be better."
msgstr ""
"場景唯一節點是導覽場景很實用的工具，不過在某些情況下，其他技巧可能會更適合。"

msgid ""
"A :ref:`Group <doc_groups>` allows locating a node (or a group of many "
"nodes) from any other node, no matter what scene the two nodes are located "
"in."
msgstr ""
":ref:`群組 <doc_groups>` 可以讓你從任何節點定位另一個節點（或多個節點），無論"
"它們分屬於哪個場景。"

msgid ""
"A :ref:`Singleton (Autoload) <doc_singletons_autoload>` is an always loaded "
"node that can be accessed directly by any node regardless of the scene. "
"These are useful when some data or functionality is shared globally."
msgstr ""
":ref:`單例（自動載入） <doc_singletons_autoload>` 是一個無論在哪個場景都會載"
"入的節點，任何節點都可以直接存取它。當有資料或功能需要全域共用時，這會很有"
"用。"

msgid ""
":ref:`Node.find_child() <class_Node_method_find_child>` finds a node by name "
"without knowing its full path. This seems similar to a scene unique node, "
"but this method is able to find nodes in nested scenes, and doesn't require "
"marking the node in the scene editor in any way. However, this method is "
"slow. Scene unique nodes are cached by Godot and are fast to retrieve, but "
"each time the method is called, ``find_child()`` needs to check every "
"descendant (every child, grandchild, and so on)."
msgstr ""
":ref:`Node.find_child() <class_Node_method_find_child>` 可以透過名稱找到節"
"點，而不需要知道完整路徑。這看似和場景唯一節點類似，但它能找到巢狀場景中的節"
"點，而且不需在場景編輯器中特別標記。不過這個方法較慢，因為 Godot 會快取場景唯"
"一節點、查找速度快，但每次呼叫 ``find_child()`` 時都必須檢查所有子代（每個孩"
"子、孫節點等）。"
