#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "訊號"

msgid "Instancing with signals"
msgstr "利用訊號產生實例"

msgid ""
"Signals provide a way to decouple game objects, allowing you to avoid "
"forcing a fixed arrangement of nodes. One sign that a signal might be called "
"for is when you find yourself using ``get_parent()``. Referring directly to "
"a node's parent means that you can't easily move that node to another "
"location in the scene tree. This can be especially problematic when you are "
"instancing objects at runtime and may want to place them in an arbitrary "
"location in the running scene tree."
msgstr ""
"訊號提供了一種讓遊戲物件之間解耦的方法，讓你不必強制節點有固定的排列方式。當"
"你發現自己在用 ``get_parent()`` 時，通常就可以考慮改用訊號。直接引用節點的父"
"節點，代表你無法輕易將該節點移動到場景樹中的其他位置。這在執行時產生實例，並"
"希望把它們放到場景樹任意位置時，特別容易造成問題。"

msgid "Below we'll consider an example of such a situation: firing bullets."
msgstr "下面我們將舉一個這種情境的例子：發射子彈。"

msgid "Shooting example"
msgstr "射擊範例"

msgid ""
"Consider a player character that can rotate and shoot towards the mouse. "
"Every time the mouse button is clicked, we create an instance of the bullet "
"at the player's location. See :ref:`doc_instancing` for details."
msgstr ""
"假設有一個玩家角色可以旋轉並朝滑鼠方向射擊。每次點擊滑鼠按鈕時，我們就會在玩"
"家的位置建立一顆子彈的實例。詳情請參考 :ref:`doc_instancing`。"

msgid ""
"We'll use an ``Area2D`` for the bullet, which moves in a straight line at a "
"given velocity:"
msgstr "我們將用 ``Area2D`` 節點作為子彈，它會以指定的速度直線移動："

msgid ""
"However, if the bullets are added as children of the player, then they will "
"remain \"attached\" to the player as it rotates:"
msgstr ""
"不過，如果子彈被加為玩家的子節點，當角色旋轉時，子彈仍會「跟著」玩家移動："

msgid ""
"Instead, we need the bullets to be independent of the player's movement - "
"once fired, they should continue traveling in a straight line and the player "
"can no longer affect them. Instead of being added to the scene tree as a "
"child of the player, it makes more sense to add the bullet as a child of the "
"\"main\" game scene, which may be the player's parent or even further up the "
"tree."
msgstr ""
"我們其實需要子彈獨立於玩家的移動——一旦射出，子彈就應該自行沿直線飛行，且玩家"
"再也無法影響它們。與其把子彈加到玩家底下，不如加到「主要」遊戲場景（可能是玩"
"家的父節點或更上層）作為子節點更合適。"

msgid "You could do this by adding the bullet to the main scene directly:"
msgstr "你可以直接把子彈加到主場景來達到這個效果："

msgid ""
"However, this will lead to a different problem. Now if you try to test your "
"\"Player\" scene independently, it will crash on shooting, because there is "
"no parent node to access. This makes it a lot harder to test your player "
"code independently and also means that if you decide to change your main "
"scene's node structure, the player's parent may no longer be the appropriate "
"node to receive the bullets."
msgstr ""
"但這又會帶來另一個問題。如果你想獨立測試「Player」場景，射擊時就會當機，因為"
"找不到父節點。這讓獨立測試玩家程式碼變得困難，而且如果你未來更動主場景的節點"
"結構，玩家的父節點也可能就不再適合作為接收子彈的那個節點。"

msgid ""
"The solution to this is to use a signal to \"emit\" the bullets from the "
"player. The player then has no need to \"know\" what happens to the bullets "
"after that - whatever node is connected to the signal can \"receive\" the "
"bullets and take the appropriate action to spawn them."
msgstr ""
"解決方法是使用訊號，讓玩家「發射」子彈。這樣玩家就不需要「知道」子彈後續發生"
"了什麼——只要有節點連接到這個訊號，就能「接收」子彈並負責產生它們。"

msgid "Here is the code for the player using signals to emit the bullet:"
msgstr "以下是玩家角色用訊號發射子彈的程式碼："

msgid ""
"In the main scene, we then connect the player's signal (it will appear in "
"the \"Node\" tab of the Inspector)"
msgstr ""
"在主場景中，我們要將玩家的訊號連接起來（會出現在「節點」分頁的檢查器裡）"

msgid ""
"Now the bullets will maintain their own movement independent of the player's "
"rotation:"
msgstr "現在子彈將獨立於玩家旋轉，自行運動："
