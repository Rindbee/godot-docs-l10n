#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# Variant"
msgstr "C# Variant（變體）"

msgid ""
"For a detailed explanation of Variant in general, see the :ref:`Variant "
"<class_Variant>` documentation page."
msgstr ""
"如需 Variant 的詳細說明，請參閱 :ref:`Variant <class_Variant>` 說明文件頁面。"

msgid ""
"``Godot.Variant`` is used to represent Godot's native :ref:`Variant "
"<class_Variant>` type. Any :ref:`Variant-compatible type "
"<c_sharp_variant_compatible_types>` can be converted from/to it. We "
"recommend avoiding ``Godot.Variant`` unless it is necessary to interact with "
"untyped engine APIs. Take advantage of C#'s type safety when possible."
msgstr ""
"``Godot.Variant`` 用於表示 Godot 原生的 :ref:`Variant <class_Variant>` 型別。"
"任何 :ref:`相容 Variant 的型別 <c_sharp_variant_compatible_types>` 都可與其互"
"相轉換。我們建議除非必須與未型別化的引擎 API 互動，否則應避免使用 "
"``Godot.Variant``，盡可能善用 C# 的型別安全特性。"

msgid ""
"Converting from a Variant-compatible C# type to ``Godot.Variant`` can be "
"done using implicit conversions. There are also ``CreateFrom`` method "
"overloads and the generic ``Variant.From<T>`` methods. Only the syntax is "
"different: the behavior is the same."
msgstr ""
"從 Variant 相容的 C# 型別轉換成 ``Godot.Variant`` 可以使用隱式轉換，也可以使"
"用 ``CreateFrom`` 方法多載，以及泛型的 ``Variant.From<T>`` 方法。這些方式僅語"
"法不同，行為相同。"

msgid ""
"Implicit conversions to ``Godot.Variant`` make passing variants as method "
"arguments very convenient. For example, the third argument "
"of :ref:`tween_property<class_Tween_method_tween_property>` specifying the "
"final color of the tween is a ``Godot.Variant``."
msgstr ""
"隱式轉換為 ``Godot.Variant`` 使得將變體作為方法參數非常方便。例"
"如，:ref:`tween_property<class_Tween_method_tween_property>` 的第三個參數（指"
"定補間最終顏色）就是 ``Godot.Variant``。"

msgid ""
"Converting from ``Godot.Variant`` to a C# type can be done using explicit "
"conversions. There are also ``Variant.As{TYPE}`` methods and the generic "
"``Variant.As<T>`` method. All of these behave the same."
msgstr ""
"從 ``Godot.Variant`` 轉換成 C# 型別可以使用顯式轉換，也可以使用 "
"``Variant.As{TYPE}`` 方法或泛型 ``Variant.As<T>`` 方法。這些方式行為一致。"

msgid ""
"The ``Variant.As{TYPE}`` methods are typically named after C# types "
"(``Int32``), not C# keywords (``int``)."
msgstr ""
"``Variant.As{TYPE}`` 方法通常以 C# 型別名稱（如 ``Int32``）命名，而非 C# 關鍵"
"字（如 ``int``）。"

msgid ""
"If the Variant type doesn't match the conversion target type, the "
"consequences vary depending on the source and target values."
msgstr ""
"如果 Variant 型別與轉換目標型別不符，根據來源與目標的值，可能有不同的結果。"

msgid ""
"The conversion may examine the value and return a similar but potentially "
"unexpected value of the target type. For example, the string ``\"42a\"`` may "
"be converted to the integer ``42``."
msgstr ""
"轉換時可能會檢查值，並返回一個類似但有可能非預期的目標型別值。例如，字串 "
"``\"42a\"`` 可能會被轉換為整數 ``42``。"

msgid "The default value of the target type may be returned."
msgstr "可能會返回目標型別的預設值。"

msgid "An empty array may be returned."
msgstr "可能會返回空陣列。"

msgid "An exception may be thrown."
msgstr "可能會拋出例外。"

msgid ""
"Converting to the correct type avoids complicated behavior and should be "
"preferred."
msgstr "建議轉換為正確的型別，以避免複雜或非預期的行為。"

msgid ""
"The ``Variant.Obj`` property returns a C# ``object`` with the correct value "
"for any variant. This may be useful when the type of Variant is completely "
"unknown. However, when possible, prefer more specific conversions. "
"``Variant.Obj`` evaluates a ``switch`` on ``Variant.VariantType`` and it may "
"not be necessary. Also, if the result is a value type, it is boxed."
msgstr ""
"``Variant.Obj`` 屬性會回傳一個 C# 的 ``object``，其值對應於任何 Variant。當 "
"Variant 型別完全未知時這會很有用。不過，建議仍盡量使用更具體的轉換。"
"``Variant.Obj`` 會對 ``Variant.VariantType`` 做 switch 判斷，這可能並非必要。"
"此外，如果結果是值型別，則會發生 boxing。"

msgid ""
"For example, if the potential for ``Variant.As<MyNode>()`` to throw an "
"invalid cast exception isn't acceptable, consider using a "
"``Variant.As<GodotObject>() is MyNode n`` type pattern instead."
msgstr ""
"舉例來說，如果你不能接受 ``Variant.As<MyNode>()`` 可能丟出無效轉型例外，可以"
"改用 ``Variant.As<GodotObject>() is MyNode n`` 這種型別模式。"

msgid ""
"Since the Variant type in C# is a struct, it can't be null. To create a "
"\"null\" Variant, use the ``default`` keyword or the ``Godot.Variant`` "
"parameterless constructor."
msgstr ""
"由於 C# 中的 Variant 型別是 struct，無法為 null。若要建立「null」的 Variant，"
"請使用 ``default`` 關鍵字或 ``Godot.Variant`` 的無參數建構式。"

msgid "Variant-compatible types"
msgstr "Variant 相容型別"

msgid ""
"A Variant-compatible type can be converted to and from a ``Godot.Variant``. "
"These C# types are Variant-compatible:"
msgstr ""
"Variant 相容型別可以與 ``Godot.Variant`` 互相轉換。以下 C# 型別皆為 Variant "
"相容型別："

msgid ""
"All the `built-in value types <https://docs.microsoft.com/en-us/dotnet/"
"csharp/language-reference/keywords/built-in-types-table>`_, except "
"``decimal``, ``nint`` and ``nuint``."
msgstr ""
"所有 `內建值型別 <https://docs.microsoft.com/zh-tw/dotnet/csharp/language-"
"reference/keywords/built-in-types-table>`_，除了 ``decimal``、``nint`` 與 "
"``nuint``。"

msgid "``string``."
msgstr "``string``。"

msgid "Classes derived from :ref:`GodotObject <class_Object>`."
msgstr "繼承自 :ref:`GodotObject <class_Object>` 的類別。"

msgid "Collections types defined in the ``Godot.Collections`` namespace."
msgstr "在 ``Godot.Collections`` 命名空間定義的集合型別。"

msgid "Full list of Variant types and their equivalent C# type:"
msgstr "Variant 型別與其對應 C# 型別的完整列表："

msgid "Variant.Type"
msgstr "Variant 型別"

msgid "C# Type"
msgstr "C# 型別"

msgid "``Nil``"
msgstr "``Nil``"

msgid "``null`` (Not a type)"
msgstr "``null`` （不是型別）"

msgid "``Bool``"
msgstr "``Bool``"

msgid "``bool``"
msgstr "``bool``"

msgid "``Int``"
msgstr "``Int``"

msgid "``long`` (Godot stores 64-bit integers in Variant)"
msgstr "``long`` （Godot 在 Variant 使用 64 位元整數）"

msgid "``Float``"
msgstr "``Float``"

msgid "``double`` (Godot stores 64-bit floats in Variant)"
msgstr "``double`` （Godot 在 Variant 使用 64 位元浮點數）"

msgid "``String``"
msgstr "``String``"

msgid "``string``"
msgstr "``string``"

msgid "``Vector2``"
msgstr "``Vector2``"

msgid "``Godot.Vector2``"
msgstr "``Godot.Vector2``"

msgid "``Vector2I``"
msgstr "``Vector2I``"

msgid "``Godot.Vector2I``"
msgstr "``Godot.Vector2I``"

msgid "``Rect2``"
msgstr "``Rect2``"

msgid "``Godot.Rect2``"
msgstr "``Godot.Rect2``"

msgid "``Rect2I``"
msgstr "``Rect2I``"

msgid "``Godot.Rect2I``"
msgstr "``Godot.Rect2I``"

msgid "``Vector3``"
msgstr "``Vector3``"

msgid "``Godot.Vector3``"
msgstr "``Godot.Vector3``"

msgid "``Vector3I``"
msgstr "``Vector3I``"

msgid "``Godot.Vector3I``"
msgstr "``Godot.Vector3I``"

msgid "``Transform2D``"
msgstr "``Transform2D``"

msgid "``Godot.Transform2D``"
msgstr "``Godot.Transform2D``"

msgid "``Vector4``"
msgstr "``Vector4``"

msgid "``Godot.Vector4``"
msgstr "``Godot.Vector4``"

msgid "``Vector4I``"
msgstr "``Vector4I``"

msgid "``Godot.Vector4I``"
msgstr "``Godot.Vector4I``"

msgid "``Plane``"
msgstr "``Plane``"

msgid "``Godot.Plane``"
msgstr "``Godot.Plane``"

msgid "``Quaternion``"
msgstr "``Quaternion``"

msgid "``Godot.Quaternion``"
msgstr "``Godot.Quaternion``"

msgid "``Aabb``"
msgstr "``Aabb``"

msgid "``Godot.Aabb``"
msgstr "``Godot.Aabb``"

msgid "``Basis``"
msgstr "``Basis``"

msgid "``Godot.Basis``"
msgstr "``Godot.Basis``"

msgid "``Transform3D``"
msgstr "``Transform3D``"

msgid "``Godot.Transform3D``"
msgstr "``Godot.Transform3D``"

msgid "``Projection``"
msgstr "``Projection``"

msgid "``Godot.Projection``"
msgstr "``Godot.Projection``"

msgid "``Color``"
msgstr "``Color``"

msgid "``Godot.Color``"
msgstr "``Godot.Color``"

msgid "``StringName``"
msgstr "``StringName``"

msgid "``Godot.StringName``"
msgstr "``Godot.StringName``"

msgid "``NodePath``"
msgstr "``NodePath``"

msgid "``Godot.NodePath``"
msgstr "``Godot.NodePath``"

msgid "``Rid``"
msgstr "``Rid``"

msgid "``Godot.Rid``"
msgstr "``Godot.Rid``"

msgid "``Object``"
msgstr "``Object``"

msgid "``Godot.GodotObject`` or any derived type."
msgstr "``Godot.GodotObject`` 或其繼承型別。"

msgid "``Callable``"
msgstr "``Callable``"

msgid "``Godot.Callable``"
msgstr "``Godot.Callable``"

msgid "``Signal``"
msgstr "``Signal``"

msgid "``Godot.Signal``"
msgstr "``Godot.Signal``"

msgid "``Dictionary``"
msgstr "``Dictionary``"

msgid "``Godot.Collections.Dictionary``"
msgstr "``Godot.Collections.Dictionary``"

msgid "``Array``"
msgstr "``Array``"

msgid "``Godot.Collections.Array``"
msgstr "``Godot.Collections.Array``"

msgid "``PackedByteArray``"
msgstr "``PackedByteArray``"

msgid "``byte[]``"
msgstr "``byte[]``"

msgid "``PackedInt32Array``"
msgstr "``PackedInt32Array``"

msgid "``int[]``"
msgstr "``int[]``"

msgid "``PackedInt64Array``"
msgstr "``PackedInt64Array``"

msgid "``long[]``"
msgstr "``long[]``"

msgid "``PackedFloat32Array``"
msgstr "``PackedFloat32Array``"

msgid "``float[]``"
msgstr "``float[]``"

msgid "``PackedFloat64Array``"
msgstr "``PackedFloat64Array``"

msgid "``double[]``"
msgstr "``double[]``"

msgid "``PackedStringArray``"
msgstr "``PackedStringArray``"

msgid "``string[]``"
msgstr "``string[]``"

msgid "``PackedVector2Array``"
msgstr "``PackedVector2Array``"

msgid "``Godot.Vector2[]``"
msgstr "``Godot.Vector2[]``"

msgid "``PackedVector3Array``"
msgstr "``PackedVector3Array``"

msgid "``Godot.Vector3[]``"
msgstr "``Godot.Vector3[]``"

msgid "``PackedVector4Array``"
msgstr "``PackedVector4Array``"

msgid "``Godot.Vector4[]``"
msgstr "``Godot.Vector4[]``"

msgid "``PackedColorArray``"
msgstr "``PackedColorArray``"

msgid "``Godot.Color[]``"
msgstr "``Godot.Color[]``"

msgid ""
"Godot uses 64-bit integers and floats in Variant. Smaller integer and float "
"types such as ``int``, ``short`` and ``float`` are supported since they can "
"fit in the bigger type. Be aware that when a conversion is performed, using "
"the wrong type will result in potential precision loss."
msgstr ""
"Godot 在 Variant 中使用 64 位元整數與浮點數。較小的整數與浮點型別（例如 "
"``int``、``short``、``float``）因可被容納於較大型別中而受到支援。請注意，執行"
"轉型時若使用錯誤的型別，可能會導致精度損失。"

msgid ""
"Enums are supported by ``Godot.Variant`` since their underlying type is an "
"integer type which are all compatible. However, implicit conversions don't "
"exist, enums must be manually converted to their underlying integer type "
"before they can converted to/from ``Godot.Variant`` or use the generic "
"``Variant.As<T>`` and ``Variant.From<T>`` methods to convert them."
msgstr ""
"``Godot.Variant`` 支援 enum，因為 enum 的基礎型別為相容的整數型別。不過，"
"enum 並無隱式轉換，必須手動轉為其底層整數型別後，才能轉換為 "
"``Godot.Variant``，或是使用泛型 ``Variant.As<T>`` 與 ``Variant.From<T>`` 方法"
"來進行轉換。"

msgid "Using Variant in a generic context"
msgstr "在泛型情境下使用 Variant"

msgid ""
"When using generics, you may be interested in restricting the generic ``T`` "
"type to be only one of the Variant-compatible types. This can be achieved "
"using the ``[MustBeVariant]`` attribute."
msgstr ""
"使用泛型時，你可以透過 ``[MustBeVariant]`` 屬性，限制泛型 ``T`` 僅能為 "
"Variant 相容型別之一。"

msgid ""
"Combined with the generic ``Variant.From<T>`` allows you to obtain an "
"instance of ``Godot.Variant`` from an instance of a generic ``T`` type. Then "
"it can be used in any API that only supports the ``Godot.Variant`` struct."
msgstr ""
"配合泛型 ``Variant.From<T>``，你可以從泛型 ``T`` 型別的實例取得一個 "
"``Godot.Variant`` 實例。之後可用於僅支援 ``Godot.Variant`` 結構的 API。"

msgid ""
"In order to invoke a method with a generic parameter annotated with the "
"``[MustBeVariant]`` attribute, the value must be a Variant-compatible type "
"or a generic ``T`` type annotated with the ``[MustBeVariant]`` attribute as "
"well."
msgstr ""
"呼叫帶有 ``[MustBeVariant]`` 屬性標註的泛型參數的方法時，值必須為 Variant 相"
"容型別，或是帶有 ``[MustBeVariant]`` 屬性的泛型 ``T`` 型別。"
