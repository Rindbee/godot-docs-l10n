#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# signals"
msgstr "C# 訊號"

msgid ""
"For a detailed explanation of signals in general, see the :ref:`doc_signals` "
"section in the step by step tutorial."
msgstr ""
"完整的 C# 例子請參考按部就班 :ref:`doc_scripting` 教學中的 **處理訊號** 一"
"節。"

msgid "Signals as C# events"
msgstr "訊號與屬性"

msgid ""
"To provide more type-safety, Godot signals are also all available through "
"`events <https://learn.microsoft.com/en-us/dotnet/csharp/events-overview>`_. "
"You can handle these events, as any other event, with the ``+=`` and ``-=`` "
"operators."
msgstr ""
"為了提供更多的型別安全性，Godot 訊號也可以透過「事件 <https://learn."
"microsoft.com/en-us/dotnet/csharp/events-overview>」_ 取得。您可以像處理任何"
"其他事件一樣使用“+=”和“-=”運算符來處理這些事件。"

msgid ""
"In addition, you can always access signal names associated with a node type "
"through its nested ``SignalName`` class. This is useful when, for example, "
"you want to await on a signal (see :ref:`doc_c_sharp_differences_await`)."
msgstr ""
"此外，您始終可以透過其巢狀的「SignalName」類別存取與節點型別關聯的訊號名稱。"
"例如，當您想要等待訊號時，這很有用（請參閱:ref:"
"`doc_c_sharp_differences_await`）。"

msgid "Custom signals as C# events"
msgstr "自定訊號"

msgid ""
"To declare a custom event in your C# script, use the ``[Signal]`` attribute "
"on a public delegate type. Note that the name of this delegate needs to end "
"with ``EventHandler``."
msgstr ""
"若要在 C# 腳本中宣告自訂事件，請在公共委派型別上使用「[Signal]」屬性。請注"
"意，該委派的名稱需要以“EventHandler”結尾。"

msgid ""
"Once this is done, Godot will create the appropriate events automatically "
"behind the scenes. You can then use said events as you'd do for any other "
"Godot signal. Note that events are named using your delegate's name minus "
"the final ``EventHandler`` part."
msgstr ""
"一旦完成，Godot 將在幕後自動建立適當的事件。然後，您可以像處理任何其他 Godot "
"訊號一樣使用所述事件。請注意，事件是使用委派名稱減去最後的“EventHandler”部分"
"來命名的。"

msgid ""
"If you want to connect to these signals in the editor, you will need to "
"(re)build the project to see them appear."
msgstr ""
"如果您想在編輯器中連接到這些訊號，您將需要（重新）建置專案才能看到它們出現。"

msgid ""
"You can click the **Build** button in the upper-right corner of the editor "
"to do so."
msgstr "你可以使用右上角的按鈕來。"

msgid "Signal emission"
msgstr "訊號"

msgid ""
"To emit signals, use the ``EmitSignal`` method. Note that, as for signals "
"defined by the engine, your custom signal names are listed under the nested "
"``SignalName`` class."
msgstr ""
"若要發出訊號，請使用“EmitSignal”方法。請注意，對於引擎定義的訊號，您的自訂訊"
"號名稱會列在巢狀的“SignalName”類別下。"

msgid ""
"In contrast with other C# events, you cannot use ``Invoke`` to raise events "
"tied to Godot signals."
msgstr ""
"與其他 C# 事件相比，您不能使用「Invoke」來引發與 Godot 訊號相關的事件。"

msgid "Bound values"
msgstr "列舉值"

msgid ""
"Sometimes you'll want to bind values to a signal when the connection is "
"established, rather than (or in addition to) when the signal is emitted. To "
"do so, you can use an anonymous function like in the following example."
msgstr ""
"有時，您需要在建立連線時將值綁定到訊號，而不是在發出訊號時（或除此之外）。為"
"此，您可以使用匿名函式，如下例所示。"

msgid "Signal creation at runtime"
msgstr "運作時建立訊號"

msgid ""
"Finally, you can create custom signals directly while your game is running. "
"Use the ``AddUserSignal`` method for that. Be aware that it should be "
"executed before any use of said signals (either connecting to them or "
"emitting them). Also, note that signals created this way won't be visible "
"through the ``SignalName`` nested class."
msgstr ""
"最後，您可以在遊戲運作時直接建立自訂訊號。為此，請使用“AddUserSignal”方法。請"
"注意，應在使用所述訊號（連接到它們或發出它們）之前執行它。另請注意，以這種方"
"式建立的訊號將不會透過「SignalName」巢狀類別可見。"
