#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Overridable functions"
msgstr "可覆寫函式"

msgid ""
"Godot's Node class provides virtual functions you can override to update "
"nodes every frame or on specific events, like when they enter the scene tree."
msgstr ""
"Godot 的 Node 類別提供可覆寫的虛擬函式，你可以透過這些函式在每個影格或特定事"
"件（例如節點進入場景樹時）對節點進行更新。"

msgid "This document presents the ones you'll use most often."
msgstr "本文件介紹你最常用到的這些函式。"

msgid ""
"Under the hood, these functions rely on Godot's low-level notifications "
"system. To learn more about it, see :ref:`doc_godot_notifications`."
msgstr ""
"這些函式在底層是依靠 Godot 的通知系統運作。想進一步瞭解，請參"
"閱 :ref:`doc_godot_notifications`。"

msgid ""
"Two functions allow you to initialize and get nodes besides the class's "
"constructor: ``_enter_tree()`` and ``_ready()``."
msgstr ""
"除了類別的建構子外，還有兩個函式可用來初始化並取得節點：``_enter_tree()`` 與 "
"``_ready()``。"

msgid ""
"When the node enters the Scene Tree, it becomes active and the engine calls "
"its ``_enter_tree()`` method. That node's children may not be part of the "
"active scene yet. As you can remove and re-add nodes to the scene tree, this "
"function may be called multiple times throughout a node's lifetime."
msgstr ""
"當節點進入場景樹時，會變為啟用狀態，且引擎會呼叫其 ``_enter_tree()`` 方法。此"
"時該節點的子節點可能還不是活動場景的一部分。由於你可以隨時將節點移除並重新加"
"回場景樹，因此這個函式在節點的生命週期中可能被呼叫多次。"

msgid ""
"Most of the time, you'll use ``_ready()`` instead. This function is called "
"only once in a node's lifetime, after ``_enter_tree()``. ``_ready()`` "
"ensures that all children have entered the scene tree first, so you can "
"safely call ``get_node()`` on them."
msgstr ""
"多數情況下你會使用 ``_ready()``。此函式只會在節點生命週期中被呼叫一次，且發生"
"在 ``_enter_tree()`` 之後。``_ready()`` 可以保證所有子節點都已進入場景樹，因"
"此你可以安全地對它們呼叫 ``get_node()``。"

msgid ""
"To learn more about getting node references, "
"read :ref:`doc_nodes_and_scene_instances`."
msgstr ""
"如需瞭解更多關於取得節點參照的內容，請閱"
"讀 :ref:`doc_nodes_and_scene_instances`。"

msgid ""
"Another related callback is ``_exit_tree()``, which the engine calls every "
"time a node is about to exit the scene tree. This can be when you "
"call :ref:`Node.remove_child() <class_Node_method_remove_child>` or when you "
"free a node."
msgstr ""
"另一個相關的回呼函式是 ``_exit_tree()``，引擎會在節點即將離開場景樹時呼叫它。"
"這可能發生於你呼叫 :ref:`Node.remove_child() "
"<class_Node_method_remove_child>` 或釋放節點時。"

msgid ""
"The two virtual methods ``_process()`` and ``_physics_process()`` allow you "
"to update the node, every frame and every physics frame respectively. For "
"more information, read the dedicated "
"documentation: :ref:`doc_idle_and_physics_processing`."
msgstr ""
"虛擬函式 ``_process()`` 與 ``_physics_process()`` 分別讓你在每個影格或每個物"
"理影格對節點進行更新。更多資訊請參閱專門文"
"件：:ref:`doc_idle_and_physics_processing`。"

msgid ""
"Two more essential built-in node callback functions "
"are :ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>` and :ref:`Node._input() "
"<class_Node_private_method__input>`, which you use to both receive and "
"process individual input events. The ``_unhandled_input()`` method receives "
"every key press, mouse click, etc. that have not been handled already in an "
"``_input()`` callback or in a user interface component. You want to use it "
"for gameplay input in general. The ``_input()`` callback allows you to "
"intercept and process input events before ``_unhandled_input()`` gets them."
msgstr ""
"還有兩個非常重要的內建節點回呼函式：:ref:`Node._unhandled_input() "
"<class_Node_private_method__unhandled_input>` 與 :ref:`Node._input() "
"<class_Node_private_method__input>`，你可以用來接收並處理各種輸入事件。"
"``_unhandled_input()`` 會接收所有尚未被 ``_input()`` 回呼或 UI 元件處理過的鍵"
"盤、滑鼠等事件，通常用於遊戲流程中對玩家輸入的反應。而 ``_input()`` 則可以在"
"這些事件傳遞給 ``_unhandled_input()`` 之前攔截並處理它們。"

msgid ""
"To learn more about inputs in Godot, see the :ref:`Input section <toc-learn-"
"features-inputs>`."
msgstr ""
"想進一步瞭解 Godot 輸入系統，請參閱 :ref:`輸入章節 <toc-learn-features-"
"inputs>`。"

msgid ""
"There are some more overridable functions "
"like :ref:`Node._get_configuration_warnings() "
"<class_Node_private_method__get_configuration_warnings>`. Specialized node "
"types provide more callbacks like :ref:`CanvasItem._draw() "
"<class_CanvasItem_private_method__draw>` to draw programmatically "
"or :ref:`Control._gui_input() <class_Control_private_method__gui_input>` to "
"handle clicks and input on UI elements."
msgstr ""
"還有一些其他可覆寫的函式，例如 :ref:`Node._get_configuration_warnings() "
"<class_Node_private_method__get_configuration_warnings>`。特定節點型別也會提"
"供更多回呼，例如 :ref:`CanvasItem._draw() "
"<class_CanvasItem_private_method__draw>` 可用於程式化繪圖，"
"或 :ref:`Control._gui_input() <class_Control_private_method__gui_input>` 用來"
"處理 UI 元素上的點擊與輸入。"
