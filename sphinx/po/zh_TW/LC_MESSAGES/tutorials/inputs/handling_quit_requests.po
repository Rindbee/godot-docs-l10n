#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Handling quit requests"
msgstr "處理結束（退出）請求"

msgid "Quitting"
msgstr "結束（退出）"

msgid ""
"Most platforms have the option to request the application to quit. On "
"desktops, this is usually done with the \"x\" icon on the window title bar. "
"On mobile devices, the app can quit at any time while it is suspended to the "
"background."
msgstr ""
"大多數平台都提供結束應用程式的選項。在桌面系統中，通常是透過視窗標題列上的"
"「X」圖示來關閉應用程式。在行動裝置上，當應用程式被掛起至背景時，也可能會隨時"
"被結束。"

msgid "Handling the notification"
msgstr "處理通知事件"

msgid ""
"On desktop and web platforms, :ref:`Node <class_Node>` receives a special "
"``NOTIFICATION_WM_CLOSE_REQUEST`` notification when quitting is requested "
"from the window manager."
msgstr ""
"在桌面與網頁平台，當視窗管理員要求結束時，:ref:`Node <class_Node>` 會收到一個"
"特殊的 ``NOTIFICATION_WM_CLOSE_REQUEST`` 通知。"

msgid "Handling the notification is done as follows (on any node):"
msgstr "可以在任何節點上，如下方式處理這個通知："

msgid ""
"It is important to note that by default, Godot apps have the built-in "
"behavior to quit when quit is requested from the window manager. This can be "
"changed, so that the user can take care of the complete quitting procedure:"
msgstr ""
"請注意，預設情況下，Godot 應用程式會在收到視窗管理員的結束請求時自動結束。這"
"個行為可以變更，讓使用者自行處理完整的結束流程："

msgid "On mobile devices"
msgstr "在行動裝置上"

msgid ""
"There is no direct equivalent to ``NOTIFICATION_WM_CLOSE_REQUEST`` on mobile "
"platforms. Due to the nature of mobile operating systems, the only place "
"that you can run code prior to quitting is when the app is being suspended "
"to the background. On both Android and iOS, the app can be killed while "
"suspended at any time by either the user or the OS. A way to plan ahead for "
"this possibility is to utilize ``NOTIFICATION_APPLICATION_PAUSED`` in order "
"to perform any needed actions as the app is being suspended."
msgstr ""
"在行動平台上沒有與 ``NOTIFICATION_WM_CLOSE_REQUEST`` 完全對應的通知。由於行動"
"作業系統的特性，唯一能在結束前執行程式碼的時機，是應用程式被掛起（暫停）到背"
"景時。在 Android 與 iOS 上，無論使用者或作業系統，隨時都可能在應用程式掛起時"
"將其終止。因此，建議利用 ``NOTIFICATION_APPLICATION_PAUSED``，於應用掛起時執"
"行必要的動作。"

msgid ""
"On iOS, you only have approximately 5 seconds to finish a task started by "
"this signal. If you go over this allotment, iOS will kill the app instead of "
"pausing it."
msgstr ""
"在 iOS 上，收到此訊號後大約只有 5 秒能完成相關任務。如果超過這個時間，iOS 會"
"直接終止應用程式，而不是只是將其暫停。"

msgid ""
"On Android, pressing the Back button will exit the application if "
"**Application > Config > Quit On Go Back** is checked in the Project "
"Settings (which is the default). This will fire "
"``NOTIFICATION_WM_GO_BACK_REQUEST``."
msgstr ""
"在 Android 上，如果在專案設定中勾選了 **Application > Config > Quit On Go "
"Back** （預設為啟用），按下返回鍵將會結束應用程式，並觸發 "
"``NOTIFICATION_WM_GO_BACK_REQUEST`` 。"

msgid "Sending your own quit notification"
msgstr "自訂結束通知的發送"

msgid ""
"While forcing the application to close can be done by "
"calling :ref:`SceneTree.quit <class_SceneTree_method_quit>`, doing so will "
"not send the ``NOTIFICATION_WM_CLOSE_REQUEST`` to the nodes in the scene "
"tree. Quitting by calling :ref:`SceneTree.quit "
"<class_SceneTree_method_quit>` will not allow custom actions to complete "
"(such as saving, confirming the quit, or debugging), even if you try to "
"delay the line that forces the quit."
msgstr ""
"雖然可以透過呼叫 :ref:`SceneTree.quit <class_SceneTree_method_quit>` 來強制關"
"閉應用程式，但這樣不會向場景樹中的節點發送 "
"``NOTIFICATION_WM_CLOSE_REQUEST``。直接呼叫 :ref:`SceneTree.quit "
"<class_SceneTree_method_quit>` 結束，將無法讓自訂流程（如儲存、確認結束或除錯"
"等）完成，即使你嘗試延遲強制結束的執行也一樣。"

msgid ""
"Instead, if you want to notify the nodes in the scene tree about the "
"upcoming program termination, you should send the notification yourself:"
msgstr ""
"如果你想讓場景樹中的所有節點都能收到即將結束程式的通知，應該自行發送此通知："

msgid ""
"Sending this notification will inform all nodes about the program "
"termination, but will not terminate the program itself *unlike in 3.X*. In "
"order to achieve the previous behavior, :ref:`SceneTree.quit "
"<class_SceneTree_method_quit>` should be called after the notification."
msgstr ""
"發送這個通知只會讓所有節點知道程式即將結束，但本身不會終止程式（*與 3.X 版本"
"不同*）。如果要達到過去的效果，應在發送通知後，再呼叫 :ref:`SceneTree.quit "
"<class_SceneTree_method_quit>`。"
