#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "WebSocket"
msgstr "WebSocket"

msgid "HTML5 and WebSocket"
msgstr "HTML5 與 WebSocket"

msgid ""
"The WebSocket protocol was standardized in 2011 with the original goal of "
"allowing browsers to create stable and bidirectional connections with a "
"server. Before that, browsers used to only support HTTPRequests, which is "
"not well-suited for bidirectional communication."
msgstr ""
"WebSocket 協定於 2011 年標準化，目的是讓瀏覽器能和伺服器建立穩定的雙向連線。"
"在此之前，瀏覽器僅支援 HTTP 請求，並不適合雙向通訊。"

msgid ""
"The protocol is message based and a very powerful tool to send push "
"notifications to browsers, and has been used to implement chats, turn-based "
"games, etc. It still uses a TCP connection, which is good for reliability "
"but not for latency, so not good for real-time applications like VoIP and "
"fast-paced games (see :ref:`WebRTC <doc_webrtc>` for those use cases)."
msgstr ""
"WebSocket 以訊息為單位，適合做推播通知，也常用於聊天、回合制遊戲等。它本質上"
"還是 TCP 連線，因此穩定但延遲高，不適合 VoIP 或即時動作遊戲（這類請"
"見 :ref:`WebRTC <doc_webrtc>`）。"

msgid ""
"Due to its simplicity, its wide compatibility, and being easier to use than "
"a raw TCP connection, WebSocket soon started to spread outside the browsers, "
"in native applications as a mean to communicate with network servers."
msgstr ""
"由於 WebSocket 簡單、兼容性高又比 TCP 連線容易用，很快開始被原生 APP 採用，拿"
"來和伺服器溝通。"

msgid "Godot supports WebSocket in both native and HTML5 exports."
msgstr "Godot 在原生與 HTML5 匯出皆支援 WebSocket。"

msgid "Using WebSocket in Godot"
msgstr "在 Godot 中使用 WebSocket"

msgid ""
"WebSocket is implemented in Godot via :ref:`WebSocketPeer "
"<class_WebSocketPeer>`. The WebSocket implementation is compatible with the "
"High-Level Multiplayer. See section on :ref:`high-level multiplayer "
"<doc_high_level_multiplayer>` for more details."
msgstr ""
"Godot 以 :ref:`WebSocketPeer <class_WebSocketPeer>` 提供 WebSocket 支援，並且"
"可與高階多人 API 搭配使用。更多細節請見 :ref:`高階多人連線 "
"<doc_high_level_multiplayer>`。"

msgid ""
"When exporting to Android, make sure to enable the ``INTERNET`` permission "
"in the Android export preset before exporting the project or using one-click "
"deploy. Otherwise, network communication of any kind will be blocked by "
"Android."
msgstr ""
"匯出到 Android 時，請在匯出專案或一鍵部署前，於 Android 匯出設定啟用 "
"``INTERNET`` 權限，否則所有網路連線都會被 Android 阻擋。"

msgid "Minimal client example"
msgstr "基本用戶端範例"

msgid ""
"This example will show you how to create a WebSocket connection to a remote "
"server, and how to send and receive data."
msgstr "本範例將示範如何建立 WebSocket 連線、並與遠端伺服器收發資料。"

msgid "This will print something similar to:"
msgstr "這將印出類似："

msgid "Minimal server example"
msgstr "基本伺服器範例"

msgid ""
"This example will show you how to create a WebSocket server that listens for "
"remote connections, and how to send and receive data."
msgstr "這個範例將示範如何建立一個 WebSocket 伺服器收聽連線，並進行資料交換。"

msgid "This will print (when a client connects) something similar to this:"
msgstr "當有用戶端連線時，將印出類似："

msgid "Advanced chat demo"
msgstr "進階聊天室範例"

msgid ""
"A more advanced chat demo which optionally uses the multiplayer mid-level "
"abstraction and a high-level multiplayer demo are available in the `godot "
"demo projects <https://github.com/godotengine/godot-demo-projects>`_ under "
"`networking/websocket_chat` and `networking/websocket_multiplayer`."
msgstr ""
"一個更進階的聊天範例 (其選擇性地使用中級多人連線抽象層) 以及一個高階多人連線"
"範例，可在 `godot 範例專案 <https://github.com/godotengine/godot-demo-"
"projects>`_ 中的 ``networking/websocket_chat`` 和 ``networking/"
"websocket_multiplayer`` 下取得。"
