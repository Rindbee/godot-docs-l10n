#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D Parallax"
msgstr "2D 視差滾動"

msgid "Introduction"
msgstr "前言"

msgid ""
"Parallax is an effect used to simulate depth by having textures move at "
"different speeds relative to the camera. Godot provides "
"the :ref:`Parallax2D<class_parallax2d>` node to achieve this effect. It can "
"still be easy to get tripped up though, so this page provides in-depth "
"descriptions of some properties and how to fix some common mistakes."
msgstr ""
"視差（Parallax）是一種常用來模擬景深的效果，讓不同圖層（紋理）相對於攝影機以"
"不同速度移動。Godot 提供 :ref:`Parallax2D<class_parallax2d>` 節點來實現這個效"
"果。不過在使用上還是很容易出錯，所以本頁會詳細說明相關屬性，以及常見問題與修"
"正方法。"

msgid ""
"This page covers how to use :ref:`Parallax2D<class_parallax2d>`, which is "
"recommended to use over the :ref:`ParallaxLayer<class_parallaxlayer>` "
"and :ref:`ParallaxBackground<class_parallaxbackground>` nodes."
msgstr ""
"本頁介紹如何使用 :ref:`Parallax2D<class_parallax2d>`，建議優先使用它來取代過"
"去的 :ref:`ParallaxLayer<class_parallaxlayer>` "
"和 :ref:`ParallaxBackground<class_parallaxbackground>` 節點。"

msgid "Getting started"
msgstr "入門"

msgid ""
"The parallax node supports adding nodes that render things as children, so "
"you can use one or many nodes to make up each layer. To begin, place each "
"node or nodes you want to have scroll independently as a child of their own "
"parallax node. Make sure that the top left of the textures used are at the "
"``(0, 0)`` crossing, like in the image below. See the section "
"on :ref:`positioning <doc_2d_parallax_positioning>` for why this is "
"important."
msgstr ""
"Parallax 節點可以加上算繪用的子節點，因此每一層可以用一個或多個節點組成。首"
"先，將你希望能獨立滾動的節點都放到各自的 Parallax 節點下當子節點。請確保每個"
"用到的紋理左上角都對齊 ``(0, 0)``，如下圖所示。為什麼這很重要，參考 :ref:`定"
"位 <doc_2d_parallax_positioning>` 一節。"

msgid ""
"The scene above uses one prepared texture for the higher clouds in "
"a :ref:`Sprite2D <class_sprite2d>`, but you could just as easily use "
"multiple nodes spaced out to compose the layer."
msgstr ""
"上圖的場景是用一張事先準備好的高雲紋理加在 :ref:`Sprite2D <class_sprite2d>` "
"上，但你也可以用多個節點分別排開來組成這一層。"

msgid "Scroll scale"
msgstr "捲動縮放"

msgid ""
"The backbone of the parallax effect is the :ref:`scroll_scale "
"<class_parallax2d_property_scroll_scale>` property. It works as a scroll-"
"speed multiplier, allowing layers to move at a different speed than the "
"camera for each axis set. A value of 1 makes the parallax node scroll at the "
"same speed as the camera. If you want your image to look further away when "
"scrolling, use a value lower than 1, with 0 bringing it to a complete stop. "
"If you want something to appear closer to the camera, use a value higher "
"than 1, making it scroll faster."
msgstr ""
"視差效果的核心是 :ref:`scroll_scale "
"<class_parallax2d_property_scroll_scale>` 屬性。這個屬性會當作滾動速度的倍"
"率，讓每個軸向的圖層可以跟攝影機有不同的移動速度。數值 1 表示該層與攝影機同速"
"移動。如果你希望圖像看起來比較遠，就設小於 1（0 則完全不動）；如果要讓內容看"
"起來更靠近攝影機，則設大於 1，這樣滾動會比較快。"

msgid ""
"The scene above is comprised of five layers. Some good :ref:`scroll_scale "
"<class_parallax2d_property_scroll_scale>` values might be:"
msgstr ""
"上圖場景有五個圖層，以下是一些常用的 :ref:`scroll_scale "
"<class_parallax2d_property_scroll_scale>` 值參考："

msgid "``(0.7, 1)`` - Forest"
msgstr "``(0.7, 1)`` - 森林"

msgid "``(0.5, 1)`` - Hills"
msgstr "``(0.5, 1)`` - 山丘"

msgid "``(0.3, 1)`` - Lower Clouds"
msgstr "``(0.3, 1)`` - 低雲"

msgid "``(0.2, 1)`` - Higher Clouds"
msgstr "``(0.2, 1)`` - 高雲"

msgid "``(0.1, 1)`` - Sky"
msgstr "``(0.1, 1)`` - 天空"

msgid ""
"The video below displays how these values affect scrolling while in-game:"
msgstr "下方影片展示這些數值在遊戲中如何影響視差滾動效果："

msgid "Infinite repeat"
msgstr "無限重複"

msgid ""
":ref:`Parallax2D<class_parallax2d>` provides a bonus effect that gives "
"textures the illusion of repeating "
"infinitely. :ref:`repeat_size<class_parallax2d_property_repeat_size>` tells "
"the node to snap its position forward or back when the camera scrolls by the "
"set value. This effect is achieved by adding a single repeat to all the "
"child canvas items offset by the value. While the camera scrolls between the "
"image and its repeat, it invisibly snaps back giving the appearance of a "
"looping image."
msgstr ""
":ref:`Parallax2D<class_parallax2d>` 還能額外讓紋理看起來像是無限重"
"複。:ref:`repeat_size<class_parallax2d_property_repeat_size>` 屬性會指定當攝"
"影機捲動超過這個數值時自動將位置往前或往後跳。這個效果是透過為所有子畫布項目"
"多加一次重複、並做位移來實現的。當攝影機在原始圖像與重複圖像之間捲動時，畫面"
"會在看不見的情況下跳回頭，營造出圖像無限循環的錯覺。"

msgid ""
"Being a delicate effect, it's easy for unfamiliar users to make mistakes "
"with their setup. Let's go over the \"how\" and \"why\" of a few common "
"problems users encounter."
msgstr ""
"這個效果比較細緻，新手常常容易設錯。我們來看看常見問題的「成因」與「解法」。"

msgid "Poor sizing"
msgstr "尺寸不正確"

msgid ""
"The infinite repeat effect is easiest to work with when you have an image "
"designed to repeat seamlessly and is the same size or larger than your "
"viewport **before** setting "
"the :ref:`repeat_size<class_parallax2d_property_repeat_size>`. If you aren't "
"able to obtain assets that are designed for this task, there are some other "
"things you can do to better prepare your image in regards to size."
msgstr ""
"要讓無限重複效果好用，最好是圖像本身就是無縫可重複的，並且「在設"
"定 :ref:`repeat_size<class_parallax2d_property_repeat_size>` 前」圖像尺寸要跟"
"視窗一樣大或更大。如果你的素材不是專門做來無縫重複，還有一些其他方式可以調整"
"圖像尺寸。"

msgid "Here is an example of a texture that is too small for its viewport:"
msgstr "下面是一個紋理太小、不足以覆蓋視窗的例子："

msgid ""
"We can see that the viewport size is 500x300 but the texture is 288x208. If "
"we set the :ref:`repeat_size<class_parallax2d_property_repeat_size>` to the "
"size of our image, the infinite repeat effect doesn't scroll properly "
"because the original texture doesn't cover the viewport. If we set "
"the :ref:`repeat_size<class_parallax2d_property_repeat_size>` to the size of "
"the viewport, we have a large gap. What can we do?"
msgstr ""
"可以看到視埠大小是 500x300，但圖像只有 288x208。如果我們"
"把 :ref:`repeat_size<class_parallax2d_property_repeat_size>` 設成圖像大小，無"
"限重複效果會失敗，因為原始圖像覆蓋不了整個視窗。如"
"果 :ref:`repeat_size<class_parallax2d_property_repeat_size>` 設成視窗大小，中"
"間又會有大空隙。該怎麼辦？"

msgid "Make the viewport smaller"
msgstr "把視窗縮小"

msgid ""
"The simplest answer is to make the viewport the same size or smaller than "
"your textures. In **Project Settings > Display > Window**, change "
"the :ref:`Viewport Width<class_ProjectSettings_property_display/window/size/"
"viewport_width>` and :ref:`Viewport "
"Height<class_ProjectSettings_property_display/window/size/viewport_height>` "
"settings to match your background."
msgstr ""
"最簡單的解法，就是把視窗調成跟你的圖像一樣大或更小。在 **專案設定 > 顯示 > 視"
"窗** 裡，把 :ref:`Viewport Width<class_ProjectSettings_property_display/"
"window/size/viewport_width>` 和 :ref:`Viewport "
"Height<class_ProjectSettings_property_display/window/size/viewport_height>` "
"設成跟背景圖一樣。"

msgid "Scale the Parallax2D"
msgstr "縮放 Parallax2D 本身"

msgid ""
"If you're not aiming for a pixel-perfect style, or don't mind a little "
"blurriness, you may opt to scale the textures larger to fit your screen. Set "
"the :ref:`scale<class_node2d_property_scale>` of "
"the :ref:`Parallax2D<class_parallax2d>`, and all child textures scale with "
"it."
msgstr ""
"如果你不追求像素完美，或不介意有點模糊，也可以直接把紋理放大到填滿螢幕。只要"
"設定 :ref:`Parallax2D<class_parallax2d>` "
"的 :ref:`scale<class_node2d_property_scale>`，所有子節點紋理也會跟著縮放。"

msgid "Scale the child nodes"
msgstr "縮放子節點"

msgid ""
"Similar to scaling the :ref:`Parallax2D<class_parallax2d>`, you can scale "
"your :ref:`Sprite2D<class_sprite2d>` nodes to be large enough to cover the "
"screen. Keep in mind that some settings "
"like :ref:`Parallax2D.repeat_size<class_parallax2d_property_repeat_size>` "
"and :ref:`Sprite2D.region_rect<class_sprite2d_property_region_rect>` do not "
"take scaling into account, so it's necessary to adjust these values based on "
"the scale."
msgstr ""
"和縮放 :ref:`Parallax2D<class_parallax2d>` 類似，你也可以直接"
"把 :ref:`Sprite2D<class_sprite2d>` 子節點放大到足以覆蓋整個畫面。但要注意，"
"像 :ref:`Parallax2D.repeat_size<class_parallax2d_property_repeat_size>` "
"和 :ref:`Sprite2D.region_rect<class_sprite2d_property_region_rect>` 這些設定"
"不會自動根據縮放調整，所以必須手動依縮放倍率對應調整這些數值。"

msgid "Repeat the textures"
msgstr "重複紋理"

msgid ""
"You can also start off on the right foot by preparing child nodes earlier in "
"the process. If you have a :ref:`Sprite2D<class_sprite2d>` you'd like to "
"repeat, but is too small, you can do the following to repeat it:"
msgstr ""
"你也可以一開始就將子節點準備好。如果你有一個 :ref:`Sprite2D<class_sprite2d>` "
"紋理想要重複但尺寸太小，可以用下列做法讓它重複鋪滿："

msgid ""
"set :ref:`texture_repeat<class_canvasitem_property_texture_repeat>` "
"to :ref:`CanvasItem.TEXTURE_REPEAT_ENABLED<class_canvasitem_constant_TEXTURE_REPEAT_ENABLED>`"
msgstr ""
"將 :ref:`texture_repeat<class_canvasitem_property_texture_repeat>` 設"
"為 :ref:`CanvasItem.TEXTURE_REPEAT_ENABLED<class_canvasitem_constant_TEXTURE_REPEAT_ENABLED>`"

msgid ""
"set :ref:`region_enabled<class_sprite2d_property_region_enabled>` to ``true``"
msgstr ""
"將 :ref:`region_enabled<class_sprite2d_property_region_enabled>` 設為 "
"``true``"

msgid ""
"set the :ref:`region_rect<class_sprite2d_property_region_rect>` to a "
"multiple of the size of your texture large enough to cover the viewport."
msgstr ""
"把 :ref:`region_rect<class_sprite2d_property_region_rect>` 設成足夠覆蓋視窗的"
"多倍尺寸。"

msgid ""
"Below, you can see that repeating the image twice makes it large enough to "
"cover the screen."
msgstr "如下圖，將圖像重複兩次就足以覆蓋整個畫面。"

msgid "Poor positioning"
msgstr "位置錯誤"

msgid ""
"It's common to see users mistakenly set all of their textures to be centered "
"at ``(0,0)``:"
msgstr "常見錯誤是把所有紋理都設為以 ``(0,0)`` 為中心："

msgid ""
"This creates problems with the infinite repeat effect and should be avoided. "
"The \"infinite repeat canvas\" starts at ``(0,0)`` and expands down and to "
"the right to the size of "
"the :ref:`repeat_size<class_parallax2d_property_repeat_size>` value."
msgstr ""
"這樣會導致無限重複效果出錯，應該避免。所謂的「無限重複畫布」從 ``(0,0)`` 開"
"始，向右下延伸到 :ref:`repeat_size<class_parallax2d_property_repeat_size>` 設"
"定的大小。"

msgid ""
"If the textures are centered on the ``(0,0)`` crossing, the infinite repeat "
"canvas is only partly covered, so it only partly repeats."
msgstr ""
"如果紋理是以 ``(0,0)`` 為中心，無限重複畫布就只有部分被覆蓋，導致只有部分能正"
"確重複。"

msgid "Would increasing ``repeat_times`` fix this?"
msgstr "多設幾個 ``repeat_times`` 可以解決嗎？"

msgid ""
"Increasing :ref:`repeat_times<class_parallax2d_property_repeat_times>` "
"technically *would* work in some scenarios, but is a brute force solution "
"and not the problem it is designed to solve (we'll go over this in a bit). A "
"better fix is to understand how the repeat effect works and set up the "
"parallax textures appropriately to begin with."
msgstr ""
"把 :ref:`repeat_times<class_parallax2d_property_repeat_times>` 加大在某些情況"
"下確實有用，但這只是硬解，並不是這個參數本來該解決的問題（稍後會說明）。更好"
"的做法是先了解無限重複的原理，再正確設置你的視差紋理。"

msgid ""
"First, check to see if any textures are spilling over onto the negative "
"parts of the canvas. Make sure the textures used in the parallax nodes fit "
"inside the \"infinite repeat canvas\" starting at ``(0,0)``. That way, "
"if :ref:`Parallax2D.repeat_size<class_parallax2d_property_repeat_size>` is "
"set correctly, it should look something like this, with one single loop of "
"the image the same size or larger than the viewport:"
msgstr ""
"首先檢查你的紋理有沒有超出畫布的負座標。確保所有用於視差的紋理都放在從 "
"``(0,0)`` 開始的「無限重複畫布」範圍內。這樣只"
"要 :ref:`Parallax2D.repeat_size<class_parallax2d_property_repeat_size>` 設正"
"確，就會像這樣，圖像單次循環就能覆蓋整個視窗甚至更大："

msgid ""
"If you think of how the image scrolls across the screen, it starts by "
"displaying what's inside the red rectangle (determined "
"by :ref:`repeat_size<class_parallax2d_property_repeat_size>`), and when it "
"reaches what's inside the yellow rectangle it zips the image forward to give "
"the illusion of scrolling forever."
msgstr ""
"想像畫面捲動時，會先顯示紅色方框（這個區域"
"由 :ref:`repeat_size<class_parallax2d_property_repeat_size>` 決定）的內容，當"
"畫面滾到黃色方框時，畫面會瞬間跳到下一輪，營造出無限捲動的錯覺。"

msgid ""
"If you have the image positioned away from the \"infinite repeat canvas\", "
"when the camera reaches the yellow rectangle, half of the image is cut off "
"before it jumps forward like in the image below:"
msgstr ""
"如果你的圖像沒有對齊「無限重複畫布」，當攝影機滾到黃色方框時，畫面會被截掉一"
"半才跳轉，如下圖所示："

msgid "Scroll offset"
msgstr "捲動偏移"

msgid ""
"If your parallax textures are already working correctly, but you prefer it "
"to start at a different point, :ref:`Parallax2D<class_parallax2d>` comes "
"with a :ref:`scroll_offset<class_parallax2d_property_scroll_offset>` "
"property used to offset where the infinite repeat canvas starts. As an "
"example, if your image is 288x208, setting "
"the :ref:`scroll_offset<class_parallax2d_property_scroll_offset>` to "
"``(-144,0)`` or ``(144,0)`` allows it to begin halfway across the image."
msgstr ""
"如果你的視差紋理已經正常顯示，但你希望畫面從不同位置開"
"始，:ref:`Parallax2D<class_parallax2d>` 有一"
"個 :ref:`scroll_offset<class_parallax2d_property_scroll_offset>` 屬性可以調整"
"無限重複畫布的起始點。例如圖像大小 288x208 時，"
"把 :ref:`scroll_offset<class_parallax2d_property_scroll_offset>` 設成 "
"``(-144,0)`` 或 ``(144,0)``，就能讓它從圖像中間起始。"

msgid "Repeat times"
msgstr "重複次數"

msgid ""
"Ideally, following this guide, your parallax textures are large enough to "
"cover the screen even when zoomed out. Until now, we have had a perfectly "
"fitting 288x208 texture inside of a 288x208 viewport. However, problems "
"occur when we zoom out by setting "
"the :ref:`Camera2D.zoom<class_camera2d_property_zoom>` to ``(0.5, 0.5)``:"
msgstr ""
"理想情況下，根據本指南設置後，你的視差紋理即使在畫面縮小時也足以覆蓋整個螢"
"幕。前面我們範例是 288x208 紋理對應 288x208 視窗，但如果我們"
"把 :ref:`Camera2D.zoom<class_camera2d_property_zoom>` 設為 ``(0.5, 0.5)``，畫"
"面縮小一半就會出現問題："

msgid ""
"Even though everything is correctly set for the viewport at the default zoom "
"level, zooming out makes it smaller than the viewport, breaking the infinite "
"repeat effect. This is "
"where :ref:`repeat_times<class_parallax2d_property_repeat_times>` can help "
"out. Setting a value of ``3`` (one extra repeat behind and in front), it is "
"now large enough to accommodate the infinite repeat effect."
msgstr ""
"即使預設縮放下都沒問題，當畫面縮小後，原本的紋理就不夠大，無限重複效果就會壞"
"掉。這時就需要"
"用 :ref:`repeat_times<class_parallax2d_property_repeat_times>` 。設成 ``3`` "
"（前後各加一個重複），就能讓圖像足夠大來支援無限重複。"

msgid ""
"If these textures were meant to be repeated vertically, we would have "
"specified a ``y`` value for "
"the :ref:`repeat_size<class_parallax2d_property_repeat_size>`. "
"The :ref:`repeat_times<class_parallax2d_property_repeat_times>` would "
"automatically add a repeat above and below as well. This is only a "
"horizontal parallax, so it leaves an empty block above and below the image. "
"How do we solve this? We need to get creative! In this example, we stretch "
"the sky higher, and grass sprite lower. The textures now support the normal "
"zoom level and zooming out to half size."
msgstr ""
"如果你的紋理設計本來就要垂直重複，可以"
"把 :ref:`repeat_size<class_parallax2d_property_repeat_size>` 的 ``y`` 設成相"
"應數值，:ref:`repeat_times<class_parallax2d_property_repeat_times>` 就會自動"
"在上下也加一個重複。這裡範例只有做水平視差，所以上下會有空白。該怎麼辦呢？可"
"以有創意地把天空拉高、草地拉低，這樣紋理就能同時支援正常與縮小一半的縮放。"

msgid "Split screen"
msgstr "分割畫面"

msgid ""
"Most tutorials for making a split screen game in Godot begin by writing a "
"small script to assign "
"the :ref:`Viewport.world_2d<class_viewport_property_world_2d>` of the first "
"SubViewport to the second, so they have a shared display. Questions often "
"pop up about how to share a parallax effect between both screens."
msgstr ""
"大多數 Godot 分割畫面教學會先寫個小腳本，把第一個 SubViewport "
"的 :ref:`Viewport.world_2d<class_viewport_property_world_2d>` 指定給第二個 "
"SubViewport，讓它們共享顯示。這時就常常會有人問：「要怎麼讓兩個畫面都能有同樣"
"的視差效果？」。"

msgid ""
"The parallax effect fakes a perspective by moving the positions of different "
"textures in relation to the camera. This is understandably problematic if "
"you have multiple cameras, because your textures can't be in two places at "
"once!"
msgstr ""
"視差效果是透過每個圖層根據攝影機位置不同而移動，營造出景深。如果你有多個攝影"
"機，就會產生問題，因為同一張紋理不可能同時出現在兩個不同位置！"

msgid ""
"This is still achievable by cloning the parallax nodes into the second (or "
"third or fourth) :ref:`SubViewport<class_subviewport>`. Here's how a setup "
"looks for a two player game:"
msgstr ""
"其實還是可以辦到，只要把視差節點複製到第二個（甚至第三、第四"
"個）:ref:`SubViewport<class_subviewport>`。下圖是雙人遊戲的範例："

msgid ""
"Of course, now both backgrounds show in both SubViewports. What we want is "
"for each parallax to only show in their corresponding viewport. We can "
"achieve this by doing the following:"
msgstr ""
"這時會發現兩個 SubViewport 都會顯示兩個背景。我們想要的是每個視差圖層只顯示在"
"對應的畫面。可以這樣做："

msgid ""
"Leave all parallax nodes at their "
"default :ref:`visibility_layer<class_canvasitem_property_visibility_layer>` "
"of 1."
msgstr ""
"讓所有視差節點都維持預設"
"的 :ref:`visibility_layer<class_canvasitem_property_visibility_layer>` （層 "
"1）。"

msgid ""
"Set the first "
"SubViewport's :ref:`canvas_cull_mask<class_viewport_property_canvas_cull_mask>` "
"to only layers 1 and 2."
msgstr ""
"把第一個 SubViewport "
"的 :ref:`canvas_cull_mask<class_viewport_property_canvas_cull_mask>` 設成只顯"
"示層 1 和 2。"

msgid "Do the same for the second SubViewport but use layers 1 and 3."
msgstr "第二個 SubViewport 也一樣設，但改用層 1 和 3。"

msgid ""
"Give your parallax nodes in the first SubViewport a common parent and set "
"its :ref:`visibility_layer<class_canvasitem_property_visibility_layer>` to 2."
msgstr ""
"把第一個 SubViewport 的所有視差節點放在同一個父節點下，並把該父節點"
"的 :ref:`visibility_layer<class_canvasitem_property_visibility_layer>` 設為 "
"2。"

msgid ""
"Do the same for the second SubViewport's parallax nodes, but use a layer of "
"3."
msgstr "第二個 SubViewport 的視差節點也同理，但設成 3 層。"

msgid ""
"How does this work? If a canvas item has "
"a :ref:`visibility_layer<class_canvasitem_property_visibility_layer>` that "
"doesn't match the "
"SubViewport's :ref:`canvas_cull_mask<class_viewport_property_canvas_cull_mask>`, "
"it will hide all children, even if they do. We use this to our advantage, "
"letting the SubViewports cut off rendering of parallax nodes whose parent "
"doesn't have a "
"supported :ref:`visibility_layer<class_canvasitem_property_visibility_layer>`."
msgstr ""
"這個機制是這樣：如果某個畫布項目"
"的 :ref:`visibility_layer<class_canvasitem_property_visibility_layer>` 跟 "
"SubViewport "
"的 :ref:`canvas_cull_mask<class_viewport_property_canvas_cull_mask>` 不符，就"
"算子節點有設定，整個分支也都會被隱藏。我們就利用這點，讓每個 SubViewport 只顯"
"示有對應父"
"層 :ref:`visibility_layer<class_canvasitem_property_visibility_layer>` 的視差"
"節點。"

msgid "Previewing in the editor"
msgstr "在編輯器中預覽"

msgid ""
"Prior to 4.3, the recommendation was to place every layer in their "
"own :ref:`ParallaxBackground<class_parallaxbackground>`, enable "
"the :ref:`follow_viewport_enabled<class_canvaslayer_property_follow_viewport_enabled>` "
"property, and scale the individual layer. This method has always been tricky "
"to get right, but is still achievable by using "
"a :ref:`CanvasLayer<class_canvaslayer>` instead of "
"a :ref:`ParallaxBackground<class_parallaxbackground>`."
msgstr ""
"Godot 4.3 以前的做法，建議每一層都用一個自己"
"的 :ref:`ParallaxBackground<class_parallaxbackground>` ，啟"
"用 :ref:`follow_viewport_enabled<class_canvaslayer_property_follow_viewport_enabled>` ，"
"再分別縮放每一層。這個做法其實一直都比較複雜，但現今你可以改"
"用 :ref:`CanvasLayer<class_canvaslayer>` 來實現分層，而不"
"是 :ref:`ParallaxBackground<class_parallaxbackground>` 。"

msgid ""
"Another recommendation is `KoBeWi's \"Parallax2D Preview\" addon <https://"
"github.com/KoBeWi/Godot-Parallax2D-Preview>`_. It provides a few different "
"preview modes and is very handy!"
msgstr ""
"另一個推薦是 `KoBeWi 的「Parallax2D Preview」外掛 <https://github.com/KoBeWi/"
"Godot-Parallax2D-Preview>`_，它提供多種預覽模式，非常好用！"
