#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D sprite animation"
msgstr "2D Sprite 動畫"

msgid "Introduction"
msgstr "前言"

msgid ""
"In this tutorial, you'll learn how to create 2D animated characters with the "
"AnimatedSprite2D class and the AnimationPlayer. Typically, when you create "
"or download an animated character, it will come in one of two ways: as "
"individual images or as a single sprite sheet containing all the animation's "
"frames. Both can be animated in Godot with the AnimatedSprite2D class."
msgstr ""
"在本教學中，你將學習如何使用 AnimatedSprite2D 類別與 AnimationPlayer 製作 2D "
"動畫角色。通常你製作或下載動畫角色素材時，會有兩種常見格式：一種是每個動畫影"
"格為單獨圖片，另一種是將所有動畫影格合成一張精靈表（Sprite Sheet）。這兩種都"
"能用 Godot 的 AnimatedSprite2D 來做動畫。"

msgid ""
"First, we'll use :ref:`AnimatedSprite2D <class_AnimatedSprite2D>` to animate "
"a collection of individual images. Then we will animate a sprite sheet using "
"this class. Finally, we will learn another way to animate a sprite sheet "
"with :ref:`AnimationPlayer <class_AnimationPlayer>` and the *Animation* "
"property of :ref:`Sprite2D <class_Sprite2D>`."
msgstr ""
"首先，我們會用 :ref:`AnimatedSprite2D <class_AnimatedSprite2D>` 來將多張單獨"
"圖片做成動畫。接著會用同一類別來處理精靈表的動畫。最後，還會學習利"
"用 :ref:`AnimationPlayer <class_AnimationPlayer>` 搭配 :ref:`Sprite2D "
"<class_Sprite2D>` 的 *Animation* 屬性來製作精靈表動畫的另一種方法。"

msgid ""
"Art for the following examples by https://opengameart.org/users/ansimuz and "
"tgfcoder."
msgstr ""
"以下範例的美術素材由 https://opengameart.org/users/ansimuz 和 https://"
"opengameart.org/users/tgfcoder 共同提供。"

msgid "Individual images with AnimatedSprite2D"
msgstr "用 AnimatedSprite2D 播放單張圖片序列"

msgid ""
"In this scenario, you have a collection of images, each containing one of "
"your character's animation frames. For this example, we'll use the following "
"animation:"
msgstr ""
"這種情境下，你會有一組圖片，每張都代表角色動畫的一個影格。本範例將用以下動"
"畫："

msgid ""
"You can download the images here: `2d_sprite_animation_assets.zip <https://"
"github.com/godotengine/godot-docs-project-starters/releases/download/"
"latest-4.x/2d_sprite_animation_assets.zip>`_"
msgstr ""
"你可以在這裡下載圖片：`2d_sprite_animation_assets.zip <https://github.com/"
"godotengine/godot-docs-project-starters/releases/download/latest-4.x/"
"2d_sprite_animation_assets.zip>`_"

msgid ""
"Unzip the images and place them in your project folder. Set up your scene "
"tree with the following nodes:"
msgstr "將圖片解壓縮後放到你的專案資料夾。然後用下列節點架構建立你的場景樹："

msgid ""
"The root node could also be :ref:`Area2D <class_Area2D>` "
"or :ref:`RigidBody2D <class_RigidBody2D>`. The animation will still be made "
"in the same way. Once the animation is completed, you can assign a shape to "
"the CollisionShape2D. See :ref:`Physics Introduction "
"<doc_physics_introduction>` for more information."
msgstr ""
"根節點也可以是 :ref:`Area2D <class_Area2D>` 或 :ref:`RigidBody2D "
"<class_RigidBody2D>`。動畫仍然會以同樣的方式製作。一旦動畫完成，你就可以為 "
"CollisionShape2D 形狀分配一個形狀。更多資訊請參見 :ref:`物理介紹 "
"<doc_physics_introduction>`。"

msgid ""
"Now select the ``AnimatedSprite2D`` and in its *SpriteFrames* property, "
"select \"New SpriteFrames\"."
msgstr ""
"現在選取 ``AnimatedSprite2D``，在其 *SpriteFrames* 屬性中選擇「新建 "
"SpriteFrames」。"

msgid ""
"Click on the new SpriteFrames resource and you'll see a new panel appear at "
"the bottom of the editor window:"
msgstr ""
"點擊新的 SpriteFrames 資源，你會看到一個新的面板出現在編輯器視窗的底部："

msgid ""
"From the FileSystem dock on the left side, drag the 8 individual images into "
"the center part of the SpriteFrames panel. On the left side, change the name "
"of the animation from \"default\" to \"run\"."
msgstr ""
"在編輯器左側的檔案總管面板，把這 8 張單獨的圖片拖到 SpriteFrames 面板的中央區"
"域。然後把左邊動畫名稱從「default」改成「run」。"

msgid ""
"Use the \"Play\" buttons on the top-right of the *Filter Animations* input "
"to preview the animation. You should now see the animation playing in the "
"viewport. However, it is a bit slow. To fix this, change the *Speed (FPS)* "
"setting in the SpriteFrames panel to 10."
msgstr ""
"在 *Filter Animations* 輸入框右上角點擊「播放」按鈕預覽動畫。這時你應該能在視"
"窗中看到動畫，不過速度可能偏慢。可以將 SpriteFrames 面板的 *速度 (FPS)* 設定"
"改為 10 來讓動畫變流暢。"

msgid ""
"You can add additional animations by clicking the \"Add Animation\" button "
"and adding additional images."
msgstr "你也可以點擊「新增動畫」按鈕，然後加入其他圖片來增加更多動畫片段。"

msgid "Controlling the animation"
msgstr "動畫控制"

msgid ""
"Once the animation is complete, you can control the animation via code using "
"the ``play()`` and ``stop()`` methods. Here is a brief example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"動畫製作完成後，你可以用程式碼的 ``play()`` 和 ``stop()`` 方法來控制動畫。舉"
"例來說，以下程式碼可讓你按住右鍵時播放動畫，放開時停止動畫。"

msgid "Sprite sheet with AnimatedSprite2D"
msgstr "用 AnimatedSprite2D 播放精靈表"

msgid ""
"You can also easily animate from a sprite sheet with the class "
"``AnimatedSprite2D``. We will use this public domain sprite sheet:"
msgstr ""
"你也可以用 ``AnimatedSprite2D`` 很簡單地播放精靈表動畫。下面用一張公有領域的"
"精靈表來示範："

msgid ""
"Right-click the image and choose \"Save Image As\" to download it, and then "
"copy the image into your project folder."
msgstr "按右鍵圖片，選擇“圖片另存為”來下載圖片，然後將圖片複製到專案檔案夾中。"

msgid ""
"Set up your scene tree the same way you did previously when using individual "
"images. Select the ``AnimatedSprite2D`` and in its *SpriteFrames* property, "
"select \"New SpriteFrames\"."
msgstr ""
"設定場景樹的方法和剛才用多張圖片時一樣。選取 ``AnimatedSprite2D``，然後在 "
"*SpriteFrames* 屬性中選擇「新建 SpriteFrames」。"

msgid ""
"Click on the new SpriteFrames resource. This time, when the bottom panel "
"appears, select \"Add frames from a Sprite Sheet\"."
msgstr ""
"點擊新建的 SpriteFrames 資源。這次在下方面板出現時，請點選「從精靈表新增影"
"格」。"

msgid "You will be prompted to open a file. Select your sprite sheet."
msgstr "在彈出的打開檔案對話方塊中，選擇你的精靈表。"

msgid ""
"A new window will open, showing your sprite sheet. The first thing you will "
"need to do is to change the number of vertical and horizontal images in your "
"sprite sheet. In this sprite sheet, we have four images horizontally and two "
"images vertically."
msgstr ""
"接下來會打開一個新的視窗，裡面會顯示剛才的精靈表。你首先需要修改精靈表中縱向"
"和橫向的圖片數量，我們的這張精靈表裡橫向有四張圖片、縱向有兩張。"

msgid ""
"Next, select the frames from the sprite sheet that you want to include in "
"your animation. We will select the top four, then click \"Add 4 frames\" to "
"create the animation."
msgstr ""
"然後，在精靈表中選擇動畫中想要包含的影格。這裡我們選中上面的四個，然後點擊“新"
"增 4 影格”來建立動畫。"

msgid ""
"You will now see your animation under the list of animations in the bottom "
"panel. Double click on default to change the name of the animation to jump."
msgstr ""
"現在你就可以看到在底部面板的動畫列表裡看到這個動畫了。按兩下 default（預"
"設），然後把動畫的名稱改成 jump（跳躍）。"

msgid ""
"Finally, check the play button on the SpriteFrames editor to see your frog "
"jump!"
msgstr "最後，點擊 SpriteFrames 編輯器上的播放按鈕，就可以看到青蛙跳起來囉！"

msgid "Sprite sheet with AnimationPlayer"
msgstr "用 AnimationPlayer 搭配精靈表"

msgid ""
"Another way that you can animate when using a sprite sheet is to use a "
"standard :ref:`Sprite2D <class_Sprite2D>` node to display the texture, and "
"then animating the change from texture to texture with :ref:`AnimationPlayer "
"<class_AnimationPlayer>`."
msgstr ""
"另一種製作精靈表動畫的方法，是用標準的 :ref:`Sprite2D <class_Sprite2D>` 節點"
"來顯示貼圖，然後用 :ref:`AnimationPlayer <class_AnimationPlayer>` 來切換貼圖"
"影格。"

msgid "Consider this sprite sheet, which contains 6 frames of animation:"
msgstr "考慮一下這個包含 6 影格動畫的精靈表："

msgid ""
"Right-click the image and choose \"Save Image As\" to download, then copy "
"the image into your project folder."
msgstr "按右鍵圖片，選擇“圖片另存為”下載圖片，然後將圖片複製到專案檔案夾中。"

msgid ""
"Our goal is to display these images one after another in a loop. Start by "
"setting up your scene tree:"
msgstr "我們的目標是要讓這些影格圖片輪流播映形成動畫。先建立如下的場景樹："

msgid ""
"Drag the spritesheet into the Sprite's *Texture* property, and you'll see "
"the whole sheet displayed on the screen. To slice it up into individual "
"frames, expand the *Animation* section in the Inspector and set the "
"*Hframes* to ``6``. *Hframes* and *Vframes* are the number of horizontal and "
"vertical frames in your sprite sheet."
msgstr ""
"將精靈表拖到 Sprite 的 *Texture* 屬性裡，你會看到整張表顯示在畫面上。要分割為"
"單獨影格，請在屬性檢查器展開 *Animation* 區段，把 *Hframes* 設成 ``6``。"
"*Hframes* 和 *Vframes* 分別是精靈表的水平和垂直影格數。"

msgid ""
"Now try changing the value of the *Frame* property. You'll see that it "
"ranges from ``0`` to ``5`` and the image displayed by the Sprite2D changes "
"accordingly. This is the property we'll be animating."
msgstr ""
"現在嘗試調整 *Frame* 屬性的值，你會發現它從 ``0`` 到 ``5``，Sprite2D 顯示的圖"
"片也跟著改變。這就是我們等等要製作動畫的屬性。"

msgid ""
"Select the ``AnimationPlayer`` and click the \"Animation\" button followed "
"by \"New\". Name the new animation \"walk\". Set the animation length to "
"``0.6`` and click the \"Loop\" button so that our animation will repeat."
msgstr ""
"選取 ``AnimationPlayer``，點「動畫」再點「新增」，把新動畫命名為「walk」。將"
"動畫長度設為 ``0.6``，再點選「循環」按鈕讓動畫重複播放。"

msgid ""
"Now select the ``Sprite2D`` node and click the key icon to add a new track."
msgstr "接著選取 ``Sprite2D`` 節點，點擊鑰匙圖示來新增一個動畫軌道。"

msgid ""
"Continue adding frames at each point in the timeline (``0.1`` seconds by "
"default), until you have all the frames from 0 to 5. You'll see the frames "
"actually appearing in the animation track:"
msgstr ""
"接著在時間軸上每個時間點（預設每 0.1 秒）都新增一個影格，直到 0 到 5 全部設定"
"完成。你會看到這些影格已經出現在動畫軌道上："

msgid "Press \"Play\" on the animation to see how it looks."
msgstr "點選動畫上的「播放」鍵就能直接預覽動畫效果。"

msgid "Controlling an AnimationPlayer animation"
msgstr "動畫控制"

msgid ""
"Like with AnimatedSprite2D, you can control the animation via code using the "
"``play()`` and ``stop()`` methods. Again, here is an example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"就像 AnimatedSprite2D 一樣，AnimationPlayer 也能用 ``play()`` 和 ``stop()`` "
"方法用程式控制動畫。以下是一個示範：按住右鍵時播放動畫，放開時停止動畫。"

msgid ""
"If updating both an animation and a separate property at once (for example, "
"a platformer may update the sprite's ``h_flip``/``v_flip`` properties when a "
"character turns while starting a 'turning' animation), it's important to "
"keep in mind that ``play()`` isn't applied instantly. Instead, it's applied "
"the next time the :ref:`AnimationPlayer <class_AnimationPlayer>` is "
"processed. This may end up being on the next frame, causing a 'glitch' "
"frame, where the property change was applied, but the animation was not. If "
"this turns out to be a problem, after calling ``play()``, you can call "
"``advance(0)`` to update the animation immediately."
msgstr ""
"如果你同時變更動畫和其他屬性（例如平台遊戲角色轉身時，同時修改 Sprite 的 "
"``h_flip``/``v_flip`` 並播放 'turning' 動畫），要注意 ``play()`` 並不會立刻生"
"效，而是等到 :ref:`AnimationPlayer <class_AnimationPlayer>` 下次被處理時才生"
"效。這可能會讓屬性已經變動但動畫還沒開始，產生一個「破格」影格。如果這造成問"
"題，你可以在呼叫 ``play()`` 之後馬上呼叫 ``advance(0)``，讓動畫立即套用。"

msgid "Summary"
msgstr "總結"

msgid ""
"These examples illustrate the two classes you can use in Godot for 2D "
"animation. ``AnimationPlayer`` is a bit more complex than "
"``AnimatedSprite2D``, but it provides additional functionality, since you "
"can also animate other properties like position or scale. The class "
"``AnimationPlayer`` can also be used with an ``AnimatedSprite2D``. "
"Experiment to see what works best for your needs."
msgstr ""
"這些範例展示了你在 Godot 中可以用來做 2D 動畫的兩種主要類別。"
"``AnimationPlayer`` 雖然比 ``AnimatedSprite2D`` 複雜一些，但能提供更多功能，"
"像是同時動畫位置、縮放等屬性。另外，``AnimationPlayer`` 也能搭配 "
"``AnimatedSprite2D`` 使用。建議你多加嘗試，找出最適合你需求的工作流程。"
