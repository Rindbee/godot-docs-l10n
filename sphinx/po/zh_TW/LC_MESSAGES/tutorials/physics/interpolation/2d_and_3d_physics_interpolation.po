#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D and 3D physics interpolation"
msgstr "2D 與 3D 物理插值"

msgid ""
"Generally 2D and 3D physics interpolation work in very similar ways. "
"However, there are a few differences, which will be described here."
msgstr ""
"一般來說，2D 與 3D 的物理插值原理相似。不過兩者還是有幾點差異，以下將說明。"

msgid "Global versus local interpolation"
msgstr "全域與區域插值"

msgid ""
"In 3D, physics interpolation is performed *independently* on the **global "
"transform** of each 3D instance."
msgstr "3D 物理插值是針對每個 3D 實例的**全域變換**獨立進行的。"

msgid ""
"In 2D by contrast, physics interpolation is performed on the **local "
"transform** of each 2D instance."
msgstr "2D 則相反，插值是在每個 2D 實例的**區域變換**上進行。"

msgid "This has some implications:"
msgstr "這會產生一些影響："

msgid ""
"In 3D, it is easy to turn interpolation on and off at the level of each "
"``Node``, via "
"the :ref:`physics_interpolation_mode<class_Node_property_physics_interpolation_mode>` "
"property in the Inspector, which can be set to ``On``, ``Off``, or "
"``Inherited``."
msgstr ""
"3D 下，你可以直接透過 Inspector 中每個 ``Node`` "
"的 :ref:`physics_interpolation_mode<class_Node_property_physics_interpolation_mode>` "
"屬性，快速切換插值（可設為 On、Off 或 Inherited）。"

msgid ""
"However this means that in 3D, pivots that occur in the ``SceneTree`` (due "
"to parent child relationships) can only be interpolated **approximately** "
"over the physics tick. In most cases this will not matter, but in some "
"situations the interpolation can look slightly wrong."
msgstr ""
"但這也代表，在 3D 中，若 SceneTree 裡有父子節點關係產生的樞軸點，插值時只能做"
"到**大致上**正確。在多數狀況下這沒問題，但某些特殊情境下插值結果會略微不正"
"確。"

msgid ""
"In 2D, interpolated local transforms are passed down to children during "
"rendering. This means that if a parent has ``physics_interpolation_mode`` "
"set to ``On``, but the child is set to ``Off``, the child will still be "
"interpolated if the parent is moving. *Only the child's local transform is "
"uninterpolated.* Controlling the on / off behavior of 2D nodes therefore "
"requires a little more thought and planning."
msgstr ""
"在 2D 中，插值後的區域變換會在算繪時傳遞給子節點。也就是說，如果父節點的 "
"``physics_interpolation_mode`` 設為 On，但子節點設為 Off，只要父節點移動，子"
"節點依舊會顯示插值效果。*只有子節點本身的區域變換不插值*。因此，2D 節點的插值"
"開關需要額外規劃。"

msgid ""
"On the positive side, pivot behavior in the scene tree is perfectly "
"preserved during interpolation in 2D, which gives super smooth behaviour."
msgstr ""
"好處是，在 2D 中，SceneTree 裡的樞軸行為在插值下可以完美保留，帶來極為流暢的"
"效果。"

msgid "Resetting physics interpolation"
msgstr "重設物理插值"

msgid ""
"Whenever objects are moved to a completely new position, and interpolation "
"is not desired (so as to prevent a \"streaking\" artefact), it is the "
"responsibility of the user to call ``reset_physics_interpolation()``."
msgstr ""
"每當物件被移動到全新位置、且你不希望發生插值（避免產生「拖影」），就需要手動"
"呼叫 ``reset_physics_interpolation()``。"

msgid ""
"The good news is that in 2D, this is automatically done for you when nodes "
"first enter the tree. This reduces boiler plate, and reduces the effort "
"required to get an existing project working."
msgstr ""
"好消息是，在 2D 中，節點初次進入場景樹時會自動呼叫這個方法，減少重複程式碼，"
"也讓舊專案更容易導入本功能。"

msgid ""
"If you move objects *after* adding to the scene tree, you will still need to "
"call ``reset_physics_interpolation()`` as with 3D."
msgstr ""
"但如果你是在加入場景樹*之後*才移動物件，仍需像 3D 一樣手動呼叫 "
"``reset_physics_interpolation()``。"

msgid "2D Particles"
msgstr "2D 粒子"

msgid ""
"Currently only ``CPUParticles2D`` are supported for physics interpolation in "
"2D. It is recommended to use a physics tick rate of at least 20-30 ticks per "
"second to keep particles looking fluid."
msgstr ""
"目前 2D 物理插值僅支援 ``CPUParticles2D``。建議將物理更新率設為每秒 20~30 次"
"以上，才能讓粒子效果保持流暢。"

msgid ""
"``Particles2D`` (GPU particles) are not yet interpolated, so for now it is "
"recommended to convert to ``CPUParticles2D`` (but keep a backup of your "
"``Particles2D`` in case we get these working)."
msgstr ""
"``Particles2D``（GPU 粒子）目前尚未支援插值，因此建議暫時先轉換為 "
"``CPUParticles2D`` 使用（但請備份原始的 ``Particles2D``，以利未來支援時回"
"復）。"

msgid "Other"
msgstr "其他"

msgid ""
"``get_global_transform_interpolated()`` is currently only available for 3D."
msgstr "``get_global_transform_interpolated()`` 目前僅支援 3D。"

msgid "``MultiMeshes`` are supported in both 2D and 3D."
msgstr "``MultiMeshes`` 同時支援 2D 與 3D。"
