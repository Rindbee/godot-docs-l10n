#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Cutout animation"
msgstr "剪紙動畫"

msgid "What is it?"
msgstr "什麼是 InputEvent？"

msgid ""
"Traditionally, `cutout animation <https://en.wikipedia.org/wiki/"
"Cutout_animation>`__ is a type of `stop motion animation <https://"
"en.wikipedia.org/wiki/Stop_motion>`__ in which pieces of paper (or other "
"thin material) are cut into special shapes and arranged in two-dimensional "
"representations of characters and objects. Characters' bodies are usually "
"made out of several pieces. The pieces are arranged and photographed once "
"for each frame of the film. The animator moves and rotates the parts in "
"small increments between each shot to create the illusion of movement when "
"the images are played back quickly in sequence."
msgstr ""
"傳統上，`剪紙動畫 <https://en.wikipedia.org/wiki/Cutout_animation>`__ 是一種 "
"`定格動畫 <https://zh.wikipedia.org/zh-tw/定格動畫>`__，會將紙張（或其他薄片"
"材料）剪成特定形狀，排列成二維角色與物件的樣貌。角色的身體通常由多個部件組"
"成。每個影格都要將這些部件重新排列並拍照一次。動畫師會在每次拍攝間，微幅移動"
"並旋轉這些部件，當這些影像快速連續播放時，就能產生動作的錯覺。"

msgid ""
"Simulations of cutout animation can now be created using software as seen in "
"`South Park <https://en.wikipedia.org/wiki/South_Park>`__ and `Jake and the "
"Never Land Pirates <https://en.wikipedia.org/wiki/"
"Jake_and_the_Never_Land_Pirates>`__."
msgstr ""
"現今也能透過軟體模擬剪紙動畫，例如《南方四賤客》<https://zh.wikipedia.org/zh-"
"tw/南方四賤客> 和《傑克與夢幻島海盜》<https://zh.wikipedia.org/zh-tw/傑克與夢"
"幻島海盜> 等作品。"

msgid ""
"In video games, this technique has also become popular. Examples of this are "
"`Paper Mario <https://en.wikipedia.org/wiki/Super_Paper_Mario>`__ or `Rayman "
"Origins <https://en.wikipedia.org/wiki/Rayman_Origins>`__ ."
msgstr ""
"這種技術在電子遊戲中也很常見，例如《紙片瑪利歐》<https://zh.wikipedia.org/zh-"
"tw/紙片瑪利歐>或《雷射超人 起源》<https://zh.wikipedia.org/zh-tw/雷射超人_起"
"源>。"

msgid "Cutout animation in Godot"
msgstr "Godot 中的剪紙動畫"

msgid ""
"Godot provides tools for working with cutout rigs, and is ideal for the "
"workflow:"
msgstr "Godot 提供完善的剪紙動畫綁定工具，非常適合製作這類動畫的流程："

msgid ""
"**The animation system is fully integrated with the engine**: This means "
"animations can control much more than just motion of objects. Textures, "
"sprite sizes, pivots, opacity, color modulation, and more, can all be "
"animated and blended."
msgstr ""
"**動畫系統與引擎深度整合**：這代表動畫不僅能控制物件移動，連紋理、Sprite 尺"
"寸、樞紐點（Pivot）、透明度、顏色調整等屬性都能進行動畫與混合。"

msgid ""
"**Combine animation styles**: AnimatedSprite2D allows traditional cel "
"animation to be used alongside cutout animation. In cel animation different "
"animation frames use entirely different drawings rather than the same pieces "
"positioned differently. In an otherwise cutout-based animation, cel "
"animation can be used selectively for complex parts such as hands, feet, "
"changing facial expressions, etc."
msgstr ""
"**風格混合**：AnimatedSprite2D 可以讓傳統的賽璐璐（Cel）動畫與剪紙動畫並用。"
"在賽璐璐動畫中，不同的影格是完全不同的繪圖，而非僅僅是同一部件位置變化。在以"
"剪紙為主的動畫裡，也能針對像手部、腳部或表情等複雜部位，局部採用賽璐璐動畫。"

msgid ""
"**Custom Shaped Elements**: Custom shapes can be created "
"with :ref:`Polygon2D <class_Polygon2D>` allowing UV animation, deformations, "
"etc."
msgstr ""
"**自訂形狀元素**：可利用 :ref:`Polygon2D <class_Polygon2D>` 製作自訂多邊形，"
"支援 UV 動畫、變形等效果。"

msgid ""
"**Particle Systems**: A cutout animation rig can be combined with particle "
"systems. This can be useful for magic effects, jetpacks, etc."
msgstr ""
"**粒子系統**：剪紙動畫的綁定也能搭配粒子系統，製作魔法特效、噴射背包等效果。"

msgid ""
"**Custom Colliders**: Set colliders and influence areas in different parts "
"of the skeletons, great for bosses and fighting games."
msgstr ""
"**自訂碰撞器**：在骨架的不同部位設定碰撞器和影響區域，非常適合 Boss 和格鬥遊"
"戲。"

msgid ""
"**Animation Tree**: Allows complex combinations and blending between several "
"animations, the same way it works in 3D."
msgstr "**動畫樹**：支援多段動畫的複雜組合與混合，操作方式與 3D 動畫一致。"

msgid "And much more!"
msgstr "以及更多！"

msgid "Making of GBot"
msgstr "製作 GBot"

msgid ""
"For this tutorial, we will use as demo content the pieces of the `GBot "
"<https://www.youtube.com/watch?"
"v=S13FrWuBMx4&list=UUckpus81gNin1aV8WSffRKw>`__ character, created by "
"Andreas Esau."
msgstr ""
"在本教學中，我們將使用由 Andreas Esau 建立的 `GBot <https://www.youtube.com/"
"watch?v=S13FrWuBMx4&list=UUckpus81gNin1aV8WSffRKw>`__ 角色作為演示。"

msgid ""
"Get your assets: `cutout_animation_assets.zip <https://github.com/"
"godotengine/godot-docs-project-starters/releases/download/latest-4.x/"
"cutout_animation_assets.zip>`_."
msgstr ""
"取得您的資源：`cutout_animation_assets.zip <https://github.com/godotengine/"
"godot-docs-project-starters/releases/download/latest-4.x/"
"cutout_animation_assets.zip>`_。"

msgid "Setting up the rig"
msgstr "設定裝配"

msgid "Create an empty Node2D as root of the scene, we will work under it:"
msgstr "建立一個空的Node2D作為場景的根, 我們將在它下面工作:"

msgid ""
"The first node of the model is the hip. Generally, both in 2D and 3D, the "
"hip is the root of the skeleton. This makes it easier to animate:"
msgstr ""
"模型的第一個節點是臀部。一般來說，無論是 2D 還是 3D，臀部都是骨架的根部。這使"
"得它更容易製作動畫："

msgid ""
"Next will be the torso. The torso needs to be a child of the hip, so create "
"a child sprite and load the torso texture, later accommodate it properly:"
msgstr ""
"接下來將是軀幹, 軀幹需要是臀部的子級, 所以要建立一個子級精靈, 並載入軀幹紋"
"理, 然後適當地調整它:"

msgid ""
"This looks good. Let's see if our hierarchy works as a skeleton by rotating "
"the torso. We can do this be pressing :kbd:`E` to enter rotate mode, and "
"dragging with the left mouse button. To exit rotate mode hit :kbd:`ESC`."
msgstr ""
"這看起來不錯。讓我們通過旋轉軀幹來看看層次結構是否能像骨架一樣工作。可以"
"按 :kbd:`E` 進入旋轉模式，然後用滑鼠左鍵拖動。要退出旋轉模式，請"
"按 :kbd:`ESC`。"

msgid "The rotation pivot is wrong and needs to be adjusted."
msgstr "旋轉軸心錯誤，需要調整。"

msgid ""
"This small cross in the middle of the :ref:`Sprite2D <class_Sprite2D>` is "
"the rotation pivot:"
msgstr ":ref:`Sprite2D <class_Sprite2D>` 中間的這個小十字就是旋轉軸心："

msgid "Adjusting the pivot"
msgstr "調整軸心"

msgid ""
"The pivot can be adjusted by changing the *offset* property in the Sprite2D:"
msgstr "可以透過調整 Sprite2D 的 *offset* （偏移）屬性來設定旋轉軸心："

msgid ""
"The pivot can also be adjusted *visually*. While hovering over the desired "
"pivot point,  press :kbd:`V` to move the pivot there for the selected "
"Sprite2D. There is also a tool in the tool bar that has a similar function."
msgstr ""
"軸心也可以在畫面上*直接調整*。把滑鼠游標移到想要的軸心點，按 :kbd:`V` 就會把"
"選取的 Sprite2D 軸心移到那裡。工具列上也有其他相關工具可以用。"

msgid ""
"Continue adding body pieces, starting with the right arm. Make sure to put "
"each sprite in its correct place in the hierarchy, so its rotations and "
"translations are relative to its parent:"
msgstr ""
"繼續新增身體元件, 從右臂開始. 確保將每個精靈放在其在層次結構中的正確位置, 其"
"旋轉和平移都是相對於其父級而言的:"

msgid ""
"With the left arm there's a problem. In 2D, child nodes appear in front of "
"their parents:"
msgstr "左臂有些問題. 在二維中, 子節點出現在父節點的前面:"

msgid ""
"We want the left arm to appear *behind* the hip and the torso. We could move "
"the left arm nodes behind the hip (above the hip node in the scene "
"hierarchy), but then the left arm is no longer in its proper place in the "
"hierarchy. This means it wouldn't be affected by the movement of the torso. "
"We'll fix this problem with ``RemoteTransform2D`` nodes."
msgstr ""
"我們希望左臂出現在臀部和軀幹的 *後面* . 我們可以將左臂節點在場景層次結構中移"
"到臀部節點上面, 但這樣一來, 左臂在層次結構中的位置就不對了, 這意味著它不會受"
"到軀幹移動的影響. 我們用 ``RemoteTransform2D`` 節點來解決這個問題."

msgid ""
"You can also fix depth ordering problems by adjusting the Z property of any "
"node inheriting from Node2D."
msgstr ""
"你也可以調整任何繼承自 Node2D 節點的 Z 屬性，來解決圖層深度排序的問題。"

msgid "RemoteTransform2D node"
msgstr "RemoteTransform2D 節點"

msgid ""
"The :ref:`RemoteTransform2D <class_RemoteTransform2D>` node transforms nodes "
"somewhere else in the hierarchy. This node applies its own transform "
"(including any transformation it inherits from its parents) to the remote "
"node it targets."
msgstr ""
":ref:`RemoteTransform2D <class_RemoteTransform2D>` 節點對層次結構中其他地方的"
"節點進行變換. 這個節點將自己的變換, 包括它從父節點繼承的任何變換, 應用到它所"
"針對的遙控節點."

msgid ""
"This allows us to correct the visibility order of our elements, "
"independently of the locations of those parts in the cutout hierarchy."
msgstr ""
"這使我們能夠修正元素的可見性順序, 這些部分獨立於在剪裁層次結構中的位置."

msgid ""
"Create a ``RemoteTransform2D`` node as a child of the torso. Call it "
"``remote_arm_l``. Create another RemoteTransform2D node inside the first and "
"call it ``remote_hand_l``. Use the ``Remote Path`` property of the two new "
"nodes to target the ``arm_l`` and ``hand_l`` sprites respectively:"
msgstr ""
"建立一個 ``RemoteTransform2D`` 節點作為軀幹的子節點。命名為 "
"``remote_arm_l``。在第一個節點中再建立一個 RemoteTransform2D 節點並將其命名"
"為 ``remote_hand_l``。讓這兩個新節點的 ``Remote Path`` 屬性分別指向 "
"``arm_l`` 和 ``hand_l`` 精靈："

msgid ""
"Moving the ``RemoteTransform2D`` nodes now moves the sprites. So we can "
"create animations by adjusting the ``RemoteTransform2D`` transforms:"
msgstr ""
"移動 ``RemoteTransform2D`` 節點現在可以移動精靈. 所以可以通過調整 "
"``RemoteTransform2D`` 變換來建立動畫:"

msgid "Completing the skeleton"
msgstr "完成骨架"

msgid ""
"Complete the skeleton by following the same steps for the rest of the parts. "
"The resulting scene should look similar to this:"
msgstr "按照其餘部分的相同步驟完成骨架。生成的場景應該類似於："

msgid ""
"The resulting rig will be easy to animate. By selecting the nodes and "
"rotating them you can animate forward kinematics (FK) efficiently."
msgstr ""
"生成的裝備很容易製作動畫. 通過選擇節點並旋轉它們, 您可以有效地為前向運動學"
"(FK)設定動畫."

msgid "For simple objects and rigs this is fine, but there are limitations:"
msgstr "對於簡單的物體和裝配來說已經足夠了, 但仍然有限制:"

msgid ""
"Selecting sprites in the main viewport can become difficult in complex rigs. "
"The scene tree ends up being used to select parts instead, which can be "
"slower."
msgstr ""
"在複雜的裝配中, 在主視口中選擇精靈會變得很困難. 場景樹最終被替代, 用來選擇元"
"件, 這可能會比較慢."

msgid ""
"Inverse Kinematics (IK) is useful for animating extremities like hands and "
"feet, and can't be used with our rig in its current state."
msgstr ""
"反向動力學（Inverse Kinematics、IK）對於手腳等肢體的運動非常有用，目前我們的"
"綁定還無法使用。"

msgid "To solve these problems we'll use Godot's skeletons."
msgstr "為了解決這些問題，我們將會使用 Godot 的骨架。"

msgid "Skeletons"
msgstr "骨架"

msgid ""
"In Godot there is a helper to create \"bones\" between nodes. The bone-"
"linked nodes are called skeletons."
msgstr ""
"在 Godot 中，有一個在節點之間建立“骨骼”的輔助工具。骨骼連接起的節點稱為骨架。"

msgid ""
"As an example, let's turn the right arm into a skeleton. To create a "
"skeleton, a chain of nodes must be selected from top to bottom:"
msgstr ""
"舉個例子，讓我們把右臂變成一個骨架。要建立一個骨架，必須從上到下選擇節點鏈："

msgid "Then, click on the Skeleton menu and select ``Make Bones``."
msgstr "然後按一下“骨架”功能表並選擇 ``製作骨骼``。"

msgid "This will add bones covering the arm, but the result may be surprising."
msgstr "這將增加覆蓋在手臂上的骨頭, 但結果可能令人驚訝."

msgid ""
"Why does the hand lack a bone? In Godot, a bone connects a node with its "
"parent. And there's currently no child of the hand node. With this knowledge "
"let's try again."
msgstr ""
"為什麼這只手缺少一根骨骼？在 Godot 中，使用骨骼把節點和它的父節點連接起來。目"
"前沒有手節點的子節點。有了這些知識，讓我們再試一次。"

msgid ""
"The first step is creating an endpoint node. Any kind of node will do, "
"but :ref:`Marker2D <class_Marker2D>` is preferred because it's visible in "
"the editor. The endpoint node will ensure that the last bone has orientation."
msgstr ""
"第一步是建立端點節點. 任何型別的節點都可以, 但是 :ref:`Marker2D "
"<class_Marker2D>` 是首選, 因為它在編輯器中可見. 端點節點將確保最後一個骨骼具"
"有方向."

msgid ""
"Now select the whole chain, from the endpoint to the arm and create bones:"
msgstr "現在選擇整個鏈, 從端點到手臂並建立骨骼:"

msgid ""
"The result resembles a skeleton a lot more, and now the arm and forearm can "
"be selected and animated."
msgstr "結果更像骨架了，現在可以選擇手臂和前臂並設定動畫。"

msgid ""
"Create endpoints for all important extremities. Generate bones for all "
"articulable parts of the cutout, with the hip as the ultimate connection "
"between all of them."
msgstr ""
"為所有重要的末端建立端點. 為剪紙的所有可關節部分生成骨骼, 臀部是它們之間的最"
"終連接."

msgid ""
"You may notice that an extra bone is created when connecting the hip and "
"torso. Godot has connected the hip node to the scene root with a bone, and "
"we don't want that. To fix this, select the root and hip node, open the "
"Skeleton menu, click ``clear bones``."
msgstr ""
"你可能會注意到，在連接臀部和軀幹時，會多出一根骨骼。Godot 用骨骼將臀部節點連"
"接到了場景根部，我們不希望這樣。要解決這個問題，選擇根部和臀部節點，打開“骨"
"架”功能表，點擊 ``清除骨骼``。"

msgid "Your final skeleton should look something like this:"
msgstr "您的骨架最後看上去應該是這樣的："

msgid ""
"You might have noticed a second set of endpoints in the hands. This will "
"make sense soon."
msgstr "你可能已經注意到了手上的第二組端點. 這很快就會有意義."

msgid ""
"Now that the whole figure is rigged, the next step is setting up the IK "
"chains. IK chains allow for more natural control of extremities."
msgstr ""
"現在整個人物已經裝配好了，下一步就是設定 IK 鏈。IK 鏈可以更自然的控制四肢。"

msgid "IK chains"
msgstr "IK 鏈"

msgid ""
"IK stands for inverse kinematics. It's a convenient technique for animating "
"the position of hands, feet and other extremities of rigs like the one we've "
"made. Imagine you want to pose a character's foot in a specific position on "
"the ground. Without IK chains, each motion of the foot would require "
"rotating and positioning several other bones (the shin and the thigh at "
"least). This would be quite complex and lead to imprecise results. IK allows "
"us to move the foot directly while the shin and thigh self-adjust."
msgstr ""
"IK 是反向動力學（Inverse Kinematics）的縮寫，給手部、足部以及其它肢體的動畫帶"
"來便利。想像一下，您想要將角色的腳放在地面上的特定位置。如果沒有 IK 鏈，腳的"
"每次運動都需要旋轉和定位其他幾個骨骼（至少得涉及大腿及小腿）。這將非常複雜並"
"導致不精確的結果。"

msgid ""
"**IK chains in Godot currently work in the editor only**, not at runtime. "
"They are intended to ease the process of setting keyframes, and are not "
"currently useful for techniques like procedural animation."
msgstr ""
"**Godot 中的 IK 鏈目前僅在編輯器中工作**，而不是在運作時工作。它們旨在簡化設"
"定關鍵影格的過程，目前對於程式動畫等技術沒有用處。"

msgid ""
"To create an IK chain, select a chain of bones from endpoint to the base for "
"the chain. For example, to create an IK chain for the right leg, select the "
"following:"
msgstr ""
"要建立 IK 鏈，請選擇從端點到鏈基的骨骼鏈。例如，要為右腿建立一條 IK 鏈，選擇"
"以下："

msgid "Then enable this chain for IK. Go to Edit > Make IK Chain."
msgstr "然後為 IK 啟用此鏈。轉到“編輯 > 製作 IK 鏈”。"

msgid "As a result, the base of the chain will turn *Yellow*."
msgstr "結果，鏈的基部將變為*黃色*。"

msgid ""
"Once the IK chain is set up, grab any child or grand-child of the base of "
"the chain (e.g. a foot), and move it. You'll see the rest of the chain "
"adjust as you adjust its position."
msgstr ""
"一旦 IK 鏈設定完畢，抓住任何鏈基（例如腳部）的任意巢狀子節點並移動。你會看到"
"鏈的剩餘部分跟隨你的移動調整位置。"

msgid "Animation tips"
msgstr "動畫"

msgid ""
"The following section will be a collection of tips for creating animation "
"for your cutout rigs. For more information on how the animation system in "
"Godot works, see :ref:`doc_introduction_animation`."
msgstr ""
"下一節將是建立剪紙動畫的技巧集合。關於 Godot 中的動畫系統如何工作的更多資訊，"
"請參閱 :ref:`doc_introduction_animation`。"

msgid "Setting keyframes and excluding properties"
msgstr "設定關鍵影格和排除屬性"

msgid ""
"Special contextual elements appear in the top toolbar when the animation "
"editor window is open:"
msgstr "當動畫編輯器視窗開啟時，頂端工具列會出現動畫專用的操作按鈕："

msgid ""
"The key button inserts location, rotation, and scale keyframes for the "
"selected objects or bones at the current playhead position."
msgstr ""
"『鑰匙』按鈕會在目前時間軸位置，幫選中的物件或骨骼同時插入位置、旋轉與縮放的"
"關鍵影格。"

msgid ""
"The \"loc\", \"rot\", and \"scl\" toggle buttons to the left of the key "
"button modify its function, allowing you to specify which of the three "
"properties keyframes will be created for."
msgstr ""
"通過切換關鍵影格按鈕左邊的 \"位置\" , \"旋轉\" 和 \"縮放\" 按鈕, 可以修改其功"
"能, 允許您指定將為三個屬性中的哪一個建立關鍵影格."

msgid ""
"Here's an illustration of how this can be useful: Imagine you have a node "
"which already has two keyframes animating its scale only. You want to add an "
"overlapping rotation movement to the same node. The rotation movement should "
"begin and end at different times from the scale change that's already set "
"up. You can use the toggle buttons to have only rotation information added "
"when you add a new keyframe. This way, you can avoid adding unwanted scale "
"keyframes which would disrupt the existing scale animation."
msgstr ""
"舉例來說：假設你有一個節點，已有兩個只做縮放動畫的關鍵影格。你現在想在同個節"
"點上另加旋轉動畫，且旋轉動畫的起訖時間和縮放動畫不同。這時只要開啟『旋轉』那"
"個切換鈕，插入新關鍵影格時就只會記錄旋轉資訊，不會覆蓋到原本的縮放動畫。如此"
"就能避免不小心插入多餘的縮放關鍵影格，讓動畫更好管理。"

msgid "Creating a rest pose"
msgstr "建立預設姿勢（Rest Pose）"

msgid ""
"Think of a rest pose as a default pose that your cutout rig should be set to "
"when no other pose is active in your game. Create a rest pose as follows:"
msgstr ""
"Rest Pose（預設姿勢）是指當遊戲沒啟用其他動畫時，剪紙綁定會回到的預設站姿。建"
"立方式如下："

msgid ""
"1. Make sure the rig parts are positioned in what looks like a \"resting\" "
"arrangement."
msgstr "1. 確保綁定元件處於 \"休息\" 狀態."

msgid "Create a new animation, rename it \"rest\"."
msgstr "建立一個新動畫，並命名為「rest」。"

msgid "Select all nodes in your rig (box selection should work fine)."
msgstr "選擇裝配中的所有節點(應該可以框選)."

msgid ""
"4. Make sure the \"loc\", \"rot\", and \"scl\" toggle buttons are all active "
"in the toolbar."
msgstr "4. 確保工具列中的 \"位置\" , \"旋轉\" 和 \"縮放\" 切換按鈕都是活動的."

msgid ""
"5. Press the key button. Keys will be inserted for all selected parts "
"storing their current arrangement. This pose can now be recalled when "
"necessary in your game by playing the \"rest\" animation you've created."
msgstr ""
"5. 按下關鍵影格按鈕。關鍵影格將插入所有選擇的元件，以儲存它們的目前佈局。現"
"在，當你需要的時候，你可以通過播放你建立的“放鬆”動畫來再次調出你的姿勢。"

msgid "Modifying rotation only"
msgstr "只製作旋轉動畫"

msgid ""
"When animating a cutout rig, often it's only the rotation of the nodes that "
"needs to change. Location and scale are rarely used."
msgstr "當製作剪紙動畫綁定時, 通常只需要改變節點的旋轉. 很少使用位置和比例."

msgid ""
"So when inserting keys, you might find it convenient to have only the "
"\"rot\" toggle active most of the time:"
msgstr ""
"因此, 在插入鍵時, 你可能會發現在大多數時間裡只有 \"rot\" 切換鍵處於啟動狀態, "
"會很方便:"

msgid ""
"This will avoid the creation of unwanted animation tracks for position and "
"scale."
msgstr "這樣可以避免產生多餘的位置與縮放動畫軌道。"

msgid "Keyframing IK chains"
msgstr "關鍵影格 IK 鏈"

msgid ""
"When editing IK chains, it's not necessary to select the whole chain to add "
"keyframes. Selecting the endpoint of the chain and inserting a keyframe will "
"automatically insert keyframes for all other parts of the chain too."
msgstr ""
"編輯IK鏈時, 不需要選擇整個鏈來新增關鍵影格. 選擇鏈的端點並插入關鍵影格將自動"
"為鏈的所有其他部分插入關鍵影格."

msgid "Visually move a sprite behind its parent"
msgstr "視覺上移動父級後面的精靈"

msgid ""
"Sometimes it is necessary to have a node change its visual depth relative to "
"its parent node during an animation. Think of a character facing the camera, "
"who pulls something out from behind his back and holds it out in front of "
"him. During this animation the whole arm and the object in his hand would "
"need to change their visual depth relative to the body of the character."
msgstr ""
"有時, 在動畫過程中, 需要讓節點相對於其父節點更改其可視深度. 想像一個面對鏡頭"
"的角色, 他從背後拿出一個東西放在面前. 在這個動畫過程中, 整個手臂和他手中的物"
"體都需要改變相對於角色身體的視覺深度."

msgid ""
"To help with this there's a keyframable \"Behind Parent\" property on all "
"Node2D-inheriting nodes. When planning your rig, think about the movements "
"it will need to perform and give some thought to how you'll use \"Behind "
"Parent\" and/or RemoteTransform2D nodes. They provide overlapping "
"functionality."
msgstr ""
"為了幫助解決這個問題，在所有 Node2D 的衍生節點上都有一個可製作關鍵影格"
"的“Behind Parent”（在父級之後）屬性。規劃綁定時，請考慮它需要執行的動作，並考"
"慮如何使用“Behind Parent”和/或 RemoteTransform2D 節點。它們提供重疊的功能。"

msgid "Setting easing curves for multiple keys"
msgstr "為多個關鍵影格設定緩動曲線"

msgid "To apply the same easing curve to multiple keyframes at once:"
msgstr "要將同一緩動曲線同時應用於多個關鍵影格:"

msgid "Select the relevant keys."
msgstr "選擇相關的關鍵影格."

msgid ""
"Click on the pencil icon in the bottom right of the animation panel. This "
"will open the transition editor."
msgstr "點擊動畫面板右下角的鉛筆圖示. 這將打開過渡編輯器."

msgid "In the transition editor, click on the desired curve to apply it."
msgstr "在過渡編輯器中, 點擊所需曲線進行應用."

msgid "2D Skeletal deform"
msgstr "2D 骨架變形（Skeletal Deform）"

msgid ""
"Skeletal deform can be used to augment a cutout rig, allowing single pieces "
"to deform organically (e.g. antennae that wobble as an insect character "
"walks)."
msgstr ""
"骨架變形（Skeletal Deform）可以進一步強化剪紙動畫綁定，讓單一部件能有自然的變"
"形效果（例如昆蟲走路時會搖晃的觸角）。"

msgid ""
"This process is described in a :ref:`separate tutorial <doc_2d_skeletons>`."
msgstr "這部分詳見 :ref:`專門教學 <doc_2d_skeletons>`。"
