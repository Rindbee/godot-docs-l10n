#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using AnimationTree"
msgstr "使用 AnimationTree"

msgid "Introduction"
msgstr "前言"

msgid ""
"A new scene was created for the player with a ``CharacterBody3D`` as root. "
"Inside this scene, the original ``.dae`` (Collada) file was instantiated and "
"an ``AnimationTree`` node was created."
msgstr ""
"這裡為玩家建立了一個以 ``CharacterBody3D`` 為根節點的新場景。場景中產生實體原"
"本的 ``.dae``（Collada）檔案，並新增一個 ``AnimationTree`` 節點。"

msgid "Creating a tree"
msgstr "建立樹狀結構"

msgid ""
"Animation nodes, which reference an animation from the linked "
"``AnimationPlayer``."
msgstr "動畫節點，會從已連結的 ``AnimationPlayer`` 取得動畫來使用。"

msgid "Blend tree"
msgstr "混合樹"

msgid "Blend2 / Blend3"
msgstr "混合2/混合3"

msgid ""
"These nodes will blend between two or three inputs by a user-specified blend "
"value:"
msgstr "這些節點將通過使用者指定輸入的兩個或三個混合值之間進行混合:"

msgid "OneShot"
msgstr "OneShot"

msgid "TimeSeek"
msgstr "時間縮放"

msgid "TimeScale"
msgstr "時間縮放"

msgid "Transition"
msgstr "轉場效果"

msgid "StateMachine"
msgstr "狀態機"

msgid ""
"*Sync*: Will switch to the next state immediately, but will seek the new "
"state to the playback position of the old state."
msgstr ""
"*Sync* （同步）：立即切換到下一個狀態，但會將新狀態快進並到舊狀態的播放位置。"

msgid ""
"*At End*: Will wait for the current state playback to end, then switch to "
"the beginning of the next state animation."
msgstr ""
"*At End* （末尾）：將等待目前狀態播放結束，然後切換到下一個狀態動畫的開頭。"

msgid "*Xfade Time* is the time to cross-fade between this state and the next."
msgstr "*Xfade Time* （疊化時間）是在這個狀態和下一個狀態之間交叉漸變的時間。"

msgid ""
"*Priority* is used together with the ``travel()`` function from code (more "
"on this later). Lower priority transitions are preferred when travelling "
"through the tree."
msgstr ""
"*Priority* （優先順序）與程式碼中的 ``travel()`` 函式一起使用（後述）。當從一"
"個狀態到另一個狀態時，會優先使用優先順序較低的過渡。"

msgid "For better blending"
msgstr "為了更好的混合"

msgid ""
"In Godot 4.0+, in order for the blending results to be deterministic "
"(reproducible and always consistent), the blended property values must have "
"a specific initial value. For example, in the case of two animations to be "
"blended, if one animation has a property track and the other does not, the "
"blended animation is calculated as if the latter animation had a property "
"track with the initial value."
msgstr ""
"在 Godot 4.0+ 中，為了使混合結果具有確定性（可重現且始終一致），混合屬性值必"
"須具有特定的初始值。例如，在要混合兩個動畫的情況下，如果一個動畫具有屬性軌跡"
"而另一個動畫沒有，則計算混合動畫時就好像後一個動畫具有具有初始值的屬性軌跡一"
"樣。"

msgid ""
"When using Position/Rotation/Scale 3D tracks for Skeleton3D bones, the "
"initial value is Bone Rest. For other properties, the initial value is ``0`` "
"and if the track is present in the ``RESET`` animation, the value of its "
"first keyframe is used instead."
msgstr ""
"當對 Skeleton3D 骨骼使用位置/旋轉/縮放 3D 軌跡時，初始值為 Bone Rest。對於其"
"他屬性，初始值為“0”，如果軌道存在於“RESET”動畫中，則使用其第一個關鍵影格的"
"值。"

msgid ""
"For example, the following AnimationPlayer has two animations, but one of "
"them lacks a Property track for Position."
msgstr ""
"例如，下面的AnimationPlayer有兩個動畫，但其中一個缺少Position的Property軌道。"

msgid ""
"This means that the animation lacking that will treat those Positions as "
"``Vector2(0, 0)``."
msgstr "這意味著缺少的動畫會將這些位置視為「Vector2(0, 0)」。"

msgid ""
"This problem can be solved by adding a Property track for Position as an "
"initial value to the ``RESET`` animation."
msgstr "這個問題可以透過加入一個位置屬性軌跡作為「RESET」動畫的初始值來解決。"

msgid ""
"Be aware that the ``RESET`` animation exists to define the default pose when "
"loading an object originally. It is assumed to have only one frame and is "
"not expected to be played back using the timeline."
msgstr ""
"請注意，「RESET」動畫的存在是為了定義最初載入物件時的預設姿勢。假設它只有一影"
"格，並且預計不會使用時間軸進行播放。"

msgid ""
"This can be useful for Skeleton3Ds to prevent the bones penetrating the body "
"when blending animations. Therefore, Skeleton3D's Bone Rest values should be "
"as close to the midpoint of the movable range as possible. **This means that "
"for humanoid models, it is preferable to import them in a T-pose**."
msgstr ""
"這對於 Skeleton3D 很有用，可以在混合動畫時防止骨頭穿透身體。因此，Skeleton3D "
"的 Bone Rest 值應盡可能接近可移動範圍的中點。 **這意味著對於人形模型，最好以 "
"T 形姿勢匯入它們**。"

msgid ""
"You can see that the shortest rotation path from Bone Rests is prioritized "
"rather than the shortest rotation path between animations."
msgstr ""
"您可以看到，優先考慮骨骼休息的最短旋轉路徑，而不是動畫之間的最短旋轉路徑。"

msgid ""
"If you need to rotate Skeleton3D itself more than 180 degrees by blend "
"animations for movement, you can use Root Motion."
msgstr ""
"如果您需要透過混合動畫進行運動來將 Skeleton3D 本身旋轉超過 180 度，則可以使"
"用 Root Motion。"

msgid "Root motion"
msgstr "根骨骼運動"

msgid ""
"When working with 3D animations, a popular technique is for animators to use "
"the root skeleton bone to give motion to the rest of the skeleton. This "
"allows animating characters in a way where steps actually match the floor "
"below. It also allows precise interaction with objects during cinematics."
msgstr ""
"處理 3D 動畫時，一種流行的技術是動畫師利用根骨骼為其餘部分骨骼製作運動動畫。"
"這使得動畫角色的腳步與下面的地板相配對。並且允許在電影拍攝期間與物體進行精確"
"的互動。"

msgid ""
"When playing back the animation in Godot, it is possible to select this bone "
"as the *root motion track*. Doing so will cancel the bone transformation "
"visually (the animation will stay in place)."
msgstr ""
"在 Godot 中重播動畫時，可以選擇這根骨骼作為*根運動軌跡*。這會在視覺上取消這根"
"骨骼的變換（動畫將保持原狀）。"

msgid ""
"Afterwards, the actual motion can be retrieved via the :ref:`AnimationTree "
"<class_AnimationTree>` API as a transform:"
msgstr ""
"然後, 實際運動可以通過 :ref:`AnimationTree <class_AnimationTree>` API 作為轉"
"換:"

msgid ""
"This can be fed to functions such as :ref:`CharacterBody3D.move_and_slide "
"<class_CharacterBody3D_method_move_and_slide>` to control the character "
"movement."
msgstr ""
"可以提供給 :ref:`CharacterBody3D.move_and_slide "
"<class_CharacterBody3D_method_move_and_slide>` 等函式，用來控制角色移動。"

msgid "Controlling from code"
msgstr "使用程式碼控制"

msgid ""
"After building the tree and previewing it, the only question remaining is "
"\"How is all this controlled from code?\"."
msgstr "建立樹和預覽之後，只剩下一個問題：“如何使用程式碼控制所有的節點？”。"

msgid ""
"The actual animation data is contained in the ``AnimationTree`` node and is "
"accessed via properties. Check the \"Parameters\" section of the "
"``AnimationTree`` node to see all the parameters that can be modified in "
"real-time:"
msgstr ""
"實際的動畫封包含在 ``AnimationTree`` 節點中, 並通過屬性存取. 檢查 "
"``AnimationTree`` 節點的 \"參數\" 部分, 查看所有可以即時修改的參數:"
