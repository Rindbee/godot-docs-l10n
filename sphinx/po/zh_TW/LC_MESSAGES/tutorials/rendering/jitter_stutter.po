#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Fixing jitter, stutter and input lag"
msgstr "修正抖動、卡頓與輸入延遲"

msgid "What is jitter, stutter and input lag?"
msgstr "什麼是抖動、卡頓與輸入延遲？"

msgid ""
"*Jitter* and *stutter* are two different alterations to visible motion of "
"objects on screen that may affect a game, even when running at full speed. "
"These effects are mostly visible in games where the world moves at a "
"constant speed in a fixed direction, like runners or platformers."
msgstr ""
"*抖動* （jitter）與 *卡頓* （stutter）是畫面物件可見運動的兩種不同異常現象，"
"即使遊戲在滿幀率下運作也可能發生，並影響遊戲體驗。這類效應在世界以固定速度、"
"固定方向運動的遊戲（如跑酷或橫向捲軸平台遊戲）中特別明顯。"

msgid ""
"*Input lag* is unrelated to jitter and stutter, but is sometimes discussed "
"alongside. Input lag refers to visible on-screen delay when performing "
"actions with the mouse, keyboard, controller or touchscreen. It can be "
"related to game code, engine code or external factors (such as hardware). "
"Input lag is most noticeable in games that use the mouse to aim, such as "
"first-person games. Input lag can't be completely eliminated, but it can be "
"reduced in several ways."
msgstr ""
"*輸入延遲* 和抖動、卡頓無直接關聯，但經常一起被討論。輸入延遲是指玩家用滑鼠、"
"鍵盤、控制器或觸控螢幕操作時，畫面反應所產生的可見延遲。其原因可能來自遊戲程"
"式碼、引擎核心，或外部硬體。輸入延遲在需要滑鼠瞄準的遊戲（如第一人稱射擊）中"
"最為明顯。雖然輸入延遲無法完全消除，但可以用多種方法減少。"

msgid "Distinguishing between jitter and stutter"
msgstr "如何區分抖動與卡頓"

msgid ""
"A game running at a normal framerate without exhibiting any effect will "
"appear smooth:"
msgstr "一款在正常幀率下運作且沒有異常現象的遊戲，畫面會相當流暢："

msgid "A game exhibiting *jitter* will shake constantly in a very subtle way:"
msgstr "出現*抖動*的遊戲會有持續微小晃動的現象："

msgid ""
"Finally, a game exhibiting *stutter* will appear smooth, but appear to "
"*stop* or *roll back a frame* every few seconds:"
msgstr ""
"而出現*卡頓*的遊戲則大致上保持流暢，但每隔幾秒就會*停頓*或*倒退一個影格*："

msgid "Jitter"
msgstr "抖動"

msgid "Stutter"
msgstr "卡頓"

msgid ""
"Forcing your graphics card to use the maximum performance profile can also "
"help reduce stuttering, at the cost of increased GPU power draw."
msgstr "強制顯示卡使用最高效能設定檔也能減少卡頓，但會增加 GPU 耗電。"

msgid "Windows"
msgstr "Windows"

msgid ""
"For fullscreen, Windows gives special priority to the game so stutter is no "
"longer visible and very rare. This is how most games are played."
msgstr ""
"在全螢幕模式下，Windows 會給予遊戲特殊優先順序，因此卡頓現象極少見。大多數遊"
"戲都是採用這種方式執行。"

msgid ""
"When using a mouse with a polling rate of 1,000 Hz or more, consider using a "
"fully up-to-date Windows 11 installation which comes with fixes related to "
"high CPU utilization with high polling rate mice. These fixes are not "
"available in Windows 10 and older versions."
msgstr ""
"若您使用輪詢率 1,000 Hz 以上的滑鼠，建議使用最新版 Windows 11，該系統針對高輪"
"詢率滑鼠引起的高 CPU 使用率有相關修正，這些修正在 Windows 10 及更舊版本中並未"
"實作。"

msgid ""
"Games should use the **Exclusive Fullscreen** window mode, as opposed to "
"**Fullscreen** which is designed to prevent Windows from automatically "
"treating the window as if it was exclusive fullscreen."
msgstr ""
"遊戲建議使用 **Exclusive Fullscreen**（獨佔全螢幕）視窗模式，而非 "
"**Fullscreen**，因為後者設計目的是避免 Windows 將視窗誤判為獨佔全螢幕。"

msgid ""
"**Fullscreen** is meant to be used by GUI applications that want to use per-"
"pixel transparency without a risk of having it disabled by the OS. It "
"achieves this by leaving a 1-pixel line at the bottom of the screen. By "
"contrast, **Exclusive Fullscreen** uses the actual screen size and allows "
"Windows to reduce jitter and input lag for fullscreen games."
msgstr ""
"**Fullscreen** 主要用於需要每像素透明度且不希望被作業系統關閉這功能的 GUI 應"
"用程式。它會在螢幕底部保留 1 像素的線條。而 **Exclusive Fullscreen** 則會真正"
"以螢幕實際尺寸運作，讓 Windows 能降低全螢幕遊戲的抖動與輸入延遲。"

msgid "Linux"
msgstr "Linux"

msgid ""
"Stutter may be visible on desktop Linux, but this is usually associated with "
"different video drivers and compositors. Some compositors may also trigger "
"this problem (e.g. KWin), so it is advised to try using a different one to "
"rule it out as the cause. Some window managers such as KWin and Xfwm allow "
"you to manually disable compositing, which can improve performance (at the "
"cost of tearing)."
msgstr ""
"在 Linux 桌面環境下，也可能出現卡頓，這通常與顯示卡驅動程式或視窗合成器有關。"
"有些合成器（例如 KWin）會惡化此問題，可以考慮切換其他合成器進行排除。部分視窗"
"管理器如 KWin、Xfwm 可手動關閉合成，能提升效能，但可能會導致畫面撕裂。"

msgid ""
"There is no workaround for driver or compositor stuttering, other than "
"reporting it as an issue to the driver or compositor developers. Stutter may "
"be more present when playing in windowed mode as opposed to fullscreen, even "
"with compositing disabled."
msgstr ""
"針對由驅動程式或合成器導致的卡頓，除了向相關開發團隊回報問題，無其它解法。在"
"視窗模式下，即使已關閉合成，卡頓情形通常比全螢幕更明顯。"

msgid ""
"`Feral GameMode <https://github.com/FeralInteractive/gamemode>`__ can be "
"used to automatically apply optimizations (such as forcing the GPU "
"performance profile) when running specific processes."
msgstr ""
"`Feral GameMode <https://github.com/FeralInteractive/gamemode>`__ 可用來於執"
"行特定程式時自動套用最佳化設定（例如強制 GPU 使用高效能模式）。"

msgid "macOS"
msgstr "macOS"

msgid ""
"Generally, macOS is stutter-free, although recently some bugs were reported "
"when running on fullscreen (this is a macOS bug). If you have a machine "
"exhibiting this behavior, please let us know."
msgstr ""
"一般來說，macOS 基本上不會發生卡頓。不過，近期有部分全螢幕狀態下的卡頓回報"
"（這屬於 macOS 系統本身的問題）。若您的裝置有此現象，請回報給我們。"

msgid "Android"
msgstr "Android"

msgid ""
"Generally, Android is stutter and jitter-free because the running activity "
"gets all the priority. That said, there may be problematic devices (older "
"Kindle Fire is known to be one). If you see this problem on Android, please "
"let us know."
msgstr ""
"Android 裝置通常不會發生卡頓與抖動，因為執行中的應用會獲得最高優先權。但仍有"
"些裝置可能出現問題（如舊款 Kindle Fire）。若您在 Android 平臺遇到類似狀況，歡"
"迎回報。"

msgid "iOS"
msgstr "iOS"

msgid ""
"iOS devices are generally stutter-free, but older devices running newer "
"versions of the operating system may exhibit problems. This is generally "
"unavoidable."
msgstr ""
"iOS 裝置通常不太會有卡頓現象，但舊型裝置若升級到新版系統，仍有可能出現問題，"
"這在多數狀況下無法避免。"

msgid "Input lag"
msgstr "輸入延遲"

msgid "Project configuration"
msgstr "專案設定"

msgid ""
"On platforms that support disabling V-Sync, input lag can be made less "
"noticeable by disabling V-Sync in the project settings. This will however "
"cause tearing to appear, especially on monitors with low refresh rates. It's "
"suggested to make V-Sync available as an option for players to toggle."
msgstr ""
"在支援停用垂直同步的平臺上，可以在專案設定中關閉 V-Sync 以降低輸入延遲，但這"
"樣會導致畫面撕裂，尤其在低刷新率顯示器上。建議讓 V-Sync 作為選項，讓玩家可自"
"行切換。"

msgid ""
"When using the Forward+ or Mobile rendering methods, another way to reduce "
"visual latency when V-Sync is enabled is to use double-buffered V-Sync "
"instead of the default triple-buffered V-Sync. Since Godot 4.3, this can be "
"achieved by reducing the **Display > Window > V-Sync > Swapchain Image "
"Count** project setting to ``2``.  The downside of using double buffering is "
"that framerate will be less stable if the display refresh rate can't be "
"reached due to a CPU or GPU bottleneck. For instance, on a 60 Hz display, if "
"the framerate would normally drop to 55 FPS during gameplay with triple "
"buffering, it will have to drop down to 30 FPS momentarily with double "
"buffering (and then go back to 60 FPS when possible). As a result, double-"
"buffered V-Sync is only recommended if you can *consistently* reach the "
"display refresh rate on the target hardware."
msgstr ""
"當使用 Forward+ 或 Mobile 算繪模式時，若已啟用 V-Sync，還能進一步透過「雙緩"
"衝」取代預設的「三緩衝」來降低視覺延遲。自 Godot 4.3 起，可將 **Display > "
"Window > V-Sync > Swapchain Image Count** 專案設定調整為 ``2`` 即啟用雙緩衝。"
"不過，雙緩衝在無法達到螢幕刷新率時（如 CPU/GPU 效能不足），幀率會變得不穩定。"
"例如 60 Hz 螢幕下，若三緩衝時遊戲幀率約 55 FPS，雙緩衝則會瞬間降到 30 FPS，然"
"後再回升至 60 FPS。因此，僅建議在目標硬體能*穩定*輸出滿幀率時，才使用雙緩衝 "
"V-Sync。"

msgid ""
"Increasing the number of physics iterations per second can also reduce "
"physics-induced input latency. This is especially noticeable when using "
"physics interpolation (which improves smoothness but increases latency). To "
"do so, set **Physics > Common > Physics Ticks Per Second** to a value higher "
"than the default ``60``, or set ``Engine.physics_ticks_per_second`` at "
"runtime in a script. Values that are a multiple of the monitor refresh rate "
"(typically ``60``) work best when physics interpolation is disabled, as they "
"will avoid jitter. This means values such as ``120``, ``180`` and ``240`` "
"are good starting points. As a bonus, higher physics FPSes make tunneling "
"and physics instability issues less likely to occur."
msgstr ""
"提升每秒物理計算次數同樣能降低物理相關的輸入延遲。這在啟用物理內插（即提升平"
"滑度但增加延遲）時更為明顯。您可以將 **Physics > Common > Physics Ticks Per "
"Second** 設定為高於預設值 ``60``，或於執行時透過腳本設定 "
"``Engine.physics_ticks_per_second``。若未啟用物理內插，建議設定為螢幕刷新率的"
"倍數（如 ``120``、``180``、``240``），可避免抖動。額外好處是較高的物理幀率能"
"減少穿透和物理不穩定問題。"

msgid ""
"The downside of increasing physics FPS is that CPU usage will increase, "
"which can lead to performance bottlenecks in games that have heavy physics "
"simulation code. This can be alleviated by increasing physics FPS only in "
"situations where low latency is critical, or by letting players adjust "
"physics FPS to match their hardware. However, different physics FPS will "
"lead to different outcomes in physics simulation, even when ``delta`` is "
"consistently used in your game logic. This can give certain players an "
"advantage over others. Therefore, allowing the player to change the physics "
"FPS themselves should be avoided for competitive multiplayer games."
msgstr ""
"但增加物理幀率會提升 CPU 使用率，對於物理運算量大的遊戲可能造成效能瓶頸。您可"
"選擇僅在低延遲至關重要時提高物理幀率，或讓玩家依硬體調整。不過，即便您的邏輯"
"程式碼都正確使用 ``delta``，不同的物理幀率還是會導致物理模擬結果出現差異，讓"
"部分玩家產生優勢。因此，競技型多人遊戲不建議讓玩家自行調整物理幀率。"

msgid ""
"Lastly, you can disable input buffering on a per-rendered frame basis by "
"calling ``Input.set_use_accumulated_input(false)`` in a script. This will "
"make it so the ``_input()`` and ``_unhandled_input()`` functions in your "
"scripts are called on every input, rather than accumulating inputs and "
"waiting for a frame to be rendered. Disabling input accumulation will "
"increase CPU usage, so it should be done with caution."
msgstr ""
"最後，您也可以在腳本中呼叫 ``Input.set_use_accumulated_input(false)``，以停用"
"每個算繪影格的輸入緩衝。這樣 ``_input()`` 與 ``_unhandled_input()`` 會於每次"
"輸入時立即呼叫，而非累積輸入並等到下一影格才處理。停用輸入累積會增加 CPU 使用"
"率，請謹慎使用。"

msgid "Hardware/OS-specific"
msgstr "針對硬體／作業系統的建議"

msgid ""
"If your monitor supports it, consider enabling variable refresh rate (G-Sync/"
"FreeSync) while leaving V-Sync enabled, then cap the framerate in the "
"project settings to a slightly lower value than your monitor's maximum "
"refresh rate as per `this page <https://blurbusters.com/howto-low-lag-vsync-"
"on/>`__. For example, on a 144 Hz monitor, you can set the project's "
"framerate cap to ``141``. This may be counterintuitive at first, but capping "
"the FPS below the maximum refresh rate range ensures that the OS never has "
"to wait for vertical blanking to finish. This leads to *similar* input lag "
"as V-Sync disabled with the same framerate cap (usually less than 1 ms "
"greater), but without any tearing."
msgstr ""
"若您的顯示器支援，建議同時啟用可變刷新率（G-Sync/FreeSync）及 V-Sync，並依照 "
"`這篇文章 <https://blurbusters.com/howto-low-lag-vsync-on/>`__ 的建議，將專案"
"設定中的最大幀率限制設為略低於螢幕最大刷新率。例如 144 Hz 螢幕可設為 "
"``141``。這看似違反直覺，但實際上可確保作業系統無須等待垂直消隱完成，達到與關"
"閉 V-Sync 並限制幀率時*幾乎相同*的輸入延遲（通常僅多出不到 1 毫秒），同時又完"
"全無撕裂。"

msgid ""
"This can be done by changing the **Application > Run > Max FPS** project "
"setting or assigning ``Engine.max_fps`` at runtime in a script."
msgstr ""
"您可以透過調整 **Application > Run > Max FPS** 專案設定，或於執行時在腳本設"
"定 ``Engine.max_fps`` 來完成。"

msgid ""
"On some platforms, you can also opt into a low-latency mode in the graphics "
"driver options (such as the NVIDIA Control Panel on Windows). The **Ultra** "
"setting will give you the lowest possible latency, at the cost of slightly "
"lower average framerates. Forcing the GPU to use the maximum performance "
"profile can also further reduce input lag, at the cost of higher power "
"consumption (and resulting heat/fan noise)."
msgstr ""
"某些平臺（如 Windows 上的 NVIDIA 控制面板）可以在驅動程式設定中啟用低延遲模"
"式，選擇 **Ultra** 可以獲得最低延遲（但平均幀率會稍降）。同時強制 GPU 使用最"
"高效能模式，也能進一步減少輸入延遲，但會增加耗電與散熱（風扇噪音）。"

msgid ""
"Finally, make sure your monitor is running at its highest possible refresh "
"rate in the OS' display settings."
msgstr "最後，請在作業系統顯示設定中，確認您的顯示器已設定為最高刷新率。"

msgid ""
"Also, ensure that your mouse is configured to use its highest polling rate "
"(typically 1,000 Hz for gaming mice, sometimes more). High USB polling rates "
"can however result in high CPU usage, so 500 Hz may be a safer bet on low-"
"end CPUs. If your mouse offers multiple :abbr:`DPI (Dots Per Inch)` "
"settings, consider also `using the highest possible setting and reducing in-"
"game sensitivity to reduce mouse latency <https://www.youtube.com/watch?"
"v=6AoRfv9W110>`__."
msgstr ""
"同時，請確認您的滑鼠設定為最高輪詢率（遊戲滑鼠通常為 1,000 Hz 或更高）。但輪"
"詢率越高，CPU 負擔也越大，若為低階 CPU，建議設為 500 Hz 較為穩妥。若滑鼠支援"
"多段 :abbr:`DPI (Dots Per Inch)` ，建議也可 `將 DPI 調至最高，遊戲內靈敏度調"
"低，以降低滑鼠延遲 <https://www.youtube.com/watch?v=6AoRfv9W110>`__ 。"

msgid "Reporting jitter, stutter or input lag problems"
msgstr "回報抖動、卡頓或輸入延遲問題"

msgid ""
"If you are reporting a stutter or jitter problem (opening an issue) not "
"caused by any of the above reasons, please specify very clearly all the "
"information possible about device, operating system, driver versions, etc. "
"This may help to better troubleshoot it."
msgstr ""
"若您回報的抖動或卡頓問題（提出 Issue）並非上述原因，請盡量詳列您的裝置、作業"
"系統、驅動程式版本等資訊，有助於我們進一步協助排除問題。"

msgid ""
"If you are reporting input lag problems, please include a capture made with "
"a high speed camera (such as your phone's slow motion video mode). The "
"capture **must** have both the screen and the input device visible so that "
"the number of frames between an input and the on-screen result can be "
"counted. Also, make sure to mention your monitor's refresh rate and your "
"input device's polling rate (especially for mice)."
msgstr ""
"若您要回報輸入延遲問題，請附上用高速相機（如手機的慢動作錄影）拍攝的影片。影"
"片**必須**同時錄到螢幕與輸入裝置，以便計算從輸入到畫面反應的影格數。請同時註"
"明顯示器刷新率與輸入裝置（特別是滑鼠）的輪詢率。"

msgid ""
"Also, make sure to use the correct term (jitter, stutter, input lag) based "
"on the exhibited behavior. This will help understand your issue much faster. "
"Provide a project that can be used to reproduce the issue, and if possible, "
"include a screen capture demonstrating the bug."
msgstr ""
"另外，請根據實際狀況使用正確的名詞（抖動、卡頓、輸入延遲），這有助於我們更快"
"理解您的問題。請附上可重現問題的專案，並盡可能提供螢幕錄影以利說明。"
