#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Keyboard/Controller Navigation and Focus"
msgstr "鍵盤／控制器導覽與焦點"

msgid ""
"It is a common requirement for a user interface to have full keyboard and "
"controller support for navigation and interaction. There are two main "
"reasons why this is beneficial for projects: improved accessibility (not "
"everyone can use mouse or touch controls for interactions), and getting your "
"project ready for :ref:`consoles <doc_consoles>` (or just for people who "
"prefer to game with a controller on PC)."
msgstr ""
"讓使用者介面完整支援鍵盤與控制器的導覽與互動是很常見的需求。這對專案有兩項主"
"要好處：提升無障礙性（並非每個人都能用滑鼠或觸控進行操作），以及讓你的專案能"
"夠在 :ref:`主機 <doc_consoles>` 上運作（或是方便偏好用控制器遊玩的 PC 玩"
"家）。"

msgid ""
"Navigating between UI elements with keyboard or controller is done by "
"changing which node is actively selected. This is also called changing UI "
"focus. Every :ref:`Control <class_Control>` node in Godot is capable of "
"having focus. By default, some control nodes have the ability to "
"automatically grab focus reacting to built-in UI actions such as ``ui_up``, "
"``ui_down``, ``ui_focus_next``, etc. These actions can be seen in the "
"project settings in the input map and can be modified."
msgstr ""
"使用鍵盤或控制器在 UI 元素間切換，是透過更改目前被選取的節點，也就是切換 UI "
"焦點。Godot 中每個 :ref:`Control <class_Control>` 節點都可以取得焦點。預設情"
"況下，部分控制元件會根據內建 UI 動作（如 ``ui_up``、``ui_down``、"
"``ui_focus_next`` 等）自動取得焦點。這些動作可在專案設定的輸入映射中查看與調"
"整。"

msgid ""
"Because these actions are used for focus they should not be used for any "
"gameplay code."
msgstr "這些動作專用於焦點控制，不應用於遊戲玩法相關的程式碼。"

msgid "Node settings"
msgstr "節點設定"

msgid ""
"In addition to the built-in logic, you can define what is known as focus "
"neighbors for each individual control node. This allows to finely tune the "
"path the UI focus takes across the user interface of your project. The "
"settings for individual nodes can be found in the Inspector dock, under the "
"\"Focus\" category of the \"Control\" section."
msgstr ""
"除了內建的焦點切換邏輯外，你還可以為每個控制元件自訂「鄰近焦點」。這能讓你精"
"確調整 UI 焦點在介面中的移動路徑。各個節點的設定可以在屬性面板的「Control」區"
"塊下「Focus」分類中找到。"

msgid ""
"Neighbor options are used to define nodes for 4-directional navigation, such "
"as using arrow keys or a D-pad on a controller. For example, the bottom "
"neighbor will be used when navigating down with the down arrow or by pushing "
"down on the D-pad. The \"Next\" and \"Previous\" options are used with the "
"focus shift button, such as :kbd:`Tab` on desktop operating systems."
msgstr ""
"鄰近選項用來定義四向導覽時的節點，例如使用鍵盤方向鍵或控制器的十字鍵。舉例來"
"說，往下導覽時（按下方向鍵下或十字鍵下），會移動到下方鄰近節點。「下一個」與"
"「上一個」則搭配焦點切換按鍵使用，例如桌面作業系統上的 :kbd:`Tab`。"

msgid "A node can lose focus if it becomes hidden."
msgstr "若節點被隱藏，將會失去焦點。"

msgid ""
"The mode setting defines how a node can be focused. **All** means a node can "
"be focused by clicking on it with the mouse, or selecting it with a keyboard "
"or controller. **Click** means it can only be focused on by clicking on it. "
"Finally, **None** means it can't be focused at all. Different control nodes "
"have different default settings for this based on how they are typically "
"used, for example, :ref:`Label <class_Label>` nodes are set to \"None\" by "
"default, while :ref:`buttons <class_Button>` are set to \"All\"."
msgstr ""
"模式設定決定節點可如何取得焦點。**All** 代表可以被滑鼠點擊，或用鍵盤／控制器"
"選取以取得焦點。**Click** 則僅能透過滑鼠點擊取得焦點。**None** 則完全無法取得"
"焦點。不同控制元件根據其用途會有不同預設值，例如 :ref:`Label <class_Label>` "
"預設為「None」，而 :ref:`按鈕 <class_Button>` 預設為「All」。"

msgid ""
"Make sure to properly configure your scenes for focus and navigation. If a "
"node has no focus neighbor configured, the engine will try to guess the next "
"control automatically. This may result in unintended behavior, especially in "
"a complex user interface that doesn't have well-defined vertical or "
"horizontal navigation flow."
msgstr ""
"請務必正確設定場景中的焦點與導覽。如果節點未設定鄰近焦點，Godot 會自動嘗試推"
"測下一個控制元件，這可能導致非預期行為，尤其是在沒有明確垂直或水平導覽結構的"
"複雜 UI 介面中。"

msgid "Necessary code"
msgstr "必要程式碼"

msgid ""
"For keyboard and controller navigation to work correctly, any node must be "
"focused on using code when the scene starts. Without doing this, pressing "
"buttons or keys won't do anything. Here is a basic example of setting "
"initial focus with code:"
msgstr ""
"為讓鍵盤與控制器導覽正常運作，場景啟動時必須用程式碼設定某個節點取得焦點。否"
"則，按下按鍵或按鈕將不會有作用。以下是以程式碼設定初始焦點的範例："

msgid ""
"Now when the scene starts the \"Start Button\" node will be focused, and the "
"keyboard or a controller can be used to navigate between it and other UI "
"elements."
msgstr ""
"這樣場景開始時，\"Start Button\" 節點就會自動取得焦點，使用者可透過鍵盤或控制"
"器在它與其他 UI 元素間導覽。"
