#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Size and anchors"
msgstr "尺寸與錨點"

msgid ""
"If a game was always going to be run on the same device and at the same "
"resolution, positioning controls would be a simple matter of setting the "
"position and size of each one of them. Unfortunately, that is rarely the "
"case."
msgstr ""
"如果遊戲始終只在同一台裝置且相同解析度下執行，只需設定每個控制項的位置與大小"
"即可輕鬆完成配置。不過現實情況很少如此簡單。"

msgid ""
"While some configurations may be more common than others, devices like "
"phones, tablets and portable gaming consoles can vary greatly. Therefore, we "
"often have to account for different aspect ratios, resolutions and user "
"scaling."
msgstr ""
"雖然有些裝置組合較為常見，但像手機、平板電腦和掌上型遊戲主機等設備差異極大。"
"因此，我們經常需要考量不同的螢幕比例、解析度與使用者縮放。"

msgid ""
"There are several ways to account for this, but for now, let's just imagine "
"that the screen resolution has changed and the controls need to be re-"
"positioned. Some will need to follow the bottom of the screen, others the "
"top of the screen, or maybe the right or left margins."
msgstr ""
"有幾種方式可以應對這些狀況，但現在，請想像螢幕解析度已經改變，控制項必須重新"
"定位。有些需要貼齊螢幕底部，有些要對齊頂部，或是左、右邊界。"

msgid ""
"This is done by editing the *anchor offsets* of controls, which behave "
"similar to a margin. To access these settings, you will first need to select "
"the *Custom* anchor preset."
msgstr ""
"這可以透過調整控制項的 *錨點偏移*（anchor offsets）來達成，這類似於設定邊距。"
"若要調整這些設定，需先選擇 *自訂* 錨點預設值。"

msgid ""
"Each control has four anchor offsets: left, right, bottom, and top, which "
"correspond to the respective edges of the control. By default, all of them "
"represent a distance in pixels relative to the top-left corner of the parent "
"control or (in case there is no parent control) the viewport."
msgstr ""
"每個控制項都有四個錨點偏移：左、右、下、上，分別對應控制項的四個邊。預設情況"
"下，這些偏移值代表相對於父控制項左上角（或沒有父控制項時，則為視窗區）的像素"
"距離。"

msgid ""
"So to make the control wider you can make the right offset larger and/or "
"make the left offset smaller. This lets you set the exact placement and "
"shape of the control."
msgstr ""
"因此，若要讓控制項變寬，可以增加右側偏移值，或減少左側偏移值。這樣你就能精確"
"控制控制項的位置與形狀。"

msgid ""
"The *anchor* properties adjust where the offsets are relative *to*. Each "
"offset has an individual anchor that can be adjusted from the beginning to "
"the end of the parent. So the vertical (top, bottom) anchors adjust from "
"``0.0`` (top of parent) to ``1.0`` (bottom of parent) with ``0.5`` being the "
"center, and the control offsets will be placed relative to that point. The "
"horizontal (left, right) anchors similarly adjust from left to right of the "
"parent."
msgstr ""
"*錨點* 屬性用來調整每個偏移值的參考位置。每個邊的偏移都各有一個獨立的錨點，可"
"從父項的起點調整到終點。垂直（上、下）錨點的範圍從 ``0.0``（父項頂部）到 "
"``1.0``（父項底部），``0.5`` 則表示中心點，控制項的偏移值會以該點為基準。水平"
"（左、右）錨點則用來調整父項的左右範圍。"

msgid ""
"Note that when you wish the edge of a control to be above or left of the "
"anchor point, you must change the offset value to be negative."
msgstr "請注意，若希望控制項的邊緣位於錨點的上方或左方，偏移值必須設為負數。"

msgid ""
"For example: when horizontal anchors are changed to ``1.0``, the offset "
"values become relative to the top-right corner of the parent control or "
"viewport."
msgstr ""
"例如：當水平錨點（左、右）設為 ``1.0`` 時，偏移值就會變成相對於父控制項或視窗"
"區的右側。"

msgid ""
"Adjusting the two horizontal or the two vertical anchors to different values "
"will make the control change size when the parent control does. Here, the "
"control is set to anchor its bottom-right corner to the parent's bottom-"
"right, while the top-left control offsets are still anchored to the top-left "
"of the parent, so when re-sizing the parent, the control will always cover "
"it, leaving a 20 pixel offset:"
msgstr ""
"當水平或垂直的兩個錨點設為不同的值時，控制項會隨著父控制項尺寸改變而調整。在"
"這個例子中，控制項的右下角錨定在父項右下角，左上角的偏移仍舊對齊父項左上，這"
"樣當父項縮放時，該控制項會始終覆蓋整個父項，只留下 20 像素的間距："

msgid "Centering a control"
msgstr "控制項置中"

msgid ""
"To center a control in its parent, set its anchors to ``0.5`` and each "
"offset to half of its relevant dimension. For example, the code below shows "
"how a TextureRect can be centered in its parent:"
msgstr ""
"若要將控制項置中於父項，請將所有錨點設為 ``0.5``，每個偏移值則設為其對應尺寸"
"的一半。以下範例程式碼展示如何讓 TextureRect 在父項中置中："

msgid ""
"Setting each anchor to ``0.5`` moves the reference point for the offsets to "
"the center of its parent. From there, we set negative offsets so that the "
"control gets its natural size."
msgstr ""
"將每個錨點設為 ``0.5``，會將偏移值的參考點移至父項的中心。此時，設定負值偏"
"移，讓控制項顯示其原本的尺寸。"

msgid "Anchor Presets"
msgstr "錨點預設值"

msgid ""
"Instead of manually adjusting the offset and anchor values, you can use the "
"toolbar's Anchor menu, above the viewport. Besides centering, it gives you "
"many options to align and resize control nodes."
msgstr ""
"除了手動調整偏移和錨點數值外，還可以使用視窗區上方工具列的「錨點」選單。除了"
"置中之外，還有多種對齊和調整控制節點大小的選項。"
