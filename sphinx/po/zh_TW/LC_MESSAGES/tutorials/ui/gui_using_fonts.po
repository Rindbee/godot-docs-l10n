#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using Fonts"
msgstr "使用字型"

msgid "Godot allows you to set specific fonts for different UI nodes."
msgstr "Godot 允許你為不同的 UI 節點指定特定的字型。"

msgid ""
"There are three different places where you can setup font usage. The first "
"is the theme editor. Choose the node you want to set the font for and select "
"the font tab. The second is in the inspector for control nodes under **Theme "
"Overrides > Fonts**. Lastly, in the inspector settings for themes under "
"**Default Font**."
msgstr ""
"你可以在三個地方設定字型。第一是在主題編輯器，選取你要設定的節點並切換到字型"
"分頁。第二是在控制節點的屬性檢視器裡的 **主題覆寫 > 字型**。最後是在主題的屬"
"性檢視器裡的 **預設字型** 欄位。"

msgid ""
"If no font override is specified anywhere, `Open Sans <https://"
"fonts.google.com/specimen/Open+Sans>`__ SemiBold is used as the default "
"project font."
msgstr ""
"如果沒有指定任何字型覆寫，就會使用 `Open Sans <https://fonts.google.com/"
"specimen/Open+Sans>`__ SemiBold 作為預設專案字型。"

msgid ""
"Since Godot 4.0, font sizes are no longer defined in the font itself but are "
"instead defined in the node that uses the font. This is done in the **Theme "
"Overrides > Font Sizes** section of the inspector."
msgstr ""
"自 Godot 4.0 起，字型大小不是在字型本身設定，而是在使用該字型的節點設定。你可"
"在屬性檢視器的 **主題覆寫 > 字型大小** 區域調整。"

msgid ""
"This allows changing the font size without having to duplicate the font "
"resource for every different font size."
msgstr "這讓你能直接調整字型大小，而不用為每種大小分別複製字型資源。"

msgid ""
"There are 2 kinds of font files: *dynamic* (TTF/OTF/WOFF/WOFF2 formats) and "
"*bitmap* (BMFont ``.fnt`` format or monospaced image). Dynamic fonts are the "
"most commonly used option, as they can be resized and still look crisp at "
"higher sizes. Thanks to their vector-based nature, they can also contain a "
"lot more glyphs while keeping a reasonable file size compared to bitmap "
"fonts. Dynamic fonts also support some advanced features that bitmap fonts "
"cannot support, such as *ligatures* (several characters transforming into a "
"single different design)."
msgstr ""
"字型檔案分為兩種：*動態*（TTF/OTF/WOFF/WOFF2 格式）和*點陣*（BMFont ``.fnt`` "
"格式或等寬圖像）。動態字型最常見，可以自由縮放而且放大後依然清晰。由於是向量"
"格式，能在保持合理檔案大小的同時收錄更多字元。動態字型也支援點陣字型無法做到"
"的進階功能，如 *連字* （多個字元合為一個特殊形狀）。"

msgid ""
"You can find freely licensed font files on websites such as `Google Fonts "
"<https://fonts.google.com/>`__ and `Font Library <https://fontlibrary.org/"
">`__."
msgstr ""
"你可以在如 `Google Fonts <https://fonts.google.com/>`__ 或 `Font Library "
"<https://fontlibrary.org/>`__ 等網站找到免費授權的字型檔案。"

msgid ""
"Fonts are covered by copyright. Double-check the license of a font before "
"using it, as not all fonts allow commercial use without purchasing a license."
msgstr "字型受著作權保護。使用前請務必確認授權條款，並非所有字型都能免費商用。"

msgid ""
"You can see how fonts work in action using the `BiDI and Font Features demo "
"project <https://github.com/godotengine/godot-demo-projects/tree/master/gui/"
"bidi_and_font_features>`__."
msgstr ""
"你可以參考 `BiDI 與字型功能展示專案 <https://github.com/godotengine/godot-"
"demo-projects/tree/master/gui/bidi_and_font_features>`__，親自體驗字型在實際 "
"UI 的運作方式。"

msgid "Dynamic fonts"
msgstr "動態字型"

msgid "Godot supports the following dynamic font formats:"
msgstr "Godot 支援下列動態字型格式："

msgid "TrueType Font or Collection (``.ttf``, ``.ttc``)"
msgstr "TrueType 字型或合集（``.ttf``、``.ttc``）"

msgid "OpenType Font or Collection (``.otf``, ``.otc``)"
msgstr "OpenType 字型或合集（``.otf``、``.otc``）"

msgid "Web Open Font Format 1 (``.woff``)"
msgstr "Web 開放字型格式 1（``.woff``）"

msgid "Web Open Font Format 2 (``.woff2``, since Godot 3.5)"
msgstr "Web 開放字型格式 2（``.woff2``，自 Godot 3.5 支援）"

msgid ""
"While ``.woff`` and especially ``.woff2`` tend to result in smaller file "
"sizes, there is no universally \"better\" font format. In most situations, "
"it's recommended to use the font format that was shipped on the font "
"developer's website."
msgstr ""
"雖然 ``.woff``，特別是 ``.woff2`` 通常會讓檔案更小，但沒有絕對最好的字型格"
"式。通常建議使用字型原廠網站所提供的格式。"

msgid "Bitmap fonts"
msgstr "點陣字型"

msgid ""
"Godot supports the BMFont (``.fnt``) bitmap font format. This is a format "
"created by the `BMFont <https://www.angelcode.com/products/bmfont/>`__ "
"program. Many BMFont-compatible programs also exist, like `BMGlyph <https://"
"www.bmglyph.com/>`__ or web-based `fontcutter <https://github.com/fabienbk/"
"fontcutter>`__."
msgstr ""
"Godot 支援 BMFont（``.fnt``）點陣字型格式，這是由 `BMFont <https://"
"www.angelcode.com/products/bmfont/>`__ 所建立的格式。也有其他相容工具，如 "
"`BMGlyph <https://www.bmglyph.com/>`__ 或線上 `fontcutter <https://"
"github.com/fabienbk/fontcutter>`__。"

msgid ""
"Alternatively, you can import any image to be used as a bitmap font. This is "
"only supported for **monospaced** fonts (fonts where each character has the "
"same width). To do so, select the image in the FileSystem dock, go to the "
"Import dock, change its import type to **Font Data (Monospace Image Font)** "
"then click **Reimport**:"
msgstr ""
"你也可以匯入任何圖像作為點陣字型，但只支援**等寬字型**（每個字元寬度相同）。"
"作法是在檔案系統面板選取圖像，切到匯入面板，將匯入類型設為 **字型資料（等寬圖"
"像字型）**，然後點選 **重新匯入**："

msgid "Changing import type to Font Data (Monospace Image Font)"
msgstr "將匯入類型設為字型資料（等寬圖像字型）"

msgid "Changing import type to **Font Data (Monospace Image Font)**"
msgstr "將匯入類型設為 **字型資料（等寬圖像字型）**"

msgid ""
"The font's character set layout can be in any order, but orders that match "
"standard Unicode are recommended as they'll require far less configuration "
"to import. For example, the bitmap font below contains `ASCII <https://"
"en.wikipedia.org/wiki/ASCII>`__ characters and follows standard ASCII "
"ordering:"
msgstr ""
"字型的字元順序可以自訂，但建議比照標準 Unicode 排序，這樣匯入設定更簡單。例"
"如，下方範例的點陣字型收錄 `ASCII <https://en.wikipedia.org/wiki/ASCII>`__ 字"
"元且排序遵循 ASCII 標準："

msgid "Bitmap font example"
msgstr "點陣字型範例"

msgid ""
"Credit: `LibreQuake <https://github.com/MissLav/LibreQuake/blob/master/lq1/"
"gfx-wad/CONCHARS.png>`__ (scaled and cropped to exclude extended range)"
msgstr ""
"圖片來源：`LibreQuake <https://github.com/MissLav/LibreQuake/blob/master/lq1/"
"gfx-wad/CONCHARS.png>`__ （已縮放裁剪移除擴展區段）"

msgid ""
"The following import options can be used to import the above font image "
"successfully:"
msgstr "以下匯入選項可成功匯入上述字型圖片："

msgid "Import options to use for the above example font"
msgstr "上述範例字型的匯入選項"

msgid ""
"The **Character Ranges** option is an array that maps each position on the "
"image (in tile coordinates, not pixels). The font atlas is traversed from "
"left to right and top to bottom. Characters can be specified with decimal "
"numbers (``127``), hexadecimal numbers (``0x007f``) or between *single* "
"quotes (``'~'``). Ranges can be specified with a hyphen between characters."
msgstr ""
"**字元範圍** 選項是一個陣列，對應圖片上每個字元的位置（以格子座標，不是像"
"素）。字型圖集依左到右、上到下順序排列。字元可用十進位（``127``）、十六進位"
"（``0x007f``）或*單引號*（``'~'``）指定，範圍可用連字號標示。"

msgid ""
"For instance, ``0-127`` (or ``0x0000-0x007f``) denotes the full ASCII range. "
"As another example, ``' '-'~'`` is equivalent to ``32-127`` and denotes the "
"range of *printable* (visible) ASCII characters."
msgstr ""
"舉例來說，``0-127``（或 ``0x0000-0x007f``）代表完整 ASCII 範圍。又如，``' "
"'-'~'`` 等同於 ``32-127``，即*可列印*（可見）ASCII 字元範圍。"

msgid ""
"Make sure the **Character Ranges** option doesn't exceed the number of "
"**Columns** × **Rows** defined. Otherwise, the font will fail to import."
msgstr "請確保 **字元範圍** 不超過定義的 **欄數 × 列數**，否則將無法匯入字型。"

msgid ""
"If your font image contains margins not used for font glyphs (such as "
"attribution information), try adjusting **Image Margin**. This is a margin "
"applied only once around the whole image."
msgstr ""
"如果字型圖片周圍有不是字型圖案的空白（如作者資訊），可以調整 **圖像邊距**，這"
"會對整張圖片一次性加上外圍邊距。"

msgid ""
"If your font image contains guides (in the form of lines between glyphs) or "
"if spacing between characters appears incorrect, try adjusting **Character "
"Margin**. This margin is applied for every imported glyph."
msgstr ""
"若字型圖片中有輔助線（如字元間的間隔線）或字元間距顯示不正確，可以調整 **字元"
"邊距**，此數值會套用到每個匯入的字元。"

msgid "Loading a font file"
msgstr "載入字型檔案"

msgid ""
"To load a font file (dynamic or bitmap), use the resource dropdown's **Quick "
"Load** or **Load** option next to a font property, then navigate to the font "
"file in question:"
msgstr ""
"若要載入字型檔案（動態或點陣），請在字型屬性旁邊的資源下拉選單選擇 **快速載入"
"** 或 **載入**，然後瀏覽選取字型檔案："

msgid ""
"You can also drag-and-drop a font file from the FileSystem dock to the "
"inspector property that accepts a Font resource."
msgstr ""
"你也可以直接把字型檔案從檔案系統拖曳到屬性檢視器中需要 Font 資源的欄位。"

msgid ""
"In Godot 4.0 and later, texture filter and repeat properties are defined in "
"the location where the texture is used, rather than on the texture itself. "
"This also applies to fonts (both dynamic fonts and bitmap fonts)."
msgstr ""
"Godot 4.0 起，紋理過濾與重複屬性都是在使用紋理的地方設定，而非紋理資源本身。"
"字型（動態與點陣）也採同樣設計。"

msgid ""
"Fonts that have a pixel art appearance should have bilinear filtering "
"disabled by changing the **Rendering > Textures > Canvas Textures > Default "
"Texture Filter** project setting to **Nearest**."
msgstr ""
"若你的字型是像素風格（Pixel Art），應該把 **算圖 > 紋理 > Canvas 紋理 > 預設"
"紋理過濾** 專案設定調成 **最近點**，以停用雙線性過濾。"

msgid ""
"The font size must also be an integer multiple of the design size (which "
"varies on a per-font basis), and the Control node using the font must be "
"scaled by an integer multiple as well. Otherwise, the font may look blurry. "
"Font sizes in Godot are specified in pixels (px), not points (pt). Keep this "
"in mind when comparing font sizes across different software."
msgstr ""
"字型大小應為設計尺寸的整數倍（視字型而定），且使用該字型的 Control 節點也要用"
"整數倍縮放，否則字型可能會模糊。Godot 的字型大小單位是像素（px），不是點"
"（pt），請在跨軟體比對時特別注意。"

msgid ""
"The texture filter mode can also be set on individual nodes that inherit "
"from CanvasItem by setting :ref:`CanvasItem.texture_filter "
"<class_CanvasItem_property_texture_filter>`."
msgstr ""
"你也可以在繼承自 CanvasItem 的節點上，設定 :ref:`CanvasItem.texture_filter "
"<class_CanvasItem_property_texture_filter>` 來個別調整紋理過濾模式。"

msgid "Font outlines and shadows"
msgstr "字型描邊與陰影"

msgid ""
"Font outlines and shadows can be used to improve readability when the "
"background color isn't known in advance. For instance, this is the case for "
"HUD elements that are drawn over a 2D/3D scene."
msgstr ""
"字型描邊與陰影有助於在無法預知背景顏色時提升可讀性，例如 2D/3D 場景疊加的 "
"HUD 元件。"

msgid ""
"Font outlines are available in most nodes that derive from Control, in "
"addition to :ref:`class_Label3D`."
msgstr ""
"除了 :ref:`class_Label3D`，大多數繼承自 Control 的節點也支援字型描邊功能。"

msgid ""
"To enable outline for a font on a given node, configure the theme overrides "
"**Font Outline Color** and **Outline Size** in the inspector. The result "
"should look like this:"
msgstr ""
"要為特定節點啟用字型描邊，請在屬性檢視器的主題覆寫區調整 **字型描邊顏色** 與 "
"**描邊寬度**，效果如下："

msgid "Font outline example"
msgstr "字型描邊範例"

msgid ""
"If using a font with MSDF rendering, its **MSDF Pixel Range** import option "
"be set to at least *twice* the value of the outline size for outline "
"rendering to look correct. Otherwise, the outline may appear to be cut off "
"earlier than intended."
msgstr ""
"如果使用 MSDF 算繪的字型，請將 **MSDF 像素範圍** 匯入選項設為至少為描邊寬度的"
"兩倍，以確保描邊正常顯示，否則描邊可能會被過早裁切。"

msgid ""
"Support for font shadows is more limited: they are only available "
"in :ref:`class_Label` and :ref:`class_RichTextLabel`. Additionally, font "
"shadows always have a hard edge (but you can reduce their opacity to make "
"them look more subtle). To enable font shadows on a given node, configure "
"the **Font Shadow Color**, **Shadow Offset X**, and **Shadow Offset Y** "
"theme overrides in a Label or RichTextLabel node accordingly:"
msgstr ""
"字型陰影支援較有限，目前僅 :ref:`class_Label` 和 :ref:`class_RichTextLabel` "
"有提供。此外，陰影邊緣為硬邊（你可調整透明度讓其較柔和）。要啟用字型陰影，請"
"在 Label 或 RichTextLabel 節點的主題覆寫區設定 **字型陰影顏色**、**陰影 X 偏"
"移** 與 **陰影 Y 偏移**："

msgid "Configuring font shadow in a Label node"
msgstr "在 Label 節點中設定字型陰影"

msgid "The result should look like this:"
msgstr "效果如下圖所示："

msgid "Font shadow example"
msgstr "字型陰影範例"

msgid ""
"You can create local overrides to font display in Label nodes by creating "
"a :ref:`class_LabelSettings` resource that you reuse across Label nodes. "
"This resource takes priority over :ref:`theme properties <doc_gui_skinning>`."
msgstr ""
"你也可以建立 :ref:`class_LabelSettings` 資源並指定給多個 Label 節點，來在單"
"一 Label 節點局部覆寫字型顯示，這會優先於 :ref:`主題屬性 "
"<doc_gui_skinning>`。"

msgid "Advanced font features"
msgstr "進階字型功能"

msgid "Antialiasing"
msgstr "抗鋸齒"

msgid ""
"You can adjust how the font should be smoothed out when rendering by "
"adjusting *antialiasing* and *hinting*. These are different properties, with "
"different use cases."
msgstr ""
"你可以透過調整*抗鋸齒*和*微調*（hinting）來改變字型算圖平滑效果，這兩種屬性針"
"對不同需求適用。"

msgid ""
"Antialiasing controls how glyph edges should be smoothed out when "
"rasterizing the font. The default antialiasing method (**Grayscale**) works "
"well on every display technology. However, at small sizes, grayscale "
"antialiasing may result in fonts looking blurry."
msgstr ""
"抗鋸齒決定字型光柵化時字元邊緣的平滑程度。預設的**灰階**抗鋸齒效果適用於所有"
"顯示器，但字型很小時可能會顯得模糊。"

msgid ""
"The antialiasing sharpness can be improved by using LCD subpixel "
"optimization, which exploits the subpixel patterns of most LCD displays by "
"offsetting the font antialiasing on a per-channel basis (red/green/blue). "
"The downside is that this can introduce \"fringing\" on edges, especially on "
"display technologies that don't use standard RGB subpixels (such as OLED "
"displays)."
msgstr ""
"你可以透過 LCD 子像素優化來增強鋸齒平滑的銳利度，這技巧會根據 LCD 顯示器的紅"
"綠藍子像素排列，對每個色頻分開運算。但缺點是遇到非標準 RGB 子像素排列的顯示器"
"（如 OLED）時，邊緣可能會出現色邊。"

msgid ""
"In most games, it's recommended to stick to the default **Grayscale** "
"antialiasing. For non-game applications, LCD subpixel optimization is worth "
"exploring."
msgstr ""
"大多數遊戲建議使用預設 **灰階** 抗鋸齒。非遊戲應用則可考慮 LCD 子像素優化。"

msgid "Font antialiasing comparison"
msgstr "抗鋸齒視覺比較"

msgid "From top to bottom: Disabled, Grayscale, LCD Subpixel (RGB)"
msgstr "由上至下：停用、灰階、LCD 子像素 (RGB)"

msgid ""
"Antialiasing cannot be changed on :ref:`MSDF-rendered fonts "
"<doc_using_fonts_msdf>` – these are always rendered with grayscale "
"antialiasing."
msgstr ""
":ref:`MSDF 算繪字型 <doc_using_fonts_msdf>` 無法調整抗鋸齒，只能用灰階抗鋸"
"齒。"

msgid "Hinting"
msgstr "微調（Hinting）"

msgid ""
"Hinting controls how aggressively glyph edges should be snapped to pixels "
"when rasterizing the font. **None** results in the smoothest appearance, "
"which can make the font look blurry at small sizes. **Light** (default) is "
"sharper by snapping glyph edges to pixels on the Y axis only, while **Full** "
"is even sharper by snapping glyph edges to pixels on both X and Y axes. "
"Depending on personal preference, you may prefer using one hinting mode over "
"the other."
msgstr ""
"微調（Hinting）決定字元邊緣在光柵化時對齊像素的強度。**無** 最平滑但小字型易"
"模糊，**淺**（預設）會將字元高低對齊像素更清楚，**完整** 則將橫直兩軸都對齊像"
"素，效果最銳利。可依個人喜好選擇模式。"

msgid "Font hinting comparison"
msgstr "微調視覺比較"

msgid "From top to bottom: None, Light, Full hinting"
msgstr "由上至下：無、淺、完整微調"

msgid ""
"If changing the hinting mode has no visible effect after clicking "
"**Reimport**, it's usually because the font doesn't include hinting "
"instructions. This can be resolved by looking for a version of the font file "
"that includes hinting instructions, or enabling **Force Autohinter** in the "
"Import dock. This will use `FreeType <https://freetype.org/>`__'s autohinter "
"to automatically add hinting instructions to the imported font."
msgstr ""
"如果點擊 **重新匯入** 後改變微調模式沒有效果，通常代表該字型檔本身沒有微調指"
"令。你可以找有微調資訊的版本，或在匯入面板啟用 **強制自動微調**，這會用 "
"`FreeType <https://freetype.org/>`__ 的自動微調器自動產生微調指令。"

msgid "Subpixel positioning"
msgstr "子像素定位"

msgid ""
"Subpixel positioning can be adjusted. This is a `FreeType <https://"
"freetype.org/>`__ feature that allows glyphs to be rendered more closely to "
"their intended form. The default setting of **Auto** automatically enables "
"subpixel positioning at small sizes, but disables it at large font sizes to "
"improve rasterization performance."
msgstr ""
"Godot 支援調整子像素定位（Subpixel Positioning），這是 `FreeType <https://"
"freetype.org/>`__ 的功能，讓字型算繪更接近原始設計。預設 **自動** 會在字型較"
"小時啟用，字型較大時停用，以提升效能。"

msgid ""
"You can force the subpixel positioning mode to **Disabled**, **One half of a "
"pixel** or **One quarter of a pixel**. **One quarter of a pixel** provides "
"the best quality, at the cost of longer rasterization times."
msgstr ""
"你也可以強制設定子像素定位為**停用**、**半像素**或**四分之一像素**。四分之一"
"像素效果最佳但會略影響效能。"

msgid ""
"Changing antialiasing, hinting and subpixel positioning has the most visible "
"effect at smaller font sizes."
msgstr "調整抗鋸齒、微調和子像素定位，對小字型最明顯。"

msgid ""
"Fonts that have a pixel art appearance should have their subpixel "
"positioning mode set to **Disabled**. Otherwise, the font may appear to have "
"uneven pixel sizes."
msgstr ""
"如果是像素風（Pixel Art）字型，建議將子像素定位設為**停用**，否則像素大小可能"
"顯得不均勻。"

msgid ""
"This step is not required for bitmap fonts, as subpixel positioning is only "
"relevant for dynamic fonts (which are usually made of vector elements)."
msgstr "點陣字型不需設定子像素定位，這只影響動態（向量）字型。"

msgid "Mipmaps"
msgstr "Mipmap（多重貼圖）"

msgid ""
"By default, fonts do not have mipmaps generated to reduce memory usage and "
"speed up rasterization. However, this can cause downscaled fonts to become "
"grainy. This can be especially noticeable with :ref:`doc_3d_text` that "
"doesn't have **Fixed Size** enabled. This can also occur when displaying "
"text with a traditional rasterized (non-:ref:`MSDF <doc_using_fonts_msdf>`) "
"font in a Control node that has its scale lower than ``(1, 1)``."
msgstr ""
"預設情況下，字型不會產生 mipmap 以節省記憶體與提升光柵化效率。但這會讓縮小後"
"的字型產生顆粒感，特別是在 :ref:`doc_3d_text` 未啟用**固定大小**時，或是在 "
"Control 節點縮放小於 `(1, 1)` 且使用傳統光柵化（非 :ref:`MSDF "
"<doc_using_fonts_msdf>`）字型時更明顯。"

msgid ""
"After selecting a font in the FileSystem dock, you can enable the "
"**Mipmaps** in the Import dock to improve downscaled font rendering "
"appearance."
msgstr ""
"在檔案系統選取字型後，可在匯入面板啟用 **Mipmaps** 來改善縮小字型的顯示品質。"

msgid ""
"Mipmaps can be enabled on MSDF fonts as well. This can improve font "
"rendering quality a little at smaller-than-default sizes, but MSDF fonts are "
"already resistant to graininess out of the box."
msgstr ""
"MSDF 字型也能啟用 Mipmap，雖然小於預設尺寸時會略為改善顯示品質，不過 MSDF 字"
"型本身就很抗鋸齒，不太會有顆粒問題。"

msgid "MSDF font rendering"
msgstr "MSDF 字型算繪"

msgid ""
"Multi-channel signed distance field (MSDF) font rendering allows rendering "
"fonts at any size, without having to re-rasterize them when their size "
"changes."
msgstr ""
"多通道帶符號距離場（MSDF）字型算繪允許你任意縮放字型，且不必每次改變大小都重"
"新光柵化。"

msgid ""
"MSDF font rendering has 2 upsides over traditional font rasterization, which "
"Godot uses by default:"
msgstr "MSDF 字型算繪相較於 Godot 傳統字型光柵化有兩個主要優點："

msgid "The font will always look crisp, even at huge sizes."
msgstr "字型再大也總是清晰。"

msgid ""
"There is less stuttering when rendering characters *at large font sizes* for "
"the first time, as there is no rasterization performed."
msgstr "首次顯示*大字型*時不會卡頓，因為不須即時光柵化。"

msgid "The downsides of MSDF font rendering are:"
msgstr "MSDF 字型算繪的缺點："

msgid ""
"Higher baseline cost for font rendering. This is usually not noticeable on "
"desktop platforms, but it can have an impact on low-end mobile devices."
msgstr "基礎算圖成本較高，桌面平台通常感覺不出差異，但在低階行動裝置會有影響。"

msgid ""
"Fonts at small sizes will not look as clear as rasterized fonts, due to the "
"lack of hinting."
msgstr "小字型缺乏微調（Hinting），不如傳統光柵化清晰。"

msgid ""
"Rendering new glyphs for the first time *at small font sizes* may be more "
"expensive compared to traditional rasterized "
"fonts. :ref:`doc_using_fonts_font_prerendering` can be used to alleviate "
"this."
msgstr ""
"首次顯示*小字型*的新字元時，算圖成本比傳統光柵化更高。可以使"
"用 :ref:`doc_using_fonts_font_prerendering` 預先算繪減輕這個問題。"

msgid "LCD subpixel optimization cannot be enabled for MSDF fonts."
msgstr "MSDF 字型無法啟用 LCD 子像素優化。"

msgid ""
"Fonts with self-intersecting outlines will not render correctly in MSDF "
"mode. If you notice rendering issues on fonts downloaded from websites such "
"as `Google Fonts <https://fonts.google.com>`__, try downloading the font "
"from the font author's official website instead."
msgstr ""
"帶有自我交錯輪廓的字型在 MSDF 模式下無法正確顯示。如果你在 `Google Fonts "
"<https://fonts.google.com>`__ 下載的字型出現算繪問題，建議改從原作者官網下"
"載。"

msgid "Comparison of font rasterization methods"
msgstr "字型光柵化法比較"

msgid ""
"Comparison of font rasterization methods. From top to bottom: rasterized "
"without oversampling, rasterized with oversampling, MSDF"
msgstr "字型光柵化方式比較。由上至下：無超取樣的光柵化、有超取樣、MSDF"

msgid ""
"To enable MSDF rendering for a given font, select it in the FileSystem dock, "
"go to the Import dock, enable **Multichannel Signed Distance Field**, then "
"click **Reimport**:"
msgstr ""
"要為某個字型啟用 MSDF 算繪，在檔案系統中選取該字型，切換至匯入面板，啟用 **多"
"通道帶符號距離場**，然後點選 **重新匯入**："

msgid "Enabling MSDF in the font's import options"
msgstr "在字型匯入選項中啟用 MSDF"

msgid "Using emoji"
msgstr "使用表情符號（Emoji）"

msgid "Godot has limited support for emoji fonts:"
msgstr "Godot 對 Emoji 字型的支援有限："

msgid "CBDT/CBLC (embedded PNGs) and SVG emoji fonts are supported."
msgstr "支援 CBDT/CBLC（內嵌 PNG）與 SVG Emoji 字型。"

msgid "COLR/CPAL emoji fonts (custom vector format) are **not** supported."
msgstr "**不支援** COLR/CPAL（自訂向量格式）Emoji 字型。"

msgid ""
"EMJC bitmap image compression (used by iOS' system emoji font) is **not** "
"supported. This means that to support emoji on iOS, you must use a custom "
"font that uses SVG or PNG bitmap compression instead."
msgstr ""
"**不支援** EMJC 點陣圖壓縮（iOS 系統 Emoji 字型專用）。若要在 iOS 支援 "
"Emoji，請改用支援 SVG 或 PNG 的自訂字型。"

msgid ""
"For Godot to be able to display emoji, the font used (or one of "
"its :ref:`fallbacks <doc_using_fonts_font_fallbacks>`) needs to include "
"them. Otherwise, emoji won't be displayed and placeholder \"tofu\" "
"characters will appear instead:"
msgstr ""
"要讓 Godot 能正確顯示 Emoji，所用字型（或其 :ref:`後備字型 "
"<doc_using_fonts_font_fallbacks>`）必須收錄對應字元。否則會出現方框佔位符（又"
"稱「豆腐」字元）："

msgid "Default appearance when trying to use emoji in a label"
msgstr "標籤嘗試顯示 Emoji 時的預設外觀"

msgid ""
"After adding a font to display emoji such as `Noto Color Emoji <https://"
"fonts.google.com/noto/specimen/Noto+Color+Emoji>`__, you get the expected "
"result:"
msgstr ""
"加入收錄 Emoji 的字型（如 `Noto Color Emoji <https://fonts.google.com/noto/"
"specimen/Noto+Color+Emoji>`__）後，就能正確顯示表情符號："

msgid "Correct appearance after adding an emoji font to the label"
msgstr "加上 Emoji 字型後標籤顯示的正確效果"

msgid ""
"To use a regular font alongside emoji, it's recommended to specify "
"a :ref:`fallback font <doc_using_fonts_font_fallbacks>` that points to the "
"emoji font in the regular font's advanced import options. If you wish to use "
"the default project font while displaying emoji, leave the **Base Font** "
"property in FontVariation empty while adding a font fallback pointing to the "
"emoji font:"
msgstr ""
"若想讓一般字型可同時顯示 Emoji，建議在進階匯入設定裡設 :ref:`後備字型 "
"<doc_using_fonts_font_fallbacks>` 指向 Emoji 字型。如果你想用預設專案字型但又"
"能顯示 Emoji，請在 FontVariation 留空 **Base Font**，並新增後備字型指向 "
"Emoji 字型："

msgid ""
"Emoji fonts are quite large in size, so you may want to :ref:`load a system "
"font <doc_using_fonts_system_fonts>` to provide emoji glyphs rather than "
"bundling it with your project. This allows providing full emoji support in "
"your project without increasing the size of its exported PCK. The downside "
"is that emoji will look different depending on the platform, and loading "
"system fonts is not supported on all platforms."
msgstr ""
"Emoji 字型通常很大，你可以考慮 :ref:`載入系統字型 "
"<doc_using_fonts_system_fonts>` 來提供 Emoji，而不必把字型檔打包進專案。這樣"
"能全面支援 Emoji 而不會讓匯出檔變大。但缺點是不同作業系統的 Emoji 外觀會不"
"同，且非所有平台都支援系統字型。"

msgid "It's possible to use a system font as a fallback font too."
msgstr "你也可以用系統字型當成後備字型。"

msgid "Using icon fonts"
msgstr "使用圖示字型"

msgid ""
"Tools like `Fontello <https://fontello.com/>`__ can be used to generate font "
"files containing vectors imported from SVG files. This can be used to render "
"custom vector elements as part of your text, or to create extruded 3D icons "
"with :ref:`doc_3d_text` and TextMesh."
msgstr ""
"像 `Fontello <https://fontello.com/>`__ 這類工具可以把 SVG 匯入並產生字型檔"
"案，可用於在文字中顯示自訂向量圖，也能搭配 :ref:`doc_3d_text` 與 TextMesh 製"
"作 3D 圖示。"

msgid ""
"Fontello currently does not support creating multicolored fonts (which Godot "
"can render). As of November 2022, support for multicolored fonts in icon "
"font generation tools remains scarce."
msgstr ""
"Fontello 目前不支援多色字型（雖然 Godot 支援顯示）。截至 2022 年 11 月，大多"
"數圖示字型產生工具對多色字型支援都很有限。"

msgid ""
"Depending on your use cases, this may lead to better results compared to "
"using the ``img`` tag in :ref:`RichTextLabel <doc_bbcode_in_richtextlabel>`. "
"Unlike bitmap images (including SVGs which are rasterized on import by "
"Godot), true vector data can be resized to any size without losing quality."
msgstr ""
"視你的需求，這種做法有時會比在 :ref:`RichTextLabel "
"<doc_bbcode_in_richtextlabel>` 用 ``img`` 標籤更好。因為圖示字型是真正的向量"
"圖，能無損縮放，而一般點陣圖（或匯入後已柵格化的 SVG）會失真。"

msgid ""
"After downloading the generated font file, load it in your Godot project "
"then specify it as a custom font for a Label, RichTextLabel or Label3D node. "
"Switch over to the Fontello web interface, then copy the character by "
"selecting it then pressing :kbd:`Ctrl + C` (:kbd:`Cmd + C` on macOS). Paste "
"the character in the **Text** property of your Label node. The character "
"will appear as a placeholder glyph in the inspector, but it should appear "
"correctly in the 2D/3D viewport."
msgstr ""
"下載產生的字型後，載入到 Godot 專案並指定給 Label、RichTextLabel 或 Label3D "
"節點。到 Fontello 網頁介面選取要用的符號，按 :kbd:`Ctrl + C`（macOS "
"為 :kbd:`Cmd + C`）複製，然後貼到 Label 節點的 **Text** 屬性。在屬性檢視器可"
"能只見到佔位字元，但在 2D/3D 檢視區會正常顯示。"

msgid ""
"To use an icon font alongside a traditional font in the same Control, you "
"can specify the icon font as a :ref:`fallback "
"<doc_using_fonts_font_fallbacks>`. This works because icon fonts use the "
"Unicode *private use area*, which is reserved for use by custom fonts and "
"doesn't contain standard glyphs by design."
msgstr ""
"若要在同一個 Control 內同時用一般字型與圖示字型，可把圖示字型設為 :ref:`後備"
"字型 <doc_using_fonts_font_fallbacks>`。這可行是因為圖示字型使用 Unicode *專"
"用區段*，該區專為自訂字型保留，不會與標準字元衝突。"

msgid ""
"Several modern icon fonts such as `Font Awesome 6 <https://fontawesome.com/"
"download>`__ have a desktop variant that uses *ligatures* to specify icons. "
"This allows you to specify icons by entering their name directly in the "
"**Text** property of any node that can display fonts. Once the icon's name "
"is fully entered as text (such as ``house``), it will be replaced by the "
"icon."
msgstr ""
"某些現代圖示字型（如 `Font Awesome 6 <https://fontawesome.com/download>`__）"
"有版本支援*連字*，你只需在 **Text** 輸入圖示名稱（如 ``house``）就會自動顯示"
"該圖示。"

msgid ""
"While easier to use, this approach cannot be used with font fallbacks as the "
"main font's characters will take priority over the fallback font's ligatures."
msgstr ""
"不過這種寫法無法與字型後備共用，因為主要字型的字元會優先於後備字型的連字。"

msgid "Font fallbacks"
msgstr "字型後備"

msgid ""
"Godot supports defining one or more fallbacks when the main font lacks a "
"glyph to be displayed. There are 2 main use cases for defining font "
"fallbacks:"
msgstr ""
"Godot 支援設定一個或多個後備字型，當主字型缺少某字元時自動轉用其他字型。主要"
"應用場景有兩個："

msgid ""
"Use a font that only supports Latin character sets, but use another font to "
"be able to display text another character set such as Cyrillic."
msgstr "主字型只收錄拉丁文，若要顯示西里爾文等其他語系，就設後備字型來補足。"

msgid "Use a font to render text, and another font to render emoji or icons."
msgstr "一個字型顯示一般文字，另一個則專門顯示表情符號或圖示。"

msgid ""
"Open the Advanced Import Settings dialog by double-clicking the font file in "
"the FileSystem dock. You can also select the font in the FileSystem dock, go "
"to the Import dock then choose **Advanced…** at the bottom:"
msgstr ""
"在檔案系統面板雙擊字型檔打開進階匯入設定。也可以選取字型後在匯入面板點選底部"
"的 **進階…**。"

msgid "Import dock"
msgstr "匯入面板"

msgid ""
"In the dialog that appears, look for **Fallbacks** section on the sidebar on "
"the right, click the **Array[Font] (size 0)** text to expand the property, "
"then click **Add Element**:"
msgstr ""
"在對話框右側找到 **Fallbacks** 區段，點 **Array[Font] (size 0)** 展開，然後"
"點 **Add Element** 新增後備字型："

msgid "Adding font fallback"
msgstr "新增字型後備"

msgid ""
"Click the dropdown arrow on the new element, then choose a font file using "
"the **Quick Load** or **Load** options:"
msgstr ""
"點新元素旁的下拉箭頭，選擇 **快速載入** 或 **載入** 選項來指定字型檔案："

msgid "Loading font fallback"
msgstr "載入後備字型"

msgid ""
"It is possible to add fallback fonts while using the default project font. "
"To do so, leave the **Base Font** property empty while adding one or more "
"font fallbacks."
msgstr ""
"即使使用預設專案字型也能加後備字型。方法是將 **Base Font** 留空，再加入一個或"
"多個後備字型。"

msgid ""
"Font fallbacks can also be defined on a local basis similar "
"to :ref:`doc_using_fonts_opentype_font_features`, but this is not covered "
"here for brevity reasons."
msgstr ""
"你也可以像 :ref:`doc_using_fonts_opentype_font_features` 那樣在本地設定後備字"
"型，這裡就不贅述。"

msgid "Variable fonts"
msgstr "可變字型"

msgid ""
"Godot has full support for `variable fonts <https://variablefonts.io/>`__, "
"which allow you to use a single font file to represent various font weights "
"and styles (regular, bold, italic, …). This must be supported by the font "
"file you're using."
msgstr ""
"Godot 完整支援 `可變字型 <https://variablefonts.io/>`__，只需一個字型檔就能表"
"現多種粗細與樣式（如標準、粗體、斜體等），前提是你用的字型檔本身支援可變功"
"能。"

msgid ""
"To use a variable font, create a :ref:`class_FontVariation` resource in the "
"location where you intend to use the font, then load a font file within the "
"FontVariation resource:"
msgstr ""
"要使用可變字型，請在需用字型之處建立 :ref:`class_FontVariation` 資源，再在裡"
"面載入字型檔案："

msgid "Creating a FontVariation resource"
msgstr "建立 FontVariation 資源"

msgid "Loading a font file into the FontVariation resource"
msgstr "在 FontVariation 資源中載入字型檔"

msgid ""
"Scroll down to the FontVariation's **Variation** section, then click the "
"**Variation Coordinates** text to expand the list of axes that can be "
"adjusted:"
msgstr ""
"往下找到 FontVariation 的 **變化** 區段，點 **變化座標** 展開可調整的軸："

msgid "List of variation axes"
msgstr "可調整軸列表"

msgid ""
"The set of axes you can adjust depends on the font loaded. Some variable "
"fonts only support one axis of adjustment (typically *weight* or *slant*), "
"while others may support multiple axes of adjustment."
msgstr ""
"可調整的軸依所載入的字型而異。有些僅支援單一軸（如*粗細*或*傾斜*），有些則可"
"多軸切換。"

msgid ""
"For example, here's the `Inter V <https://rsms.me/inter/>`__ font with a "
"*weight* of ``900`` and a *slant* of ``-10``:"
msgstr ""
"例如，這是 `Inter V <https://rsms.me/inter/>`__ 字型，*粗細* 設為 ``900``、*"
"傾斜* 設為 ``-10``："

msgid "Variable font example (Inter V)"
msgstr "可變字型範例（Inter V）"

msgid ""
"While variable font axis names and scales aren't standardized, some common "
"conventions are usually followed by font designers. The *weight* axis is "
"standardized in OpenType to work as follows:"
msgstr ""
"雖然可變字型軸名稱和刻度沒有統一標準，但字型設計師一般會遵循某些慣例。 "
"*weight* （粗細）軸在 OpenType 標準中對應如下："

msgid "Axis value"
msgstr "軸值"

msgid "Effective font weight"
msgstr "實際字型粗細"

msgid "``100``"
msgstr "``100``"

msgid "Thin (Hairline)"
msgstr "極細（髮絲）"

msgid "``200``"
msgstr "``200``"

msgid "Extra Light (Ultra Light)"
msgstr "超細"

msgid "``300``"
msgstr "``300``"

msgid "Light"
msgstr "細"

msgid "``400``"
msgstr "``400``"

msgid "**Regular (Normal)**"
msgstr "**標準（Regular）**"

msgid "``500``"
msgstr "``500``"

msgid "Medium"
msgstr "中等"

msgid "``600``"
msgstr "``600``"

msgid "Semi-Bold (Demi-Bold)"
msgstr "半粗"

msgid "``700``"
msgstr "``700``"

msgid "**Bold**"
msgstr "**粗體**"

msgid "``800``"
msgstr "``800``"

msgid "Extra Bold (Ultra Bold)"
msgstr "超粗"

msgid "``900``"
msgstr "``900``"

msgid "Black (Heavy)"
msgstr "極粗（黑體）"

msgid "``950``"
msgstr "``950``"

msgid "Extra Black (Ultra Black)"
msgstr "極黑"

msgid ""
"You can save the FontVariation to a ``.tres`` resource file to reuse it in "
"other places:"
msgstr "你可將 FontVariation 存成 `.tres` 資源檔，方便其他地方重複使用："

msgid "Saving FontVariation to an external resource file"
msgstr "將 FontVariation 存為外部資源檔"

msgid "Faux bold and italic"
msgstr "仿粗體與仿斜體"

msgid ""
"When writing text in bold or italic, using font variants specifically "
"designed for this looks better. Spacing between glyphs will be more "
"consistent when using a bold font, and certain glyphs' shapes may change "
"entirely in italic variants (compare \"a\" and *\"a\"*)."
msgstr ""
"要顯示粗體或斜體，最好用專門設計的字型變體。粗體能讓字元間距一致，斜體則有些"
"字元形狀完全不同（如直體與斜體的「a」）。"

msgid ""
"However, real bold and italic fonts require shipping more font files, which "
"increases distribution size. A single :ref:`variable font "
"<doc_using_fonts_variable_fonts>` file can also be used, but this file will "
"be larger than a single non-variable font. While file size is usually not an "
"issue for desktop projects, it can be a concern for mobile/web projects that "
"strive to keep distribution size as low as possible."
msgstr ""
"但若要支援真正的粗體與斜體就必須多帶字型檔，會讓專案體積變大。雖然可用 :ref:`"
"可變字型 <doc_using_fonts_variable_fonts>` 取代多檔案，但單一可變字型檔也會比"
"單一普通字型大。對桌面應用影響不大，行動與網頁專案則需考量容量。"

msgid ""
"To allow bold and italic fonts to be displayed without having to ship "
"additional fonts (or use a variable font that is larger in size), Godot "
"supports *faux* bold and italic."
msgstr ""
"為了讓專案不用附加粗體／斜體字型（或大容量可變字型），Godot 支援 *仿粗體／仿"
"斜體*。"

msgid ""
"Faux bold/italic (top), real bold/italic (bottom). Normal font used: Open "
"Sans SemiBold"
msgstr ""
"仿粗體／仿斜體（上），真正的粗體／斜體（下）。所用一般字型：Open Sans "
"SemiBold"

msgid ""
"Faux bold and italic is automatically used in :ref:`class_RichTextLabel`'s "
"bold and italic tags if no custom fonts are provided for bold and/or italic."
msgstr ""
"如果你沒給 :ref:`class_RichTextLabel` 指定粗體／斜體字型，自動會用仿粗體／仿"
"斜體。"

msgid ""
"To use faux bold, create a FontVariation resource in a property where a Font "
"resource is expected. Set **Variation > Embolden** to a positive value to "
"make a font bolder, or to a negative value to make it less bold. Recommended "
"values are between ``0.5`` and ``1.2`` depending on the font."
msgstr ""
"要產生仿粗體，可在需 Font 資源的欄位建立 FontVariation，調整 **變化 > 加粗"
"（Embolden）** 為正值（讓字型更粗），或負值（反之）。建議值為 0.5 ~ 1.2，依字"
"型而異。"

msgid ""
"Faux italic is created by skewing the text, which is done by modifying the "
"per-character transform. This is also provided in FontVariation using the "
"**Variation > Transform** property. Setting the ``yx`` component of the "
"character transform to a positive value will italicize the text. Recommended "
"values are between ``0.2`` and ``0.4`` depending on the font."
msgstr ""
"仿斜體則是將字元傾斜，可在 FontVariation 的 **變化 > 變換（Transform）** 內設"
"定字元轉換的 ``yx`` 為正值。建議數值約 0.2 ~ 0.4，依字型而定。"

msgid "Adjusting font spacing"
msgstr "調整字型間距"

msgid ""
"For stylistic purposes or for better readability, you may want to adjust how "
"a font is presented in Godot."
msgstr "你可以因應美術需求或可讀性，自行調整字型在 Godot 的顯示方式。"

msgid ""
"Create a FontVariation resource in a property where a Font resource is "
"expected. There are 4 properties available in the **Variation > Extra "
"Spacing** section, which accept positive and negative values:"
msgstr ""
"你可在需 Font 資源的屬性建立 FontVariation，**變化 > 額外間距** 有 4 欄可調"
"（支援正負值）："

msgid "**Glyph:** Additional spacing between every glyph."
msgstr "**字元：** 每個字元之間的間距。"

msgid "**Space:** Additional spacing between words."
msgstr "**空白：** 單字之間的間距。"

msgid ""
"**Top:** Additional spacing above glyphs. This is used for multiline text, "
"but also to calculate the minimum size of controls such "
"as :ref:`class_Label` and :ref:`class_Button`."
msgstr ""
"**上方：** 字元上方的額外間距。多行文字或"
"像 :ref:`class_Label`、:ref:`class_Button` 這類元件最小高度用得到。"

msgid ""
"**Bottom:** Additional spacing below glyphs. This is used for multiline "
"text, but also to calculate the minimum size of controls such "
"as :ref:`class_Label` and :ref:`class_Button`."
msgstr ""
"**下方：** 字元下方的額外間距。多行文字或計"
"算 :ref:`class_Label`、:ref:`class_Button` 控制元件最小高度時會用到。"

msgid ""
"The **Variation > Transform** property can also be adjusted to stretch "
"characters horizontally or vertically. This is specifically done by "
"adjusting the ``xx`` (horizontal scale) and ``yy`` (vertical scale) "
"components. Remember to adjust glyph spacing to account for any changes, as "
"glyph transform doesn't affect how much space each glyph takes in the text. "
"Non-uniform scaling of this kind should be used sparingly, as fonts are "
"generally not designed to be displayed with stretching."
msgstr ""
"**變化 > 變換（Transform）** 也能拉寬或拉高字元（調整 ``xx`` 水平比例、"
"``yy`` 垂直比例），但請記得同步微調間距，因為字型拉伸不會自動調整間隔。這種非"
"等比例縮放不建議常用，因大多數字型未針對拉伸做設計。"

msgid "OpenType font features"
msgstr "OpenType 字型功能"

msgid ""
"Godot supports enabling OpenType font features, which are a standardized way "
"to define alternate characters that can be toggled without having to swap "
"font files entirely. Despite being named OpenType font features, these are "
"also supported in TrueType (``.ttf``) and WOFF/WOFF2 font files."
msgstr ""
"Godot 支援啟用 OpenType 字型功能，這是一種標準方式，可切換替代字元而不必更換"
"字型檔。雖然叫 OpenType 功能，其實 TrueType（``.ttf``）與 WOFF/WOFF2 也支援。"

msgid ""
"Support for OpenType features highly depends on the font used. Some fonts "
"don't support any OpenType features, while other fonts can support dozens of "
"toggleable features."
msgstr ""
"是否支援 OpenType 功能取決於字型本身。有些字型完全沒支援，有些則提供數十種可"
"切換特性。"

msgid "There are 2 ways to use OpenType font features:"
msgstr "使用 OpenType 字型功能有兩種方式："

msgid "**Globally on a font file**"
msgstr "**針對整個字型檔**"

msgid ""
"In the dialog that appears, look for the **Metadata Overrides > OpenType "
"Features** section on the sidebar on the right, click the **Features (0 of N "
"set)** text to expand the property, then click **Add Feature**:"
msgstr ""
"在出現的對話方塊中，在右側側邊欄上尋找**元資料覆蓋> OpenType 功能**部分，按一"
"下**功能（N 群組中的0 個）** 文字以展開屬性，然後按一下**新增特徵**："

msgid "OpenType feature overrides in Advanced Import Settings"
msgstr "進階匯入設定中的 OpenType 功能覆寫"

msgid "**In a specific font usage (FontVariation)**"
msgstr "**針對特定用法（FontVariation）**"

msgid ""
"To use a font feature, create a FontVariation resource like you would do for "
"a :ref:`variable font <doc_using_fonts_variable_fonts>`, then load a font "
"file within the FontVariation resource:"
msgstr ""
"要啟用字型功能，請像前述 :ref:`可變字型 <doc_using_fonts_variable_fonts>` 那"
"樣建立 FontVariation，然後載入字型檔案："

msgid "Loading a font file into a FontVariation resource"
msgstr "在 FontVariation 資源中載入字型檔案"

msgid ""
"Scroll down to the FontVariation's **OpenType Features** section, click the "
"**Features (0 of N set)** text to expand the property, then click **Add "
"Feature** and select the desired feature in the dropdown:"
msgstr ""
"往下找到 FontVariation 的 **OpenType Features** 區段，點選 **Features (0 of "
"N set)** 展開，再按 **Add Feature** 從下拉選單選擇功能："

msgid "Specifying OpenType features in a FontVariation resource"
msgstr "在 FontVariation 資源指定 OpenType 功能"

msgid ""
"For example, here's the `Inter <https://rsms.me/inter/>`__ font without the "
"*Slashed Zero* feature (top), then with the *Slashed Zero* OpenType feature "
"enabled (bottom):"
msgstr ""
"例如，下圖為 `Inter <https://rsms.me/inter/>`__ 字型，未啟用 *Slashed Zero* "
"功能（上），啟用後（下）："

msgid "OpenType feature comparison (Inter)"
msgstr "OpenType 功能對比（Inter）"

msgid ""
"You can disable ligatures and/or kerning for a specific font by adding "
"OpenType features, then unchecking them in the inspector:"
msgstr ""
"你也可以新增 OpenType 功能後，在屬性檢視器取消勾選，來停用特定字型的連字或字"
"偶距："

msgid "Disabling ligatures and kerning for a font"
msgstr "停用某字型的連字與字偶距"

msgid "System fonts"
msgstr "系統字型"

msgid ""
"Loading system fonts is only supported on Windows, macOS, Linux, Android and "
"iOS."
msgstr "只有 Windows、macOS、Linux、Android 和 iOS 支援載入系統字型。"

msgid ""
"However, loading system fonts on Android is unreliable as there is no "
"official API for doing so. Godot has to rely on parsing system configuration "
"files, which can be modified by third-party Android vendors. This may result "
"in non-functional system font loading."
msgstr ""
"但 Android 平台沒有官方 API，Godot 只能靠解析系統設定檔來找字型，如果手機廠商"
"有自訂，載入系統字型可能會失敗。"

msgid ""
"System fonts are a different type of resource compared to imported fonts. "
"They are never actually imported into the project, but are loaded at "
"runtime. This has 2 benefits:"
msgstr ""
"系統字型與匯入字型不同，專案不會真正含有這些資源，而是執行時載入。這有兩個優"
"點："

msgid ""
"The fonts are not included within the exported PCK file, leading to a "
"smaller file size for the exported project."
msgstr "字型不會被打包進匯出檔，專案體積較小。"

msgid ""
"Since fonts are not included with the exported project, this avoids "
"licensing issues that would occur if proprietary system fonts were "
"distributed alongside the project."
msgstr "不用附帶專有字型，也可避免授權問題。"

msgid ""
"The engine automatically uses system fonts as fallback fonts, which makes it "
"possible to display CJK characters and emoji without having to load a custom "
"font. There are some restrictions that apply though, as mentioned in "
"the :ref:`Using emoji <doc_using_fonts_emoji>` section."
msgstr ""
"引擎會自動用系統字型做為後備字型，這樣不需額外字型也能顯示 CJK 字元與 Emoji。"
"但如 :ref:`表情符號支援 <doc_using_fonts_emoji>` 所述，有些限制。"

msgid ""
"Create a :ref:`class_SystemFont` resource in the location where you desire "
"to use the system font:"
msgstr "在你要用系統字型的地方建立 :ref:`class_SystemFont` 資源："

msgid "Creating a SystemFont resource"
msgstr "建立 SystemFont 資源"

msgid "Specifying a font name to use in a SystemFont resource"
msgstr "在 SystemFont 資源中指定字型名稱"

msgid ""
"You can either specify one or more font names explicitly (such as "
"``Arial``), or specify the name of a font *alias* that maps to a "
"\"standard\" default font for the system:"
msgstr ""
"你可以明確指定一或多個字型名稱（如 ``Arial``），或指定*別名*，以對應系統的"
"「標準」預設字型："

msgid "Font alias"
msgstr "字型別名"

msgid "Windows"
msgstr "Windows"

msgid "macOS/iOS"
msgstr "macOS/iOS"

msgid "Linux"
msgstr "Linux"

msgid "Android"
msgstr "Android"

msgid "``sans-serif``"
msgstr "``sans-serif``"

msgid "Arial"
msgstr "Arial"

msgid "Helvetica"
msgstr "Helvetica"

msgid "*Handled by fontconfig*"
msgstr "*由 fontconfig 管理*"

msgid "Roboto / Noto Sans"
msgstr "Roboto / Noto Sans"

msgid "``serif``"
msgstr "``serif``"

msgid "Times New Roman"
msgstr "Times New Roman"

msgid "Times"
msgstr "Times"

msgid "Noto Serif"
msgstr "Noto Serif"

msgid "``monospace``"
msgstr "``monospace``"

msgid "Courier New"
msgstr "Courier New"

msgid "Courier"
msgstr "Courier"

msgid "Droid Sans Mono"
msgstr "Droid Sans Mono"

msgid "``cursive``"
msgstr "``cursive``"

msgid "Comic Sans MS"
msgstr "Comic Sans MS"

msgid "Apple Chancery"
msgstr "Apple Chancery"

msgid "Dancing Script"
msgstr "Dancing Script"

msgid "``fantasy``"
msgstr "``fantasy``"

msgid "Gabriola"
msgstr "Gabriola"

msgid "Papyrus"
msgstr "Papyrus"

msgid ""
"On Android, Roboto is used for Latin/Cyrillic text and Noto Sans is used for "
"other languages' glyphs such as CJK. On third-party Android distributions, "
"the exact font selection may differ."
msgstr ""
"Android 上拉丁文／西里爾文預設用 Roboto，其它語系（如 CJK）用 Noto Sans。第三"
"方 Android 系統可能選擇不同字型。"

msgid ""
"If specifying more than one font, the first font that is found on the system "
"will be used (from top to bottom). Font names and aliases are case-"
"insensitive on all platforms."
msgstr ""
"若指定多個字型，系統會依序優先使用最先找到的。字型名稱與別名在所有平台都不分"
"大小寫。"

msgid ""
"Like for font variations, you can save the SystemFont arrangement to a "
"resource file to reuse it in other places."
msgstr "如同字型變體，你也可以把 SystemFont 設定存成資源檔重複利用。"

msgid ""
"Remember that different system fonts have different metrics, which means "
"that text that can fit within a rectangle on one platform may not be doing "
"so on another platform. Always reserve some additional space during "
"development so that labels can extend further if needed."
msgstr ""
"請注意，不同系統字型的排版寬度不一，同樣內容在不同平台可能會超出原本的矩形空"
"間，開發時務必預留餘裕。"

msgid ""
"Unlike Windows and macOS/iOS, the set of default fonts shipped on Linux "
"depends on the distribution. This means that on different Linux "
"distributions, different fonts may be displayed for a given system font name "
"or alias."
msgstr ""
"與 Windows、macOS/iOS 不同，Linux 的預設字型取決於發行版。因此同一字型名稱或"
"別名在不同 Linux 可能顯示不同字型。"

msgid ""
"It is also possible to load fonts at runtime even if they aren't installed "
"on the system. See :ref:`Runtime loading and saving "
"<doc_runtime_file_loading_and_saving_fonts>` for details."
msgstr ""
"即使系統未安裝字型，也可在執行時載入自訂字型。詳見 :ref:`執行時載入與儲存 "
"<doc_runtime_file_loading_and_saving_fonts>`。"

msgid "Font prerendering"
msgstr "字型預先算繪"

msgid ""
"When using traditional rasterized fonts, Godot caches glyphs on a per-font "
"and per-size basis. This reduces stuttering, but it can still occur the "
"first time a glyph is displayed when running the project. This can be "
"especially noticeable at higher font sizes or on mobile devices."
msgstr ""
"使用傳統光柵化字型時，Godot 會依字型與大小快取字元，減少卡頓。不過專案執行時"
"首次顯示新字元仍可能卡，特別是大字型或行動裝置。"

msgid ""
"When using MSDF fonts, they only need to be rasterized once to a special "
"signed distance field texture. This means caching can be done purely on a "
"per-font basis, without taking the font size into consideration. However, "
"the initial rendering of MSDF fonts is slower compared to a traditional "
"rasterized font at a medium size."
msgstr ""
"MSDF 字型只需光柵化一次生成特殊距離場貼圖，因此快取是以字型為單位，跟字型大小"
"無關。但 MSDF 首次算圖速度比中等大小的傳統光柵字型慢。"

msgid ""
"To avoid stuttering issues related to font rendering, it is possible to "
"*prerender* certain glyphs. This can be done for all glyphs you intend to "
"use (for optimal results), or only for common glyphs that are most likely to "
"appear during gameplay (to reduce file size). Glyphs that aren't pre-"
"rendered will be rasterized on-the-fly as usual."
msgstr ""
"為避免字型顯示時卡頓，你可以*預先算繪*常用字元。可以全部都算繪（效果最佳），"
"也可以只挑常見字元（壓縮資源體積）。沒預先算繪的字元還是會即時光柵化。"

msgid ""
"In both cases (traditional and MSDF), font rasterization is done on the CPU. "
"This means that the GPU performance doesn't affect how long it takes for "
"fonts to be rasterized."
msgstr "無論傳統還是 MSDF，字型光柵化都在 CPU 執行，與 GPU 效能無關。"

msgid ""
"Move to the **Pre-render Configurations** tab of the Advanced Import "
"Settings dialog, then add a configuration by clicking the \"plus\" symbol:"
msgstr "在進階匯入設定切到 **預先算繪組態** 分頁，按「＋」新增組態："

msgid ""
"Adding a new prerendering configuration in the Advanced Import Settings "
"dialog"
msgstr "在進階匯入設定新增預先算繪組態"

msgid ""
"After adding a configuration, make sure it is selected by clicking its name "
"once. You can also rename the configuration by double-clicking it."
msgstr "新增後請點一下組態名稱以選取。可雙擊重新命名。"

msgid ""
"There are 2 ways to add glyphs to be prerendered to a given configuration. "
"It is possible to use both approaches in a cumulative manner:"
msgstr "你可以用兩種方法把字元加入預先算繪組態，也可混用："

msgid "**Using text from translations**"
msgstr "**從翻譯內容取得字元**"

msgid ""
"For most projects, this approach is the most convenient to use, as it "
"automatically sources text from your language translations. The downside is "
"that it can only be used if your project supports :ref:`internationalization "
"<doc_internationalizing_games>`. Otherwise, stick to the \"Using custom "
"text\" approach described below."
msgstr ""
"多數專案最方便的作法是自動從翻譯（多語）檔取得所有字元。但這必須專案有設"
"定 :ref:`國際化 <doc_internationalizing_games>`。否則請用下述「自訂文字」法。"

msgid ""
"After adding translations to the Project Settings, use the **Glyphs from the "
"Translations** tab to check translations by double-clicking them, then click "
"**Shape All Strings in the Translations and Add Glyphs** at the bottom:"
msgstr ""
"專案設定加入翻譯後，切到 **翻譯字元** 分頁，雙擊檢查所有翻譯，再點下方 **將所"
"有翻譯字串整理並加入字元**："

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog with the Glyphs "
"from the Translations tab"
msgstr "在進階匯入設定啟用「翻譯字元」預先算繪"

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog with the "
"**Glyphs from the Translations** tab"
msgstr "在進階匯入設定啟用 **翻譯字元** 預先算繪"

msgid ""
"The list of prerendered glyphs is not automatically updated when "
"translations are updated, so you need to repeat this process if your "
"translations have changed significantly."
msgstr ""
"如果翻譯檔有大幅更新，預算繪字元清單不會自動同步，需手動再執行一次上述程序。"

msgid "**Using custom text**"
msgstr "**從自訂文字取得字元**"

msgid ""
"While it requires manually specifying text that will appear in the game, "
"this is the most efficient approach for games which don't feature user text "
"input. This approach is worth exploring for mobile games to reduce the file "
"size of the distributed app."
msgstr ""
"這種方式需手動列出遊戲中會用到的所有字元，但對沒有用戶輸入的遊戲來說最有效"
"率。行動遊戲若想壓縮安裝檔體積，值得採用這法。"

msgid ""
"To use existing text as a baseline for prerendering, go to the **Glyphs from "
"the Text** sub-tab of the Advanced Import Settings dialog, enter text in the "
"window on the right, then click **Shape Text and Add Glyphs** at the bottom "
"of the dialog:"
msgstr ""
"若要用現有文字當預先算繪依據，請切到進階匯入設定的 **文字字元** 分頁，在右邊"
"輸入要收錄的內容，然後點下方 **整理文字並加入字元**："

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog, Glyphs from "
"the Text tab"
msgstr "在進階匯入設定「文字字元」分頁啟用預先算繪"

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog with the "
"**Glyphs from the Text** tab"
msgstr "在進階匯入設定啟用 **文字字元** 預先算繪"

msgid ""
"If your project supports :ref:`internationalization "
"<doc_internationalizing_games>`, you can paste the contents of your CSV or "
"PO files in the above box to quickly prerender all possible characters that "
"may be rendered during gameplay (excluding user-provided or non-translatable "
"strings)."
msgstr ""
"如果你的專案有國際化 (:ref:`internationalization "
"<doc_internationalizing_games>`)，直接貼上 CSV 或 PO 檔內容，就能一次性算繪所"
"有遊戲會用到的字元（但不含玩家自訂輸入或不可翻譯的字串）。"

msgid "**By enabling character sets**"
msgstr "**啟用字元集**"

msgid ""
"The second method requires less configuration and fewer updates if your "
"game's text changes, and is more suited to text-heavy games or multiplayer "
"games with chat. On the other hand, it may cause glyphs that never show up "
"in the game to be prerendered, which is less efficient in terms of file size."
msgstr ""
"這種方法不用每次文字變更都重設組態，適合大量文字或有聊天功能的遊戲。但缺點是"
"會預算繪許多實際不會用到的字元，檔案也會變大。"

msgid ""
"To use existing text as a baseline for prerendering, go to the **Glyphs from "
"the Character Map** sub-tab of the Advanced Import Settings dialog, then "
"*double-click* character sets to be enabled on the right:"
msgstr ""
"要用字元集當預設，請切到進階匯入設定的 **字元集** 分頁，右側*雙擊*要啟用的字"
"元集："

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog, Glyphs from "
"the Character Map tab"
msgstr "在進階匯入設定「字元集」分頁啟用預先算繪"

msgid ""
"Enabling prerendering in the Advanced Import Settings dialog with the "
"**Glyphs from the Character Map** tab"
msgstr "在進階匯入設定啟用 **字元集** 預先算繪"

msgid ""
"To ensure full prerendering, the character sets you need to enable depend on "
"which languages are supported in your game. For English, only **Basic "
"Latin** needs to be enabled. Enabling **Latin-1 Supplement** as well allows "
"fully covering many more languages, such as French, German and Spanish. For "
"Russian, **Cyrillic** needs to be enabled, and so on."
msgstr ""
"要完整預先算繪，需依遊戲支援語言開啟相應的字元集。英文只要 **Basic Latin**，"
"如需支援法語、德語、西班牙語，請同時啟用 **Latin-1 Supplement**。俄文則要啟 "
"**Cyrillic**，以此類推。"

msgid "Default project font properties"
msgstr "預設專案字型屬性"

msgid ""
"In the **GUI > Theme** section of the advanced Project Settings, you can "
"choose how the default font should be rendered:"
msgstr "在進階專案設定的 **GUI > 主題** 區段，你可以調整預設字型的算繪方式："

msgid ""
"**Default Font Antialiasing:** Controls the :ref:`antialiasing "
"<doc_using_fonts_antialiasing>` method used for the default project font."
msgstr ""
"**預設字型抗鋸齒：** 控制預設專案字型的 :ref:`抗鋸齒 "
"<doc_using_fonts_antialiasing>` 方法。"

msgid ""
"**Default Font Hinting:** Controls the :ref:`hinting "
"<doc_using_fonts_hinting>` method used for the default project font."
msgstr ""
"**預設字型微調：** 決定預設專案字型用的 :ref:`微調 "
"<doc_using_fonts_hinting>` 方法。"

msgid ""
"**Default Font Subpixel Positioning:** Controls the :ref:`subpixel "
"positioning <doc_using_fonts_subpixel_positioning>` method for the default "
"project font."
msgstr ""
"**預設字型子像素定位：** 決定預設專案字型用的 :ref:`子像素定位 "
"<doc_using_fonts_subpixel_positioning>` 方法。"

msgid ""
"**Default Font Multichannel Signed Distance Field:** If ``true``, makes the "
"default project font use :ref:`MSDF font rendering <doc_using_fonts_msdf>` "
"instead of traditional rasterization."
msgstr ""
"**預設字型多通道帶符號距離場：** 設為 ``true`` 時，預設專案字型會"
"用 :ref:`MSDF 字型算繪 <doc_using_fonts_msdf>`，而非傳統光柵化。"

msgid ""
"**Default Font Generate Mipmaps:** If ``true``, enables :ref:`mipmap "
"<doc_using_fonts_mipmaps>` generation and usage for the default project font."
msgstr ""
"**預設字型產生 Mipmap：** 設為 ``true`` 時，會為預設專案字型產生與使"
"用 :ref:`mipmap <doc_using_fonts_mipmaps>`。"

msgid ""
"These project settings *only* affect the default project font (the one that "
"is hardcoded in the engine binary)."
msgstr "這些專案設定*僅限*影響預設專案字型（即內建字型）。"

msgid ""
"Custom fonts' properties are governed by their respective import options "
"instead. You can use the **Import Defaults** section of the Project Settings "
"dialog to override default import options for custom fonts."
msgstr ""
"自訂字型的屬性則由其匯入選項決定。你可在專案設定的 **匯入預設值** 區覆蓋自訂"
"字型的匯入選項。"
