#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Runtime file loading and saving"
msgstr "執行時檔案載入與儲存"

msgid ""
"See :ref:`doc_saving_games` for information on saving and loading game "
"progression."
msgstr "關於儲存與載入遊戲進度，請參考 :ref:`doc_saving_games`。"

msgid ""
"Sometimes, :ref:`exporting packs, patches, and mods <doc_exporting_pcks>` is "
"not ideal when you want players to be able to load user-generated content in "
"your project. It requires users to generate a PCK or ZIP file through the "
"Godot editor, which contains resources imported by Godot."
msgstr ""
"有時候，當你希望玩家能夠在專案中載入使用者自製內容時，:ref:`匯出資源包、補丁"
"和模組 <doc_exporting_pcks>` 就不太理想。這會要求使用者必須透過 Godot 編輯器"
"產生 PCK 或 ZIP 檔案，內容為 Godot 匯入過的資源。"

msgid "Example use cases for runtime file loading and saving include:"
msgstr "執行時檔案載入與儲存的常見應用情境包括："

msgid "Loading texture packs designed for the game."
msgstr "載入為遊戲設計的材質包。"

msgid ""
"Loading user-provided audio tracks and playing them back in an in-game radio "
"station."
msgstr "載入玩家提供的音樂檔並於遊戲內廣播電台播放。"

msgid "Using user-provided fonts for menus and HUD."
msgstr "在選單和 HUD 上使用玩家自備的字型。"

msgid ""
"Saving/loading a file format that can contain multiple files but can still "
"easily be read by other applications (ZIP)."
msgstr ""
"儲存／載入一種能包含多個檔案，且能被其他應用程式輕鬆讀取的檔案格式（如 "
"ZIP）。"

msgid ""
"Loading files created by another game or program, or even game data files "
"from another game not made with Godot."
msgstr "載入其他遊戲或程式產生的檔案，甚至是非 Godot 製作的遊戲資料檔案。"

msgid ""
"Runtime file loading can be combined with :ref:`HTTP requests "
"<doc_http_request_class>` to load resources from the Internet directly."
msgstr ""
"執行時檔案載入也能搭配 :ref:`HTTP 請求 <doc_http_request_class>`，直接從網路"
"載入資源。"

msgid ""
"Do **not** use this runtime loading approach to load resources that are part "
"of the project, as it's less efficient and doesn't allow benefiting from "
"Godot's resource handling functionality (such as translation remaps). "
"See :ref:`doc_import_process` for details."
msgstr ""
"**請勿** 用這種執行時載入方式來載入專案自身的資源，因為效率較低，且無法利用 "
"Godot 資源管理（如翻譯重導等）功能。詳情請見 :ref:`doc_import_process`。"

msgid ""
"You can see how saving and loading works in action using the `Run-time File "
"Saving and Loading (Serialization) demo project <https://github.com/"
"godotengine/godot-demo-projects/blob/master/loading/runtime_save_load>`__."
msgstr ""
"你可以參考這個範例專案來了解執行時儲存與載入的實際運作：`執行時檔案儲存與載入"
"（序列化）Demo <https://github.com/godotengine/godot-demo-projects/blob/"
"master/loading/runtime_save_load>`__。"

msgid "Plain text and binary files"
msgstr "純文字與二進位檔案"

msgid ""
"Godot's :ref:`class_FileAccess` class provides methods to access files on "
"the filesystem for reading and writing:"
msgstr ""
"Godot 的 :ref:`class_FileAccess` 類別提供了方法，可用來讀寫檔案系統中的檔案："

msgid ""
"To handle custom binary formats (such as loading file formats not supported "
"by Godot), :ref:`class_FileAccess` provides several methods to read/write "
"integers, floats, strings and more. These FileAccess methods have names that "
"start with ``get_`` and ``store_``."
msgstr ""
"若需處理自訂二進位格式（例如載入 Godot 不支援的檔案格"
"式），:ref:`class_FileAccess` 提供了多種讀寫整數、浮點數、字串等的方法。這些"
"方法名稱多以 ``get_`` 或 ``store_`` 開頭。"

msgid ""
"If you need more control over reading binary files or need to read binary "
"streams that are not part of a file, :ref:`class_PackedByteArray` provides "
"several helper methods to decode/encode series of bytes to integers, floats, "
"strings and more. These PackedByteArray methods have names that start with "
"``decode_`` and ``encode_``. See also :ref:`doc_binary_serialization_api`."
msgstr ""
"如果你需要更細緻地控制二進位檔案的讀取，或是要讀取不屬於檔案的二進位資料"
"流，:ref:`class_PackedByteArray` 提供多種輔助方法，可以將位元組序列解碼／編碼"
"為整數、浮點數、字串等。這些方法名稱通常以 ``decode_`` 或 ``encode_`` 開頭。"
"詳情請參考 :ref:`doc_binary_serialization_api`。"

msgid "Images"
msgstr "影像"

msgid ""
"Image's :ref:`Image.load_from_file <class_Image_method_load_from_file>` "
"static method handles everything, from format detection based on file "
"extension to reading the file from disk."
msgstr ""
"Image 的靜態方法 :ref:`Image.load_from_file "
"<class_Image_method_load_from_file>` 能自動處理檔案格式偵測（依副檔名判斷）與"
"從磁碟讀取檔案。"

msgid ""
"If you need error handling or more control (such as changing the scale an "
"SVG is loaded at), use one of the following methods depending on the file "
"format:"
msgstr ""
"如果你需要錯誤處理或更細緻的控制（例如調整載入 SVG 時的縮放比例），請根據檔案"
"格式改用下列方法："

msgid ""
":ref:`Image.load_jpg_from_buffer <class_Image_method_load_jpg_from_buffer>`"
msgstr ""
":ref:`Image.load_jpg_from_buffer <class_Image_method_load_jpg_from_buffer>`"

msgid ""
":ref:`Image.load_ktx_from_buffer <class_Image_method_load_ktx_from_buffer>`"
msgstr ""
":ref:`Image.load_ktx_from_buffer <class_Image_method_load_ktx_from_buffer>`"

msgid ""
":ref:`Image.load_png_from_buffer <class_Image_method_load_png_from_buffer>`"
msgstr ""
":ref:`Image.load_png_from_buffer <class_Image_method_load_png_from_buffer>`"

msgid ""
":ref:`Image.load_svg_from_buffer <class_Image_method_load_svg_from_buffer>` "
"or :ref:`Image.load_svg_from_string "
"<class_Image_method_load_svg_from_string>`"
msgstr ""
":ref:`Image.load_svg_from_buffer <class_Image_method_load_svg_from_buffer>` "
"或 :ref:`Image.load_svg_from_string "
"<class_Image_method_load_svg_from_string>`"

msgid ""
":ref:`Image.load_tga_from_buffer <class_Image_method_load_tga_from_buffer>`"
msgstr ""
":ref:`Image.load_tga_from_buffer <class_Image_method_load_tga_from_buffer>`"

msgid ""
":ref:`Image.load_webp_from_buffer <class_Image_method_load_webp_from_buffer>`"
msgstr ""
":ref:`Image.load_webp_from_buffer <class_Image_method_load_webp_from_buffer>`"

msgid ""
"Several image formats can also be saved by Godot at runtime using the "
"following methods:"
msgstr "Godot 也能於執行時將多種圖片格式儲存，請使用以下方法："

msgid ""
":ref:`Image.save_png <class_Image_method_save_png>` "
"or :ref:`Image.save_png_to_buffer <class_Image_method_save_png_to_buffer>`"
msgstr ""
":ref:`Image.save_png <class_Image_method_save_png>` "
"或 :ref:`Image.save_png_to_buffer <class_Image_method_save_png_to_buffer>`"

msgid ""
":ref:`Image.save_webp <class_Image_method_save_webp>` "
"or :ref:`Image.save_webp_to_buffer <class_Image_method_save_webp_to_buffer>`"
msgstr ""
":ref:`Image.save_webp <class_Image_method_save_webp>` "
"或 :ref:`Image.save_webp_to_buffer <class_Image_method_save_webp_to_buffer>`"

msgid ""
":ref:`Image.save_jpg <class_Image_method_save_jpg>` "
"or :ref:`Image.save_jpg_to_buffer <class_Image_method_save_jpg_to_buffer>`"
msgstr ""
":ref:`Image.save_jpg <class_Image_method_save_jpg>` "
"或 :ref:`Image.save_jpg_to_buffer <class_Image_method_save_jpg_to_buffer>`"

msgid ""
":ref:`Image.save_exr <class_Image_method_save_exr>` "
"or :ref:`Image.save_exr_to_buffer <class_Image_method_save_exr_to_buffer>` "
"*(only available in editor builds, cannot be used in exported projects)*"
msgstr ""
":ref:`Image.save_exr <class_Image_method_save_exr>` "
"或 :ref:`Image.save_exr_to_buffer <class_Image_method_save_exr_to_buffer>` "
"*(僅限編輯器版本可用，無法於匯出專案中使用)*"

msgid ""
"The methods with the ``to_buffer`` suffix save the image to a "
"PackedByteArray instead of the filesystem. This is useful to send the image "
"over the network or into a ZIP archive without having to write it on the "
"filesystem. This can increase performance by reducing I/O utilization."
msgstr ""
"帶有 ``to_buffer`` 結尾的方法會將圖片儲存為 PackedByteArray，而不是直接寫入檔"
"案系統。這對於網路傳輸圖片或直接打包到 ZIP 壓縮檔特別方便，且能減少 I/O 使用"
"量，提高效能。"

msgid ""
"If displaying the loaded image on a 3D surface, make sure to "
"call :ref:`Image.generate_mipmaps <class_Image_method_generate_mipmaps>` so "
"that the texture doesn't look grainy when viewed at a distance. This is also "
"useful in 2D when following instructions on :ref:`reducing aliasing when "
"downsampling <doc_multiple_resolutions_reducing_aliasing_on_downsampling>`."
msgstr ""
"若將載入的圖片顯示在 3D 表面上，請務必呼叫 :ref:`Image.generate_mipmaps "
"<class_Image_method_generate_mipmaps>`，避免貼圖在遠距離觀看時顯得粗糙。若"
"依 :ref:`降採樣時降低鋸齒 "
"<doc_multiple_resolutions_reducing_aliasing_on_downsampling>` 指引，2D 也同樣"
"適用。"

msgid ""
"Example of loading an image and displaying it in a :ref:`class_TextureRect` "
"node (which requires conversion to :ref:`class_ImageTexture`):"
msgstr ""
"以下範例說明如何載入圖片並顯示於 :ref:`class_TextureRect` 節點（需先轉換"
"為 :ref:`class_ImageTexture`）："

msgid "Audio/video files"
msgstr "音訊／影片檔案"

msgid ""
"Example of loading an Ogg Vorbis audio file in "
"an :ref:`class_AudioStreamPlayer` node:"
msgstr ""
"以下是在 :ref:`class_AudioStreamPlayer` 節點中載入 Ogg Vorbis 音訊檔案的範"
"例："

msgid ""
"Example of loading an Ogg Theora video file in "
"a :ref:`class_VideoStreamPlayer` node:"
msgstr ""
"以下為在 :ref:`class_VideoStreamPlayer` 節點載入 Ogg Theora 影片檔的範例："

msgid "3D scenes"
msgstr "3D 場景"

msgid ""
"Godot has first-class support for glTF 2.0, both in the editor and exported "
"projects. Using :ref:`class_gltfdocument` and :ref:`class_gltfstate` "
"together, Godot can load and save glTF files in exported projects, in both "
"text (``.gltf``) and binary (``.glb``) formats. The binary format should be "
"preferred as it's faster to write and smaller, but the text format is easier "
"to debug."
msgstr ""
"Godot 在編輯器及匯出專案中皆完整支援 glTF 2.0。搭配使"
"用 :ref:`class_gltfdocument` 與 :ref:`class_gltfstate`，Godot 可於匯出專案中"
"載入與儲存 glTF 檔案，支援文字（``.gltf``）與二進位（``.glb``）格式。建議優先"
"使用二進位格式，因為寫入速度較快且檔案較小，但文字格式較易除錯。"

msgid ""
"Example of loading a glTF scene and appending its root node to the scene:"
msgstr "以下範例說明如何載入 glTF 場景並將其根節點加入目前場景："

msgid ""
"When loading a glTF scene, a *base path* must be set so that external "
"resources like textures can be loaded correctly. When loading from a file, "
"the base path is automatically set to the folder containing the file. When "
"loading from a buffer, this base path must be manually set as there is no "
"way for Godot to infer this path."
msgstr ""
"於載入 glTF 場景時，必須設定*基底路徑*，才能正確載入外部資源（如貼圖）。若從"
"檔案載入，基底路徑會自動設為檔案所在資料夾；若從緩衝區載入，則需手動設定此基"
"底路徑，因為 Godot 無法自動推斷。"

msgid ""
"To set the base path, set :ref:`GLTFState.base_path "
"<class_GLTFState_property_base_path>` on your GLTFState instance *before* "
"calling :ref:`GLTFDocument.append_from_buffer "
"<class_GLTFDocument_method_append_from_buffer>` "
"or :ref:`GLTFDocument.append_from_file "
"<class_GLTFDocument_method_append_from_file>`."
msgstr ""
"設定基底路徑時，請於呼叫 :ref:`GLTFDocument.append_from_buffer "
"<class_GLTFDocument_method_append_from_buffer>` "
"或 :ref:`GLTFDocument.append_from_file "
"<class_GLTFDocument_method_append_from_file>` 前，先於 GLTFState 實例上設"
"定 :ref:`GLTFState.base_path <class_GLTFState_property_base_path>`。"

msgid "Fonts"
msgstr "字型"

msgid ""
":ref:`FontFile.load_dynamic_font <class_FontFile_method_load_bitmap_font>` "
"supports the following font file formats: TTF, OTF, WOFF, WOFF2, PFB, PFM"
msgstr ""
":ref:`FontFile.load_dynamic_font <class_FontFile_method_load_bitmap_font>` 支"
"援下列字型檔案格式：TTF、OTF、WOFF、WOFF2、PFB、PFM"

msgid ""
"On the other hand, :ref:`FontFile.load_bitmap_font "
"<class_FontFile_method_load_bitmap_font>` supports the `BMFont <https://"
"www.angelcode.com/products/bmfont/>`__ format (``.fnt`` or ``.font``)."
msgstr ""
"另一方面，:ref:`FontFile.load_bitmap_font "
"<class_FontFile_method_load_bitmap_font>` 則支援 `BMFont <https://"
"www.angelcode.com/products/bmfont/>`__ 格式（副檔名 ``.fnt`` 或 ``.font``）。"

msgid ""
"Additionally, it is possible to load any font that is installed on the "
"system using Godot's support for :ref:`doc_using_fonts_system_fonts`."
msgstr ""
"此外，Godot 也支援 :ref:`doc_using_fonts_system_fonts`，可以載入系統中已安裝"
"的任意字型。"

msgid ""
"Example of loading a font file automatically according to its file "
"extension, then adding it as a theme override to a :ref:`class_Label` node:"
msgstr ""
"以下範例說明如何依字型檔案副檔名自動載入字型，並將其作為主題覆蓋套用"
"到 :ref:`class_Label` 節點："

msgid "ZIP archives"
msgstr "ZIP 壓縮檔案"

msgid ""
"Godot supports reading and writing ZIP archives using "
"the :ref:`class_zipreader` and :ref:`class_zippacker` classes. This supports "
"any ZIP file, including files generated by Godot's \"Export PCK/ZIP\" "
"functionality (although these will contain imported Godot resources rather "
"than the original project files)."
msgstr ""
"Godot 支援使用 :ref:`class_zipreader` 與 :ref:`class_zippacker` 來讀寫 ZIP 壓"
"縮檔案。這些類別可處理任何 ZIP 檔，包含 Godot 的「匯出 PCK/ZIP」功能產生的檔"
"案（不過這些檔案內容是已匯入的 Godot 資源，而非原始專案檔案）。"

msgid ""
"Use :ref:`ProjectSettings.load_resource_pack "
"<class_ProjectSettings_method_load_resource_pack>` to load PCK or ZIP files "
"exported by Godot as :ref:`additional data packs <doc_exporting_pcks>`. That "
"approach is preferred for DLCs, as it makes interacting with additional data "
"packs seamless (virtual filesystem)."
msgstr ""
"可利用 :ref:`ProjectSettings.load_resource_pack "
"<class_ProjectSettings_method_load_resource_pack>` 來載入 Godot 匯出的 PCK "
"或 ZIP 檔案作為 :ref:`擴充資料包 <doc_exporting_pcks>`。此方法非常適合用於 "
"DLC，能讓額外資料包的操作更加無縫（虛擬檔案系統）。"

msgid ""
"This ZIP archive support can be combined with runtime image, 3D scene and "
"audio loading to provide a seamless modding experience without requiring "
"users to go through the Godot editor to generate PCK/ZIP files."
msgstr ""
"ZIP 壓縮檔支援可結合執行時圖片、3D 場景及音訊載入，提供玩家無需透過 Godot 編"
"輯器產生 PCK/ZIP 檔案的流暢模組化體驗。"

msgid ""
"Example that lists files in a ZIP archive in an :ref:`class_ItemList` node, "
"then writes contents read from it to a new ZIP archive (essentially "
"duplicating the archive):"
msgstr ""
"以下範例會在 :ref:`class_ItemList` 節點中列出 ZIP 壓縮檔案內的所有檔案，並將"
"其內容寫入新 ZIP 檔案（也就是複製壓縮檔）："
