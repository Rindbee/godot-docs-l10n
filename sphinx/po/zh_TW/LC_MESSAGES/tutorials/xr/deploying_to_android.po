#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Deploying to Android"
msgstr "部署到 Android"

msgid "Setup"
msgstr "設定"

msgid ""
"Most standalone headsets run on Android and OpenXR support is making its way "
"to these platforms."
msgstr ""
"多數獨立式頭戴式裝置（HMD）運行於 Android，OpenXR 支援正逐步進入這些平台。"

msgid ""
"Before following the OpenXR-specific instructions here, you'll need to first "
"setup your system to export to Android in general, including:"
msgstr ""
"在開始本頁有關 OpenXR 的專屬說明前，請先完成一般 Android 匯出相關系統設定，包"
"括："

msgid "Installing OpenJDK 17"
msgstr "安裝 OpenJDK 17"

msgid "Installing Android Studio"
msgstr "安裝 Android Studio"

msgid ""
"See :ref:`doc_exporting_for_android` for the full details, and return here "
"when you've finished these steps."
msgstr ""
"詳情請參閱 :ref:`doc_exporting_for_android`，完成上述步驟後請回到本頁繼續。"

msgid ""
"While the Mobile Vulkan renderer has many optimizations targeted at mobile "
"devices, we're still working out the kinks. It is highly advisable to use "
"the compatibility renderer (OpenGL) for the time being when targeting "
"Android based XR devices."
msgstr ""
"雖然 Mobile Vulkan 算繪器針對行動裝置做了多項優化，但目前尚有部分問題待解決。"
"建議暫時針對 Android XR 裝置使用相容性算繪器（OpenGL）。"

msgid "Gradle Android build"
msgstr "Gradle Android 建置"

msgid ""
"Official support for the Android platform wasn't added to the OpenXR "
"specification initially resulting in various vendors creating custom loaders "
"to make OpenXR available on their headsets. While the long term expectation "
"is that all vendors will adopt the official OpenXR loader, for now these "
"loaders need to be added to your project."
msgstr ""
"OpenXR 規範起初未正式支援 Android 平台，導致各家廠商自行實作專屬載入器以讓 "
"OpenXR 可於其頭顯運作。長期來看，預期所有廠商都會改用官方 OpenXR 載入器，但目"
"前仍需將這些載入器加入專案中。"

msgid ""
"In order to include the vendor-specific OpenXR loader into your project, you "
"will need to setup a gradle Android build."
msgstr "若要將廠商專屬的 OpenXR 載入器加入專案，必須設定 Gradle Android 建置。"

msgid "Select **Install Android Build Template...** from the **Project** menu:"
msgstr "在 **專案** 選單中選擇 **安裝 Android 建置範本...**："

msgid ""
"This will create a folder called **android** inside of your project that "
"contains all the runtime files needed on Android. You can now customize this "
"installation. Godot won't show this in the editor but you can find it with a "
"file browser."
msgstr ""
"這會在你的專案資料夾內建立一個名為 **android** 的資料夾，裡面包含 Android 所"
"需的所有執行檔案。你可以自訂這份安裝內容。Godot 編輯器不會顯示這個資料夾，但"
"可用檔案總管找到。"

msgid ""
"You can read more about gradle builds here: :ref:`doc_android_gradle_build`."
msgstr ""
"你可以於 :ref:`doc_android_gradle_build` 了解更多有關 Gradle 建置的資訊。"

msgid "Installing the vendors plugin"
msgstr "安裝廠商外掛"

msgid ""
"You can find the main repository of the vendors plugin `here <https://"
"github.com/GodotVR/godot_openxr_vendors>`__."
msgstr ""
"你可以在 `這裡 <https://github.com/GodotVR/godot_openxr_vendors>`__ 找到廠商"
"外掛的原始碼倉庫。"

msgid "Creating the export presets"
msgstr "建立匯出預設"

msgid ""
"You will need to setup a separate export preset for each device, as each "
"device will need its own loader included."
msgstr "每個裝置都需建立各自的匯出預設，因為每台裝置都需要納入對應的載入器。"

msgid ""
"Open **Project** and select **Export..**. Click on **Add..** and select "
"**Android**. Next change the name of the export preset for the device you're "
"setting this up for, say **Meta Quest**. And enable **Use Gradle Build**. If "
"you want to use one-click deploy (described below), ensure that **Runnable** "
"is enabled."
msgstr ""
"開啟 **專案** 並選擇 **匯出...**，點擊 **新增...** 並選 **Android**。接著將此"
"匯出預設重新命名（例如：**Meta Quest**），並啟用 **使用 Gradle 建置**。若想啟"
"動一鍵部署（見下文），請確保啟用 **可執行**。"

msgid "Running on your device from the Godot editor"
msgstr "從 Godot 編輯器在裝置上執行"

msgid ""
"If you've setup your export settings as described above, and your headset is "
"connected to your computer and correctly recognized, you can launch it "
"directly from the Godot editor using :ref:`doc_one-click_deploy`:"
msgstr ""
"若你已依前述設定好匯出選項，並將頭顯正確連接至電腦且設備已被正確辨識，即可從 "
"Godot 編輯器直接利用 :ref:`doc_one-click_deploy` 啟動："

msgid ""
"For some devices on some platforms, you may need to perform some extra steps "
"in order for your device to be recognized correctly, so be sure to check the "
"developer documentation from your headset vendor."
msgstr "某些平台或裝置可能需額外步驟才能被正確識別，請參考各廠商的開發者文件。"

msgid ""
"For example, with the Meta Quest 2, you need to enable developer mode on the "
"headset, and if you're on Windows, you'll need to install special ADB "
"drivers. See the `official Meta Quest developer documentation <https://"
"developer.oculus.com/documentation/native/android/mobile-device-setup/>`_ "
"for more details."
msgstr ""
"例如，Meta Quest 2 需先在頭顯上啟用開發者模式；若使用 Windows，還要安裝專用"
"的 ADB 驅動程式。詳情請參考 `Meta Quest 官方開發者文件 <https://"
"developer.oculus.com/documentation/native/android/mobile-device-setup/>`_。"

msgid ""
"If you're having any issues with one-click deploy, check "
"the :ref:`Troubleshooting section <doc_one-click_deploy_troubleshooting>`."
msgstr ""
"若遇到一鍵部署相關問題，請參考 :ref:`故障排除 <doc_one-"
"click_deploy_troubleshooting>`。"
