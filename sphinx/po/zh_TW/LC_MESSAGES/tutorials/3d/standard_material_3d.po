#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Standard Material 3D and ORM Material 3D"
msgstr "標準 3D 材質與 ORM 3D 材質"

msgid "Introduction"
msgstr "前言"

msgid ""
"``StandardMaterial3D`` and ``ORMMaterial3D`` (Occlusion, Roughness, "
"Metallic) are default 3D materials that aim to provide most of the features "
"artists look for in a material, without the need for writing shader code. "
"However, they can be converted to shader code if additional functionality is "
"needed."
msgstr ""
"``StandardMaterial3D`` 與 ``ORMMaterial3D`` （遮蔽、粗糙度、金屬度）是 Godot "
"預設的 3D 材質，設計目標是讓美術人員在不必編寫著色器程式碼的情況下，也能擁有"
"多數常用功能。如有進階需求，這些材質仍可轉換成自訂著色器。"

msgid "This tutorial explains the parameters present in both materials."
msgstr "本教學說明這兩種材質的所有參數設定。"

msgid ""
"There are 4 ways to add these materials to an object. A material can be "
"added in the *Material* property of the mesh. It can be added in the "
"*Material* property of the node using the mesh (such as a MeshInstance3D "
"node), the *Material Override* property of the node using the mesh, and the "
"*Material Overlay*."
msgstr ""
"將 ``SpatialMaterial`` 新增到物件有 4 種方法。可以在網格的 *Material* （材"
"質）屬性中新增。可以在使用該網格的節點（比如 MeshInstance 節點）的 "
"*Material* 屬性中新增，可以使用該網格的節點的 *Material Override* （材質覆"
"蓋）屬性中新增，也可以是 *Material Overlay* （材質覆蓋層）屬性。"

msgid ""
"If you add a material to the mesh itself, every time that mesh is used it "
"will have that material. If you add a material to the node using the mesh, "
"the material will only be used by that node, it will also override the "
"material property of the mesh. If a material is added in the *Material "
"Override* property of the node, it will only be used by that node. It will "
"also override the regular material property of the node and the material "
"property of the mesh."
msgstr ""
"如果你把材質加到網格本身上, 每次那個網格被使用的時候都會有那個材質. 如果你用"
"網格向一個節點新增材質, 那個材質僅會被那個節點使用, 也會覆蓋網格的材質屬性. "
"如果材質被新增到了節點的 *Material Override(材質覆蓋)* 屬性上, 它僅會被那個節"
"點使用, 它也會覆蓋那個節點的常規材質屬性和網格的材質屬性."

msgid ""
"The *Material Overlay* property will render a material **over** the current "
"one being used by the mesh. As an example, this can be used to put a "
"transparent shield effect on a mesh."
msgstr ""
"*Material Overlay* （材質覆蓋層）屬性會在該網格所使用的目前材質**上方**再算繪"
"一個材質。例如，可以用來在網格上放置半透明護盾效果。"

msgid "BaseMaterial 3D settings"
msgstr "BaseMaterial 3D 設定"

msgid ""
"StandardMaterial3D has many settings that determine the look of a material. "
"All of these are under the BaseMaterial3D category"
msgstr ""
"StandardMaterial3D 有許多決定材質外觀的設定。所有這些都屬於 BaseMaterial3D 類"
"別"

msgid ""
"ORM materials are almost exactly the same with one difference. Instead of "
"separate settings and textures for occlusion, roughness, and metallic, there "
"is a single ORM texture. The different color channels of that texture are "
"used for each parameter. Programs such as Substance Painter and Armor Paint "
"will give you the option to export in this format, for these two programs "
"it's with the export preset for unreal engine, which also uses ORM textures."
msgstr ""
"ORM 材料幾乎完全相同，只有一處不同。沒有單獨的遮蔽、粗糙度和金屬設定和紋理，"
"而是單一 ORM 紋理。此紋理的不同顏色通道用於每個參數。 Substance Painter 和 "
"Armor Paint 等程式將為您提供以此格式匯出的選項，對於這兩個程式，它具有虛幻引"
"擎的匯出預設，該引擎也使用 ORM 紋理。"

msgid "Transparency"
msgstr "透明"

msgid ""
"By default, materials in Godot are opaque. This is fast to render, but it "
"means the material can't be seen through even if you use a transparent "
"texture in the **Albedo > Texture** property (or set **Albedo > Color** to a "
"transparent color)."
msgstr ""
"Godot 的材質預設為不透明，這樣可以加快算繪速度。但即使你在 **反照率 > 紋理** "
"屬性使用了透明貼圖（或將 **反照率 > 顏色** 設成透明色），也無法做到透視效果。"

msgid ""
"To be able to see through a material, the material needs to be made "
"*transparent*. Godot offers several transparency modes:"
msgstr "若要讓材質可被看穿，必須將其設為*透明*。Godot 提供了數種透明度模式："

msgid ""
"**Disabled:** Material is opaque. This is the fastest to render, with all "
"rendering features supported."
msgstr ""
"**Disabled：** 材質為不透明。這是算繪最快、支援所有算繪特性的預設模式。"

msgid ""
"**Alpha:** Material is transparent. Semi-transparent areas are drawn with "
"blending. This is slow to render, but it allows for partial transparency "
"(also known as translucency). Materials using alpha blending also can't cast "
"shadows, and are not visible in screen-space reflections."
msgstr ""
"**Alpha：** 材質為透明。半透明區域會用混合方式算繪。這種模式較慢，但可呈現局"
"部透明（半透明）效果。使用 Alpha 混合的材質無法投射陰影，且在螢幕空間反射中不"
"可見。"

msgid "**Alpha** is a good fit for particle effects and VFX."
msgstr "**Alpha** 模式適合用於粒子特效與視覺特效（VFX）。"

msgid ""
"**Alpha Scissor:** Material is transparent. Semi-transparent areas whose "
"opacity is below **Alpha Scissor Threshold** are not drawn (above this "
"opacity, these are drawn as opaque). This is faster to render than Alpha and "
"doesn't exhibit transparency sorting issues. The downside is that this "
"results in \"all or nothing\" transparency, with no intermediate values "
"possible. Materials using alpha scissor can cast shadows."
msgstr ""
"**Alpha Scissor：** 材質為透明。半透明區域若其透明度低於 **Alpha Scissor 閾值"
"** 就不會被算繪（高於則以不透明算繪）。這比 Alpha 模式算繪快，且不會有透明排"
"序問題，但僅能實現「全不透明或全透明」的效果，無法有漸層。使用此模式的材質可"
"以投射陰影。"

msgid ""
"**Alpha Scissor** is ideal for foliage and fences, since these have hard "
"edges and require correct sorting to look good."
msgstr ""
"**Alpha Scissor** 非常適合用於植被、柵欄等需要硬邊緣且透明排序必須正確的場"
"合。"

msgid ""
"**Alpha Hash:** Material is transparent. Semi-transparent areas are drawn "
"using dithering. This is also \"all or nothing\" transparency, but dithering "
"helps represent partially opaque areas with limited precision depending on "
"viewport resolution. Materials using alpha hash can cast shadows."
msgstr ""
"**Alpha Hash：** 材質為透明。半透明區域以抖動方式算繪，同樣是「全透明或全不透"
"明」，但抖動可讓部分透明效果根據畫面解析度以有限精度顯示。使用此模式的材質也"
"可投射陰影。"

msgid ""
"**Alpha Hash** is suited for realistic-looking hair, although stylized hair "
"may work better with alpha scissor."
msgstr ""
"**Alpha Hash** 適合寫實風格的頭髮材質，如果是卡通風格頭髮則建議用 Alpha "
"Scissor 效果會更好。"

msgid ""
"**Depth Pre-Pass:** This renders the object's fully opaque pixels via the "
"opaque pipeline first, then renders the rest with alpha blending. This "
"allows transparency sorting to be *mostly* correct (albeit not fully so, as "
"partially transparent regions may still exhibit incorrect sorting). "
"Materials using depth prepass can cast shadows."
msgstr ""
"**Depth Pre-Pass：** 先把物件的不透明像素用不透明管線算繪，再用 Alpha 混合算"
"繪剩下的部分。這能讓透明度排序「大致」正確（但部分半透明區域還是可能有順序錯"
"誤）。此模式下材質可以投射陰影。"

msgid ""
"Godot will automatically force the material to be transparent with alpha "
"blending if *any* of these conditions is met:"
msgstr ""
"只要滿足下列任一條件，Godot 就會自動將材質切換為 Alpha 混合的透明模式："

msgid "Setting the transparency mode to **Alpha** (as described here)."
msgstr "將透明度模式設為 **Alpha** （如上所述）。"

msgid "Setting a blend mode other than the default **Mix**"
msgstr "將混合模式設為預設值 **Mix** 以外的選項"

msgid "Enabling **Refraction**, **Proximity Fade**, or **Distance Fade**."
msgstr "啟用 **Refraction**、**Proximity Fade** 或 **Distance Fade**。"

msgid ""
"Comparison between alpha blending (left) and alpha scissor (right) "
"transparency:"
msgstr "Alpha 混合（左）和 Alpha Scissor（右）透明度效果比較："

msgid ""
"Alpha-blended transparency has several :ref:`limitations "
"<doc_3d_rendering_limitations_transparency_sorting>`:"
msgstr ""
"Alpha 混合透明有幾個 :ref:`限制 "
"<doc_3d_rendering_limitations_transparency_sorting>`："

msgid ""
"Alpha-blended materials are significantly slower to render, especially if "
"they overlap."
msgstr "Alpha 混合材質算繪速度顯著較慢，特別是多層重疊時。"

msgid ""
"Alpha-blended materials may exhibit sorting issues when transparent surfaces "
"overlap each other. This means that surfaces may render in the incorrect "
"order, with surfaces in the back appearing to be in front of those which are "
"actually closer to the camera."
msgstr ""
"Alpha 混合材質在多個透明表面重疊時可能出現排序錯誤，也就是遠方表面會顯示在近"
"處表面上方。"

msgid ""
"Alpha-blended materials don't cast shadows, although they can receive "
"shadows."
msgstr "Alpha 混合材質無法投射陰影，但可以接收陰影。"

msgid ""
"Alpha-blended materials don't appear in any reflections (other than "
"reflection probes)."
msgstr "Alpha 混合材質不會出現在任何反射效果中（反射探針除外）。"

msgid ""
"Screen-space reflections and sharp SDFGI reflections don't appear on alpha-"
"blended materials. When SDFGI is enabled, rough reflections are used as a "
"fallback regardless of material roughness."
msgstr ""
"螢幕空間反射與銳利的 SDFGI 反射不會作用在 Alpha 混合材質上。若啟用 SDFGI，則"
"無論材質粗糙度為何，皆將使用模糊反射作為備援。"

msgid ""
"Before using the **Alpha** transparency mode, always consider whether "
"another transparency mode is more suited for your needs."
msgstr ""
"在採用 **Alpha** 透明模式之前，請評估是否有更適合你需求的其他透明模式。"

msgid "Alpha Antialiasing"
msgstr "Alpha 抗鋸齒"

msgid ""
"This property is only visible when the transparency mode is **Alpha "
"Scissor** or **Alpha Hash**."
msgstr "此屬性僅在透明度模式為 **Alpha Scissor** 或 **Alpha Hash** 時可見。"

msgid ""
"While alpha scissor and alpha hash materials are faster to render than alpha-"
"blended materials, they exhibit hard edges between opaque and transparent "
"regions. While it's possible to use post-processing-based :ref:`antialiasing "
"techniques <doc_3d_antialiasing>` such as FXAA and TAA, this is not always "
"desired as these techniques tend to make the final result look blurrier or "
"exhibit ghosting artifacts."
msgstr ""
"Alpha Scissor 與 Alpha Hash 材質雖然比 Alpha 混合算繪更快，但在不透明與透明區"
"域之間會有明顯硬邊。雖然可以用如 FXAA、TAA 這類後處理型 :ref:`抗鋸齒技術 "
"<doc_3d_antialiasing>`，但通常會使畫面變模糊或產生重影。"

msgid "There are 3 alpha antialiasing modes available:"
msgstr "有三種 Alpha 抗鋸齒模式可用："

msgid ""
"**Disabled:** No alpha antialiasing. Edges of transparent materials will "
"appear aliased unless a post-processing-based antialiasing solution is used."
msgstr ""
"**Disabled：** 不使用 Alpha 抗鋸齒。除非有額外抗鋸齒後處理，否則透明材質邊緣"
"會有鋸齒。"

msgid ""
"**Alpha Edge Blend:** Results in a smooth transition between opaque and "
"transparent areas. Also known as \"alpha to coverage\"."
msgstr ""
"**Alpha Edge Blend：** 讓透明與不透明區域之間可平滑過渡，也稱「Alpha to "
"Coverage」。"

msgid ""
"**Alpha Edge Clip:** Results in a sharp, but still antialiased transition "
"between opaque and transparent areas. Also known as \"alpha to coverage + "
"alpha to one\"."
msgstr ""
"**Alpha Edge Clip：** 讓透明與不透明區域邊緣保有銳利感，但具備抗鋸齒。也稱"
"「Alpha to Coverage + Alpha to One」。"

msgid ""
"When the alpha antialiasing mode is set to **Alpha Edge Blend** or **Alpha "
"Edge Clip**, a new **Alpha Antialiasing Edge** property becomes visible "
"below in the inspector. This property controls the threshold below which "
"pixels should be made transparent. While you've already defined an alpha "
"scissor threshold (when using **Alpha Scissor** only), this additional "
"threshold is used to smoothly transition between opaque and transparent "
"pixels. **Alpha Antialiasing Edge** must *always* be set to a value that is "
"strictly below the alpha scissor threshold. The default of ``0.3`` is a "
"sensible value with an alpha scissor of threshold of ``0.5``, but remember "
"to adjust this alpha antialiasing edge when modifying the alpha scissor "
"threshold."
msgstr ""
"當 Alpha 抗鋸齒模式設為 **Alpha Edge Blend** 或 **Alpha Edge Clip** 時，會多"
"出 **Alpha Antialiasing Edge** 屬性。這個屬性決定哪些像素會變透明。雖然在 "
"**Alpha Scissor** 模式下你已設有「剪裁閾值」，但這個新閾值額外提供一段平滑過"
"渡區段。**Alpha Antialiasing Edge** 必須*永遠*比 Alpha Scissor 閾值低，預設 "
"``0.3`` 配合剪裁閾值 ``0.5`` 是常用組合，但兩者數值有調整時請務必同步調整。"

msgid ""
"If you find the antialiasing effect not effective enough, try increasing "
"**Alpha Antialiasing Edge** while making sure it's below **Alpha Scissor "
"Threshold** (if the material uses alpha scissor). On the other hand, if you "
"notice the texture's appearance visibly changing as the camera moves closer "
"to the material, try decreasing **Alpha Antialiasing Edge**."
msgstr ""
"若你覺得抗鋸齒效果不明顯，可以提高 **Alpha Antialiasing Edge** 數值（但需小"
"於 **Alpha Scissor Threshold**，若使用 Alpha Scissor）。反之，若發現攝影機靠"
"近時紋理外觀變化明顯，則可降低 **Alpha Antialiasing Edge** 的數值。"

msgid ""
"For best results, MSAA 3D should be set to at least 2× in the Project "
"Settings when using alpha antialiasing. This is because this feature relies "
"on alpha to coverage, which is a feature provided by MSAA."
msgstr ""
"若要獲得最佳效果，專案設定中的 MSAA 3D 請設至少 2×，因 Alpha 抗鋸齒功能依賴"
"於 MSAA 提供的 Alpha to Coverage。"

msgid ""
"Without MSAA, a fixed dithering pattern is applied on the material's edges, "
"which isn't very effective at smoothing out edges (although it can still "
"help a little)."
msgstr ""
"若未啟用 MSAA，則僅會在材質邊緣套用固定抖動樣式，這對平滑邊緣效果有限（但多少"
"還是有點幫助）。"

msgid "Blend Mode"
msgstr "混合模式"

msgid ""
"Controls the blend mode for the material. Keep in mind that any mode other "
"than *Mix* forces the object to go through the transparent pipeline."
msgstr ""
"控制材質的混合模式。請記住，*Mix* 以外的任何模式都會強制物件通過透明管道。"

msgid ""
"**Mix:** Default blend mode, alpha controls how much the object is visible."
msgstr "**Mix：** （混合）預設混合模式，Alpha 控制物件可見的程度。"

msgid ""
"**Add:** The final color of the object is added to the color of the screen, "
"nice for flares or some fire-like effects."
msgstr ""
"**Add：** （新增）對象會進行新增性的混合，非常適合耀斑或類似火焰的效果。"

msgid ""
"**Sub:** The final color of the object is subtracted from the color of the "
"screen."
msgstr "**Sub：** 從螢幕顏色中減去物件的最終顏色。"

msgid ""
"**Mul:** The final color of the object is multiplied with the color of the "
"screen."
msgstr "**Front:** 當不可見時, 物體的正面被剔除."

msgid "Cull Mode"
msgstr "剔除模式"

msgid ""
"Determines which side of the object is not drawn when backfaces are rendered:"
msgstr "確定算繪背面時不繪製對象的哪一側:"

msgid "**Back:** The back of the object is culled when not visible (default)."
msgstr "**Back:** 當不可見時, 物件的背面被剔除(預設)."

msgid "**Front:** The front of the object is culled when not visible."
msgstr "**Front:** 當不可見時, 物體的正面被剔除."

msgid ""
"**Disabled:** Used for objects that are double-sided (no culling is "
"performed)."
msgstr "**Disabled:** 用於雙面對象(不進行剔除)."

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""
"預設情況下，Blender 在材質上禁用背面剔除，匯出材質時配對其在 Blender 中的算繪"
"方式。這意味著 Godot 中的材質會將其剔除模式設定為 **Disabled**。這會降低性"
"能，因為背面將被算繪，即使它們不可見。要解決此問題，請在 Blender 的材質分頁中"
"啟用 **Backface Culling** ，然後再次將場景匯出為 glTF。"

msgid "Depth Draw Mode"
msgstr "深度繪製模式"

msgid "Specifies when depth rendering must take place."
msgstr "指定何時必須進行深度算繪."

msgid "**Opaque Only (default):** Depth is only drawn for opaque objects."
msgstr "**Opaque Only(僅限不透明, 預設):** 僅為不透明對象繪製深度."

msgid ""
"**Always:** Depth draw is drawn for both opaque and transparent objects."
msgstr "**Always(始終):** 為不透明和透明對象深度繪製."

msgid ""
"**Never:** No depth draw takes place (do not confuse this with the No Depth "
"Test option below)."
msgstr ""
"**Never(從不):** 不進行深度抽取(不要將其與上面的No Depth Test(無深度測試)選項"
"混淆)."

msgid ""
"**Depth Pre-Pass:** For transparent objects, an opaque pass is made first "
"with the opaque parts, then transparency is drawn above. Use this option "
"with transparent grass or tree foliage."
msgstr ""
"**Depth Pre-Pass(深度預通過):** 對於透明物體, 首先使用不透明部分進行不透明的"
"通過, 然後在上方繪製透明度. 將此選項與透明草或樹葉一起使用."

msgid "No Depth Test"
msgstr "無深度測試"

msgid ""
"In order for close objects to appear over far away objects, depth testing is "
"performed. Disabling it has the result of objects appearing over (or under) "
"everything else."
msgstr ""
"為了使近距離物體出現在遠處的物體上, 進行深度測試. 禁用它會導致物件出現在其他"
"所有內容之上(或之下)."

msgid ""
"Disabling this makes the most sense for drawing indicators in world space, "
"and works very well with the *Render Priority* property of Material (see the "
"bottom of this page)."
msgstr ""
"禁用此選項對於在世界空間中繪製指標最有意義, 並且與Material的 *Render "
"Priority* 屬性一起效果很好(請參閱本頁底部)."

msgid "Shading"
msgstr "著色"

msgid "Shading mode"
msgstr "著色器"

msgid ""
"Materials support three shading modes: **Per-Pixel**, **Per-Vertex**, and "
"**Unshaded**."
msgstr ""
"材質支援三種著色模式： **逐像素** （Per-Pixel）、 **逐頂點** （Per-Vertex）以"
"及 **無光照** （Unshaded）。"

msgid "Three spheres showing the Per-Pixel, Per-Vertex, and Unshaded modes."
msgstr "下圖顯示逐像素、逐頂點、無光照三種模式的球體效果比較。"

msgid ""
"The **Per-Pixel** shading mode calculates lighting for each pixel, and is a "
"good fit for most use cases. However, in some cases you may want to increase "
"performance by using another shading mode."
msgstr ""
"**逐像素** 模式會對每個像素計算光照，適用於大多數情境。但若有效能考量，也可選"
"用其他模式。"

msgid ""
"The **Per-Vertex** shading mode, often called \"vertex shading\" or \"vertex "
"lighting\", instead calculates lighting once for each vertex, and "
"interpolates the result between each pixel."
msgstr ""
"**逐頂點** （Per-Vertex）著色又稱「頂點光照」，只對每個頂點做一次光照計算，再"
"在像素間內插。"

msgid ""
"On low-end or mobile devices, using per-vertex lighting can considerably "
"increase rendering performance. When rendering several layers of "
"transparency, such as when using particle systems, using per-vertex shading "
"can improve performance, especially when the camera is close to particles."
msgstr ""
"在低階或行動裝置上，使用逐頂點光照能大幅提升效能。多層透明物件（如粒子系統）"
"算繪時，採用逐頂點著色可提升效能，尤其攝影機靠近粒子時更明顯。"

msgid "You can also use per-vertex lighting to achieve a retro look."
msgstr "你也可以用逐頂點光照來營造懷舊低多邊形風格。"

msgid "Two cubes with a brick texture, one shaded and one unshaded."
msgstr "下圖顯示兩個磚紋方塊，一個有光照，一個完全無光照。"

msgid "Texture from `AmbientCG <https://ambientcg.com/view?id=Bricks051>`__"
msgstr "紋理來自 `AmbientCG <https://ambientcg.com/view?id=Bricks051>`__"

msgid ""
"The **Unshaded** shading mode does not calculate lighting at all. Instead, "
"the **Albedo** color is output directly. Lights will not affect the material "
"at all, and unshaded materials will tend to appear considerably brighter "
"than shaded materials."
msgstr ""
"**無光照**（Unshaded）模式完全不計算光照，僅直接輸出 **反照率** 顏色。不會受"
"場景燈光影響，且通常會比有光照的材質亮許多。"

msgid ""
"Rendering unshaded is useful for some specific visual effects. If maximum "
"performance is needed, it can also be used for particles, or low-end or "
"mobile devices."
msgstr ""
"無光照算繪適合某些特殊視覺效果；如需極致效能，也很適合用於粒子系統或低階／行"
"動裝置。"

msgid "Diffuse Mode"
msgstr "漫反射模式"

msgid ""
"Specifies the algorithm used by diffuse scattering of light when hitting the "
"object. The default is **Burley**. Other modes are also available:"
msgstr ""
"指定當光線打到物件時，計算漫反射用的演算法。預設為 **Burley**，也可選用其他模"
"式："

msgid ""
"**Burley:** Default mode, the original Disney Principled PBS diffuse "
"algorithm."
msgstr "**Burley：** 預設模式，原始的 Disney Principled PBS 漫反射演算法。"

msgid "**Lambert:** Is not affected by roughness."
msgstr "**Lambert：** 不受粗糙度的影響。"

msgid ""
"**Lambert Wrap:** Extends Lambert to cover more than 90 degrees when "
"roughness increases. Works great for hair and simulating cheap subsurface "
"scattering. This implementation is energy conserving."
msgstr ""
"**Lambert Wrap：** 當粗糙度增加時，將 Lambert 拓展至覆蓋 90 度以上。適用於頭"
"髮和模擬廉價的次表面散射。這種實作是節能的。"

msgid ""
"**Toon:** Provides a hard cut for lighting, with smoothing affected by "
"roughness. It is recommended you disable sky contribution from your "
"environment's ambient light settings or disable ambient light in the "
"StandardMaterial3D to achieve a better effect."
msgstr ""
"**Toon:** 為照明提供硬邊緣, 光滑度受粗糙度的影響. 建議您從環境的環境光設定中"
"禁用sky contribution(天空補償), 或禁用空間材質中的環境光以獲得更好的效果."

msgid "Specular Mode"
msgstr "鏡面反射模式"

msgid ""
"Specifies how the specular blob will be rendered. The specular blob "
"represents the shape of a light source reflected in the object."
msgstr "指定鏡面反射斑點的呈現方式。鏡面反射斑點是在對象中反射的光源的形狀。"

msgid "**SchlickGGX:** The most common blob used by PBR 3D engines nowadays."
msgstr "** ShlickGGX:** 現在PBR 3D引擎使用的最常見的blob."

msgid ""
"**Toon:** Creates a toon blob, which changes size depending on roughness."
msgstr "**Toon:** 建立一個toon blob, 根據粗糙度改變大小."

msgid "**Disabled:** Sometimes the blob gets in the way. Begone!"
msgstr "**禁用:** 有時候blob很煩人. 消失吧！"

msgid "Disable Ambient Light"
msgstr "停用環境光"

msgid ""
"Makes the object not receive any kind of ambient lighting that would "
"otherwise light it."
msgstr "使物體不會接收任何會照亮它的環境光。"

msgid "Disable Fog"
msgstr "停用霧"

msgid ""
"Makes the object unaffected by depth-based or volumetric fog. This is useful "
"for particles or other additively blended materials that would otherwise "
"show the shape of the mesh (even in places where it would be invisible "
"without the fog)."
msgstr ""
"使物體不受基於深度或體積霧的影響。這對於粒子或其他新增混合的材質很有用，否則"
"它們會顯示網格的形狀（即使在沒有霧的情況下看不見的地方）。"

msgid "Vertex Color"
msgstr "頂點顏色"

msgid ""
"This setting allows choosing what is done by default to vertex colors that "
"come from your 3D modeling application. By default, they are ignored."
msgstr ""
"這個設定允許選擇預設要如何處理來自您的 3D 建模應用程式的頂點顏色。預設情況"
"下，它們會被忽略。"

msgid "Use as Albedo"
msgstr "用作反照率"

msgid "Choosing this option means vertex color is used as albedo color."
msgstr "選擇此選項意味著用頂點顏色作為反射顏色."

msgid "Is sRGB"
msgstr "是 sRGB"

msgid ""
"Most 3D modeling software will likely export vertex colors as sRGB, so "
"toggling this option on will help them look correct."
msgstr ""
"大多數3D DCC可能會將頂點顏色匯出為sRGB, 因此切換此選項將有助於它們看起來正確."

msgid "Albedo"
msgstr "反照率"

msgid ""
"*Albedo* is the base color for the material, on which all the other settings "
"operate. When set to *Unshaded*, this is the only color that is visible. In "
"previous versions of Godot, this channel was named *Diffuse*. The change of "
"name mainly happened because, in PBR (Physically Based Rendering), this "
"color affects many more calculations than just the diffuse lighting path."
msgstr ""
"*Albedo* 是材質的基色, 所有其他設定都在其上運作. 設定為 *Unshaded* 時, 這是唯"
"一可見的顏色. 在以前版本的Godot中, 這個通道被命名為 *Diffuse* . 名稱的改變主"
"要是因為在PBR(Physically Based Rendering, 基於物理算繪)中, 這種顏色影響的計算"
"遠不止漫射光照路徑."

msgid "Albedo color and texture can be used together as they are multiplied."
msgstr "反照率顏色（Albedo Color）可以和紋理一起使用，因為它們會被相乘。"

msgid ""
"*Alpha channel* in albedo color and texture is also used for the object "
"transparency. If you use a color or texture with *alpha channel*, make sure "
"to either enable transparency or *alpha scissoring* for it to work."
msgstr ""
"反照率顏色和紋理的 *Alpha通道* 也用於物件透明度. 如果你使用帶 *alpha通道* 的"
"顏色或紋理, 請確保啟用透明度或 *alpha scissoring* 以使其正常工作."

msgid "Metallic"
msgstr "金屬度"

msgid ""
"Godot uses a metallic model over competing models due to its simplicity. "
"This parameter defines how reflective the material is. The more reflective, "
"the less diffuse/ambient light affects the material and the more light is "
"reflected. This model is called \"energy-conserving\"."
msgstr ""
"由於其簡單性,Godot使用金屬模型而不是別的模型. 此參數定義材質的反射程度. 反射"
"越多, 漫射/環境光的影響越小, 反射的光越多. 這種模型被稱為 \"能量守恆(energy-"
"conserving)\"."

msgid ""
"The *Specular* parameter is a general amount for the reflectivity (unlike "
"*Metallic*, this is not energy-conserving, so leave it at ``0.5`` and don't "
"touch it unless you need to)."
msgstr ""
"*Specular* 參數是反射率的一般數量（與 *Metallic* 不同，能量不守恆，因此請將其"
"保留為 ``0.5`` 並且除非你需要，否則不要碰它）。"

msgid ""
"The minimum internal reflectivity is ``0.04``, so it's impossible to make a "
"material completely unreflective, just like in real life."
msgstr ""
"最小的內部反射率是 ``0.04``，因此不可能使材質完全不產生反射，就像在現實生活中"
"一樣。"

msgid "Roughness"
msgstr "粗糙度"

msgid ""
"*Roughness* affects the way reflection happens. A value of ``0`` makes it a "
"perfect mirror while a value of ``1`` completely blurs the reflection "
"(simulating natural microsurfacing). Most common types of materials can be "
"achieved with the right combination of *Metallic* and *Roughness*."
msgstr ""
"*粗糙度* 會影響反射的發生方式. 值 ``0`` 使其成為完美的鏡子, 而 ``1`` 的值完全"
"模糊了反射(模擬自然微表面). 最常見的材質型別可以通過 *Metallic* 和 "
"*Roughness* 的正確組合來實作."

msgid "Emission"
msgstr "自發光"

msgid ""
"*Emission* specifies how much light is emitted by the material (keep in mind "
"this does not include light surrounding geometry unless :ref:`VoxelGI "
"<doc_using_voxel_gi>` or :ref:`SDFGI <doc_using_sdfgi>` are used). This "
"value is added to the resulting final image and is not affected by other "
"lighting in the scene."
msgstr ""
"*自發光* 指定材質會發出多少光 (請注意，這不包含周圍幾何體的燈光，除非使"
"用 :ref:`VoxelGI <doc_using_voxel_gi>` 或 :ref:`SDFGI <doc_using_sdfgi>`)。這"
"個值會被加到最終結果影像中，且不受場景中其他燈光影響。"

msgid "Normal map"
msgstr "法線貼圖"

msgid ""
"Normal mapping allows you to set a texture that represents finer shape "
"detail. This does not modify geometry, only the incident angle for light. In "
"Godot, only the red and green channels of normal maps are used for better "
"compression and wider compatibility."
msgstr ""
"法線貼圖允許你設定一個代表更精細形狀細節的紋理, 這不會修改幾何體, 只會修改光"
"的入射角. 在Godot中, 為了更好的壓縮和更廣泛的相容性, 只使用了法線貼圖的紅色和"
"綠色通道."

msgid ""
"Godot requires the normal map to use the X+, Y+ and Z+ coordinates, this is "
"known as OpenGL style. If you've imported a material made to be used with "
"another engine it may be DirectX style, in which case the normal map needs "
"to be converted so its Y axis is flipped."
msgstr ""
"Godot 中的法線對應必須使用 X+, Y- 與 Z+ 座標。換句話說，若匯入使用於其他引擎"
"的素材，則必須將其 Y 軸翻轉過來，否則，法線對應方向的 Y 軸可能會顯示為相反。"

msgid ""
"More information about normal maps (including a coordinate order table for "
"popular engines) can be found `here <http://wiki.polycount.com/wiki/"
"Normal_Map_Technical_Details>`__."
msgstr ""
"有關更多法線對應的資訊 (包含各種常見引擎的座標順序表)，請參考 `此處 (英文) "
"<http://wiki.polycount.com/wiki/Normal_Map_Technical_Details>`__ 。"

msgid "Rim"
msgstr "邊緣"

msgid ""
"Some fabrics have small micro-fur that causes light to scatter around it. "
"Godot emulates this with the *Rim* parameter. Unlike other rim lighting "
"implementations, which just use the emission channel, this one actually "
"takes light into account (no light means no rim). This makes the effect "
"considerably more believable."
msgstr ""
"一些織物具有小的微毛, 導致光在其周圍散射. Godot使用 *Rim* 參數模擬它. 與僅使"
"用發射通道的其他邊緣照明實施方式不同, 這實際上考慮了光(沒有光意味著沒有邊"
"緣). 這使得效果顯著地更加可信."

msgid ""
"Rim size depends on roughness, and there is a special parameter to specify "
"how it must be colored. If *Tint* is ``0``, the color of the light is used "
"for the rim. If *Tint* is ``1``, then the albedo of the material is used. "
"Using intermediate values generally works best."
msgstr ""
"邊緣大小取決於粗糙度, 並且有一個特殊參數來指定它必須如何著色. 如果 *Tint* 為 "
"``0``, 則燈光的顏色用於邊緣. 如果 *Tint* 是 ``1``, 則使用材質的反照率. 使用中"
"間的值通常效果最佳."

msgid "Clearcoat"
msgstr "清漆"

msgid ""
"The *Clearcoat* parameter is used to add a secondary pass of transparent "
"coat to the material. This is common in car paint and toys. In practice, "
"it's a smaller specular blob added on top of the existing material."
msgstr ""
"*Clearcoat* 參數用於為材質新增輔助的透明塗層。這在汽車油漆和玩具中很常見。在"
"實踐中，它是在現有材質之上新增的較小的鏡面反射斑點。"

msgid "Anisotropy"
msgstr "各向異性"

msgid ""
"This changes the shape of the specular blob and aligns it to tangent space. "
"Anisotropy is commonly used with hair, or to make materials such as brushed "
"aluminum more realistic. It works especially well when combined with "
"flowmaps."
msgstr ""
"這會更改鏡面反射斑點的形狀並將其與切線空間對齊。各向異性通常與頭髮一起使用，"
"或使諸如拉絲鋁之類的材質更加逼真。與流向貼圖結合使用時效果特別好。"

msgid "Ambient Occlusion"
msgstr "環境光遮蔽"

msgid ""
"It is possible to specify a baked ambient occlusion map. This map affects "
"how much ambient light reaches each surface of the object (it does not "
"affect direct light by default). While it is possible to use Screen-Space "
"Ambient Occlusion (SSAO) to generate ambient occlusion, nothing beats the "
"quality of a well-baked AO map. It is recommended to bake ambient occlusion "
"whenever possible."
msgstr ""
"可以指定烘焙的環境遮擋貼圖. 此貼圖會影響有多少環境光到達物體每個表面(預設情況"
"下它不會影響直接光). 雖然可以使用螢幕空間環境遮擋(Screen-Space Ambient "
"Occlusion, SSAO)來生成環境遮擋, 但沒有什麼能比良好烘焙的AO貼圖的品質更好. 建"
"議盡可能烘焙環境遮擋."

msgid "Height"
msgstr "光照"

msgid ""
"Setting a height map on a material produces a ray-marched search to emulate "
"the proper displacement of cavities along the view direction. This only "
"creates an illusion of depth, and does not add real geometry — for a height "
"map shape used for physics collision (such as terrain), "
"see :ref:`class_HeightMapShape3D`. It may not work for complex objects, but "
"it produces a realistic depth effect for textures. For best results, "
"*Height* should be used together with normal mapping."
msgstr ""
"在材質上設定高度圖會產生光線步進搜尋，以模擬沿著視角方向的凹陷適當位移。這僅"
"會創造深度的錯覺，且不會新增實際的幾何體——至於用於物理碰撞的高度圖形狀 (例如"
"地形)，請參閱 :ref:`class_HeightMapShape3D`。它可能不適用於複雜的物件，但它會"
"為貼圖產生逼真的深度效果。為了達到最佳效果，*高度* 應該與法線貼圖一起使用。"

msgid "Subsurface Scattering"
msgstr "次表面散射"

msgid ""
"*This is only available in the Forward+ renderer, not the Mobile or "
"Compatibility renderers.*"
msgstr ""
"*這僅適用於 Forward+ 算繪器，不適用於 Mobile 或 Compatibility 算繪器。*"

msgid ""
"This effect emulates light that penetrates an object's surface, is "
"scattered, and then comes out. It is useful to create realistic skin, "
"marble, colored liquids, etc."
msgstr ""
"此效果類比穿透物體表面, 散射然後散出的光. 創造逼真的皮膚, 大理石, 有色液體等"
"有用."

msgid "Back Lighting"
msgstr "背部照明"

msgid ""
"This controls how much light from the lit side (visible to light) is "
"transferred to the dark side (opposite from the light). This works well for "
"thin objects such as plant leaves, grass, human ears, etc."
msgstr ""
"這可以控制有多少光從被點亮的一側(正對燈光)傳輸到暗側(背對燈光). 這適用於植物"
"葉子, 草, 人耳等薄物體."

msgid "Refraction"
msgstr "折射"

msgid ""
"When refraction is enabled, Godot attempts to fetch information from behind "
"the object being rendered. This allows distorting the transparency in a way "
"similar to refraction in real life."
msgstr ""
"啟用折射時，Godot 會嘗試從正在算繪的物件後方獲取資訊。這能以類似現實生活中折"
"射的方式來扭曲透明度。"

msgid ""
"Remember to use a transparent albedo texture (or reduce the albedo color's "
"alpha channel) to make refraction visible, as refraction relies on "
"transparency to have a visible effect."
msgstr ""
"請記住使用透明反照率紋理（或減少反照率顏色的 Alpha 通道）以使折射可見，因為折"
"射依賴透明度來產生可見效果。"

msgid ""
"Refraction also takes the material roughness into account. Higher roughness "
"values will make the objects behind the refraction look blurrier, which "
"simulates real life behavior. If you can't see behind the object when "
"refraction is enabled and albedo transparency is reduced, decrease the "
"material's **Roughness** value."
msgstr ""
"折射也會將材質粗糙度考慮在內。較高的粗糙度值將會讓折射後方的物件看起來更模"
"糊，這模擬了真實世界的行為。如果您在啟用折射且反照率透明度降低時無法看到物件"
"後方，請降低材質的 **粗糙度** 值。"

msgid ""
"A normal map can optionally be specified in the **Refraction Texture** "
"property to allow distorting the refraction's direction on a per-pixel basis."
msgstr ""
"可以選擇在 **折射紋理** 屬性中指定法線貼圖，以允許在每個像素的基礎上扭曲折射"
"方向。"

msgid ""
"Refraction is implemented as a screen-space effect and forces the material "
"to be transparent. This makes the effect relatively fast, but this results "
"in some limitations:"
msgstr ""
"折射作為螢幕空間效果實作，並強製材質透明。這使得效果相對較快，但這會導致一些"
"限制："

msgid ""
":ref:`Transparency sorting "
"<doc_3d_rendering_limitations_transparency_sorting>` issues may occur."
msgstr ""
":ref:`透明度排序 <doc_3d_rendering_limitations_transparency_sorting>` 可能會"
"出現問題。"

msgid ""
"The refractive material cannot refract onto itself, or onto other "
"transparent materials. A refractive material behind another transparent "
"material will be invisible."
msgstr ""
"折射材料不能折射到自身或其他透明材料。另一種透明材料後面的折射材料將是看不見"
"的。"

msgid ""
"Off-screen objects cannot appear in the refraction. This is most noticeable "
"with high refraction strength values."
msgstr "螢幕外的物體不能出現在折射中。這在高折射強度值時最為明顯。"

msgid ""
"Opaque materials in front of the refractive material will appear to have "
"\"refracted\" edges, even though they shouldn't."
msgstr "折射材料前面的不透明材料將看起來具有“折射”邊緣，即使它們不應該如此。"

msgid "Detail"
msgstr "細節"

msgid ""
"Godot allows using secondary albedo and normal maps to generate a detail "
"texture, which can be blended in many ways. By combining this with secondary "
"UV or triplanar modes, many interesting textures can be achieved."
msgstr ""
"Godot允許使用輔助反射和法線貼圖生成細節紋理, 可以通過多種方式進行混合. 通過將"
"其與二級UV或三平面模式相結合, 可以實作許多有趣的紋理."

msgid "There are several settings that control how detail is used."
msgstr "有幾種設定可以控制細節的使用方式."

msgid ""
"Mask: The detail mask is a black and white image used to control where the "
"blending takes place on a texture. White is for the detail textures, Black "
"is for the regular material textures, different shades of gray are for "
"partial blending of the material textures and detail textures."
msgstr ""
"Mask(遮罩): 細節遮罩是一個黑白圖像, 用來控制紋理的混合位置. 白色為細節紋理, "
"黑色為常規材質紋理, 不同深淺的灰色用於材質紋理和細節紋理的部分混合."

msgid ""
"Blend Mode: These four modes control how the textures are blended together."
msgstr "混合模式: 有四種模式控制紋理的混合方式."

msgid ""
"Mix: Combines pixel values of both textures. At black, only show the "
"material texture, at white, only show the detail texture. Values of gray "
"create a smooth blend between the two."
msgstr ""
"融合: 合併兩個紋理的像素值. 黑色時, 僅顯示材質紋理；白色時, 僅顯示細節紋理. "
"灰色的值在兩者之間建立一個平滑的混合."

msgid ""
"Add: Adds pixel values of one Texture with the other. Unlike mix mode both "
"textures are completely mixed at white parts of a mask and not at gray "
"parts. The original texture is mostly unchanged at black"
msgstr ""
"相加: 將一個紋理與另一個紋理的像素值相加. 與融合模式不同的是, 兩個紋理在蒙板"
"的白色部分而不是灰色部分完全混合. 原始紋理在黑色部分基本沒有變化"

msgid ""
"Sub: Subtracts pixel values of one texture with the other. The second "
"texture is completely subtracted at white parts of a mask with only a little "
"subtraction in black parts, gray parts being different levels of subtraction "
"based on the exact texture."
msgstr ""
"相減: 將一個紋理的像素值與另一個紋理的像素值相減. 第二種紋理在蒙版的白色部分"
"被完全減去, 在黑色部分只被減去一點, 灰色部分根據具體實際紋理減去不同的程度."

msgid ""
"Mul: Multiplies the RGB channel numbers for each pixel from the top texture "
"with the values for the corresponding pixel from the bottom texture."
msgstr "相乘: 將上方紋理中每個像素的 RGB 通道數與下方紋理中相應像素的值相乘."

msgid ""
"Albedo: This is where you put an albedo texture you want to blend. If "
"nothing is in this slot it will be interpreted as white by default."
msgstr ""
"Albedo: 在此處放置要混合的反射紋理. 如果此插槽中沒有任何內容, 則預設情況下將"
"其解釋為純白."

msgid ""
"Normal: This is where you put a normal texture you want to blend. If nothing "
"is in this slot it will be interpreted as a flat normal map. This can still "
"be used even if the material does not have normal map enabled."
msgstr ""
"法線: 在此處放置需要混合的法線紋理. 如果這個槽中沒有任何東西, 它將被解釋為一"
"個平坦的法線貼圖. 即使材質未啟用法線貼圖也可以使用這個槽."

msgid "UV1 and UV2"
msgstr "UV1和UV2"

msgid ""
"Godot supports two UV channels per material. Secondary UV is often useful "
"for ambient occlusion or emission (baked light). UVs can be scaled and "
"offset, which is useful when using repeating textures."
msgstr ""
"Godot每種材質支援兩個UV通道. 二級UV通常可用於環境遮擋或發射(烘焙的光照). UV可"
"以縮放和偏移, 這在使用重複紋理時很有用."

msgid "Triplanar Mapping"
msgstr "Triplanar Mapping(三平面對應)"

msgid ""
"Triplanar mapping is supported for both UV1 and UV2. This is an alternative "
"way to obtain texture coordinates, sometimes called \"Autotexture\". "
"Textures are sampled in X, Y and Z and blended by the normal. Triplanar "
"mapping can be performed in either world space or object space."
msgstr ""
"UV1和UV2都支援三平面對應. 這是獲得紋理座標的另一種方法, 有時稱為 \"自動紋理"
"\". 紋理在X,Y和Z中取樣, 並由法線混合. 可以在世界空間或物件空間中執行三平面對"
"應."

msgid ""
"In the image below, you can see how all primitives share the same material "
"with world triplanar, so the brick texture continues smoothly between them."
msgstr ""
"在下圖中，你可以看到所有像素如何與世界三平面共用相同的材質，因此磚紋理在它們"
"之間平滑地繼續。"

msgid "World Triplanar"
msgstr "世界三平面"

msgid ""
"When using triplanar mapping, it is computed in object local space. This "
"option makes it use world space instead."
msgstr ""
"使用三平面對應時(見下文, 在UV1和UV2設定中), 在物件局部空間中計算三平面. 此選"
"項使triplanar在世界空間中工作."

msgid "Sampling"
msgstr "重新取樣"

msgid "Filter"
msgstr "篩選"

msgid ""
"The filtering method for the textures used by the material. See :ref:`this "
"page<class_BaseMaterial3D_property_texture_filter>` for a full list of "
"options and their description."
msgstr ""
"用於材質所使用的貼圖的過濾方法。請參閱 :ref:`這個頁面"
"<class_BaseMaterial3D_property_texture_filter>` 以獲取所有選項及其說明的完整"
"列表。"

msgid "Repeat"
msgstr "重覆"

msgid ""
"if the textures used by the material repeat, and how they repeat. "
"See :ref:`this page<class_BaseMaterial3D_property_texture_repeat>` for a "
"full list of options and their description."
msgstr ""
"如果材質使用的貼圖是否重複，以及它們如何重複。請參閱 :ref:`本頁面"
"<class_BaseMaterial3D_property_texture_repeat>` 以取得完整的選項列表及其描"
"述。"

msgid "Shadows"
msgstr "陰影"

msgid "Do Not Receive Shadows"
msgstr "Do Not Receive Shadows(不接受陰影)"

msgid ""
"Makes the object not receive any kind of shadow that would otherwise be cast "
"onto it."
msgstr "使物件不會接收任何可能會被投射到其上的陰影."

msgid "Use Shadow to Opacity"
msgstr "Use Shadow to Opacity(使用陰影轉為不透明度)"

msgid ""
"Lighting modifies the alpha so shadowed areas are opaque and non-shadowed "
"areas are transparent. Useful for overlaying shadows onto a camera feed in "
"AR."
msgstr ""
"光照會調整 Alpha，使陰影區域不透明、無陰影區域透明。適合用於 AR 場景將陰影融"
"合在相機畫面上。"

msgid "Billboard"
msgstr "佈告欄"

msgid "Billboard Mode"
msgstr "Billboard Mode(看板模式)"

msgid ""
"Enables billboard mode for drawing materials. This controls how the object "
"faces the camera:"
msgstr "為繪圖材質啟用看板模式. 這會控制物體面向攝像頭的方式:"

msgid "**Disabled:** Billboard mode is disabled."
msgstr "**Disabled:** 禁用看板模式."

msgid ""
"**Enabled:** Billboard mode is enabled. The object's -Z axis will always "
"face the camera's viewing plane."
msgstr "**啟用：** 公告牌模式已啟用。物件的 -Z 軸將總是面向攝影機的視平面。"

msgid ""
"**Y-Billboard:** The object's X axis will always be aligned with the "
"camera's viewing plane."
msgstr "**Y 軸布告板：** 物件的 X 軸將總是會對齊攝影機的視角平面。"

msgid ""
"**Particle Billboard:** Most suited for particle systems, because it allows "
"specifying :ref:`flipbook animation "
"<doc_process_material_properties_animation>`."
msgstr ""
"**粒子公告牌：** 最適合用於粒子系統，因為它允許指定 :ref:`翻頁動畫 "
"<doc_process_material_properties_animation>`。"

msgid ""
"The **Particles Anim** section is only visible when the billboard mode is "
"**Particle Billboard**."
msgstr "僅在公告牌模式為 **粒子公告牌** 時， **粒子動畫** 區段才可見。"

msgid "Billboard Keep Scale"
msgstr "Billboard Keep Scale(看板保持縮放)"

msgid "Enables scaling a mesh in billboard mode."
msgstr "啟用在看板模式下縮放網格."

msgid "Grow"
msgstr "生長"

msgid "Grows the object vertices in the direction pointed by their normals:"
msgstr "沿法線指向的方向增長對象頂點:"

msgid ""
"This is commonly used to create cheap outlines. Add a second material pass, "
"make it black and unshaded, reverse culling (Cull Front), and add some grow:"
msgstr ""
"這通常用於建立廉價的輪廓. 新增第二個material pass, 使其變為黑色, 無陰影"
"(unshaded), 反向剔除(Cull Front), 並新增一些增長:"

msgid ""
"For Grow to work as expected, the mesh must have connected faces with shared "
"vertices, or \"smooth shading\". If the mesh has disconnected faces with "
"unique vertices, or \"flat shading\", the mesh will appear to have gaps when "
"using Grow."
msgstr ""
"為了讓 Grow 如預期般運作，網格必須具有連接的面與共用頂點，也就是「平滑著"
"色」。如果網格具有不連接的面與獨立頂點，也就是「平面著色」，使用 Grow 時網格"
"將會出現縫隙。"

msgid "Transform"
msgstr "變換"

msgid "Fixed Size"
msgstr "固定大小"

msgid ""
"This causes the object to be rendered at the same size no matter the "
"distance. This is useful mostly for indicators (no depth test and high "
"render priority) and some types of billboards."
msgstr ""
"這使得無論距離如何, 物件都以相同的大小呈現. 這主要用於指示物(無深度測試和高算"
"繪優先順序)和某些型別的看板."

msgid "Use Point Size"
msgstr "使用點大小"

msgid ""
"This option is only effective when the geometry rendered is made of points "
"(generally it's made of triangles when imported from 3D modeling software). "
"If so, then those points can be resized (see below)."
msgstr ""
"此選項僅在算繪的幾何體由點組成時有效(通常從3D DCC匯入時由三角形組成). 如果是"
"這樣, 那麼這些點可以被調整大小(見下文)."

msgid "Point Size"
msgstr "點大小"

msgid "When drawing points, specify the point size in pixels."
msgstr "繪製點時，指定點的大小，單位為像素。"

msgid "Proximity and Distance Fade"
msgstr "Proximity and distance fade(接近和距離漸隱)"

msgid ""
"Godot allows materials to fade by proximity to each other as well as "
"depending on the distance from the viewer. Proximity fade is useful for "
"effects such as soft particles or a mass of water with a smooth blending to "
"the shores."
msgstr ""
"Godot 支援材質因彼此靠近或與攝影機距離不同而自動淡出。接近漸隱效果適合用於軟"
"粒子、或讓大面積水體與岸邊自然融合。"

msgid ""
"Distance fade is useful for light shafts or indicators that are only present "
"after a given distance."
msgstr "距離漸隱適合用於光束效果或需在特定距離後才出現的指示物等應用。"

msgid ""
"Keep in mind enabling proximity fade or distance fade with **Pixel Alpha** "
"mode enables alpha blending. Alpha blending is more GPU-intensive and can "
"cause transparency sorting issues. Alpha blending also disables many "
"material features such as the ability to cast shadows."
msgstr ""
"請注意，若以 **Pixel Alpha** 模式啟用鄰近漸隱或距離漸隱，會強制採用 Alpha 混"
"合。Alpha 混合較吃 GPU，可能造成透明排序問題，也會停用許多材質功能（如陰影投"
"射）。"

msgid ""
"To hide a character when they get too close to the camera, consider using "
"**Pixel Dither** or better, **Object Dither** (which is even faster than "
"**Pixel Dither**)."
msgstr ""
"如欲讓角色靠近攝影機時自動消失，建議使用 **Pixel Dither** ，或更推薦 "
"**Object Dither** （速度更快）。"

msgid ""
"**Pixel Alpha** mode: The actual transparency of a pixel of the object "
"changes with distance to the camera. This is the most effect, but forces the "
"material into the transparency pipeline (which leads, for example, to no "
"shadows)."
msgstr ""
"**Pixel Alpha** 模式：物件每個像素的透明度會隨與攝影機距離而改變。這是最直接"
"的效果，但會強制進入透明材質管線（例如不能投射陰影）。"

msgid ""
"**Pixel Dither** mode: What this does is sort of approximate the "
"transparency by only having a fraction of the pixels rendered."
msgstr "**Pixel Dither** 模式：利用只顯示部分像素的方式來近似透明度。"

msgid ""
"**Object Dither** mode: Like the previous mode, but the calculated "
"transparency is the same across the entire object's surface."
msgstr ""
"**Object Dither** 模式：與上面類似，但整個物件表面會應用相同的透明計算，速度"
"更快。"

msgid "Material Settings"
msgstr "材質"

msgid "Render priority"
msgstr "Render priority(算繪優先順序)"

msgid ""
"The rendering order of objects can be changed, although this is mostly "
"useful for transparent objects (or opaque objects that perform depth draw "
"but no color draw, such as cracks on the floor)."
msgstr ""
"可以更改物件的算繪順序, 儘管這對於透明物件有用(或執行深度繪製但沒有顏色繪製的"
"不透明物件, 例如地板上的裂縫)."

msgid ""
"Objects are sorted by an opaque/transparent queue, "
"then :ref:`render_priority<class_Material_property_render_priority>`, with "
"higher priority being drawn later. Transparent objects are also sorted by "
"depth."
msgstr ""
"物件會先根據不透明／透明隊列排序，再"
"依 :ref:`render_priority<class_Material_property_render_priority>` 設定。數值"
"較高者後算繪。透明物件還會依深度進一步排序。"

msgid ""
"Depth testing overrules priority. Priority alone cannot force opaque objects "
"to be drawn over each other."
msgstr ""
"深度測試優先於算繪優先順序設定。僅調整優先順序無法強制不透明物件互相覆蓋。"

msgid "Next Pass"
msgstr "下一階段"

msgid ""
"Setting :ref:`next_pass<class_Material_property_next_pass>` on a material "
"will cause an object to be rendered again with that next material."
msgstr ""
"於材質上設定 :ref:`next_pass<class_Material_property_next_pass>` 會讓物件再以"
"該材質多算繪一次。"

msgid ""
"Materials are sorted by an opaque/transparent queue, "
"then :ref:`render_priority<class_Material_property_render_priority>`, with "
"higher priority being drawn later."
msgstr ""
"材質會依不透明／透明隊列排序，再根"
"據 :ref:`render_priority<class_Material_property_render_priority>` 設定，高優"
"先順序者最後算繪。"

msgid ""
"Depth will test equal between both materials unless the grow setting or "
"other vertex transformations are used. Multiple transparent passes should "
"use :ref:`render_priority<class_Material_property_render_priority>` to "
"ensure correct ordering."
msgstr ""
"除非有使用 Grow 或其他頂點變形設定，否則兩個材質間的深度測試結果會相同。多層"
"透明 pass 請務必搭"
"配 :ref:`render_priority<class_Material_property_render_priority>` 以確保正確"
"順序。"
