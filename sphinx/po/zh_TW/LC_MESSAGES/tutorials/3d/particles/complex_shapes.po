#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Complex emission shapes"
msgstr "複雜發射形狀"

msgid ""
"When it is not enough to emit particles from one of the simple shapes "
"available in the :ref:`process material "
"<doc_process_material_properties_shapes>`, Godot provides a way to emit "
"particles from arbitrary, complex shapes. The shapes are generated from "
"meshes in the scene and stored as textures in the particle process material. "
"This is a very versatile workflow that has allowed users to use particle "
"systems for things that go beyond traditional use cases, like foliage, "
"leaves on a tree, or complex holographic effects."
msgstr ""
"當僅從 :ref:`程序材質 <doc_process_material_properties_shapes>` 中的簡單形狀"
"發射粒子不夠用時，Godot 提供了從任意複雜形狀發射粒子的方式。這些形狀會從場景"
"中的網格（Mesh）產生，並作為貼圖儲存在粒子程序材質內。這種彈性的工作流程允許"
"使用者將粒子系統用於超越傳統案例的用途，例如樹葉、植被，或複雜的全息效果等。"

msgid ""
"When you create emission points from meshes, you can only select a single "
"node as emission source. If you want particles to emit from multiple shapes, "
"you either have to create several particle systems or combine the meshes "
"into one in an external DCC software."
msgstr ""
"當你從網格建立發射點時，只能選擇一個節點作為發射來源。如果你需要從多個形狀發"
"射粒子，你必須建立多個粒子系統，或於外部 DCC 軟體中將多個網格合併為一。"

msgid "Creating emission points"
msgstr "建立發射點"

msgid "Create particle emission points..."
msgstr "建立粒子發射點…"

msgid "Select mesh for emission"
msgstr "選擇作為發射的網格"

msgid "\\...from a mesh instance as the source"
msgstr "…以網格實體作為來源"

msgid "Set emission density"
msgstr "設定發射密度"

msgid "More points = higher particle density"
msgstr "更多的點 = 更高的粒子密度"

msgid ""
"To make use of this feature, start by creating a particle system in the "
"current scene. Add a mesh instance that serves as the source of the particle "
"emission points. With the particle system selected, navigate to the viewport "
"menu and select the *GPUParticles3D* entry. From there, select ``Create "
"Emission Points From Node``."
msgstr ""
"要使用此功能，請先在目前場景中建立一個粒子系統。新增一個作為粒子發射點來源的"
"網格實體。選取粒子系統後，前往檢視區選單，選擇 *GPUParticles3D* 項目，然後選"
"擇 ``由節點建立發射點``。"

msgid ""
"A dialog window will pop up and ask you to select a node as the emission "
"source. Choose one of the mesh instances in the scene and confirm your "
"selection. The next dialog window deals with the amount of points and how to "
"generate them."
msgstr ""
"接著會跳出一個對話視窗，要求你選擇一個節點作為發射來源。請選擇場景中的其中一"
"個網格實體並確認。下個對話視窗則讓你設定發射點的數量及產生方式。"

msgid ""
"``Emission Points`` controls the total number of points that you are about "
"to generate. Particles will spawn from these points, so what to enter here "
"depends on the size of the source mesh (how much area you have to cover) and "
"the desired density of the particles."
msgstr ""
"``發射點數量`` 控制你要產生的總發射點數。粒子會從這些點產生，因此這裡的設定取"
"決於來源網格的大小（需覆蓋的面積）以及你希望的粒子密度。"

msgid ""
"``Emission Source`` offers 3 different options for how the points are "
"generated. Select ``Surface Points`` if all you want to do is distribute the "
"emission points across the surface of the mesh. Select ``Surface Points + "
"Normal (Directed)`` if you also want to generate information about the "
"surface normals and make particles move in the direction that the normals "
"point at. The last option, ``Volume``, creates emission points everywhere "
"inside the mesh, not just across its surface."
msgstr ""
"``發射來源`` 提供三種不同的發射點產生方式。若你只希望將發射點分布在網格表面，"
"請選擇 ``表面點``。若需要同時產生表面法線資訊，讓粒子沿著法線方向移動，請選"
"擇 ``表面點＋法線（定向）``。最後一個選項 ``體積`` 會在網格內部的每個位置產生"
"發射點，不僅只在表面。"

msgid ""
"The emission points are stored in the particle system's local coordinate "
"system, so you can move the particle node around and the emission points "
"will follow. This might be useful when you want to use the same particle "
"system in several different places. On the other hand, you might have to "
"regenerate the emission points when you move either the particle system or "
"the source mesh."
msgstr ""
"發射點會儲存在粒子系統的本地座標系統中，因此你可以移動粒子節點，發射點會隨之"
"移動。這在你想在不同位置重複使用同一粒子系統時很有用。不過，若你移動了粒子系"
"統或來源網格，則可能需要重新產生發射點。"

msgid "Emission shape textures"
msgstr "發射形狀貼圖"

msgid "Emission textures"
msgstr "發射貼圖"

msgid "The available emission shape textures"
msgstr "可用的發射形狀貼圖"

msgid ""
"All the data for complex particle emission shapes is stored in a set of "
"textures. How many, depends on the type of emission shape you use. If you "
"set the ``Shape`` property in the ``Emission Shape`` group on the particle "
"process material to ``Points``, you have access to 2 texture properties, the "
"``Point Texture`` and the ``Color Texture``. Set it to ``Directed Points`` "
"and there is a third property called ``Normal Texture``."
msgstr ""
"所有複雜粒子發射形狀的資料都儲存在一組貼圖中，數量取決於所選擇的發射形狀類"
"型。若你將 ``Emission Shape`` 群組的 ``Shape`` 屬性設為 ``Points``，你會看到"
"兩個貼圖屬性：``Point Texture`` 及 ``Color Texture``。若設為 ``Directed "
"Points``，則會多一個 ``Normal Texture`` 屬性。"

msgid ""
"``Point Texture`` contains all possible emission points that were generated "
"in the previous step. A point is randomly selected for every particle when "
"it spawns. ``Normal Texture``, if it exists, provides a direction vector at "
"that same location. If the ``Color Texture`` property is also set, it "
"provides color for the particle, sampled at the same location as the other "
"two textures and modulating any other color that was set up on the process "
"material."
msgstr ""
"``Point Texture`` 內含前一步產生的所有發射點，每個粒子生成時會隨機選擇一個"
"點。若有 ``Normal Texture``，則會在相同位置提供方向向量。若也有設定 ``Color "
"Texture`` 屬性，則會在同一位置取樣顏色，並與程序材質中設定的其他顏色混合。"

msgid ""
"There is also the ``Point Count`` property that you can use to change the "
"number of emission points at any time after creating the emission shape. "
"This includes dynamically at runtime while the playing the game."
msgstr ""
"此外還有一個 ``Point Count`` 屬性，可以讓你在建立發射形狀後隨時更改發射點數"
"量，甚至可在遊戲運行時動態調整。"
