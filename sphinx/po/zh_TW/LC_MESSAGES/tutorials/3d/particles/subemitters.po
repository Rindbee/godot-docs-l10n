#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Particle sub-emitters"
msgstr "粒子次發射器"

msgid "Chained sub-emitters"
msgstr "連鎖次發射器"

msgid ""
"Sometimes a visual effect cannot be created with a single particle system "
"alone. Sometimes a particle system needs to be spawned as a response to "
"something that happens in another particle system. Fireworks are a good "
"example of that. They usually consist of several stages of explosions that "
"happen in sequence. Sub-emitters are a good way to achieve this kind of "
"effect."
msgstr ""
"有時候，僅用單一粒子系統無法實現某些視覺效果。某些情況下，當一個粒子系統發生"
"事件時，需要觸發另一個粒子系統。例如煙火，通常包含多個階段、依序發生的爆炸。"
"這類效果很適合用次發射器來實現。"

msgid "Assign sub-emitter"
msgstr "指派次發射器"

msgid "Click to assign a sub-emitter..."
msgstr "點擊以指定次發射器……"

msgid "List particle systems"
msgstr "列出粒子系統"

msgid "\\...and select one from the scene"
msgstr "⋯⋯然後從場景中選擇一個"

msgid ""
"A sub-emitter is a particle system that spawns as a child of another "
"particle system. You can add sub-emitters to sub-emitters, chaining particle "
"effects as deep as you like."
msgstr ""
"次發射器是作為另一個粒子系統子節點生成的粒子系統。你可以在次發射器中再加入更"
"多次發射器，依需求自由連鎖粒子特效的層數。"

msgid ""
"To create a sub-emitter, you need at least two particle systems in the same "
"scene. One of them will be the parent and one will be set as the child. Find "
"the ``Sub Emitter`` property on the parent and click the box next to it to "
"assign the sub-emitter. You will see a list of available particle systems in "
"the scene. Select one and click the confirmation button."
msgstr ""
"要建立次發射器，你需要在同一個場景中有至少兩個粒子系統。其中一個作為父系統，"
"另一個則作為子系統。在父粒子系統找到 ``Sub Emitter`` 屬性，點擊旁邊的方框來指"
"派次發射器。此時會顯示場景中可用的粒子系統列表，選擇一個並點擊確認按鈕。"

msgid ""
"Particle systems from instanced scenes can be set as sub-emitters too, as "
"long as the ``Editable Children`` property is enabled on the instanced "
"scene. This also works the other way around: You can assign a sub-emitter to "
"a particle system in an instanced scene, even one coming from a different "
"instanced scene."
msgstr ""
"來自實例場景的粒子系統只要有啟用 ``Editable Children`` （可編輯子節點）屬性，"
"也能設為次發射器。反之亦然：你也可以將其他實例場景中的粒子系統指派為次發射"
"器。"

msgid ""
"When you set a particle system as the sub-emitter of another, the system "
"stops emitting, even if the ``Emitting`` property was checked. Don't worry, "
"it didn't break. This happens to every particle system as soon as it becomes "
"a sub-emitter. You also won't be able to re-enable the property as long as "
"the particle system is used as a sub-emitter."
msgstr ""
"當你將某個粒子系統設為他人的次發射器時，即使 ``Emitting`` 屬性已勾選，它也會"
"停止發射。別擔心，這是正常行為。每個成為次發射器的粒子系統都會如此，而且只要"
"它仍被用作次發射器，就無法重新啟用該屬性。"

msgid ""
"Even though the parent particle system can be selected from the list of "
"available particle systems, a particle system which is its own sub-emitter "
"does not work in Godot. It will simply not spawn. The same is true for any "
"other kind of recursive or self-referential sub-emitter setup."
msgstr ""
"雖然在可用粒子系統列表中可以選取父粒子系統，但 Godot 不支援將某個粒子系統設為"
"自己的次發射器。這樣設定後，該粒子系統將不會生成。所有遞迴或自我參照的次發射"
"器設置都是如此。"

msgid "Emitter mode"
msgstr "發射器模式"

msgid ""
"When you assign a sub-emitter, you don't see it spawn right away. Emitting "
"is disabled by default and needs to be enabled first. Set the ``Mode`` "
"property in the ``Sub Emitter`` group of the :ref:`ParticleProcessMaterial "
"<doc_process_material_properties_subemitter>` to something other than "
"``Disabled``."
msgstr ""
"當你指派次發射器後，預設不會立即產生粒子。發射功能預設為停用，必須先啟用。請"
"將 :ref:`ParticleProcessMaterial "
"<doc_process_material_properties_subemitter>` 中 ``Sub Emitter`` 群組下的 "
"``Mode`` 屬性設為非 ``Disabled`` （停用）即可。"

msgid ""
"The emitter mode also determines how many sub-emitter particles are spawned. "
"``Constant`` spawns a single particle at a frequency set by the "
"``Frequency`` property. For ``At End`` and ``At Collision`` you can set the "
"amount directly with the ``Amount At End`` and the ``Amount At Collision`` "
"properties."
msgstr ""
"發射器模式也會影響次發射器產生粒子的數量。``Constant``（常數）模式會依照 "
"``Frequency``（頻率）屬性定期產生單一粒子。``At End``（結束時）和 ``At "
"Collision``（碰撞時）則可分別透過 ``Amount At End`` 和 ``Amount At "
"Collision`` 直接設定產生數量。"

msgid "Limitations"
msgstr "限制"

msgid ""
"One thing to keep in mind is that the total number of active particles from "
"the sub-emitter is always capped by the ``Amount`` property on the sub-"
"emitter particle system. If you find that there are not enough particles "
"spawned from the sub-emitter, you might have to increase the amount in the "
"particle system."
msgstr ""
"需要注意的是，次發射器產生的粒子總數會受到其 ``Amount``（數量）屬性的上限限"
"制。如果發現次發射器產生的粒子數量不足，請調高該粒子系統的 ``Amount`` 數值。"

msgid ""
"Some emitter properties are ignored when a particle system is spawned as a "
"sub-emitter. The ``Explosiveness`` property, for example, has no effect. "
"Depending on the emitter mode, the particles are either spawned sequentially "
"at fixed intervals or explosively all at once."
msgstr ""
"當粒子系統作為次發射器時，部分發射器屬性會被忽略。例如 ``Explosiveness`` （爆"
"炸性）屬性將不會有作用。根據發射器模式的不同，粒子會以固定間隔依序產生，或是"
"一次性全部產生。"
