#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating a 3D particle system"
msgstr "建立 3D 粒子系統"

msgid "Required particle node properties"
msgstr "必需的粒子節點屬性"

msgid ""
"To get started with particles, the first thing we need to do is add a "
"``GPUParticles3D`` node to the scene. Before we can actually see any "
"particles, we have to set up two parameters on the node: the ``Process "
"Material`` and at least one ``Draw Pass``."
msgstr ""
"要開始使用粒子系統，首先需要在場景中加入一個 ``GPUParticles3D`` 節點。在能夠"
"看到任何粒子之前，必須先在該節點上設定兩個參數：一個 ``處理材質（Process "
"Material）`` 以及至少一個 ``繪製通道（Draw Pass）``。"

msgid "The process material"
msgstr "處理材質"

msgid ""
"To add a process material to your particles node, go to ``Process Material`` "
"in the inspector panel. Click on the box next to ``Process Material`` and "
"from the dropdown menu select ``New ParticleProcessMaterial``."
msgstr ""
"要為粒子節點新增處理材質，請在屬性面板（Inspector）中找到 ``Process "
"Material``。點擊 ``Process Material`` 旁的方框，然後從下拉選單中選擇 ``新建 "
"ParticleProcessMaterial``。"

msgid "Creating a process material"
msgstr "建立處理材質"

msgid ""
":ref:`class_ParticleProcessMaterial` is a special kind of material. We don't "
"use it to draw any objects. We use it to update particle data and behavior "
"on the GPU instead of the CPU, which comes with a massive performance boost. "
"A click on the newly added material displays a long list of properties that "
"you can set to control each particle's behavior."
msgstr ""
":ref:`class_ParticleProcessMaterial` 是一種特殊的材質，它並不是用來繪製物件，"
"而是用來在 GPU 上更新粒子的數據與行為，取代原本在 CPU 執行的方式，這能大幅提"
"升效能。點選新加入的處理材質後，會顯示一長串可調整的屬性，讓你控制每個粒子的"
"行為。"

msgid "Draw passes"
msgstr "繪製通道"

msgid "At least one draw pass is required"
msgstr "至少需要一個繪製通道"

msgid ""
"In order to render any particles, at least one draw pass needs to be "
"defined. To do that, go to ``Draw Passes`` in the inspector panel. Click on "
"the box next to ``Pass 1`` and select ``New QuadMesh`` from the dropdown "
"menu. After that, click on the mesh and set its ``Size`` to 0.1 for both "
"``x`` and ``y``. Reducing the mesh's size makes it a little easier to tell "
"the individual particle meshes apart at this stage."
msgstr ""
"為了讓粒子能夠被繪製，必須定義至少一個繪製通道。請在屬性面板中找到 ``Draw "
"Passes``，點擊 ``Pass 1`` 旁的方框，從下拉選單選擇 ``新建 QuadMesh``。接著點"
"擊該網格，將其 ``Size`` 設定為 x 與 y 都是 0.1。縮小網格尺寸可以讓你更容易分"
"辨各個粒子的外觀。"

msgid ""
"You can use up to 4 draw passes per particle system. Each pass can render a "
"different mesh with its own unique material. All draw passes use the data "
"that is computed by the process material, which is an efficient method for "
"composing complex effects: Compute particle behavior once and feed it to "
"multiple render passes."
msgstr ""
"每個粒子系統最多可使用 4 個繪製通道，每個通道都可以使用不同的網格與材質進行渲"
"染。所有繪製通道都會共用處理材質所運算出的粒子資料，這是一種高效合成複雜特效"
"的方法：只需一次計算粒子行為，即可應用於多個繪製通道。"

msgid ""
"Using multiple draw passes: yellow rectangles (pass1) and blue spheres (pass "
"2)"
msgstr "使用多重繪製通道：黃色矩形（通道 1）、藍色球體（通道 2）"

msgid ""
"If you followed the steps above, your particle system should now be emitting "
"particles in a waterfall-like fashion, making them move downwards and "
"disappear after a few seconds. This is the foundation for all particle "
"effects. Take a look at the documentation for :ref:`particle "
"<doc_3d_particles_properties>` and :ref:`particle material "
"<doc_process_material_properties>` properties to learn how to make particle "
"effects more interesting."
msgstr ""
"如果你按照上述步驟操作，現在你的粒子系統應該會以類似瀑布的方式發射粒子，讓它"
"們往下移動並在幾秒後消失。這是所有粒子特效的基礎。你可以參考 :ref:`粒子屬性 "
"<doc_3d_particles_properties>` 以及 :ref:`粒子材質屬性 "
"<doc_process_material_properties>` 的文件，進一步學習如何讓你的粒子特效更加有"
"趣。"

msgid "Particle conversion"
msgstr "粒子轉換"

msgid "Turning GPU into CPU particles"
msgstr "將 GPU 粒子轉換為 CPU 粒子"

msgid ""
"You can convert GPU particles to CPU particles at any time using the entry "
"in the viewport menu. When you do so, keep in mind that not every feature of "
"GPU particles is available for CPU particles, so the resulting particle "
"system will look and behave differently from the original."
msgstr ""
"你可以隨時透過檢視區（Viewport）選單中的選項，將 GPU 粒子轉換為 CPU 粒子。但"
"請注意，並非所有 GPU 粒子的功能在 CPU 粒子中都適用，因此轉換後的粒子系統在外"
"觀和行為上可能會與原來有所不同。"

msgid ""
"You can also convert CPU particles to GPU particles if you no longer need to "
"use CPU particles. This is also done from the viewport menu."
msgstr ""
"如果不再需要 CPU 粒子，也可以將其轉換回 GPU 粒子，這同樣可以從檢視區選單中完"
"成。"

msgid ""
"Some of the most notable features that are lost during the conversion "
"include:"
msgstr "在轉換過程中，會失去以下幾項重要功能："

msgid "multiple draw passes"
msgstr "多重繪製通道"

msgid "turbulence"
msgstr "亂流"

msgid "sub-emitters"
msgstr "子發射器"

msgid "trails"
msgstr "拖尾"

msgid "attractors"
msgstr "吸引器"

msgid "collision"
msgstr "碰撞"

msgid "You also lose the following properties:"
msgstr "你也會失去以下屬性："

msgid "``Amount Ratio``"
msgstr "``數量比例``"

msgid "``Interp to End``"
msgstr "``插值至結束``"

msgid "``Damping as Friction``"
msgstr "``阻尼作為摩擦``"

msgid "``Emission Shape Offset``"
msgstr "``發射形狀偏移``"

msgid "``Emission Shape Scale``"
msgstr "``發射形狀縮放``"

msgid "``Inherit Velocity Ratio``"
msgstr "``繼承速度比例``"

msgid "``Velocity Pivot``"
msgstr "``速度樞紐``"

msgid "``Directional Velocity``"
msgstr "``方向速度``"

msgid "``Radial Velocity``"
msgstr "``徑向速度``"

msgid "``Velocity Limit``"
msgstr "``速度上限``"

msgid "``Scale Over Velocity``"
msgstr "``速度縮放``"

msgid ""
"Converting GPU particles to CPU particles can become necessary when you want "
"to release a game on older devices that don't support modern graphics APIs."
msgstr ""
"當你要在不支援現代圖形 API 的舊裝置上發行遊戲時，將 GPU 粒子轉換為 CPU 粒子可"
"能是必要的。"
