#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to 3D"
msgstr "3D 簡介"

msgid ""
"Creating a 3D game can be challenging. That extra Z coordinate makes many of "
"the common techniques that helped to make 2D games simpler no longer work. "
"To aid in this transition, it is worth mentioning that Godot uses similar "
"APIs for 2D and 3D. Most nodes are the same and are present in both 2D and "
"3D versions. In fact, it is worth checking the 3D platformer tutorial, or "
"the 3D kinematic character tutorials, which are almost identical to their 2D "
"counterparts."
msgstr ""
"創造一個 3D 遊戲是具有挑戰性的。多了額外的 Z 軸使得許多有助於使製作 2D 遊戲變"
"得簡單的常用技術不再起作用。為了幫助習慣這，值得一提的是，Godot 在 2D 和 3D "
"中使用了類似的API。大多數的節點都是相同的，並且存在於 2D 和 3D 版本中。事實"
"上，可以看看 3D 平台遊戲教學或 3D 動力學角色教學，這些教學大部分與 2D 遊戲相"
"同。"

msgid "An example 3D game demo created using Godot"
msgstr "以 Godot 製作的 3D 遊戲範例展示"

msgid ""
"Godot Third Person Shooter (TPS) Demo, available on the `Github repository "
"<https://github.com/godotengine/tps-demo>`__ or the :ref:`Asset Library "
"<doc_project_manager_downloading_demos>`."
msgstr ""
"Godot 第三人稱射擊（TPS）範例，可於 `Github 儲存庫 <https://github.com/"
"godotengine/tps-demo>`__ 或 :ref:`資源庫 "
"<doc_project_manager_downloading_demos>` 取得。"

msgid ""
"In 3D, math is a little more complex than in 2D. For an introduction to the "
"relevant math written for game developers, not mathemeticians or engineers, "
"check out :ref:`doc_vector_math` and :ref:`doc_using_transforms`."
msgstr ""
"在 3D 中，數學比 2D 稍微複雜一些。若想了解專為遊戲開發者（而非數學家或工程"
"師）編寫的相關數學，請參考 :ref:`doc_vector_math` "
"及 :ref:`doc_using_transforms`。"

msgid "3D workspace"
msgstr "3D 工作區"

msgid ""
"Editing 3D scenes is done in the 3D workspace. This workspace can be "
"selected manually, but it will be automatically selected when a Node3D node "
"is selected."
msgstr ""
"3D 場景的編輯是在 3D 工作區進行。你可以手動切換到此工作區，當選取 Node3D 節點"
"時也會自動切換。"

msgid ""
"Similar to 2D, the tabs below the workspace selector are used to change "
"between currently opened scenes or create a new one using the plus (+) "
"button. The left and right docks should be familiar from :ref:`editor "
"introduction <doc_editor_introduction>`."
msgstr ""
"和 2D 工作區類似，工作區選擇器下方的分頁可用來切換目前開啟的場景，或點選加號"
"（+）按鈕建立新場景。左側與右側的工具欄也同樣來自 :ref:`編輯器介紹 "
"<doc_editor_introduction>`。"

msgid ""
"Below the scene selector, the main toolbar is visible, and beneath the main "
"toolbar is the 3D viewport."
msgstr ""
"在場景選擇器下方可以看到主工具列，主工具列下方則是 3D 檢視區（Viewport）。"

msgid "Main toolbar"
msgstr "主工具列"

msgid ""
"Some buttons in the main toolbar are the same as those in the 2D workspace. "
"A brief explanation is given with the shortcut if the mouse cursor is "
"hovered over a button for one second. Some buttons may have additional "
"functionality if another keypress is performed. A recap of main "
"functionality of each button with its default shortcut is provided below "
"from left to right:"
msgstr ""
"主工具列中有些按鈕和 2D 工作區相同。將滑鼠游標停留在按鈕上一秒，會顯示其快捷"
"鍵與簡要說明。有些按鈕配合其他按鍵還有額外功能。以下依序說明各按鈕的主要用途"
"與預設快捷鍵："

msgid ""
"**Select Mode** (:kbd:`Q`): Allows selection of nodes in the viewport. Left "
"clicking on a node to select one. Left clicking and dragging a rectangle "
"selects all nodes within the rectangle's boundaries, once released. "
"Holding :kbd:`Shift` while selecting adds more nodes to the selection. "
"Clicking on a selected node while holding :kbd:`Shift` deselects the node. "
"In this mode, you can use the gizmos to perform movement or rotation."
msgstr ""
"**選取模式** （ :kbd:`Q` ）：可於檢視區中選取節點。左鍵點擊節點即可選擇，按住"
"左鍵拖曳可框選多個節點。按住 :kbd:`Shift` 點選可加入選取，按住 :kbd:`Shift` "
"再次點擊已選節點則取消選取。在此模式下，可使用操作工具進行移動或旋轉。"

msgid ""
"**Move Mode** (:kbd:`W`): Enables move (or translate) mode for the selected "
"nodes. See :ref:`doc_introduction_to_3d_space_and_manipulation` for more "
"details."
msgstr ""
"**移動模式** （ :kbd:`W` ）：啟用所選節點的移動（平移）模式。詳情請"
"見 :ref:`doc_introduction_to_3d_space_and_manipulation` 。"

msgid ""
"**Rotate Mode** (:kbd:`E`): Enables rotation mode for the selected nodes. "
"See :ref:`doc_introduction_to_3d_space_and_manipulation` for more details."
msgstr ""
"**旋轉模式** （ :kbd:`E` ）：啟用所選節點的旋轉模式。詳情請"
"見 :ref:`doc_introduction_to_3d_space_and_manipulation`。"

msgid ""
"**Scale Mode** (:kbd:`R`): Enables scaling and displays scaling gizmos in "
"different axes for the selected nodes. "
"See :ref:`doc_introduction_to_3d_space_and_manipulation` for more details."
msgstr ""
"**縮放模式** （ :kbd:`R` ）：啟用所選節點的縮放，並於各軸顯示縮放操作工具。詳"
"情請見 :ref:`doc_introduction_to_3d_space_and_manipulation`。"

msgid ""
"**Show the list of selectable nodes at the clicked position**: As the "
"description suggests, this provides a list of selectable nodes at the "
"clicked position as a context menu, if there is more than one node in the "
"clicked area."
msgstr ""
"**顯示點擊位置可選節點清單**：如其名，當點擊處有多個節點時，會以右鍵選單方式"
"列出可選節點清單。"

msgid ""
"**Lock** (:kbd:`Ctrl + L`) the selected nodes, preventing selection and "
"movement in the viewport. Clicking the button again (or using :kbd:`Ctrl + "
"Shift + L`) unlocks the selected nodes. Locked nodes can only be selected in "
"the scene tree. They can easily be identified with a padlock next to their "
"node names in the scene tree. Clicking on this padlock also unlocks the "
"nodes."
msgstr ""
"**鎖定** （ :kbd:`Ctrl + L` ）：將選取的節點鎖定，防止在檢視區中被選取或移"
"動。再按一次按鈕（或使用 :kbd:`Ctrl + Shift + L` ）可解除鎖定。被鎖定的節點僅"
"能於場景樹中選取，場景樹中會在節點名稱旁顯示鎖頭圖示，點擊鎖頭可直接解鎖。"

msgid ""
"**Group selected nodes** (:kbd:`Ctrl + G`). This allows selection of the "
"root node if any of the children are selected. Using :kbd:`Ctrl + G` "
"ungroups them. Additionally, clicking the ungroup button in the scene tree "
"performs the same action."
msgstr ""
"**群組選取節點** （:kbd:`Ctrl + G`）：將選取的節點群組化，方便同時操作。再次"
"用 :kbd:`Ctrl + G` 或在場景樹點擊解除群組按鈕即可解散。"

msgid ""
"**Ruler Mode** (:kbd:`M`): When enabled you can click and drag to measure "
"distance in the scene in meters."
msgstr ""
"**尺規模式** （ :kbd:`M` ）：啟用後可於場景中點擊並拖曳來測量距離（單位：公"
"尺）。"

msgid ""
"**Use Local Space** (:kbd:`T`): If enabled, gizmos of a node are drawn using "
"the current node's rotation angle instead of the :ref:`global viewport axes "
"<doc_introduction_to_3d_coordinate_system>`."
msgstr ""
"**使用區域座標系** （ :kbd:`T` ）：啟用時，操作工具會依據目前節點的旋轉角度顯"
"示，而非 :ref:`全域檢視座標軸 <doc_introduction_to_3d_coordinate_system>`。"

msgid ""
"**Use Snap** (:kbd:`Y`): If enabled, movement, and rotation snap to grid. "
"Snapping can also temporarily be activated using :kbd:`Ctrl` while "
"performing the action. The settings for changing snap options are explained "
"below."
msgstr ""
"**啟用吸附** （ :kbd:`Y` ）：啟用時，移動與旋轉會對齊網格。也可在操作時暫時按"
"住 :kbd:`Ctrl` 啟用吸附。吸附設定說明請見下方。"

msgid ""
"**Toggle preview sunlight**: If no DirectionalLight3D exist in the scene, a "
"preview of sunlight can be used as a light source. "
"See :ref:`doc_introduction_to_3d_preview_environment_light` for more details."
msgstr ""
"**切換預覽太陽光**：若場景中沒有 DirectionalLight3D，可啟用預覽太陽光作為光"
"源。詳見 :ref:`doc_introduction_to_3d_preview_environment_light`。"

msgid ""
"**Toggle preview environment**: If no WorldEnvironment exists in the scene, "
"a preview of the environment can be used as a placeholder. "
"See :ref:`doc_introduction_to_3d_preview_environment_light` for more details."
msgstr ""
"**切換預覽環境**：若場景中沒有 WorldEnvironment，可啟用預覽環境作為暫用顯示。"
"詳見 :ref:`doc_introduction_to_3d_preview_environment_light`。"

msgid ""
"**Edit Sun and Environment Settings (three dots)**: Opens the menu to "
"configure preview sunlight and environment settings. "
"See :ref:`doc_introduction_to_3d_preview_environment_light` for more details."
msgstr ""
"**編輯太陽與環境設定（三個點）**：開啟選單以調整預覽太陽光與環境設定。詳"
"見 :ref:`doc_introduction_to_3d_preview_environment_light`。"

msgid "**Transform menu**: It has three options:"
msgstr "**變形選單**：包含三個選項："

msgid "*Snap Object to Floor*: Snaps an object to a solid floor."
msgstr "*吸附物件到底面*：將物件吸附至實體地面。"

msgid ""
"*Transform Dialog*: Opens a dialog to adjust transform parameters "
"(translate, rotate, scale, and transform) manually."
msgstr ""
"*變形對話框*：開啟對話視窗以手動調整變形參數（平移、旋轉、縮放與矩陣）。"

msgid ""
"*Snap Settings*: Allows you to change transform, rotate snap (in degrees), "
"and scale snap (in percent) settings."
msgstr "*吸附設定*：可調整平移、旋轉（角度）與縮放（百分比）的吸附設定。"

msgid ""
"**View menu**: Controls the view options and enables additional viewports:"
msgstr "**檢視選單**：可調整檢視選項並啟用額外檢視區："

msgid ""
"In this menu, you can also show/hide grids, which are set to 1x1 meter by "
"default, and the origin, where the blue, green, and red axis lines "
"intersect. Moreover, specific types of gizmos can be toggled in this menu."
msgstr ""
"此選單中也可顯示/隱藏網格（預設為 1x1 公尺）與原點（藍、綠、紅三軸交會處）。"
"另外，也能切換顯示特定類型的操作工具。"

msgid ""
"An open eye means that the gizmo is visible, a closed eye means it is "
"hidden. A half-open eye means that it is also visible through opaque "
"surfaces."
msgstr ""
"眼睛圖示開啟代表小工具可見，關閉則為隱藏。半開則表示即使被不透明物體遮住也可"
"見。"

msgid ""
"Clicking on *Settings* in this view menu opens a window to change the "
"*Vertical Field of View (VFOV)* parameter (in degrees), *Z-Near*, and *Z-"
"Far* values."
msgstr ""
"於檢視選單點擊 *設定* 可開啟視窗，變更 *垂直視野（VFOV）*（單位：度）、*Z-近"
"* 與 *Z-遠* 值。"

msgid ""
"Next to the View menu, additional buttons may be visible. In the toolbar "
"image at the beginning of this chapter, an additional *Mesh* button appears "
"because a MeshInstance3D is selected. This menu provides some quick actions "
"or tools to work on a specific node or selection."
msgstr ""
"在檢視選單旁，可能會出現額外按鈕。章節開頭的工具列圖示中，出現了 *Mesh* 按"
"鈕，是因為選取了 MeshInstance3D 節點。這些選單提供針對特定節點或選取區的快速"
"操作與工具。"

msgid "View menu of viewport"
msgstr "檢視區的檢視選單"

msgid ""
"Below the *Select* tool, in the 3D viewport, clicking on the three dots "
"opens the **View menu** for the viewport. Hiding all shown gizmos in the "
"editor's 3D view can also be performed through this menu:"
msgstr ""
"在 3D 檢視區的 *選取* 工具下方，點擊三個點可開啟此檢視區的 **檢視選單**。你也"
"可以在這裡隱藏編輯器 3D 視圖中所有顯示的小工具："

msgid ""
"This menu also displays the current view type and enables quick adjustment "
"of the viewport's viewing angle. Additionally, it offers options to modify "
"the appearance of nodes within the viewport."
msgstr ""
"此選單同時顯示目前的檢視類型，並能快速調整檢視區的視角。此外，還可變更檢視區"
"中節點的外觀設定。"

msgid "Coordinate system"
msgstr "座標系"

msgid ""
"Godot uses the `metric <https://en.wikipedia.org/wiki/Metric_system>`__ "
"system for everything in 3D, with 1 unit being equal to 1 meter. Physics and "
"other areas are tuned for this scale. Therefore, attempting to use a "
"different scale is usually a bad idea (unless you know what you are doing)."
msgstr ""
"Godot 在 3D 中都使用 `公制系統 <https://en.wikipedia.org/wiki/"
"Metric_system>`__ ，1 單位等於 1 公尺。物理和其他領域都針對此比例進行調整。因"
"此，除非您知道自己在做什麼，否則嘗試使用不同的比例通常是個壞主意。"

msgid ""
"When working with 3D assets, it's always best to work in the correct scale "
"(set the unit to metric in your 3D modeling software). Godot allows scaling "
"post-import and, while this works in most cases, in rare situations it may "
"introduce floating-point precision issues (and thus, glitches or artifacts) "
"in delicate areas such as rendering or physics. Make sure your artists "
"always work in the right scale!"
msgstr ""
"使用 3D 素材時，最好使用正確的比例（將 DCC 設定為公制）。 Godot 允許在匯入後"
"縮放，雖然這在大多數情況下都有效，但在極少數情況下，它可能會在算繪或物理等精"
"細領域引入浮點精度問題（會出現毛刺或失真）。所以請確保藝術家始終以正確的比例"
"工作！"

msgid ""
"The Y coordinate is used for \"up\". As for the horizontal X/Z axes, Godot "
"uses a **right-handed** coordinate system. This means that for most objects "
"that need alignment (such as lights or cameras), the Z axis is used as a "
"\"pointing towards\" direction. This convention roughly means that:"
msgstr ""
"Y座標用於 \"向上 \", 但對於大多數需要對齊的物體(如燈光, 相機, 膠囊碰撞體, 載"
"具等),Z軸用作\" 指向\"方向. 這個約定大致意味著:"

msgid "**X** is sides"
msgstr "**X** 是兩邊"

msgid "**Y** is up/down"
msgstr "**Y** 是上/下"

msgid "**Z** is front/back"
msgstr "**Z** 是前/後"

msgid "See this chart for comparison with other 3D software:"
msgstr "請參閱此圖表與其他 3D 軟體進行比較："

msgid "3D coordinate systems comparison chart"
msgstr "3D座標系對比圖"

msgid "Image by `Freya Holmér <https://twitter.com/FreyaHolmer>`__"
msgstr "圖片來源：「Freya Holmér <https://twitter.com/FreyaHolmer>」__"

msgid "Space and manipulation gizmos"
msgstr "空間與操縱小工具"

msgid ""
"Moving, rotating, and scaling objects in the 3D view is done through the "
"manipulator gizmos. Each axis is represented by a color: Red, Green, Blue "
"represent X, Y, Z respectively. This convention applies to the grid and "
"other gizmos too (and also to the shader language, ordering of components "
"for Vector3, Color, etc.)."
msgstr ""
"在 3D 檢視中，移動、旋轉、縮放物件都是透過操作工具完成。每個軸對應一種顏色："
"紅色、綠色、藍色分別代表 X、Y、Z。這個慣例同樣適用於網格與其他小工具（也適用"
"於著色器語言中 Vector3、Color 等元件的順序）。"

msgid "Some useful keybindings:"
msgstr "一些有用的鍵盤綁定:"

msgid ""
"To snap placement or rotation, press :kbd:`Ctrl` while moving, scaling, or "
"rotating."
msgstr "在移動、縮放或旋轉時，按住 :kbd:`Ctrl` 鍵可啟用吸附對齊。"

msgid "To center the view on the selected object, press :kbd:`F`."
msgstr "要將視合集中在所選物件上, 按 :kbd:`F`."

msgid ""
"In the viewport, the arrows can be clicked and held to move the object on an "
"axis. The arcs can be clicked and held to rotate the object. To lock one "
"axis and move the object freely in the other two axes, the colored "
"rectangles can be clicked, held, and dragged."
msgstr ""
"在檢視區中，按住箭頭可沿單一軸移動物件；按住弧線可旋轉物件；若要鎖定某一軸、"
"在其餘兩軸自由移動，則可按住並拖曳彩色矩形區域。"

msgid ""
"If the transform mode is changed from *Select Mode* to *Scale Mode*, the "
"arrows will be replaced by cubes, which can be dragged to scale an object as "
"if the object is being moved."
msgstr ""
"將變形模式從 *選取模式* 切換到 *縮放模式* 後，箭頭會變成方塊，可拖曳方塊來縮"
"放物件，操作方式類似移動。"

msgid "Navigating the 3D environment"
msgstr "3D 環境的導覽操作"

msgid ""
"In 3D environments, it is often important to adjust the viewpoint or angle "
"from which you are viewing the scene. In Godot, navigating the 3D "
"environment in the viewport (or spatial editor) can be done in multiple ways."
msgstr ""
"在 3D 場景中，調整你的檢視角度與視點非常重要。在 Godot 的 3D 檢視區（或空間編"
"輯器）中，有多種方式可以操控視角。"

msgid ""
"The default 3D scene navigation controls are similar to Blender (aiming to "
"have some sort of consistency in the free software pipeline), but options "
"are included to customize mouse buttons and behavior to be similar to other "
"tools in the Editor Settings. To change the controls to Maya or Modo "
"controls, you can navigate to **Editor Settings > Editors > 3D**. Then, "
"under *Navigation*, search for *Navigation Scheme*."
msgstr ""
"預設的 3D 場景導覽控制方式類似 Blender（主要是希望在自由軟體的工作流程中保持"
"一致性），但你可以在「編輯器設定」中自訂滑鼠按鍵和操作行為，使其接近其他工"
"具。如果想切換成 Maya 或 Modo 的操作方式，請到 **編輯器設定 > 編輯器 > 3D**，"
"然後在 *導覽* 內搜尋 *Navigation Scheme*。"

msgid ""
"Using the default settings, the following shortcuts control how one can "
"navigate in the viewport:"
msgstr "預設情況下，以下快捷鍵可用來在檢視區中調整視角："

msgid ""
"Pressing the middle mouse button and dragging the mouse allows you to orbit "
"around the center of what is on the screen."
msgstr "按住滑鼠中鍵並拖曳，可繞螢幕中心旋轉視角。"

msgid ""
"It is also possible to left-click and hold the manipulator gizmo located on "
"the top right of the viewport to orbit around the center:"
msgstr "也可以左鍵點住檢視區右上方的操作工具，繞中心點旋轉視角："

msgid ""
"Left-clicking on one of the colored circles will set the view to the chosen "
"orthogonal and the viewport's view menu will be updated accordingly."
msgstr "左鍵點擊彩色圓圈會切換到對應的正交視角，檢視區的檢視選單也會一併更新。"

msgid ""
"If the *Perspective* view is enabled on the viewport (can be seen on the "
"viewport's View menu, not the View menu on the main toolbar), holding down "
"the right mouse button on the viewport or pressing :kbd:`Shift + F` switches "
"to \"free-look\" mode. In this mode you can move the mouse to look around, "
"use the :kbd:`W` :kbd:`A` :kbd:`S` :kbd:`D` keys to fly around the "
"view, :kbd:`E` to go up, and :kbd:`Q` to go down. To disable this mode, "
"release the right mouse button or press :kbd:`Shift + F` again."
msgstr ""
"若檢視區已啟用 *透視* 檢視（可於檢視區的檢視選單看到，非主工具列的檢視選"
"單），按住滑鼠右鍵或按 :kbd:`Shift + F` 會進入「自由視角」模式。在此模式下可"
"用滑鼠環顧四周，並以 :kbd:`W`、:kbd:`A`、:kbd:`S`、:kbd:`D` 飛行移"
"動，:kbd:`E` 向上、:kbd:`Q` 向下。放開右鍵或再次按 :kbd:`Shift + F` 可離開自"
"由視角模式。"

msgid ""
"In the free-look mode, you can temporarily increase the flying speed "
"using :kbd:`Shift` or decrease it using :kbd:`Alt`. To change and keep the "
"speed modifier use :kbd:`mouse wheel up` or :kbd:`mouse wheel down`, to "
"increase or decrease it, respectively."
msgstr ""
"在自由視角模式下，按住 :kbd:`Shift` 可暫時加快飛行速度，按住 :kbd:`Alt` 則可"
"減慢。要持續調整速度，可滾動 :kbd:`mouse wheel up` 或 :kbd:`mouse wheel "
"down` 來增減移動速度。"

msgid ""
"In orthogonal mode, holding the right mouse button will pan the view "
"instead. Use :kbd:`Keypad 5` to toggle between perspective and orthogonal "
"view."
msgstr ""
"在正交檢視下，按住右鍵則可以平移畫面。可用 :kbd:`數字鍵盤 5` 切換透視與正交檢"
"視模式。"

msgid "Using Blender-style transform shortcuts"
msgstr "使用 Blender 風格的變形快捷鍵"

msgid ""
"Since Godot 4.2, you can enable Blender-style shortcuts for translating, "
"rotating and scaling nodes. In Blender, these shortcuts are:"
msgstr ""
"自 Godot 4.2 起，你可以啟用 Blender 風格的節點平移、旋轉與縮放快捷鍵。在 "
"Blender 中，這些快捷鍵分別為："

msgid ":kbd:`G` for translating"
msgstr ":kbd:`G` 平移"

msgid ":kbd:`R` for rotating"
msgstr ":kbd:`R` 旋轉"

msgid ":kbd:`S` for scaling"
msgstr ":kbd:`S` 縮放"

msgid ""
"After pressing a shortcut key while focusing on the 3D editor viewport, move "
"the mouse or enter a number to move the selected node(s) by the specified "
"amount in 3D units. You can constrain movement to a specific axis by "
"specifying the axis as a letter, then the distance (if entering a value with "
"the keyboard)."
msgstr ""
"在 3D 編輯檢視區中按下快捷鍵後，可用滑鼠移動或直接輸入數字，讓所選節點在 3D "
"單位下移動指定距離。你也可以輸入軸向字母來限制移動方向，再接著輸入數值（如用"
"鍵盤輸入時）。"

msgid ""
"For instance, to move the selection upwards by 2.5 units, enter the "
"following sequence in order (Y+ is upwards in Godot):"
msgstr ""
"例如，若要將選取物件向上移動 2.5 單位，依序輸入以下指令（Godot 中 Y+ 為向"
"上）："

msgid ":kbd:`G`-:kbd:`Y`-:kbd:`2`-:kbd:`.`-:kbd:`5`-:kbd:`Enter`"
msgstr ":kbd:`G`-:kbd:`Y`-:kbd:`2`-:kbd:`.`-:kbd:`5`-:kbd:`Enter`"

msgid ""
"To use Blender-style transform shortcuts in Godot, go to the Editor "
"Settings' **Shortcuts** tab, then in the Spatial Editor section:"
msgstr ""
"如要在 Godot 使用 Blender 風格變形快捷鍵，請到編輯器設定的 **快捷鍵** 分頁，"
"在空間編輯器（Spatial Editor）區段進行如下設定："

msgid "Bind **Begin Translate Transformation** to :kbd:`G`."
msgstr "將 **開始平移變形** 綁定至 :kbd:`G`。"

msgid "Bind **Begin Rotate Transformation** to :kbd:`R`."
msgstr "將 **開始旋轉變形** 綁定至 :kbd:`R`。"

msgid "Bind **Begin Scale Transformation** to :kbd:`S`."
msgstr "將 **開始縮放變形** 綁定至 :kbd:`S`。"

msgid ""
"Finally, unbind **Scale Mode** so that its shortcut won't conflict with "
"**Begin Rotate Transformation**."
msgstr "最後，請解除 **縮放模式** 的快捷鍵綁定，避免與 **開始旋轉變形** 衝突。"

msgid ""
"More shortcuts can be found on "
"the :ref:`doc_default_key_mapping_shortcuts_spatial_editor` page."
msgstr ""
"更多快捷鍵請見 :ref:`doc_default_key_mapping_shortcuts_spatial_editor` 頁面。"

msgid "Node3D node"
msgstr "Node3D 節點"

msgid ""
":ref:`Node2D <class_Node2D>` is the base node for 2D. :ref:`Control "
"<class_Control>` is the base node for everything GUI. Following this "
"reasoning, the 3D engine uses the :ref:`Node3D <class_Node3D>` node for "
"everything 3D."
msgstr ""
":ref:`Node2D <class_Node2D>` 是 2D 的基礎節點。 :ref:`Control "
"<class_Control>` 是所有 GUI 的基礎節點。同理，3D 引擎使用 :ref:`Node3D "
"<class_Node3D>` 節點來處理所有 3D 內容。"

msgid ""
"Node3Ds have a local transform, which is relative to the parent node (as "
"long as the parent node is also of **or inherits from** the type Node3D). "
"This transform can be accessed as a 3×4 :ref:`Transform3D "
"<class_Transform3D>`, or as 3 :ref:`Vector3 <class_Vector3>` members "
"representing location, Euler rotation (X, Y and Z angles) and scale."
msgstr ""
"Node3D 節點有一個本地轉換（local transform），它是相對於父節點的（只要父節點"
"也是 **或繼承自** Node3D 類型）。這個轉換可以作為 3×4 的 :ref:`Transform3D "
"<class_Transform3D>` 物件存取，或透過三個 :ref:`Vector3 <class_Vector3>` 成員"
"分別代表位置、歐拉旋轉（X、Y、Z 角度）與縮放。"

msgid "3D content"
msgstr "3D 內容"

msgid ""
"Unlike 2D, where loading image content and drawing is straightforward, 3D is "
"a little more difficult. The content needs to be created with special 3D "
"tools (also called Digital Content Creation tools, or DCCs) and exported to "
"an exchange file format to be imported in Godot. This is required since 3D "
"formats are not as standardized as images."
msgstr ""
"2D 中載入圖像內容和繪圖都非常直觀，3D 則有所不同，會稍微困難一些。3D內容需要"
"使用特殊的 3D 工具（通常稱為數位內容建立工具或Digital Content Creation工具，"
"簡稱DCC）來建立，並匯出成可被 Godot 匯入的交換文件格式。這是必需的，因為 3D "
"格式不像圖像那樣標準化。"

msgid "Manually authored models (using 3D modeling software)"
msgstr "手動製作的模型（使用 3D 建模軟體）"

msgid ""
"It is possible to import 3D models in Godot created in external tools. "
"Depending on the format, you can import entire scenes (exactly as they look "
"in the 3D modeling software), including animation, skeletal rigs, blend "
"shapes, or as simple resources."
msgstr ""
"你可以將外部工具建立的 3D 模型匯入到 Godot。根據檔案格式，你可以匯入完整場景"
"（與 3D 建模軟體中所見相同），包含動畫、骨架、混合形狀等，或僅匯入單純的資"
"源。"

msgid "See :ref:`doc_importing_3d_scenes` for more on importing."
msgstr "更多關於匯入的資訊請參見 :ref:`doc_importing_3d_scenes`。"

msgid "Generated geometry"
msgstr "生成的幾何體"

msgid ""
"It is possible to create custom geometry by using the :ref:`ArrayMesh "
"<class_ArrayMesh>` resource directly. Simply create your arrays and use "
"the :ref:`ArrayMesh.add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>` function. A helper class "
"is also available, :ref:`SurfaceTool <class_SurfaceTool>`, which provides a "
"more straightforward API and helpers for indexing, generating normals, "
"tangents, etc."
msgstr ""
"通過直接使用 :ref:`ArrayMesh <class_ArrayMesh>` 資源可以建立自定義幾何體。只"
"需要建立陣列並使用 :ref:`ArrayMesh.add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>` 函式即可。也可以使用輔助"
"類 :ref:`SurfaceTool <class_SurfaceTool>`，他提供了一個更直接的 API 和幫助工"
"具，用於索引、生成法線和切線等。"

msgid ""
"In any case, this method is meant for generating static geometry (models "
"that will not be updated often), as creating vertex arrays and submitting "
"them to the 3D API has a significant performance cost."
msgstr ""
"在任何情況下，此方法都適用於生成靜態幾何體（不會經常更新的模型），因為建立頂"
"點陣列並將它們提交給 3D API 會產生顯著的性能成本。"

msgid ""
"To learn about prototyping inside Godot or using external tools, "
"see :ref:`doc_csg_tools`."
msgstr ""
"想了解如何在 Godot 內部或使用外部工具進行原型設計，請參"
"考 :ref:`doc_csg_tools`。"

msgid "Immediate geometry"
msgstr "即時幾何體"

msgid ""
"If, instead, you need to generate simple geometry that will be updated "
"often, Godot provides a special :ref:`ImmediateMesh <class_ImmediateMesh>` "
"resource that can be used in a :ref:`MeshInstance3D <class_MeshInstance3D>` "
"node. This provides an OpenGL 1.x-style immediate-mode API to create points, "
"lines, triangles, etc."
msgstr ""
"如果你需要產生會經常更新的簡單幾何體，Godot 提供了特殊的 :ref:`ImmediateMesh "
"<class_ImmediateMesh>` 資源，可用於 :ref:`MeshInstance3D "
"<class_MeshInstance3D>` 節點。它提供類似 OpenGL 1.x 即時模式的 API，可用來建"
"立點、線、三角形等。"

msgid "2D in 3D"
msgstr "3D環境中的2D"

msgid ""
"While Godot packs a powerful 2D engine, many types of games use 2D in a 3D "
"environment. By using a fixed camera (either orthogonal or perspective) that "
"does not rotate, nodes such as :ref:`Sprite3D <class_Sprite3D>` "
"and :ref:`AnimatedSprite3D <class_AnimatedSprite3D>` can be used to create "
"2D games that take advantage of mixing with 3D backgrounds, more realistic "
"parallax, lighting/shadow effects, etc."
msgstr ""
"雖然 Godot 包含強大的 2D 引擎，但許多型別的遊戲在 3D 環境中使用 2D 效果。通過"
"使用不旋轉的固定相機（正交或透視），可以使用諸如 :ref:`Sprite3D "
"<class_Sprite3D>` 和 :ref:`AnimatedSprite3D <class_AnimatedSprite3D>` 等節點"
"來建立混合了具有3D背景，更逼真的視差，光照/陰影效果等的 2D 遊戲。"

msgid ""
"The disadvantage is, of course, that added complexity and reduced "
"performance in comparison to plain 2D, as well as the lack of reference of "
"working in pixels."
msgstr ""
"當然，缺點是與普通2D相比增加了複雜性並降低了性能，並且缺乏以像素製作時的參"
"考。"

msgid "Environment"
msgstr "環境"

msgid ""
"Besides editing a scene, it is often common to edit the environment. Godot "
"provides a :ref:`WorldEnvironment <class_WorldEnvironment>` node that allows "
"changing the background color, mode (as in, put a skybox), and applying "
"several types of built-in post-processing effects. Environments can also be "
"overridden in the Camera."
msgstr ""
"除了編輯場景之外，編輯環境通常也很常見。 Godot 提供了一"
"個 :ref:`WorldEnvironment <class_WorldEnvironment>` 節點，該節點允許更改背景"
"顏色、模式（如放置一個天空盒時那樣），並應用多種型別的內建後處理效果。環境也"
"可以在相機中被覆蓋。"

msgid "Preview environment and light"
msgstr "預覽環境與光源"

msgid ""
"By default, any 3D scene that doesn't have a :ref:`WorldEnvironment "
"<class_WorldEnvironment>` node, or a :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>`, will have a preview turned on for what it's "
"missing to light the scene."
msgstr ""
"預設情況下，若 3D 場景中沒有 :ref:`WorldEnvironment "
"<class_WorldEnvironment>` 節點，或沒有 :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>`，編輯器會自動啟用預覽環境與光源。"

msgid ""
"The preview light and environment will only be visible in the scene while in "
"the editor. If you run the scene or export the project they will not affect "
"the scene."
msgstr ""
"預覽光源與環境僅會在編輯器中顯示，執行場景或匯出專案時並不會影響實際內容。"

msgid ""
"The preview light and environment can be turned on or off from the top menu "
"by clicking on their respective icon."
msgstr "你可以從頂部選單點擊對應圖示，來啟用或關閉預覽光源與環境。"

msgid ""
"The three dots dropdown menu next to those icons can be used to adjust the "
"properties of the preview environment and light if they are enabled."
msgstr ""
"這些圖示旁的三個點下拉選單，可用來調整預覽環境與光源的屬性（啟用時有效）。"

msgid ""
"The same preview sun and environment is used for every scene in the same "
"project, So only make adjustments that would apply to all of the scenes you "
"will need a preview light and environment for."
msgstr ""
"同一個專案下，所有場景都共用相同的預覽太陽與環境設定，所以請僅針對所有需要預"
"覽光源與環境的場景做適用的調整。"

msgid "Cameras"
msgstr "攝影機"

msgid ""
"No matter how many objects are placed in the 3D space, nothing will be "
"displayed unless a :ref:`Camera3D <class_Camera3D>` is also added to the "
"scene. Cameras can work in either orthogonal or perspective projections:"
msgstr ""
"無論在 3D 空間中放置了多少物件，除非也將 :ref:`Camera3D 節點 "
"<class_Camera3D>` 加入到場景中，否則將不會顯示任何內容。攝影機可以使用正交或"
"透視投影："

msgid ""
"Cameras are associated with (and only display to) a parent or grandparent "
"viewport. Since the root of the scene tree is a viewport, cameras will "
"display on it by default, but if sub-viewports (either as render target or "
"picture-in-picture) are desired, they need their own children cameras to "
"display."
msgstr ""
"相機與父視口或其祖先視口相關聯, 且僅顯示到他們上面. 由於場景樹的根是一個視"
"口, 預設情況下會在其上顯示相機, 但如果需要子視口(作為算繪目標或畫中畫), 則需"
"要自己的子相機才能顯示."

msgid ""
"When dealing with multiple cameras, the following rules are enforced for "
"each viewport:"
msgstr "處理多台相機時, 每個視口都遵循以下規則:"

msgid ""
"If no cameras are present in the scene tree, the first one that enters it "
"will become the active camera. Further cameras entering the scene will be "
"ignored (unless they are set as *current*)."
msgstr ""
"如果場景樹中沒有相機，則第一個進入的相機將成為活躍相機。進入場景的其他相機將"
"被忽略（除非它們被設定為 *current*）。"

msgid ""
"If a camera has the \"*current*\" property set, it will be used regardless "
"of any other camera in the scene. If the property is set, it will become "
"active, replacing the previous camera."
msgstr ""
"如果相機設定了“*current*”屬性，則無論場景中是否有其他相機，都會使用它。如果該"
"屬性已設定，它將變為活動狀態，取代之前的相機。"

msgid ""
"If an active camera leaves the scene tree, the first camera in tree-order "
"will take its place."
msgstr "如果活動相機離開了場景樹，則按樹形順序排列的第一台相機將取代它。"

msgid "Lights"
msgstr "燈光"

msgid ""
"The background environment emits some ambient light which appears on "
"surfaces. Still, without any light sources placed in the scene, the scene "
"will appear quite dark unless the background environment is very bright."
msgstr ""
"背景環境發出一些出現在表面的環境光。儘管如此，如果場景中沒有放置任何光源，除"
"非背景環境非常明亮，否則場景會顯得相當暗。"

msgid ""
"Most outdoor scenes have a directional light (the sun or moon), while indoor "
"scenes typically have several positional lights (lamps, torches, …). "
"See :ref:`doc_lights_and_shadows` for more information on setting up lights "
"in Godot."
msgstr ""
"大多數室外場景具有一個定向光 (太陽或月亮)，而室內場景通常有數個點光源 (燈、火"
"把等)。請參閱 :ref:`doc_lights_and_shadows` 以獲取更多關於在 Godot 中設定光源"
"的資訊。"
