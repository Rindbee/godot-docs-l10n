#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to 3D"
msgstr "3D 簡介"

msgid ""
"Creating a 3D game can be challenging. That extra Z coordinate makes many of "
"the common techniques that helped to make 2D games simpler no longer work. "
"To aid in this transition, it is worth mentioning that Godot uses similar "
"APIs for 2D and 3D. Most nodes are the same and are present in both 2D and "
"3D versions. In fact, it is worth checking the 3D platformer tutorial, or "
"the 3D kinematic character tutorials, which are almost identical to their 2D "
"counterparts."
msgstr ""
"創造一個 3D 遊戲是具有挑戰性的。多了額外的 Z 軸使得許多有助於使製作 2D 遊戲變"
"得簡單的常用技術不再起作用。為了幫助習慣這，值得一提的是，Godot 在 2D 和 3D "
"中使用了類似的API。大多數的節點都是相同的，並且存在於 2D 和 3D 版本中。事實"
"上，可以看看 3D 平台遊戲教學或 3D 動力學角色教學，這些教學大部分與 2D 遊戲相"
"同。"

msgid "Coordinate system"
msgstr "座標系"

msgid ""
"Godot uses the `metric <https://en.wikipedia.org/wiki/Metric_system>`__ "
"system for everything in 3D, with 1 unit being equal to 1 meter. Physics and "
"other areas are tuned for this scale. Therefore, attempting to use a "
"different scale is usually a bad idea (unless you know what you are doing)."
msgstr ""
"Godot 在 3D 中使用的都是 `公制(metric)<https://zh.wikipedia.org/wiki/"
"%E5%85%AC%E5%88%B6>`__ ，1 個單位等於 1 公尺。物理和其他區域都針對這個進行了"
"調整。因此，嘗試使用不同的比例通常是個壞主意（除非您知道自己在做什麼）。"

msgid ""
"When working with 3D assets, it's always best to work in the correct scale "
"(set the unit to metric in your 3D modeling software). Godot allows scaling "
"post-import and, while this works in most cases, in rare situations it may "
"introduce floating-point precision issues (and thus, glitches or artifacts) "
"in delicate areas such as rendering or physics. Make sure your artists "
"always work in the right scale!"
msgstr ""
"使用 3D 素材時，最好使用正確的比例（將 DCC 設定為公制）。 Godot 允許在匯入後"
"縮放，雖然這在大多數情況下都有效，但在極少數情況下，它可能會在算繪或物理等精"
"細領域引入浮點精度問題（會出現毛刺或失真）。所以請確保藝術家始終以正確的比例"
"工作！"

msgid ""
"The Y coordinate is used for \"up\". As for the horizontal X/Z axes, Godot "
"uses a **right-handed** coordinate system. This means that for most objects "
"that need alignment (such as lights or cameras), the Z axis is used as a "
"\"pointing towards\" direction. This convention roughly means that:"
msgstr ""
"Y座標用於 \"向上 \", 但對於大多數需要對齊的物體(如燈光, 相機, 膠囊碰撞體, 載"
"具等),Z軸用作\" 指向\"方向. 這個約定大致意味著:"

msgid "**X** is sides"
msgstr "**X** 是兩邊"

msgid "**Y** is up/down"
msgstr "**Y** 是上/下"

msgid "**Z** is front/back"
msgstr "**Z** 是前/後"

msgid "See this chart for comparison with other 3D software:"
msgstr "請參閱此圖表與其他 3D 軟體進行比較："

msgid "3D coordinate systems comparison chart"
msgstr "3D座標系對比圖"

msgid "Image by `Freya Holmér <https://twitter.com/FreyaHolmer>`__"
msgstr "圖片來源：「Freya Holmér <https://twitter.com/FreyaHolmer>」__"

msgid "Space and manipulation gizmos"
msgstr "空間與操縱小工具"

msgid "Some useful keybindings:"
msgstr "一些有用的鍵盤綁定:"

msgid "To center the view on the selected object, press :kbd:`F`."
msgstr "要將視合集中在所選物件上, 按 :kbd:`F`."

msgid "Node3D node"
msgstr "Node3D 節點"

msgid ""
":ref:`Node2D <class_Node2D>` is the base node for 2D. :ref:`Control "
"<class_Control>` is the base node for everything GUI. Following this "
"reasoning, the 3D engine uses the :ref:`Node3D <class_Node3D>` node for "
"everything 3D."
msgstr ""
":ref:`Node2D <class_Node2D>` 是 2D 的基礎節點。 :ref:`Control "
"<class_Control>` 是所有 GUI 的基礎節點。同理，3D 引擎使用 :ref:`Spatial "
"<class_Spatial>` 節點來處理所有 3D 內容。"

msgid "3D content"
msgstr "3D 內容"

msgid ""
"Unlike 2D, where loading image content and drawing is straightforward, 3D is "
"a little more difficult. The content needs to be created with special 3D "
"tools (also called Digital Content Creation tools, or DCCs) and exported to "
"an exchange file format to be imported in Godot. This is required since 3D "
"formats are not as standardized as images."
msgstr ""
"2D 中載入圖像內容和繪圖都非常直觀，3D 則有所不同，會稍微困難一些。3D內容需要"
"使用特殊的 3D 工具（通常稱為數位內容建立工具或Digital Content Creation工具，"
"簡稱DCC）來建立，並匯出成可被 Godot 匯入的交換文件格式。這是必需的，因為 3D "
"格式不像圖像那樣標準化。"

msgid "Manually authored models (using 3D modeling software)"
msgstr "手動製作的模型（使用 3D 建模軟體）"

msgid "Generated geometry"
msgstr "生成的幾何體"

msgid ""
"It is possible to create custom geometry by using the :ref:`ArrayMesh "
"<class_ArrayMesh>` resource directly. Simply create your arrays and use the :"
"ref:`ArrayMesh.add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>` function. A helper class "
"is also available, :ref:`SurfaceTool <class_SurfaceTool>`, which provides a "
"more straightforward API and helpers for indexing, generating normals, "
"tangents, etc."
msgstr ""
"通過直接使用 :ref:`ArrayMesh <class_ArrayMesh>` 資源可以建立自定義幾何體。只"
"需要建立陣列並使用 :ref:`ArrayMesh.add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`函式即可。也可以使用輔助類 :"
"ref:`SurfaceTool <class_SurfaceTool>`，他提供了一個更直接的 API 和幫助工具，"
"用於索引、生成法線和切線等。"

msgid ""
"In any case, this method is meant for generating static geometry (models "
"that will not be updated often), as creating vertex arrays and submitting "
"them to the 3D API has a significant performance cost."
msgstr ""
"在任何情況下，此方法都適用於生成靜態幾何體（不會經常更新的模型），因為建立頂"
"點陣列並將它們提交給 3D API 會產生顯著的性能成本。"

msgid "Immediate geometry"
msgstr "即時幾何體"

msgid "2D in 3D"
msgstr "3D環境中的2D"

msgid ""
"While Godot packs a powerful 2D engine, many types of games use 2D in a 3D "
"environment. By using a fixed camera (either orthogonal or perspective) that "
"does not rotate, nodes such as :ref:`Sprite3D <class_Sprite3D>` and :ref:"
"`AnimatedSprite3D <class_AnimatedSprite3D>` can be used to create 2D games "
"that take advantage of mixing with 3D backgrounds, more realistic parallax, "
"lighting/shadow effects, etc."
msgstr ""
"雖然 Godot 包含強大的 2D 引擎，但許多型別的遊戲在 3D 環境中使用 2D 效果。通過"
"使用不旋轉的固定相機（正交或透視），可以使用諸如 :ref:`Sprite3D "
"<class_Sprite3D>` 和 :ref:`AnimatedSprite3D <class_AnimatedSprite3D>` 等節點"
"來建立混合了具有3D背景，更逼真的視差，光照/陰影效果等的 2D 遊戲。"

msgid ""
"The disadvantage is, of course, that added complexity and reduced "
"performance in comparison to plain 2D, as well as the lack of reference of "
"working in pixels."
msgstr ""
"當然，缺點是與普通2D相比增加了複雜性並降低了性能，並且缺乏以像素製作時的參"
"考。"

msgid "Environment"
msgstr "環境"

msgid ""
"Besides editing a scene, it is often common to edit the environment. Godot "
"provides a :ref:`WorldEnvironment <class_WorldEnvironment>` node that allows "
"changing the background color, mode (as in, put a skybox), and applying "
"several types of built-in post-processing effects. Environments can also be "
"overridden in the Camera."
msgstr ""
"除了編輯場景之外，編輯環境通常也很常見。 Godot 提供了一個 :ref:"
"`WorldEnvironment <class_WorldEnvironment>` 節點，該節點允許更改背景顏色、模"
"式（如放置一個天空盒時那樣），並應用多種型別的內建後處理效果。環境也可以在相"
"機中被覆蓋。"

msgid "Cameras"
msgstr "攝影機"

msgid ""
"No matter how many objects are placed in the 3D space, nothing will be "
"displayed unless a :ref:`Camera3D <class_Camera3D>` is also added to the "
"scene. Cameras can work in either orthogonal or perspective projections:"
msgstr ""
"無論在 3D 空間中放置多少物體，除非在場景中新增了 :ref:`Camera "
"<class_Camera>`，否則不會顯示任何內容。相機可以在正交或透視投影中工作："

msgid ""
"Cameras are associated with (and only display to) a parent or grandparent "
"viewport. Since the root of the scene tree is a viewport, cameras will "
"display on it by default, but if sub-viewports (either as render target or "
"picture-in-picture) are desired, they need their own children cameras to "
"display."
msgstr ""
"相機與父視口或其祖先視口相關聯, 且僅顯示到他們上面. 由於場景樹的根是一個視"
"口, 預設情況下會在其上顯示相機, 但如果需要子視口(作為算繪目標或畫中畫), 則需"
"要自己的子相機才能顯示."

msgid ""
"When dealing with multiple cameras, the following rules are enforced for "
"each viewport:"
msgstr "處理多台相機時, 每個視口都遵循以下規則:"

msgid ""
"If no cameras are present in the scene tree, the first one that enters it "
"will become the active camera. Further cameras entering the scene will be "
"ignored (unless they are set as *current*)."
msgstr ""
"如果場景樹中沒有相機，則第一個進入的相機將成為活躍相機。進入場景的其他相機將"
"被忽略（除非它們被設定為 *current*）。"

msgid ""
"If a camera has the \"*current*\" property set, it will be used regardless "
"of any other camera in the scene. If the property is set, it will become "
"active, replacing the previous camera."
msgstr ""
"如果相機設定了“*current*”屬性，則無論場景中是否有其他相機，都會使用它。如果該"
"屬性已設定，它將變為活動狀態，取代之前的相機。"

msgid ""
"If an active camera leaves the scene tree, the first camera in tree-order "
"will take its place."
msgstr "如果活動相機離開了場景樹，則按樹形順序排列的第一台相機將取代它。"

msgid "Lights"
msgstr "燈光"

msgid ""
"The background environment emits some ambient light which appears on "
"surfaces. Still, without any light sources placed in the scene, the scene "
"will appear quite dark unless the background environment is very bright."
msgstr ""
"背景環境發出一些出現在表面的環境光。儘管如此，如果場景中沒有放置任何光源，除"
"非背景環境非常明亮，否則場景會顯得相當暗。"

msgid ""
"Most outdoor scenes have a directional light (the sun or moon), while indoor "
"scenes typically have several positional lights (lamps, torches, …). See :"
"ref:`doc_lights_and_shadows` for more information on setting up lights in "
"Godot."
msgstr ""
"大多數室外場景都有定向光（太陽或月亮），而室內場景通常有多個位置光（燈、手電"
"筒等）。有關在 Godot 中設定燈光的更多信息，請參閱 doc_lights_and_shadows`。"
