#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Third-person camera with spring arm"
msgstr "帶有彈簧臂的第三人稱攝影機"

msgid "Introduction"
msgstr "前言"

msgid ""
"3D games will often have a third-person camera that follows and rotates "
"around something such as a player character or a vehicle."
msgstr ""
"在 3D 遊戲中，常見的第三人稱攝影機會跟隨並繞著玩家角色或載具等物件旋轉。"

msgid ""
"In Godot, this can be done by setting a :ref:`Camera3D <class_Camera3D>` as "
"a child of a node. However, if you try this without any extra steps, you'll "
"notice that the camera clips through geometry and hides the scene."
msgstr ""
"在 Godot 中，可以將 :ref:`Camera3D <class_Camera3D>` 設為某個節點的子節點來達"
"成這個效果。不過，如果只這樣做，攝影機會穿透場景幾何並導致畫面消失。"

msgid "This is where the :ref:`SpringArm3D <class_SpringArm3D>` node comes in."
msgstr ""
"這時就可以使用 :ref:`SpringArm3D <class_SpringArm3D>` 節點來解決這個問題。"

msgid "What is a spring arm?"
msgstr "什麼是彈簧臂？"

msgid "A spring arm has two main components that affect its behavior."
msgstr "彈簧臂有兩個主要組件會影響其行為。"

msgid ""
"The \"length\" of the spring arm is how far from its global position to "
"check for collisions:"
msgstr "彈簧臂的「長度」是用來檢查碰撞時，從其全域位置往外偵測的距離："

msgid ""
"The \"shape\" of the spring arm is what it uses to check for collisions. The "
"spring arm will \"sweep\" this shape from its origin out towards its length."
msgstr ""
"彈簧臂的「形狀」則是用來檢查碰撞的碰撞體。彈簧臂會將這個形狀從其原點往長度方"
"向掃描偵測。"

msgid ""
"The spring arm tries to keep all of its children at the end of its length. "
"When the shape collides with something, the children are instead placed at "
"or near that collision point:"
msgstr ""
"彈簧臂會嘗試將它的所有子節點維持在長度的末端。如果碰撞形狀偵測到碰撞，子節點"
"就會被放置在碰撞點上或附近："

msgid "Spring arm with a camera"
msgstr "彈簧臂搭配攝影機"

msgid ""
"When a camera is placed as a child of a spring arm, a pyramid representing "
"the camera will be used as the shape."
msgstr ""
"當攝影機作為彈簧臂的子節點時，會使用一個代表攝影機的金字塔形狀作為碰撞形狀。"

msgid "This pyramid represents the **near plane** of the camera:"
msgstr "這個金字塔代表攝影機的**近裁剪面**："

msgid ""
"If the spring arm is given a specific shape, then that shape will **always** "
"be used."
msgstr "如果彈簧臂已設定特定的碰撞形狀，就會**永遠**使用該形狀。"

msgid ""
"The camera's shape is only used if the camera is a **direct child** of the "
"spring arm."
msgstr "攝影機的形狀只有在攝影機是彈簧臂的**直接子節點**時才會被使用。"

msgid ""
"If no shape is provided and the camera is not a direct child, the spring arm "
"will fall back to using a ray cast which is inaccurate for camera collisions "
"and not recommended."
msgstr ""
"如果沒有指定任何形狀且攝影機也不是直接子節點，彈簧臂會退回使用射線檢測（Ray "
"Cast），這對攝影機碰撞而言不精確，並不推薦使用。"

msgid ""
"Every physics process frame, the spring arm will perform a motion cast to "
"check if anything is collided with:"
msgstr "每個物理處理循環，彈簧臂都會進行一次移動碰撞檢查以偵測是否有碰撞發生："

msgid ""
"When the shape hits something, the camera will be placed at or near the "
"collision point:"
msgstr "當碰撞形狀撞到物件時，攝影機會被放置在碰撞點或其附近："

msgid "Setting up the spring arm and camera"
msgstr "設定彈簧臂與攝影機"

msgid "Let's add a spring arm camera setup to the platformer demo."
msgstr "我們來在平台遊戲範例中加上彈簧臂攝影機。"

msgid ""
"You can download the Platformer 3D demo on `GitHub <https://github.com/"
"godotengine/godot-demo-projects/tree/master/3d/platformer>`_ or using the "
"`Asset Library <https://godotengine.org/asset-library/asset/2748>`_."
msgstr ""
"你可以從 `GitHub <https://github.com/godotengine/godot-demo-projects/tree/"
"master/3d/platformer>`_ 或 `資源庫 <https://godotengine.org/asset-library/"
"asset/2748>`_ 下載 Platformer 3D 範例專案。"

msgid ""
"In general, for a third-person camera setup, you will have three nodes as "
"children of the node that you're following:"
msgstr ""
"通常在製作第三人稱攝影機時，會將三個節點設為玩家（或其他要跟隨物件）的子節"
"點："

msgid "`Node3D` (the \"pivot point\" for the camera)"
msgstr "`Node3D` （攝影機的「旋轉樞紐點」）"

msgid "`SpringArm3D`"
msgstr "`SpringArm3D`"

msgid "`Camera3D`"
msgstr "`Camera3D`"

msgid ""
"Open the ``player/player.tscn`` scene. Set these up as children of our "
"player and give them unique names so we can find them in our script. **Make "
"sure to delete the existing camera node!**"
msgstr ""
"打開 ``player/player.tscn`` 場景。將這三個節點設為玩家的子節點，並給它們設定"
"獨特的名稱，好讓我們在腳本中能正確取得。**記得要刪除原本的攝影機節點！**"

msgid ""
"Let's move the pivot point up by ``2`` on the Y-axis so that it's not on the "
"ground:"
msgstr "把旋轉樞紐點在 Y 軸上往上移動 ``2``，避免攝影機位於地面上："

msgid ""
"Give the spring arm a length of ``3`` so that it is placed behind the "
"character:"
msgstr "將彈簧臂長度設為 ``3``，讓攝影機位於角色後方："

msgid ""
"Leave the **Shape** of the spring arm as ``<empty>``. This way, it will use "
"the camera's pyramid shape."
msgstr ""
"彈簧臂的 **Shape** （形狀）欄位保持為 ``<empty>`` ，這樣就會使用攝影機的金字"
"塔形狀作為碰撞體。"

msgid ""
"If you want, you can also try other shapes - a sphere is a common choice "
"since it slides smoothly along edges."
msgstr ""
"你也可以嘗試其他形狀——例如球體，因為它能更平滑地沿著邊緣滑動，是常見的選擇。"

msgid ""
"Update the top of ``player/player.gd`` to grab the camera and the pivot "
"points by their unique names:"
msgstr ""
"在 ``player/player.gd`` 檔案開頭，透過獨特的名稱取得攝影機與樞紐點節點："

msgid "player/player.gd"
msgstr "player/player.gd"

msgid ""
"Add an ``_unhandled_input`` function to check for camera movement and then "
"rotate the pivot point accordingly:"
msgstr ""
"新增 ``_unhandled_input`` 函式來檢查攝影機移動輸入，並根據輸入旋轉樞紐點："

msgid ""
"By rotating the pivot point, the spring arm will also be rotated and it will "
"change where the camera is positioned. Run the game and notice that mouse "
"movement now rotates the camera around the character. If the camera moves "
"into a wall, it collides with it."
msgstr ""
"旋轉樞紐點時，彈簧臂也會跟著旋轉，進而改變攝影機的位置。執行遊戲後，你可以看"
"到滑鼠移動會讓攝影機繞著角色旋轉。如果攝影機碰到牆壁，也會正確產生碰撞效果。"
