#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Godot Android library"
msgstr "Godot Android 函式庫"

msgid ""
"The Godot Engine for Android platforms is designed to be used as an `Android "
"library <https://developer.android.com/studio/projects/android-library>`_. "
"This architecture enables several key features on Android platforms:"
msgstr ""
"Godot 引擎在 Android 平臺上被設計成可作為 `Android 函式庫 <https://"
"developer.android.com/studio/projects/android-library>`_ 使用。這種架構在 "
"Android 平臺上實現了幾項關鍵功能："

msgid ""
"Ability to integrate the Gradle build system within the Godot Editor, which "
"provides the ability to leverage more components from the Android ecosystem "
"such as libraries and tools"
msgstr ""
"可以在 Godot 編輯器內整合 Gradle 建構系統，進而運用更多 Android 生態系的函式"
"庫與工具"

msgid "Ability to make the engine portable and embeddable:"
msgstr "讓引擎具備可攜性與可嵌入性："

msgid ""
"Key in enabling the port of the Godot Editor to Android and mobile XR devices"
msgstr "這是讓 Godot 編輯器能移植到 Android 與行動 XR 裝置的關鍵"

msgid ""
"Key in allowing the integration and reuse of Godot's capabilities within "
"existing codebase"
msgstr "也是將 Godot 功能整合並重複利用於現有程式碼庫的關鍵"

msgid ""
"Below we describe some of the use-cases and scenarios this architecture "
"enables."
msgstr "以下說明這種架構能實現的部分應用情境與案例。"

msgid "Using the Godot Android library"
msgstr "使用 Godot Android 函式庫"

msgid ""
"The Godot Android library is packaged as an AAR archive file and hosted on "
"`MavenCentral <https://central.sonatype.com/artifact/org.godotengine/"
"godot>`_ along with `its documentation <https://javadoc.io/doc/"
"org.godotengine/godot/latest/index.html>`_."
msgstr ""
"Godot Android 函式庫以 AAR 封裝格式發佈，托管於 `MavenCentral <https://"
"central.sonatype.com/artifact/org.godotengine/godot>`_，同時提供 `API 文件 "
"<https://javadoc.io/doc/org.godotengine/godot/latest/index.html>`_。"

msgid ""
"It provides access to Godot APIs and capabilities on Android platforms for "
"the following non-exhaustive use-cases."
msgstr "它讓你可在 Android 平臺上存取 Godot API 與功能，應用情境包括但不限於。"

msgid "Godot Android plugins"
msgstr "Godot Android 外掛"

msgid ""
"Android plugins are powerful tools to extend the capabilities of the Godot "
"Engine by tapping into the functionality provided by Android platforms and "
"ecosystem."
msgstr ""
"Android 外掛是能擴充 Godot 引擎在 Android 平臺功能的強大工具，可利用 Android "
"生態系提供的各種功能。"

msgid ""
"An Android plugin is an Android library with a dependency on the Godot "
"Android library which the plugin uses to integrate into the engine's "
"lifecycle and to access Godot APIs, granting it powerful capabilities such "
"as GDExtension support which allows to update / mod the engine behavior as "
"needed."
msgstr ""
"Android 外掛本質上是依賴 Godot Android 函式庫的 Android 函式庫，可整合進 "
"Godot 引擎的生命週期並存取 Godot API，進而實現強大功能，例如 GDExtension 支"
"援，讓你可依需求動態擴充或修改引擎行為。"

msgid ""
"For more information, see :ref:`Godot Android plugins <doc_android_plugin>`."
msgstr "詳情請參見 :ref:`Godot Android 外掛 <doc_android_plugin>`。"

msgid "Embedding Godot in existing Android projects"
msgstr "將 Godot 嵌入現有 Android 專案"

msgid ""
"The Godot Engine can be embedded within existing Android applications or "
"libraries, allowing developers to leverage mature and battle-tested code and "
"libraries better suited to a specific task."
msgstr ""
"Godot 引擎可嵌入現有的 Android 應用程式或函式庫，讓開發者能善用既有穩定的程式"
"碼與函式庫，提升專案效率。"

msgid ""
"The hosting component is responsible for driving the engine lifecycle via "
"Godot's Android APIs. These APIs can also be used to provide bidirectional "
"communication between the host and the embedded Godot instance allowing for "
"greater control over the desired experience."
msgstr ""
"主程式負責透過 Godot 的 Android API 管理引擎生命週期。這些 API 也可用來實現主"
"程式與嵌入的 Godot 實例之間的雙向通訊，讓你更細緻地掌控整體體驗。"

msgid ""
"We showcase how this is done using a sample Android app that embeds the "
"Godot Engine as an Android view, and uses it to render 3D glTF models."
msgstr ""
"以下將以範例 Android App 說明如何將 Godot 引擎嵌入 Android 檢視元件並用於渲"
"染 3D glTF 模型。"

msgid ""
"The `GLTF Viewer <https://github.com/m4gr3d/Godot-Android-Samples/tree/"
"master/apps/gltf_viewer>`_ sample app uses an `Android RecyclerView "
"component <https://developer.android.com/develop/ui/views/layout/"
"recyclerview>`_ to create a list of glTF items, populated from `Kenney's "
"Food Kit pack <https://kenney.nl/assets/food-kit>`_. When an item on the "
"list is selected, the app's logic interacts with the embedded Godot Engine "
"to render the selected glTF item as a 3D model."
msgstr ""
"`GLTF Viewer <https://github.com/m4gr3d/Godot-Android-Samples/tree/master/"
"apps/gltf_viewer>`_ 範例 App 採用 Android 的 `RecyclerView <https://"
"developer.android.com/develop/ui/views/layout/recyclerview>`_ 元件，顯示來自 "
"`Kenney's Food Kit <https://kenney.nl/assets/food-kit>`_ 資源包的 glTF 項目清"
"單。當某項目被選取時，App 會呼叫嵌入的 Godot 引擎渲染該 3D 模型。"

msgid ""
"The sample app source code can be found `on GitHub <https://github.com/"
"m4gr3d/Godot-Android-Samples/tree/master/apps/gltf_viewer>`_. Follow the "
"instructions on `its README <https://github.com/m4gr3d/Godot-Android-Samples/"
"blob/master/apps/gltf_viewer/README.md>`_ to build and install it."
msgstr ""
"範例 App 原始碼可於 `GitHub <https://github.com/m4gr3d/Godot-Android-Samples/"
"tree/master/apps/gltf_viewer>`_ 取得，請依 `README <https://github.com/"
"m4gr3d/Godot-Android-Samples/blob/master/apps/gltf_viewer/README.md>`_ 說明進"
"行建置與安裝。"

msgid "Below we break-down the steps used to create the GLTF Viewer app."
msgstr "以下拆解 GLTF Viewer app 的製作步驟。"

msgid ""
"Currently only a single instance of the Godot Engine is supported per "
"process. You can configure the process the Android Activity runs under using "
"the `android:process attribute <https://developer.android.com/guide/topics/"
"manifest/activity-element#proc>`_."
msgstr ""
"目前每個行程僅支援一個 Godot 引擎實例。你可使用 `android:process 屬性 "
"<https://developer.android.com/guide/topics/manifest/activity-"
"element#proc>`_ 設定 Activity 所屬行程。"

msgid ""
"Automatic resizing / orientation configuration events are not supported and "
"may cause a crash. You can disable those events:"
msgstr ""
"目前不支援自動調整大小／方向等設定事件，否則可能導致當機。你可停用相關事件："

msgid ""
"By locking to a specific orientation using the `android:screenOrientation "
"attribute <https://developer.android.com/guide/topics/manifest/activity-"
"element#screen>`_."
msgstr ""
"可透過 `android:screenOrientation 屬性 <https://developer.android.com/guide/"
"topics/manifest/activity-element#screen>`_ 鎖定特定畫面方向。"

msgid ""
"By declaring that the Activity will handle these configuration events using "
"the `android:configChanges attribute <https://developer.android.com/guide/"
"topics/manifest/activity-element#config>`_."
msgstr ""
"或於 AndroidManifest.xml 宣告 Activity 將處理這些設定事件（使用 "
"`android:configChanges 屬性 <https://developer.android.com/guide/topics/"
"manifest/activity-element#config>`_）。"

msgid "1. Create the Android app"
msgstr "1. 建立 Android 應用程式"

msgid ""
"The Android sample app was created using `Android Studio <https://"
"developer.android.com/studio>`_ and using `Gradle <https://"
"developer.android.com/build>`_ as the build system."
msgstr ""
"本範例 App 是透過 `Android Studio <https://developer.android.com/studio>`_ 製"
"作，並使用 `Gradle <https://developer.android.com/build>`_ 當作建置系統。"

msgid ""
"The Android ecosystem provides multiple tools, IDEs, build systems for "
"creating Android apps so feel free to use what you're familiar with, and "
"update the steps below accordingly (contributions to this documentation are "
"welcomed as well!)."
msgstr ""
"Android 生態系提供多種工具、IDE 與建置系統可用於開發 App，請依你習慣的工具調"
"整下列步驟（也歡迎回饋本文件！）。"

msgid ""
"Set up an Android application project. It may be a brand new empty project, "
"or an existing project"
msgstr "建立一個 Android 專案，可為全新或既有專案"

msgid ""
"Add the `maven dependency for the Godot Android library <https://"
"central.sonatype.com/artifact/org.godotengine/godot>`_"
msgstr ""
"加入 `Godot Android 函式庫的 Maven 相依性 <https://central.sonatype.com/"
"artifact/org.godotengine/godot>`_"

msgid ""
"If using ``gradle``, add the following to the ``dependency`` section of the "
"app's gradle build file. Make sure to update ``<version>`` to the latest "
"version of the Godot Android library:"
msgstr ""
"若使用 ``gradle``，請將以下內容加入 app gradle 設定檔的 ``dependency`` 區段，"
"並將 ``<version>`` 換成 Godot Android 函式庫的最新版："

msgid ""
"If using ``gradle``, include the following ``aaptOptions`` configuration "
"under the ``android > defaultConfig`` section of the app's gradle build "
"file. Doing so allows ``gradle`` to include Godot's hidden directories when "
"building the app binary."
msgstr ""
"若使用 ``gradle``，請在 app gradle 設定檔的 ``android > defaultConfig`` 區段"
"加入下列 ``aaptOptions`` 設定，可讓 gradle 在建置應用程式時包含 Godot 的隱藏"
"目錄。"

msgid ""
"If your build system does not support including hidden directories, you can "
"configure the Godot project to not use hidden directories by "
"deselecting :ref:`Application > Config > Use Hidden Project Data "
"Directory<class_ProjectSettings_property_application/config/"
"use_hidden_project_data_directory>` in the Project Settings."
msgstr ""
"如果你的建置系統無法納入隱藏目錄，可在 Godot 專案設定取消勾"
"選 :ref:`Application > Config > Use Hidden Project Data "
"Directory<class_ProjectSettings_property_application/config/"
"use_hidden_project_data_directory>`，避免使用隱藏專案資料夾。"

msgid ""
"Create / update the application's Activity that will be hosting the Godot "
"Engine instance. For the sample app, this is `MainActivity <https://"
"github.com/m4gr3d/Godot-Android-Samples/blob/master/apps/gltf_viewer/src/"
"main/java/fhuyakou/godot/app/android/gltfviewer/MainActivity.kt>`_"
msgstr ""
"建立或更新託管 Godot 引擎實例的 Activity。以範例 App 而言，對應檔案為 "
"`MainActivity <https://github.com/m4gr3d/Godot-Android-Samples/blob/master/"
"apps/gltf_viewer/src/main/java/fhuyakou/godot/app/android/gltfviewer/"
"MainActivity.kt>`_"

msgid ""
"The host Activity should implement the `GodotHost interface <https://"
"github.com/godotengine/godot/blob/master/platform/android/java/lib/src/org/"
"godotengine/godot/GodotHost.java>`_"
msgstr ""
"主 Activity 應實作 `GodotHost 介面 <https://github.com/godotengine/godot/"
"blob/master/platform/android/java/lib/src/org/godotengine/godot/"
"GodotHost.java>`_"

msgid ""
"The sample app uses `Fragments <https://developer.android.com/guide/"
"fragments>`_ to organize its UI, so it uses `GodotFragment <https://"
"github.com/godotengine/godot/blob/master/platform/android/java/lib/src/org/"
"godotengine/godot/GodotFragment.java>`_, a fragment component provided by "
"the Godot Android library to automatically host and manage the Godot Engine "
"instance."
msgstr ""
"範例 App 以 `Fragments <https://developer.android.com/guide/fragments>`_ 組"
"織 UI，並採用 Godot Android 函式庫內建的 `GodotFragment <https://github.com/"
"godotengine/godot/blob/master/platform/android/java/lib/src/org/godotengine/"
"godot/GodotFragment.java>`_ 元件自動託管與管理 Godot 引擎實例。"

msgid ""
"The Godot Android library also provide `GodotActivity <https://github.com/"
"godotengine/godot/blob/master/platform/android/java/lib/src/org/godotengine/"
"godot/GodotActivity.kt>`_, an Activity component that can be extended to "
"automatically host and manage the Godot Engine instance."
msgstr ""
"Godot Android 函式庫同時提供 `GodotActivity <https://github.com/godotengine/"
"godot/blob/master/platform/android/java/lib/src/org/godotengine/godot/"
"GodotActivity.kt>`_，可直接繼承該 Activity，自動託管與管理 Godot 引擎實例。"

msgid ""
"Alternatively, applications can directly create a `Godot <https://github.com/"
"godotengine/godot/blob/master/platform/android/java/lib/src/org/godotengine/"
"godot/Godot.kt>`_ instance, host and manage it themselves."
msgstr ""
"你也可以選擇直接建立 `Godot <https://github.com/godotengine/godot/blob/"
"master/platform/android/java/lib/src/org/godotengine/godot/Godot.kt>`_ 實例，"
"自行託管與管理。"

msgid ""
"Using `GodotHost#getHostPlugins(...) <https://github.com/m4gr3d/Godot-"
"Android-Samples/blob/0e3440f357f8be5b4c63a4fe75766793199a99d0/apps/"
"gltf_viewer/src/main/java/fhuyakou/godot/app/android/gltfviewer/"
"MainActivity.kt#L55>`_, the sample app creates a `runtime GodotPlugin "
"instance <https://github.com/m4gr3d/Godot-Android-Samples/blob/master/apps/"
"gltf_viewer/src/main/java/fhuyakou/godot/app/android/gltfviewer/"
"AppPlugin.kt>`_ that's used to send :ref:`signals <doc_signals>` to the "
"``gdscript`` logic"
msgstr ""
"範例 App 透過 `GodotHost#getHostPlugins(...) <https://github.com/m4gr3d/"
"Godot-Android-Samples/blob/0e3440f357f8be5b4c63a4fe75766793199a99d0/apps/"
"gltf_viewer/src/main/java/fhuyakou/godot/app/android/gltfviewer/"
"MainActivity.kt#L55>`_ 建立一個 `執行時 GodotPlugin 實例 <https://github.com/"
"m4gr3d/Godot-Android-Samples/blob/master/apps/gltf_viewer/src/main/java/"
"fhuyakou/godot/app/android/gltfviewer/AppPlugin.kt>`_ ，用於向 GDScript 邏輯"
"發送 :ref:`signals <doc_signals>`"

msgid ""
"The runtime ``GodotPlugin`` can also be used by ``gdscript`` logic to access "
"JVM methods. For more information, see :ref:`Godot Android plugins "
"<doc_android_plugin>`."
msgstr ""
"執行時的 ``GodotPlugin`` 也可讓 GDScript 邏輯呼叫 JVM 方法。詳情請"
"見 :ref:`Godot Android 外掛 <doc_android_plugin>`。"

msgid "Add any additional logic that will be used by your application"
msgstr "新增應用程式所需的其他邏輯"

msgid ""
"For the sample app, this includes adding the `ItemsSelectionFragment "
"fragment <https://github.com/m4gr3d/Godot-Android-Samples/blob/master/apps/"
"gltf_viewer/src/main/java/fhuyakou/godot/app/android/gltfviewer/"
"ItemsSelectionFragment.kt>`_ (and related classes), a fragment used to build "
"and show the list of glTF items"
msgstr ""
"以範例 App 為例，需加入 `ItemsSelectionFragment <https://github.com/m4gr3d/"
"Godot-Android-Samples/blob/master/apps/gltf_viewer/src/main/java/fhuyakou/"
"godot/app/android/gltfviewer/ItemsSelectionFragment.kt>`_ 及相關類別，用來建"
"立與顯示 glTF 項目清單"

msgid ""
"Open the ``AndroidManifest.xml`` file, and configure the orientation if "
"needed using the `android:screenOrientation attribute <https://"
"developer.android.com/guide/topics/manifest/activity-element#screen>`_"
msgstr ""
"開啟 ``AndroidManifest.xml`` 檔案，依需要使用 `android:screenOrientation 屬"
"性 <https://developer.android.com/guide/topics/manifest/activity-"
"element#screen>`_ 設定畫面方向"

msgid ""
"If needed, disable automatic resizing / orientation configuration changes "
"using the `android:configChanges attribute <https://developer.android.com/"
"guide/topics/manifest/activity-element#config>`_"
msgstr ""
"如需停用自動調整大小／方向等設定變更，請使用 `android:configChanges 屬性 "
"<https://developer.android.com/guide/topics/manifest/activity-"
"element#config>`_"

msgid "2. Create the Godot project"
msgstr "2. 建立 Godot 專案"

msgid ""
"On Android, Godot's project files are exported to the ``assets`` directory "
"of the generated ``apk`` binary."
msgstr ""
"在 Android 平臺，Godot 專案檔案會匯出到產生的 ``apk`` 檔案中的 ``assets`` 目"
"錄下。"

msgid ""
"We leverage that architecture to bind our Android app and Godot project "
"together by creating the Godot project in the Android app's ``assets`` "
"directory."
msgstr ""
"我們可以利用這個架構，直接在 Android 專案的 ``assets`` 目錄下建立 Godot 專"
"案，將兩者整合。"

msgid ""
"Note that it's also possible to create the Godot project in a separate "
"directory and export it as a `PCK or ZIP file <https://docs.godotengine.org/"
"en/stable/tutorials/export/exporting_projects.html#pck-versus-zip-pack-file-"
"formats>`_ to the Android app's ``assets`` directory. Using this approach "
"requires passing the ``--main-pack "
"<pck_or_zip_filepath_relative_to_assets_dir>`` argument to the hosted Godot "
"Engine instance using `GodotHost#getCommandLine() <https://github.com/"
"godotengine/godot/blob/6916349697a4339216469e9bf5899b983d78db07/platform/"
"android/java/lib/src/org/godotengine/godot/GodotHost.java#L45>`_."
msgstr ""
"你也可以選擇將 Godot 專案建在獨立目錄，並匯出成 `PCK 或 ZIP 檔 <https://"
"docs.godotengine.org/en/stable/tutorials/export/exporting_projects.html#pck-"
"versus-zip-pack-file-formats>`_，再放到 Android App 的 ``assets`` 目錄。這種"
"方式需透過 `GodotHost#getCommandLine() <https://github.com/godotengine/godot/"
"blob/6916349697a4339216469e9bf5899b983d78db07/platform/android/java/lib/src/"
"org/godotengine/godot/GodotHost.java#L45>`_ 傳入 ``--main-pack <檔案路徑>`` "
"參數給 Godot 引擎。"

msgid ""
"The instructions below and the sample app follow the first approach of "
"creating the Godot project in the Android app's ``assets`` directory."
msgstr ""
"以下教學與範例 App 都採用第一種方式：直接將 Godot 專案建在 Android App 的 "
"``assets`` 目錄下。"

msgid ""
"As mentioned in the **note** above, open the Godot Editor and create a Godot "
"project directly (no subfolder) in the ``assets`` directory of the Android "
"application project"
msgstr ""
"如上方 **備註** ，請直接在 Android 專案的 ``assets`` 目錄（不需子資料夾）建"
"立 Godot 專案"

msgid ""
"See the sample app's `Godot project <https://github.com/m4gr3d/Godot-Android-"
"Samples/tree/master/apps/gltf_viewer/src/main/assets>`_ for reference"
msgstr ""
"可參考範例 App 的 `Godot 專案 <https://github.com/m4gr3d/Godot-Android-"
"Samples/tree/master/apps/gltf_viewer/src/main/assets>`_"

msgid "Configure the Godot project as desired"
msgstr "依需求設定 Godot 專案"

msgid ""
"Make sure the `orientation <https://docs.godotengine.org/en/stable/classes/"
"class_projectsettings.html#class-projectsettings-property-display-window-"
"handheld-orientation>`_ set for the Godot project matches the one set in the "
"Android app's manifest"
msgstr ""
"請確保 Godot 專案中 `orientation <https://docs.godotengine.org/en/stable/"
"classes/class_projectsettings.html#class-projectsettings-property-display-"
"window-handheld-orientation>`_ （螢幕方向）設定與 Android App 的 manifest 設"
"定一致"

msgid ""
"For Android, make sure `textures/vram_compression/import_etc2_astc <https://"
"docs.godotengine.org/en/stable/classes/class_projectsettings.html#class-"
"projectsettings-property-rendering-textures-vram-compression-import-etc2-"
"astc>`_ is set to `true`"
msgstr ""
"針對 Android，請將 `textures/vram_compression/import_etc2_astc <https://"
"docs.godotengine.org/en/stable/classes/class_projectsettings.html#class-"
"projectsettings-property-rendering-textures-vram-compression-import-etc2-"
"astc>`_ 設為 `true`"

msgid "Update the Godot project script logic as needed"
msgstr "依需求更新 Godot 專案腳本邏輯"

msgid ""
"For the sample app, the `script logic <https://github.com/m4gr3d/Godot-"
"Android-Samples/blob/master/apps/gltf_viewer/src/main/assets/main.gd>`_ "
"queries for the runtime ``GodotPlugin`` instance and uses it to register for "
"signals fired by the app logic"
msgstr ""
"範例 App 中，`main.gd <https://github.com/m4gr3d/Godot-Android-Samples/blob/"
"master/apps/gltf_viewer/src/main/assets/main.gd>`_ 腳本會查詢執行時的 "
"``GodotPlugin`` 實例，註冊接收 App 邏輯發送的 signal"

msgid ""
"The app logic fires a signal every time an item is selected in the list. The "
"signal contains the filepath of the glTF model, which is used by the "
"``gdscript`` logic to render the model."
msgstr ""
"每當清單中有項目被選取時，App 邏輯會發送一個 signal，內容包含該 glTF 模型的檔"
"案路徑，GDScript 會根據路徑渲染對應模型。"

msgid "3. Build and run the app"
msgstr "3. 建置並執行應用程式"

msgid ""
"Once you complete configuration of your Godot project, build and run the "
"Android app. If set up correctly, the host Activity will initialize the "
"embedded Godot Engine on startup. The Godot Engine will check the ``assets`` "
"directory for project files to load (unless configured to look for a ``main "
"pack``), and will proceed to run the project."
msgstr ""
"完成 Godot 專案設定後，建置並執行 Android 應用程式。若設定無誤，主 Activity "
"啟動時會初始化嵌入的 Godot 引擎，Godot 會自動從 ``assets`` 目錄載入專案（除非"
"有指定 ``main pack``），然後執行專案。"

msgid ""
"While the app is running on device, you can check `Android logcat <https://"
"developer.android.com/studio/debug/logcat>`_ to investigate any errors or "
"crashes."
msgstr ""
"App 執行期間，可透過 `Android logcat <https://developer.android.com/studio/"
"debug/logcat>`_ 檢查錯誤或當機資訊。"

msgid ""
"For reference, check the `build and install instructions <https://github.com/"
"m4gr3d/Godot-Android-Samples/blob/master/apps/gltf_viewer/README.md>`_ for "
"the GLTF Viewer sample app."
msgstr ""
"可參考 GLTF Viewer 範例的 `建置與安裝說明 <https://github.com/m4gr3d/Godot-"
"Android-Samples/blob/master/apps/gltf_viewer/README.md>`_。"
