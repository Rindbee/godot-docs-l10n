# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-20 18:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "The JavaScriptBridge Singleton"
msgstr ""

msgid ""
"In web builds, the :ref:`JavaScriptBridge <class_JavaScriptBridge>` "
"singleton allows interaction with JavaScript and web browsers, and can be "
"used to implement some functionalities unique to the web platform."
msgstr ""

#, fuzzy
msgid "Interacting with JavaScript"
msgstr "與光互動"

msgid ""
"Sometimes, when exporting Godot for the Web, it might be necessary to "
"interface with external JavaScript code like third-party SDKs, libraries, or "
"simply to access browser features that are not directly exposed by Godot."
msgstr ""

msgid ""
"The ``JavaScriptBridge`` singleton provides methods to wrap a native "
"JavaScript object into a Godot :ref:`JavaScriptObject "
"<class_JavaScriptObject>` that tries to feel natural in the context of Godot "
"scripting (e.g. GDScript and C#)."
msgstr ""

msgid ""
"The :ref:`JavaScriptBridge.get_interface() "
"<class_JavaScriptBridge_method_get_interface>` method retrieves an object in "
"the global scope."
msgstr ""

msgid ""
"The :ref:`JavaScriptBridge.create_object() "
"<class_JavaScriptBridge_method_create_object>` creates a new object via the "
"JavaScript ``new`` constructor."
msgstr ""

msgid ""
"As you can see, by wrapping JavaScript objects into ``JavaScriptObject`` you "
"can interact with them like they were native Godot objects, calling their "
"methods, and retrieving (or even setting) their properties."
msgstr ""

msgid ""
"Base types (int, floats, strings, booleans) are automatically converted "
"(floats might lose precision when converted from Godot to JavaScript). "
"Anything else (i.e. objects, arrays, functions) are seen as "
"``JavaScriptObjects`` themselves."
msgstr ""

#, fuzzy
msgid "Callbacks"
msgstr "字形退回"

msgid ""
"Calling JavaScript code from Godot is nice, but sometimes you need to call a "
"Godot function from JavaScript instead."
msgstr ""

msgid ""
"This case is a bit more complicated. JavaScript relies on garbage "
"collection, while Godot uses reference counting for memory management. This "
"means you have to explicitly create callbacks (which are returned as "
"``JavaScriptObjects`` themselves) and you have to keep their reference."
msgstr ""

msgid ""
"Arguments passed by JavaScript to the callback will be passed as a single "
"Godot ``Array``."
msgstr ""

msgid ""
"Here is another example that asks the user for the `Notification permission "
"<https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API>`__ and "
"waits asynchronously to deliver a notification if the permission is granted:"
msgstr ""

msgid "Can I use my favorite library?"
msgstr ""

msgid ""
"You most likely can. First, you have to include your library in the page. "
"You can simply customize the :ref:`Head Include "
"<doc_javascript_export_options>` during export (see below), or even :ref:"
"`write your own template <doc_customizing_html5_shell>`."
msgstr ""

msgid ""
"In the example below, we customize the ``Head Include`` to add an external "
"library (`axios <https://axios-http.com/>`__) from a content delivery "
"network, and a second ``<script>`` tag to define our own custom function:"
msgstr ""

msgid ""
"We can then access both the library and the function from Godot, like we did "
"in previous examples:"
msgstr ""

#, fuzzy
msgid "The eval interface"
msgstr "翻譯界面"

#, fuzzy
msgid ""
"The ``eval`` method works similarly to the JavaScript function of the same "
"name. It takes a string as an argument and executes it as JavaScript code. "
"This allows interacting with the browser in ways not possible with script "
"languages integrated into Godot."
msgstr ""
"在網頁建置中有實作 ``JavaScript`` 單例。該單例只提供了一個名為 ``eval`` 的方"
"法，類似 JavaScript 中相同名稱的函式。該方法接受單一字串參數，會將該字串作為 "
"JavaScript 程式碼來執行。這樣便可用 Godot 整合腳本中無法實作的方法來與瀏覽器"
"互動。"

msgid ""
"The value of the last JavaScript statement is converted to a GDScript value "
"and returned by ``eval()`` under certain circumstances:"
msgstr ""
"特定情況下，最後一個 JavaScript 陳述式的回傳值會轉換為 GDScript 值，並由 "
"``eval()`` 回傳："

msgid "JavaScript ``number`` is returned as :ref:`class_float`"
msgstr "JavaScript ``number`` 型會以 GDScript :ref:`class_float` 回傳"

msgid "JavaScript ``boolean`` is returned as :ref:`class_bool`"
msgstr "JavaScript ``bool`` 型會以 GDScript :ref:`class_bool` 回傳"

msgid "JavaScript ``string`` is returned as :ref:`class_String`"
msgstr "JavaScript ``string`` 型會以 GDScript :ref:`class_String` 回傳"

#, fuzzy
msgid ""
"JavaScript ``ArrayBuffer``, ``TypedArray``, and ``DataView`` are returned "
"as :ref:`PackedByteArray<class_PackedByteArray>`"
msgstr ""
"JavaScript ``ArrayBuffer``, ``TypedArray`` 與 ``DataView`` 型會以 GDScript :"
"ref:`class_PoolByteArray` 回傳"

msgid "Any other JavaScript value is returned as ``null``."
msgstr "其他的 JavaScript 值則會回傳為 ``null`` 。"

msgid ""
"HTML5 export templates may be :ref:`built <doc_compiling_for_web>` without "
"support for the singleton to improve security. With such templates, and on "
"platforms other than HTML5, calling ``JavaScriptBridge.eval`` will also "
"return ``null``. The availability of the singleton can be checked with the "
"``web`` :ref:`feature tag <doc_feature_tags>`:"
msgstr ""
"建置的 HTML5 匯出樣板也有可能為了提升安全性而被 :ref:`建置 "
"<doc_compiling_for_web>` 為不支援該單例的版本。當使用這種樣板或是在非 HTML5 "
"的平台上時，呼叫 ``JavaScript.eval`` 也會回傳 ``null`` 。可以通過 "
"``JavaScript`` :ref:`功能標籤` 來檢查是否可使用該單例："

msgid ""
"GDScript's multi-line strings, surrounded by 3 quotes ``\"\"\"`` as in "
"``my_func3()`` above, are useful to keep JavaScript code readable."
msgstr ""
"GDScript 的多行字串是由三個引號 ``\"\"\"`` 來包圍，如同上方 ``my_func3()`` 中"
"的範例，適用於讓 JavaScript 更容易閱讀。"

msgid ""
"The ``eval`` method also accepts a second, optional Boolean argument, which "
"specifies whether to execute the code in the global execution context, "
"defaulting to ``false`` to prevent polluting the global namespace:"
msgstr ""
"``eval`` 方法也接受第二個可選的布林參數，可以用來指定是否要在全域執行本文中執"
"行程式碼。預設值為 ``false`` ，以防止汙染全域命名空間："

#, fuzzy
msgid "Downloading files"
msgstr "下載"

msgid ""
"Downloading files (e.g. a save game) from the Godot Web export to the user's "
"computer can be done by directly interacting with JavaScript, but given it "
"is a very common use case, Godot exposes this functionality to scripting via "
"a dedicated :ref:`JavaScriptBridge.download_buffer() "
"<class_JavaScriptBridge_method_download_buffer>` function which lets you "
"download any generated buffer."
msgstr ""

#, fuzzy
msgid "Here is a minimal example on how to use it:"
msgstr "下列為有兩個骨頭的骨骼節點範例："

#, fuzzy
msgid "extends Node"
msgstr "extends"

msgid ""
"And here is a more complete example on how to download a previously saved "
"file:"
msgstr ""

msgid "Translation status"
msgstr "翻譯狀態"
