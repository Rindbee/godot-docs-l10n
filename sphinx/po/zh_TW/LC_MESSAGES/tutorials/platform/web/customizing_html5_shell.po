#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom HTML page for Web export"
msgstr "自訂 HTML 頁面用於網頁匯出"

msgid ""
"While Web export templates provide a default HTML page fully capable of "
"launching the project without any further customization, it may be "
"beneficial to create a custom HTML page. While the game itself cannot easily "
"be directly controlled from the outside yet, such page allows to customize "
"the initialization process for the engine."
msgstr ""
"雖然 Web 匯出範本已經提供了可直接啟動專案的預設 HTML 頁面，無需額外自訂，但建"
"立自訂 HTML 頁面仍可能帶來益處。即使遊戲本身目前尚無法輕易被外部直接控制，自"
"訂頁面依然可以用來調整引擎的初始化流程。"

msgid "Some use-cases where customizing the default page is useful include:"
msgstr "以下情境適合自訂預設頁面："

msgid "Loading files from a different directory than the page;"
msgstr "從與頁面不同的目錄載入檔案;"

msgid "Loading a ``.zip`` file instead of a ``.pck`` file as the main pack;"
msgstr "載入 ``.zip`` 檔案（而非 ``.pck``）作為主資源包;"

msgid "Loading the engine from a different directory than the main pack file;"
msgstr "從與主資源包不同的目錄載入引擎檔案;"

msgid ""
"Adding a click-to-play button so that games can be started in the fullscreen "
"mode;"
msgstr "加入點擊開始按鈕，讓遊戲能以全螢幕模式啟動;"

msgid ""
"Loading some extra files before the engine starts, making them available in "
"the project file system as soon as possible;"
msgstr "在引擎啟動前先載入額外檔案，以便讓這些檔案盡快於專案檔案系統中可用;"

msgid ""
"Passing custom command line arguments, e.g. ``-s`` to start a ``MainLoop`` "
"script."
msgstr "傳遞自訂命令列參數，例如 ``-s`` 來啟動 ``MainLoop`` 腳本。"

msgid ""
"The default HTML page is available in the Godot Engine repository at `/misc/"
"dist/html/full-size.html <https://github.com/godotengine/godot/blob/master/"
"misc/dist/html/full-size.html>`__ but the following template can be used as "
"a much simpler example:"
msgstr ""
"Godot Engine 預設的 HTML 頁面可於 `/misc/dist/html/full-size.html <https://"
"github.com/godotengine/godot/blob/master/misc/dist/html/full-size.html>`__ 取"
"得，下方範本則為更簡易的用法範例："

msgid "Setup"
msgstr "設定"

msgid ""
"As shown by the example above, it is mostly a regular HTML document, with "
"few placeholders which needs to be replaced during export, an html "
"``<canvas>`` element, and some simple JavaScript code that calls "
"the :js:class:`Engine` class."
msgstr ""
"如上例所示，這基本上是一個普通的 HTML 文件，包含數個於匯出時會被取代的預留字"
"串、一個 html ``<canvas>`` 元素，以及一些呼叫 :js:class:`Engine` 類別的簡易 "
"JavaScript 程式碼。"

msgid "The only required placeholders are:"
msgstr "唯一必要的預留字串如下："

msgid ""
"``$GODOT_URL``: The name of the main JavaScript file, which provides "
"the :js:class:`Engine` class required to start the engine and that must be "
"included in the HTML as a ``<script>``. The name is generated from the "
"*Export Path* during the export process."
msgstr ""
"``$GODOT_URL``：主 JavaScript 檔案的名稱，該檔案提供啟動引擎所需"
"的 :js:class:`Engine` 類別，必須以 ``<script>`` 標籤納入 HTML。此名稱於匯出過"
"程根據 *Export Path* 產生。"

msgid ""
"``$GODOT_CONFIG``: A JavaScript object, containing the export options and "
"can be later overridden. See :js:attr:`EngineConfig` for the full list of "
"overrides."
msgstr ""
"``$GODOT_CONFIG``：一個 JavaScript 物件，內含匯出選項，日後可被覆寫。完整可覆"
"寫項請參見 :js:attr:`EngineConfig`。"

msgid ""
"The following optional placeholders will enable some extra features in your "
"custom HTML template."
msgstr "下列可選預留字串可於自訂 HTML 範本中啟用額外功能。"

msgid ""
"``$GODOT_PROJECT_NAME``: The project name as defined in the :ref:`Name "
"<class_ProjectSettings_property_application/config/name>` setting in "
"**Project Settings > Application > Config**. It is a good idea to use it as "
"a ``<title>`` in your template."
msgstr ""
"``$GODOT_PROJECT_NAME``：專案名稱，來自 :ref:`Name "
"<class_ProjectSettings_property_application/config/name>` （**專案設定 > 應用"
"程式 > 設定**）。建議於範本中作為 ``<title>`` 使用。"

msgid ""
"``$GODOT_HEAD_INCLUDE``: A custom string to include in the HTML document "
"just before the end of the ``<head>`` tag. It is customized in the export "
"options under the *Html / Head Include* section. While you fully control the "
"HTML page you create, this variable can be useful for configuring parts of "
"the HTML ``head`` element from the Godot Editor, e.g. for different Web "
"export presets."
msgstr ""
"``$GODOT_HEAD_INCLUDE``：匯出選項 *Html / Head Include* 中設定的自訂字串，將"
"插入 HTML 文件的 ``<head>`` 標籤結尾前。雖然你可完全自訂 HTML 頁面內容，此變"
"數仍可協助從 Godot 編輯器動態設定不同 Web 匯出預設值時，調整 HTML head 元素內"
"容。"

msgid ""
"``$GODOT_SPLASH``: The path to the image used as the boot splash as defined "
"in the :ref:`Image <class_ProjectSettings_property_application/boot_splash/"
"image>` setting in **Project Settings > Application > Boot Splash**."
msgstr ""
"``$GODOT_SPLASH``：啟動畫面圖片的路徑，來源為 :ref:`Image "
"<class_ProjectSettings_property_application/boot_splash/image>` （**專案設定 "
"> 應用程式 > 啟動畫面**）。"

msgid ""
"``$GODOT_SPLASH_COLOR`` The splash screen background color as defined in "
"the :ref:`BG Color <class_ProjectSettings_property_application/boot_splash/"
"bg_color>` setting in **Project Settings > Application > Boot Splash**, "
"converted to a hex color code."
msgstr ""
"``$GODOT_SPLASH_COLOR``：啟動畫面背景顏色，來源為 :ref:`BG Color "
"<class_ProjectSettings_property_application/boot_splash/bg_color>` （**專案設"
"定 > 應用程式 > 啟動畫面**），會自動轉換為十六進位色碼。"

msgid ""
"``$GODOT_SPLASH_CLASSES``: This placeholder provides a string of setting "
"names and their values, which affect the splash screen. This string is meant "
"to be used as a set of CSS class names, which allows styling the splash "
"image based on the splash project settings. The following settings from "
"**Project Settings > Application > Boot Splash** are provided, represented "
"by the class names shown below depending on the setting's boolean value:"
msgstr ""
"``$GODOT_SPLASH_CLASSES``：此預留字串會產生一組影響啟動畫面的設定名稱與值，作"
"為 CSS 類名可應用於啟動畫面的樣式，讓你依據專案設定自訂畫面外觀。下列 **專案"
"設定 > 應用程式 > 啟動畫面** 選項，會對應成 CSS 類名："

msgid ""
":ref:`Show Image <class_ProjectSettings_property_application/boot_splash/"
"show_image>`: ``show-image--true``, ``show-image--false``"
msgstr ""
":ref:`Show Image <class_ProjectSettings_property_application/boot_splash/"
"show_image>`：``show-image--true``、``show-image--false``"

msgid ""
":ref:`Fullsize <class_ProjectSettings_property_application/boot_splash/"
"fullsize>`: ``fullsize--true``, ``fullsize--false``"
msgstr ""
":ref:`Fullsize <class_ProjectSettings_property_application/boot_splash/"
"fullsize>`：``fullsize--true``、``fullsize--false``"

msgid ""
":ref:`Use Filter <class_ProjectSettings_property_application/boot_splash/"
"use_filter>`: ``use-filter--true``, ``use-filter--false``"
msgstr ""
":ref:`Use Filter <class_ProjectSettings_property_application/boot_splash/"
"use_filter>`：``use-filter--true``、``use-filter--false``"

msgid ""
"When the custom page is ready, it can be selected in the export options "
"under the *Html / Custom Html Shell* section."
msgstr "自訂頁面準備好後，可於匯出選項 *Html / Custom Html Shell* 指定使用。"

msgid "Starting the project"
msgstr "啟動專案"

msgid ""
"To be able to start the game, you need to write a script that initializes "
"the engine — the control code. This process consists of three steps, but as "
"shown here, most of them can be skipped depending on how much customization "
"is needed."
msgstr ""
"要啟動遊戲，你需撰寫一段初始化引擎的腳本（控制邏輯）。此流程共分三步，實際上"
"視自訂需求大多可略過，採用預設行為即可。"

msgid ""
"See the :ref:`HTML5 shell class reference <doc_html5_shell_classref>`, for "
"the full list of methods and options available."
msgstr ""
"完整方法與選項請參考 :ref:`HTML5 shell 類別參考文件 "
"<doc_html5_shell_classref>`。"

msgid ""
"First, the engine must be loaded, then it needs to be initialized, and after "
"this the project can finally be started. You can perform every of these "
"steps manually and with great control. However, in the simplest case all you "
"need to do is to create an instance of the :js:class:`Engine` class with the "
"exported configuration, and then call the :js:meth:`engine.startGame "
"<Engine.prototype.startGame>` method optionally overriding "
"any :js:attr:`EngineConfig` parameters."
msgstr ""
"首先需載入引擎，再進行初始化，最後方能啟動專案。你可以完全手動控制每一步。但"
"最簡單的情境下，只需以匯出的設定建立 :js:class:`Engine` 實例，然後呼"
"叫 :js:meth:`engine.startGame <Engine.prototype.startGame>` 方法，有需要時可"
"覆寫任一 :js:attr:`EngineConfig` 參數。"

msgid ""
"This snippet of code automatically loads and initializes the engine before "
"starting the game. It uses the given configuration to load the engine. "
"The :js:meth:`engine.startGame <Engine.prototype.startGame>` method is "
"asynchronous and returns a ``Promise``. This allows your control code to "
"track if the game was loaded correctly without blocking execution or relying "
"on polling."
msgstr ""
"這段範例程式會在啟動遊戲前自動載入並初始化引擎，並以指定的設定檔載"
"入。:js:meth:`engine.startGame <Engine.prototype.startGame>` 方法為非同步，會"
"回傳一個 ``Promise``，讓你的控制邏輯能追蹤遊戲載入狀況，而不會阻塞執行或需要"
"輪詢。"

msgid ""
"In case your project needs to have special control over the start arguments "
"and dependency files, the :js:meth:`engine.start <Engine.prototype.start>` "
"method can be used instead. Note, that this method do not automatically "
"preload the ``pck`` file, so you will probably want to manually preload it "
"(and any other extra file) via the :js:meth:`engine.preloadFile "
"<Engine.prototype.preloadFile>` method."
msgstr ""
"若你的專案需精確控制啟動參數及相依檔案，可改用 :js:meth:`engine.start "
"<Engine.prototype.start>` 方法。注意：此方法不會自動預載入 ``pck`` 檔案，你必"
"須自行呼叫 :js:meth:`engine.preloadFile <Engine.prototype.preloadFile>` 以預"
"載入主資源包和其他檔案。"

msgid ""
"Optionally, you can also manually :js:meth:`engine.init "
"<Engine.prototype.init>` to perform specific actions after the module "
"initialization, but before the engine starts."
msgstr ""
"你也可以選擇在模組初始化後、引擎啟動前，手動呼叫 :js:meth:`engine.init "
"<Engine.prototype.init>` 執行特定動作。"

msgid ""
"This process is a bit more complex, but gives you full control over the "
"engine startup process."
msgstr "這種做法雖較複雜，但會讓你完全掌控引擎啟動流程。"

msgid ""
"To load the engine manually the :js:meth:`Engine.load` static method must be "
"called. As this method is static, multiple engine instances can be spawned "
"if the share the same ``wasm``."
msgstr ""
"若要手動載入引擎，需呼叫 :js:meth:`Engine.load` 靜態方法。此方法為靜態函式，"
"只要共用同一份 ``wasm``，即可建立多個引擎實例。"

msgid ""
"Multiple instances cannot be spawned by default, as the engine is "
"immediately unloaded after it is initialized. To prevent this from happening "
"see the :js:attr:`unloadAfterInit` override option. It is still possible to "
"unload the engine manually afterwards by calling "
"the :js:meth:`Engine.unload` static method. Unloading the engine frees "
"browser memory by unloading files that are no longer needed once the "
"instance is initialized."
msgstr ""
"預設下無法同時建立多個實例，因為引擎初始化完成後會立即卸載。如需避免此行為，"
"請參考 :js:attr:`unloadAfterInit` 覆寫選項。你仍可隨時手動呼"
"叫 :js:meth:`Engine.unload` 靜態方法移除引擎，以釋放初始化後不再需要的檔案與"
"瀏覽器記憶體。"

msgid "Customizing the behavior"
msgstr "自訂行為"

msgid ""
"In the Web environment several methods can be used to guarantee that the "
"game will work as intended."
msgstr "在 Web 環境下，可採用多種方法確保遊戲能如預期運作。"

msgid ""
"If you target a specific version of WebGL, or just want to check if WebGL is "
"available at all, you can call the :js:meth:`Engine.isWebGLAvailable` "
"method. It optionally takes an argument that allows to test for a specific "
"major version of WebGL."
msgstr ""
"若需指定 WebGL 目標版本，或僅需檢查 WebGL 是否可用，可呼"
"叫 :js:meth:`Engine.isWebGLAvailable` 方法。此方法可帶參數測試特定 WebGL 主版"
"本。"

msgid ""
"As the real executable file does not exist in the Web environment, the "
"engine only stores a virtual filename formed from the base name of loaded "
"engine files. This value affects the output of "
"the :ref:`OS.get_executable_path() <class_OS_method_get_executable_path>` "
"method and defines the name of the automatically started main pack. "
"The :js:attr:`executable` override option can be used to override this value."
msgstr ""
"由於 Web 環境無法存在實體可執行檔，引擎僅會儲存由載入檔案基底名稱組成的虛擬檔"
"名。這個值會影響 :ref:`OS.get_executable_path() "
"<class_OS_method_get_executable_path>` 方法的回傳結果，同時也決定自動啟動的主"
"資源包名稱。可使用 :js:attr:`executable` 覆寫選項調整此設定。"

msgid "Customizing the presentation"
msgstr "自訂呈現方式"

msgid ""
"Several configuration options can be used to further customize the look and "
"behavior of the game on your page."
msgstr "可透過多項設定選項進一步自訂遊戲在頁面上的外觀與行為。"

msgid ""
"By default, the first canvas element on the page is used for rendering. To "
"use a different canvas element the :js:attr:`canvas` override option can be "
"used. It requires a reference to the DOM element itself."
msgstr ""
"預設會使用頁面上的第一個 canvas 元素進行繪製。如需指定其他 canvas，請使"
"用 :js:attr:`canvas` 覆寫選項，並傳入目標 DOM 元素參照。"

msgid ""
"The way the engine resize the canvas can be configured via "
"the :js:attr:`canvasResizePolicy` override option."
msgstr ""
"引擎調整畫布（canvas）尺寸的方式可透過 :js:attr:`canvasResizePolicy` 覆寫選項"
"設定。"

msgid ""
"If your game takes some time to load, it may be useful to display a custom "
"loading UI which tracks the progress. This can be achieved with "
"the :js:attr:`onProgress` callback option, which allows to set up a callback "
"function that will be called regularly as the engine loads new bytes."
msgstr ""
"若遊戲載入時間較長，建議提供自訂載入 UI 顯示進度。可利"
"用 :js:attr:`onProgress` 回呼選項，設定一個函式於載入新資料時被定期呼叫，以顯"
"示即時進度。"

msgid ""
"Be aware that in some cases ``total`` can be ``0``. This means that it "
"cannot be calculated."
msgstr "請注意，有些情況下 ``total`` 可能為 ``0``，代表無法計算總進度。"

msgid ""
"If your game supports multiple languages, the :js:attr:`locale` override "
"option can be used to force a specific locale, provided you have a valid "
"language code string. It may be good to use server-side logic to determine "
"which languages a user may prefer. This way the language code can be taken "
"from the ``Accept-Language`` HTTP header, or determined by a GeoIP service."
msgstr ""
"若遊戲支援多語言，可用 :js:attr:`locale` 覆寫選項強制指定語系（需提供有效語言"
"代碼字串）。建議於伺服器端判斷用戶偏好語言，如從 HTTP 標頭 ``Accept-"
"Language`` 取得，或利用 GeoIP 服務判別。"

msgid "Debugging"
msgstr "除錯"

msgid ""
"To debug exported projects, it may be useful to read the standard output and "
"error streams generated by the engine. This is similar to the output shown "
"in the editor console window. By default, standard ``console.log`` and "
"``console.warn`` are used for the output and error streams respectively. "
"This behavior can be customized by setting your own functions to handle "
"messages."
msgstr ""
"若需除錯匯出專案，可讀取引擎產生的標準輸出與錯誤訊息流，這類似於編輯器主控台"
"的訊息。預設分別使用 ``console.log`` 與 ``console.warn`` 處理輸出與錯誤訊息。"
"你亦可自訂函式來接收處理這些訊息。"

msgid ""
"Use the :js:attr:`onPrint` override option to set a callback function for "
"the output stream, and the :js:attr:`onPrintError` override option to set a "
"callback function for the error stream."
msgstr ""
"使用 :js:attr:`onPrint` 覆寫選項指定輸出流回呼函式，"
"用 :js:attr:`onPrintError` 覆寫選項指定錯誤流回呼函式。"

msgid ""
"When handling the engine output, keep in mind that it may not be desirable "
"to print it out in the finished product."
msgstr "處理引擎輸出時，請注意正式發佈時通常不建議直接顯示這些訊息。"
