#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Requirements"
msgstr "必要条件"

msgid ""
"For compiling under Linux or other Unix variants, the following is required:"
msgstr ""
"Linux またはその他の Unix バリアントでコンパイルするには、次のことが必要です:"

msgid "*Optional* - libudev (build with ``udev=yes``)."
msgstr "*任意* - libudev (``udev=yes`` でのビルドに)。"

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"Godotにおける基本的なSconsの使い方については、\\ :ref:"
"`doc_introduction_to_the_buildsystem`\\ を参照してください。"

msgid "Distro-specific one-liners"
msgstr "ディストリビューション固有のワンライナー"

msgid "Compiling"
msgstr "コンパイル"

msgid ""
"Start a terminal, go to the root dir of the engine source code and type:"
msgstr ""
"ターミナルを起動し、エンジンソースコードのルートディレクトリに移動し、次のよ"
"うに入力します:"

msgid "If you wish to compile using Clang rather than GCC, use this command:"
msgstr ""
"GCCではなくClangを使用してコンパイルする場合は、次のコマンドを使用します:"

msgid "Building export templates"
msgstr "エクスポートテンプレートの構築"

msgid ""
"Linux binaries usually won't run on distributions that are older than the "
"distribution they were built on. If you wish to distribute binaries that "
"work on most distributions, you should build them on an old distribution "
"such as Ubuntu 16.04. You can use a virtual machine or a container to set up "
"a suitable build environment."
msgstr ""
"Linuxのバイナリは通常、ビルドしたディストリビューションより古いディストリ"
"ビューションでは動きません。もし大抵のディストリビューションで動作するバイナ"
"リを配布したいなら、Ubuntu 16.04のような古いディストリビューションでビルドす"
"るべきでしょう。バーチャルマシンやコンテナを使えば、適切なビルド環境をセット"
"アップできます。"

msgid "(32 bits)"
msgstr "(32ビット)"

msgid "(64 bits)"
msgstr "(64ビット)"

msgid ""
"Note that cross-compiling for the opposite bits (64/32) as your host "
"platform is not always straight-forward and might need a chroot environment."
msgstr ""
"注意点として、現在のホスト プラットフォームの反対のビット(64/32)へのクロスコ"
"ンパイルは、簡単にいくとは限らず、chroot環境が必要になるかもしれません。"

msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your binaries as custom export templates "
"here:"
msgstr ""
"ただし、カスタムモジュールまたはカスタムC++ コードを作成する場合は、ここでカ"
"スタムエクスポート テンプレートとしてバイナリを構成する必要があります:"

msgid ""
"You don't even need to copy them, you can just reference the resulting files "
"in the ``bin/`` directory of your Godot source folder, so the next time you "
"build, you automatically have the custom templates referenced."
msgstr ""
"この場合はコピーする必要はなく、Godotのソースフォルダ内にある ``bin\\`` ディ"
"レクトリに出力されたファイルを指定するだけです。こうすれば、次にビルドした時"
"も、自動的にカスタム テンプレートを参照するようになります。"

msgid "Using Clang and LLD for faster development"
msgstr "ClangとLLDを使用して開発を高速化する"

msgid ""
"You can also use Clang and LLD to build Godot. This has two upsides compared "
"to the default GCC + GNU ld setup:"
msgstr ""
"ClangとLLDを使用してGodotを構築することもできます。これには、デフォルトのGCC "
"+ GNU ldセットアップと比較して2つの利点があります:"

msgid ""
"LLD links Godot significantly faster compared to GNU ld or gold. This leads "
"to faster iteration times."
msgstr ""
"LLDは、GNU ldまたはgoldと比較してGodotを大幅に高速にリンクします。これによ"
"り、反復時間が短縮されます。"

msgid "Clang tends to give more useful error messages compared to GCC."
msgstr "Clangは、GCCよりも有用なエラーメッセージを提供する傾向があります。"

msgid ""
"To do so, install Clang and the ``lld`` package from your distribution's "
"package manager then use the following SCons command::"
msgstr ""
"これを行うには、ディストリビューションのパッケージマネージャーからClangと "
"``lld`` パッケージをインストールし、次のSConsコマンドを使用します:"

msgid ""
"It's still recommended to use GCC for production builds as they can be "
"compiled using link-time optimization, making the resulting binaries smaller "
"and faster."
msgstr ""
"リンク時最適化を使用してコンパイルし、結果のバイナリをより小さく、より高速に"
"することができるため、プロダクションビルドにはGCCを使用することをお勧めしま"
"す。"

msgid "**Fedora**"
msgstr "**Fedora**"

msgid "Translation status"
msgstr "翻訳ステータス"
