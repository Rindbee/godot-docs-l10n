#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Best practices for engine contributors"
msgstr "エンジン貢献者のベストプラクティス"

msgid "Introduction"
msgstr "はじめに"

msgid "Language"
msgstr "言語:"

msgid ""
"Contributions are most of the time categorized as bug fixes, enhancements or "
"new features. To abstract this idea, we will call them *Solutions*, because "
"they always seek to solve something that can be described as a *Problem*."
msgstr ""
"貢献は、ほとんどの場合、バグ修正、機能強化、または新機能として分類されます。"
"この考えを抽象化するために、私たちはそれらを *解決策* と呼びます。なぜなら、"
"彼らは常に *問題* として記述できる何かを解決しようとするからです。"

msgid "Best Practices"
msgstr "ベストプラクティス"

msgid "#1: The problem always comes first"
msgstr "#1: 問題は常に最初に来る"

msgid "I think it would be useful for users to..."
msgstr "私はそれがユーザーのために有用であると思います..."

msgid "I think users will eventually need to..."
msgstr "ユーザーは最終的に必要になると思います..."

msgid "#3: The problem has to be complex or frequent"
msgstr "#3: 問題は複雑または頻繁である必要があります"

msgid "The complexity of the problem"
msgstr "問題の複雑さ"

msgid "The frequency the problem"
msgstr "問題の頻度"

msgid "#4: The solution must be discussed with others"
msgstr "#4: 解決策は他のユーザーと話し合う必要があります"

msgid "#5: To each problem, its own solution"
msgstr "#5: それぞれの問題に対して、独自の解決策"

msgid ""
"The situation will often take a turn for the worse when, in order to make "
"this solution appear even more fantastic and flexible, the pure speculation-"
"based problems (as described in #2) also make their appearance on stage."
msgstr ""
"この解決策をさらにすてきで柔軟に見せるために、純粋な投機ベースの問題(#2で説"
"明)もステージに登場させてしまうと、状況はしばしば悪化します。"

msgid "#6: Cater to common use cases, leave the door open for the rare ones"
msgstr ""
"#6: 一般的なユースケースに対応し、まれなケースにはドアを開けたままにする"

msgid ""
"This is a continuation of the previous point, which further explains why "
"this way of thinking and designing software is preferred."
msgstr ""
"これは前のポイントの続きであり、この考え方とソフトウェアの設計方法が好まれる"
"理由をさらに説明しています。"

msgid ""
"As mentioned before (in point #2), it is very difficult for us (as human "
"beings who design software) to actually understand all future user needs. "
"Trying to write very flexible structures that cater to many use cases at "
"once is often a mistake."
msgstr ""
"前(ポイント#2)に述べたように、私たち(ソフトウェアを設計する人間)が将来のすべ"
"てのユーザーのニーズを実際に理解することは非常に困難です。一度に多くのユース"
"ケースに対応する非常に柔軟な構造を作成しようとすることは、しばしば間違いで"
"す。"

msgid ""
"In real-life scenarios, these use cases will be at most rare and uncommon "
"anyway, so it makes sense a custom solution needs to be written. This is why "
"it's important to still provide users the basic building blocks to do it."
msgstr ""
"実際のシナリオでは、これらのユース ケースはほとんどまれで珍しいので、独自で解"
"決策を記述する必要があります。そのため、基本的な構成要素をユーザーに提供する"
"ことが重要です。"

msgid ""
"When looking for a solution to a problem, be it implementing a new feature "
"or fixing a bug, sometimes the easiest path is to add data or a new function "
"in the core layers of code."
msgstr ""
"問題の解決策を探しているとき、新しい機能の実装であれバグの修正であれ、コード"
"のコアレイヤーにデータや新しい関数を追加することが最も簡単な場合があります。"

msgid ""
"The main problem here is, adding something to the core layers that will only "
"be used from a single location far away will not only make the code more "
"difficult to follow (split in two), but also make the core API larger, more "
"complex, more difficult to understand in general."
msgstr ""
"ここでの主な問題は、遠く離れた単一の場所からしか使用されない何かをコアレイ"
"ヤーに追加すると、コードを追跡するのが難しくなる(2つに分割される)だけでなく、"
"コアAPIがより大きく、より複雑になり、一般的に理解するのがより困難になることで"
"す。"

msgid "#8: Don't use complex canned solutions for simple problems"
msgstr "#8: 単純な問題に複雑な解決策パックを使用しない"
