#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Binding to external libraries"
msgstr "外部ライブラリへのバインド"

msgid "Modules"
msgstr "モジュール"

msgid ""
"To bind to an external library, set up a module directory similar to the "
"Summator example:"
msgstr ""
"外部ライブラリにバインドするには、Summatorの例のようなモジュールディレクトリ"
"をセットアップします:"

msgid "And then you'll add the cpp file."
msgstr "そして、cppファイルを追加します。"

msgid ""
"Just as before, the new class needs to be registered somehow, so two more "
"files need to be created:"
msgstr ""
"前と同じように、新しいクラスを何らかの方法で登録する必要があるため、さらに2つ"
"のファイルを作成する必要があります:"

msgid ""
"If you don't want the external repository source files committed to your "
"repository, you can link to them instead by adding them as submodules (from "
"within the modules/tts/ directory), as seen below:"
msgstr ""
"外部リポジトリのソースファイルをリポジトリにコミットしたくない場合は、以下に"
"示すように(modules/tts/ディレクトリ内から)サブモジュールとして追加することに"
"より、外部リポジトリソースファイルにリンクできます:"

msgid ""
"To add include directories for the compiler to look at you can append it to "
"the environment's paths:"
msgstr ""
"コンパイラが見るインクルードディレクトリを追加するには、環境のパスに追加しま"
"す:"

msgid ""
"If you want to add custom compiler flags when building your module, you need "
"to clone `env` first, so it won't add those flags to whole Godot build "
"(which can cause errors). Example `SCsub` with custom flags:"
msgstr ""
"モジュールのビルド時にカスタムコンパイラフラグを追加する場合は、最初に `env` "
"のクローンを作成する必要があるので、これらのフラグはGodotビルド全体に追加され"
"ません(エラーが発生する可能性があります)。カスタムフラグを使用した `SCsub` の"
"例:"

msgid "The final module should look like this:"
msgstr "最終的なモジュールは次のようになります:"

msgid "Using the module"
msgstr "モジュールの使用"

msgid "You can now use your newly created module from any script:"
msgstr "これで、任意のスクリプトから新しく作成したモジュールを使用できます:"

msgid "And the output will be ``is_spoken: True`` if the text is spoken."
msgstr "テキストが読み上げられた場合、出力は ``is_spoken: True`` になります。"
