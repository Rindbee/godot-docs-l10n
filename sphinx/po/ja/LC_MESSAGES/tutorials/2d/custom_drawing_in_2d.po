#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom drawing in 2D"
msgstr "2Dカスタム描画"

msgid "Introduction"
msgstr "はじめに"

msgid "Drawing"
msgstr "描画"

msgid "Updating"
msgstr "描画の更新"

msgid "Tools"
msgstr "ツール"

msgid "You should now be able to see the following shape on screen:"
msgstr "画面上に次の図形が表示されるはずです:"

msgid ""
"Note that if multiple unconnected lines are going to be drawn at the same "
"time, you may get additional performance by drawing all of them in a single "
"call, using the :ref:`draw_multiline "
"<class_CanvasItem_method_draw_multiline>` method."
msgstr ""
"連結されていない複数の線を同時に描画する場合は、 :ref:`draw_multiline "
"<class_CanvasItem_method_draw_multiline>` メソッドを使用して、1回の呼び出しで"
"すべての線を描画することで、パフォーマンスが向上することに注意してください。"

msgid "Animation"
msgstr "アニメーション"

msgid ""
"In this example we obtain the position of the mouse in the default viewport "
"every frame with the method :ref:`get_mouse_position "
"<class_Viewport_method_get_mouse_position>`. If the position has changed "
"since the last draw request (a small optimization to avoid redrawing on "
"every frame)- we will schedule a redraw. Our ``_draw()`` method only has one "
"line: requesting the drawing of a green line of width 10 pixels between the "
"top left corner and that obtained position."
msgstr ""
"この例ではデフォルトビューポート内のマウスの位置を毎フレーム"
"\\ :ref:`get_mouse_position <class_Viewport_method_get_mouse_position>` メ"
"ソッドで取得しています。前回のdrawリクエストから位置が変わった場合(毎フレーム"
"の再描画を避ける小さい最適化です)、再描画をスケジュールします。この例の "
"``_draw()`` メソッドは線を一行だけ、緑色で10ピクセルの幅、左上の角から取得し"
"た位置までの間に描画します。"
