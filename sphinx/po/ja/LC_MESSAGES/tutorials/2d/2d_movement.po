#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D movement overview"
msgstr "2D移動の概要"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"Every beginner has been there: \"How do I move my character?\" Depending on "
"the style of game you're making, you may have special requirements, but in "
"general the movement in most 2D games is based on a small number of designs."
msgstr ""
"初心者はみんな、こう考えます: 「どうやってキャラクターを動かすの？」作成して"
"いるゲームのスタイルによっては、特別な要件がある場合がありますが、一般的に、"
"ほとんどの2Dゲームの動きは少数のデザインに基づいています。"

msgid "Setup"
msgstr "セットアップ"

msgid ""
"Open ``Project -> Project Settings`` and select the \"Input Map\" tab. Add "
"the following input actions (see :ref:`InputEvent <doc_inputevent>` for "
"details):"
msgstr ""
"``プロジェクト → プロジェクト設定`` を開き、[入力マップ]タブを選択します。次"
"の入力アクションを追加します(詳細については、\\ :ref:`InputEvent "
"<doc_inputevent>` を参照してください):"

msgid "8-way movement"
msgstr "8方向移動"

msgid ""
"In this scenario, you want the user to press the four directional keys (up/"
"left/down/right or W/A/S/D) and move in the selected direction. The name \"8-"
"way movement\" comes from the fact that the player can move diagonally by "
"pressing two keys at the same time."
msgstr ""
"このシナリオでは、ユーザが8方向キー(上/左/下/右またはW/A/S/D)を押して、選択し"
"た方向に移動するようにします。「8方向移動」という名称は、2つのキーを同時に押"
"すことでプレイヤーが斜めに移動できることに由来しています。"

msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`."
msgstr ""
"以前にベクトル演算を使用したことがない場合、あるいは忘れてしまった場合"
"は、\\ :ref:`doc_vector_math` でGodotのベクトル使用の説明をみることができま"
"す。"

msgid "Rotation + movement"
msgstr "回転+移動"

msgid ""
"This type of movement is sometimes called \"Asteroids-style\" because it "
"resembles how that classic arcade game worked. Pressing left/right rotates "
"the character, while up/down moves it forward or backward in whatever "
"direction it's facing."
msgstr ""
"このタイプの動きは、昔ながらのアーケードゲームの仕組みに似ているため、 "
"\"Asteroids-style\" と呼ばれることもあります。左/右を押すとキャラクタが回転"
"し、上/下を押すとキャラクタの向きに関係なく前後に移動します。"

msgid "Rotation + movement (mouse)"
msgstr "回転+移動(マウス)"

msgid ""
"This style of movement is a variation of the previous one. This time, the "
"direction is set by the mouse position instead of the keyboard. The "
"character will always \"look at\" the mouse pointer. The forward/back inputs "
"remain the same, however."
msgstr ""
"この動作スタイルは、前の動作スタイルのバリエーションです。 今回は、キーボード"
"の代わりにマウスの位置によって方向が設定されます。 キャラクタは常にマウスポイ"
"ンタを \"見ます\" 。ただし、フォワード/バック入力は同じままです。"

msgid "Click-and-move"
msgstr "クリックと移動"

msgid ""
"This last example uses only the mouse to control the character. Clicking on "
"the screen will cause the player to move to the target location."
msgstr ""
"この最後の例では、マウスのみを使用してキャラクタを制御します。画面上でクリッ"
"クすると、プレイヤーが目的の場所に移動します。"

msgid ""
"Note the ``distance_to()`` check we make prior to movement. Without this "
"test, the body would \"jitter\" upon reaching the target position, as it "
"moves slightly past the position and tries to move back, only to move too "
"far and repeat."
msgstr ""
"移動前に行う ``distance_to()`` チェックに注意してください。このテストを行わな"
"いと、身体は目標位置に到達すると、位置をわずかに越えて前後に移動しようとする"
"ので、動き過ぎを繰り返す「ジッタ」を起こします。"

msgid ""
"Uncommenting the ``look_at()`` line will also turn the body to point in its "
"direction of motion if you prefer."
msgstr ""
"好みに応じて ``look_at()`` 行のコメントを外すと、ボディが動きの方向を指すよう"
"に回転します。"

msgid ""
"This technique can also be used as the basis of a \"following\" character. "
"The ``target`` position can be that of any object you want to move to."
msgstr ""
"このテクニックは、 \"following\" キャラクタの基礎としても使用できます。"
"``target`` 位置には、移動先の任意のオブジェクトの位置を指定できます。"

msgid "Summary"
msgstr "概要"

msgid ""
"You may find these code samples useful as starting points for your own "
"projects. Feel free to use them and experiment with them to see what you can "
"make."
msgstr ""
"これらのコードサンプルは、独自のプロジェクトの開始点として便利です。ご自由に"
"使って、どんなものが作れるか試してみてください。"

msgid "Translation status"
msgstr "翻訳ステータス"
