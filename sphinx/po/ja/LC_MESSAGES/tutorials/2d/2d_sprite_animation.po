#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"In this scenario, you have a collection of images, each containing one of "
"your character's animation frames. For this example, we'll use the following "
"animation:"
msgstr ""
"このシナリオでは、キャラクターのアニメーションフレームを1つづつ含む複数の画像"
"を使います。この例では、次のアニメーションを使用します:"

msgid ""
"Unzip the images and place them in your project folder. Set up your scene "
"tree with the following nodes:"
msgstr ""
"画像を解凍し、プロジェクトフォルダに配置します。次のノードを使用してシーンツ"
"リーを設定します:"

msgid ""
"The root node could also be :ref:`Area2D <class_Area2D>` or :ref:"
"`RigidBody2D <class_RigidBody2D>`. The animation will still be made in the "
"same way. Once the animation is completed, you can assign a shape to the "
"CollisionShape2D. See :ref:`Physics Introduction <doc_physics_introduction>` "
"for more information."
msgstr ""
"ルートノードは、\\ :ref:`Area2D <class_Area2D>` または :ref:`RigidBody2D "
"<class_RigidBody2D>` にすることもできます。アニメーションは引き続き同じ方法で"
"作成されます。アニメーションが完成したら、CollisionShape2Dにシェイプを割り当"
"てることができます。詳細については、\\ :ref:`Physics Introduction "
"<doc_physics_introduction>` を参照してください。"

msgid ""
"Click on the new SpriteFrames resource and you'll see a new panel appear at "
"the bottom of the editor window:"
msgstr ""
"新しいSpriteFramesリソースをクリックすると、エディタウィンドウの下部に新しい"
"パネルが表示されます:"

msgid ""
"From the FileSystem dock on the left side, drag the 8 individual images into "
"the center part of the SpriteFrames panel. On the left side, change the name "
"of the animation from \"default\" to \"run\"."
msgstr ""
"左側のFileSystemドックから、8つの個別の画像をSpriteFramesパネルの中央部分にド"
"ラッグします。左側で、アニメーションの名前を \"default\" から \"run\" に変更"
"します。"

msgid "Controlling the animation"
msgstr "アニメーションのコントロール"

msgid ""
"Once the animation is complete, you can control the animation via code using "
"the ``play()`` and ``stop()`` methods. Here is a brief example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"アニメーションが完了すると、\\ ``play()`` メソッドと ``stop()`` メソッドを使"
"用して、コードでアニメーションを制御できます。右矢印キーを押したままアニメー"
"ションを再生し、キーを放したときにアニメーションを停止する簡単な例を次に示し"
"ます。"

msgid ""
"Right-click the image and choose \"Save Image As\" to download it, and then "
"copy the image into your project folder."
msgstr ""
"画像を右クリックして[名前を付けて保存]を選択してダウンロードし、イメージをプ"
"ロジェクトフォルダにコピーします。"

msgid "Sprite sheet with AnimationPlayer"
msgstr "AnimationPlayerのスプライトシート"

msgid "Consider this sprite sheet, which contains 6 frames of animation:"
msgstr ""
"6フレームのアニメーションを含むこのスプライトシートを考えてみましょう。"

msgid ""
"Right-click the image and choose \"Save Image As\" to download, then copy "
"the image into your project folder."
msgstr ""
"画像を右クリックして[名前を付けて保存]を選択してダウンロードし、イメージをプ"
"ロジェクトフォルダにコピーします。"

msgid ""
"Our goal is to display these images one after another in a loop. Start by "
"setting up your scene tree:"
msgstr ""
"私たちの目標は、これらの画像をループで次々に表示することです。シーンツリーを"
"設定することから始めます。"

msgid ""
"Drag the spritesheet into the Sprite's *Texture* property, and you'll see "
"the whole sheet displayed on the screen. To slice it up into individual "
"frames, expand the *Animation* section in the Inspector and set the "
"*Hframes* to ``6``. *Hframes* and *Vframes* are the number of horizontal and "
"vertical frames in your sprite sheet."
msgstr ""
"スプライトシートをスプライトの *Texture* プロパティにドラッグすると、シート全"
"体が画面に表示されます。個々のフレームにスライスするには、インスペクタの "
"*Animation* セクションを展開し、\\ *Hframes* を ``6`` に設定します。\\ "
"*Hframes* および *Vframes* は、スプライトシート内の水平フレームと垂直フレーム"
"の数です。"

msgid ""
"Select the ``AnimationPlayer`` and click the \"Animation\" button followed "
"by \"New\". Name the new animation \"walk\". Set the animation length to "
"``0.6`` and click the \"Loop\" button so that our animation will repeat."
msgstr ""
"``AnimationPlayer`` を選択し、[アニメーション] ボタンをクリックしてから [新"
"規] をクリックします。新しいアニメーションに「walk」という名前を付けます。ア"
"ニメーションの長さを ``0.6`` に設定し、[ループ] ボタンをクリックして、アニ"
"メーションが繰り返されるようにします。"

msgid ""
"Continue adding frames at each point in the timeline (``0.1`` seconds by "
"default), until you have all the frames from 0 to 5. You'll see the frames "
"actually appearing in the animation track:"
msgstr ""
"タイムラインの各ポイント(デフォルトでは ``0.1``\\ 秒刻み)で、0から5までのすべ"
"てのフレームが追加されるまで、鍵アイコンをクリックしてフレームの追加を続けま"
"す。アニメーショントラックに実際にフレームが表示されます:"

msgid "Press \"Play\" on the animation to see how it looks."
msgstr ""
"アニメーションの [再生] をクリックすると、アニメーションがどのように表示され"
"るかを確認できます。"

msgid "Controlling an AnimationPlayer animation"
msgstr "AnimationPlayerアニメーションの制御"

msgid ""
"If updating both an animation and a separate property at once (for example, "
"a platformer may update the sprite's ``h_flip``/``v_flip`` properties when a "
"character turns while starting a 'turning' animation), it's important to "
"keep in mind that ``play()`` isn't applied instantly. Instead, it's applied "
"the next time the :ref:`AnimationPlayer <class_AnimationPlayer>` is "
"processed. This may end up being on the next frame, causing a 'glitch' "
"frame, where the property change was applied but the animation was not. If "
"this turns out to be a problem, after calling ``play()``, you can call "
"``advance(0)`` to update the animation immediately."
msgstr ""
"アニメーションと個別のプロパティの両方を一度に更新する場合 (たとえば、プラッ"
"トフォームゲームの場合、「ターン」アニメーションの開始中に、キャラクタの方向"
"転のために、スプライトの ``h_flip``/``v_flip`` プロパティを更新する場合があり"
"ます)、\\ ``play()`` では即座に適用されないことに注意してください。代わりに、"
"次回 :ref:`AnimationPlayer <class_AnimationPlayer>` が処理されるときに適用さ"
"れます。この更新は次のフレームで確定するので、プロパティの更新は行われていて"
"も、それがアニメーションには適用されていない「グリッチ」フレームが発生する可"
"能性があります。これが問題であることが判明した場合は、\\ ``play()`` を呼び出"
"した後に ``advance(0)`` を呼び出すことでアニメーションをすぐに更新することが"
"できます。"

msgid "Summary"
msgstr "概要"

msgid "Translation status"
msgstr "翻訳ステータス"
