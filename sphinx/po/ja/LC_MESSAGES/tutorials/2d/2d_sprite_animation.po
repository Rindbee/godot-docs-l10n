#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "2D sprite animation"
msgstr "2Dスプライトアニメーション"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"In this tutorial, you'll learn how to create 2D animated characters with the "
"AnimatedSprite2D class and the AnimationPlayer. Typically, when you create "
"or download an animated character, it will come in one of two ways: as "
"individual images or as a single sprite sheet containing all the animation's "
"frames. Both can be animated in Godot with the AnimatedSprite2D class."
msgstr ""
"このチュートリアルでは、AnimatedSprite2DクラスとAnimationPlayer2Dを使用して2D"
"アニメーションキャラクターを作成する方法を学習します。通常、アニメーション"
"キャラクターを作成またはダウンロードする場合、2つの方法のいずれかが使用されま"
"す。個々の画像として、またはすべてのアニメーションのフレームを含む単一のスプ"
"ライトシートとして。どちらも、AnimatedSprite2Dクラスを使用してGodotでアニメー"
"ション化できます。"

msgid ""
"First, we'll use :ref:`AnimatedSprite2D <class_AnimatedSprite2D>` to animate "
"a collection of individual images. Then we will animate a sprite sheet using "
"this class. Finally, we will learn another way to animate a sprite sheet "
"with :ref:`AnimationPlayer <class_AnimationPlayer>` and the *Animation* "
"property of :ref:`Sprite2D <class_Sprite2D>`."
msgstr ""
"まず、\\ :ref:`AnimatedSprite2D <class_AnimatedSprite2D>` を使用して、個々の"
"画像のコレクションをアニメーション化します。次に、このクラスを使用してスプラ"
"イトシートをアニメーション化します。最後に、\\ :ref:`AnimationPlayer "
"<class_AnimationPlayer>` と :ref:`Sprite2D <class_Sprite2D>` の *Animation* "
"プ ロパティを使用して、スプライトシートをアニメーション化する別の方法を学習し"
"ます。"

msgid ""
"Art for the following examples by https://opengameart.org/users/ansimuz and "
"tgfcoder."
msgstr ""
"以下サンプルで使用するアートは https://opengameart.org/users/ansimuz および "
"tgfcoder から入手しました。"

msgid "Individual images with AnimatedSprite2D"
msgstr "AnimatedSprite2Dと個々の画像"

msgid ""
"In this scenario, you have a collection of images, each containing one of "
"your character's animation frames. For this example, we'll use the following "
"animation:"
msgstr ""
"このシナリオでは、キャラクターのアニメーションフレームを1つづつ含む複数の画像"
"を使います。この例では、次のアニメーションを使用します:"

msgid ""
"You can download the images here: `2d_sprite_animation_assets.zip <https://"
"github.com/godotengine/godot-docs-project-starters/releases/download/"
"latest-4.x/2d_sprite_animation_assets.zip>`_"
msgstr ""
"画像はここからダウンロードできます: `2d_sprite_animation_assets.zip <https://"
"github.com/godotengine/godot-docs-project-starters/releases/download/"
"latest-4.x/2d_sprite_animation_assets.zip>`_"

msgid ""
"Unzip the images and place them in your project folder. Set up your scene "
"tree with the following nodes:"
msgstr ""
"画像を解凍し、プロジェクトフォルダに配置します。次のノードを使用してシーンツ"
"リーを設定します:"

msgid ""
"The root node could also be :ref:`Area2D <class_Area2D>` or :ref:"
"`RigidBody2D <class_RigidBody2D>`. The animation will still be made in the "
"same way. Once the animation is completed, you can assign a shape to the "
"CollisionShape2D. See :ref:`Physics Introduction <doc_physics_introduction>` "
"for more information."
msgstr ""
"ルートノードは、\\ :ref:`Area2D <class_Area2D>` または :ref:`RigidBody2D "
"<class_RigidBody2D>` にすることもできます。アニメーションは引き続き同じ方法で"
"作成されます。アニメーションが完成したら、CollisionShape2Dにシェイプを割り当"
"てることができます。詳細については、\\ :ref:`Physics Introduction "
"<doc_physics_introduction>` を参照してください。"

msgid ""
"Now select the ``AnimatedSprite2D`` and in its *SpriteFrames* property, "
"select \"New SpriteFrames\"."
msgstr ""
"次に、\\ ``AnimatedSprite2D`` を選択し、その *SpriteFrames* プロパティで「新"
"規 SpriteFrames」を選択します。"

msgid ""
"Click on the new SpriteFrames resource and you'll see a new panel appear at "
"the bottom of the editor window:"
msgstr ""
"新しいSpriteFramesリソースをクリックすると、エディタウィンドウの下部に新しい"
"パネルが表示されます:"

msgid ""
"From the FileSystem dock on the left side, drag the 8 individual images into "
"the center part of the SpriteFrames panel. On the left side, change the name "
"of the animation from \"default\" to \"run\"."
msgstr ""
"左側のFileSystemドックから、8つの個別の画像をSpriteFramesパネルの中央部分にド"
"ラッグします。左側で、アニメーションの名前を \"default\" から \"run\" に変更"
"します。"

msgid ""
"Use the \"Play\" buttons on the top-right of the *Filter Animations* input "
"to preview the animation. You should now see the animation playing in the "
"viewport. However, it is a bit slow. To fix this, change the *Speed (FPS)* "
"setting in the SpriteFrames panel to 10."
msgstr ""
"アニメーションをプレビューするには、 *Filter Animations* 入力の右上にある "
"\"Play \" ボタンを使います。これでビューポートでアニメーションが再生されるは"
"ずです。しかし見てみると、アニメーションが少し遅いようです。これを修正するに"
"は、SpriteFramesパネルの *Speed (FPS)* 設定を10に変更してください。"

msgid ""
"You can add additional animations by clicking the \"Add Animation\" button "
"and adding additional images."
msgstr ""
"アニメーションをさらに追加するには、\"新規アニメーション\" ボタンをクリックし"
"て新しく画像を追加します。"

msgid "Controlling the animation"
msgstr "アニメーションのコントロール"

msgid ""
"Once the animation is complete, you can control the animation via code using "
"the ``play()`` and ``stop()`` methods. Here is a brief example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"アニメーションが完了すると、\\ ``play()`` メソッドと ``stop()`` メソッドを使"
"用して、コードでアニメーションを制御できます。右矢印キーを押したままアニメー"
"ションを再生し、キーを放したときにアニメーションを停止する簡単な例を次に示し"
"ます。"

msgid "Sprite sheet with AnimatedSprite2D"
msgstr "AnimatedSprite2Dを使用したスプライトシート"

msgid ""
"You can also easily animate from a sprite sheet with the class "
"``AnimatedSprite2D``. We will use this public domain sprite sheet:"
msgstr ""
"クラス ``AnimatedSprite2D`` を使用して、スプライトシートから簡単にアニメー"
"ションさせることもできます。このパブリックドメインスプライトシートを使ってみ"
"ます:"

msgid ""
"Right-click the image and choose \"Save Image As\" to download it, and then "
"copy the image into your project folder."
msgstr ""
"画像を右クリックして[名前を付けて保存]を選択してダウンロードし、イメージをプ"
"ロジェクトフォルダにコピーします。"

msgid ""
"Set up your scene tree the same way you did previously when using individual "
"images. Select the ``AnimatedSprite2D`` and in its *SpriteFrames* property, "
"select \"New SpriteFrames\"."
msgstr ""
"個々の画像を使用するときと同じ方法でシーンツリーを設定します。\\ "
"``AnimatedSprite2D`` を選択し、その *SpriteFrames* プロパティで、[新規 "
"SpriteFrames]を選択します。"

msgid ""
"Click on the new SpriteFrames resource. This time, when the bottom panel "
"appears, select \"Add frames from a Sprite Sheet\"."
msgstr ""
"新しいSpriteFramesリソースをクリックします。今回は、下のパネルが表示された"
"ら、[スプライトシートからフレームを追加する]を選択します。"

msgid "You will be prompted to open a file. Select your sprite sheet."
msgstr "ファイルを開くように求められます。スプライトシートを選択します。"

msgid ""
"A new window will open, showing your sprite sheet. The first thing you will "
"need to do is to change the number of vertical and horizontal images in your "
"sprite sheet. In this sprite sheet, we have four images horizontally and two "
"images vertically."
msgstr ""
"新しいウィンドウが開き、スプライトシートが表示されます。最初に行う必要がある"
"のは、スプライトシートの垂直および水平画像の数を変更することです。このスプラ"
"イトシートには、水平方向に4つの画像と垂直方向に2つの画像があります。"

msgid ""
"Next, select the frames from the sprite sheet that you want to include in "
"your animation. We will select the top four, then click \"Add 4 frames\" to "
"create the animation."
msgstr ""
"次に、アニメーションに含めるスプライトシートからフレームを選択します。上位4つ"
"を選択し、[4フレームを追加]をクリックしてアニメーションを作成します。"

msgid ""
"You will now see your animation under the list of animations in the bottom "
"panel. Double click on default to change the name of the animation to jump."
msgstr ""
"これで、下部パネルのアニメーションのリストの下にアニメーションが表示されま"
"す。デフォルトでダブルクリックして、ジャンプするアニメーションの名前を変更し"
"ます。"

msgid ""
"Finally, check the play button on the SpriteFrames editor to see your frog "
"jump!"
msgstr ""
"最後に、SpriteFrames エディタでの再生ボタンをチェックして、カエルのジャンプを"
"確認してください！"

msgid "Sprite sheet with AnimationPlayer"
msgstr "AnimationPlayerのスプライトシート"

msgid ""
"Another way that you can animate when using a sprite sheet is to use a "
"standard :ref:`Sprite2D <class_Sprite2D>` node to display the texture, and "
"then animating the change from texture to texture with :ref:`AnimationPlayer "
"<class_AnimationPlayer>`."
msgstr ""
"スプライトシート使用する時にアニメーション化させるもう1つの方法は、標準の :"
"ref:`Sprite2D <class_Sprite2D>` ノードを使用してテクスチャを表示し、そして :"
"ref:`AnimationPlayer <class_AnimationPlayer>` を使ってテクスチャからテクス"
"チャを切り替えてアニメーションさせる方法です。"

msgid "Consider this sprite sheet, which contains 6 frames of animation:"
msgstr ""
"6フレームのアニメーションを含むこのスプライトシートを考えてみましょう。"

msgid ""
"Right-click the image and choose \"Save Image As\" to download, then copy "
"the image into your project folder."
msgstr ""
"画像を右クリックして[名前を付けて保存]を選択してダウンロードし、イメージをプ"
"ロジェクトフォルダにコピーします。"

msgid ""
"Our goal is to display these images one after another in a loop. Start by "
"setting up your scene tree:"
msgstr ""
"私たちの目標は、これらの画像をループで次々に表示することです。シーンツリーを"
"設定することから始めます。"

msgid ""
"Drag the spritesheet into the Sprite's *Texture* property, and you'll see "
"the whole sheet displayed on the screen. To slice it up into individual "
"frames, expand the *Animation* section in the Inspector and set the "
"*Hframes* to ``6``. *Hframes* and *Vframes* are the number of horizontal and "
"vertical frames in your sprite sheet."
msgstr ""
"スプライトシートをスプライトの *Texture* プロパティにドラッグすると、シート全"
"体が画面に表示されます。個々のフレームにスライスするには、インスペクタの "
"*Animation* セクションを展開し、\\ *Hframes* を ``6`` に設定します。\\ "
"*Hframes* および *Vframes* は、スプライトシート内の水平フレームと垂直フレーム"
"の数です。"

msgid ""
"Now try changing the value of the *Frame* property. You'll see that it "
"ranges from ``0`` to ``5`` and the image displayed by the Sprite2D changes "
"accordingly. This is the property we'll be animating."
msgstr ""
"次に、\\ *Frame* プロパティの値を変更してみてください。範囲が ``0`` から "
"``5`` であり、それに応じて Sprite2D に表示される画像が変化することがわかりま"
"す。これがこれからアニメーションさせるプロパティです。。"

msgid ""
"Select the ``AnimationPlayer`` and click the \"Animation\" button followed "
"by \"New\". Name the new animation \"walk\". Set the animation length to "
"``0.6`` and click the \"Loop\" button so that our animation will repeat."
msgstr ""
"``AnimationPlayer`` を選択し、[アニメーション] ボタンをクリックしてから [新"
"規] をクリックします。新しいアニメーションに「walk」という名前を付けます。ア"
"ニメーションの長さを ``0.6`` に設定し、[ループ] ボタンをクリックして、アニ"
"メーションが繰り返されるようにします。"

msgid ""
"Now select the ``Sprite2D`` node and click the key icon to add a new track."
msgstr ""
"次に、\\ ``Sprite2D`` ノードを選択し、鍵のアイコンをクリックして新しいトラッ"
"クを追加します。"

msgid ""
"Continue adding frames at each point in the timeline (``0.1`` seconds by "
"default), until you have all the frames from 0 to 5. You'll see the frames "
"actually appearing in the animation track:"
msgstr ""
"タイムラインの各ポイント(デフォルトでは ``0.1``\\ 秒刻み)で、0から5までのすべ"
"てのフレームが追加されるまで、鍵アイコンをクリックしてフレームの追加を続けま"
"す。アニメーショントラックに実際にフレームが表示されます:"

msgid "Press \"Play\" on the animation to see how it looks."
msgstr ""
"アニメーションの [再生] をクリックすると、アニメーションがどのように表示され"
"るかを確認できます。"

msgid "Controlling an AnimationPlayer animation"
msgstr "AnimationPlayerアニメーションの制御"

msgid ""
"Like with AnimatedSprite2D, you can control the animation via code using the "
"``play()`` and ``stop()`` methods. Again, here is an example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"AnimatedSprite2Dと同様に、\\ ``play()`` メソッドと ``stop()`` メソッドを使用"
"して、コードを介してアニメーションを制御できます。ここでアニメーションの例を"
"示します。右矢印キーが押されているとアニメーションを再生し、キーが放されたと"
"きにアニメーションを停止します。"

msgid ""
"If updating both an animation and a separate property at once (for example, "
"a platformer may update the sprite's ``h_flip``/``v_flip`` properties when a "
"character turns while starting a 'turning' animation), it's important to "
"keep in mind that ``play()`` isn't applied instantly. Instead, it's applied "
"the next time the :ref:`AnimationPlayer <class_AnimationPlayer>` is "
"processed. This may end up being on the next frame, causing a 'glitch' "
"frame, where the property change was applied but the animation was not. If "
"this turns out to be a problem, after calling ``play()``, you can call "
"``advance(0)`` to update the animation immediately."
msgstr ""
"アニメーションと個別のプロパティの両方を一度に更新する場合 (たとえば、プラッ"
"トフォームゲームの場合、「ターン」アニメーションの開始中に、キャラクタの方向"
"転のために、スプライトの ``h_flip``/``v_flip`` プロパティを更新する場合があり"
"ます)、\\ ``play()`` では即座に適用されないことに注意してください。代わりに、"
"次回 :ref:`AnimationPlayer <class_AnimationPlayer>` が処理されるときに適用さ"
"れます。この更新は次のフレームで確定するので、プロパティの更新は行われていて"
"も、それがアニメーションには適用されていない「グリッチ」フレームが発生する可"
"能性があります。これが問題であることが判明した場合は、\\ ``play()`` を呼び出"
"した後に ``advance(0)`` を呼び出すことでアニメーションをすぐに更新することが"
"できます。"

msgid "Summary"
msgstr "要約"

msgid ""
"These examples illustrate the two classes you can use in Godot for 2D "
"animation. ``AnimationPlayer`` is a bit more complex than "
"``AnimatedSprite2D``, but it provides additional functionality, since you "
"can also animate other properties like position or scale. The class "
"``AnimationPlayer`` can also be used with an ``AnimatedSprite2D``. "
"Experiment to see what works best for your needs."
msgstr ""
"これらの例は、2Dアニメーション用にGodotで使用できる2つのクラスを示していま"
"す。\\ ``AnimationPlayer`` は ``AnimatedSprite2D`` よりも少し複雑ですが、より"
"多くの機能が提供され、位置やスケールなどの他のプロパティもアニメーション化で"
"きます。クラス ``AnimationPlayer`` は ``AnimatedSprite2D`` でも使用できます。"
"ニーズに最適なものを試してみてください。"
