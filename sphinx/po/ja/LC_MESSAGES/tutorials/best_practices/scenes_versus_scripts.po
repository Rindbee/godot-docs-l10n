#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "When to use scenes versus scripts"
msgstr "シーンとスクリプトを使用する場合"

msgid ""
"We've already covered how scenes and scripts are different. Scripts define "
"an engine class extension with imperative code, scenes with declarative code."
msgstr ""
"シーンとスクリプトの違いについてはすでに説明しました。スクリプトは、命令型"
"コードでエンジンクラスの拡張を定義し、宣言型コードでシーンを定義します。"

msgid "Anonymous types"
msgstr "匿名型"

msgid ""
"It *is* possible to completely define a scenes' contents using a script "
"alone. This is, in essence, what the Godot Editor does, only in the C++ "
"constructor of its objects."
msgstr ""
"スクリプト\\ *のみ*\\ を使用してシーンのコンテンツを完全に定義することもでき"
"ます。これは本質的にはGodotエディタで行うべきことですが、スクリプトで行う場合"
"はそのオブジェクトのC++コンストラクターで行います。"

msgid ""
"But, choosing which one to use can be a dilemma. Creating script instances "
"is identical to creating in-engine classes whereas handling scenes requires "
"a change in API:"
msgstr ""
"しかし、どちらを使用するかを選択することはジレンマになる可能性があります。ス"
"クリプトインスタンスの作成はエンジン内クラスの作成と同じですが、シーンの処理"
"にはAPIを変更する必要があります:"

msgid ""
"Also, scripts will operate a little slower than scenes due to the speed "
"differences between engine and script code. The larger and more complex the "
"node, the more reason there is to build it as a scene."
msgstr ""
"また、エンジンとスクリプトコードの処理速度が異なるため、スクリプトの動作は"
"シーンよりも少し遅くなります。ノードが大きく複雑になるほど、ノードをシーンと"
"して構築する理由が増えます。"

msgid "Named types"
msgstr "名前付き型"

msgid "Know the base type of the script they would like to use."
msgstr "使用するスクリプトの基本型を知っている。"

msgid "Create an instance of that base type."
msgstr "その基本型のインスタンスを作成します。"

msgid "Add the script to the node."
msgstr "ノードにスクリプトを追加します。"

msgid ":ref:`Custom Types <doc_making_plugins>`"
msgstr ":ref:`カスタム型<doc_making_plugins>`"

msgid "Editor-only. Typenames are not accessible at runtime."
msgstr "エディタのみ。型名は実行時にはアクセスできません。"

msgid "Does not support inherited custom types."
msgstr "継承されたカスタム型はサポートされていません。"

msgid "An initializer tool. Creates the node with the script. Nothing more."
msgstr ""
"初期化ツール。スクリプトを使用してノードを作成します。これ以外の方法はありま"
"せん。"

msgid ""
"Editor has no type-awareness of the script or its relationship to other "
"engine types or scripts."
msgstr ""
"エディタは、スクリプトの型や、他のエンジン内の型やスクリプトとの関係を認識し"
"ません。"

msgid "Allows users to define an icon."
msgstr "ユーザーがアイコンを定義できます。"

msgid ""
"Works for all scripting languages because it deals with Script resources in "
"abstract."
msgstr ""
"スクリプトリソースを抽象化して扱うので、すべてのスクリプト言語で動作します。"

msgid ""
"Set up using :ref:`EditorPlugin.add_custom_type "
"<class_EditorPlugin_method_add_custom_type>`."
msgstr ""
":ref:`EditorPlugin.add_custom_type "
"<class_EditorPlugin_method_add_custom_type>` を使用してセットアップします。"

msgid "Editor and runtime accessible."
msgstr "エディタとランタイムにアクセスできます。"

msgid "Displays inheritance relationships in full."
msgstr "継承関係を完全に表示します。"

msgid ""
"Creates the node with the script, but can also change types or extend the "
"type from the editor."
msgstr ""
"スクリプトを使用してノードを作成しますが、エディタから型を変更したり、型を拡"
"張したりすることもできます。"

msgid ""
"Editor is aware of inheritance relationships between scripts, script "
"classes, and engine C++ classes."
msgstr ""
"エディタは、スクリプト、スクリプトクラス、およびエンジンのC++クラス間の継承関"
"係を認識します。"

msgid ""
"Engine developers must add support for languages manually (both name "
"exposure and runtime accessibility)."
msgstr ""
"エンジン開発者は、言語のサポートを手動で追加する必要があります(名前の公開とラ"
"ンタイムのアクセシビリティの両方)。"

msgid "Godot 3.1+ only."
msgstr "Godot3.1以降のみです。"

msgid ""
"The Editor scans project folders and registers any exposed names for all "
"scripting languages. Each scripting language must implement its own support "
"for exposing this information."
msgstr ""
"エディタは、プロジェクトフォルダをスキャンし、すべてのスクリプト言語の公開名"
"を登録します。各スクリプト言語は、この情報を公開するための独自のサポートを実"
"装する必要があります。"

msgid ""
"Both methodologies add names to the creation dialog, but script classes, in "
"particular, also allow for users to access the typename without loading the "
"script resource. Creating instances and accessing constants or static "
"methods is viable from anywhere."
msgstr ""
"どちらの方法でも作成ダイアログに名前が追加されますが、特にスクリプト クラスを"
"使用すると、ユーザーはスクリプト リソースを読み込まずに型名にアクセスできま"
"す。インスタンスの作成と定数または静的メソッドへのアクセスは、どこからでも実"
"行可能です。"

msgid ""
"With features like these, one may wish their type to be a script without a "
"scene due to the ease of use it grants users. Those developing plugins or "
"creating in-house tools for designers to use will find an easier time of "
"things this way."
msgstr ""
"このような機能を使用すると、それによってユーザーに付与される使いやすさから、"
"その型をシーンのないスクリプトにしたい場合があります。このようにプラグインを"
"開発したり、デザイナーが使用する社内ツールを作成したりすることで、物事をより"
"簡単な手順で進められるようになります。"

msgid ""
"On the downside, it also means having to use largely imperative programming."
msgstr ""
"欠点として、大部分が命令型プログラミングを使用する必要があることも意味しま"
"す。"

msgid "Conclusion"
msgstr "結論"

msgid "In the end, the best approach is to consider the following:"
msgstr "最後に、最善のアプローチは次のことを考慮することです。"

msgid ""
"If one wishes to create a basic tool that is going to be re-used in several "
"different projects and which people of all skill levels will likely use "
"(including those who don't label themselves as \"programmers\"), then "
"chances are that it should probably be a script, likely one with a custom "
"name/icon."
msgstr ""
"いくつかの異なるプロジェクトで再利用され、すべてのスキルレベルの人々(自分自身"
"を「プログラマー」とラベル付けしない人を含む)が使用する可能性のある基本的な"
"ツールを作成したい場合、それは良い機会であり、おそらくスクリプトで作成する必"
"要があります。また、カスタム名/アイコンが付いたものでなければなりません。"

msgid ""
"If one wishes to create a concept that is particular to their game, then it "
"should always be a scene. Scenes are easier to track/edit and provide more "
"security than scripts."
msgstr ""
"ゲームに特化したコンセプト(モデル)を作りたい場合は、常にシーンである必要があ"
"ります。シーンは追跡/編集が容易で、スクリプトよりもセキュリティが強化されま"
"す。"

msgid "Translation status"
msgstr "翻訳ステータス"
