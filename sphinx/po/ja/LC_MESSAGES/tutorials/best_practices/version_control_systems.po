#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Version control systems"
msgstr "バージョン管理システム"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"Godot aims to be VCS-friendly and generate mostly readable and mergeable "
"files."
msgstr ""
"Godot は VCS (Version Control System) フレンドリーであり、読み取り可能でマー"
"ジ可能なファイルを生成することを目指しています。"

msgid "Version control plugins"
msgstr "バージョン管理用のプラグイン"

msgid ""
"Godot also supports the use of version control systems in the editor itself. "
"However, version control in the editor requires a plugin for the specific "
"VCS you're using."
msgstr ""
"Godot はエディタでのバージョン管理システムの使用をサポートしています。ただし"
"エディタでバージョン管理を行うには、使用している特定の VCS 用のプラグインが必"
"要です。"

msgid ""
"As of July 2023, there is only a Git plugin available, but the community may "
"create additional VCS plugins."
msgstr ""
"2023年7月現在、利用可能なのは Git プラグインのみですが、コミュニティが追加の "
"VCS プラグインを作成する可能性があります。"

msgid "Official Git plugin"
msgstr "公式Gitプラグイン"

msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases on `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."
msgstr ""
"エディタ内から Git を使用することは、公式プラグインでサポートされています。最"
"新のリリースは `GitHub <https://github.com/godotengine/godot-git-plugin/"
"releases>`__ で見つけることができます。"

msgid ""
"Documentation on how to use the Git plugin can be found on its `wiki "
"<https://github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"Git プラグインの使用方法に関するドキュメントは、 `wiki <https://github.com/"
"godotengine/godot-git-plugin/wiki>`__ にあります。"

msgid "Files to exclude from VCS"
msgstr "VCS から除外するファイル"

msgid ""
"This lists files and folders that should be ignored from version control in "
"Godot 4.1 and later."
msgstr ""
"このリストは、Godot 4.1 以降のバージョン管理から無視する必要があるファイルと"
"フォルダの一覧です。"

msgid ""
"The list of files of folders that should be ignored from version control in "
"Godot 3.x and Godot 4.0 is **entirely** different. This is important, as "
"Godot 3.x and 4.0 may store sensitive credentials in ``export_presets.cfg`` "
"(unlike Godot 4.1 and later)."
msgstr ""
"Godot 3.x と Godot 4.0 では、バージョン管理から無視するファイルとフォルダのリ"
"ストが **完全に** 異なります。これは気を付ける必要があります。Godot 3.x と "
"4.0 では、機密性の高い資格情報が ``export_presets.cfg`` に保存される可能性が"
"あるからです (Godot 4.1 以降とは異なります)。"

msgid ""
"If you are using Godot 3, check the ``3.5`` version of this documentation "
"page instead."
msgstr ""
"Godot 3 を使用している場合は、代わりにこのドキュメント ページの ``3.5`` バー"
"ジョンを確認してください。"

msgid ""
"There are some files and folders Godot automatically creates when opening a "
"project in the editor for the first time. To avoid bloating your version "
"control repository with generated data, you should add them to your VCS "
"ignore:"
msgstr ""
"エディタでプロジェクトを初めて開いたときに、Godot によって自動的に作成される"
"ファイルとフォルダがいくつかあります。生成されたデータでバージョン管理リポジ"
"トリが肥大化しないようにするには、それらを VCS ignore に追加する必要がありま"
"す。"

msgid "``.godot/``: This folder stores various project cache data."
msgstr ""
"``.godot/``: このフォルダには、さまざまなプロジェクトキャッシュデータが保存さ"
"れます。"

msgid ""
"``*.translation``: These files are binary imported :ref:`translations "
"<doc_internationalizing_games>` generated from CSV files."
msgstr ""
"``*.translation``: これらのファイルは、CSV ファイルから生成されバイナリイン"
"ポートされた :ref:`translations <doc_internationalizing_games>` です。"

msgid ""
"You can make the Godot project manager generate version control metadata for "
"you automatically when creating a project. When choosing the **Git** option, "
"this creates ``.gitignore`` and ``.gitattributes`` files in the project root:"
msgstr ""
"プロジェクトを作成するとき、Godot プロジェクトマネージャーからバージョン管理"
"用のメタデータを自動生成することができます。**Git** オプションを選択すると、"
"プロジェクトルートに ``.gitignore`` ファイルと ``.gitattributes`` ファイルが"
"作成されます。"

msgid ""
"Creating version control metadata in the project manager's New Project dialog"
msgstr ""
"プロジェクトマネージャーの [新しいプロジェクト] ダイアログでバージョン管理用"
"のメタデータを作成する"

msgid ""
"Creating version control metadata in the project manager's **New Project** "
"dialog"
msgstr ""
"プロジェクトマネージャーの **新しいプロジェクト** ダイアログでバージョン管理"
"用のメタデータを作成する"

msgid ""
"In existing projects, select the **Project** menu at the top of the editor, "
"then choose **Version Control > Generate Version Control Metadata**. This "
"creates the same files as if the operation was performed in the project "
"manager."
msgstr ""
"既存のプロジェクトでは、エディターの上部にある **プロジェクト** メニューか"
"ら、**バージョンコントロール > バージョン管理用メタデータの作成/上書き** を選"
"択します。これによりプロジェクトマネージャーから作成したものと同じファイルが"
"作成されます。"

msgid "Working with Git on Windows"
msgstr "Windows で Git を使用する"

msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted from LF to CRLF "
"automatically."
msgstr ""
"ほとんどの Git for Windows クライアントは、 ``core.autocrlf`` が ``true`` に"
"設定されています。これによってファイルの改行コードが LF から CRLF に自動的に"
"変換されるため、ファイルが Git によって不用意に変更済みとしてマークされる可能"
"性があります。"

msgid "It is better to set this option as:"
msgstr "このオプションは次のように設定することをお勧めします。"

msgid ""
"Creating version control metadata using the project manager or editor will "
"automatically enforce LF line endings using the ``.gitattributes`` file. In "
"this case, you don't need to change your Git configuration."
msgstr ""
"プロジェクトマネージャーまたはエディターを使用してバージョン管理用メタデータ"
"を作成すると、 ``.gitattributes`` ファイルによって LF 改行コードが自動的に適"
"用されます。この場合、 Git 設定を変更する必要はありません。"
