#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Autoloads versus regular nodes"
msgstr "自動読み込みと通常ノード"

msgid ""
"In this guide, you will learn when to use the Autoload feature, and "
"techniques you can use to avoid it."
msgstr ""
"このガイドでは、オートロード機能をいつ使用するか、およびそれを回避するために"
"使用できるテクニックを学習します。"

msgid "The cutting audio issue"
msgstr "オーディオが切断される問題"

msgid ""
"Other engines can encourage the use of creating manager classes, singletons "
"that organize a lot of functionality into a globally accessible object. "
"Godot offers many ways to avoid global state thanks to the node tree and "
"signals."
msgstr ""
"他のエンジンは、多くの機能をグローバルにアクセス可能なオブジェクトに編成する"
"シングルトンであるマネージャークラスの作成を奨励します。 Godotは、ノードツ"
"リーとシグナルのおかげで、グローバルな状態を回避する多くの方法を提供します。"

msgid ""
"For example, let's say we are building a platformer and want to collect "
"coins that play a sound effect. There's a node for that: the :ref:"
"`AudioStreamPlayer <class_AudioStreamPlayer>`. But if we call the "
"``AudioStreamPlayer`` while it is already playing a sound, the new sound "
"interrupts the first."
msgstr ""
"たとえば、開発者がプラットフォーム・ゲームを構築していて、効果音を鳴らすコイ"
"ンを収集したいとします。それに使えるノードがあります: :ref:"
"`AudioStreamPlayer <class_AudioStreamPlayer>` です。しかし、すでにサウンドを"
"再生している最中にAudioStreamPlayerを呼び出すと、新しいサウンドが最初のサウン"
"ドを中断します。"

msgid ""
"**Global state**: one object is now responsible for all objects' data. If "
"the ``Sound`` class has errors or doesn't have an AudioStreamPlayer "
"available, all the nodes calling it can break."
msgstr ""
"**グローバルな状態**\\ : 1つのオブジェクトがすべてのオブジェクトのデータを担"
"当するようになっています。\\ ``Sound`` クラスにエラーがある場合、または利用可"
"能なAudioStreamPlayerがない場合、それを呼び出すすべてのノードが中断する可能性"
"があります。"

msgid ""
"**Global access**: now that any object can call ``Sound.play(sound_path)`` "
"from anywhere, there's no longer an easy way to find the source of a bug."
msgstr ""
"**グローバルなアクセス**: 任意のオブジェクトがどこからでも ``Sound."
"play(sound_path)`` を呼び出すことができるので、バグの原因を見つける簡単な方法"
"はありません。"

msgid ""
"**Global resource allocation**: with a pool of ``AudioStreamPlayer`` nodes "
"stored from the start, you can either have too few and face bugs, or too "
"many and use more memory than you need."
msgstr ""
"**グローバルなリソース割り当て**: 最初から ``AudioStreamPlayer`` ノードのプー"
"ルを使用すると、その個数が少なすぎてバグに直面したり、逆に必要以上に多くのメ"
"モリを使用したりする可能性があります。"

msgid ""
"When you keep code inside a scene, only one or two scripts may be involved "
"in audio."
msgstr ""
"シーン内にコードを保持する場合、オーディオに関係するスクリプトは1つまたは2つ"
"だけです。"

msgid ""
"Contrast this with each scene keeping as many ``AudioStreamPlayer`` nodes as "
"it needs within itself and all these problems go away:"
msgstr ""
"これとは対照的に、各シーンが必要な数の ``AudioStreamPlayer`` ノードを自分で保"
"持すれば、これらの問題はすべて解決します。"

msgid ""
"Each scene manages its own state information. If there is a problem with the "
"data, it will only cause issues in that one scene."
msgstr ""
"各シーンは、独自の状態情報を管理します。データに問題がある場合、その1つのシー"
"ンでのみ問題が発生します。"

msgid ""
"Each scene accesses only its own nodes. Now, if there is a bug, it's easy to "
"find which node is at fault."
msgstr ""
"各シーンは、独自のノードのみにアクセスします。バグがある場合、どのノードに障"
"害があるかを簡単に見つけることができます。"

msgid "Each scene allocates exactly the amount of resources it needs."
msgstr "各シーンは、必要なリソースの量を正確に割り当てます。"

msgid "Managing shared functionality or data"
msgstr "共有機能またはデータの管理"

msgid ""
"Another reason to use an Autoload can be that you want to reuse the same "
"method or data across many scenes."
msgstr ""
"自動読み込みを使用するもう1つの理由は、同じメソッドまたはデータを多数のシーン"
"で再利用する場合です。"

msgid "When it comes to data, you can either:"
msgstr "データに関しては、次のいずれかが可能です:"

msgid ""
"Create a new type of :ref:`Resource <class_Resource>` to share the data."
msgstr ""
"データを共有するには、新しいタイプの :ref:`Resource <class_Resource>` を作成"
"します。"

msgid ""
"Store the data in an object to which each node has access, for example using "
"the ``owner`` property to access the scene's root node."
msgstr ""
"たとえば、\\ ``owner`` プロパティを使用してシーンのルートノードにアクセスする"
"など、各ノードがアクセスできるオブジェクトにデータを保存します。"

msgid "When you should use an Autoload"
msgstr "自動読み込みを使用する必要がある場合"

msgid "Translation status"
msgstr "翻訳ステータス"
