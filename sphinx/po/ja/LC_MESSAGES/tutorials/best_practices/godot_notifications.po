#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Godot notifications"
msgstr "Godotの通知"

msgid ""
"Some of these notifications, like draw, are useful to override in scripts. "
"So much so that Godot exposes many of them with dedicated functions:"
msgstr ""
"drawなどのこれらの通知の一部は、スクリプトでオーバーライドするのに役立ちま"
"す。Godotは、Godotがそれらの多くを専用関数で公開するほどです:"

msgid ""
":ref:`Object::NOTIFICATION_POSTINITIALIZE "
"<class_Object_constant_NOTIFICATION_POSTINITIALIZE>`: a callback that "
"triggers during object initialization. Not accessible to scripts."
msgstr ""
":ref:`Object::NOTIFICATION_POSTINITIALIZE "
"<class_Object_constant_NOTIFICATION_POSTINITIALIZE>`: オブジェクトの初期化中"
"にトリガーされるコールバック。スクリプトからアクセスできません。"

msgid ""
"And many of the callbacks that *do* exist in Nodes don't have any dedicated "
"methods, but are still quite useful."
msgstr ""
"また、ノードに存在するコールバックの多くには専用のメソッドはありませんが、そ"
"れでも非常に便利です。"

msgid ""
":ref:`Node::NOTIFICATION_PARENTED "
"<class_Node_constant_NOTIFICATION_PARENTED>`: a callback that triggers "
"anytime one adds a child node to another node."
msgstr ""
":ref:`Node::NOTIFICATION_PARENTED "
"<class_Node_constant_NOTIFICATION_PARENTED>`: 子ノードを別のノードに追加する"
"たびにトリガーするコールバック。"

msgid ""
":ref:`Node::NOTIFICATION_UNPARENTED "
"<class_Node_constant_NOTIFICATION_UNPARENTED>`: a callback that triggers "
"anytime one removes a child node from another node."
msgstr ""
":ref:`Node::NOTIFICATION_UNPARENTED "
"<class_Node_constant_NOTIFICATION_UNPARENTED>`: 別のノードから子ノードを削除"
"するたびにトリガーするコールバック。"

msgid ""
"Methods in the documentation labeled as \"virtual\" are also intended to be "
"overridden by scripts."
msgstr ""
"\"virtual\" というラベルの付いたドキュメント内のメソッドも、スクリプトによっ"
"てオーバーライドされることを目的としています。"

msgid ""
"So, in which situation should one use each of these notifications or virtual "
"functions?"
msgstr ""
"それでは、これらの通知や仮想機能のそれぞれをどの状況で使用すべきでしょうか？"

msgid "_process vs. _physics_process vs. \\*_input"
msgstr "_process 対 _physics_process 対 \\*_input"

msgid "_init vs. initialization vs. export"
msgstr "_init 対 初期化 対 エクスポート"

msgid "_ready vs. _enter_tree vs. NOTIFICATION_PARENTED"
msgstr "_ready 対 _enter_tree 対 NOTIFICATION_PARENTED"

msgid ""
"If one needs to trigger behavior that occurs as nodes parent to another, "
"regardless of whether it occurs as part of the main/active scene or not, one "
"can use the :ref:`PARENTED <class_Node_constant_NOTIFICATION_PARENTED>` "
"notification. For example, here is a snippet that connects a node's method "
"to a custom signal on the parent node without failing. Useful on data-"
"centric nodes that one might create at runtime."
msgstr ""
"メイン/アクティブシーンの一部として発生するかどうかに関係なく、ノードが別の"
"ノードの親として発生する動作をトリガーする必要があるばあい、\\ :ref:"
"`PARENTED <class_Node_constant_NOTIFICATION_PARENTED>` 通知を使用できます。た"
"とえば、ノードのメソッドを、失敗せずに親ノードのカスタムシグナルに接続するス"
"ニペットを次に示します。実行時に作成されるデータ中心のノードで役立ちます。"

msgid "Translation status"
msgstr "翻訳ステータス"
