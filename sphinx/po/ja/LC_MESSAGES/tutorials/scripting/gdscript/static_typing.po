#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Static typing in GDScript"
msgstr "静的型付けGDScript"

msgid "In this guide, you will learn:"
msgstr "このガイドでは、次の内容について学習します:"

msgid "how to use static typing in GDScript;"
msgstr "GDScriptでの静的型付けの使い方;"

msgid "that static types can help you avoid bugs;"
msgstr "静的型がバグの回避に役立つこと;"

msgid ""
"Where and how you use this language feature is entirely up to you: you can "
"use it only in some sensitive GDScript files, use it everywhere, or don't "
"use it at all."
msgstr ""
"この言語機能をどこでどのように使用するかは完全にあなた次第です。一部の機密性"
"の高いGDScriptファイルでのみ使用することも、あらゆる場所で使用することも、"
"まったく使用しないこともできます。"

msgid ""
"Static types can be used on variables, constants, functions, parameters, and "
"return types."
msgstr "静的型は、変数、定数、関数、パラメーター、戻り値の型に使用できます。"

msgid "A brief look at static typing"
msgstr "静的型付けの概要"

msgid ""
"Overall, typed programming gives you a more structured experience. It helps "
"prevent errors and improves the self-documenting aspect of your scripts. "
"This is especially helpful when you're working in a team or on a long-term "
"project: studies have shown that developers spend most of their time reading "
"other people's code, or scripts they wrote in the past and forgot about. The "
"clearer and the more structured the code, the faster it is to understand, "
"the faster you can move forward."
msgstr ""
"概して、型付きプログラミングはより構造化された経験をあなたに与えます。それは"
"エラーを防ぎ、あなたのスクリプトを自己文書化の面で改善するのを助けます。これ"
"はチームや長期的なプロジェクトで作業している場合に特に役立ちます:調査によると"
"他の人が書いたコードを読んだり、過去に自分が書いたスクリプトの内容を忘れてい"
"る事に、開発者が大半の時間を費やしています。コードが明確で構造化されているほ"
"ど、速く理解ができ、速く前に進むことができます。"

msgid "How to use static typing"
msgstr "静的型付けの使用方法"

msgid "What can be a type hint"
msgstr "型ヒント(Type Hint)として使用できるもの"

msgid ""
"If you try to cast with a built-in type and it fails, Godot will throw an "
"error."
msgstr ""
"組み込み型でキャストしようとして失敗すると、Godotはエラーをスローします。"

msgid "Safe lines"
msgstr "セーフ・ライン"

msgid ""
"This happens when you get a child node. Let's take a timer for example: with "
"dynamic code, you can get the node with ``$Timer``. GDScript supports `duck-"
"typing <https://stackoverflow.com/a/4205163/8125343>`__, so even if your "
"timer is of type ``Timer``, it is also a ``Node`` and an ``Object``, two "
"classes it extends. With dynamic GDScript, you also don't care about the "
"node's type as long as it has the methods you need to call."
msgstr ""
"これは子ノードを取得したときに起こります。たとえばタイマーを考えてみましょ"
"う。動的コードでは、\\ ``$Timer`` でノードを取得できます。GDScriptは `ダッ"
"ク・タイピング <https://stackoverflow.com/a/4205163/8125343>`_ をサポートして"
"いるので、あなたのタイマーが ``Timer`` 型であっても、それは ``Node`` であり "
"``Object`` でもあり、その2つのクラスを継承しています。動的GDScriptでは、ノー"
"ドが呼び出す必要のあるメソッドを持っている場合、その型については気にする必要"
"はありません。"

msgid "Unsafe line (line 7) vs Safe Lines (line 6 and 8)"
msgstr "セーフ・ラインではない行(line 7)とセーフ・ライン (line 6 とline 8)"

msgid ""
"You can turn off safe lines or change their color in the editor settings."
msgstr ""
"セーフ･ラインの色分けをオフにしたり、エディタ設定でカラーを変更することができ"
"ます。"

msgid "Typed or dynamic: stick to one style"
msgstr "静的と動的: どちらかのみを利用する"

msgid ""
"Typed GDScript and dynamic GDScript can coexist in the same project. But "
"it's recommended to stick to either style for consistency in your codebase, "
"and for your peers. It's easier for everyone to work together if you follow "
"the same guidelines, and faster to read and understand other people's code."
msgstr ""
"型付きGDScriptと動的GDScriptは、同じプロジェクト内に共存できます。しかし、"
"コードベースの一貫性のためにも、仲間のためにも、どちらかスタイルに統一するこ"
"とをお勧めします。同じガイドラインに従うことで全員が協力しやすくなり、他の人"
"が書いたコードを素早く読んで理解できるようになります。"

msgid "Warning system"
msgstr "警告システム"

msgid "Nested types are not currently supported::"
msgstr "ネストされた型は現在サポートされていません:"

msgid "Typed dictionaries are not currently supported::"
msgstr "型付きDictionaryは現在サポートされていません:"

msgid "Summary"
msgstr "概要"

msgid "Translation status"
msgstr "翻訳ステータス"
