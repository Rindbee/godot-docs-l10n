#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"This page provides an overview of the commonly used features of both C# and "
"Godot and how they are used together."
msgstr ""
"このページでは、C#とGodotの両方で一般的に使用される機能の概要と、それらの併用"
"方法について説明します。"

msgid "Type conversion and casting"
msgstr "型変換とキャスト"

msgid ""
"C# is a statically typed language. Therefore, you can't do the following:"
msgstr "C#は静的に型指定された言語です。したがって、次の操作は実行できません:"

msgid "For this, you have various options in C#."
msgstr "このために、C#にはさまざまなオプションがあります。"

msgid "**Casting and Type Checking**"
msgstr "\\ **キャストと型チェック**"

msgid "**Using the AS operator**"
msgstr "\\ **AS演算子の使用**"

msgid "**Using the generic methods**"
msgstr "**汎用メソッドを使用**"

msgid ""
"Generic methods are also provided to make this type conversion transparent."
msgstr "この型変換を透過的にするための汎用メソッドも提供されています。"

msgid ""
"``GetNode<T>()`` casts the node before returning it. It will throw an "
"``InvalidCastException`` if the node cannot be cast to the desired type."
msgstr ""
"``GetNode<T>()`` は、ノードを返す前にノードをキャストします。ノードを目的の型"
"にキャストできない場合は、\\ ``InvalidCastException`` がスローされます。"

msgid ""
"``GetNodeOrNull<T>()`` uses the ``as`` operator and will return ``null`` if "
"the node cannot be cast to the desired type."
msgstr ""
"``GetNodeOrNull<T>()`` は ``as`` 演算子を使用し、ノードを目的の型にキャストで"
"きない場合は ``null`` を返します。"

msgid "**Type checking using the IS operator**"
msgstr "**IS演算子を使用した型チェック**"

msgid ""
"For more advanced type checking, you can look into `Pattern Matching "
"<https://docs.microsoft.com/en-us/dotnet/csharp/pattern-matching>`_."
msgstr ""
"より高度な型チェックについては、 `パターンマッチング<https://docs.microsoft."
"com/ja-jp/dotnet/csharp/pattern-matching>` で調べることができます。"

msgid "Preprocessor defines"
msgstr "プリプロセッサ定義"

msgid ""
"Godot has a set of defines that allow you to change your C# code depending "
"on the environment you are compiling to."
msgstr ""
"Godotには、コンパイルする環境に応じてC#コードを変更できる一連の定義がありま"
"す。"

msgid ""
"If you created your project before Godot 3.2, you have to modify or "
"regenerate your `csproj` file to use this feature (compare "
"``<DefineConstants>`` with a new 3.2+ project)."
msgstr ""
"Godot 3.2より前にプロジェクトを作成した場合、この機能を使用するには、\\ "
"`csproj` ファイルを変更または再生成する必要があります (``<DefineConstants>`` "
"を新しい3.2+プロジェクトと比較してください)。"

msgid "Examples"
msgstr "例"

msgid "For example, you can change code based on the platform:"
msgstr "たとえば、プラットフォームに基づいてコードを変更できます:"

msgid ""
"Or you can detect which engine your code is in, useful for making cross-"
"engine libraries:"
msgstr ""
"または、コードがどのエンジンにあるかを検出できます。これは、クロスエンジンラ"
"イブラリを作成するのに役立ちます:"

msgid "Full list of defines"
msgstr "定義の完全なリスト"

msgid "``GODOT`` is always defined for Godot projects."
msgstr "Godotプロジェクトでは、\\ ``GODOT`` が常に定義されています。"

msgid ""
"One of ``GODOT_64`` or ``GODOT_32`` is defined depending on if the "
"architecture is 64-bit or 32-bit."
msgstr ""
"アーキテクチャが64ビットか32ビットかによって、\\ ``GODOT_64`` または "
"``GODOT_32`` のいずれかが定義されます。"

msgid ""
"When **exporting**, the following may also be defined depending on the "
"export features:"
msgstr "**エクスポート** する場合、エクスポート機能に応じて以下も定義できます:"

msgid ""
"One of ``GODOT_PC``, ``GODOT_MOBILE``, or ``GODOT_WEB`` depending on the "
"platform type."
msgstr ""
"プラットフォームの種類に応じて、\\ ``GODOT_PC``\\ 、\\ ``GODOT_MOBILE``\\ 、"
"または ``GODOT_WEB`` のいずれか。"

msgid "Translation status"
msgstr "翻訳ステータス"
