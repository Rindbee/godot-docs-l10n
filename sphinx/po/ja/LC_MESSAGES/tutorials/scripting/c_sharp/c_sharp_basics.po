#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# basics"
msgstr "C# の基本"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If you "
"aren't already familiar with its syntax or features, see the `Microsoft C# "
"guide <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ or look for a "
"suitable introduction elsewhere."
msgstr ""
"これはC#言語全体に関する本格的なチュートリアルでは\\ **ありません**\\ 。まだ"
"その構文や機能に慣れていなければ、\\ `Microsoft C#ガイド <https://docs."
"microsoft.com/ja-jp/dotnet/csharp/index>`_\\ や他の適切な入門書を参照してくだ"
"さい。"

msgid "Prerequisites"
msgstr "前提条件"

msgid "Configuring an external editor"
msgstr "外部エディタの設定"

msgid "Visual Studio Code"
msgstr "\\ Visual Studio Code"

msgid "MonoDevelop"
msgstr "\\ MonoDevelop"

msgid "Visual Studio for Mac"
msgstr "\\ Visual Studio for Mac"

msgid "JetBrains Rider"
msgstr "\\ JetBrains Rider"

msgid "In Visual Studio Code:"
msgstr "Visual Studio Codeの場合："

msgid "Visual Studio (Windows only)"
msgstr "Visual Studio (Windows のみ)"

msgid "Creating a C# script"
msgstr "C#スクリプトの作成"

msgid "Project setup and workflow"
msgstr "プロジェクトの設定とワークフロー"

msgid "Example"
msgstr "サンプル"

msgid ""
"Here's a blank C# script with some comments to demonstrate how it works."
msgstr "以下に、空白のC#スクリプトと、その動作を示すコメントを示します。"

msgid ""
"Keep in mind that the class you wish to attach to your node should have the "
"same name as the ``.cs`` file. Otherwise, you will get the following error:"
msgstr ""
"ノードにアタッチするクラスは ``.cs`` ファイルと同じ名前でなければならないこと"
"に注意してください。そうしないと、次のようなエラーが発生します:"

msgid "General differences between C# and GDScript"
msgstr "C#とGDScriptの一般的な違い"

msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++. "
"Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is "
"reasonably possible."
msgstr ""
"C# APIはGDScript/C++の ``snake_case`` の代わりに ``PascalCase`` を使います。 "
"可能であれば、フィールドとゲッター/セッターはプロパティに変換されています。一"
"般的に、C# Godot APIは合理的に可能な限り慣用的であるように努めています。"

msgid "For more information, see the :ref:`doc_c_sharp_differences` page."
msgstr ""
"詳細については、\\ :ref:`doc_c_sharp_differences` ページを参照してください。"

msgid "Current gotchas and known issues"
msgstr "現在の課題と既知の問題"

msgid ""
"Writing editor plugins is possible, but it is currently quite convoluted."
msgstr "エディタプラグインの作成は可能ですが、現在は非常に複雑です。"

msgid ""
"State is currently not saved and restored when hot-reloading, with the "
"exception of exported variables."
msgstr ""
"現在、エクスポートされた変数を除き、状態(State)は保存およびホットリロード時に"
"復元されません。"

msgid ""
"Attached C# scripts should refer to a class that has a class name that "
"matches the file name."
msgstr ""
"アタッチされた C#スクリプトは、ファイル名と一致するクラス名を持つクラスを参照"
"する必要があります。"

msgid "Performance of C# in Godot"
msgstr "GodotにおけるC#のパフォーマンス"

msgid "Using NuGet packages in Godot"
msgstr "GodotでのNuGetパッケージの使用"

msgid ""
"`NuGet <https://www.nuget.org/>`_ packages can be installed and used with "
"Godot, as with any C# project. Many IDEs are able to add packages directly. "
"They can also be added manually by adding the package reference in the ``."
"csproj`` file located in the project root:"
msgstr ""
"`NuGet <https://www.nuget.org/>` パッケージは、他のC#プロジェクトと同様に、"
"Godotでインストールおよび使用できます。多くのIDEは、パッケージを直接追加でき"
"ます。プロジェクトのルートにある ``.csproj`` ファイルにパッケージ参照を追加す"
"ることにより、手動で追加することもできます:"

msgid "Profiling your C# code"
msgstr "C#コードのプロファイリング"

msgid "Translation status"
msgstr "翻訳ステータス"
