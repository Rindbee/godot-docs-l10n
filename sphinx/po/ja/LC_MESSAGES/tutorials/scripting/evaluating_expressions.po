#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Evaluating expressions"
msgstr "式の評価"

msgid ""
"Godot provides an :ref:`class_Expression` class you can use to evaluate "
"expressions."
msgstr ""
"Godotは式の評価に使用できる :ref:`class_Expression` クラスを提供します。"

msgid "An expression can be:"
msgstr "式は次のとおりです:"

msgid "A mathematical expression such as ``(2 + 4) * 16/4.0``."
msgstr "``(2 + 4) * 16/4.0`` のような数式。"

msgid "A built-in method call like ``deg_to_rad(90)``."
msgstr "``deg_to_rad(90)`` のような組み込みメソッドの呼び出し。"

msgid ""
"A method call on a user-provided script like ``update_health()``, if "
"``base_instance`` is set to a value other than ``null`` when "
"calling :ref:`Expression.execute() <class_Expression_method_execute>`."
msgstr ""
"``update_health()`` などのユーザースクリプトに対するメソッド呼び出し "
"( :ref:`Expression.execute() <class_Expression_method_execute>` を呼び出すと"
"きに ``base_instance`` が ``null`` 以外の値に設定されている場合)。"

msgid ""
"The Expression class is independent from GDScript. It's available even if "
"you compile Godot with the GDScript module disabled."
msgstr ""
"ExpressionクラスはGDScriptから独立しています。 GDScriptモジュールを無効にして"
"Godotをコンパイルした場合でも使用できます。"

msgid "To evaluate a mathematical expression, use::"
msgstr "数式を評価するには、次のコードを使用します:"

msgid "The following operators are available:"
msgstr "これらの演算子が使用可能です:"

msgid "Operator"
msgstr "演算子"

msgid "Notes"
msgstr "備考"

msgid "Addition ``+``"
msgstr "加算 ``+``"

msgid ""
"Can also be used to concatenate strings and arrays: - ``\"hello\" + \" "
"world\"`` = ``hello world`` - ``[1, 2] + [3, 4]`` = ``[1, 2, 3, 4]``"
msgstr ""
"文字列と配列を連結するためにも使用できます: - ``\"hello\" + \" world\"`` = "
"``hello world`` - ``[1, 2] + [3, 4]`` = ``[1 、2、3、4]``"

msgid "Subtraction (``-``)"
msgstr "減算 (``-``)"

msgid "Multiplication (``*``)"
msgstr "乗算 (``*``)"

msgid "Division (``/``)"
msgstr "除算 (``/``)"

msgid ""
"Performs and integer division if both operands are integers. If at least one "
"of them is a floating-point number, returns a floating-point value."
msgstr ""
"両辺が整数の場合は整数の除算を実行します。どちらか1つが浮動小数点数の場合は浮"
"動小数点値を返します。"

msgid ""
"Spaces around operators are optional. Also, keep in mind the usual `order of "
"operations <https://en.wikipedia.org/wiki/Order_of_operations>`__ applies. "
"Use parentheses to override the order of operations if needed."
msgstr ""
"演算子の周囲のスペースはオプションです。また通常の `演算子の優先順位 "
"<https://ja.wikipedia.org/wiki/"
"%E6%BC%94%E7%AE%97%E5%AD%90%E3%81%AE%E5%84%AA%E5%85%88%E9%A0%86%E4%BD%8D>`__ "
"が適用されることに注意してください。必要に応じて括弧を使用して操作の順序を指"
"定します。"

msgid ""
"All the Variant types supported in Godot can be used: integers, floating-"
"point numbers, strings, arrays, dictionaries, colors, vectors, …"
msgstr ""
"Godotでサポートされているすべてのバリアント型 (整数、浮動小数点数、文字列、配"
"列、辞書、色、ベクトルなど) を使用できます…"

msgid "Arrays and dictionaries can be indexed like in GDScript::"
msgstr "配列と辞書にはGDScriptのようにインデックスを付けることができます:"

msgid "Passing variables to an expression"
msgstr "変数を式に渡す"

msgid ""
"You can pass variables to an expression. These variables will then become "
"available in the expression's \"context\" and will be substituted when used "
"in the expression::"
msgstr ""
"変数を式に渡すことができます。これらの変数は式の中で使用できるようになり、式"
"で使用されるときに置換されます:"

msgid ""
"Both the variable names and variable values **must** be specified as an "
"array, even if you only define one variable. Also, variable names are **case-"
"sensitive**."
msgstr ""
"変数を1つだけ定義する場合でも、変数名と変数値の両方を配列として指定する**必要"
"があります**。また、変数名は**大文字と小文字が区別されます**。"

msgid "Setting a base instance for the expression"
msgstr "式のベースインスタンスを設定する"

msgid ""
"By default, an expression has a base instance of ``null``. This means the "
"expression has no base instance associated to it."
msgstr ""
"デフォルトでは、式のベースインスタンスは ``null`` です。これは式にベースイン"
"スタンスが関連付けられていないことを意味します。"

msgid ""
"When calling :ref:`Expression.execute() <class_Expression_method_execute>`, "
"you can set the value of the ``base_instance`` parameter to a specific "
"object instance such as ``self``, another script instance or even a "
"singleton::"
msgstr ""
":ref:`Expression.execute() <class_Expression_method_execute>` を呼び出すと"
"き、 ``base_instance`` パラメータの値を ``self`` などのオブジェクトインスタン"
"スや別のスクリプトインスタンス、または特定のシングルトンに設定できます:"

msgid "Associating a base instance allows doing the following:"
msgstr "ベースインスタンスを関連付けることで、次のことが可能になります。"

msgid "Reference the instance's constants (``const``) in the expression."
msgstr "式の中でインスタンスの定数 (``const``) が参照できます。"

msgid "Reference the instance's member variables (``var``) in the expression."
msgstr "式の中でインスタンスのメンバ変数 (``var``) が参照できます。"

msgid ""
"Call methods defined in the instance and use their return values in the "
"expression."
msgstr ""
"インスタンスで定義されたメソッドを呼び出し、その戻り値を式で使用できます。"

msgid ""
"Setting a base instance to a value other than ``null`` allows referencing "
"constants, member variables, and calling all methods defined in the script "
"attached to the instance. Allowing users to enter expressions may allow "
"cheating in your game, or may even introduce security vulnerabilities if you "
"allow arbitrary clients to run expressions on other players' devices."
msgstr ""
"ベースインスタンスを ``null`` 以外の値に設定すると、定数やメンバー変数を参照"
"したり、インスタンスにアタッチされたスクリプトで定義されているすべてのメソッ"
"ドを呼び出すことができます。なおユーザーに式の入力を許可すると、ゲーム内で不"
"正行為が可能になる可能性があり、また任意のクライアントが他のプレイヤーのデバ"
"イス上で式を実行できるようにすると、セキュリティ上の脆弱性が導入される可能性"
"もあります。"

msgid "Example script"
msgstr "スクリプトの例"

msgid "The script below demonstrates what the Expression class is capable of::"
msgstr "以下のスクリプトは、Expressionクラスの機能を示しています:"

msgid "The output from the script will be::"
msgstr "この出力は次のようになります:"

msgid "Built-in functions"
msgstr "ビルトイン関数"

msgid ""
"All methods in the :ref:`Global Scope<class_@GlobalScope>` are available in "
"the Expression class, even if no base instance is bound to the expression. "
"The same parameters and return types are available."
msgstr ""
":ref:`グローバルスコープ<class_@GlobalScope>` 内のすべてのメソッドは、ベース"
"インスタンスが式にバインドされていない場合でも、Expressionクラスで使用できま"
"す。同じパラメータと戻り値の型が使用できます。"

msgid ""
"However, unlike GDScript, parameters are **always required** even if they're "
"specified as being optional in the class reference. In contrast, this "
"restriction on arguments doesn't apply to user-made functions when you bind "
"a base instance to the expression."
msgstr ""
"ただしGDScriptとは異なり、クラス参照でオプションとして指定されている場合で"
"も、パラメーターは**常に必須**です。対照的に、ベースインスタンスを式にバイン"
"ドする場合、引数に関するこの制限はユーザーが作成した関数には適用されません。"
