#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Available 3D formats"
msgstr "利用可能な3Dフォーマット"

msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr ""
"3Dアセットを扱う場合、Godotには柔軟で設定可能なインポーターがあります。"

msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D modeling software will be transferred as close as "
"possible."
msgstr ""
"Godot は *シーン* で動作します。つまり、お気に入りの 3Dモデリングソフトウェア"
"で作業中のシーン全体が、可能な限りそのまま転送されます。"

msgid "Godot supports the following 3D *scene file formats*:"
msgstr "Godotは、次の3D\\ *シーンファイルフォーマット*\\ をサポートしています:"

msgid ""
"glTF 2.0 **(recommended)**. Godot has support for both text (``.gltf``) and "
"binary (``.glb``) formats."
msgstr ""
"glTF 2.0 **(推奨)**。Godotはテキスト(``.gltf``) とバイナリ(``.glb``) の両方の"
"形式をサポートしています。"

msgid ""
"``.blend`` (Blender). This works by calling Blender to export to glTF in a "
"transparent manner (requires Blender to be installed)."
msgstr ""
"``.blend`` (Blender)。これは裏でBlender本体を呼び出して glTF にエクスポートす"
"ることで機能します (Blender がインストールされている必要があります)。"

msgid "DAE (COLLADA), an older format that is supported."
msgstr "DAE(COLLADA)、サポートされている古い形式です。"

msgid ""
"OBJ (Wavefront) format + their MTL material files. This is also supported, "
"but pretty limited given the format's limitations (no support for pivots, "
"skeletons, animations, UV2, PBR materials, ...)."
msgstr ""
"OBJ (Wavefront)フォーマット + MTLマテリアルファイル。これもサポートされていま"
"すが、かなり制限されています (ピボット、スケルトン、アニメーション、UV2、PBR"
"マテリアルなどはサポートされていません)。"

msgid ""
"FBX, supported via the `ufbx <https://github.com/ufbx/ufbx>`__ library. The "
"previous import workflow used `FBX2glTF <https://github.com/godotengine/"
"FBX2glTF>`__ integration. This requires installing an external program that "
"links against the proprietary FBX SDK, so we recommend using the default "
"ubfx method or other formats listed above (if suitable for your workflow)."
msgstr ""
"FBXは `ufbx <https://github.com/ufbx/ufbx>`__ ライブラリを介してサポートされ"
"ます。以前のインポートワークフローでは、`FBX2glTF <https://github.com/"
"godotengine/FBX2glTF>`__ が使用されていました。これには独自のFBX SDKにリンク"
"する外部プログラムをインストールする必要があるため、デフォルトの ubfxメソッ"
"ド、または上記の他のフォーマット (ワークフローに適している場合) を使用するこ"
"とをお勧めします。"

msgid ""
"Copy the scene file together with the textures and mesh data (if separate) "
"to the project repository, then Godot will do a full import when focusing "
"the editor window."
msgstr ""
"シーンファイルをテクスチャとメッシュデータ (別々になっている場合) と一緒にプ"
"ロジェクトリポジトリにコピーし、エディターウィンドウにフォーカスを当てると "
"Godot が完全なインポート処理を実行します。"

msgid "Exporting glTF 2.0 files from Blender (recommended)"
msgstr "Blender から glTF 2.0 ファイルをエクスポートする (推奨)"

msgid "There are 3 ways to export glTF files from Blender:"
msgstr "Blender から glTFファイルをエクスポートする方法は3つあります:"

msgid "As a glTF binary file (``.glb``)."
msgstr "glTF バイナリファイル (``.glb``) としてエクスポート。"

msgid ""
"As a glTF text-based file with separate binary data and textures (``.gltf`` "
"file + ``.bin`` file + textures)."
msgstr ""
"バイナリデータとテクスチャが別々に含まれた glTF テキストベースのファイル (``."
"gltf`` ファイル + ``.bin`` ファイル + テクスチャ) としてエクスポート。"

msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text-based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those, "
"glTF binary files are fine."
msgstr ""
"テクスチャを分離してglTFを使用する理由は2つあります。 1つ目はシーン記述はテキ"
"ストベース形式にして、バイナリデータは別のバイナリファイルで持つことです。こ"
"れはテキストベース形式の変更をバージョン管理で確認する場合に役立ちます。 2つ"
"目はマテリアルファイルとは別のテクスチャファイルが必要です。どちらも必要ない"
"場合は、glTFバイナリ ファイルで十分です。"

msgid ""
"The glTF import process first loads the glTF file's data into an in-memory "
"GLTFState class. This data is then used to generate a Godot scene. When "
"importing files at runtime, this scene can be directly added to the tree. "
"The export process is the reverse of this, a Godot scene is converted to a "
"GLTFState class, then the glTF file is generated from that."
msgstr ""
"glTF インポートプロセスでは、まず glTF ファイルのデータをメモリ内の "
"GLTFState クラスに読み込みます。次にこのデータを使用して Godot シーンが生成さ"
"れます。実行時にファイルをインポートすると、このシーンをツリーに直接追加でき"
"ます。エクスポートプロセスはこれと逆で、Godot シーンが GLTFState クラスに変換"
"され、そこから glTF ファイルが生成されます。"

msgid ""
"Diagram explaining the runtime import and export process for glTF files in "
"Godot"
msgstr ""
"Godot での glTF ファイルの実行時のインポートおよびエクスポートプロセスを説明"
"する図"

msgid ""
"When importing glTF files in the editor, there are two more steps. After "
"generating the Godot scene, the ResourceImporterScene class is used to apply "
"additional import settings, including settings you set through the Import "
"dock and the Advanced Import Settings dialog. This is then saved as a Godot "
"scene file, which is what gets used when you run/export your game."
msgstr ""
"エディターで glTF ファイルをインポートする場合、さらに2つの手順があります。"
"Godot シーンを生成した後、ResourceImporterScene クラスを使用して、インポート"
"ドックや高度なインポート設定ダイアログで設定した設定を含む追加のインポート設"
"定を適用します。これはその後、Godot シーンファイルとして保存され、ゲームを実"
"行/エクスポートするときに使用されます。"

msgid "Diagram explaining the editor import process for glTF files in Godot"
msgstr "Godot での glTF ファイルのエディターインポートプロセスを説明する図"

msgid ""
"If your model contains blend shapes (also known as \"shape keys\" and "
"\"morph targets\"), your glTF export setting **Export Deformation Bones "
"Only** needs to be configured to **Enabled** under the Animation export "
"configurations."
msgstr ""
"モデルにブレンドシェイプ (「シェイプキー」および「モーフターゲット」とも呼ば"
"れます) が含まれている場合は、アニメーション エクスポート構成で glTF エクス"
"ポート設定の **変形ボーンのみエクスポート** を **有効** に設定する必要があり"
"ます。"

msgid "Exporting non-deforming bones anyway will lead to incorrect shading."
msgstr ""
"とにかく変形しないボーンをエクスポートすると、シェーディングが不正確になりま"
"す。"

msgid ""
"Blender versions older than 3.2 do not export emissive textures with the "
"glTF file. If your model uses one and you're using an older version of "
"Blender, it must be brought in separately."
msgstr ""
"Blender 3.2 より前のバージョンでは、glTFファイルでエミッシブテクスチャをエク"
"スポートしません。モデルでエミッシブテクスチャが使用されており、古いバージョ"
"ンの Blender を使用している場合は、別途取り込む必要があります。"

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""
"デフォルトでは Blender はマテリアルの背面カリングを無効にしており、Blender で"
"のレンダリング方法に合わせてマテリアルをエクスポートします。つまり Godot のマ"
"テリアルのカリング モードは **無効** に設定されます。これにより他の面によって"
"カリングされている場合でも背面がレンダリングされるため、パフォーマンスが低下"
"する可能性があります。これを解決するには、Blender の [マテリアル] タブで **背"
"面カリング** を有効にしてから、シーンを再度 glTF にエクスポートします。"

msgid "Importing ``.blend`` files directly within Godot"
msgstr "Godot 内で直接 ``.blend`` ファイルをインポートする"

msgid ""
"This functionality requires Blender 3.0 or later. For best results, we "
"recommend using Blender 3.5 or later, as it includes many fixes to the glTF "
"exporter."
msgstr ""
"この機能を使用するには Blender 3.0 以降が必要です。できるだけ最良の結果を得る"
"ため、glTF エクスポーターの多くの修正が含まれている、Blender 3.5 以降を使用す"
"ることをお勧めします。"

msgid ""
"It is **strongly** recommended to use an official Blender release downloaded "
"from blender.org, as opposed to a Linux distribution package or Flatpak. "
"This avoids any issues related to packaging, such as different library "
"versions that can cause incompatibilities or sandboxing restrictions."
msgstr ""
"Linux ディストリビューションパッケージや Flatpak ではなく、blender.org からダ"
"ウンロードした公式 Blender リリースを使用することを **強く** 推奨します。これ"
"により非互換性やサンドボックスの制限を引き起こす可能性のある、異なるライブラ"
"リバージョンなど、パッケージ化に関連する問題を回避できます。"

msgid ""
"This allows you to iterate on your 3D scenes faster, as you can save the "
"scene in Blender, alt-tab back to Godot then see your changes immediately. "
"When working with version control, this is also more efficient as you no "
"longer need to commit a copy of the exported glTF file to version control."
msgstr ""
"これにより Blender でシーンを保存し、Altキーを押しながら Tabキーで Godot に"
"戻って変更をすぐに確認できるため、3Dシーンをより速くイテレーションできます。"
"バージョン管理で作業する場合、エクスポートされた glTF ファイルのコピーをバー"
"ジョン管理にコミットする必要がなくなるため、より効率的になります。"

msgid ""
"If you keep ``.blend`` files within your project folder but don't want them "
"to be imported by Godot, disable **Filesystem > Import > Blender > Enabled** "
"in the advanced Project Settings."
msgstr ""
"プロジェクトフォルダ内に ``.blend`` ファイルを保持し、それらを Godot でイン"
"ポートしたくない場合は、高度なプロジェクト設定で **ファイルシステム > イン"
"ポート > Blender > 有効** をオフにします。"

msgid ""
"The ``.blend`` import process converts to glTF first, so it still uses "
"Godot's glTF import code. Therefore, the ``.blend`` import process is the "
"same as the glTF import process, but with an extra step at the beginning."
msgstr ""
"``.blend`` インポートプロセスは最初に glTF に変換するため、Godot の glTF イン"
"ポート処理が行われます。したがって ``.blend`` インポートプロセスは glTF イン"
"ポートプロセスと同じですが、最初に追加の手順があります。"

msgid "Diagram explaining the import process for Blender files in Godot"
msgstr "Godot での Blender ファイルのインポートプロセスを説明する図"

msgid ""
"When working in a team, keep in mind using ``.blend`` files in your project "
"will require *all* team members to have Blender installed. While Blender is "
"a free download, this may add friction when working on the project. ``."
"blend`` import is also not available on the Android and web editors, as "
"these platforms can't call external programs."
msgstr ""
"チームで作業する場合、プロジェクトで ``.blend`` ファイルを使用するには、チー"
"ム メンバー全員に Blender がインストールされている必要があることに注意してく"
"ださい。Blender は無料でダウンロードできますが、プロジェクトで作業するときに"
"手間がかかる可能性があります。また、Android および Webエディターでは外部プロ"
"グラムを呼び出すことができないため、``.blend`` インポートは利用できません。"

msgid ""
"If this is problematic, consider using glTF scenes exported from Blender "
"instead."
msgstr ""
"これが問題になる場合は、代わりに Blender からエクスポートされた glTF シーンの"
"使用を検討してください。"

msgid "Exporting DAE files from Blender"
msgstr "BlenderからDAEファイルをエクスポートする"

msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and shouldn't be used as-is. However, scenes exported "
"with the built-in Collada support may still work for simple scenes without "
"animation."
msgstr ""
"BlenderにはCOLLADAサポートが組み込まれていますが、ゲームエンジンのニーズでは"
"適切に機能しないため、そのままでは使用しないでください。ただし組み込みの "
"Collada サポートを使用してエクスポートされたシーンは、アニメーションのない単"
"純なシーンでは引き続き機能する可能性があります。"

msgid "Importing OBJ files in Godot"
msgstr "Godot にOBJファイルをインポートする"

msgid ""
"OBJ is one of the simplest 3D formats out there, so Godot should be able to "
"import most OBJ files successfully. However, OBJ is also a very limited "
"format: it doesn't support skinning, animation, UV2 or PBR materials."
msgstr ""
"OBJ は最もシンプルな3D形式の1つなので、Godot はほとんどのOBJファイルを正常に"
"インポートできるはずです。ただし OBJ は非常に制限されたフォーマットでもありま"
"す。スキニング、アニメーション、UV2、PBR マテリアルはサポートされていません。"

msgid "There are 2 ways to use OBJ meshes in Godot:"
msgstr "Godot でOBJメッシュを使用する方法は 2 つあります:"

msgid ""
"Load them directly in a MeshInstance3D node, or any other property that "
"expects as mesh (such as GPUParticles3D). This is the default mode."
msgstr ""
"MeshInstance3Dノード、またはメッシュとして期待されるその他のプロパティ "
"(GPUParticles3D など) に直接ロードします。これがデフォルトのモードです。"

msgid ""
"Change their import mode to **OBJ as Scene** in the Import dock then restart "
"the editor. This allows you to use the same import options as glTF or "
"Collada scenes, such as unwrapping UV2 on import (for :ref:"
"`doc_using_lightmap_gi`)."
msgstr ""
"インポートドックでインポートモードを **OBJ as Scene** に変更し、エディターを"
"再起動します。これによりインポート時に UV2 をアンラップするなど、glTF または "
"Collada シーンと同じインポートオプションを使用できるようになります (:ref:"
"`doc_using_lightmap_gi` の場合)。"

msgid ""
"Vertex colors from OBJ meshes keep their original color space once imported "
"(sRGB/linear), but their brightness is clamped to 1.0 (they can't be "
"overbright)."
msgstr ""
"OBJメッシュの頂点カラーは、インポートされると元のカラースペース (sRGB/リニ"
"ア) が維持されますが、明るさは 1.0 に固定されます (明るすぎることはできませ"
"ん)。"

msgid "Importing FBX files in Godot"
msgstr "Godot にFBXファイルをインポートする"

msgid ""
"By default any FBX file added to a Godot project in Godot 4.3 or later will "
"use the ufbx import method. Any file that was was added to a project in a "
"previous version, such as 4.2, will continue to be imported via the FBX2glTF "
"method unless you go into that files import settings, and change the "
"importer to  ``ufbx``."
msgstr ""
"デフォルトでは、Godot 4.3 以降のGodotプロジェクトに追加されたFBXファイルはす"
"べて、ufbx インポートメソッドを使用します。4.2 などの以前のバージョンでプロ"
"ジェクトに追加されたファイルは、そのファイルのインポート設定に移動してイン"
"ポーターを ``ufbx`` に変更しない限り、引き続き FBX2glTF メソッドでインポート"
"されます。"

msgid ""
"If you keep ``.fbx`` files within your project folder but don't want them to "
"be imported by Godot, disable **Filesystem > Import > FBX > Enabled** in the "
"advanced Project Settings."
msgstr ""
"プロジェクトフォルダ内に ``.fbx`` ファイルを保持し、それらを Godot でインポー"
"トしたくない場合は、高度なプロジェクト設定で **ファイルシステム > インポート "
"> FBX > 有効** をオフにします。"

msgid ""
"If you want to setup the FBX2glTF workflow, which is generally not recommend "
"unless you have a specific reason to use it, you need to download the "
"`FBX2glTF <https://github.com/godotengine/FBX2glTF>`__ executable, then "
"specify the path to that executable in the editor settings under "
"**Filesystem > Import > FBX > FBX2glTFPath**"
msgstr ""
"FBX2glTFワークフローを設定する場合は、特別な理由がない限り通常は推奨されませ"
"んが、`FBX2glTF <https://github.com/godotengine/FBX2glTF>`__ 実行ファイルをダ"
"ウンロードし、**ファイルシステム > インポート > FBX > FBX2glTFPath** のエディ"
"ター設定でその実行ファイルへのパスを指定する必要があります"

msgid ""
"The FBX2glTF import process converts to glTF first, so it still uses Godot's "
"glTF import code. Therefore, the FBX import process is the same as the glTF "
"import process, but with an extra step at the beginning."
msgstr ""
"FBX2glTF インポートプロセスでは、まず glTF に変換するため、Godot の glTF イン"
"ポートコードが引き続き使用されます。したがって、FBX インポートプロセスは "
"glTF インポート プロセスと同じですが、最初に追加の手順があります。"

msgid ""
"Diagram explaining the import process for FBX files in Godot  via FBX2glTF"
msgstr ""
"FBX2glTF 経由で Godot にFBXファイルをインポートするプロセスを説明する図"

msgid ""
"The full installation process for using FBX2glTF in Godot is described on "
"the `FBX import page of the Godot website <https://godotengine.org/fbx-"
"import>`__."
msgstr ""
"Godot で FBX2glTF を使用するための完全なインストールプロセスについては、"
"Godot Web サイトの `FBXインポートページ <https://godotengine.org/fbx-"
"import>`__ で説明されています。"
