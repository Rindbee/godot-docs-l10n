#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Making plugins"
msgstr "プラグインの作成"

msgid "About plugins"
msgstr "プラグインについて"

msgid ""
"A plugin is a great way to extend the editor with useful tools. It can be "
"made entirely with GDScript and standard scenes, without even reloading the "
"editor. Unlike modules, you don't need to create C++ code nor recompile the "
"engine. While this makes plugins less powerful, there are still many things "
"you can do with them. Note that a plugin is similar to any scene you can "
"already make, except it is created using a script to add editor "
"functionality."
msgstr ""
"プラグインは、便利なツールを使用してエディタを拡張する優れた方法です。エディ"
"タをリロードしなくても、GDScriptと標準シーンで完全に作成できます。モジュール"
"とは異なり、C++コードを作成したり、エンジンを再コンパイルしたりする必要はあり"
"ません。これによりプラグインのパワフルさが低下しますが、プラグインでできるこ"
"とはまだたくさんあります。プラグインは、エディタ機能を追加するスクリプトを使"
"用して作成されることを除いて、すでに作成できるシーンに似ていることに注意して"
"ください。"

msgid "Creating a plugin"
msgstr "プラグインの作成"

msgid ""
"Before starting, create a new empty project wherever you want. This will "
"serve as a base to develop and test the plugins."
msgstr ""
"開始する前に、必要な場所に新しい空のプロジェクトを作成します。これは、プラグ"
"インを開発およびテストするためのベースとして機能します。"

msgid ""
"The first thing you need for the editor to identify a new plugin is to "
"create two files: a ``plugin.cfg`` for configuration and a tool script with "
"the functionality. Plugins have a standard path like ``addons/plugin_name`` "
"inside the project folder. Godot provides a dialog for generating those "
"files and placing them where they need to be."
msgstr ""
"エディタが新しいプラグインを識別するために最初に必要なことは、設定用の "
"``plugin.cfg`` と機能を備えたツールスクリプトの2つのファイルを作成することで"
"す。 プラグインには、プロジェクトフォルダ内に ``addons/plugin_name`` のような"
"標準パスがあります。Godotは、これらのファイルを生成し、必要な場所に配置するた"
"めのダイアログを提供します。"

msgid "You will see the dialog appear, like so:"
msgstr "次のようなダイアログが表示されます:"

msgid ""
"The placeholder text in each field describes how it affects the plugin's "
"creation of the files and the config file's values."
msgstr ""
"各フィールドのプレースホルダーテキストは、プラグインによるファイルの作成と構"
"成ファイルの値にどのように影響するかを説明しています。"

msgid "You should end up with a directory structure like this:"
msgstr "次のようなディレクトリ構造になるはずです:"

msgid "The script file"
msgstr "スクリプトファイル"

msgid "This is a good template to use when creating new plugins."
msgstr ""
"これは、新しいプラグインを作成するときに使用するのに適したテンプレートです。"

msgid "A custom node"
msgstr "カスタム ノード"

msgid ""
"Sometimes you want a certain behavior in many nodes, such as a custom scene "
"or control that can be reused. Instancing is helpful in a lot of cases, but "
"sometimes it can be cumbersome, especially if you're using it in many "
"projects. A good solution to this is to make a plugin that adds a node with "
"a custom behavior."
msgstr ""
"再利用可能なカスタムシーンやコントロールなど、多くのノードで特定の動作が必要"
"な場合があります。 インスタンス化は多くの場合に役立ちますが、多くのプロジェク"
"トでインスタンス化を使用している場合は特に、面倒な場合があります。 これに対す"
"る適切な解決策は、カスタムの動作を持つノードを追加するプラグインを作成するこ"
"とです。"

msgid ""
"Now, we need to add it as a custom type so it shows on the **Create New "
"Node** dialog. For that, change the ``custom_node.gd`` script to the "
"following:"
msgstr ""
"次に、\\ **Nodeを新規作成 ** ダイアログに表示されるように、カスタムタイプとし"
"て追加する必要があります。そのためには、\\ ``custom_node.gd`` スクリプトを次"
"のように変更します:"

msgid ""
"With that done, the plugin should already be available in the plugin list in "
"the **Project Settings**, so activate it as explained in `Checking the "
"results`_."
msgstr ""
"これが完了すると、プラグインは **プロジェクト設定** のプラグインリストですで"
"に使用可能になっているはずなので、\\ `Checking the results`_ で説明されている"
"ようにアクティブにします。"

msgid "Then try it out by adding your new node:"
msgstr "次に、新しいノードを追加して試してください:"

msgid ""
"When you add the node, you can see that it already has the script you "
"created attached to it. Set a text to the button, save and run the scene. "
"When you click the button, you can see some text in the console:"
msgstr ""
"ノードを追加すると、作成したスクリプトが既に接続されていることがわかります。 "
"ボタンにテキストを設定し、シーンを保存して実行します。 ボタンをクリックする"
"と、コンソールにテキストが表示されます:"

msgid "A custom dock"
msgstr "カスタムドック"

msgid ""
"Sometimes, you need to extend the editor and add tools that are always "
"available. An easy way to do it is to add a new dock with a plugin. Docks "
"are just scenes based on Control, so they are created in a way similar to "
"usual GUI scenes."
msgstr ""
"場合によっては、エディタを拡張し、常に使用可能なツールを追加する必要がありま"
"す。簡単な方法は、新しいドックにプラグインを追加することです。ドックはコント"
"ロールに基づいた単なるシーンであるため、通常のGUIシーンと同様の方法で作成され"
"ます。"

msgid ""
"Creating a custom dock is done just like a custom node. Create a new "
"``plugin.cfg`` file in the ``addons/my_custom_dock`` folder, then add the "
"following content to it:"
msgstr ""
"カスタムドックの作成は、カスタムノードのように行われます。\\ ``addons/"
"my_custom_dock`` フォルダに新しい ``plugin.cfg`` ファイルを作成し、次のコンテ"
"ンツを追加します:"

msgid ""
"Then create the script ``custom_dock.gd`` in the same folder. Fill it with "
"the :ref:`template we've seen before <doc_making_plugins_template_code>` to "
"get a good start."
msgstr ""
"に、同じフォルダにスクリプト ``custom_dock.gd`` を作成します。良いスタートを"
"切るために、\\ :ref:`前に見たテンプレート <doc_making_plugins_template_code> "
"` を入力してください。"

msgid ""
"Since we're trying to add a new custom dock, we need to create the contents "
"of the dock. This is nothing more than a standard Godot scene: just create a "
"new scene in the editor then edit it."
msgstr ""
"新しいカスタムドックを追加しようとしているので、ドックのコンテンツを作成する"
"必要があります。これは、標準のGodotシーンに他なりません。エディタで新しいシー"
"ンを作成し、編集するだけです。"

msgid ""
"For an editor dock, the root node **must** be a :ref:`Control "
"<class_Control>` or one of its child classes. For this tutorial, you can "
"create a single button. The name of the root node will also be the name that "
"appears on the dock tab, so be sure to give it a short and descriptive name. "
"Also, don't forget to add some text to your button."
msgstr ""
"エディタドックの場合、ルートノードは **必ず** :ref:`Control <class_Control>` "
"またはその子クラスでなければなりません。このチュートリアルでは、1つのボタンを"
"作成できます。ルートノードの名前は、ドックタブに表示される名前でもあるため、"
"必ず短くわかりやすい名前を付けてください。また、ボタンにテキストを追加するこ"
"とを忘れないでください。"

msgid ""
"Save this scene as ``my_dock.tscn``. Now, we need to grab the scene we "
"created then add it as a dock in the editor. For this, you can rely on the "
"function :ref:`add_control_to_dock() "
"<class_EditorPlugin_method_add_control_to_dock>` from the :ref:`EditorPlugin "
"<class_EditorPlugin>` class."
msgstr ""
"このシーンを ``my_dock.tscn`` として保存します。次に、作成したシーンを取得"
"し、エディタでドックとして追加する必要があります。このために、\\ :ref:"
"`EditorPlugin <class_EditorPlugin>` クラスの関数 :ref:`add_control_to_dock() "
"<class_EditorPlugin_method_add_control_to_dock>` を使用できます。"

msgid ""
"You need to select a dock position and define the control to add (which is "
"the scene you just created). Don't forget to **remove the dock** when the "
"plugin is deactivated. The script could look like this:"
msgstr ""
"ドックの位置を選択し、追加するコントロール(作成したばかりのシーン)を定義する"
"必要があります。プラグインが非アクティブになったら、\\ **ドックを削除する** "
"ことを忘れないでください。 スクリプトは次のようになります:"

msgid ""
"Note that, while the dock will initially appear at its specified position, "
"the user can freely change its position and save the resulting layout."
msgstr ""
"ドックは指定された位置に最初に表示されますが、ユーザーは自由に位置を変更し、"
"結果のレイアウトを保存できることに注意してください。"

msgid "Checking the results"
msgstr "結果の確認"

msgid "Going beyond"
msgstr "今後の展開"

msgid ""
"Now that you've learned how to make basic plugins, you can extend the editor "
"in several ways. Lots of functionality can be added to the editor with "
"GDScript; it is a powerful way to create specialized editors without having "
"to delve into C++ modules."
msgstr ""
"基本的なプラグインの作成方法を学習したので、エディタをいくつかの方法で拡張で"
"きます。GDScriptを使用して、多くの機能をエディタに追加できます。これは、C++モ"
"ジュールを詳しく掘り下げることなく、専用のエディタを作成するための強力な方法"
"です。"

msgid ""
"You can make your own plugins to help yourself and share them in the `Asset "
"Library <https://godotengine.org/asset-library/>`_ so that people can "
"benefit from your work."
msgstr ""
"自分でプラグインを作成して自分自身を助け、\\ `Asset Library <https://"
"godotengine.org/asset-library/>`_ で共有して、人々があなたの仕事から利益を得"
"られるようにすることができます。"

msgid "Translation status"
msgstr "翻訳ステータス"
