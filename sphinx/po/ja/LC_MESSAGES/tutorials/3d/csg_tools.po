#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Prototyping levels with CSG"
msgstr "CSGによるプロトタイピング"

msgid ""
"CSG stands for **Constructive Solid Geometry**, and is a tool to combine "
"basic shapes or custom meshes to create more complex shapes. In 3D modeling "
"software, CSG is mostly known as \"Boolean Operators\"."
msgstr ""
"CSGは **Constructive Solid Geometry** (空間領域構成法) の略で、基本的な形状あ"
"るいはカスタムメッシュを組み合わせることで、より複雑な形状を作成するツールで"
"す。3Dモデリングソフトウェアでは、CSGは『ブーリアン演算』という名でも知られて"
"います。"

msgid ""
"Level prototyping is one of the main uses of CSG in Godot. This technique "
"allows users to create the most common shapes by combining primitives. "
"Interior environments can be created by using inverted primitives."
msgstr ""
"レベルのプロトタイプ作成は、GodotでCSGを使う主な理由の一つです。このテクニッ"
"クにより、ユーザーはプリミティブを組み合わせることで、レベル地形でよく使われ"
"るような形状を作れます。インテリアマッピングも反転したプリミティブで作成でき"
"ます。"

msgid ""
"If you're looking for an easy to use level design tool for a project, you "
"may want to use `FuncGodot <https://github.com/func-godot/"
"func_godot_plugin>`__ or `Cyclops Level Builder <https://github.com/"
"blackears/cyclopsLevelBuilder>`__ instead."
msgstr ""
"プロジェクト用の使いやすいレベルデザインツールを探している場合は、代わりに "
"`FuncGodot <https://github.com/func-godot/func_godot_plugin>`__ または "
"`Cyclops Level Builder <https://github.com/blackears/cyclopsLevelBuilder>`__ "
"を使用することをお勧めします。"

msgid ""
"You can check how to use CSG nodes to build various shapes (such as stairs "
"or roads) using the `Constructive Solid Geometry demo project <https://"
"github.com/godotengine/godot-demo-projects/tree/master/3d/csg>`__."
msgstr ""
"CSGノードを使用してさまざまな形状 (階段や道路など) を構築する方法については、"
"`Constructive Solid Geometry デモプロジェクト <https://github.com/"
"godotengine/godot-demo-projects/tree/master/3d/csg>`__ を使用して確認できま"
"す。"

msgid "Introduction to CSG nodes"
msgstr "CSGノードの入門"

msgid ""
"Like other features of Godot, CSG is supported in the form of nodes. These "
"are the CSG nodes:"
msgstr ""
"Godotの他の機能と同様に、CSGもノードとしてサポートされています。これらがCSG"
"ノードです:"

msgid ":ref:`CSGBox3D <class_CSGBox3D>`"
msgstr ":ref:`CSGBox3D <class_CSGBox3D>`"

msgid ":ref:`CSGCylinder3D <class_CSGCylinder3D>` (also supports cone)"
msgstr ":ref:`CSGCylinder3D <class_CSGCylinder3D>` (コーン形状も可能)"

msgid ":ref:`CSGSphere3D <class_CSGSphere3D>`"
msgstr ":ref:`CSGSphere3D <class_CSGSphere3D>`"

msgid ":ref:`CSGTorus3D <class_CSGTorus3D>`"
msgstr ":ref:`CSGTorus3D <class_CSGTorus3D>`"

msgid ":ref:`CSGPolygon3D <class_CSGPolygon3D>`"
msgstr ":ref:`CSGPolygon3D <class_CSGPolygon3D>`"

msgid ":ref:`CSGMesh3D <class_CSGMesh3D>`"
msgstr ":ref:`CSGMesh3D <class_CSGMesh3D>`"

msgid ":ref:`CSGCombiner3D <class_CSGCombiner3D>`"
msgstr ":ref:`CSGCombiner3D <class_CSGCombiner3D>`"

msgid "CSG tools features"
msgstr "CSGツール機能"

msgid "Every CSG node supports 3 kinds of boolean operations:"
msgstr "すべてのCSGノードは3種類のブーリアン演算に対応しています:"

msgid ""
"**Union:** Geometry of both primitives is merged, intersecting geometry is "
"removed."
msgstr ""
"**Union (和集合):** プリミティブのジオメトリを結合させて、共通部分のジオメト"
"リは除去されます。"

msgid ""
"**Intersection:** Only intersecting geometry remains, the rest is removed."
msgstr ""
"**Intersection (共通部分):** ジオメトリの共通部分のみを残し、他は除去されま"
"す。"

msgid ""
"**Subtraction:** The second shape is subtracted from the first, leaving a "
"dent with its shape."
msgstr ""
"**Subtraction (差集合):** 第一の形状を、第二の形状で差し引いて、形状に穴を開"
"けます。"

msgid "CSGPolygon"
msgstr "\\ CSGPolygon"

msgid ""
"The :ref:`CSGPolygon3D <class_CSGPolygon3D>` node extrude along a Polygon "
"drawn in 2D (in X, Y coordinates) in the following ways:"
msgstr ""
":ref:`CSGPolygon3D <class_CSGPolygon3D>`\\ ノードは、2Dに描いたポリゴン (X, "
"Y 座標にて) を、以下の方法により押し出します:"

msgid "**Depth:** Extruded back a given amount."
msgstr "**Depth (深さ):** 指定された量で後ろに押し出します。"

msgid "**Spin:** Extruded while spinning around its origin."
msgstr "**Spin (回転):** 原点を中心に、回転しながら押し出します。"

msgid ""
"**Path:** Extruded along a Path node. This operation is commonly called "
"lofting."
msgstr ""
"**Path (パス):** Pathノードに沿って押し出します。ロフティングともよく呼ばれる"
"操作です。"

msgid ""
"The **Path** mode must be provided with a :ref:`Path3D <class_Path3D>` node "
"to work. In the Path node, draw the path and the polygon in CSGPolygon3D "
"will extrude along the given path."
msgstr ""
"**Path** モードを動かすには、まず\\ :ref:`Path3D <class_Path3D>`\\ ノードを用"
"意しなければなりません。このPathノードにてパスを描くと、CSGPolygon3Dのポリゴ"
"ンはそのパスに沿って押し出されます。"

msgid "Custom meshes"
msgstr "カスタム メッシュ"

msgid "CSGCombiner3D"
msgstr "\\ CSGCombiner3D"

msgid ""
"The :ref:`CSGCombiner3D <class_CSGCombiner3D>` node is an empty shape used "
"for organization. It will only combine children nodes."
msgstr ""
"\\ :ref:`CSGCombiner3D <class_CSGCombiner3D>` ノードは、整理のための空のシェ"
"イプです。子ノードを一つにまとめます。"

msgid "Processing order"
msgstr "処理の順番"

msgid ""
"Every CSG node will first process its children nodes and their operations: "
"union, intersection, or subtraction, in tree order, and apply them to itself "
"one after the other."
msgstr ""
"すべてのCSGノードは、まずその子ノードとその演算 (和集合、共通部分、差集合) を"
"ツリー順に処理し、それらを自身へ次々に適用します。"

msgid ""
"In the interest of performance, make sure CSG geometry remains relatively "
"simple, as complex meshes can take a while to process. If adding objects "
"together (such as table and room objects), create them as separate CSG "
"trees. Forcing too many objects in a single tree will eventually start "
"affecting performance. Only use binary operations where you actually need "
"them."
msgstr ""
"複雑なメッシュは処理に時間がかかるので、性能を上げるためには、CSGジオメトリを"
"比較的シンプルなままに保ってください。(テーブルや部屋の物体など) 複数の物体を"
"一緒にする場合は、それぞれ別のCSGツリーに分けましょう。ひとつのツリーに多くの"
"オブジェクトを入れすぎると、やがて性能に影響が出始めます。バイナリ演算は本当"
"に必要な時にだけ使用するようにしてください。"

msgid "Prototyping a level"
msgstr "レベルのプロトタイプ作成"

msgid "We will prototype a room to practice the use of CSG tools."
msgstr "CSGツールの練習に、部屋のプロトタイプを作ってみましょう。"

msgid ""
"Working in **Orthogonal** projection gives a better view when combining the "
"CSG shapes."
msgstr ""
"CSGシェイプを組み合わせるときは、\\ **平行投影**\\ のほうが見えやすくなりま"
"す。"

msgid "Our level will contain these objects:"
msgstr "これから作るレベルには次のような物体があります:"

msgid "a room,"
msgstr "部屋、"

msgid "a bed,"
msgstr "ベッド、"

msgid "a lamp,"
msgstr "ランプ、"

msgid "a desk,"
msgstr "机、"

msgid "a bookshelf."
msgstr "本棚。"

msgid "Create a scene with a Node3D node as root node."
msgstr "Node3Dノードをルートにしてシーンを作成します。"

msgid ""
"The default lighting of the environment doesn't provide clear shading at "
"some angles. Change the display mode using **Display Overdraw** in the 3D "
"viewport menu, or add a DirectionalLight node to help you see clearly."
msgstr ""
"環境のデフォルトの照明設定では、角度によってはシェーディングがきれいに表示さ"
"れません。3Dビューポート メニューにて表示モードを\\ **オーバードロー表示**\\ "
"にするか、あるいは DirectionalLight をひとつ追加すれば、はっきりと見えるよう"
"になります。"

msgid ""
"Create a CSGBox3D and name it ``room``, enable **Invert Faces** and change "
"the dimensions of your room."
msgstr ""
"CSGBox3Dをひとつ作成し ``room`` という名前を付けて、\\ **Invert Faces**\\ を"
"有効にしてから、部屋のサイズを変更してください。"

msgid "Next, create a CSGCombiner3D and name it ``desk``."
msgstr "次に、CSGCombiner3Dを作成して ``desk`` という名前を付けます。"

msgid "A desk has one surface and 4 legs:"
msgstr "デスクにはひとつの平面と４本の脚があります:"

msgid ""
"Create 1 CSGBox3D children node in **Union** mode for the surface and adjust "
"the dimensions."
msgstr ""
"子ノードのCSGBox3Dを平面として1つ作成し、\\ **Union (和集合)**\\ モードにして"
"から大きさを変更します。"

msgid ""
"Create 4 CSGBox3D children nodes in **Union** mode for the legs and adjust "
"the dimensions."
msgstr ""
"脚は子ノードのCSGBox3Dを4個作成し、\\ **Union**\\ モードにしてから大きさを調"
"節します。"

msgid "Adjust their placement to resemble a desk."
msgstr "それらの位置を調節してデスクの形にしましょう。"

msgid ""
"CSG nodes inside a CSGCombiner3D will only process their operation within "
"the combiner. Therefore, CSGCombiner3Ds are used to organize CSG nodes."
msgstr ""
"CSGCombiner3Dの中にあるCSGノードは、その combiner(連合) の中だけで演算処理を"
"行います。そのため、CSGノードの整理にはCSGCombiner3Dが使われます。"

msgid "Create a CSGCombiner3D and name it ``bed``."
msgstr "CSGCombiner3Dを作り、\\ ``bed``\\ と名付けます。"

msgid ""
"Our bed consists of 3 parts: the bed, the mattress and a pillow. Create a "
"CSGBox3D and adjust its dimension for the bed. Create another CSGBox3D and "
"adjust its dimension for the mattress."
msgstr ""
"ベッドは3つのパーツからなります: ベッド本体、マットレス、そして枕です。まず"
"CSGBox3Dを作成し、サイズ調整してベッド本体とします。さらにCSGBox3Dをもうひと"
"つ作って、大きさ変更をしてマットレスにします。"

msgid ""
"We will create another CSGCombiner3D named ``pillow`` as the child of  "
"``bed``. The scene tree should look like this:"
msgstr ""
"\\ ``bed``\\ の子として、\\ ``pillow``\\ という名前のCSGCombiner3Dを作りま"
"す。シーンツリーはこのようになるでしょう:"

msgid ""
"We will combine 3 CSGSphere3D nodes in **Union** mode to form a pillow. "
"Scale the Y axis of the spheres and enable **Smooth Faces**."
msgstr ""
"それから3つの CSGSphere3Dノードを **Union (和)** モードにして組み合わせ、枕に"
"します。それぞれの球体をY軸でサイズ変更し、\\ **Smooth Faces** を有効にしま"
"す。"

msgid ""
"Select the ``pillow`` node and switch the mode to **Subtraction**; the "
"combined spheres will cut a hole into the mattress."
msgstr ""
"\\ ``pillow``\\ ノードを選択して、モードを\\ **Subtraction (差)**\\ に切り替"
"えます。すると組み合わせた球体により、マットレスに穴が開きます。"

msgid ""
"Try to re-parent the ``pillow`` node to the root ``Node3D`` node; the hole "
"will disappear."
msgstr ""
"\\ ``pillow``\\ ノードの親を、ルート\\ ``Node3D``\\ に変更してみましょう。そ"
"うすれば穴は消えます。"

msgid ""
"This is to illustrate the effect of CSG processing order. Since the root "
"node is not a CSG node, the CSGCombiner3D nodes are the end of the "
"operations; this shows the use of CSGCombiner3D to organize the CSG scene."
msgstr ""
"これはCSGの処理順による影響を示すためのものです。ここでのルートノードは CSG"
"ノードではないため、CSGCombiner3Dノードの処理は最後になります。これが"
"CSGCombiner3Dを使ったCSGシーン整理の一例です。"

msgid ""
"Undo the re-parent after observing the effect. The bed you've built should "
"look like this:"
msgstr ""
"結果を確かめてから、親の変更とモード変更を取り消すと、ベッドはこのようになっ"
"ているはずです:"

msgid "Create a CSGCombiner3D and name it ``lamp``."
msgstr "CSGCombiner3Dを作成して\\ ``lamp``\\ と名付けます。"

msgid ""
"A lamp consists of 3 parts: the stand, the pole and the lampshade. Create a "
"CSGCylinder3D, enable the **Cone** option and make it the stand. Create "
"another CSGCylinder3D and adjust the dimensions to use it as a pole."
msgstr ""
"ランプはスタンド、支柱、そしてランプシェードの、3つのパーツからなります。"
"CSGCylinder3Dを作成し、\\ **Cone** オプションを有効にしてスタンドにします。そ"
"れから、もうひとつCSGCylinder3Dを作って、大きさを調整して支柱にします。"

msgid ""
"We will use a CSGPolygon3D for the lampshade. Use the **Spin** mode for the "
"CSGPolygon3D and draw a `trapezoid <https://en.wikipedia.org/wiki/"
"Trapezoid>`_ while in **Front View** (numeric keypad 1); this shape will "
"extrude around the origin and form the lampshade."
msgstr ""
"ランプシェードにはCSGPolygon3Dを使います。CSGPolygon3Dを **Spin** モードに"
"し、ビューを前面図 (テンキーの1) にしてから\\ `台形 <https://"
"ja.wikipedia.org/wiki/%E5%8F%B0%E5%BD%A2>`_\\ を描きましょう。この形状は原点"
"を中心に、回転しながら押し出されてランプシェードを形作ります。"

msgid "Adjust the placement of the 3 parts to make it look like a lamp."
msgstr "3つのパーツの位置を調整して、ランプに見えるようにします。"

msgid "Create a CSGCombiner3D and name it ``bookshelf``."
msgstr "CSGCombiner3Dを作り、\\ ``bookshelf``\\ と名付けます。"

msgid ""
"We will use 3 CSGBox3D nodes for the bookshelf. Create a CSGBox3D and adjust "
"its dimensions; this will be the size of the bookshelf."
msgstr ""
"本棚には3つの CSGBox3D を使います。CSGBox3D をひとつ作って、サイズを調節して"
"ください。これが本棚のサイズになります。"

msgid ""
"Duplicate the CSGBox3D and shorten the dimensions of each axis and change "
"the mode to **Subtraction**."
msgstr ""
"この CSGBox3D を複製して、すべての軸で縮小させてから、モードを **Subtraction "
"(差)** に変更します。"

msgid ""
"You've almost built a shelf. Create one more CSGBox3D for dividing the shelf "
"into two levels."
msgstr ""
"本棚はもうすぐ完成です。CSGBox3D をもうひとつ作成して、棚を二段に分けます。"

msgid ""
"Position your furniture in your room as you like and your scene should look "
"this:"
msgstr "部屋の中に家具を自由に配置すれば、シーンはこういう風になるはずです。"

msgid ""
"You've successfully prototyped a room level with the CSG tools in Godot. CSG "
"tools can be used for designing all kinds of levels, such as a maze or a "
"city; explore its limitations when designing your game."
msgstr ""
"これで部屋のレベルのプロトタイプを、Godot の CSG ツールを使って作ることができ"
"ました。迷路や街など、あらゆる種類のレベルをデザインするのに CSG ツールは使え"
"ます。ゲームをデザインするときは、その限界まで探ってみてください。"

msgid "Using prototype textures"
msgstr "プロトタイプテクスチャの使用"

msgid ""
"Godot's :ref:`doc_standard_material_3d` supports *triplanar mapping*, which "
"can be used to automatically apply a texture to arbitrary objects without "
"distortion. This is handy when using CSG as Godot doesn't support editing UV "
"maps on CSG nodes yet. Triplanar mapping is relatively slow, which usually "
"restricts its usage to organic surfaces like terrain. Still, when "
"prototyping, it can be used to quickly apply textures to CSG-based levels."
msgstr ""
"Godot の :ref:`doc_standard_material_3d` は *三平面マッピング* (triplanar "
"mapping) をサポートしています。Godot はまだ CSG ノード上の UV マップの編集を"
"サポートしていないので、これは CSG を使うときに便利です。三平面マッピングは比"
"較的低速なので、地形のような有機的なサーフェスには通常は不向きです。しかし、"
"プロトタイピングの際には、CSGベースのレベルにテクスチャを素早く適用するために"
"使用できます。"

msgid ""
"If you need some textures for prototyping, Kenney made a `set of CC0-"
"licensed prototype textures <https://kenney.nl/assets/prototype-textures>`__."
msgstr ""
"プロトタイプ用のテクスチャが必要な場合は、Kenney が作成した `CC0ライセンスの"
"プロトタイプテクスチャセット <https://kenney.nl/assets/prototype-"
"textures>`__ を参照してください。"

msgid "There are two ways to apply a material to a CSG node:"
msgstr "CSGノードにマテリアルを適用するには、次の2つの方法があります。"

msgid ""
"Applying it to a CSGCombiner3D node as a material override (**Geometry > "
"Material Override** in the Inspector). This will affect its children "
"automatically, but will make it impossible to change the material in "
"individual children."
msgstr ""
"これを CSGCombiner3Dノードにマテリアル オーバーライドとして適用します (インス"
"ペクターの **Geometry > Material Override**)。これで子ノードに自動的に適用さ"
"れますが、個々の子ノードのマテリアルを変更できなくなります。"

msgid ""
"Applying a material to individual nodes (**Material** in the Inspector). "
"This way, each CSG node can have its own appearance. Subtractive CSG nodes "
"will apply their material to the nodes they're \"digging\" into."
msgstr ""
"個々のノードにマテリアルを適用します (インスペクターの **Material**)。この方"
"法では、各CSGノードに独自の外観を持たせることができます。減算CSGノードは、他"
"の形状を掘った内側のマテリアルに適用されます。"

msgid ""
"To apply triplanar mapping to a CSG node, select it, go to the Inspector, "
"click the **[empty]** text next to **Material Override** (or **Material** "
"for individual CSG nodes). Choose **New StandardMaterial3D**. Click the "
"newly created material's icon to edit it. Unfold the **Albedo** section and "
"load a texture into the **Texture** property. Now, unfold the **Uv1** "
"section and check **Triplanar**. You can change the texture offset and scale "
"on each axis by playing with the **Scale** and **Offset** properties just "
"above. Higher values in the **Scale** property will cause the texture to "
"repeat more often."
msgstr ""
"CSGノードに三平面マッピングを適用するには、ノードを選択してインスペクターに移"
"動し、**Material Override** (または個々の CSGノードの場合は **Material**) の"
"横にある **[empty]** テキストをクリックします。**New StandardMaterial3D** を"
"選択します。新しく作成されたマテリアルのアイコンをクリックして編集します。"
"**Albedo** セクションを展開し、**Texture** プロパティにテクスチャをロードしま"
"す。次に、**Uv1** セクションを展開し、**Triplanar** をオンにします。上記の "
"**Scale** プロパティと **Offset** プロパティを操作することで、各軸のテクス"
"チャ オフセットとスケールを変更できます。**Scale** プロパティの値を大きくする"
"と、テクスチャがより頻繁に繰り返されます。"

msgid ""
"You can copy a StandardMaterial3D to reuse it across CSG nodes. To do so, "
"click the dropdown arrow next to a material property in the Inspector and "
"choose **Copy**. To paste it, select the node you'd like to apply the "
"material onto, click the dropdown arrow next to its material property then "
"choose **Paste**."
msgstr ""
"StandardMaterial3Dをコピーして、CSGノード間で再利用することができます。これを"
"行うにはインスペクターのマテリアル プロパティの横にあるドロップダウン矢印をク"
"リックし、**コピー** を選択します。貼り付けるには、マテリアルを適用するノード"
"を選択し、そのマテリアル プロパティの横にあるドロップダウン矢印をクリックし"
"て、**貼り付け** を選択します。"

msgid "Exporting as glTF"
msgstr "glTFとしてエクスポート"

msgid ""
"It can be useful to block out a level using CSG, then export it as a 3d "
"model, to import into 3D modeling software. You can do this by selecting "
"**Scene > Export As... > glTF 2.0 Scene**."
msgstr ""
"CSGを使用して作成したレベルをメッシュ化し、それを3Dモデルとしてエクスポートし"
"て、3Dモデリングソフトにインポートすると便利です。それを実現するには **シー"
"ン > 名前を付けてエクスポート... > glTF 2.0 シーン** を実行します。"
