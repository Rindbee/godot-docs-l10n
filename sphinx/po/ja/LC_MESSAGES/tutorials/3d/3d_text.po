#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "3D text"
msgstr "3Dテキスト"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"In a project, there may be times when text needs to be created as part of a "
"3D scene and not just in the HUD. Godot provides 2 methods to do this: the "
"Label3D node and the TextMesh *resource* for a MeshInstance3D node."
msgstr ""
"プロジェクトでは HUD だけでなく、3Dシーンの一部としてテキストを表示することが"
"あります。Godot ではこれを実現するために Label3D ノードと、 MeshInstance3D "
"ノードに TextMesh *リソース* を使うという2つの方法を提供しています。"

msgid ""
"Additionally, Godot makes it possible to position Control nodes according to "
"a 3D point's position on the camera. This can be used as an alternative to "
"\"true\" 3D text in situations where Label3D and TextMesh aren't flexible "
"enough."
msgstr ""
"さらに Godot ではカメラ上の3Dポイントの位置にコントロールノードを配置できま"
"す。これは Label3D と TextMesh の柔軟性が十分でない場合に、「真の」3Dテキスト"
"の代替として使用できます。"

msgid ""
"You can see 3D text in action using the `3D Labels and Texts demo project "
"<https://github.com/godotengine/godot-demo-projects/tree/master/3d/"
"labels_and_texts>`__."
msgstr ""
"`3D Labels and Texts <https://github.com/godotengine/godot-demo-projects/"
"tree/master/3d/labels_and_texts>`__ は、3Dテキストの動作を実際に確認できるデ"
"モプロジェクトです。"

msgid ""
"This page does **not** cover how to display a GUI scene within a 3D "
"environment. For information on how to achieve that, see the `GUI in 3D "
"<https://github.com/godotengine/godot-demo-projects/tree/master/viewport/"
"gui_in_3d>`__ demo project."
msgstr ""
"このページでは、3D環境内で GUI シーンを表示する方法については解説しません。そ"
"れを実現する方法については `GUI in 3D <https://github.com/godotengine/godot-"
"demo-projects/tree/master/viewport/gui_in_3d>`__ デモプロジェクトを参照してく"
"ださい。"

msgid "Label3D"
msgstr "Label3D"

msgid ""
"Label3D behaves like a Label node, but in 3D space. Unlike the Label node, "
"this Label3D node does **not** inherit properties of a GUI theme. However, "
"its look remains customizable and uses the same font subresource as Control "
"nodes (including support for :abbr:`MSDF (Multi-channel Signed Distance "
"Font)` font rendering)."
msgstr ""
"Label3D は Label ノードのように動作しますが、3D空間で動作するノードです。"
"Label ノードとは異なり、この Label3D ノードは GUI テーマのプロパティを継承し"
"ません。ただし外観はカスタマイズ可能であり、Control ノードと同じフォントサブ"
"リソースを使用します (:abbr:`MSDF (Multi-channel Signed Distance Font)` フォ"
"ントレンダリングのサポートを含む)。"

msgid "Advantages"
msgstr "利点"

msgid ""
"Label3D is faster to generate than TextMesh. While both use a caching "
"mechanism to only render new glyphs once, Label3D will still be faster to "
"(re)generate, especially for long text. This can avoid stuttering during "
"gameplay on low-end CPUs or mobile."
msgstr ""
"Label3D は TextMesh よりも生成が高速です。どちらもキャッシュメカニズムを使用"
"して新しいグリフを1回だけレンダリングしますが、特に長いテキストの場合は "
"Label3D の方が (再) 生成が高速です。これにより、ローエンドの CPU やモバイルで"
"のゲームプレイ中にテキスト生成負荷でアニメーションが途切れるのを防ぐことがで"
"きます。"

msgid ""
"Label3D can use bitmap fonts and dynamic fonts (with and without :abbr:`MSDF "
"(Multi-channel Signed Distance Font)` or mipmaps). This makes it more "
"flexible on that aspect compared to TextMesh, especially for rendering fonts "
"with self-intersecting outlines or colored fonts (emoji)."
msgstr ""
"Label3D はビットマップフォントとダイナミックフォント (:abbr:`MSDF (Multi-"
"channel Signed Distance Font)` またはミップマップの有無にかかわらず) を使用で"
"きます。これにより TextMesh と比較して、特に自己交差するアウトラインを持つ"
"フォントや、色付きフォント (絵文字など) を柔軟にレンダリングすることができま"
"す。"

msgid ""
"See :ref:`doc_gui_using_fonts` for guidelines on configuring font imports."
msgstr ""
"フォントのインポートを構成するためのガイドラインについては、 :ref:"
"`doc_gui_using_fonts` を参照してください。"

msgid "Limitations"
msgstr "制限事項"

msgid ""
"By default, Label3D has limited interaction with a 3D environment. It can be "
"occluded by geometry and lit by light sources if the **Shaded** flag is "
"enabled. However, it will not cast shadows even if **Cast Shadow** is set to "
"**On** in the Label3D's GeometryInstance3D properties. This is because the "
"node internally generates a quad mesh (one glyph per quad) with transparent "
"textures and has the same limitations as Sprite3D. Transparency sorting "
"issues can also become apparent when several Label3Ds overlap, especially if "
"they have outlines."
msgstr ""
"デフォルトでは Label3D は 3D環境との相互作用が制限されています。**Shaded** フ"
"ラグが有効になっている場合は、ジオメトリによって遮蔽され、光源によって照らさ"
"れる可能性があります。ただし Label3D の GeometryInstance3D プロパティで "
"**Cast Shadow** が **On** に設定されていても、影は投影されません。これはノー"
"ドが透明なテクスチャを持つ四角形メッシュ (四角形ごとに 1 つのグリフ) を内部的"
"に生成するため、Sprite3D と同じ制限があるためです。複数の Label3D が重なり"
"合っている場合、特にアウトラインがある場合は、半透明描画の並べ替えの問題も発"
"生します。"

msgid ""
"This can be mitigated by setting the Label3D's transparency mode to **Alpha "
"Cut**, at the cost of less smooth text rendering. The **Opaque Pre-Pass** "
"transparency mode can preserve text smoothness while allowing the Label3D to "
"cast shadows, but some transparency sorting issues will remain."
msgstr ""
"これは Label3D の透過モードを **Alpha Cut** に設定することで軽減できますが、"
"テキストのレンダリングが滑らかではなくなります。**Opaque Pre-Pass** モードで"
"は、Label3D が影を落とすことを可能にしながらテキストの滑らかさを維持できます"
"が、半透明描画の並べ替えの問題がいくつか残ります。"

msgid ""
"See :ref:`Transparency sorting "
"<doc_3d_rendering_limitations_transparency_sorting>` section in the 3D "
"rendering limitations page for more information."
msgstr ""
"詳細については、3D レンダリングの制限事項ページの :ref:`半透明のソート "
"<doc_3d_rendering_limitations_transparency_sorting>` セクションを参照してくだ"
"さい。"

msgid ""
"Text rendering quality can also suffer when the Label3D is viewed at a "
"distance. To improve text rendering quality, :ref:`enable mipmaps on the "
"font <doc_using_fonts_mipmaps>` or :ref:`switch the font to use MSDF "
"rendering <doc_using_fonts_msdf>`."
msgstr ""
"Label3D を遠くから見ると、テキストのレンダリング品質が低下することもありま"
"す。テキストのレンダリング品質を向上させるには、:ref:`フォントのミップマップ"
"を有効にする <doc_using_fonts_mipmaps>` か、 :ref:`MSDFレンダリングを使用する"
"ようにフォントを切り替える <doc_using_fonts_msdf>` を検討してください。"

msgid "TextMesh"
msgstr "TextMesh"

msgid ""
"The TextMesh resource has similarities to Label3D. They both display text in "
"a 3D scene, and will use the same font subresource. However, instead of "
"generating transparent quads, TextMesh generates 3D geometry that represents "
"the glyphs' contours and has the properties of a mesh. As a result, a "
"TextMesh is shaded by default and automatically casts shadows onto the "
"environment. A TextMesh can also have a material applied to it (including "
"custom shaders)."
msgstr ""
"TextMesh リソースは Label3D と似ています。どちらも3Dシーンにテキストを表示"
"し、同じフォントサブリソースを使用します。ただし TextMesh は透明な四角形を生"
"成する代わりに、グリフの輪郭から3Dジオメトリを生成します。その結果 TextMesh "
"はデフォルトでシェーディングされ、自動的に環境に影を落とします。TextMesh には"
"マテリアルを適用することもできます (カスタムシェーダーを含む)。"

msgid ""
"Here is an example of a texture and how it's applied to the mesh. You can "
"use the texture below as a reference for the generated mesh's UV map:"
msgstr ""
"以下はテクスチャの例と、それがメッシュにどのように適用されるかを示したもので"
"す。以下のテクスチャは生成されたメッシュの UV マップの参照として使用できま"
"す。"

msgid "TextMesh has a few advantages over Label3D:"
msgstr "TextMesh には Label3D に比べていくつかの利点があります。"

msgid "TextMesh can use a texture to modify text color on a per-side basis."
msgstr ""
"TextMesh はテクスチャを使用して、テキストの色を側面ごとに変更できます。"

msgid "TextMesh geometry can have actual depth to it, giving glyphs a 3D look."
msgstr ""
"TextMesh ジオメトリには実際の深さを持たせることができるため、グリフに3Dの外観"
"を与えることができます。"

msgid "TextMesh can use custom shaders, unlike Label3D."
msgstr "TextMesh は Label3D とは異なり、カスタムシェーダーを使用できます。"

msgid "There are some limitations to TextMesh:"
msgstr "TextMesh にはいくつかの制限があります:"

msgid ""
"No built-in outline support, unlike Label3D. This can be simulated using "
"custom shaders though."
msgstr ""
"Label3D とは異なり、アウトラインのサポートは組み込まれていません。ただしカス"
"タムシェーダーを使用してシミュレートすることができます。"

msgid ""
"Only dynamic fonts are supported (``.ttf``, ``.otf``, ``.woff``, ``."
"woff2``). Bitmap fonts in the ``.fnt`` or ``.font`` formats are **not** "
"supported."
msgstr ""
"動的フォントのみがサポートされています (``.ttf`` 、 ``.otf`` 、 ``.woff`` 、 "
"``.woff2``)。 ``.fnt`` または ``.font`` 形式のビットマップフォントは **サポー"
"トされていません**。"

msgid ""
"Fonts with self-intersecting outlines will not render correctly. If you "
"notice rendering issues on fonts downloaded from websites such as Google "
"Fonts, try downloading the font from the font author's official website "
"instead."
msgstr ""
"自己交差するアウトラインを持つフォントは正しくレンダリングされません。Google "
"Fonts などのWebサイトからダウンロードしたフォントでレンダリングの問題が発生す"
"る場合は、代わりにフォント作成者の公式 Web サイトからフォントをダウンロードし"
"てみてください。"

msgid ""
"Antialiasing the text rendering requires a full-scene antialiasing method to "
"be enabled such as MSAA, FXAA and temporal antialiasing (TAA). If no "
"antialiasing method is enabled, text will appear grainy, especially at a "
"distance. See :ref:`doc_3d_antialiasing` for more information."
msgstr ""
"テキストレンダリングのアンチエイリアシングには、MSAA、FXAA、テンポラル アンチ"
"エイリアシング (TAA) などのフルシーンアンチエイリアシングメソッドを有効にする"
"必要があります。アンチエイリアシングメソッドが有効になっていない場合、特に遠"
"くから見るとテキストが粗く表示されます。詳細については :ref:"
"`doc_3d_antialiasing` を参照してください。"

msgid "Projected Label node (or any other Control)"
msgstr "投影Labelノード（またはその他のControl）"

msgid ""
"There is a last solution that is more complex to set up, but provides the "
"most flexibility: projecting a 2D node onto 3D space. This can be achieved "
"using the return value of :ref:"
"`unproject_position<class_Camera3D_method_unproject_position>` method on a "
"Camera3D node in a script's ``_process()`` function. This return value "
"should then be used to set the ``position`` property of a Control node."
msgstr ""
"最後に設定がより複雑ですが、最も柔軟性の高いソリューションとして、2Dノードを"
"3D空間に投影する方法があります。これはスクリプトの ``_process()`` 関数内の "
"Camera3D ノードの :ref:"
"`unproject_position<class_Camera3D_method_unproject_position>` メソッドの戻り"
"値を使用して実現できます。この戻り値はControlノードの ``position`` プロパティ"
"を設定するために使用する必要があります。"

msgid ""
"See the `3D waypoints <https://github.com/godotengine/godot-demo-projects/"
"tree/master/3d/waypoints>`__ demo for an example of this."
msgstr ""
"この例については、`3D waypoints <https://github.com/godotengine/godot-demo-"
"projects/tree/master/3d/waypoints>`__ デモを参照してください。"

msgid ""
"Any Control node can be used, including Label, RichTextLabel or even nodes "
"such as Button. This allows for powerful formatting and GUI interaction."
msgstr ""
"Label、RichTextLabel、Button などのノードを含む任意のControlノードを使用でき"
"ます。これにより強力な書式設定と GUI 操作が可能になります。"

msgid ""
"The script-based approach allows for complete freedom in positioning. For "
"example, this makes it considerably easier to pin Controls to the screen's "
"edges when they go off-screen (for in-game 3D markers)."
msgstr ""
"スクリプトベースのアプローチでは、配置の自由度が完全に高まります。たとえばコ"
"ントロールが画面外になったときに画面の端に固定することが非常に簡単になります "
"(例: ゲーム内の3Dマーカーなど)。"

msgid ""
"Control theming is obeyed. This allows for easier customization that "
"globally applies to the project."
msgstr ""
"Controlのテーマ設定が適用されます。これによりプロジェクト全体に適用されるカス"
"タマイズが容易になります。"

msgid ""
"Projected Controls cannot be occluded by 3D geometry in any way. You can use "
"a RayCast to fully hide the control if its target position is occluded by a "
"collider, but this doesn't allow for partially hiding the control behind a "
"wall."
msgstr ""
"投影Controlは、3Dジオメトリによって遮られることはありません。コントロールの"
"ターゲット位置がコライダーによって遮られている場合は、RayCast を使用してコン"
"トロールを完全に非表示にすることができますが、コントロールを壁の後ろに部分的"
"に隠すことはできません。"

msgid ""
"Changing text size depending on distance by adjusting the Control's "
"``scale`` property is possible, but it needs to be done manually. Label3D "
"and TextMesh automatically take care of this, at the cost of less "
"flexibility (can't set a minimum/maximum text size in pixels)."
msgstr ""
"距離に応じてテキストサイズを変更するには、Controlの ``scale`` プロパティの調"
"整を手動で行う必要があります。Label3D と TextMesh は、柔軟性が低くなるという"
"代償を払って、これを自動的に処理します (ピクセル単位で最小/最大のテキスト サ"
"イズを設定できません)。"

msgid ""
"Handling resolution and aspect ratio changes must be taken into account in "
"the script, which can be challenging."
msgstr ""
"解像度とアスペクト比の変更の処理はスクリプトで考慮する必要があり、これは対応"
"が難しい場合があります。"

msgid "Should I use Label3D, TextMesh or a projected Control?"
msgstr "Label3D、TextMesh、投影Controlのどれを使用するべきか？"

msgid ""
"In most scenarios, Label3D is recommended as it's easier to set up and "
"provides higher rendering quality (especially if 3D antialiasing is "
"disabled)."
msgstr ""
"ほとんどのシナリオでは、セットアップが簡単でレンダリング品質も高い (特に3Dア"
"ンチエイリアシングが無効になっている場合) Label3D が推奨されます。"

msgid ""
"For advanced use cases, TextMesh is more flexible as it allows styling the "
"text with custom shaders. Custom shaders allow for modifying the final "
"geometry, such as curving the text along a surface. Since the text is actual "
"3D geometry, the text can optionally have depth to it and can also "
"contribute to global illumination."
msgstr ""
"高度なユースケースでは、TextMesh はカスタムシェーダーを使用してテキストをより"
"柔軟にスタイリングできます。カスタムシェーダーを使用すると、テキストを表面に"
"沿って曲げるなど、最終的なジオメトリも変更できます。テキストは実際の3Dジオメ"
"トリであるため、オプションでテキストに深みを持たせることができ、グローバルイ"
"ルミネーションにも寄与できます。"

msgid ""
"If you need features such as BBCode or Control theming support, then using a "
"projected RichTextLabel node is the only way to go."
msgstr ""
"BBCode やControlのテーマ設定サポートなどの機能が必要な場合は、投影 "
"RichTextLabel ノードを使用するのが唯一の方法です。"
