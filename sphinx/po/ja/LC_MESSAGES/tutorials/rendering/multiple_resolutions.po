#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Multiple resolutions"
msgstr "複数の解像度"

msgid "The problem of multiple resolutions"
msgstr "複数の解像度の問題"

msgid ""
"Developers often have trouble understanding how to best support multiple "
"resolutions in their games. For desktop and console games, this is more or "
"less straightforward, as most screen aspect ratios are 16:9 and resolutions "
"are standard (720p, 1080p, 1440p, 4K, …)."
msgstr ""
"開発者は、ゲームで複数の解像度を最適にサポートする方法を理解するのに苦労する"
"ことがよくあります。デスクトップおよびコンソールゲームの場合、ほとんどの画面"
"アスペクト比は16:9であり、解像度は標準化(720p、1080p、1440p、4Kなど)されてい"
"るので、多かれ少なかれこれは簡単です。"

msgid ""
"For mobile games, at first, it was easy. For many years, the iPhone and iPad "
"used the same resolution. When *Retina* was implemented, they just doubled "
"the pixel density; most developers had to supply assets in default and "
"double resolutions."
msgstr ""
"モバイルゲームの場合、最初は簡単でした。長年、iPhoneとiPadは同じ解像度を使用"
"していました。そして *Retina* を実装すると、ピクセル密度が2倍になりました。ほ"
"とんどの開発者は、デフォルトおよび二重解像度でアセットを提供する必要がありま"
"した。"

msgid ""
"Nowadays, this is no longer the case, as there are plenty of different "
"screen sizes, densities, and aspect ratios. Non-conventional sizes are also "
"becoming increasingly popular, such as ultrawide displays."
msgstr ""
"現在では、さまざまな画面サイズ、密度、アスペクト比が存在するため、これはもは"
"や当てはまりません。超ワイドディスプレイなど、従来とは異なるサイズも人気が高"
"まっています。"

msgid ""
"For 3D games, there is not much of a need to support multiple resolutions "
"(from the aesthetic point of view). The 3D geometry will just fill the "
"screen based on the field of view, disregarding the aspect ratio. The main "
"reason one may want to support this, in this case, is for *performance* "
"reasons (running in lower resolution to increase frames per second)."
msgstr ""
"3Dゲームの場合、(美的観点から)複数の解像度をサポートする必要はあまりありませ"
"ん。 3Dジオメトリは、アスペクト比を無視して、視野に基づいて画面いっぱいに表示"
"されます。これをサポートしたい主な理由は、この場合、\\ *パフォーマンス*\\ が"
"理由(1秒あたりのフレーム数を増やすために低解像度で実行するため)です。"

msgid ""
"For 2D and game UIs, this is a different matter, as art needs to be created "
"using specific pixel sizes in software such as Photoshop, GIMP or Krita."
msgstr ""
"2DおよびゲームUIでは、Photoshop、GIMP、Kritaなどのソフトウェアで特定のピクセ"
"ルサイズを使用してアートを作成する必要があるため、これは別の問題です。"

msgid ""
"Since layouts, aspect ratios, resolutions, and pixel densities can change so "
"much, it is no longer possible to design UIs for every specific screen. "
"Another method must be used."
msgstr ""
"レイアウト、アスペクト比、解像度、ピクセル密度は大きく変化する可能性があるた"
"め、特定の画面ごとにUIを設計することはできなくなりました。別の方法を使用する"
"必要があります。"

msgid "One size fits all"
msgstr "ワンサイズですべてに対応"

msgid ""
"The most common approach is to use a single *base* resolution and then fit "
"it to everything else. This resolution is how most players are expected to "
"play the game (given their hardware). For mobile, Google has useful `stats "
"<https://developer.android.com/about/dashboards>`_ online, and for desktop, "
"Steam `also does <https://store.steampowered.com/hwsurvey/>`_."
msgstr ""
"最も一般的なアプローチは、単一の *base* 解像度を使用し、それを他のすべてに適"
"合させることです。この解像度は、ほとんどのプレイヤーがこれでゲームをプレイす"
"ることが期待されます(特定のハードウェアが与えられた場合)。モバイルの場合、"
"Googleには便利な `stats <https://developer.android.com/about/dashboards>`_ が"
"あり、デスクトップの場合、Steamには `<https://store.steampowered.com/"
"hwsurvey/>`_ もあります。"

msgid ""
"As an example, Steam shows that the most common *primary display resolution* "
"is 1920×1080, so a sensible approach is to develop a game for this "
"resolution, then handle scaling for different sizes and aspect ratios."
msgstr ""
"例として、Steamは最も一般的な *プライマリディスプレイ解像度* が1920×1080であ"
"ることを示しているため、賢明なアプローチはこの解像度のゲームを開発し、異なる"
"サイズとアスペクト比にスケーリング処理をすることです。"

msgid "Godot provides several useful tools to do this easily."
msgstr ""
"Godotには、これを簡単に行うための便利なツールがいくつか用意されています。"

msgid "Base size"
msgstr "ベースサイズ"

msgid ""
"A base size for the window can be specified in the Project Settings under "
"**Display → Window**."
msgstr ""
"ウィンドウの基本サイズは、[プロジェクト設定]の **Display → Window** で指定で"
"きます。"

msgid ""
"However, what it does is not completely obvious; the engine will *not* "
"attempt to switch the monitor to this resolution. Rather, think of this "
"setting as the \"design size\", i.e. the size of the area that you work with "
"in the editor. This setting corresponds directly to the size of the blue "
"rectangle in the 2D editor."
msgstr ""
"ただし、それが何をするのかは完全には明らかではありません。エンジンは、モニ"
"ターをこの解像度に切り替えようとはしません。むしろ、この設定を「設計サイ"
"ズ」、つまりエディタで作業する領域のサイズと考えてください。この設定は、2Dエ"
"ディタの青い長方形のサイズに直接対応しています。"

msgid ""
"There is often a need to support devices with screen and window sizes that "
"are different from this base size. Godot offers many ways to control how the "
"viewport will be resized and stretched to different screen sizes."
msgstr ""
"多くの場合、画面とウィンドウのサイズがこの基本サイズと異なるデバイスをサポー"
"トする必要があります。Godotには、さまざまな画面サイズに合わせてビューポートの"
"サイズを変更および拡大する方法を制御する多くの方法があります。"

msgid ""
"Godot follows a modern approach to multiple resolutions. The engine will "
"never change the monitor's resolution on its own. While changing the "
"monitor's resolution is the most efficient approach, it's also the least "
"reliable approach as it can leave the monitor stuck on a low resolution if "
"the game crashes. This is especially common on macOS or Linux which don't "
"handle resolution changes as well as Windows."
msgstr ""
"Godotは、複数の解像度に対する最新のアプローチに従っています。エンジンが勝手に"
"モニターの解像度を変更することはありません。モニターの解像度を変更するのは最"
"も効率的なアプローチですが、ゲームがクラッシュしたときにモニターが低解像度で"
"止まってしまう可能性があるため、最も信頼性の低いアプローチでもあります。これ"
"は、Windowsほど解像度の変更をうまく処理できないmacOSやLinuxで特によくあること"
"です。"

msgid ""
"Changing the monitor's resolution also removes any control from the game "
"developer over filtering and aspect ratio stretching, which can be important "
"to ensure correct display for pixel art games."
msgstr ""
"また、モニターの解像度を変更すると、ピクセルアートゲームを正しく表示するため"
"に重要なフィルタリングやアスペクト比の伸縮を、ゲーム開発者が制御できなくなり"
"ます。"

msgid ""
"On top of that, changing the monitor's resolution makes alt-tabbing in and "
"out of a game much slower since the monitor has to change resolutions every "
"time this is done."
msgstr ""
"その上、モニターの解像度を変更すると、その都度モニターが解像度を変更しなけれ"
"ばならないため、Alt+Tabでのゲームへの出入りが非常に遅くなるのです。"

msgid "Resizing"
msgstr "サイズ変更"

msgid "Stretch settings"
msgstr "ストレッチ設定"

msgid ""
"Stretch settings are located in the project settings and provide several "
"options:"
msgstr ""
"ストレッチ設定はプロジェクト設定の中にあり、いくつかのオプションが用意されて"
"います:"

msgid "Stretch Mode"
msgstr "ストレッチモード(Stretch Mode)"

msgid ""
"**Stretch Mode = Disabled** (default): No stretching happens. One unit in "
"the scene corresponds to one pixel on the screen. In this mode, the "
"**Stretch Aspect** setting has no effect."
msgstr ""
"**Stretch Mode = Disabled** (デフォルト): ストレッチは行われません。シーン内"
"の1単位は、画面上の1ピクセルに対応します。このモードでは、**Stretch Aspect** "
"設定は効果がありません。"

msgid ""
"**Stretch Mode = Viewport**: Viewport scaling means that the size of the "
"root :ref:`Viewport <class_Viewport>` is set precisely to the base size "
"specified in the Project Settings' **Display** section. The scene is "
"rendered to this viewport first. Finally, this viewport is scaled to fit the "
"screen (taking the **Stretch Aspect** setting into account)."
msgstr ""
"**Stretch Mode = Viewport**: ビューポートのスケーリングは、ルート :ref:"
"`Viewport <class_Viewport>` のサイズがプロジェクト設定の **Display** セクショ"
"ンで指定されたベースサイズに正確に設定されることを意味します。シーンは最初に"
"このビューポートにレンダリングされます。最後に、このビューポートは画面に収ま"
"るように拡大縮小されます(**Stretch Aspect** 設定を考慮します)。"

msgid "Stretch Aspect"
msgstr "ストレッチアスペクト(Stretch Aspect)"

msgid ""
"The second setting is the stretch aspect. Note that this only takes effect "
"if **Stretch Mode** is set to something other than **Disabled**."
msgstr ""
"2番目の設定は Stretch Aspect です。これは、\\ **Stretch Mode** が "
"**Disable** 以外に設定されている場合にのみ有効であることに注意してください。"

msgid ""
"In the animations below, you will notice gray and black areas. The black "
"areas are added by the engine and cannot be drawn into. The gray areas are "
"part of your scene, and can be drawn to. The gray areas correspond to the "
"region outside the blue frame you see in the 2D editor."
msgstr ""
"以下のアニメーションでは、灰色と黒の領域に気づくでしょう。黒い領域はエンジン"
"によって追加され、描画できません。灰色の領域はシーンの一部であり、描画できま"
"す。灰色の領域は、2Dエディタに表示される青いフレームの外側の領域に対応してい"
"ます。"

msgid ""
"**Stretch Aspect = Ignore**: Ignore the aspect ratio when stretching the "
"screen. This means that the original resolution will be stretched to exactly "
"fill the screen, even if it's wider or narrower. This may result in "
"nonuniform stretching: things looking wider or taller than designed."
msgstr ""
"**Stretch Aspect = Ignore**: 画面をストレッチするときにアスペクト比を無視しま"
"す。これは、幅が広くても狭くても、元の解像度が拡大されて画面全体に表示される"
"ことを意味します。これにより、不均一なストレッチが発生する可能性があります。"
"物体が設計よりも幅が広い、または背が高く見えます。"

msgid ""
"**Stretch Aspect = Keep**: Keep aspect ratio when stretching the screen. "
"This means that the viewport retains its original size regardless of the "
"screen resolution, and black bars will be added to the top/bottom of the "
"screen (\"letterboxing\") or the sides (\"pillarboxing\")."
msgstr ""
"**Stretch Aspect = Keep**: 画面をストレッチするときにアスペクト比を維持しま"
"す。つまり、ビューポートは画面の解像度に関係なく元のサイズを保持し、画面の上"
"部/下部(「レターボックス化」)または側面(「ピラーボックス化」)に黒いバーが追加"
"されます。"

msgid ""
"This is a good option if you know the aspect ratio of your target devices in "
"advance, or if you don't want to handle different aspect ratios."
msgstr ""
"これは、ターゲットデバイスのアスペクト比を事前に知っている場合、または異なる"
"アスペクト比を処理したくない場合に適したオプションです。"

msgid ""
"**Stretch Aspect = Keep Width**: Keep aspect ratio when stretching the "
"screen. If the screen is wider than the base size, black bars are added at "
"the left and right (pillarboxing). But if the screen is taller than the base "
"resolution, the viewport will be grown in the vertical direction (and more "
"content will be visible to the bottom). You can also think of this as "
"\"Expand Vertically\"."
msgstr ""
"**Stretch Aspect = Keep Width**: 画面をストレッチするときにアスペクト比を維持"
"します。画面が基本サイズよりも広い場合、黒いバーが左右に追加されます(ピラー"
"ボックス化)。ただし、画面が基本解像度よりも高い場合、ビューポートは垂直方向に"
"拡大されます(そして、より多くのコンテンツが下部に表示されます)。これを「垂直"
"方向に拡張」と考えることもできます。"

msgid ""
"This is usually the best option for creating GUIs or HUDs that scale, so "
"some controls can be anchored to the bottom (:ref:`doc_size_and_anchors`)."
msgstr ""
"これは通常、スケーリングするGUIまたはHUDを作成するのに最適なオプションです。"
"そのため、一部のコントロールを下部に固定できます(:ref:"
"`doc_size_and_anchors`)。"

msgid ""
"**Stretch Aspect = Keep Height**: Keep aspect ratio when stretching the "
"screen. If the screen is taller than the base size, black bars are added at "
"the top and bottom (letterboxing). But if the screen is wider than the base "
"resolution, the viewport will be grown in the horizontal direction (and more "
"content will be visible to the right). You can also think of this as "
"\"Expand Horizontally\"."
msgstr ""
"**Stretch Aspect = Keep Height**: 画面を伸ばすときにアスペクト比を保ちます。"
"画面が基本サイズよりも高い場合、黒いバーが上部と下部に追加されます(レターボッ"
"クス化)。ただし、画面が基本解像度よりも広い場合、ビューポートは水平方向に拡大"
"されます(さらに多くのコンテンツが右側に表示されます)。これを「水平方向に拡"
"張」と考えることもできます。"

msgid ""
"This is usually the best option for 2D games that scroll horizontally (like "
"runners or platformers)."
msgstr ""
"これは通常、水平にスクロールする2Dゲーム(ランナーやプラットフォーマーなど)に"
"最適なオプションです。"

msgid ""
"**Stretch Aspect = Expand**: Keep aspect ratio when stretching the screen, "
"but keep neither the base width nor height. Depending on the screen aspect "
"ratio, the viewport will either be larger in the horizontal direction (if "
"the screen is wider than the base size) or in the vertical direction (if the "
"screen is taller than the original size)."
msgstr ""
"**Stretch Aspect = Expand**: 画面をストレッチするときはアスペクト比を維持しま"
"すが、ベースの幅も高さも維持しません。画面の縦横比に応じて、ビューポートは水"
"平方向(画面が基本サイズよりも広い場合)または垂直方向(画面が元のサイズよりも高"
"い場合)に大きくなります。"

msgid ""
"To support both portrait and landscape mode with a similar automatically "
"determined scale factor, set your project's base resolution to be a *square* "
"(1:1 aspect ratio) instead of a rectangle. For instance, if you wish to "
"design for 1280×720 as the base resolution but wish to support both portrait "
"and landscape mode, use 720×720 as the project's base window size in the "
"Project Settings."
msgstr ""
"ポートレート(縦長)とランドスケープ(横長)の両方に対応したい場合は、プロジェク"
"トの基本解像度を長方形ではなく*正方形*（縦横比1：1）に設定します。例えば、"
"1280×720を基本解像度としてポートレートとランドスケープの両方のモードに対応し"
"たい場合は、プロジェクト設定で720×720をプロジェクトのベースウィンドウサイズと"
"して設定します。"

msgid ""
"To allow the user to choose their preferred screen orientation at run-time, "
"remember to set **Display > Window > Handheld > Orientation** to ``sensor``."
msgstr ""
"実行時にユーザーが好きな画面の向きを選択できるようにするには、**Display > "
"Window > Handheld > Orientation** を ``sensor``に設定することを忘れないように"
"してください。"

msgid ""
"The following settings are recommended to support multiple resolutions and "
"aspect ratios well."
msgstr ""
"複数の解像度やアスペクト比を適切にサポートするには、次の設定をお勧めします。"

msgid "Non-game application"
msgstr "ゲーム以外のアプリケーション"

msgid "Reducing aliasing on downsampling"
msgstr "ダウンサンプリングでのエイリアスの削減"

msgid "Handling aspect ratios"
msgstr "アスペクト比の処理"

msgid ""
"Once scaling for different resolutions is accounted for, make sure that your "
"*user interface* also scales for different aspect ratios. This can be done "
"using :ref:`anchors <doc_size_and_anchors>` and/or :ref:`containers "
"<doc_gui_containers>`."
msgstr ""
"さまざまな解像度のスケーリングが考慮されたら、\\ *ユーザーインターフェイス"
"*\\ もさまざまなアスペクト比に合わせてスケーリングするようにしてください。 こ"
"れは :ref:`anchors <doc_size_and_anchors>` および/または :ref:`containers "
"<doc_gui_containers>` を使用して実行できます。"

msgid "Field of view scaling"
msgstr "視野のスケーリング"

msgid ""
"The 3D Camera node's **Keep Aspect** property defaults to the **Keep "
"Height** scaling mode (also called *Hor+*). This is usually the best value "
"for desktop games and mobile games in landscape mode, as widescreen displays "
"will automatically use a wider field of view."
msgstr ""
"3Dカメラノードの **Keep Aspect** プロパティは、デフォルトで **Keep Height** "
"スケーリングモード(*Hor+* とも呼ばれます)になります。 ワイドスクリーンディス"
"プレイは自動的に広い視野を使用するため、これは通常、デスクトップモードや横長"
"モードのモバイルゲームに最適な値です。"

msgid ""
"However, if your 3D game is intended to be played in portrait mode, it may "
"make more sense to use **Keep Width** instead (also called *Vert-*). This "
"way, smartphones with an aspect ratio taller than 16:9 (e.g. 19:9) will use "
"a *taller* field of view, which is more logical here."
msgstr ""
"ただし、3Dゲームをポートレートモードでプレイする場合は、代わりに **Keep "
"Width** (*Vert-* とも呼ばれます)を使用する方が合理的です。 このように、アスペ"
"クト比が16:9(例: 19:9)よりも高いスマートフォンは、\\ *taller* の視野を使用し"
"ますが、これはここではより論理的です。"

msgid ""
"See the `3D viewport scaling demo <https://github.com/godotengine/godot-demo-"
"projects/tree/master/viewport/3d_scaling>`__ for examples."
msgstr ""
"例として、 `3D viewport scaling demo <https://github.com/godotengine/godot-"
"demo-projects/tree/master/viewport/3d_scaling>`__ をみてください。"

msgid "Translation status"
msgstr "翻訳ステータス"
