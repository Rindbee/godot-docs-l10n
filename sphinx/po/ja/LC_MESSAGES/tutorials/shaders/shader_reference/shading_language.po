#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Shading language"
msgstr "シェーディング言語"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"Godot uses a shading language similar to GLSL ES 3.0. Most datatypes and "
"functions are supported, and the few remaining ones will likely be added "
"over time."
msgstr ""
"Godotは、GLSL ES 3.0と同様のシェーディング言語を使用します。ほとんどのデータ"
"型と関数がサポートされており、残りのいくつかのデータ型は今後追加される可能性"
"があります。"

msgid ""
"If you are already familiar with GLSL, the :ref:`Godot Shader Migration "
"Guide<doc_converting_glsl_to_godot_shaders>` is a resource that will help "
"you transition from regular GLSL to Godot's shading language."
msgstr ""
"既にGLSLに精通している場合は、:ref:`Godot Shader Migration "
"Guide<doc_converting_glsl_to_godot_shaders>` が、通常の GLSL からGodotの"
"シェーディング言語への移行に役立つ資料です。"

msgid "Data types"
msgstr "データ型"

msgid "Most GLSL ES 3.0 datatypes are supported:"
msgstr "ほとんどのGLSL ES 3.0データ型がサポートされています:"

msgid "Type"
msgstr "タイプ(型)"

msgid "Description"
msgstr "説明"

msgid "**void**"
msgstr "\\ **void**"

msgid "Void datatype, useful only for functions that return nothing."
msgstr "Voidデータ型。何も返さない関数にのみ有用です。"

msgid "**bool**"
msgstr "\\ **bool**"

msgid "Boolean datatype, can only contain ``true`` or ``false``."
msgstr ""
"Boolデータ型には、\\ ``true`` または ``false`` のみを含めることができます。"

msgid "**bvec2**"
msgstr "\\ **bvec2**"

msgid "Two-component vector of booleans."
msgstr "Bool値の2要素ベクトル。"

msgid "**bvec3**"
msgstr "\\ **bvec3**"

msgid "Three-component vector of booleans."
msgstr "Bool値の3要素ベクトル。"

msgid "**bvec4**"
msgstr "\\ **bvec4**"

msgid "Four-component vector of booleans."
msgstr "Bool値の4要素ベクトル。"

msgid "**int**"
msgstr "\\ **int**"

msgid "**ivec2**"
msgstr "\\ **ivec2**"

msgid "Two-component vector of signed integers."
msgstr "符号付き整数の2要素ベクトル。"

msgid "**ivec3**"
msgstr "\\ **ivec3**"

msgid "Three-component vector of signed integers."
msgstr "符号付き整数の3要素ベクトル。"

msgid "**ivec4**"
msgstr "\\ **ivec4**"

msgid "Four-component vector of signed integers."
msgstr "符号付き整数の4要素ベクトル。"

msgid "**uint**"
msgstr "\\ **uint**"

msgid "Unsigned scalar integer; can't contain negative numbers."
msgstr "符号なしスカラー整数。負の数を含めることはできません。"

msgid "**uvec2**"
msgstr "\\ **uvec2**"

msgid "Two-component vector of unsigned integers."
msgstr "符号なし整数の2要素ベクトル。"

msgid "**uvec3**"
msgstr "\\ **uvec3**"

msgid "Three-component vector of unsigned integers."
msgstr "符号なし整数の3要素ベクトル。"

msgid "**uvec4**"
msgstr "\\ **uvec4**"

msgid "Four-component vector of unsigned integers."
msgstr "符号なし整数の4要素ベクトル。"

msgid "**float**"
msgstr "\\ **float**"

msgid "**vec2**"
msgstr "\\ **vec2**"

msgid "Two-component vector of floating-point values."
msgstr "浮動小数点の2要素ベクトル。"

msgid "**vec3**"
msgstr "\\ **vec3**"

msgid "Three-component vector of floating-point values."
msgstr "浮動小数点の3要素ベクトル。"

msgid "**vec4**"
msgstr "\\ **vec4**"

msgid "Four-component vector of floating-point values."
msgstr "浮動小数点の4要素ベクトル。"

msgid "**mat2**"
msgstr "\\ **mat2**"

msgid "2x2 matrix, in column major order."
msgstr "列優先順の2x2行列。"

msgid "**mat3**"
msgstr "\\ **mat3**"

msgid "3x3 matrix, in column major order."
msgstr "列優先順の3x3行列。"

msgid "**mat4**"
msgstr "\\ **mat4**"

msgid "4x4 matrix, in column major order."
msgstr "列優先順の4x4行列。"

msgid "**sampler2D**"
msgstr "\\ **sampler2D**"

msgid "Sampler type for binding 2D textures, which are read as float."
msgstr ""
"floatとして読み取られる2Dテクスチャをバインドするためのサンプラータイプ。"

msgid "**isampler2D**"
msgstr "\\ **isampler2D**"

msgid "Sampler type for binding 2D textures, which are read as signed integer."
msgstr ""
"intとして読み取られる2Dテクスチャをバインドするためのサンプラータイプ。"

msgid "**usampler2D**"
msgstr "\\ **usampler2D**"

msgid ""
"Sampler type for binding 2D textures, which are read as unsigned integer."
msgstr ""
"uintとして読み取られる2Dテクスチャをバインドするためのサンプラータイプ。"

msgid "**sampler2DArray**"
msgstr "\\ **sampler2DArray**"

msgid "Sampler type for binding 2D texture arrays, which are read as float."
msgstr ""
"floatとして読み取られる2Dテクスチャ配列をバインドするためのサンプラータイプ。"

msgid "**isampler2DArray**"
msgstr "\\ **isampler2DArray**"

msgid ""
"Sampler type for binding 2D texture arrays, which are read as signed integer."
msgstr ""
"intとして読み取られる2Dテクスチャ配列をバインドするためのサンプラータイプ。"

msgid "**usampler2DArray**"
msgstr "\\ **usampler2DArray**"

msgid ""
"Sampler type for binding 2D texture arrays, which are read as unsigned "
"integer."
msgstr ""
"uintとして読み取られる2Dテクスチャ配列をバインドするためのサンプラータイプ。"

msgid "**sampler3D**"
msgstr "\\ **sampler3D**"

msgid "Sampler type for binding 3D textures, which are read as float."
msgstr ""
"floatとして読み取られる3Dテクスチャをバインドするためのサンプラータイプ。"

msgid "**isampler3D**"
msgstr "\\ **isampler3D**"

msgid "Sampler type for binding 3D textures, which are read as signed integer."
msgstr ""
"intとして読み取られる3Dテクスチャをバインドするためのサンプラータイプ。"

msgid "**usampler3D**"
msgstr "\\ **usampler3D**"

msgid ""
"Sampler type for binding 3D textures, which are read as unsigned integer."
msgstr ""
"uintとして読み取られる3Dテクスチャをバインドするためのサンプラータイプ。"

msgid "**samplerCube**"
msgstr "\\ **samplerCube**"

msgid "Sampler type for binding Cubemaps, which are read as float."
msgstr ""
"キューブマップテクスチャをバインドするためのサンプラータイプ。floatとして読み"
"込まれます。"

msgid "**samplerCubeArray**"
msgstr "\\ **samplerCubeArray**"

msgid "Comments"
msgstr "コメント"

msgid "Casting"
msgstr "キャスト"

msgid ""
"Just like GLSL ES 3.0, implicit casting between scalars and vectors of the "
"same size but different type is not allowed. Casting of types of different "
"size is also not allowed. Conversion must be done explicitly via "
"constructors."
msgstr ""
"GLSL ES 3.0と同様に、同じサイズで異なるタイプのスカラーとベクトル間の暗黙的な"
"キャストは許可されていません。異なるサイズの型のキャストも許可されていませ"
"ん。変換は、コンストラクターを介して明示的に実行する必要があります。"

msgid "Example:"
msgstr "例:"

msgid ""
"Default integer constants are signed, so casting is always needed to convert "
"to unsigned:"
msgstr ""
"デフォルトの整数定数は符号付きなので、符号なしに変換するには常にキャストが必"
"要です:"

msgid "Members"
msgstr "メンバー"

msgid ""
"Individual scalar members of vector types are accessed via the \"x\", \"y\", "
"\"z\" and \"w\" members. Alternatively, using \"r\", \"g\", \"b\" and \"a\" "
"also works and is equivalent. Use whatever fits best for your needs."
msgstr ""
"ベクタータイプの個々のスカラーメンバーには、\"x\"、\"y\"、\"z\"、\"w\" メン"
"バーを介してアクセスします。あるいは、\"r\"、\"g\"、\"b\" および \"a\" を使用"
"しても機能し、同等です。ニーズに最適なものを使用してください。"

msgid "Constructing"
msgstr "構築"

msgid "Construction of vector types must always pass:"
msgstr "ベクトル型の構築は常に代入する必要があります:"

msgid ""
"Matrices can also be built from a matrix of another dimension. There are two "
"rules:"
msgstr ""
"行列は別の次元の行列からも構築することもできます。ルールは 2 つあります:"

msgid ""
"1. If a larger matrix is constructed from a smaller matrix, the additional "
"rows and columns are set to the values they would have in an identity "
"matrix. 2. If a smaller matrix is constructed from a larger matrix, the top, "
"left submatrix of the larger matrix is used."
msgstr ""
"1. 小さな行列から、より大きな行列が構築される場合、追加の行と列は単位行列に含"
"まれる値に設定されます。 2. 大きな行列から、より小さな行列が構築される場合、"
"大きな行列の左上の部分行列が使用されます。"

msgid "Swizzling"
msgstr "\\ Swizzling"

msgid ""
"It is possible to obtain any combination of components in any order, as long "
"as the result is another vector type (or scalar). This is easier shown than "
"explained:"
msgstr ""
"結果が別のベクトル型(またはスカラー)である限り、任意の順序で要素の任意の組み"
"合わせを取得することが可能です。これは説明されるよりも簡単に示されます:"

msgid "Precision"
msgstr "精度"

msgid ""
"It is possible to add precision modifiers to datatypes; use them for "
"uniforms, variables, arguments and varyings:"
msgstr ""
"データ型に精度修飾子を追加することができます。それらをuniform、変数、引数、お"
"よびvaryingに使用します。"

msgid ""
"Using lower precision for some operations can speed up the math involved (at "
"the cost of less precision). This is rarely needed in the vertex processor "
"function (where full precision is needed most of the time), but is often "
"useful in the fragment processor."
msgstr ""
"一部の操作に低い精度を使用すると、関係する計算が高速化されます(精度は低下しま"
"す)。これは、頂点プロセッサ関数ではほとんど必要ありません(ほとんどの場合、完"
"全な精度が必要です)が、フラグメントプロセッサではしばしば有用です。"

msgid ""
"Some architectures (mainly mobile) can benefit significantly from this, but "
"there are downsides such as the additional overhead of conversion between "
"precisions. Refer to the documentation of the target architecture for "
"further information. In many cases, mobile drivers cause inconsistent or "
"unexpected behavior and it is best to avoid specifying precision unless "
"necessary."
msgstr ""
"一部のアーキテクチャ (主にモバイル) では、これによって大きなメリットが得られ"
"ますが、精度間の変換による追加のオーバーヘッドなどの欠点もあります。詳細につ"
"いては、ターゲットアーキテクチャのドキュメントを参照してください。多くの場"
"合、モバイル環境のドライバーは一貫性のない動作や予期しない動作を引き起こすた"
"め、必要な場合を除いて精度を指定しないことをお勧めします。"

msgid "Arrays"
msgstr "配列"

msgid "Arrays are containers for multiple variables of a similar type."
msgstr "配列は複数の同じ型の変数のコンテナです。"

msgid "Local arrays"
msgstr "ローカル配列"

msgid ""
"Local arrays are declared in functions. They can use all of the allowed "
"datatypes, except samplers. The array declaration follows a C-style syntax: "
"``[const] + [precision] + typename + identifier + [array size]``."
msgstr ""
"ローカル配列は関数内で宣言されます。サンプラーを除くすべての許可されたデータ"
"型を使用できます。配列宣言は、Cスタイルの構文 ``[const] + [precision] + "
"typename + identifier + [array size]`` に従います。"

msgid "They can be initialized at the beginning like:"
msgstr "これらは、最初のように初期化することができます:"

msgid ""
"You can declare multiple arrays (even with different sizes) in one "
"expression:"
msgstr "1つの式で複数の配列(サイズが異なる場合でも)を宣言できます:"

msgid "To access an array element, use the indexing syntax:"
msgstr "配列要素にアクセスするには、インデックス構文を使用します:"

msgid ""
"Arrays also have a built-in function ``.length()`` (not to be confused with "
"the built-in ``length()`` function). It doesn't accept any parameters and "
"will return the array's size."
msgstr ""
"配列には組み込み関数 ``.length()`` もあります(組み込みの ``length()`` 関数と"
"混同しないでください)。パラメーターを受け入れず、配列のサイズを返します。"

msgid ""
"If you use an index either below 0 or greater than array size - the shader "
"will crash and break rendering. To prevent this, use ``length()``, ``if``, "
"or ``clamp()`` functions to ensure the index is between 0 and the array's "
"length. Always carefully test and check your code. If you pass a constant "
"expression or a number, the editor will check its bounds to prevent this "
"crash."
msgstr ""
"0未満または配列サイズより大きいインデックスを使用すると、シェーダーがクラッ"
"シュしてレンダリングが中断します。これを防ぐには、\\ ``length()``\\ 、\\ "
"``if`` または ``clamp()`` 関数を使用して、インデックスが0と配列の長さの間にあ"
"ることを確認してください。コードは常に慎重にテストおよびチェックしてくださ"
"い。定数式または単純な数値を渡すと、エディタはその境界をチェックしてこのク"
"ラッシュを防ぎます。"

msgid "Global arrays"
msgstr "グローバル配列"

msgid "Constants"
msgstr "定数"

msgid ""
"Use the ``const`` keyword before the variable declaration to make that "
"variable immutable, which means that it cannot be modified. All basic types, "
"except samplers can be declared as constants. Accessing and using a constant "
"value is slightly faster than using a uniform. Constants must be initialized "
"at their declaration."
msgstr ""
"変数宣言の前に ``const`` キーワードを使用して、その変数を変更できないようにし"
"ます。サンプラーを除くすべての基本型は、定数として宣言できます。定数値へのア"
"クセスと使用は、ユニフォームの使用よりもわずかに高速です。定数は、宣言時に初"
"期化する必要があります。"

msgid ""
"Constants cannot be modified and additionally cannot have hints, but "
"multiple of them (if they have the same type) can be declared in a single "
"expression e.g"
msgstr ""
"定数は変更できず、さらにヒントを持つことはできませんが、複数の(同じ型の場合)"
"を単一の式で宣言できます。例:"

msgid "Similar to variables, arrays can also be declared with ``const``."
msgstr "変数と同様に、配列は ``const`` で宣言することもできます。"

msgid ""
"Constants can be declared both globally (outside of any function) or locally "
"(inside a function). Global constants are useful when you want to have "
"access to a value throughout your shader that does not need to be modified. "
"Like uniforms, global constants are shared between all shader stages, but "
"they are not accessible outside of the shader."
msgstr ""
"定数は、グローバル(関数の外部)またはローカル(関数の内部)の両方で宣言できま"
"す。グローバル定数は、変更する必要のないシェーダー全体の値にアクセスする場合"
"に役立ちます。ユニフォームと同様に、グローバル定数はすべてのシェーダーステー"
"ジ間で共有されますが、シェーダーの外部からはアクセスできません。"

msgid ""
"Constants of the ``float`` type must be initialized using ``.`` notation "
"after the decimal part or by using the scientific notation. The optional "
"``f`` post-suffix is also supported."
msgstr ""
"``float`` 型の定数は整数部の後に ``.`` 表記を使用するか科学表記法を使用して初"
"期化する必要があります。オプションの ``f`` 後置接尾語もサポートされています。"

msgid ""
"Constants of the ``uint`` (unsigned int) type must have a ``u`` suffix to "
"differentiate them from signed integers. Alternatively, this can be done by "
"using the ``uint(x)`` built-in conversion function."
msgstr ""
"``uint`` (unsigned int) 型の定数には、 ``int`` (signed int) 型と区別するため"
"に ``u`` 接尾辞が必要です。もしくは組み込み変換関数 ``uint(x)`` を使用するこ"
"ともできます。"

msgid "Structs"
msgstr "構造体"

msgid ""
"Structs are compound types which can be used for better abstraction of "
"shader code. You can declare them at the global scope like:"
msgstr ""
"構造体はシェーダーコードをより適切に抽象化するために使用できる複合型です。次"
"のようにグローバルスコープで宣言できます。"

msgid "After declaration, you can instantiate and initialize them like:"
msgstr "宣言後、次のようにインスタンス化して初期化できます。"

msgid "Or use struct constructor for same purpose:"
msgstr "また、同じ目的で構造体のコンストラクタを使用できます。"

msgid ""
"Structs may contain other struct or array, you can also instance them as "
"global constant:"
msgstr ""
"構造体には他の構造体や配列を含めることができ、それらをグローバル定数としてイ"
"ンスタンス化することもできます。"

msgid "You can also pass them to functions:"
msgstr "構造体のインスタンスを関数へ渡すこともできます。"

msgid "Operators"
msgstr "オペレーター"

msgid ""
"Godot shading language supports the same set of operators as GLSL ES 3.0. "
"Below is the list of them in precedence order:"
msgstr ""
"Godotシェーディング言語は、GLSL ES 3.0と同じ一連の演算子をサポートしていま"
"す。以下に優先順位のリストを示します:"

msgid "Precedence"
msgstr "優先順位"

msgid "Class"
msgstr "クラス"

msgid "Operator"
msgstr "演算子"

msgid "1 (highest)"
msgstr "1 (最高)"

msgid "parenthetical grouping"
msgstr "カッコ内のグループ化"

msgid "**()**"
msgstr "\\ **()**"

msgid "2"
msgstr "2"

msgid "unary"
msgstr "単項"

msgid "**+, -, !, ~**"
msgstr "**+、-、!、~**"

msgid "3"
msgstr "\\ 3"

msgid "multiplicative"
msgstr "乗除算"

msgid "**/, \\*, %**"
msgstr "**/、\\*、%**"

msgid "4"
msgstr "4"

msgid "additive"
msgstr "加減算"

msgid "**+, -**"
msgstr "**+、-**"

msgid "5"
msgstr "5"

msgid "bit-wise shift"
msgstr "ビット単位のシフト"

msgid "**<<, >>**"
msgstr "**<<、>>**"

msgid "6"
msgstr "\\ 6"

msgid "relational"
msgstr "大小比較"

msgid "**<, >, <=, >=**"
msgstr "**<、>、<=、>=**"

msgid "7"
msgstr "\\ 7"

msgid "equality"
msgstr "一致、不一致"

msgid "**==, !=**"
msgstr "**==、!=**"

msgid "8"
msgstr "\\ 8"

msgid "bit-wise AND"
msgstr "ビット単位のAND"

msgid "**&**"
msgstr "\\ **&**"

msgid "9"
msgstr "\\ 9"

msgid "bit-wise exclusive OR"
msgstr "ビット単位の排他的OR"

msgid "**^**"
msgstr "\\ **^**"

msgid "10"
msgstr "10"

msgid "bit-wise inclusive OR"
msgstr "ビット単位の包括的OR"

msgid "**|**"
msgstr "\\ **|**"

msgid "11"
msgstr "11"

msgid "logical AND"
msgstr "論理AND"

msgid "**&&**"
msgstr "\\ **&&**"

msgid "12 (lowest)"
msgstr "12 (最低)"

msgid "logical inclusive OR"
msgstr "論理OR"

msgid "**||**"
msgstr "\\ **||**"

msgid "Flow control"
msgstr "構文制御"

msgid "Godot Shading language supports the most common types of flow control:"
msgstr ""
"Godotシェーディング言語は、最も一般的なタイプの構文制御をサポートしています:"

msgid ""
"Keep in mind that in modern GPUs, an infinite loop can exist and can freeze "
"your application (including editor). Godot can't protect you from this, so "
"be careful not to make this mistake!"
msgstr ""
"最近のGPUでは無限ループが存在すると、アプリケーション(エディタを含む)がフリー"
"ズする可能性があることに注意してください。 Godotはこれを防ぐことはできないの"
"で、この間違いをしないように注意してください！"

msgid ""
"Also, when comparing floating-point values against a number, make sure to "
"compare them against a *range* instead of an exact number."
msgstr ""
"また、浮動小数点値を比較する場合は、正確な数値ではなく *範囲* と比較してくだ"
"さい。"

msgid ""
"A comparison like ``if (value == 0.3)`` may not evaluate to ``true``. "
"Floating-point math is often approximate and can defy expectations. It can "
"also behave differently depending on the hardware."
msgstr ""
"``if (value == 0.3)`` のような比較は、 ``true`` と評価されない可能性がありま"
"す。浮動小数点演算は近似的なことが多く、期待を裏切る可能性があります。また、"
"ハードウェアに応じて動作が異なる場合もあります。"

msgid "**Don't** do this."
msgstr "これは **書かないでください** 。"

msgid ""
"Instead, always perform a range comparison with an epsilon value. The larger "
"the floating-point number (and the less precise the floating-point number), "
"the larger the epsilon value should be."
msgstr ""
"代わりに、イプシロン値との範囲比較を行います。浮動小数点数が大きいほど (浮動"
"小数点数の精度が低いほど)、イプシロン値も大きくする必要があります。"

msgid ""
"See `floating-point-gui.de <https://floating-point-gui.de/>`__ for more "
"information."
msgstr ""
"詳細については `floating-point-gui.de <https://floating-point-gui.de/>`__ を"
"見てください。"

msgid "Discarding"
msgstr "ピクセルの破棄"

msgid ""
"Beware that ``discard`` has a performance cost when used, as it will prevent "
"the depth prepass from being effective on any surfaces using the shader. "
"Also, a discarded pixel still needs to be rendered in the vertex shader, "
"which means a shader that uses ``discard`` on all of its pixels is still "
"more expensive to render compared to not rendering any object in the first "
"place."
msgstr ""
"``discard`` を使用すると、シェーダを使用するサーフェス上で深度プリパスが有効"
"にならなくなるため、使用するとパフォーマンスが低下することに注意してくださ"
"い。また、破棄されたピクセルでも依然として頂点シェーダーで処理する必要があり"
"ます。つまり、すべてのピクセルが ``discard`` で破棄されるとしても、最初からオ"
"ブジェクトをレンダリングしない場合と比較してレンダリングにはコストがかかりま"
"す。"

msgid "Functions"
msgstr "関数"

msgid ""
"It is possible to define functions in a Godot shader. They use the following "
"syntax:"
msgstr "Godotシェーダーで関数を定義することが可能です。次の構文を使用します:"

msgid ""
"You can only use functions that have been defined above (higher in the "
"editor) the function from which you are calling them. Redefining a function "
"that has already been defined above (or is a built-in function name) will "
"cause an error."
msgstr ""
"呼び出し元の関数から見て上記(エディタの上方)で定義された関数のみを使用できま"
"す。上記で既に定義されている関数 (または組み込み関数名) を再定義するとエラー"
"が発生します。"

msgid "Function arguments can have special qualifiers:"
msgstr "関数の引数には特別な修飾子を含めることができます:"

msgid "**in**: Means the argument is only for reading (default)."
msgstr "**in**: 引数が読み取り専用であることを意味します(デフォルト)。"

msgid "**out**: Means the argument is only for writing."
msgstr "**out**: 引数が書き込み専用であることを意味します。"

msgid "**inout**: Means the argument is fully passed via reference."
msgstr "**inout**: 引数が参照を介して完全に渡されることを意味します。"

msgid ""
"**const**: Means the argument is a constant and cannot be changed, may be "
"combined with **in** qualifier."
msgstr ""
"**const**: 引数が定数で変更できないことを意味します。 **in** 修飾子と組み合わ"
"せることができます。"

msgid "Example below:"
msgstr "以下はその例です:"

msgid "Varyings"
msgstr "Varying(可変)"

msgid ""
"To send data from the vertex to the fragment (or light) processor function, "
"*varyings* are used. They are set for every primitive vertex in the *vertex "
"processor*, and the value is interpolated for every pixel in the *fragment "
"processor*."
msgstr ""
"頂点からフラグメント (またはライト) プロセッサ関数にデータを送信するには、"
"*varying* が使用されます。それらは *頂点プロセッサ* のすべてのプリミティブ頂"
"点に対して設定され、*フラグメント プロセッサ* のすべてのピクセルに対して値が"
"補間されます。"

msgid "Varying can also be an array:"
msgstr "Varyingは配列にも指定できます:"

msgid ""
"It's also possible to send data from *fragment* to *light* processors using "
"*varying* keyword. To do so you can assign it in the *fragment* and later "
"use it in the *light* function."
msgstr ""
"*variing* キーワードを使用して、*fragment* から *light* プロセッサにデータを"
"送信することもできます。これを行うには、*fragment* で割り当てて、後で "
"*light* 関数で使用します。"

msgid ""
"Note that varying may not be assigned in custom functions or a *light "
"processor* function like:"
msgstr ""
"以下のようなカスタム関数や *light* 関数では、varying に代入することはできない"
"ことに注意してください。"

msgid ""
"This limitation was introduced to prevent incorrect usage before "
"initialization."
msgstr "この制限は、初期化前の誤った使用を防ぐために導入されました。"

msgid "Interpolation qualifiers"
msgstr "補間修飾子"

msgid ""
"Certain values are interpolated during the shading pipeline. You can modify "
"how these interpolations are done by using *interpolation qualifiers*."
msgstr ""
"特定の値は、シェーディングパイプライン中に補間されます。\\ *補間修飾子* を使"
"用して、これらの補間の実行方法を変更できます。"

msgid "There are two possible interpolation qualifiers:"
msgstr "次の2つの補間修飾子があります:"

msgid "Qualifier"
msgstr "修飾子"

msgid "**flat**"
msgstr "\\ **flat**"

msgid "The value is not interpolated."
msgstr "値は補間されません。"

msgid "**smooth**"
msgstr "\\ **smooth**"

msgid ""
"The value is interpolated in a perspective-correct fashion. This is the "
"default."
msgstr ""
"値は、パースペクティブに応じた方法で補間されます。これがデフォルトです。"

msgid "Uniforms"
msgstr "Uniform(ユニフォーム)"

msgid "Uniforms can also be assigned default values:"
msgstr "Uniformにはデフォルト値を割り当てることもできます:"

msgid ""
"Note that when adding a default value and a hint, the default value goes "
"after the hint."
msgstr ""
"デフォルト値とヒントを追加する場合、デフォルト値がヒントの後に来ることに注意"
"してください。"

msgid "Hint"
msgstr "ヒント"

msgid "**vec3, vec4**"
msgstr "\\ **vec3, vec4**"

msgid "source_color"
msgstr "\\ source_color"

msgid "Used as color."
msgstr "色として使用します。"

msgid "**int, float**"
msgstr "\\ **int, float**"

msgid "hint_range(min, max[, step])"
msgstr "\\ hint_range(min, max[, step])"

msgid "Restricted to values in a range (with min/max/step)."
msgstr "値の制限範囲を指定します (min/max/step)。"

msgid "Used as albedo color."
msgstr "アルベド色として使用します。"

msgid "hint_normal"
msgstr "\\ hint_normal"

msgid "Used as normalmap."
msgstr "法線マップとして使用します。"

msgid "hint_default_white"
msgstr "\\ hint_default_white"

msgid "As value or albedo color, default to opaque white."
msgstr "アルベド色として使用します。デフォルトは白色。"

msgid "hint_default_black"
msgstr "\\ hint_default_black"

msgid "As value or albedo color, default to opaque black."
msgstr "アルベド色として使用します。デフォルトは黒色。"

msgid "hint_default_transparent"
msgstr "\\ hint_default_transparent"

msgid "As value or albedo color, default to transparent black."
msgstr "アルベド色として使用します。デフォルトは黒色。"

msgid "hint_anisotropy"
msgstr "\\ hint_anisotropy"

msgid "As flowmap, default to right."
msgstr "フローマップとして使用します。デフォルトは右方向。"

msgid "hint_roughness[_r, _g, _b, _a, _normal, _gray]"
msgstr "\\ hint_roughness[_r, _g, _b, _a, _normal, _gray]"

msgid ""
"Used for roughness limiter on import (attempts reducing specular aliasing). "
"``_normal`` is a normal map that guides the roughness limiter, with "
"roughness increasing in areas that have high-frequency detail."
msgstr ""
"インポート時のラフネスリミッターに使用されます (鏡面反射光エイリアシングの軽"
"減を試みます)。``_normal`` は、ラフネスリミッターをガイドする法線マップであ"
"り、高周波のディテールを持つ領域では粗さが増加します。"

msgid "filter[_nearest, _linear][_mipmap][_anisotropic]"
msgstr "\\ filter[_nearest, _linear][_mipmap][_anisotropic]"

msgid "Enabled specified texture filtering."
msgstr "指定されたテクスチャフィルタリングを有効にします。"

msgid "repeat[_enable, _disable]"
msgstr "\\ repeat[_enable, _disable]"

msgid "Enabled texture repeating."
msgstr "テクスチャのリピートを有効にします。"

msgid "hint_screen_texture"
msgstr "\\ hint_screen_texture"

msgid "Texture is the screen texture."
msgstr "スクリーンのテクスチャを指定します。"

msgid "hint_depth_texture"
msgstr "\\ hint_depth_texture"

msgid "Texture is the depth texture."
msgstr "深度テクスチャを指定します。"

msgid "hint_normal_roughness_texture"
msgstr "\\ hint_normal_roughness_texture"

msgid "Texture is the normal roughness texture (only supported in Forward+)."
msgstr "法線とラフネスのテクスチャです (Forward+ でのみサポートされています)。"

msgid "You can close the group by using:"
msgstr "そしてこちらを使用してグループを閉じることができます:"

msgid ""
"The syntax also supports subgroups (it's not mandatory to declare the base "
"group before this):"
msgstr ""
"この構文はサブグループもサポートしています (これより前にベースのグループを宣"
"言することは必須ではありません):"

msgid "Global uniforms"
msgstr "グローバルUniform"

msgid ""
"Sometimes, you want to modify a parameter in many different shaders at once. "
"With a regular uniform, this takes a lot of work as all these shaders need "
"to be tracked and the uniform needs to be set for each of them. Global "
"uniforms allow you to create and update uniforms that will be available in "
"all shaders, in every shader type (``canvas_item``, ``spatial``, "
"``particles``, ``sky`` and ``fog``)."
msgstr ""
"場合によっては多くの異なるシェーダのパラメータを一度に変更したいことがありま"
"す。通常のUniformの場合はすべてのシェーダーを探し、それぞれにUniformを設定す"
"る必要があるため、多くの作業が必要になります。グローバルUniformを使用するとす"
"べてのシェーダーやすべてのシェーダータイプ ( ``canvas_item`` 、 "
"``spatial`` 、 ``particles`` 、 ``sky`` 、 ``fog`` ) で使用できるUniformを作"
"成および更新できます。"

msgid ""
"Global uniforms are especially useful for environmental effects that affect "
"many objects in a scene, like having foliage bend when the player is nearby, "
"or having objects move with the wind."
msgstr ""
"グローバルUniformは、プレイヤーが近くにいるときに葉が曲がったり、オブジェクト"
"が風で動いたりするなど、シーン内の多くのオブジェクトに影響を与えるような効果"
"で特に役立ちます。"

msgid ""
"To create a global uniform, open the **Project Settings** then go to the "
"**Shader Globals** tab. Specify a name for the uniform (case-sensitive) and "
"a type, then click **Add** in the top-right corner of the dialog. You can "
"then edit the value assigned to the uniform by clicking the value in the "
"list of uniforms:"
msgstr ""
"グローバルUniformを作成するには、 **プロジェクト設定** を開き、 **シェーダー"
"グローバル** タブに移動します。uniformの名前 (大文字と小文字を区別に注意) と"
"型を指定し、ダイアログの右上隅にある **追加** ボタンをクリックします。次に"
"uniformのリスト内の項目をクリックして、uniformに割り当てられた値を編集できま"
"す。"

msgid ""
"Adding a global uniform in the Shader Globals tab of the Project Settings"
msgstr ""
"プロジェクト設定のシェーダー グローバル タブにグローバルUniformを追加する"

msgid "After creating a global uniform, you can use it in a shader as follows:"
msgstr "グローバルUniformを作成した後、次のようにシェーダーで使用できます。"

msgid ""
"Note that the global uniform *must* exist in the Project Settings at the "
"time the shader is saved, or compilation will fail. While you can assign a "
"default value using ``global uniform vec4 my_color = ...`` in the shader "
"code, it will be ignored as the global uniform must always be defined in the "
"Project Settings anyway."
msgstr ""
"グローバルUniformはシェーダーの保存時にプロジェクト設定に存在する *必要があり"
"ます* 。存在しない場合はコンパイルは失敗します。シェーダーコードで ``global "
"uniform vec4 my_color = ...`` を使用してデフォルト値を割り当てることはできま"
"すが、グローバルUniformの値は常にプロジェクト設定で指定する必要があるため、こ"
"のデフォルト値は無視されます。"

msgid ""
"Assigning global uniform values can be done as many times as desired without "
"impacting performance, as setting data doesn't require synchronization "
"between the CPU and GPU."
msgstr ""
"データの設定にはCPUとGPU間の同期が必要ないため、グローバルUniform値のセット"
"は、パフォーマンスに影響を与えることなく何度でも行うことができます。"

msgid ""
"Therefore, it's not recommended to read global shader uniform values "
"continuously in a script. If you need to read values in a script after "
"setting them, consider creating an :ref:`autoload <doc_singletons_autoload>` "
"where you store the values you need to query at the same time you're setting "
"them as global uniforms."
msgstr ""
"したがってスクリプト内でグローバルシェーダーのUniform値を連続的に読み取ること"
"はお勧めできません。設定後にスクリプトで値を読み取る必要がある場合は、グロー"
"バルUniformとしてセットすると同時に取得するために値を保存するシングルトンクラ"
"ス :ref:`autoload <doc_singletons_autoload>` を作成することを検討してくださ"
"い。"

msgid "Per-instance uniforms"
msgstr "インスタンス単位のUniform"

msgid "Per-instance uniforms are only available in ``spatial`` (3D) shaders."
msgstr ""
"インスタンス単位のUniformは ``spatial`` (3D) シェーダーでのみ使用できます。"

msgid ""
"Sometimes, you want to modify a parameter on each node using the material. "
"As an example, in a forest full of trees, when you want each tree to have a "
"slightly different color that is editable by hand. Without per-instance "
"uniforms, this requires creating a unique material for each tree (each with "
"a slightly different hue). This makes material management more complex, and "
"also has a performance overhead due to the scene requiring more unique "
"material instances. Vertex colors could also be used here, but they'd "
"require creating unique copies of the mesh for each different color, which "
"also has a performance overhead."
msgstr ""
"マテリアルを使用して各ノードのパラメータを変更したい場合があります。たとえば"
"木々が生い茂る森で、それぞれの木に手動で編集できるわずかに異なる色を持たせた"
"い場合です。インスタンスごとにUniformを持たない場合、木ごとに固有のマテリア"
"ル (それぞれがわずかに異なる色) を作成する必要があります。これによりマテリア"
"ル管理がより複雑になり、シーンではより固有のマテリアルインスタンスが必要にな"
"るため、パフォーマンスのオーバーヘッドも発生します。ここでは頂点カラーを使用"
"することもできますが、異なる色ごとにメッシュの一意のコピーを作成する必要があ"
"り、パフォーマンスのオーバーヘッドも発生します。"

msgid ""
"Per-instance uniforms are set on each GeometryInstance3D, rather than on "
"each Material instance. Take this into account when working with meshes that "
"have multiple materials assigned to them, or MultiMesh setups."
msgstr ""
"インスタンス単位のUniformは、各マテリアルインスタンスではなく、各 "
"GeometryInstance3D に設定されます。複数のマテリアルが割り当てられているメッ"
"シュ、またはマルチメッシュを操作する場合は、こちらを考慮してください。"

msgid ""
"After saving the shader, you can change the per-instance uniform's value "
"using the inspector:"
msgstr ""
"シェーダーを保存した後、インスペクターを使用してインスタンス単位のUniformの値"
"を変更できます。"

msgid ""
"Setting a per-instance uniform's value in the GeometryInstance3D section of "
"the inspector"
msgstr ""
"インスペクターの GeometryInstance3D セクションでインスタンス単位のUniformの"
"値 (Instance Shader Parameters) を設定する"

msgid ""
"When using per-instance uniforms, there are some restrictions you should be "
"aware of:"
msgstr ""
"インスタンス単位のUniformを使用する場合は、いくつかの制限事項に注意する必要が"
"あります:"

msgid ""
"**Per-instance uniforms do not support textures**, only regular scalar and "
"vector types. As a workaround, you can pass a texture array as a regular "
"uniform, then pass the index of the texture to be drawn using a per-instance "
"uniform."
msgstr ""
"**インスタンス単位のUniformはテクスチャをサポートしません** 。通常のスカラー"
"型とベクター型のみをサポートします。回避策としてはテクスチャ配列を通常の"
"Uniformとして渡してから、インスタンス単位のUniformを使用して描画されるテクス"
"チャのインデックスを渡すことができます。"

msgid "There is a practical maximum limit of 16 instance uniforms per shader."
msgstr ""
"実際には1シェーダーあたりのインスタンスUniformの最大数は16までに制限されてい"
"ます。"

msgid ""
"If your mesh uses multiple materials, the parameters for the first mesh "
"material found will \"win\" over the subsequent ones, unless they have the "
"same name, index *and* type. In this case, all parameters are affected "
"correctly."
msgstr ""
"メッシュが複数のマテリアルを使用している場合、名前、インデックス、型が同じで"
"ない限り、最初に見つかったメッシュマテリアルのパラメータが後続のメッシュマテ"
"リアルよりも「優先」されます。この場合すべてのパラメータが正しく影響されま"
"す。"

msgid ""
"If you run into the above situation, you can avoid clashes by manually "
"specifying the index (0-15) of the instance uniform by using the "
"``instance_index`` hint:"
msgstr ""
"上記の状況に遭遇した場合は、 ``instance_index`` ヒントを使用してインスタンス"
"Uniformのインデックス (0～15) を手動で指定することで衝突を回避できます。"

msgid ""
"GDScript uses different variable types than GLSL does, so when passing "
"variables from GDScript to shaders, Godot converts the type automatically. "
"Below is a table of the corresponding types:"
msgstr ""
"GDScriptはGLSLとは異なる変数タイプを使用するため、GDScriptからシェーダーに変"
"数を渡すと、Godotはタイプを自動的に変換します。以下は、対応するタイプの表で"
"す:"

msgid "GLSL type"
msgstr "GLSL型"

msgid "GDScript type"
msgstr "GDScript型"

msgid "Notes"
msgstr "備考"

msgid "Bitwise packed int where bit 0 (LSB) corresponds to x."
msgstr "intに各ビットがパックされます。ビット0(LSB) がxに対応。"

msgid "For example, a bvec2 of (bx, by) could be created in the following way:"
msgstr "たとえば、 (bx, by) の bvec2 は次の方法で作成できます。"

msgid "**Vector2i**"
msgstr "\\ **Vector2i**"

msgid "**Vector3i**"
msgstr "\\ **Vector3i**"

msgid "**Vector4i**"
msgstr "\\ **Vector4i**"

msgid "**Vector2**"
msgstr "\\ **Vector2**"

msgid "**Vector3**, **Color**"
msgstr "\\ **Vector3**, **Color**"

msgid "When Color is used, it will be interpreted as (r, g, b)."
msgstr "Color が使用される場合、(r, g, b) として解釈されます。"

msgid "**Vector4**, **Color**, **Rect2**, **Plane**, **Quaternion**"
msgstr "\\ **Vector4**, **Color**, **Rect2**, **Plane**, **Quaternion**"

msgid "When Color is used, it will be interpreted as (r, g, b, a)."
msgstr "Color が使用される場合、(r, g, b, a) として解釈されます。"

msgid ""
"When Rect2 is used, it will be interpreted as (position.x, position.y, size."
"x, size.y)."
msgstr ""
"Rect2 が使用される場合、(position.x, position.y, size.x, size.y) として解釈さ"
"れます。"

msgid ""
"When Plane is used it will be interpreted as (normal.x, normal.y, normal.z, "
"d)."
msgstr ""
"Plane が使用される場合、(normal.x, normal.y, normal.z, d) として解釈されま"
"す。"

msgid "**Transform2D**"
msgstr "\\ **Transform2D**"

msgid "**Projection**, **Transform3D**"
msgstr "\\ **Projection**, **Transform3D**"

msgid "When a Transform3D is used, the w Vector is set to the identity."
msgstr ""
"Transform3D が使用される場合、w Vectorは単位行列になるように設定されます。"

msgid "**Texture2D**"
msgstr "\\ **Texture2D**"

msgid "**Texture2DArray**"
msgstr "\\ **Texture2DArray**"

msgid "**Texture3D**"
msgstr "\\ **Texture3D**"

msgid "**Cubemap**"
msgstr "\\ **Cubemap**"

msgid "**CubemapArray**"
msgstr "\\ **CubemapArray**"

msgid "Built-in variables"
msgstr "ビルトイン変数"

msgid ":ref:`Spatial shaders <doc_spatial_shader>`"
msgstr "\\ :ref:`Spatial(3D)シェーダー <doc_spatial_shader>`"

msgid ":ref:`Canvas item shaders <doc_canvas_item_shader>`"
msgstr "\\ :ref:`CanvasItem(2D)シェーダー <doc_canvas_item_shader>`"

msgid ":ref:`Particle shaders <doc_particle_shader>`"
msgstr "\\ :ref:`Particleシェーダー <doc_particle_shader>`"

msgid ":ref:`Sky shaders <doc_sky_shader>`"
msgstr "\\ :ref:`Skyシェーダー <doc_sky_shader>`"

msgid ":ref:`Fog shaders <doc_fog_shader>`"
msgstr "\\ :ref:`Fogシェーダー <doc_fog_shader>`"

msgid "Built-in functions"
msgstr "ビルトイン関数"
