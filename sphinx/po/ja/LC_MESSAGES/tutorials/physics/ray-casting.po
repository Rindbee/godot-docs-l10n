#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Ray-casting"
msgstr "レイキャスティング"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"One of the most common tasks in game development is casting a ray (or custom "
"shaped object) and checking what it hits. This enables complex behaviors, "
"AI, etc. to take place. This tutorial will explain how to do this in 2D and "
"3D."
msgstr ""
"ゲーム開発で最も一般的なタスクの1つは、レイ(またはカスタム形状のオブジェクト)"
"をキャストし、そのヒットをチェックすることです。 これにより、複雑な動作、AIな"
"どを実行できます。 このチュートリアルでは、2Dおよび3Dでこれを行う方法について"
"説明します。"

msgid ""
"Many times, though, ray-casting needs to be a more interactive process so a "
"way to do this by code must exist."
msgstr ""
"多くの場合、レイキャストはよりインタラクティブなプロセスである必要があるた"
"め、コードでこれを行う方法が必要です。"

msgid "Space"
msgstr "\\ Space"

msgid "Accessing space"
msgstr "spaceへのアクセス"

msgid "Use the following code in 2D:"
msgstr "2Dでは、次のコードを使用します:"

msgid "Or more directly:"
msgstr "またはより直接的に:"

msgid "And in 3D:"
msgstr "そして、3Dで:"

msgid "Raycast query"
msgstr "レイキャストクエリ"

msgid ""
"The result is a dictionary. If the ray didn't hit anything, the dictionary "
"will be empty. If it did hit something, it will contain collision "
"information:"
msgstr ""
"結果はdictionaryです。 光線が何もヒットしなかった場合、dictionaryは空になりま"
"す。 何かにヒットした場合、衝突情報が含まれます:"

msgid ""
"The ``result`` dictionary when a collision occurs contains the following "
"data:"
msgstr ""
"衝突が発生した場合の ``result`` というdictionaryには、次のデータが含まれます:"

msgid "Collision exceptions"
msgstr "コリジョンの例外"

msgid ""
"A common use case for ray casting is to enable a character to gather data "
"about the world around it. One problem with this is that the same character "
"has a collider, so the ray will only detect its parent's collider, as shown "
"in the following image:"
msgstr ""
"レイキャスティングの一般的な使用例は、キャラクターが周囲の世界に関するデータ"
"を収集できるようにすることです。 これに関する1つの問題は、同じキャラクターに"
"コライダーがあるため、次の画像に示すように、レイは親のコライダーのみを検出す"
"ることです:"

msgid "The exceptions array can contain objects or RIDs."
msgstr "例外配列には、オブジェクトまたは RID を含めることができます。"

msgid "Collision Mask"
msgstr "コリジョンマスク"

msgid ""
"While the exceptions method works fine for excluding the parent body, it "
"becomes very inconvenient if you need a large and/or dynamic list of "
"exceptions. In this case, it is much more efficient to use the collision "
"layer/mask system."
msgstr ""
"例外メソッドは親ボディを除外するためにうまく機能しますが、例外の大きなリスト"
"や動的リストが必要な場合は非常に不便になります。 この場合、コリジョンレイ"
"ヤー/マスクシステムを使用する方がはるかに効率的です。"

msgid "3D ray casting from screen"
msgstr "画面からの3Dレイキャスティング"

msgid "To obtain it using a camera, the following code can be used:"
msgstr "カメラを使用して取得するには、次のコードを使用できます:"

msgid ""
"Remember that during ``_input()``, the space may be locked, so in practice "
"this query should be run in ``_physics_process()``."
msgstr ""
"``_input()`` 中はspaceがロックされる可能性があるため、実際にはこのクエリは "
"``_physics_process()`` で実行する必要があることに注意してください。"

msgid "Translation status"
msgstr "翻訳ステータス"
