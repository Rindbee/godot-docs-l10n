#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using Area2D"
msgstr "Area2Dの使用"

msgid "Introduction"
msgstr "はじめに"

msgid ""
"Godot offers a number of collision objects to provide both collision "
"detection and response. Trying to decide which one to use for your project "
"can be confusing. You can avoid problems and simplify development if you "
"understand how each of them works and what their pros and cons are. In this "
"tutorial, we'll look at the :ref:`Area2D <class_Area2D>` node and show some "
"examples of how it can be used."
msgstr ""
"Godotは、衝突の検出と応答の両方を提供する多数のコリジョンオブジェクトを提供し"
"ます。プロジェクトに使用するものを決定しようとすると、混乱する可能性がありま"
"す。問題のそれぞれがどのように機能し、その長所と短所が何であるかを理解すれ"
"ば、問題を回避して開発を簡素化できます。このチュートリアルでは、"
"\\ :ref:`Area2D <class_Area2D>` ノードを見て、その使用方法の例をいくつか示し"
"ます。"

msgid ""
"This document assumes you're familiar with Godot's various physics bodies. "
"Please read :ref:`doc_physics_introduction` first."
msgstr ""
"このドキュメントは、あなたがGodotのさまざまな物理ボディに精通していることを前"
"提としています。最初に :ref:`doc_physics_introduction` をお読みください。"

msgid "What is an area?"
msgstr "Areaとは何ですか?"

msgid ""
"An Area2D defines a region of 2D space. In this space you can detect "
"other :ref:`CollisionObject2D <class_CollisionObject2D>` nodes overlapping, "
"entering, and exiting. Areas also allow for overriding local physics "
"properties. We'll explore each of these functions below."
msgstr ""
"Area2Dは、2D空間の領域を定義します。このスペースでは、他"
"の :ref:`CollisionObject2D <class_CollisionObject2D>` ノードが進入、オーバ"
"ラップ、および退出することを検出できます。Areaでは、ローカルの物理プロパティ"
"をオーバーライドすることもできます。これらの各機能を以下で説明します。"

msgid "Area properties"
msgstr "Areaのプロパティ"

msgid "Areas have many properties you can use to customize their behavior."
msgstr ""
"Areaには、動作をカスタマイズするために使用できる多くのプロパティがあります。"

msgid "Overlap detection"
msgstr "オーバーラップ検出"

msgid ""
"Perhaps the most common use of Area2D nodes is for contact and overlap "
"detection. When you need to know that two objects have touched, but don't "
"need physical collision, you can use an area to notify you of the contact."
msgstr ""
"おそらく、Area2Dノードの最も一般的な使用方法は、接触とオーバーラップの検出で"
"す。 2つのオブジェクトが触れたが、物理的な衝突は必要ないことを知る必要がある"
"場合、Areaを使用して連絡先に通知できます。"

msgid ""
"For example, let's say we're making a coin for the player to pick up. The "
"coin is not a solid object - the player can't stand on it or push it - we "
"just want it to disappear when the player touches it."
msgstr ""
"たとえば、プレイヤーが受け取るコインを作っているとしましょう。 コインは堅固な"
"オブジェクトではありません - プレイヤーはそれの上に立ったり押したりすることは"
"できません - プレイヤーが触れたときにコインが消えるようにしたいだけです。"

msgid "Here's the node setup for the coin:"
msgstr "コインのノード設定は次のとおりです:"

msgid ""
"If you're not familiar with using signals, see :ref:`doc_signals` for an "
"introduction."
msgstr ""
"シグナルの使用に慣れていない場合は、概要について :ref:`doc_signals` を参照し"
"てください。"

msgid "Now our player can collect the coins!"
msgstr "今、私たちのプレイヤーは、コインを収集することができます！"

msgid "Some other usage examples:"
msgstr "別の使用例:"

msgid ""
"Areas are great for bullets and other projectiles that hit and deal damage, "
"but don't need any other physics such as bouncing."
msgstr ""
"Areaは、弾丸やその他の発射物が命中してダメージを与える場合に最適ですが、反発"
"などの物理は必要ありません。"

msgid ""
"Use a large circular area around an enemy to define its \"detect\" radius. "
"When the player is outside the area, the enemy can't \"see\" it."
msgstr ""
"敵の周囲の大きな円形エリアを使用して、その\"detect\"(検出)半径を定義します。 "
"プレイヤーがエリアの外にいるとき、敵はそれを「見る」ことができません。"

msgid ""
"\"Security cameras\" - In a large level with multiple cameras, attach areas "
"to each camera and activate them when the player enters."
msgstr ""
"「セキュリティカメラ」- 複数のカメラがある大規模なレベルでは、各カメラにArea"
"を取り付けて、プレイヤーが入るときにそれらをアクティブにします。"

msgid "Area influence"
msgstr "Areaの影響"

msgid ""
"*Combine* - The area adds its values to what has been calculated so far."
msgstr "*Combine* - Areaは、これまでに計算された値にその値を加算します。"

msgid ""
"*Replace* - The area replaces physics properties, and lower priority areas "
"are ignored."
msgstr "*Replace* - Areaは物理特性を置換し、優先度の低いAreaは無視されます。"

msgid ""
"*Combine-Replace* - The area adds its gravity/damping values to whatever has "
"been calculated so far (in priority order), ignoring any lower priority "
"areas."
msgstr ""
"*Combine-Replace* - Areaは、これまでに計算されたものに優先度の高い値を加算"
"し、優先度の低いAreaを無視します。"

msgid ""
"*Replace-Combine* - The area replaces any gravity/damping calculated so far, "
"but keeps calculating the rest of the areas."
msgstr ""
"*Replace-Combine* - このAreaは、これまでに計算された重力/減衰を置き換えます"
"が、残りのAreaの計算を続けます。"

msgid ""
"Using these properties, you can create very complex behavior with multiple "
"overlapping areas."
msgstr ""
"これらのプロパティを使用すると、複数の重なり合う領域を持つ非常に複雑な動作を"
"作成できます。"

msgid "The physics properties that can be overridden are:"
msgstr "オーバーライドできる物理特性は次のとおりです:"

msgid "*Gravity* - Gravity's strength inside the area."
msgstr "*Gravity* - Area内の重力の強さ。"

msgid ""
"*Linear Damp* - How quickly objects stop moving - linear velocity lost per "
"second."
msgstr ""
"*Linear Damp* - オブジェクトの減速量 - 毎秒 linear velocity からこの値が失わ"
"れます。"

msgid ""
"*Angular Damp* - How quickly objects stop spinning - angular velocity lost "
"per second."
msgstr ""
"*Angular Damp* - オブジェクトの回転の減速量 - 毎秒 angular velocity からこの"
"値が失われます。"

msgid "Point gravity"
msgstr "ポイント重力"

msgid "Examples"
msgstr "例"

msgid ""
"The example project attached below has three areas demonstrating physics "
"override."
msgstr ""
"以下に添付されているサンプルプロジェクトには、物理オーバーライドを示す3つの領"
"域があります。"
