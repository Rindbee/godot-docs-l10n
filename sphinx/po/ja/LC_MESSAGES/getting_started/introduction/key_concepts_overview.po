#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Overview of Godot's key concepts"
msgstr "Godotのキーコンセプトの概要"

msgid ""
"Every game engine revolves around abstractions you use to build your "
"applications. In Godot, a game is a **tree** of **nodes** that you group "
"together into **scenes**. You can then wire these nodes so they can "
"communicate using **signals**."
msgstr ""
"すべてのゲームエンジンは、アプリケーションを作成するための抽象的な概念を軸に"
"構築されています。Godotでは、ゲームは **シーン** のなかにグループ化されてい"
"る **ノード** の **ツリー** で表されます。これらのノード同士はつなぐことがで"
"き、**シグナル** を使ってお互いに交信できます。"

msgid ""
"These are the four concepts you will learn here. We're going to look at them "
"briefly to give you a sense of how the engine works. In the getting started "
"series, you will get to use them in practice."
msgstr ""
"ここで学習できるコンセプトは4つあります。それらを大まかに見ていきながら、エン"
"ジンがどのように動くのかの感覚をつかんでいきましょう。入門シリーズでは、実際"
"にそれらを使っていきます。"

msgid "Scenes"
msgstr "シーン"

msgid ""
"In Godot, you break down your game in reusable scenes. A scene can be a "
"character, a weapon, a menu in the user interface, a single house, an entire "
"level, or anything you can think of. Godot's scenes are flexible; they fill "
"the role of both prefabs and scenes in some other game engines."
msgstr ""
"Godot では、ゲームを再利用可能なシーンに分割します。シーンは、キャラクター、"
"武器、ユーザーインターフェースのメニュー、個々の建物、レベル全体など、考えら"
"れるあらゆるものに成り得ます。Godot のシーンはフレキシブルであり、他のゲーム"
"エンジンでいうプレハブとシーン両方の役割を果たします。"

msgid ""
"You can also nest scenes. For example, you can put your character in a "
"level, and drag and drop a scene as a child of it."
msgstr ""
"シーンを入れ子にすることもできます。たとえば、キャラクターをレベルに配置する"
"ために、キャラクターシーンをレベルシーンの子としてドラッグアンドドロップでき"
"ます。"

msgid "Nodes"
msgstr "ノード"

msgid ""
"A scene is composed of one or more **nodes**. Nodes are your game's smallest "
"building blocks that you arrange into trees. Here's an example of a "
"character's nodes."
msgstr ""
"シーンは一つ以上の **ノード** で構成されています。ノードはゲームを構成する最"
"小ブロックで、ツリー型に配置することが出来ます。キャラクターのノードはこのよ"
"うになります。"

msgid ""
"It is made of a ``CharacterBody2D`` node named \"Player\", a ``Camera2D``, a "
"``Sprite2D``, and a ``CollisionShape2D``."
msgstr ""
"このシーンは「Player」という名前にした ``CharacterBody2D`` ノードと、 "
"``Sprite2D`` 、 ``Camera2D`` 、 ``CollisionShape2D`` で構成されています。"

msgid ""
"The node names end with \"2D\" because this is a 2D scene. Their 3D "
"counterparts have names that end with \"3D\". Be aware that \"Spatial\" "
"Nodes are now called \"Node3D\" starting with Godot 4."
msgstr ""
"ここでは2Dシーンなので、ノードの名前は末尾に「2D」が付きます。3D部分で使用す"
"るノードは名前が「3D」で終わります。Godot 4 以降、「空間」ノードは「Node3D」"
"と呼ばれるようになったことに注意してください。"

msgid ""
"Notice how nodes and scenes look the same in the editor. When you save a "
"tree of nodes as a scene, it then shows as a single node, with its internal "
"structure hidden in the editor."
msgstr ""
"ノードとシーンはエディタでは同じように見えることに注意してください。ノードツ"
"リーはシーンとして保存されると単体のノードのように見えるようになり、エディタ"
"からは内部構造が見えなくなります。"

msgid ""
"Godot provides an extensive library of base node types you can combine and "
"extend to build more powerful ones. 2D, 3D, or user interface, you will do "
"most things with these nodes."
msgstr ""
"Godotエンジンでは広範囲のタイプの基本ノードを提供しており、組み合わせたり、拡"
"張してよりパワフルなものを作ったりすることが出来ます。2D、3D、UIなど、たいて"
"いのものを基本ノードで表現できます。"

msgid "The scene tree"
msgstr "シーンツリー"

msgid ""
"All your game's scenes come together in the **scene tree**, literally a tree "
"of scenes. And as scenes are trees of nodes, the scene tree also is a tree "
"of nodes. But it's easier to think of your game in terms of scenes as they "
"can represent characters, weapons, doors, or your user interface."
msgstr ""
"ゲームシーンは、1つの **シーンツリー** （文字通りシーンの木構造）に収められま"
"す。シーンがノードのツリーで出来ているように、シーンツリーもノードのツリーで"
"出来ています。シーンはゲームの中で、キャラクタ・武器・ドア・UIを表す事ができ"
"るもの、と考えるとわかりやすいでしょう。"

msgid "Signals"
msgstr "シグナル"

msgid ""
"Nodes emit signals when some event occurs. This feature allows you to make "
"nodes communicate without hard-wiring them in code. It gives you a lot of "
"flexibility in how you structure your scenes."
msgstr ""
"ノードはなにかイベントが発生すると、シグナルを発信します。この仕組みはノード"
"同士がコードで密結合することなく、やり取りすることを可能にし、シーンの構築に"
"柔軟さをもたらします。"

msgid ""
"Signals are Godot's version of the *observer* pattern. You can read more "
"about it here: https://gameprogrammingpatterns.com/observer.html"
msgstr ""
"シグナルは、*Observer* パターンの Godot バージョンです。Observerの詳細につい"
"ては、ここで読むことができます(英語): http://gameprogrammingpatterns.com/"
"observer.html"

msgid ""
"For example, buttons emit a signal when pressed. You can connect a piece of "
"code to this signal which will run in reaction to this event, like starting "
"the game or opening a menu."
msgstr ""
"例えば、ボタンが押されたときシグナルが発信されます。このシグナルに接続するこ"
"とで、(ボタンを押したという)イベントへの反応として、ゲームの開始やメニューを"
"開く処理を実行することができるようになります。"

msgid ""
"Other built-in signals can tell you when two objects collided, when a "
"character or monster entered a given area, and much more. You can also "
"define new signals tailored to your game."
msgstr ""
"他の組み込み済みのシグナルでは2つのオブジェクトの接触や、キャラクターやモンス"
"ターが一定のエリアに侵入したりといったことを通知することが出来ます。あなたの"
"ゲームに合わせた独自のシグナルを定義することも出来ます。"

msgid "Summary"
msgstr "要約"

msgid ""
"Nodes, scenes, the scene tree, and signals are four core concepts in Godot "
"that you will manipulate all the time."
msgstr ""
"ノード、シーン、シーンツリー、シグナルは Godot において 4 つの中核となる概念"
"で、常に操作することになります。"

msgid ""
"Nodes are your game's smallest building blocks. You combine them to create "
"scenes that you then combine and nest into the scene tree. You can then use "
"signals to make nodes react to events in other nodes or different scene tree "
"branches."
msgstr ""
"ノードはゲームを構成する最小ブロックです。それらを組み合わせてシーンを作り、"
"シーンツリーの中に入れ子にしていきます。シーンツリーの別の枝葉のノードへイベ"
"ントに反応させるために、シグナルを使うことが出来ます。"

msgid ""
"After this short breakdown, you probably have many questions. Bear with us "
"as you will get many answers throughout the getting started series."
msgstr ""
"この短い概要を読んだことで、たくさんの疑問が浮かんでいるかもしれません。この"
"「はじめに」シリーズを通して多くの答えが得られると思いますので、もう少しお付"
"き合いください。"
