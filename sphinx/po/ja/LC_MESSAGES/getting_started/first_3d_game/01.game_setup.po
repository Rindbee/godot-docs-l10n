#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Setting up the game area"
msgstr "ゲームエリアの設定"

msgid ""
"In this first part, we're going to set up the game area. Let's get started "
"by importing the start assets and setting up the game scene."
msgstr ""
"この最初のパートでは、ゲームエリアを設定します。さっそく、スタートアセットを"
"インポートして、ゲームシーンを設定しましょう。"

msgid ""
"We've prepared a Godot project with the 3D models and sounds we'll use for "
"this tutorial, linked in the index page. If you haven't done so yet, you can "
"download the archive here: `Squash the Creeps assets <https://github.com/"
"godotengine/godot-3d-dodge-the-creeps/releases/tag/1.1.0>`__."
msgstr ""
"このチュートリアルで使用する 3D モデルとサウンドを含む Godot プロジェクトを用"
"意しました。まだの方は `Squash the Creeps assets <https://github.com/"
"godotengine/godot-3d-dodge-the-creeps/releases/tag/1.1.0>`__ からアーカイブを"
"ダウンロードしてください。"

msgid ""
"Once you downloaded it, extract the .zip archive on your computer. Open the "
"Godot Project Manager and click the *Import* button."
msgstr ""
"ダウンロードしたら、.zip アーカイブをコンピュータで解凍します。Godotプロジェ"
"クトマネージャーを開き、 *インポート* ボタンをクリックします。"

msgid ""
"In the import popup, enter the full path to the freshly created directory "
"``squash_the_creeps_start/``. You can click the *Browse* button on the right "
"to open a file browser and navigate to the ``project.godot`` file the folder "
"contains."
msgstr ""
"インポートポップアップで、作成したばかりのディレクトリ\\ "
"``squash_the_creeps_start/``\\ へのフルパスを入力します。右側の \\ *参照"
"(Browse)*\\ ボタンをクリックしてファイル ブラウザを開き、フォルダに含まれる"
"\\ ``project.godot``\\ ファイルに移動することも可能です。"

msgid "Click *Import & Edit* to open the project in the editor."
msgstr ""
"\\ *インポートして編集(Install & Edit)*\\ をクリックすると、エディタのプロ"
"ジェクトが開きます。"

msgid ""
"The start project contains an icon and two folders: ``art/`` and ``fonts/``. "
"There, you will find the art assets and music we'll use in the game."
msgstr ""
"スタート プロジェクトには、アイコンと 2 つのフォルダー\\ ``art/``\\ と\\ "
"``fonts/``\\ があります。そこには、ゲーム内で使用するアートアセットと音楽があ"
"ります。"

msgid ""
"There are two 3D models, ``player.glb`` and ``mob.glb``, some materials that "
"belong to these models, and a music track."
msgstr ""
"\\ ``player.glb``\\ と\\ ``mob.glb``\\ という二つの3Dモデルとこれらのモデルに"
"属するいくつかの素材、そして音楽トラックです。"

msgid "Setting up the playable area"
msgstr "プレイ可能エリアの設定"

msgid ""
"We're going to create our main scene with a plain :ref:`Node <class_Node>` "
"as its root. In the *Scene* dock, click the *Add Child Node* button "
"represented by a \"+\" icon in the top-left and double-click on *Node*. Name "
"the node ``Main``. An alternate method to rename the node is to right-click "
"on *Node* and choose *Rename* (or :kbd:`F2`). Alternatively, to add a node "
"to the scene, you can press :kbd:`Ctrl + A` (:kbd:`Cmd + A` on macOS)."
msgstr ""
"プレーンな :ref:`Node <class_Node>` をルートとして、メイン シーンを作成しま"
"す。 *シーン* の枠内で、左上の \"+\" アイコンで表される *子ノードを追加* ボタ"
"ンをクリックして、開いたウィンドウ内の *Node* をダブルクリックします。この"
"ノードに \"Main\"という名前を付けましょう。ノードの名前を変えるには *シーン* "
"の枠内にある、名前を変更したい *Node* を右クリックして *名前の変更* も選択し"
"て下さい。また、ノードをシーンに追加するには、 :kbd:`Ctrl + a` (macOSでは :"
"kbd:`Cmd + a`) をのショートカットも利用できます。"

msgid ""
"Save the scene as ``main.tscn`` by pressing :kbd:`Ctrl + S` (:kbd:`Cmd + S` "
"on macOS)."
msgstr ""
"シーンを\\ ``main.tscn``\\ として保存しましょう。 :kbd:`Ctrl + s` (macOS で"
"は :kbd:`Cmd + s`) を押して下さい。"

msgid ""
"We'll start by adding a floor that'll prevent the characters from falling. "
"To create static colliders like the floor, walls, or ceilings, you can use :"
"ref:`StaticBody3D <class_StaticBody3D>` nodes. They require :ref:"
"`CollisionShape3D <class_CollisionShape3D>` child nodes to define the "
"collision area. With the ``Main`` node selected, add a :ref:`StaticBody3D "
"<class_StaticBody3D>` node, then a :ref:`CollisionShape3D "
"<class_CollisionShape3D>`. Rename the :ref:`StaticBody3D "
"<class_StaticBody3D>` to ``Ground``."
msgstr ""
"まず、キャラクターの落下を防ぐための床を追加します。床、壁、天井のような静的"
"な衝突物(コライダー\"collider\")を作成するには、 :ref:`StaticBody3D "
"<class_StaticBody3D>` ノードを使用することができます。これらは、衝突領域を定"
"義するために :ref:`CollisionShape3D <class_CollisionShape3D>` という子ノード"
"を必要とします。\\ *Main*\\ ノードを選択し、 :ref:`StaticBody3D "
"<class_StaticBody3D>` ノードを追加し、追加した :ref:`StaticBody3D "
"<class_StaticBody3D>` を選択して、 :ref:`CollisionShape3D "
"<class_CollisionShape3D>` を子ノードとして追加して下さい。そして親ノードであ"
"る :ref:`StaticBody3D <class_StaticBody3D>` の名前を ``Ground`` に変更しま"
"しょう。"

msgid "Your scene tree should look like this"
msgstr "シーンツリーは次のようになります:"

msgid ""
"A warning sign next to the :ref:`CollisionShape3D <class_CollisionShape3D>` "
"appears because we haven't defined its shape. If you click the icon, a popup "
"appears to give you more information."
msgstr ""
":ref:`CollisionShape3D <class_CollisionShape3D>` の横に警告マークが表示されて"
"いるのは、まだ :ref:`CollisionShape3D <class_CollisionShape3D>` の形を定義し"
"ていないからです。この警告マークをクリックすると、ポップアップが表示され詳細"
"情報を確認できます。"

msgid ""
"To create a shape, select the :ref:`CollisionShape3D "
"<class_CollisionShape3D>` node, head to the *Inspector* and click the "
"*<empty>* field next to the *Shape* property. Create a new *BoxShape3D*."
msgstr ""
":ref:`CollisionShape3D <class_CollisionShape3D>` の形状を定義するには、「シー"
"ン」ドック内の :ref:`CollisionShape3D <class_CollisionShape3D>` を選択しま"
"す。次に、「 *インスペクター* (Inspector)」ドック内の、 *Shape* プロパティの"
"隣にある *<空>* (empty)フィールドをクリックします。そしてプルダウンから「新"
"規 *BoxShape3D* 」を選択して形状を作成します。"

msgid ""
"The box shape is perfect for flat ground and walls. Its thickness makes it "
"reliable to block even fast-moving objects."
msgstr ""
"ボックスの形状は、平らな地面や壁に最適です。その厚さによって、動きの速い物体"
"でも確実にブロックできます。"

msgid ""
"A box's wireframe appears in the viewport with three orange dots. You can "
"click and drag these to edit the shape's extents interactively. We can also "
"precisely set the size in the inspector. Click on the :ref:`BoxShape3D "
"<class_BoxShape3D>` to expand the resource. Set its *Size* to ``60`` on the "
"X-axis, ``2`` for the Y-axis, and ``60`` for the Z-axis."
msgstr ""
"追加したボックスのワイヤフレームが、ビューポートに3つのオレンジ色の点で表示さ"
"れます。これらをクリック＆ドラッグして、形状の大きさをインタラクティブに編集"
"できます。また、インスペクタでサイズを正確に設定することもできます。インスペ"
"クタのドックで、先ほど設定した :ref:`BoxShape3D <class_BoxShape3D>` をクリッ"
"クし、設定項目を展開してみましょう。そしてその設定項目の *Size* 欄で、 X 軸"
"に ``60`` 、Y軸に ``2`` 、Z軸に ``60`` を指定します。"

msgid ""
"Collision shapes are invisible. We need to add a visual floor that goes "
"along with it. Select the ``Ground`` node and add a :ref:`MeshInstance3D "
"<class_MeshInstance3D>` as its child."
msgstr ""
"衝突形状は目に見えません。そのため、それに合わせて目に見える床を追加する必要"
"があります。 ``Ground`` ノードを選択し、 :ref:`MeshInstance3D "
"<class_MeshInstance3D>` を子ノードとして追加してください。"

msgid ""
"In the *Inspector*, click on the field next to *Mesh* and create a :ref:"
"`BoxMesh <class_BoxMesh>` resource to create a visible box."
msgstr ""
"*インスペクター* (Inspector)ドック内の *Mesh* の隣の *<空>* (empty)フィールド"
"をクリックし、「新規 :ref:`BoxMesh <class_BoxMesh>` 」を選択して目に見える"
"ボックスを作成します。"

msgid ""
"Once again, it's too small by default. Click the box icon to expand the "
"resource and set its *Size* to ``60``, ``2``, and ``60``."
msgstr ""
"繰り返しになりますが、デフォルトの大きさでは床としては小さすぎます。 *インス"
"ペクター* 上で、選択したボックスのサムネイルをクリックして選択項目を展開し、 "
"*Size* を X : ``60`` 、Y : ``2`` 、Z : ``60`` にして下さい。"

msgid ""
"You should see a wide grey slab that covers the grid and blue and red axes "
"in the viewport."
msgstr ""
"ビューポートにグリッドを覆う広い灰色の平板と、青と赤の軸が表示されるはずで"
"す。"

msgid ""
"We're going to move the ground down so we can see the floor grid. To do "
"this, the grid snapping feature can be used. Grid snapping can be activated "
"2 ways in the 3D editor. The first is by pressing the *Use Snap* button (or "
"pressing the :kbd:`Y` key). The second is by selecting a node, dragging a "
"handle on the gizmo **then** holding :kbd:`Ctrl` while still clicking to "
"enable snapping as long as :kbd:`Ctrl` is held."
msgstr ""
"地面を下に移動して、床のグリッドを見えるようにしましょう。そのためにグリッド"
"スナップ機能を使うことができます。グリッドスナップ機能を3Dエディタで使用する"
"方法は2つあります。1つ目は、 *スナップを使用* (Use Snap)ボタンを押す（ :kbd:"
"`Y` キーを押しても良いです）ことです。もう1つの方法は、ノードを選択し、ギズモ"
"までマウスカーソルを移動させ、 :kbd:`Ctrl` を押しながらギズモをクリックする"
"と、 :kbd:`Ctrl` を押している間、スナップが有効になり、整数値で位置調整を行う"
"ことがます。"

msgid ""
"Start by setting snapping with your preferred method. Then move the "
"``Ground`` node using the Y-axis (the green arrow on the gizmo)."
msgstr ""
"まず、お好みの方法でスナップを設定して下さい。次にY軸（ギズモの緑の矢印）を"
"使って ``Ground`` ノードを動かしましょう。"

msgid ""
"If you can't see the 3D object manipulator like on the image above, ensure "
"the *Select Mode* is active in the toolbar above the view."
msgstr ""
"上の画像のように 3D オブジェクト マニピュレーターが表示されない場合は、ビュー"
"の上のツールバーで *選択モード(Select Mode)* がアクティブになっていることを確"
"認してください。"

msgid ""
"Move the ground down ``1`` meter, in order to have a visible editor grid. A "
"label in the bottom-left corner of the viewport tells you how much you're "
"translating the node."
msgstr ""
"地面（ ``Ground`` ）を ``1`` メートル下に移動させます。ギズモを操作している間"
"ビューポートの左下隅に表示されるラベルは、ノードをどれだけ平行移動させたかを"
"示しています。"

msgid ""
"Moving the *Ground* node down moves both children along with it. Ensure you "
"move the *Ground* node, **not** the *MeshInstance3D* or the "
"*CollisionShape3D*."
msgstr ""
"``Ground`` ノードを下に動かすと、両方の子ノードも一緒に移動します。 :ref:"
"`MeshInstance3D <class_MeshInstance3D>` または :ref:`CollisionShape3D "
"<class_CollisionShape3D>` の子ノードではなく、親ノードの ``Ground`` ノードを"
"移動していることを確認してください。"

msgid "Ultimately, ``Ground``'s transform.position.y should be -1"
msgstr ""
"最終的に、 ``Ground`` のY座標の値(transform.position.y)が ``-1`` になるように"
"変更しましょう"

msgid ""
"Let's add a directional light so our scene isn't all grey. Select the "
"``Main`` node and add a child node :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>`."
msgstr ""
"シーンがグレー一色にならないように、ディレクショナルライトを追加しましょう。 "
"``Main`` ノードを選択し、子ノードとして :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>` を追加します。"

msgid ""
"We need to move and rotate the :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>` node. Move it up by clicking and dragging on the "
"manipulator's green arrow and click and drag on the red arc to rotate it "
"around the X-axis, until the ground is lit."
msgstr ""
":ref:`DirectionalLight3D <class_DirectionalLight3D>` を移動し、回転させる必要"
"があります。 :ref:`DirectionalLight3D <class_DirectionalLight3D>` のマニピュ"
"レーターの緑の矢印をクリック＆ドラッグして上に移動し、赤い円弧をクリック＆ド"
"ラッグしてX軸を中心に回転させ、地面が照らされるようにします。"

msgid ""
"In the *Inspector*, turn on *Shadow -> Enabled* by clicking the checkbox."
msgstr ""
"*インスペクター* (Inspector)で、 *Shadow -> Enabled* の隣のチェックボックスに"
"チェックを入れて、オンにします。"

msgid "At this point, your project should look like this."
msgstr "ここまでで、プロジェクトは次のようになっているはずです。"

msgid ""
"That's our starting point. In the next part, we will work on the player "
"scene and base movement."
msgstr ""
"これが出発点になります。次のパートでは、プレイヤーのシーンとベースの動きを作"
"ります。"
