#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Character animation"
msgstr "キャラクターのアニメーション"

msgid ""
"In this final lesson, we'll use Godot's built-in animation tools to make our "
"characters float and flap. You'll learn to design animations in the editor "
"and use code to make your game feel alive."
msgstr ""
"最後のレッスンでは、Godot に内蔵されたアニメーションツールを使って、キャラク"
"ターを浮かせたり羽ばたかせたりします。エディターでアニメーションをデザイン"
"し、プログラムのコーディングを行ってゲームを生き生きとしたものにすることを学"
"びます。"

msgid "|image0|"
msgstr "\\ |image0|"

msgid "image0"
msgstr "image0"

msgid "We'll start with an introduction to using the animation editor."
msgstr "まずはアニメーションエディターの使い方から始めます。"

msgid "Using the animation editor"
msgstr "アニメーションエディターを使う"

msgid ""
"The engine comes with tools to author animations in the editor. You can then "
"use the code to play and control them at runtime."
msgstr ""
"Godot エンジンのエディタには、アニメーションを作成するためのツールが付属して"
"います。さらに、Godot エンジンのエディタでコードを書いて、実行時にアニメー"
"ションを再生したり、制御したりすることができます。"

msgid ""
"Open the player scene, select the ``Player`` node, and add an :ref:"
"`AnimationPlayer <class_AnimationPlayer>` node."
msgstr ""
"プレイヤーシーンを開き、 ``Player`` ノードを選択し、 :ref:`AnimationPlayer "
"<class_AnimationPlayer>` ノードを追加します。"

msgid "The *Animation* dock appears in the bottom panel."
msgstr "下のパネルに *アニメーション* (Animation)のドックが表示されます。"

msgid "|image1|"
msgstr "\\ |image1|"

msgid "image1"
msgstr "image1"

msgid ""
"It features a toolbar and the animation drop-down menu at the top, a track "
"editor in the middle that's currently empty, and filter, snap, and zoom "
"options at the bottom."
msgstr ""
"上部にはツールバーとアニメーションのドロップダウンメニュー、中央にはトラック"
"エディター（現在は空）、下部にはフィルター、スナップ、ズームの各オプションを"
"備えています。"

msgid "Let's create an animation. Click on *Animation -> New*."
msgstr ""
"それではアニメーションを作ってみましょう。 *アニメーション* (Animation) -> "
"*New...* をクリックします。"

msgid "|image2|"
msgstr "\\ |image2|"

msgid "image2"
msgstr "image2"

msgid "Name the animation \"float\"."
msgstr "アニメーションの名前は \"float\" にします。"

msgid "|image3|"
msgstr "\\ |image3|"

msgid "image3"
msgstr "image3"

msgid ""
"Once you've created the animation, the timeline appears with numbers "
"representing time in seconds."
msgstr "アニメーションを作成すると、タイムラインに秒単位の時間が表示されます。"

msgid "|image4|"
msgstr "\\ |image4|"

msgid "image4"
msgstr "image4"

msgid ""
"We want the animation to start playback automatically at the start of the "
"game. Also, it should loop."
msgstr ""
"ゲーム開始時に自動的にアニメーションの再生が開始されるようにします。また、ア"
"ニメーションがループ再生するようにします。"

msgid ""
"To do so, you can click the autoplay button (|Autoplay|) in the animation "
"toolbar and the looping arrows, respectively."
msgstr ""
"これを行うには、アニメーションツールバーの自動再生ボタン (|Autoplay|) とアニ"
"メーションループの矢印をそれぞれクリックします。"

msgid "Autoplay"
msgstr "アニメーションの自動再生"

msgid "|image5|"
msgstr "\\ |image5|"

msgid "image5"
msgstr "image5"

msgid ""
"You can also pin the animation editor by clicking the pin icon in the top-"
"right. This prevents it from folding when you click on the viewport and "
"deselect the nodes."
msgstr ""
"また、右上のピンアイコンをクリックすることで、アニメーションエディタを固定す"
"ることが可能です。これにより、ビューポートをクリックしてノードの選択を解除し"
"たときに、エディタが折りたたまれるのを防ぐことができます。"

msgid "|image6|"
msgstr "|image6|"

msgid "image6"
msgstr "\\ image6"

msgid ""
"Set the animation duration to ``1.2`` seconds in the top-right of the dock."
msgstr "ドック右上のアニメーションの長さを ``1.2`` 秒に設定します。"

msgid "|image7|"
msgstr "\\ |image7|"

msgid "image7"
msgstr "\\ image7"

msgid ""
"You should see the gray ribbon widen a bit. It shows you the start and end "
"of your animation and the vertical blue line is your time cursor."
msgstr ""
"灰色のリボンが少し広がっているのが見えるはずです。これはアニメーションの開始"
"と終了を表し、青い縦線がタイムカーソルになります。"

msgid "|image8|"
msgstr "\\ |image8|"

msgid "image8"
msgstr "\\ image8"

msgid ""
"You can click and drag the slider in the bottom-right to zoom in and out of "
"the timeline."
msgstr ""
"右下のスライダーをクリックし、左右にドラッグすることで、タイムラインの拡大・"
"縮小が可能です。"

msgid "|image9|"
msgstr "\\ |image9|"

msgid "image9"
msgstr "\\ image9"

msgid "The float animation"
msgstr "浮遊アニメーション"

msgid ""
"With the animation player node, you can animate most properties on as many "
"nodes as you need. Notice the key icon next to properties in the "
"*Inspector*. You can click any of them to create a keyframe, a time and "
"value pair for the corresponding property. The keyframe gets inserted where "
"your time cursor is in the timeline."
msgstr ""
"アニメーション プレーヤー ノードを使用すると、必要な数だけノード上のほとんど"
"のプロパティをアニメーション化できます。 *インスペクター* (Inspector) のプロ"
"パティの横にある鍵のアイコンに注目してください。これらをクリックすると、対応"
"するプロパティの時間と値のペアであるキーフレームを作成することができます。"
"キーフレームは、タイムライン上のタイムカーソルがある場所に挿入されます。"

msgid ""
"Let's insert our first keys. Here, we will animate both the position and the "
"rotation of the ``Character`` node."
msgstr ""
"最初のキーを挿入してみましょう。ここでは ``Character`` ノードの位置と回転の両"
"方をアニメーションさせます。"

msgid ""
"Select the ``Character`` and in the *Inspector* expand the *Transform* "
"section. Click the key icon next to *Position*, and *Rotation*."
msgstr ""
"``Character`` を選択し、 *インスペクター* (Inspector)で *Transform* セクショ"
"ンを展開します。 *Position（位置）* と *Rotation（回転）* の横にある鍵のアイ"
"コンをクリックします。"

msgid "|image10|"
msgstr "\\ |image10|"

msgid "image10"
msgstr "\\ image10"

msgid ""
"For this tutorial, just create RESET Track(s) which is the default choice"
msgstr ""
"このチュートリアルでは、デフォルトの選択としてRESETトラックを作成します"

msgid ""
"Two tracks appear in the editor with a diamond icon representing each "
"keyframe."
msgstr ""
"エディタに2つのトラックが表示され、それぞれのキーフレームを表すひし形のアイコ"
"ン（◆）が表示されます。"

msgid "|image11|"
msgstr "\\ |image11|"

msgid "image11"
msgstr "\\ image11"

msgid ""
"You can click and drag on the diamonds to move them in time. Move the "
"position key to ``0.3`` seconds and the rotation key to ``0.1`` seconds."
msgstr ""
"ひし形のアイコンをクリック＆ドラッグすると、時間軸の中を移動させることができ"
"ます。position のキーを ``0.3`` 秒、rotation のキーを ``0.1`` 秒に合わせてく"
"ださい。"

msgid "|image12|"
msgstr "\\ |image12|"

msgid "image12"
msgstr "\\ image12"

msgid ""
"Move the time cursor to ``0.5`` seconds by clicking and dragging on the gray "
"timeline."
msgstr ""
"灰色のタイムライン上をクリック＆ドラッグして、タイムカーソル（青い縦線）を "
"``0.5`` 秒に移動してください。"

msgid "|timeline_05_click|"
msgstr "\\ |timeline_05_click|"

msgid "timeline_05_click"
msgstr "\\ timeline_05_click"

msgid ""
"In the *Inspector*, set the *Position*'s *Y* axis to ``0.65`` meters and the "
"*Rotation*' *X* axis to ``8``."
msgstr ""
"*インスペクター* (Inspector)で、 *Position（位置）* の *y* 軸を ``0.65`` メー"
"トルに、 *Rotation（回転）* の *x* 軸を ``8`` ° に設定します。"

msgid ""
"If you don't see the properties in the *Inspector* panel, first click on the "
"``Character`` node again in the *Scene* dock."
msgstr ""
"*インスペクター* (Inspector)パネルにプロパティが表示されていない場合は、まず "
"*シーン* (Scene)ドックにある ``Character`` ノードをもう一度クリックしてくださ"
"い。"

msgid "|image13|"
msgstr "\\ |image13|"

msgid "image13"
msgstr "\\ image13"

msgid "Create a keyframe for both properties"
msgstr "両方のプロパティのキーフレームを作成します"

msgid "|second_keys_both|"
msgstr "\\ |second_keys_both|"

msgid "second_keys_both"
msgstr "\\ second_keys_both"

msgid ""
"Now, move the position keyframe to ``0.7`` seconds by dragging it on the "
"timeline."
msgstr ""
"次に、position のキーフレームをタイムライン上でドラッグして、 ``0.7`` 秒まで"
"移動させてください。"

msgid "|image14|"
msgstr "\\ |image14|"

msgid "image14"
msgstr "\\ image14"

msgid ""
"A lecture on the principles of animation is beyond the scope of this "
"tutorial. Just note that you don't want to time and space everything evenly. "
"Instead, animators play with timing and spacing, two core animation "
"principles. You want to offset and contrast in your character's motion to "
"make them feel alive."
msgstr ""
"アニメーションの原理についての講義は、このチュートリアルの範囲を超えていま"
"す。ただ、すべての動作のタイミングとスペーシングを均等にしたいわけではないこ"
"とに注意してください。アニメーターはアニメーションの2つの基本原則であるタイミ"
"ングとスペーシングを使います。キャラクターを生きているように感じさせるには、"
"オフセット（前の位置からどれくらいキャラクターをずらしたか）とコントラスト"
"（どれくらい違いがあるか）をキャラクターの動きに設定することが必要です。"

msgid ""
"Move the time cursor to the end of the animation, at ``1.2`` seconds. Set "
"the Y position to about ``0.35`` and the X rotation to ``-9`` degrees. Once "
"again, create a key for both properties."
msgstr ""
"タイムカーソルをアニメーションの終了地点（ ``1.2`` 秒）に合わせます。Y軸の位"
"置を約 ``0.35`` 、X軸の回転を ``-9`` 度に設定します。もう一度、両方のプロパ"
"ティにキーを作成します。"

msgid "|animation_final_keyframes|"
msgstr "\\ |animation_final_keyframes|"

msgid "animation_final_keyframes"
msgstr "\\ animation_final_keyframes"

msgid ""
"You can preview the result by clicking the play button or pressing :kbd:"
"`Shift + D`. Click the stop button or press :kbd:`S` to stop playback."
msgstr ""
"再生ボタンをクリックするか、 :kbd:`Shift + D` を押すと、結果をプレビューする"
"ことができます。停止ボタンをクリックするか :kbd:`S` を押すと再生が停止しま"
"す。"

msgid "|image15|"
msgstr "\\ |image15|"

msgid "image15"
msgstr "\\ image15"

msgid ""
"You can see that the engine interpolates between your keyframes to produce a "
"continuous animation. At the moment, though, the motion feels very robotic. "
"This is because the default interpolation is linear, causing constant "
"transitions, unlike how living things move in the real world."
msgstr ""
"エンジンがキーフレーム間を補間して連続したアニメーションを生成しているのがわ"
"かります。しかし現時点では、この動きは非常に機械的な感じがします。これは、デ"
"フォルトの補間が直線的で、現実世界での生き物の動きとは異なり、キーフレーム間"
"の動作が一定だからです。"

msgid "We can control the transition between keyframes using easing curves."
msgstr ""
"イージングカーブ（モーションカーブ）を使い、キーフレーム間の遷移をコントロー"
"ルすることができます。"

msgid ""
"Click and drag around the first two keys in the timeline to box select them."
msgstr ""
"タイムライン上の最初の2つのキー周辺をクリックしてドラッグし、ボックス選択しま"
"す。"

msgid "|image16|"
msgstr "\\ |image16|"

msgid "image16"
msgstr "\\ image16"

msgid ""
"You can edit the properties of both keys simultaneously in the *Inspector*, "
"where you can see an *Easing* property."
msgstr ""
"*インスペクター* (Inspector) では、両方のキーのプロパティを同時に編集できま"
"す。そこに *Easing* のプロパティが表示されています。"

msgid "|image17|"
msgstr "\\ |image17|"

msgid "image17"
msgstr "\\ image17"

msgid ""
"Click and drag on the curve, pulling it towards the left. This will make it "
"ease-out, that is to say, transition fast initially and slow down as the "
"time cursor reaches the next keyframe."
msgstr ""
"線をクリックし、ドラッグして左方向に動かします。これによりイーズアウト(ease-"
"out)、つまり最初は速く移行し、タイムカーソルが次のキーフレームに近づくにつれ"
"て遅くなるようにします。"

msgid "|image18|"
msgstr "\\ |image18|"

msgid "image18"
msgstr "image18"

msgid ""
"Play the animation again to see the difference. The first half should "
"already feel a bit bouncier."
msgstr ""
"もう一度アニメーションを再生して、その違いを確認しましょう。もう既に、前半の"
"動作は少し弾力が増したように感じるはずです。"

msgid "Apply an ease-out to the second keyframe in the rotation track."
msgstr ""
"回転(rotation_degrees)トラックの2番目のキーフレームにイーズアウトを適用してみ"
"てください。"

msgid "|image19|"
msgstr "\\ |image19|"

msgid "image19"
msgstr "\\ image19"

msgid ""
"Do the opposite for the second position keyframe, dragging it to the right."
msgstr "2つ目の位置にあるキーフレームは逆に右にドラッグしてください。"

msgid "|image20|"
msgstr "\\ |image20|"

msgid "image20"
msgstr "\\ image20"

msgid "Your animation should look something like this."
msgstr "アニメーションはこのような感じになります。"

msgid "|image21|"
msgstr "\\ |image21|"

msgid "image21"
msgstr "\\ image21"

msgid ""
"Animations update the properties of the animated nodes every frame, "
"overriding initial values. If we directly animated the *Player* node, it "
"would prevent us from moving it in code. This is where the *Pivot* node "
"comes in handy: even though we animated the *Character*, we can still move "
"and rotate the *Pivot* and layer changes on top of the animation in a script."
msgstr ""
"アニメーションは、フレームごとにアニメーション ノードのプロパティを更新し、初"
"期値を上書きします。 *Player* ノードを直接アニメーションさせると、コードを"
"使って移動や回転を行うことができなくなります。そこで、 *Pivot* ノードが役に立"
"ちます。 *Character* をアニメーションしていても、 *Pivot* を移動および回転さ"
"せて、アニメーションしているキャラクターの移動や回転をスクリプト内で行うこと"
"ができるのです。"

msgid "If you play the game, the player's creature will now float!"
msgstr ""
"ゲームをプレイすると、プレイヤーのクリーチャーが浮き上がるようになりました!"

msgid ""
"If the creature is a little too close to the floor, you can move the "
"``Pivot`` up to offset it."
msgstr ""
"クリーチャーが少し床に近すぎる場合は、 ``Pivot`` を上に動かして高さを調整する"
"ことができます。"

msgid "Controlling the animation in code"
msgstr "コードからアニメーションを制御する"

msgid ""
"We can use code to control the animation playback based on the player's "
"input. Let's change the animation speed when the character is moving."
msgstr ""
"コーディングによって、プレイヤーの入力に応じてアニメーションの再生を制御する"
"ことができます。キャラクターが動いているときのアニメーションの速度を変えてみ"
"ましょう。"

msgid "Open the ``Player``'s script by clicking the script icon next to it."
msgstr ""
"``Player`` ノードの横にあるスクリプトアイコンをクリックして ``Player`` のスク"
"リプトを開きます。"

msgid "|image22|"
msgstr "\\ |image22|"

msgid "image22"
msgstr "\\ image22"

msgid ""
"In ``_physics_process()``, after the line where we check the ``direction`` "
"vector, add the following code."
msgstr ""
"``_physics_process()`` 関数の中で、 ``direction`` ベクトルを確認する処理の後"
"の行に、次のコードを追加します。"

msgid ""
"This code makes it so when the player moves, we multiply the playback speed "
"by ``4``. When they stop, we reset it to normal."
msgstr ""
"このコードでは、プレイヤーがクリーチャーを動かしたときに、再生速度を ``4`` 倍"
"にします。停止したら、再生速度を通常に戻します。"

msgid ""
"We mentioned that the ``Pivot`` could layer transforms on top of the "
"animation. We can make the character arc when jumping using the following "
"line of code. Add it at the end of ``_physics_process()``."
msgstr ""
"先ほど、 ``Pivot`` ノードは親ノードのアニメーションに移動や回転などの変化を追"
"加することができると述べました。そこで、次のコードでキャラクターがジャンプし"
"た時に弧を描かせることができます。これを ``_physics_process()`` 関数の最後に"
"追加します。"

msgid "Animating the mobs"
msgstr "モブキャラクターをアニメーションさせる"

msgid ""
"Here's another nice trick with animations in Godot: as long as you use a "
"similar node structure, you can copy them to different scenes."
msgstr ""
"Godot のアニメーションには、もう一つ便利な機能があります。同じようなノード構"
"造を使用する限り、そのノードに設定されているアニメーションを異なるシーンにコ"
"ピーできるのです。"

msgid ""
"For example, both the ``Mob`` and the ``Player`` scenes have a ``Pivot`` and "
"a ``Character`` node, so we can reuse animations between them."
msgstr ""
"例えば、 ``Mob`` シーンと ``Player`` シーンの両方が ``Pivot`` ノードと "
"``Character`` ノードを持っているので、これらの間でアニメーションを再利用する"
"ことができます。"

msgid ""
"Open the *Player* scene, select the AnimationPlayer node and then click on "
"**Animation > Manage Animations...**. Click the *Copy animation to "
"clipboard* button (two small squares) alongside the *float* animation. Click "
"OK to close the window."
msgstr ""
"*Player* シーンを開き、AnimationPlayerノードを選択し、下部のメニュー内の **ア"
"ニメーション > アニメーションの管理...** をクリックします。 *float* アニメー"
"ションの横にある *クリップボードにアニメーションをコピー* ボタン（2つの小さな"
"四角のアイコンのボタン）をクリックします。OKをクリックしてウィンドウを閉じま"
"す。"

msgid ""
"Then open ``mob.tscn``, create an :ref:`AnimationPlayer "
"<class_AnimationPlayer>` child node and select it. Click **Animation > "
"Manage Animations**, then **Add Library**. You should see the message "
"\"Global library will be created.\" Leave the text field blank and click OK. "
"Click the *Paste* icon (clipboard) and it should appear in the window. Click "
"OK to close the window."
msgstr ""
"次に ``mob.tscn`` を開き、 :ref:`AnimationPlayer <class_AnimationPlayer>` の"
"子ノードを作成し、選択します。 **アニメーション > アニメーションの管理...** "
"(Animation > Manage Animations)をクリックし、 **ライブラリを追加** (Add "
"Library)をクリックします。「グローバルライブラリが作成されます。」というメッ"
"セージが表示されるはずです。テキストフィールドを空白のままにして、OKをクリッ"
"クします。 *貼り付け* アイコン（バインダーやクリップボードの形のアイコン）を"
"クリックすると、先ほどコピーしたfloatアニメーションがウィンドウに表示されるは"
"ずです。OKをクリックしてウィンドウを閉じます。"

msgid ""
"Next, make sure that the autoplay button (|Autoplay|) and the looping arrows "
"(Animation looping) are also turned on in the animation editor in the bottom "
"panel. That's it; all monsters will now play the float animation."
msgstr ""
"次に、下のパネルのアニメーション・エディターで、自動再生ボタン (|Autoplay|) "
"とアニメーションループのアイコン (Animation looping) もオンになっていることを"
"確認しましょう。これですべてのモンスターが宙に浮かぶアニメーションを再生する"
"ようになりました。"

msgid ""
"We can change the playback speed based on the creature's ``random_speed``. "
"Open the *Mob*'s script and at the end of the ``initialize()`` function, add "
"the following line."
msgstr ""
"クリーチャーの ``random_speed`` に基づいて、アニメーションの再生速度を変更で"
"きます。 *Mob* のスクリプトを開き、 ``initialize()`` 関数の最後に、次の行を追"
"加してください。"

msgid "And with that, you finished coding your first complete 3D game."
msgstr "これで、初めての完璧な3Dゲームのコーディングが完了しました。"

msgid "**Congratulations**!"
msgstr "**おめでとうございます**!"

msgid ""
"In the next part, we'll quickly recap what you learned and give you some "
"links to keep learning more. But for now, here are the complete ``player."
"gd`` and ``mob.gd`` so you can check your code against them."
msgstr ""
"次のパートでは、学んだことを簡単にまとめ、さらに発展的な内容を学ぶためのリン"
"クもいくつか紹介します。しかしその前に、ここに ``player.gd`` と ``mob.gd`` の"
"全体のコードがあるので、自分のコードと照らし合わせてチェックしてみてくださ"
"い。"

msgid "Here's the *Player* script."
msgstr "*Player* スクリプトは以下の通りです。"

msgid "And the *Mob*'s script."
msgstr "*Mob* のスクリプトは以下の通りです。"
