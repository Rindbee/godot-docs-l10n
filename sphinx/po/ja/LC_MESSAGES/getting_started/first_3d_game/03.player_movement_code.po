#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Moving the player with code"
msgstr "プログラムでプレイヤーを動かす"

msgid ""
"It's time to code! We're going to use the input actions we created in the "
"last part to move the character."
msgstr ""
"いよいよコーディングです。前編で作成した入力アクションを使って、キャラクター"
"を動かしていきます。"

msgid "For this project, we will be following the Godot naming conventions."
msgstr "このプロジェクトでは、Godotの命名規則に従います。"

msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: クラス(ノード)はPascalCaseを使用し、変数と関数はsnake_caseを使"
"用し、定数はALL_CAPSを使用します(\\ :ref:`doc_gdscript_styleguide`\\ を参"
"照)。"

msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`). Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**: クラス、export変数、メソッドはPascalCaseを使用し、プライベートフィー"
"ルドは _camelCase を使用し、ローカル変数とパラメーターは camelCase を使用しま"
"す(\\ :ref:`doc_c_sharp_styleguide`\\ を参照)。シグナルを接続するときは、メ"
"ソッド名を正確に入力してください。"

msgid "|image0|"
msgstr "\\ |image0|"

msgid "image0"
msgstr "image0"

msgid ""
"Let's start with the class's properties. We're going to define a movement "
"speed, a fall acceleration representing gravity, and a velocity we'll use to "
"move the character."
msgstr ""
"まず、このクラスのプロパティから始めましょう。移動速度(speed)、重力を表す落下"
"加速度(gravity)、そしてキャラクターを移動させるのに使う速度(velocity)を定義し"
"ていきます。"

msgid ""
"The values are quite different from 2D code because distances are in meters. "
"While in 2D, a thousand units (pixels) may only correspond to half of your "
"screen's width, in 3D, it's a kilometer."
msgstr ""
"距離はメートル単位なので、2D コードとは値がかなり異なります。2D では、1000単"
"位（ピクセル）は画面の幅の半分にしか相当しませんが、3D では 1km になります。"

msgid ""
"Here, we're going to make all calculations using the ``_physics_process()`` "
"virtual function. Like ``_process()``, it allows you to update the node "
"every frame, but it's designed specifically for physics-related code like "
"moving a kinematic or rigid body."
msgstr ""
"ここでは、\\ ``_physics_process()``\\ 仮想関数を使用してすべての計算を行いま"
"す。\\ ``_process()``\\ と同様に、フレームごとにノードを更新することができま"
"すが、運動体や剛体の移動などの物理関連のコードに特化した設計になっています。"

msgid ""
"To learn more about the difference between ``_process()`` and "
"``_physics_process()``, see :ref:`doc_idle_and_physics_processing`."
msgstr ""
"\\ ``_process()``\\ と\\ ``_physics_process()``\\ の違いについては、 :ref:"
"`doc_idle_and_physics_processing` を参照してください。"

msgid ""
"We start by initializing a ``direction`` variable to ``Vector3.ZERO``. Then, "
"we check if the player is pressing one or more of the ``move_*`` inputs and "
"update the vector's ``x`` and ``z`` components accordingly. These correspond "
"to the ground plane's axes."
msgstr ""
"まず、\\ ``direction``\\ 変数を \\ ``Vector3.ZERO``\\ に初期化することからは"
"じめます。次に、プレイヤーが\\ ``move_*``\\ の入力を一つ以上押しているかどう"
"かを確認し、ベクトルの\\ ``x``\\ 、\\ ``z``\\ 成分を適宜に更新します。これら"
"の成分は地平面の軸に相当します。"

msgid ""
"These four conditions give us eight possibilities and eight possible "
"directions."
msgstr "この4つの条件は8つの可能性そして8つの可能な方向を与えます。"

msgid ""
"Here, we only normalize the vector if the direction has a length greater "
"than zero, which means the player is pressing a direction key."
msgstr ""
"ここでは、方向が0より大きい長さを持つ場合、つまりプレイヤーが方向キーを押して"
"いる場合にのみ、このベクトルを正規化(normalize)します。"

msgid ""
"The physics engine can only detect interactions with walls, the floor, or "
"other bodies during a given frame if movement and collisions happen. We will "
"use this property later to code the jump."
msgstr ""
"物理エンジンは、移動および衝突が起こった場合にのみ、特定のフレームにおける"
"壁、床、または他の物体との相互作用を検出することができます。 後でこのプロパ"
"ティを使ってジャンプをコーディングします。"

msgid ""
"On the last line, we call ``CharacterBody3D.move_and_slide()`` which is a "
"powerful method of the ``CharacterBody3D`` class that allows you to move a "
"character smoothly. If it hits a wall midway through a motion, the engine "
"will try to smooth it out for you. It uses the *velocity* value native to "
"the :ref:`CharacterBody3D <class_CharacterBody3D>`"
msgstr ""
"最後の行で\\ ``CharacterBody3D.move_and_slide()``\\ を呼び出しています。これ"
"は\\ ``CharacterBody3D``\\ クラスの強力なメソッドで、キャラクターをスムーズに"
"動かすことができます。動きの途中で壁にぶつかっても、エンジンがスムーズな動き"
"にしようとします。これは\\ :ref:`CharacterBody3D <class_CharacterBody3D>`\\ "
"の\\ *velocity*\\ の値を使用します。"

msgid "And that's all the code you need to move the character on the floor."
msgstr ""
"そして、これが床の上でキャラクターを動かすために必要なコードのすべてです。"

msgid "Testing our player's movement"
msgstr "プレイヤーの動きをテストする"

msgid "|image1|"
msgstr "\\ |image1|"

msgid "image1"
msgstr "image1"

msgid "|image2|"
msgstr "\\ |image2|"

msgid "image2"
msgstr "image2"

msgid "Adding a camera"
msgstr "カメラを追加する"

msgid "|image3|"
msgstr "\\ |image3|"

msgid "image3"
msgstr "image3"

msgid "|image4|"
msgstr "\\ |image4|"

msgid "image4"
msgstr "image4"

msgid ""
"We're going to use the *Pivot* to rotate the camera as if it was on a crane. "
"Let's first split the 3D view to be able to freely navigate the scene and "
"see what the camera sees."
msgstr ""
"ここでは、\\ *Pivot*\\ を使用して、クレーンに乗っているかのようにカメラを回転"
"させることにします。まず、3D ビューを分割して、シーンを自由に移動できるように"
"し、カメラが見ているものを確認できるようにしましょう。"

msgid ""
"In the toolbar right above the viewport, click on *View*, then *2 "
"Viewports*. You can also press :kbd:`Ctrl + 2` (:kbd:`Cmd + 2` on macOS)."
msgstr ""
"ビューポートのすぐ上のツールバーで、\\ *ビュー*\\ (View)、そして\\ *2 ビュー"
"ポート*\\ (2 Viewports)をクリックしてください。また、:kbd:`Ctrl + 2` (macOS"
"は :kbd:`Cmd + 2` )を押すことも可能です。"

msgid "|image11|"
msgstr "\\ |image11|"

msgid "image11"
msgstr "\\ image11"

msgid "|image5|"
msgstr "\\ |image5|"

msgid "image5"
msgstr "image5"

msgid "|image6|"
msgstr "|image6|"

msgid "image6"
msgstr "\\ image6"

msgid "|image7|"
msgstr "\\ |image7|"

msgid "image7"
msgstr "\\ image7"

msgid "|image8|"
msgstr "\\ |image8|"

msgid "image8"
msgstr "\\ image8"

msgid ""
"You can run the scene by pressing :kbd:`F6` and press the arrow keys to move "
"the character."
msgstr ""
":kbd:`F6`を押してシーンを実行し、矢印キーを押してキャラクターを移動することが"
"できます。"

msgid "|image9|"
msgstr "\\ |image9|"

msgid "image9"
msgstr "\\ image9"

msgid ""
"We can see some empty space around the character due to the perspective "
"projection. In this game, we're going to use an orthographic projection "
"instead to better frame the gameplay area and make it easier for the player "
"to read distances."
msgstr ""
"透視投影(Perspective)を使用しているため、キャラクターの周囲の何もない空間が見"
"えています。このゲームでは、ゲームプレイエリアをより適切に枠に収め、プレイ"
"ヤーが距離を読みやすくするために、代わりに平行投影(Orthographic)を使用するこ"
"とにします。"

msgid ""
"Select the *Camera* again and in the *Inspector*, set the *Projection* to "
"*Orthogonal* and the *Size* to ``19``. The character should now look flatter "
"and the ground should fill the background."
msgstr ""
"再び\\ *Camera*\\ を選択し、\\ *インスペクター*\\ (Inspector)で、\\ "
"*Projection*\\ を \\ *Orthogonal*\\ に、\\ *Size*\\ を\\ ``19``\\ に設定しま"
"す。これで、キャラクターはより平坦に見え、地面が背景を埋めるようになるはずで"
"す。"

msgid "|image10|"
msgstr "\\ |image10|"

msgid "image10"
msgstr "\\ image10"

msgid "Translation status"
msgstr "翻訳ステータス"
