#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Kinematic character (2D)"
msgstr "Caractère cinématique (2D)"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"Yes, the name sounds strange. \"Kinematic Character\". What is that? The "
"reason for the name is that, when physics engines came out, they were called "
"\"Dynamics\" engines (because they dealt mainly with collision responses). "
"Many attempts were made to create a character controller using the dynamics "
"engines, but it wasn't as easy as it seemed. Godot has one of the best "
"implementations of dynamic character controller you can find (as it can be "
"seen in the 2d/platformer demo), but using it requires a considerable level "
"of skill and understanding of physics engines (or a lot of patience with "
"trial and error)."
msgstr ""
"Oui, le nom semble étrange. \"Personnage cinématique\". Qu'est-ce que c'est "
"que ça ? La raison pour ce nom est que, lorsque les moteurs physiques sont "
"apparus, ils étaient appelés moteurs \"dynamiques\" (parce qu'ils "
"s'occupaient principalement des réactions de collisions). Beaucoup de "
"tentatives ont été faites pour créer un contrôleur de personnage qui utilise "
"les moteurs dynamiques, mais ce n'était pas aussi facile que ça en avait "
"l'air. Godot a l'une des meilleures implémentations de contrôleur de "
"personnage dynamique que vous pouvez trouver (comme vous pouvez le voir dans "
"la démo de jeu de plateforme 2d), mais l'utiliser demande un niveau de "
"compétence considérable ainsi qu'une bonne connaissance des moteurs "
"physiques (ou beaucoup de patience avec des essais et des erreurs)."

msgid ""
"Some physics engines, such as Havok seem to swear by dynamic character "
"controllers as the best option, while others (PhysX) would rather promote "
"the kinematic one."
msgstr ""
"Certains moteurs physiques, comme Havok, semblent considérer les contrôleurs "
"de personnages dynamiques comme la meilleure option, alors que d'autres "
"(PhysX) promeuvent plutôt les contrôleurs cinématiques."

msgid "So, what is the difference?:"
msgstr "Et donc, quelle est la différence ? :"

msgid ""
"A **dynamic character controller** uses a rigid body with an infinite "
"inertia tensor. It's a rigid body that can't rotate. Physics engines always "
"let objects move and collide, then solve their collisions all together. This "
"makes dynamic character controllers able to interact with other physics "
"objects seamlessly, as seen in the platformer demo. However, these "
"interactions are not always predictable. Collisions can take more than one "
"frame to be solved, so a few collisions may seem to displace a tiny bit. "
"Those problems can be fixed, but require a certain amount of skill."
msgstr ""
"Un **contrôleur de personnage dynamique** utilise un corps rigide avec un "
"tenseur d'inertie infini. En fait, cela veut simplement dire que le corps "
"rigide ne peut pas tourner. Les moteurs physiques laissent toujours les "
"objets entrer en collision, puis résolvent leurs collisions tous ensemble. "
"Cela fait que le contrôleur de personnage dynamique peut interagir avec "
"d'autres objets physiques sans problème, comme on peut le voir dans la démo "
"du jeu de plateforme. Cependant, ces interactions ne sont pas toujours "
"prévisibles. Les collisions peuvent aussi prendre plus qu'une trame pour "
"être résolues, donc quelques collisions peuvent sembler être un petit peu "
"déplacées. Ces problèmes peuvent être résolus, mais demandent un certain "
"niveau de compétence."

msgid ""
"A **kinematic character controller** is assumed to always begin in a non-"
"colliding state, and will always move to a non-colliding state. If it starts "
"in a colliding state, it will try to free itself like rigid bodies do, but "
"this is the exception, not the rule. This makes their control and motion a "
"lot more predictable and easier to program. However, as a downside, they "
"can't directly interact with other physics objects, unless done by hand in "
"code."
msgstr ""
"Un **contrôleur de personnage cinématique** est toujours considéré comme "
"commençant dans un état sans collision, et va toujours aller vers un état "
"sans collision. S'il commence dans un état de collision, il essaiera de se "
"libérer tout seul comme les corps rigides le font, mais c'est une exception, "
"pas la règle. Cela fait que leur contrôle et leur mouvement sont beaucoup "
"plus prévisibles et plus faciles à programmer. Par contre, l'inconvénient "
"est qu'ils ne peuvent pas interagir directement avec les autres objets "
"physiques, à moins que cela ne soit fait à la main dans le code."

msgid "Physics process"
msgstr "Processus physique"

msgid ""
"To manage the logic of a kinematic body or character, it is always advised "
"to use physics process, because it's called before physics step and its "
"execution is in sync with physics server, also it is called the same amount "
"of times per second, always. This makes physics and motion calculation work "
"in a more predictable way than using regular process, which might have "
"spikes or lose precision if the frame rate is too high or too low."
msgstr ""
"Pour gérer la logique d'un corps ou d'un personnage cinématique, il est "
"toujours conseillé d'utiliser le processus physique, car il est appelé avant "
"l'étape physique et son exécution est synchronisée avec le serveur physique, "
"il est aussi appelé le même nombre de fois par seconde, toujours. Cela rend "
"la physique et le calcul de mouvement plus prévisibles que l'utilisation du "
"processus régulier, qui peut avoir des pics ou perdre en précision si la "
"fréquence d'images est trop élevée ou trop faible."

msgid "Scene setup"
msgstr "Configuration de la scène"

msgid ""
"You'll notice that there's a warning icon next to our CollisionShape2D node; "
"that's because we haven't defined a shape for it. Create a new CircleShape2D "
"in the shape property of CollisionShape2D. Click on <CircleShape2D> to go to "
"the options for it, and set the radius to 30:"
msgstr ""
"Vous remarquerez qu'il y a une icône d'avertissement à côté de notre nœud "
"CollisionShape2D ; c'est parce que nous n'avons pas défini de forme pour "
"lui. Créez un nouveau CircleShape2D dans la propriété de forme de "
"CollisionShape2D. Cliquez sur <CircleShape2D> pour accéder aux options "
"correspondantes, et réglez le rayon sur 30 :"

msgid ""
"**Note: As mentioned before in the physics tutorial, the physics engine "
"can't handle scale on most types of shapes (only collision polygons, planes "
"and segments work), so always change the parameters (such as radius) of the "
"shape instead of scaling it. The same is also true for the kinematic/rigid/"
"static bodies themselves, as their scale affects the shape scale.**"
msgstr ""
"**Note : Comme mentionné précédemment dans le tutoriel sur la physique, le "
"moteur physique ne peut pas gérer l'échelle sur la plupart des types de "
"formes (seuls les polygones de collision, les plans et les segments "
"fonctionnent), donc changez toujours les paramètres (comme le rayon) de la "
"forme au lieu de l'échelle. Il en va de même pour les corps cinématiques/"
"rigides/statiques eux-mêmes, car leur échelle affecte l'échelle des formes.**"

msgid ""
"Now, create a script for the character, the one used as an example above "
"should work as a base."
msgstr ""
"Maintenant, créez un script pour le personnage, celui utilisé comme exemple "
"ci-dessus devrait servir de base."

msgid ""
"Finally, instance that character scene in the tilemap, and make the map "
"scene the main one, so it runs when pressing play."
msgstr ""
"Enfin, instanciez cette scène personnage dans la tilemap, et faites de la "
"tilemap la scène principale, de sorte qu'elle s'exécute lorsque vous appuyez "
"sur play."

msgid "Moving the kinematic character"
msgstr "Déplacer le personnage cinématique"

msgid "So, let's move our sprite downwards until it hits the floor:"
msgstr "Déplaçons notre sprite vers le bas jusqu'à ce qu'il touche le sol :"

msgid ""
"The result is that the character will move, but stop right when hitting the "
"floor. Pretty cool, huh?"
msgstr ""
"Il en résulte que le personnage bouge, mais s'arrête pile lorsqu'il touche "
"le sol. Plutôt cool, hein ?"

msgid ""
"The next step will be adding gravity to the mix, this way it behaves a "
"little more like a regular game character:"
msgstr ""
"La prochaine étape sera d'ajouter de la gravité au mélange, de cette façon "
"il se comporte un peu plus comme un personnage de jeu ordinaire :"

msgid ""
"Now the character falls smoothly. Let's make it walk to the sides, left and "
"right when touching the directional keys. Remember that the values being "
"used (for speed at least) are pixels/second."
msgstr ""
"Maintenant, que le personnage tombe en douceur. Faisons-le marcher sur les "
"côtés, à gauche et à droite en touchant les touches directionnelles. "
"Rappelez-vous que les valeurs utilisées (pour la vitesse au moins) sont en "
"pixels/seconde."

msgid "And give it a try."
msgstr "Et essayez-le."

msgid ""
"This is a good starting point for a platformer. A more complete demo can be "
"found in the demo zip distributed with the engine, or in the https://github."
"com/godotengine/godot-demo-projects/tree/master/2d/kinematic_character."
msgstr ""
"C'est un bon point de départ pour un plateformer. Une démo plus complète se "
"trouve dans le zip de démonstration distribué avec le moteur, ou sur le site "
"https://github.com/godotengine/godot-demo-projects/tree/master/2d/"
"kinematic_character."

msgid "Translation status"
msgstr "État de la traduction"
