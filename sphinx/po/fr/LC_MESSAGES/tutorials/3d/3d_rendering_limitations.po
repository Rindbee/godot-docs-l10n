#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "3D rendering limitations"
msgstr "Limitations du rendu 3D"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"Due to their focus on performance, real-time rendering engines have many "
"limitations. Godot's renderer is no exception. To work effectively with "
"those limitations, you need to understand them."
msgstr ""
"En raison de l'importance qu'ils accordent aux performances, les moteurs de "
"rendu en temps réel présentent de nombreuses limites. Le moteur de rendu de "
"Godot ne fait pas exception à la règle. Pour fonctionner efficacement avec "
"ces limitations, vous devez les comprendre."

msgid "Texture size limits"
msgstr "Limites de taille des textures"

msgid ""
"On desktops and laptops, textures larger than 8192×8192 may not be supported "
"on older devices. You can check your target GPU's limitations on `GPUinfo."
"org <https://www.gpuinfo.org/>`__."
msgstr ""
"Sur les ordinateurs de bureau et les ordinateurs portables, les textures "
"supérieures à 8192×8192 peuvent ne pas être prises en charge sur les anciens "
"appareils. Vous pouvez vérifier les limitations de votre GPU cible sur "
"`GPUinfo.org <https://www.gpuinfo.org/>`__."

msgid ""
"Mobile GPUs are typically limited to 4096×4096 textures. Also, some mobile "
"GPUs don't support repeating non-power-of-two-sized textures. Therefore, if "
"you want your texture to display correctly on all platforms, you should "
"avoid using textures larger than 4096×4096 and use a power of two size if "
"the texture needs to repeat."
msgstr ""
"Les GPU mobiles sont généralement limités à des textures 4096 × 4096. De "
"plus, certains GPU mobiles ne prennent pas en charge la répétition de "
"textures de taille différente de la puissance de deux. Par conséquent, si "
"vous souhaitez que votre texture s'affiche correctement sur toutes les "
"plates-formes, vous devez éviter d'utiliser des textures supérieures à 4096 "
"× 4096 et utiliser une puissance de deux de tailles si la texture doit se "
"répéter."

msgid "Color banding"
msgstr "Bandes de couleur"

msgid "There are two main ways to alleviate banding:"
msgstr ""
"Il y a deux façons principales de réduire l'effet de postérisation HDR :"

msgid "Depth buffer precision"
msgstr "Précision du tampon de profondeur"

msgid ""
"To sort objects in 3D space, rendering engines rely on a *depth buffer* "
"(also called *Z-buffer*). This buffer has a finite precision: 24-bit on "
"desktop platforms, sometimes 16-bit on mobile platforms (for performance "
"reasons). If two different objects end up on the same buffer value, then Z-"
"fighting will occur. This will materialize as textures flickering back and "
"forth as the camera moves or rotates."
msgstr ""
"Pour trier les objets dans l'espace 3D, les moteurs de rendu s'appuient sur "
"un *tampon de profondeur* (aussi appelé *Z-tampon*). Ce tampon a une "
"précision finie : 24 bits sur les plateformes de bureau, parfois 16 bits sur "
"les plateformes mobiles (pour des raisons de performances). Si deux objets "
"différents se retrouvent sur la même valeur de tampon, il y a alors combat "
"en Z. Cela se matérialisera sous la forme de textures vacillant d'avant en "
"arrière lorsque la caméra se déplace ou tourne."

msgid ""
"To make the depth buffer more precise over the rendered area, you should "
"*increase* the Camera node's **Near** property. However, be careful: if you "
"set it too high, players will be able to see through nearby geometry. You "
"should also *decrease* the Camera node's **Far** property to the lowest "
"permissible value for your use case, though keep in mind it won't impact "
"precision as much as the **Near** property."
msgstr ""
"Pour rendre le tampon de profondeur plus précis sur la zone rendue, vous "
"devez *augmenter* la propriété **Near** du nœud Camera. Attention "
"toutefois : si vous la réglez trop haut, les joueurs pourront voir à travers "
"la géométrie proche. Vous devez également *réduire* la propriété **Far** du "
"nœud Camera à la valeur la plus basse autorisée pour votre cas "
"d'utilisation, mais gardez à l'esprit qu'elle n'aura pas un impact aussi "
"important sur la précision que la propriété **Near**."

msgid ""
"If you only need high precision when the player can see far away, you could "
"change it dynamically based on the game conditions. For instance, if the "
"player enters an airplane, the **Near** property can be temporarily "
"increased to avoid Z-fighting in the distance. It can then be decreased once "
"the player leaves the airplane."
msgstr ""
"Si vous n'avez besoin d'une grande précision que lorsque le joueur peut voir "
"au loin, vous pouvez la modifier dynamiquement en fonction des conditions de "
"jeu. Par exemple, si le joueur entre dans un avion, la propriété **Near** "
"peut être temporairement augmentée pour éviter les combats en Z au loin. "
"Elle peut ensuite être diminuée une fois que le joueur a quitté l'avion."

msgid ""
"Depending on the scene and viewing conditions, you may also be able to move "
"the Z-fighting objects further apart without the difference being visible to "
"the player."
msgstr ""
"Selon la scène et les conditions de visualisation, vous pouvez également "
"déplacer les objets combattant en Z plus loin sans que la différence soit "
"visible pour le joueur."

msgid "Transparency sorting"
msgstr "Tri par transparence"

msgid ""
"In Godot, transparent materials are drawn after opaque materials. "
"Transparent objects are sorted back to front before being drawn based on the "
"Node3D's position, not the vertex position in world space. Due to this, "
"overlapping objects may often be sorted out of order. To fix improperly "
"sorted objects, tweak the material's :ref:`Render Priority "
"<class_Material_property_render_priority>` property or the node's :ref:"
"`Sorting Offset <class_VisualInstance3D_property_sorting_offset>`. Render "
"Priority will force specific materials to appear in front of or behind other "
"transparent materials, while Sorting Offset will move the object forward or "
"backward for the purpose of sorting. Even then, these may not always be "
"sufficient."
msgstr ""
"Dans Godot, les matériaux transparents sont dessinés après les matériaux "
"opaques. Les objets transparents sont triés de l'arrière vers l'avant, avant "
"d'être dessinés en fonction de la position du Node3D, et non de la position "
"du sommet dans le plan du monde. De ce fait, les objets qui se chevauchent "
"peuvent souvent être triés dans le désordre. Pour corriger les objets mal "
"triés, modifiez la propriété :ref:`Render Priority "
"<class_Material_property_render_priority>` du matériau ou le :ref:`Sorting "
"Offset <class_VisualInstance3D_property_sorting_offset>` du nœud. La Render "
"Priority obligera les matériaux spécifiques à apparaître devant ou derrière "
"d'autres matériaux transparents, alors que le Sorting Offset va déplacer des "
"objets devant ou derrière durant le tri. Malgré tout, cela n'est pas "
"toujours suffisant."

msgid ""
"Some rendering engines feature *order-independent transparency* techniques "
"to alleviate this, but this is costly on the GPU. Godot currently doesn't "
"provide this feature. There are still several ways to avoid this problem:"
msgstr ""
"Certains moteurs de rendu proposent des techniques de transparence "
"*indépendantes de l'ordre* pour pallier ce problème, mais cela est coûteux "
"pour le GPU. Godot ne fournit pas cette fonctionnalité actuellement. Il y a "
"encore plusieurs façons d'éviter ce problème :"
