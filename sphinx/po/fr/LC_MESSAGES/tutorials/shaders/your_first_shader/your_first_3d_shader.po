#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 3D shader"
msgstr "Votre premier shader 3D"

msgid ""
"This tutorial will explain how to write a Spatial shader and will cover more "
"topics than the :ref:`CanvasItem <doc_your_first_canvasitem_shader>` "
"tutorial."
msgstr ""
"Ce tutoriel explique comment écrire un shader spatial et couvre plus de "
"sujets que le tutoriel :ref:`CanvasItem "
"<doc_votre_premier_shader_canvasitem>`."

msgid ""
"Spatial shaders have more built-in functionality than CanvasItem shaders. "
"The expectation with spatial shaders is that Godot has already provided the "
"functionality for common use cases and all the user needs to do in the "
"shader is set the proper parameters. This is especially true for a PBR "
"(physically based rendering) workflow."
msgstr ""
"Les shaders spatiaux ont plus de fonctionnalités intégrées que les shaders "
"CanvasItem. On s'attend à ce que les shaders spatiaux offrent déjà les "
"fonctionnalités nécessaires pour les cas d'utilisation courants et que "
"l'utilisateur n'ait qu'à définir les paramètres appropriés dans le shader. "
"C'est particulièrement vrai pour un flux de travail PBR (rendu basé "
"physiquement)."

msgid ""
"This tutorial assumes some basic shader knowledge such as types (``vec2``, "
"``float``, ``sampler2D``), and functions. If you are uncomfortable with "
"these concepts it is best to get a gentle introduction from `The Book of "
"Shaders <https://thebookofshaders.com>`_ before completing this tutorial."
msgstr ""
"Ce tutoriel suppose quelques connaissances de base sur les shaders, telles "
"que les types (``vec2``, ``float``, ``sampler2D``), et les fonctions. Si "
"vous n'êtes pas à l'aise avec ces concepts, il est préférable d'avoir une "
"douce introduction avec `The Book of Shaders <https://thebookofshaders."
"com>`_ avant de faire ce tutoriel."

msgid "Where to assign my material"
msgstr "Où assigner mon matériel"

msgid ""
"In 3D, objects are drawn using :ref:`Meshes <class_Mesh>`. Meshes are a "
"resource type that store geometry (the shape of your object) and materials "
"(the color and how the object reacts to light) in units called \"surfaces\". "
"A Mesh can have multiple surfaces, or just one. Typically, you would import "
"a mesh from another program (e.g. Blender). But Godot also has a few :ref:"
"`PrimitiveMeshes <class_primitivemesh>` that allow you to add basic geometry "
"to a scene without importing Meshes."
msgstr ""
"En 3D, les objets sont dessinés en utilisant des :ref:`Maillages "
"<class_Mesh>`. Les Maillages sont un type de ressource qui stocke la "
"géométrie (la forme de votre objet) et les matériaux (la couleur et la façon "
"dont l'objet réagit à la lumière) dans des unités appelées \"surfaces\". Un "
"Maillage peut avoir plusieurs surfaces, ou une seule. En général, vous "
"importerez un Maillage d'un autre programme (par exemple Blender). Mais "
"Godot a aussi quelques :ref:`PrimitiveMeshes <class_primitivemesh>` qui "
"permettent d'ajouter une géométrie de base à une scène sans importer de "
"Maillages."

msgid "Setting up"
msgstr "Mise en place"

msgid ""
"In the inspector tab beside \"Mesh\" click \"[empty]\" and select \"New "
"PlaneMesh\". Then click on the image of a plane that appears."
msgstr ""
"Dans l'onglet inspecteur à côté de \"Mesh\", cliquez sur \"[empty]\" et "
"sélectionnez \"New PlaneMesh\". Cliquez ensuite sur l'image d'un plan qui "
"apparaît."

msgid "This adds a :ref:`PlaneMesh <class_planemesh>` to our scene."
msgstr "Cela ajoute un :ref:`PlaneMesh <class_planemesh>` à notre scène."

msgid ""
"Then, in the viewport, click in the upper left corner on the button that "
"says \"Perspective\". A menu will appear. In the middle of the menu are "
"options for how to display the scene. Select 'Display Wireframe'."
msgstr ""
"Ensuite, dans le viewport, cliquez dans le coin supérieur gauche sur le "
"bouton \"Perspective\". Un menu apparaîtra. Au milieu du menu se trouvent "
"des options sur la façon d'afficher la scène. Sélectionnez 'Affichage en fil "
"de fer'."

msgid "This will allow you to see the triangles making up the plane."
msgstr "Cela vous permettra de voir les triangles qui composent le plan."

msgid ""
"Now click beside \"Shader\" where it says \"[empty]\" and select \"New "
"Shader\"."
msgstr ""
"Cliquez maintenant à côté de \"Shader\" où il est écrit \"[empty]\" et "
"sélectionnez \"New Shader\"."

msgid ""
"The shader editor should now pop up and you are ready to begin writing your "
"first Spatial shader!"
msgstr ""
"L'éditeur de shader devrait maintenant afficher un pop up et vous êtes "
"maintenant prêt à commencer à écrire votre premier shader Spatial !"

msgid "Shader magic"
msgstr "La magie des Shaders"

msgid "We define the vertex shader like so:"
msgstr "Nous définissons ainsi le shader de vertex :"

msgid ""
"With nothing in the ``vertex()`` function, Godot will use its default vertex "
"shader. We can easily start to make changes by adding a single line:"
msgstr ""
"Sans rien dans la fonction ``vertex()``, Godot utilisera son shader de "
"vertex par défaut. Nous pouvons facilement commencer à apporter des "
"changements en ajoutant une seule ligne :"

msgid "Adding this line, you should get an image like the one below."
msgstr ""
"En ajoutant cette ligne, vous devriez obtenir une image comme celle ci-"
"dessous."

msgid ""
"Okay, let's unpack this. The ``y`` value of the ``VERTEX`` is being "
"increased. And we are passing the ``x`` and ``z`` components of the "
"``VERTEX`` as arguments to ``cos`` and ``sin``; that gives us a wave-like "
"appearance across the ``x`` and ``z`` axes."
msgstr ""
"Bon, déballons tout ça. La valeur ``y`` de ``VERTEX`` est augmentée. Et nous "
"passons les composantes ``x`` et ``z`` de ``VERTEX`` comme arguments à "
"``cos`` et ``sin`` ; cela nous donne une apparence ondulée sur les axes "
"``x`` et ``z``."

msgid ""
"What we want to achieve is the look of little hills; after all. ``cos`` and "
"``sin`` already look kind of like hills. We do so by scaling the inputs to "
"the ``cos`` and ``sin`` functions."
msgstr ""
"Ce que nous voulons obtenir, c'est l'aspect de petites collines ; après "
"tout. Les ``cos`` et les ``sin`` ressemblent déjà à des collines. Nous le "
"faisons en mettant les entrées à l'échelle des fonctions ``cos`` et ``sin``."

msgid ""
"This looks better, but it is still too spiky and repetitive, let's make it a "
"little more interesting."
msgstr ""
"Cela semble mieux, mais c'est encore trop pointu et répétitif, rendons-le un "
"peu plus intéressant."

msgid "Noise heightmap"
msgstr "Heightmap bruit"

msgid ""
"Noise is a very popular tool for faking the look of terrain. Think of it as "
"similar to the cosine function where you have repeating hills except, with "
"noise, each hill has a different height."
msgstr ""
"Le bruit est un outil très populaire pour simuler l'aspect du terrain. "
"Pensez-y comme à la fonction cosinus où vous avez des collines répétitives, "
"sauf que, avec le bruit, chaque colline a une hauteur différente."

msgid ""
"To access a texture in a shader add the following code near the top of your "
"shader, outside the ``vertex()`` function."
msgstr ""
"Pour accéder à une texture dans un shader, ajoutez le code suivant près du "
"haut de votre shader, en dehors de la fonction ``vertex()``."

msgid ""
"This will allow you to send a noise texture to the shader. Now look in the "
"inspector under your material. You should see a section called \"Shader "
"Params\". If you open it up, you'll see a section called \"noise\"."
msgstr ""
"Cela vous permettra d'envoyer une texture de bruit au shader. Regardez "
"maintenant dans l'inspecteur sous votre matériau. Vous devriez voir une "
"section appelée \"Shader Params\". Si vous l’ouvrez, vous verrez une section "
"appelée \"noise\"."

msgid "Once you set it up and should look like this."
msgstr "Une fois que vous l'aurez configuré et il devrait ressembler à ceci."

msgid ""
"Note: ``xyzw`` is the same as ``rgba`` in GLSL, so instead of ``texture()."
"x`` above, we could use ``texture().r``. See the `OpenGL documentation "
"<https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ for more "
"details."
msgstr ""
"Note : ``xyzw`` est le même que ``rgba`` dans GLSL, donc au lieu de "
"``texture().x`` ci-dessus, nous pourrions utiliser ``texture().r``. Voir la "
"documentation `OpenGL <https://www.khronos.org/opengl/wiki/"
"Data_Type_(GLSL)#Vectors>`_ pour plus de détails."

msgid "Using this code you can see the texture creates random looking hills."
msgstr ""
"En utilisant ce code, vous pouvez voir que la texture crée des collines "
"d'apparence aléatoire."

msgid ""
"Right now it is too spiky, we want to soften the hills a bit. To do that, we "
"will use a uniform. You already used a uniform above to pass in the noise "
"texture, now let's learn how they work."
msgstr ""
"Actuellement, c'est trop pointu, nous voulons adoucir un peu les collines. "
"Pour ce faire, nous utiliserons un uniform. Vous avez déjà utilisé un "
"uniform ci-dessus pour transmettre la texture de bruit, maintenant apprenons "
"comment ils fonctionnent."

msgid "Uniforms"
msgstr "Uniforms"

msgid ""
"Uniform variables allow you to pass data from the game into the shader. They "
"are very useful for controlling shader effects. Uniforms can be almost any "
"datatype that can be used in the shader. To use a uniform, you declare it in "
"your :ref:`Shader<class_Shader>` using the keyword ``uniform``."
msgstr ""
"Les variables uniforms vous permettent de faire passer les données du jeu "
"dans le shader. Elles sont très utiles pour contrôler les effets du shader. "
"Les uniforms peuvent être presque tous les types de données qui peuvent être "
"utilisés dans le shader. Pour utiliser un uniform, vous devez le déclarer "
"dans votre :ref:`Shader<class_Shader>` en utilisant le mot-clé ``uniform``."

msgid "Let's make a uniform that changes the height of the terrain."
msgstr "Faisons un uniform qui change la hauteur du terrain."

msgid "Now it looks much better."
msgstr "Maintenant, ça a l'air beaucoup mieux."

msgid "Interacting with light"
msgstr "Interagir avec la lumière"

msgid ""
"First, turn wireframe off. To do so, click in the upper-left of the Viewport "
"again, where it says \"Perspective\", and select \"Display Normal\"."
msgstr ""
"Tout d'abord, désactiver l'affichage en fil de fer. Pour ce faire, cliquez à "
"nouveau en haut à gauche de la fenêtre de visualisation, où il est indiqué "
"\"Perspective\", et sélectionnez \"Affichage normal\"."

msgid ""
"Note how the mesh color goes flat. This is because the lighting on it is "
"flat. Let's add a light!"
msgstr ""
"Remarquez comment la couleur du maillage est plate. Cela s'explique par le "
"fait que son éclairage est plat. Ajoutons une lumière !"

msgid ""
"You can see the light affecting the terrain, but it looks odd. The problem "
"is the light is affecting the terrain as if it were a flat plane. This is "
"because the light shader uses the normals from the :ref:`Mesh <class_mesh>` "
"to calculate light."
msgstr ""
"Vous pouvez voir la lumière qui affecte le terrain, mais elle semble "
"étrange. Le problème est que la lumière affecte le terrain comme s'il "
"s'agissait d'un plan plat. C'est parce que le shader de lumière utilise les "
"normales du :ref:`Mesh <class_mesh>` pour calculer la lumière."

msgid ""
"The normals are stored in the Mesh, but we are changing the shape of the "
"Mesh in the shader, so the normals are no longer correct. To fix this, we "
"can recalculate the normals in the shader or use a normal texture that "
"corresponds to our noise. Godot makes both easy for us."
msgstr ""
"Les normales sont stockées dans le Mesh, mais nous changeons la forme du "
"Mesh dans le shader, donc les normales ne sont plus correctes. Pour y "
"remédier, nous pouvons recalculer les normales dans le shader ou utiliser "
"une texture de normales qui correspond à notre bruit. Godot nous facilite "
"les deux possibilités."

msgid ""
"You can calculate the new normal manually in the vertex function and then "
"just set ``NORMAL``. With ``NORMAL`` set, Godot will do all the difficult "
"lighting calculations for us. We will cover this method in the next part of "
"this tutorial, for now we will read normals from a texture."
msgstr ""
"Vous pouvez calculer la nouvelle normale manuellement dans la fonction "
"vertex et ensuite simplement définir ``NORMAL``. Avec ``NORMAL`` défini, "
"Godot fera pour nous les calculs d'éclairage complexes. Nous aborderons "
"cette méthode dans la prochaine partie de ce tutoriel, pour l'instant nous "
"allons lire les normales à partir d'une texture."

msgid ""
"Instead we will rely on the NoiseTexture again to calculate normals for us. "
"We do that by passing in a second noise texture."
msgstr ""
"Au lieu de cela, nous nous fierons à nouveau au NoiseTexture pour calculer "
"les normales pour nous. Nous le faisons en passant une deuxième texture de "
"bruit."

msgid ""
"Now, because this is a normalmap and not a per-vertex normal, we are going "
"to assign it in the ``fragment()`` function. The ``fragment()`` function "
"will be explained in more detail in the next part of this tutorial."
msgstr ""
"Maintenant, comme il s'agit d'une normalmap et non de normale par sommet, "
"nous allons l'assigner à la fonction ``fragment()``. Cette fonction "
"``fragment()`` sera expliquée plus en détail dans la prochaine partie de ce "
"tutoriel."

msgid ""
"Lastly, in order to ensure that we are reading from the same places on the "
"noise texture and the normalmap texture, we are going to pass the ``VERTEX."
"xz`` position from the ``vertex()`` function to the ``fragment()`` function. "
"We do that with varyings."
msgstr ""
"Enfin, afin de s'assurer que nous lisons aux mêmes endroits sur la texture "
"de bruit et sur la texture de la normalmap, nous allons passer la position "
"``VERTEX.xz`` de la fonction ``vertex()`` à la fonction ``fragment()``. Nous "
"le faisons avec des varyings."

msgid ""
"Above the ``vertex()`` define a ``vec2`` called ``tex_position``. And inside "
"the ``vertex()`` function assign ``VERTEX.xz`` to ``tex_position``."
msgstr ""
"Au-dessus de ``vertex()`` définissez un ``vec2`` appelé ``tex_position``. Et "
"à l'intérieur de la fonction ``vertex()`` assignez ``VERTEX.xz`` à "
"``tex_position``."

msgid ""
"And now we can access ``tex_position`` from the ``fragment()`` function."
msgstr ""
"Et maintenant nous avons accès à ``tex_position`` depuis la fonction "
"``fragment()``."

msgid ""
"With the normals in place the light now reacts to the height of the mesh "
"dynamically."
msgstr ""
"Avec les normales en place, la lumière réagit maintenant dynamiquement à la "
"hauteur du maillage."

msgid ""
"We can even drag the light around and the lighting will update automatically."
msgstr ""
"Nous pouvons même faire glisser la lumière et l'éclairage se mettra "
"automatiquement à jour."

msgid ""
"Here is the full code for this tutorial. You can see it is not very long as "
"Godot handles most of the difficult stuff for you."
msgstr ""
"Voici le code complet pour ce tutoriel. Vous pouvez voir que ce n'est pas "
"très long car Godot s'occupe de la plupart des choses difficiles pour vous."

msgid ""
"That is everything for this part. Hopefully, you now understand the basics "
"of vertex shaders in Godot. In the next part of this tutorial we will write "
"a fragment function to accompany this vertex function and we will cover a "
"more advanced technique to turn this terrain into an ocean of moving waves."
msgstr ""
"C'est tout pour cette partie. Espérons que vous comprenez maintenant les "
"bases des shaders de vertex dans Godot. Dans la prochaine partie de ce "
"tutoriel, nous allons écrire une fonction de fragment pour accompagner cette "
"fonction de vertex et nous allons couvrir une technique plus avancée pour "
"transformer ce terrain en un océan de vagues en mouvement."

msgid "Translation status"
msgstr "État de la traduction"
