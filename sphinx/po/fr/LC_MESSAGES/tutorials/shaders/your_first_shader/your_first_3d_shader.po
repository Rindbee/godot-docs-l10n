#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Your first 3D shader"
msgstr "Votre premier shader 3D"

msgid ""
"You have decided to start writing your own custom Spatial shader. Maybe you "
"saw a cool trick online that was done with shaders, or you have found that "
"the :ref:`StandardMaterial3D <class_StandardMaterial3D>` isn't quite meeting "
"your needs. Either way, you have decided to write your own and now you need "
"to figure out where to start."
msgstr ""
"Vous avez décidé de commencer à écrire votre propre shader Spatial "
"personnalisé. Vous avez peut-être vu un truc sympa en ligne qui a été "
"réalisé avec des shaders, ou alors vous avez trouvé que "
"le :ref:`StandardMaterial3D<class_StandardMaterial3D>` ne répond pas tout à "
"fait à vos besoins. Quoi qu'il en soit, vous avez décidé d'écrire le votre "
"et vous devez maintenant trouver par où commencer."

msgid ""
"This tutorial will explain how to write a Spatial shader and will cover more "
"topics than the :ref:`CanvasItem <doc_your_first_canvasitem_shader>` "
"tutorial."
msgstr ""
"Ce tutoriel explique comment écrire un shader spatial et couvre plus de "
"sujets que le tutoriel :ref:`CanvasItem <doc_your_first_canvasitem_shader>`."

msgid ""
"Spatial shaders have more built-in functionality than CanvasItem shaders. "
"The expectation with spatial shaders is that Godot has already provided the "
"functionality for common use cases and all the user needs to do in the "
"shader is set the proper parameters. This is especially true for a PBR "
"(physically based rendering) workflow."
msgstr ""
"Les shaders spatiaux ont plus de fonctionnalités intégrées que les shaders "
"CanvasItem. On s'attend à ce que les shaders spatiaux offrent déjà les "
"fonctionnalités nécessaires pour les cas d'utilisation courants et que "
"l'utilisateur n'ait qu'à définir les paramètres appropriés dans le shader. "
"C'est particulièrement vrai pour un flux de travail PBR (rendu basé "
"physiquement)."

msgid ""
"This is a two-part tutorial. In this first part we will create terrain using "
"vertex displacement from a heightmap in the vertex function. In "
"the :ref:`second part <doc_your_second_spatial_shader>` we will take the "
"concepts from this tutorial and set up custom materials in a fragment shader "
"by writing an ocean water shader."
msgstr ""
"Il s'agit d'un tutoriel en deux parties. Dans cette première partie, nous "
"allons voir comment réaliser un terrain simple en utilisant le déplacement "
"des vertex à partir d'une heightmap dans la fonction vertex. Dans "
"la :ref:`seconde partie <doc_your_second_spatial_shader>` nous allons "
"reprendre les concepts de ce tutoriel et montrer comment mettre en place des "
"matériaux personnalisés dans un fragment shader en écrivant un shader d'eau "
"de mer."

msgid ""
"This tutorial assumes some basic shader knowledge such as types (``vec2``, "
"``float``, ``sampler2D``), and functions. If you are uncomfortable with "
"these concepts it is best to get a gentle introduction from `The Book of "
"Shaders <https://thebookofshaders.com>`_ before completing this tutorial."
msgstr ""
"Ce tutoriel suppose quelques connaissances de base sur les shaders, telles "
"que les types (``vec2``, ``float``, ``sampler2D``), et les fonctions. Si "
"vous n'êtes pas à l'aise avec ces concepts, il est préférable d'avoir une "
"douce introduction avec `The Book of Shaders <https://"
"thebookofshaders.com>`_ avant de faire ce tutoriel."

msgid "Where to assign my material"
msgstr "Où assigner mon matériel"

msgid ""
"In 3D, objects are drawn using :ref:`Meshes <class_Mesh>`. Meshes are a "
"resource type that store geometry (the shape of your object) and materials "
"(the color and how the object reacts to light) in units called \"surfaces\". "
"A Mesh can have multiple surfaces, or just one. Typically, you would import "
"a mesh from another program (e.g. Blender). But Godot also has a "
"few :ref:`PrimitiveMeshes <class_primitivemesh>` that allow you to add basic "
"geometry to a scene without importing Meshes."
msgstr ""
"En 3D, les objets sont dessinés en utilisant des :ref:`Maillages "
"<class_Mesh>`. Les Maillages sont un type de ressource qui stocke la "
"géométrie (la forme de votre objet) et les matériaux (la couleur et la façon "
"dont l'objet réagit à la lumière) dans des unités appelées \"surfaces\". Un "
"Maillage peut avoir plusieurs surfaces, ou une seule. En général, vous "
"importerez un Maillage d'un autre programme (par exemple Blender). Mais "
"Godot a aussi quelques :ref:`PrimitiveMeshes <class_primitivemesh>` qui "
"permettent d'ajouter une géométrie de base à une scène sans importer de "
"Maillages."

msgid ""
"There are multiple node types that you can use to draw a mesh. The main one "
"is :ref:`MeshInstance3D <class_MeshInstance3D>`, but you can also "
"use :ref:`GPUParticles3D <class_GPUParticles3D>`, :ref:`MultiMeshes "
"<class_MultiMesh>` (with a :ref:`MultiMeshInstance3D "
"<class_MultiMeshInstance3D>`), or others."
msgstr ""
"Il existe plusieurs types de nœuds que vous pouvez utiliser pour dessiner un "
"maillage. La principale est :ref:`MeshInstance3D <class_MeshInstance3D>`, "
"mais vous pouvez aussi utiliser :ref:`Particules "
"<class_GPUParticles3D>`, :ref:`MultiMesh <class_MultiMesh>` (avec "
"un :ref:`MultiMeshInstance3D <class_MultiMeshInstance3D>`), ou d'autres."

msgid ""
"Typically, a material is associated with a given surface in a mesh, but some "
"nodes, like MeshInstance3D, allow you to override the material for a "
"specific surface, or for all surfaces."
msgstr ""
"En général, un matériau est associé à une surface donnée dans un maillage, "
"mais certains nœuds, comme MeshInstance3D, vous permettent d'outrepasser le "
"matériau pour une surface spécifique, ou pour toutes les surfaces."

msgid ""
"If you set a material on the surface or mesh itself, then all "
"MeshInstance3Ds that share that mesh will share that material. However, if "
"you want to reuse the same mesh across multiple mesh instances, but have "
"different materials for each instance then you should set the material on "
"the MeshInstance3D."
msgstr ""
"Si vous placez un matériau sur la surface ou sur le maillage lui-même, alors "
"toutes les MeshInstance3D qui partagent ce maillage partageront ce matériau. "
"Toutefois, si vous souhaitez réutiliser le même maillage dans plusieurs "
"instances de maillage, mais que vous avez des matériaux différents pour "
"chaque instance, vous devez alors définir le matériau sur la MeshInstance3D."

msgid ""
"For this tutorial we will set our material on the mesh itself rather than "
"taking advantage of the MeshInstance3D's ability to override materials."
msgstr ""
"Pour ce tutoriel, nous allons placer notre matériau sur le maillage lui-même "
"plutôt que de profiter de la capacité du MeshInstance3D à passer outre les "
"matériaux."

msgid "Setting up"
msgstr "Mise en place"

msgid ""
"Add a new :ref:`MeshInstance3D <class_MeshInstance3D>` node to your scene."
msgstr ""
"Ajoutez un nouveau nœud :ref:`MeshInstance3D <class_MeshInstance3D>` à votre "
"scène."

msgid "This adds a plane to our scene."
msgstr "Cela ajoute un plan à notre scène."

msgid "This will allow you to see the triangles making up the plane."
msgstr "Cela vous permettra de voir les triangles qui composent le plan."

msgid ""
"You can see that there are now many more triangles in "
"the :ref:`MeshInstance3D<class_MeshInstance3D>`. This will give us more "
"vertices to work with and thus allow us to add more detail."
msgstr ""
"Vous pouvez voir qu'il y a maintenant beaucoup plus de triangles dans "
"la :ref:`MeshInstance3D<class_MeshInstance3D>`. Cela nous permettra de "
"travailler avec plus de sommets et donc d'ajouter plus de détails."

msgid "Shader magic"
msgstr "La magie des Shaders"

msgid "Adding this line, you should get an image like the one below."
msgstr ""
"En ajoutant cette ligne, vous devriez obtenir une image comme celle ci-"
"dessous."

msgid ""
"Okay, let's unpack this. The ``y`` value of the ``VERTEX`` is being "
"increased. And we are passing the ``x`` and ``z`` components of the "
"``VERTEX`` as arguments to :ref:`cos() <shader_func_cos>` and :ref:`sin() "
"<shader_func_sin>`; that gives us a wave-like appearance across the ``x`` "
"and ``z`` axes."
msgstr ""
"Bon, déballons tout ça. La valeur ``y`` de ``VERTEX`` est augmentée. Et nous "
"passons les composantes ``x`` et ``z`` de ``VERTEX`` comme arguments "
"à :ref:`cos() <shader_func_cos>` et :ref:`sin() <shader_func_sin>` ; cela "
"nous donne une apparence ondulée sur les axes ``x`` et ``z``."

msgid ""
"This looks better, but it is still too spiky and repetitive, let's make it a "
"little more interesting."
msgstr ""
"Cela semble mieux, mais c'est encore trop pointu et répétitif, rendons-le un "
"peu plus intéressant."

msgid "Noise heightmap"
msgstr "Heightmap bruit"

msgid ""
"Noise is a very popular tool for faking the look of terrain. Think of it as "
"similar to the cosine function where you have repeating hills except, with "
"noise, each hill has a different height."
msgstr ""
"Le bruit est un outil très populaire pour simuler l'aspect du terrain. "
"Pensez-y comme à la fonction cosinus où vous avez des collines répétitives, "
"sauf que, avec le bruit, chaque colline a une hauteur différente."

msgid ""
"Godot provides the :ref:`NoiseTexture2D <class_noisetexture2D>` resource for "
"generating a noise texture that can be accessed from a shader."
msgstr ""
"Godot fournit la ressource :ref:`NoiseTexture2D <class_noisetexture2D>` pour "
"générer une texture de bruit accessible depuis un shader."

msgid ""
"To access a texture in a shader add the following code near the top of your "
"shader, outside the ``vertex()`` function."
msgstr ""
"Pour accéder à une texture dans un shader, ajoutez le code suivant près du "
"haut de votre shader, en dehors de la fonction ``vertex()``."

msgid "Once you set it up and should look like this."
msgstr "Une fois que vous l'aurez configuré et il devrait ressembler à ceci."

msgid "Now, access the noise texture using the ``texture()`` function:"
msgstr ""
"Maintenant, accédez à la texture de bruit en utilisant la fonction "
"``texture()`` :"

msgid ""
"``xyzw`` is the same as ``rgba`` in GLSL, so instead of ``texture().x`` "
"above, we could use ``texture().r``. See the `OpenGL documentation <https://"
"www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ for more details."
msgstr ""
"``xyzw`` est le même que ``rgba`` en GLSL, donc au lieu du ``texture().x`` "
"ci-dessus, nous pourrions utiliser ``texture().r``. Voir la documentation "
"`OpenGL <https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)#Vectors>`_ "
"pour plus de détails."

msgid "Using this code you can see the texture creates random looking hills."
msgstr ""
"En utilisant ce code, vous pouvez voir que la texture crée des collines "
"d'apparence aléatoire."

msgid ""
"Right now it is too spiky, we want to soften the hills a bit. To do that, we "
"will use a uniform. You already used a uniform above to pass in the noise "
"texture, now let's learn how they work."
msgstr ""
"Actuellement, c'est trop pointu, nous voulons adoucir un peu les collines. "
"Pour ce faire, nous utiliserons un uniform. Vous avez déjà utilisé un "
"uniform ci-dessus pour transmettre la texture de bruit, maintenant apprenons "
"comment ils fonctionnent."

msgid "Uniforms"
msgstr "Uniforms"

msgid "Let's make a uniform that changes the height of the terrain."
msgstr "Faisons un uniform qui change la hauteur du terrain."

msgid ""
"Godot lets you initialize a uniform with a value; here, ``height_scale`` is "
"set to ``0.5``. You can set uniforms from GDScript by calling the "
"function :ref:`set_shader_parameter() "
"<class_ShaderMaterial_method_set_shader_parameter>` on the material "
"corresponding to the shader. The value passed from GDScript takes precedence "
"over the value used to initialize it in the shader."
msgstr ""
"Godot vous permet d'initialiser un uniform avec une valeur ; ici, "
"``height_scale`` est fixé à ``0.5``. Vous pouvez définir des uniforms à "
"partir du GDScript en appelant la fonction :ref:`set_shader_parameter() "
"<class_ShaderMaterial_method_set_shader_parameter>` sur le matériel "
"correspondant au shader. La valeur passée depuis GDScript est prioritaire "
"sur la valeur utilisée pour l'initialiser dans le shader."

msgid ""
"Changing uniforms in Spatial-based nodes is different from CanvasItem-based "
"nodes. Here, we set the material inside the PlaneMesh resource. In other "
"mesh resources you may need to first access the material by calling "
"``surface_get_material()``. While in the MeshInstance3D you would access the "
"material using ``get_surface_material()`` or ``material_override``."
msgstr ""
"La modification des uniformes des nœuds basés sur Spatial est différente de "
"celle des nœuds basés sur CanvasItem. Ici, nous définissons le matériau à "
"l'intérieur de la ressource PlaneMesh. Dans d'autres ressources de maillage, "
"vous devrez peut-être d'abord accéder au matériau en appelant "
"``surface_get_material()``. Dans le MeshInstance3D, vous accéderez au "
"matériau à l'aide de ``get_surface_material()`` ou ``material_override``."

msgid ""
"Remember that the string passed into ``set_shader_parameter()`` must match "
"the name of the uniform variable in the shader. You can use the uniform "
"variable anywhere inside your shader. Here, we will use it to set the height "
"value instead of arbitrarily multiplying by ``0.5``."
msgstr ""
"Rappelez-vous que la chaîne passée dans ``set_shader_param()`` doit "
"correspondre au nom de la variable uniform dans le shader. Vous pouvez "
"utiliser la variable uniform n'importe où dans votre shader. Ici, nous "
"allons l'utiliser pour définir la valeur de la hauteur au lieu de la "
"multiplier arbitrairement par ``0.5``."

msgid "Now it looks much better."
msgstr "Maintenant, ça a l'air beaucoup mieux."

msgid "Interacting with light"
msgstr "Interagir avec la lumière"

msgid ""
"Note how the mesh color goes flat. This is because the lighting on it is "
"flat. Let's add a light!"
msgstr ""
"Remarquez comment la couleur du maillage est plate. Cela s'explique par le "
"fait que son éclairage est plat. Ajoutons une lumière !"

msgid ""
"First, we will add an :ref:`OmniLight3D<class_OmniLight3D>` to the scene, "
"and drag it up so it is above the terrain."
msgstr ""
"Tout d'abord, nous allons ajouter un :ref:`OmniLight3D<class_OmniLight3D>` à "
"la scène, et le tirer en l'air pour qu'il soit au dessus du terrain."

msgid ""
"You can see the light affecting the terrain, but it looks odd. The problem "
"is the light is affecting the terrain as if it were a flat plane. This is "
"because the light shader uses the normals from the :ref:`Mesh <class_mesh>` "
"to calculate light."
msgstr ""
"Vous pouvez voir la lumière qui affecte le terrain, mais elle semble "
"étrange. Le problème est que la lumière affecte le terrain comme s'il "
"s'agissait d'un plan plat. C'est parce que le shader de lumière utilise les "
"normales du :ref:`Mesh <class_mesh>` pour calculer la lumière."

msgid ""
"The normals are stored in the Mesh, but we are changing the shape of the "
"Mesh in the shader, so the normals are no longer correct. To fix this, we "
"can recalculate the normals in the shader or use a normal texture that "
"corresponds to our noise. Godot makes both easy for us."
msgstr ""
"Les normales sont stockées dans le Mesh, mais nous changeons la forme du "
"Mesh dans le shader, donc les normales ne sont plus correctes. Pour y "
"remédier, nous pouvons recalculer les normales dans le shader ou utiliser "
"une texture de normales qui correspond à notre bruit. Godot nous facilite "
"les deux possibilités."

msgid ""
"You can calculate the new normal manually in the vertex function and then "
"just set ``NORMAL``. With ``NORMAL`` set, Godot will do all the difficult "
"lighting calculations for us. We will cover this method in the next part of "
"this tutorial, for now we will read normals from a texture."
msgstr ""
"Vous pouvez calculer la nouvelle normale manuellement dans la fonction "
"vertex et ensuite simplement définir ``NORMAL``. Avec ``NORMAL`` défini, "
"Godot fera pour nous les calculs d'éclairage complexes. Nous aborderons "
"cette méthode dans la prochaine partie de ce tutoriel, pour l'instant nous "
"allons lire les normales à partir d'une texture."

msgid ""
"Instead we will rely on the NoiseTexture again to calculate normals for us. "
"We do that by passing in a second noise texture."
msgstr ""
"Au lieu de cela, nous nous fierons à nouveau au NoiseTexture pour calculer "
"les normales pour nous. Nous le faisons en passant une deuxième texture de "
"bruit."

msgid ""
"Set this second uniform texture to another :ref:`NoiseTexture2D "
"<class_noisetexture2D>` with another :ref:`FastNoiseLite "
"<class_fastnoiselite>`. But this time, check **As Normal Map**."
msgstr ""
"Réglez cette deuxième texture uniform sur une autre :ref:`NoiseTexture2D "
"<class_noisetexture2D>` avec un autre :ref:`FastNoiseLite "
"<class_fastnoiselite>`. Mais cette fois, cochez **Comme Normal map**."

msgid ""
"Lastly, in order to ensure that we are reading from the same places on the "
"noise texture and the normalmap texture, we are going to pass the "
"``VERTEX.xz`` position from the ``vertex()`` function to the ``fragment()`` "
"function. We do that using a :ref:`varying <doc_shading_language_varyings>`."
msgstr ""
"Enfin, afin de s'assurer que nous lisons aux mêmes endroits sur la texture "
"de bruit et sur la texture de la normalmap, nous allons passer la position "
"``VERTEX.xz`` de la fonction ``vertex()`` à la fonction ``fragment()``. Nous "
"le faisons avec des :ref:`varying <doc_shading_language_varyings>`."

msgid ""
"And now we can access ``tex_position`` from the ``fragment()`` function."
msgstr ""
"Et maintenant nous avons accès à ``tex_position`` depuis la fonction "
"``fragment()``."

msgid ""
"With the normals in place the light now reacts to the height of the mesh "
"dynamically."
msgstr ""
"Avec les normales en place, la lumière réagit maintenant dynamiquement à la "
"hauteur du maillage."

msgid ""
"We can even drag the light around and the lighting will update automatically."
msgstr ""
"Nous pouvons même faire glisser la lumière et l'éclairage se mettra "
"automatiquement à jour."

msgid ""
"Here is the full code for this tutorial. You can see it is not very long as "
"Godot handles most of the difficult stuff for you."
msgstr ""
"Voici le code complet pour ce tutoriel. Vous pouvez voir que ce n'est pas "
"très long car Godot s'occupe de la plupart des choses difficiles pour vous."

msgid ""
"That is everything for this part. Hopefully, you now understand the basics "
"of vertex shaders in Godot. In the next part of this tutorial we will write "
"a fragment function to accompany this vertex function and we will cover a "
"more advanced technique to turn this terrain into an ocean of moving waves."
msgstr ""
"C'est tout pour cette partie. Espérons que vous comprenez maintenant les "
"bases des shaders de vertex dans Godot. Dans la prochaine partie de ce "
"tutoriel, nous allons écrire une fonction de fragment pour accompagner cette "
"fonction de vertex et nous allons couvrir une technique plus avancée pour "
"transformer ce terrain en un océan de vagues en mouvement."
