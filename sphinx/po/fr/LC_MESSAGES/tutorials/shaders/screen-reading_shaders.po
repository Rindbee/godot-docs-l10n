#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Screen-reading shaders"
msgstr "Shaders de lecture d'écran"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"It is often desired to make a shader that reads from the same screen to "
"which it's writing. 3D APIs, such as OpenGL or DirectX, make this very "
"difficult because of internal hardware limitations. GPUs are extremely "
"parallel, so reading and writing causes all sorts of cache and coherency "
"problems. As a result, not even the most modern hardware supports this "
"properly."
msgstr ""
"Très souvent, on souhaite faire un shader qui lit à partir du même écran que "
"celui sur lequel il écrit. Les API 3D, telles que OpenGL ou DirectX, rendent "
"la tâche très difficile en raison de limitations matérielles internes. Les "
"GPU sont extrêmement parallèles, de sorte que la lecture et l'écriture "
"causent toutes sortes de problèmes de cache et de cohérence. Par conséquent, "
"même le matériel le plus moderne ne cela supporte pas correctement."

msgid ""
"The workaround is to make a copy of the screen, or a part of the screen, to "
"a back-buffer and then read from it while drawing. Godot provides a few "
"tools that make this process easy."
msgstr ""
"La solution consiste à faire une copie de l'écran, ou d'une partie de "
"l'écran, dans une mémoire tampon, puis à la lire pendant le dessin. Godot "
"fournit quelques outils qui rendent ce processus facile."

msgid "Screen texture"
msgstr "Texture d'écran"

msgid "Screen texture example"
msgstr "Exemple de texture d'écran"

msgid "Behind the scenes"
msgstr "Dans les coulisses"

msgid ""
"In 2D, this can be corrected via the :ref:`BackBufferCopy "
"<class_BackBufferCopy>` node, which can be instantiated between both "
"spheres. BackBufferCopy can work by either specifying a screen region or the "
"whole screen:"
msgstr ""
"En 2D, cela peut être corrigé via le nœud :ref:`BackBufferCopy "
"<class_BackBufferCopy>`, qui peut être instancié entre les deux sphères. "
"BackBufferCopy peut fonctionner en spécifiant soit une région de l'écran, "
"soit l'écran entier :"

msgid "With correct back-buffer copying, the two spheres blend correctly:"
msgstr ""
"Avec une copie correcte du back-buffer, les deux sphères se mélangent "
"correctement :"

msgid "Back-buffer logic"
msgstr "Logique du back-buffer"

msgid "Depth texture"
msgstr "Texture de profondeur"

msgid ""
"The following code retrieves the 3D position below the pixel being drawn:"
msgstr "Le code suivant récupère la position 3D sous le pixel dessiné :"

msgid "Normal-roughness texture"
msgstr "Texture de normal-rugosité"
