#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Interpolation"
msgstr "Interpolation"

msgid ""
"The basic idea is that you want to transition from A to B. A value ``t``, "
"represents the states in-between."
msgstr ""
"L'idée de base est que vous voulez passer de A à B. Une valeur ``t``, "
"représente les états intermédiaires."

msgid "And often simplified to:"
msgstr "Et souvent simplifié à :"

msgid ""
"There are other types of interpolations, which will not be covered here. A "
"recommended read afterwards is the :ref:`Bezier <doc_beziers_and_curves>` "
"page."
msgstr ""
"Il existe d'autres types d'interpolations, qui ne seront pas traités ici. Il "
"est recommandé de lire ensuite la page :ref:`Bezier "
"<doc_beziers_and_curves>`."

msgid "Vector interpolation"
msgstr "Interpolation vectorielle"

msgid ""
"Vector types (:ref:`Vector2 <class_Vector2>` and :ref:`Vector3 "
"<class_Vector3>`) can also be interpolated, they come with handy functions "
"to do it :ref:`Vector2.lerp() <class_Vector2_method_lerp>` "
"and :ref:`Vector3.lerp() <class_Vector3_method_lerp>`."
msgstr ""
"Les types de vecteurs (:ref:`Vector2 <class_Vector2>` et :ref:`Vector3 "
"<class_Vector3>`) peuvent aussi être interpolés, ils ont des fonctions "
"pratiques pour le faire :ref:`Vector2.lerp() <class_Vector2_method_lerp>` "
"et :ref:`Vector3.lerp() <class_Vector3_method_lerp>`."

msgid ""
"For cubic interpolation, there are also :ref:`Vector2.cubic_interpolate() "
"<class_Vector2_method_cubic_interpolate>` "
"and :ref:`Vector3.cubic_interpolate() "
"<class_Vector3_method_cubic_interpolate>`, which do a :ref:`Bezier "
"<doc_beziers_and_curves>` style interpolation."
msgstr ""
"Pour l'interpolation cubique, il existe "
"aussi :ref:`Vector2.cubic_interpolate() "
"<class_Vector2_method_cubic_interpolate>` "
"et :ref:`Vector3.cubic_interpolate() "
"<class_Vector3_method_cubic_interpolate>`, qui font une interpolation de "
"style :ref:`Bezier <doc_beziers_and_curves>`."

msgid "It will produce the following motion:"
msgstr "Il produira le mouvement suivant :"

msgid "Transform interpolation"
msgstr "Interpolation par transformation"

msgid ""
"It is also possible to interpolate whole transforms (make sure they have "
"either uniform scale or, at least, the same non-uniform scale). For this, "
"the function :ref:`Transform3D.interpolate_with() "
"<class_Transform3D_method_interpolate_with>` can be used."
msgstr ""
"Il est également possible d'interpoler des transformations entières "
"(s'assurer qu'elles ont soit une échelle uniforme, soit, au moins, la même "
"échelle non uniforme). Pour cela, la "
"fonction :ref:`Transform3D.interpolate_with() "
"<class_Transform3D_method_interpolate_with>` peut être utilisée."

msgid ""
"Here is an example of transforming a monkey from Position1 to Position2:"
msgstr ""
"Voici un exemple de transformation d'un singe de Position1 à Position2 :"

msgid "Using the following pseudocode:"
msgstr "En utilisant le pseudo-code suivant :"

msgid "And again, it will produce the following motion:"
msgstr "Et encore une fois, il produira le mouvement suivant :"

msgid "Smoothing motion"
msgstr "Mouvement lisser"

msgid "Here is how it looks:"
msgstr "Voici à quoi cela ressemble :"
