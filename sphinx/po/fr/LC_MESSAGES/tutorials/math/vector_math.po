#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Vector math"
msgstr "Mathématiques des vecteurs"

msgid "Introduction"
msgstr "Introduction"

msgid ""
"This tutorial is a short and practical introduction to linear algebra as it "
"applies to game development. Linear algebra is the study of vectors and "
"their uses. Vectors have many applications in both 2D and 3D development and "
"Godot uses them extensively. Developing a good understanding of vector math "
"is essential to becoming a strong game developer."
msgstr ""
"Ce tutoriel est une introduction courte et pratique à l'algèbre linéaire "
"telle qu'elle s'applique au développement de jeux. L'algèbre linéaire est "
"l'étude des vecteurs et de leurs utilisations. Les vecteurs ont de "
"nombreuses applications dans le développement 2D et 3D et Godot les utilise "
"largement. Développer une bonne compréhension des mathématiques vectorielles "
"est essentiel pour devenir un bon développeur de jeux."

msgid ""
"This tutorial is **not** a formal textbook on linear algebra. We will only "
"be looking at how it is applied to game development. For a broader look at "
"the mathematics, see https://www.khanacademy.org/math/linear-algebra"
msgstr ""
"Ce tutoriel n'est **pas** un manuel formel sur l'algèbre linéaire. Nous "
"n'examinerons que la façon dont elle est appliquée au développement de jeux. "
"Pour un regard plus large sur les mathématiques, voir https://"
"www.khanacademy.org/math/linear-algebra"

msgid "Coordinate systems (2D)"
msgstr "Systèmes de coordonnées (2D)"

msgid ""
"In 2D space, coordinates are defined using a horizontal axis (``x``) and a "
"vertical axis (``y``). A particular position in 2D space is written as a "
"pair of values such as ``(4, 3)``."
msgstr ""
"Dans l'espace 2D, les coordonnées sont définies par un axe horizontal "
"(``x``) et un axe vertical (``y``). Une position particulière dans l'espace "
"2D s'écrit comme une paire de valeurs telles que ``(4, 3)``."

msgid ""
"If you're new to computer graphics, it might seem odd that the positive "
"``y`` axis points **downwards** instead of upwards, as you probably learned "
"in math class. However, this is common in most computer graphics "
"applications."
msgstr ""
"Si vous êtes nouveau dans l'infographie, il peut sembler étrange que les "
"points positifs de l'axe ``y`` soient orientés vers le **bas** plutôt que "
"vers le haut, comme vous l'avez probablement appris en cours de "
"mathématiques. Cependant, c'est commun dans la plupart des applications "
"d'infographie."

msgid ""
"Any position in the 2D plane can be identified by a pair of numbers in this "
"way. However, we can also think of the position ``(4, 3)`` as an **offset** "
"from the ``(0, 0)`` point, or **origin**. Draw an arrow pointing from the "
"origin to the point:"
msgstr ""
"Toute position dans le plan 2D peut être identifiée par une paire de "
"chiffres de cette façon. Cependant, on peut aussi considérer la position "
"``(4, 3)`` comme un **décalage** du point ``(0, 0)``, ou **origine**. "
"Dessinez une flèche pointant de l'origine vers le point :"

msgid ""
"A very important point to consider about vectors is that they only represent "
"**relative** direction and magnitude. There is no concept of a vector's "
"position. The following two vectors are identical:"
msgstr ""
"Un point très important à considérer au sujet des vecteurs est qu'ils ne "
"représentent que la direction et l'amplitude **relative**. Il n'y a pas de "
"notion de position d'un vecteur. Les deux vecteurs suivants sont identiques :"

msgid ""
"Both vectors represent a point 4 units to the right and 3 units below some "
"starting point. It does not matter where on the plane you draw the vector, "
"it always represents a relative direction and magnitude."
msgstr ""
"Les deux vecteurs représentent un point 4 unités à droite et 3 unités en "
"dessous d'un point de départ. Peu importe où dans le plan vous dessinez le "
"vecteur, il représente toujours une direction et une magnitude relatives."

msgid "Vector operations"
msgstr "Opérations vectorielles"

msgid ""
"You can use either method (x and y coordinates or angle and magnitude) to "
"refer to a vector, but for convenience, programmers typically use the "
"coordinate notation. For example, in Godot, the origin is the top-left "
"corner of the screen, so to place a 2D node named ``Node2D`` 400 pixels to "
"the right and 300 pixels down, use the following code:"
msgstr ""
"Vous pouvez utiliser l'une ou l'autre méthode (coordonnées x et y ou angle "
"et magnitude) pour faire référence à un vecteur, mais pour des raisons "
"pratiques, les programmeurs utilisent généralement la notation des "
"coordonnées. Par exemple, dans Godot, l'origine est le coin supérieur gauche "
"de l'écran, donc pour placer un nœud 2D nommé ``Node2D`` 400 pixels à droite "
"et 300 pixels en bas, utilisez le code suivant :"

msgid "Member access"
msgstr "Accès aux membres"

msgid ""
"The individual components of the vector can be accessed directly by name."
msgstr ""
"Les composants individuels du vecteur sont directement accessibles par leur "
"nom."

msgid "Adding vectors"
msgstr "Additionner des vecteurs"

msgid ""
"When adding or subtracting two vectors, the corresponding components are "
"added:"
msgstr ""
"Lors de l'addition ou de la soustraction de deux vecteurs, les composants "
"correspondants sont ajoutés :"

msgid ""
"We can also see this visually by adding the second vector at the end of the "
"first:"
msgstr ""
"Nous pouvons aussi le voir visuellement en ajoutant le deuxième vecteur à la "
"fin du premier :"

msgid "Note that adding ``a + b`` gives the same result as ``b + a``."
msgstr "Notez que l'ajout de ``a + b`` donne le même résultat que ``b + a``."

msgid "Scalar multiplication"
msgstr "Multiplication scalaire"

msgid ""
"Vectors represent both direction and magnitude. A value representing only "
"magnitude is called a **scalar**. Scalars use the :ref:`class_float` type in "
"Godot."
msgstr ""
"Les vecteurs représentent à la fois la direction et la magnitude. Une valeur "
"ne représentant que la magnitude est appelée un **scalaire**. Les scalaires "
"utilisent le type :ref:`class_float` dans Godot."

msgid "A vector can be multiplied by a **scalar**:"
msgstr "Un vecteur peut être multiplié par un **scalaire** :"

msgid "Practical applications"
msgstr "Applications pratiques"

msgid "Let's look at two common uses for vector addition and subtraction."
msgstr ""
"Examinons deux utilisations courantes de l'addition et de la soustraction de "
"vecteurs."

msgid "Movement"
msgstr "Mouvement"

msgid "Pointing toward a target"
msgstr "Pointer vers une cible"

msgid ""
"In this scenario, you have a tank that wishes to point its turret at a "
"robot. Subtracting the tank's position from the robot's position gives the "
"vector pointing from the tank to the robot."
msgstr ""
"Dans ce scénario, vous avez un tank qui souhaite diriger sa tourelle vers un "
"robot. En soustrayant la position du tank de la position du robot, on "
"obtient le vecteur pointant du tank vers le robot."

msgid "Unit vectors"
msgstr "Vecteurs unitaires"

msgid ""
"A vector with **magnitude** of ``1`` is called a **unit vector**. They are "
"also sometimes referred to as **direction vectors** or **normals**. Unit "
"vectors are helpful when you need to keep track of a direction."
msgstr ""
"Un vecteur avec une **magnitude** de ``1`` est appelé un **vecteur "
"unitaire**. Ils sont aussi parfois appelés **vecteurs de direction** ou "
"**normales**. Les vecteurs unitaires sont utiles lorsque vous avez besoin de "
"suivre une direction."

msgid "Normalization"
msgstr "Normalisation"

msgid ""
"**Normalizing** a vector means reducing its length to ``1`` while preserving "
"its direction. This is done by dividing each of its components by its "
"magnitude. Because this is such a common operation, Godot provides a "
"dedicated :ref:`normalized() <class_Vector2_method_normalized>` method for "
"this:"
msgstr ""
"**Normaliser** un vecteur, c'est réduire sa longueur à ``1`` tout en "
"conservant sa direction. Pour ce faire, on divise chacune de ses composantes "
"par sa magnitude. Comme il s'agit d'une opération très courante, Godot "
"fournit une méthode dédiée :ref:`normalized() "
"<class_Vector2_method_normalized>` pour cela :"

msgid "Reflection"
msgstr "Réflexion"

msgid ""
"A common use of unit vectors is to indicate **normals**. Normal vectors are "
"unit vectors aligned perpendicularly to a surface, defining its direction. "
"They are commonly used for lighting, collisions, and other operations "
"involving surfaces."
msgstr ""
"Une utilisation courante des vecteurs unitaires est d'indiquer les "
"**normales**. Les normales (ou vecteurs normaux) sont des vecteurs unitaires "
"alignés perpendiculairement à une surface, définissant sa direction. Ils "
"sont couramment utilisés pour l'éclairage, les collisions et d'autres "
"opérations impliquant des surfaces."

msgid ""
"For example, imagine we have a moving ball that we want to bounce off a wall "
"or other object:"
msgstr ""
"Par exemple, imaginez que nous avons une balle en mouvement que nous voulons "
"faire rebondir sur un mur ou un autre objet :"

msgid ""
"The surface normal has a value of ``(0, -1)`` because this is a horizontal "
"surface. When the ball collides, we take its remaining motion (the amount "
"left over when it hits the surface) and reflect it using the normal. In "
"Godot, there is a :ref:`bounce() <class_Vector2_method_bounce>` method to "
"handle this. Here is a code example of the above diagram using "
"a :ref:`CharacterBody2D <class_CharacterBody2D>`:"
msgstr ""
"La normale de surface a une valeur de ``(0, -1)`` parce que c'est une "
"surface horizontale. Lorsque la balle entre en collision, nous prenons son "
"mouvement restant (la quantité restante lorsqu'elle touche la surface) et "
"nous la réfléchissons en utilisant la normale. Dans Godot, il y a une "
"méthode :ref:`bounce() <class_Vector2_method_bounce>` pour gérer cela. Voici "
"un exemple de code du diagramme ci-dessus utilisant un :ref:`CharacterBody2D "
"<class_CharacterBody2D>` :"

msgid "Dot product"
msgstr "Produit scalaire"

msgid ""
"The **dot product** is one of the most important concepts in vector math, "
"but is often misunderstood. Dot product is an operation on two vectors that "
"returns a **scalar**. Unlike a vector, which contains both magnitude and "
"direction, a scalar value has only magnitude."
msgstr ""
"Le **produit scalaire** est l'un des concepts les plus importants en "
"mathématiques vectorielles, mais il est souvent mal compris. Le produit "
"scalaire est une opération sur deux vecteurs qui retourne un **scalaire**. "
"Contrairement à un vecteur, qui contient à la fois la magnitude et la "
"direction, une valeur scalaire n'a que la magnitude."

msgid "The formula for dot product takes two common forms:"
msgstr "La formule du produit scalaire prend deux formes courantes :"

msgid "and"
msgstr "et"

msgid ""
"However, in most cases it is easiest to use the built-in :ref:`dot() "
"<class_Vector2_method_dot>` method. Note that the order of the two vectors "
"does not matter:"
msgstr ""
"Cependant, dans la plupart des cas, il est plus facile d'utiliser la méthode "
"intégrée :ref:`dot() <class_Vector2_method_dot>`. Notez que l'ordre des deux "
"vecteurs n'a pas d'importance :"

msgid ""
"When using unit vectors, the result will always be between ``-1`` (180°) and "
"``1`` (0°)."
msgstr ""
"Lorsque vous utilisez des vecteurs unitaires, le résultat sera toujours "
"compris entre ``-1`` (180°) et ``1`` (0°)."

msgid "Facing"
msgstr "Orienté vers"

msgid ""
"We can use this fact to detect whether an object is facing toward another "
"object. In the diagram below, the player ``P`` is trying to avoid the "
"zombies ``A`` and ``B``. Assuming a zombie's field of view is **180°**, can "
"they see the player?"
msgstr ""
"Nous pouvons utiliser ce fait pour détecter si un objet est orienté vers un "
"autre objet. Dans le diagramme ci-dessous, le joueur ``P`` essaie d'éviter "
"les zombies ``A`` et ``B``. En supposant que le champ de vision d'un zombie "
"est de **180°**, peuvent-ils voir le joueur ?"

msgid ""
"The green arrows ``fA`` and ``fB`` are **unit vectors** representing the "
"zombie's facing direction and the blue semicircle represents its field of "
"view. For zombie ``A``, we find the direction vector ``AP`` pointing to the "
"player using ``P - A`` and normalize it, however, Godot has a helper method "
"to do this called :ref:`direction_to() <class_Vector2_method_direction_to>`. "
"If the angle between this vector and the facing vector is less than 90°, "
"then the zombie can see the player."
msgstr ""
"Les flèches vertes ``fA`` et ``fB`` sont des **vecteurs unitaires** "
"représentant la direction dans laquelle les zombies sont orientés et le demi-"
"cercle bleu représente leur champ de vision. Pour le zombie ``A``, nous "
"trouvons le vecteur de direction ``AP`` pointant vers le joueur en utilisant "
"``P - A`` et en le normalisant. Cependant, Godot possède une méthode d'aide "
"pour cela nommée :ref:`direction_to() <class_Vector2_method_direction_to>`. "
"Si l'angle entre ce vecteur et le vecteur faisant face est inférieur à 90°, "
"alors le zombie peut voir le joueur."

msgid "In code it would look like this:"
msgstr "En code, cela ressemblerait à ceci :"

msgid "Cross product"
msgstr "Produit Vectoriel"

msgid ""
"Like the dot product, the **cross product** is an operation on two vectors. "
"However, the result of the cross product is a vector with a direction that "
"is perpendicular to both. Its magnitude depends on their relative angle. If "
"two vectors are parallel, the result of their cross product will be a null "
"vector."
msgstr ""
"Comme le produit scalaire, le **produit vectoriel** est une opération sur "
"deux vecteurs. Cependant, le résultat du produit vectoriel est un vecteur "
"dont la direction est perpendiculaire aux deux. Sa magnitude dépend de leur "
"angle relatif. Si deux vecteurs sont parallèles, le résultat de leur produit "
"vectoriel sera un vecteur nul."

msgid "The cross product is calculated like this:"
msgstr "Le produit vectoriel est calculé de cette façon :"

msgid ""
"With Godot, you can use the built-in :ref:`Vector3.cross() "
"<class_Vector3_method_cross>` method:"
msgstr ""
"Avec Godot, vous pouvez utiliser la méthode intégrée :ref:`Vector3.cross() "
"<class_Vector3_method_cross>` :"

msgid ""
"In the cross product, order matters. ``a.cross(b)`` does not give the same "
"result as ``b.cross(a)``. The resulting vectors point in **opposite** "
"directions."
msgstr ""
"Dans le produit vectoriel, l'ordre compte. ``a.cross(b)`` ne donne pas le "
"même résultat que ``b.cross(a)``. Les vecteurs résultants pointent dans des "
"directions **contraires**."

msgid "Calculating normals"
msgstr "Calcul des normales"

msgid "Here is a function to calculate a triangle's normal:"
msgstr "Voici une fonction pour calculer la normale d'un triangle :"

msgid "Pointing to a target"
msgstr "Pointer vers une cible"

msgid ""
"In the dot product section above, we saw how it could be used to find the "
"angle between two vectors. However, in 3D, this is not enough information. "
"We also need to know what axis to rotate around. We can find that by "
"calculating the cross product of the current facing direction and the target "
"direction. The resulting perpendicular vector is the axis of rotation."
msgstr ""
"Dans la section sur le produit scalaire ci-dessus, nous avons vu comment il "
"pouvait être utilisé pour trouver l'angle entre deux vecteurs. Cependant, en "
"3D, cette information n'est pas suffisante. Il faut aussi savoir autour de "
"quel axe tourner. On peut le trouver en calculant le produit vectoriel de la "
"direction actuelle et de la direction cible. Le vecteur perpendiculaire "
"résultant est l'axe de rotation."

msgid "More information"
msgstr "Plus d'information"

msgid ""
"For more information on using vector math in Godot, see the following "
"articles:"
msgstr ""
"Pour plus d'informations sur l'utilisation des mathématiques vectorielles "
"dans Godot, voir les articles suivants :"

msgid ":ref:`doc_vectors_advanced`"
msgstr ":ref:`doc_vectors_advanced`"

msgid ":ref:`doc_matrices_and_transforms`"
msgstr ":ref:`doc_matrices_and_transforms`"
