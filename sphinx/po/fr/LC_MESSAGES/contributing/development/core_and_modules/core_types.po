#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Core types"
msgstr "Types cœur"

msgid ""
"Godot has a rich set of classes and templates that compose its core, and "
"everything is built upon them."
msgstr ""
"Godot a une base riche de classes et templates qui forment son cœur, et tout "
"est construit autours d'eux."

msgid ""
"This reference will try to list them in order for their better understanding."
msgstr ""
"Cette référence tentera de les répertorier afin de mieux les comprendre."

msgid "Definitions"
msgstr "Définitions"

msgid ""
"Godot uses the standard C99 datatypes, such as ``uint8_t``, ``uint32_t``, "
"``int64_t``, etc. which are nowadays supported by every compiler. "
"Reinventing the wheel for those is not fun, as it makes code more difficult "
"to read."
msgstr ""
"Godot utilise les types standard du C99, comme ``uint8_t``, ``uint32_t``, "
"``int64_t``, etc. Ces derniers sont aujourd'hui supporté par tout les "
"compilateurs. Réinventer la roue pour ceux-là n'est pas amusant, car cela "
"rend le code plus difficile à lire."

msgid ""
"For Unicode characters, CharType instead of wchar_t is used, because many "
"architectures have 4 bytes long wchar_t, where 2 bytes might be desired. "
"However, by default, this has not been forced and CharType maps directly to "
"wchar_t."
msgstr ""
"Pour les caractères Unicode, on utilise CharType au lieu de wchar_t, car de "
"nombreuses architectures ont un wchar_t de 4 octets, alors que 2 octets "
"pourraient être souhaitables. Cependant, par défaut, cela n'a pas été forcé "
"et CharType correspond directement à wchar_t."

msgid ""
"`core/typedefs.h <https://github.com/godotengine/godot/blob/master/core/"
"typedefs.h>`__"
msgstr ""
"`core/typedefs.h <https://github.com/godotengine/godot/blob/master/core/"
"typedefs.h>`__"

msgid "Memory model"
msgstr "Modèle mémoire"

msgid ""
"PC is a wonderful architecture. Computers often have gigabytes of RAM, "
"terabytes of storage and gigahertz of CPU, and when an application needs "
"more resources the OS will swap out the inactive ones. Other architectures "
"(like mobile or consoles) are in general more limited."
msgstr ""
"Les ordinateurs sont de magnifiques architectures. Ces derniers ont souvent "
"des gigabytes de mémoire vive (RAM), des terabytes de stockage et des "
"gigahertz de processeur, lorsqu'une application a besoin de plus de "
"ressources le système d'exploitation lui assignera les ressources inactives. "
"D'autres architectures (comme les téléphones ou les consoles) sont en "
"général plus limités."

msgid ""
"The most common memory model is the heap, where an application will request "
"a region of memory, and the underlying OS will try to fit it somewhere and "
"return it. This often works best and is flexible, but over time and with "
"abuse, this can lead to segmentation."
msgstr ""
"Le modèle de mémoire le plus courant est le tas (heap), où une application "
"demandera une région de la mémoire, et le système d'exploitation sous-jacent "
"tentera de trouver un espace adapté et de le renvoyer. Cela est plus "
"flexible et fonctionne souvent mieux, mais au fil des utilisations abusives, "
"cela peut aboutir à une segmentation."

msgid ""
"Segmentation slowly creates holes that are too small for most common "
"allocations, so that memory is wasted. There is a lot of literature about "
"heap and segmentation, so this topic will not be developed further here. "
"Modern operating systems use paged memory, which helps mitigate the problem "
"of segmentation but doesn't solve it."
msgstr ""
"La segmentation crée lentement des troues qui sont trop petit pour la "
"plupart de allocations, alors la mémoire est gaspillé. Il y a beaucoup de "
"discussion autours du tas (heap) et de la segmentation, donc ce sujet ne "
"sera pas plus développé ici. Les systèmes d'exploitation modernes répondent "
"au problème en utilisant de la mémoire virtuelle paginé, cela aide mais "
"cependant ne résout pas le problème ."

msgid ""
"However, in many studies and tests, it is shown that given enough memory, if "
"the maximum allocation size is below a given threshold in proportion to the "
"maximum heap size and proportion of memory intended to be unused, "
"segmentation will not be a problem over time as it will remain constant. In "
"other words, leave 10-20% of your memory free and perform all small "
"allocations and you are fine."
msgstr ""
"Toutefois, de nombreuses études et tests montrent qu'avec une mémoire "
"suffisante, si la taille maximale de l'allocation est inférieure à un seuil "
"donné par rapport à la taille maximale du tas et à la proportion de mémoire "
"destinée à être inutilisée, la segmentation ne posera pas de problème dans "
"le temps car elle restera constante. En d'autres termes, laissez 10 à 20 % "
"de votre mémoire libre et effectuez de petites allocations et tout ira bien."

msgid "Allocating memory"
msgstr "Allouer de la mémoire"

msgid ""
"Godot has many tools for tracking memory usage in a game, especially during "
"debug. Because of this, the regular C and C++ library calls should not be "
"used. Instead, a few other ones are provided."
msgstr ""
"Godot a de nombreux outils pour traquer l'utilisation de la mémoire dans un "
"jeu, spécialement lors du débogage. De ce fait, les allocateurs standard de "
"C et C++ ne doivent pas être utilisés, d'autres sont fournis."

msgid "For C-style allocation, Godot provides a few macros:"
msgstr "Pour les allocations style C, Godot fourni quelques macros :"

msgid "For C++-style allocation, special macros are provided:"
msgstr "Pour les allocations style C++, des macros spéciales sont fournis :"

msgid ""
"memnew/memdelete also use a little C++ magic and notify Objects right after "
"they are created, and right before they are deleted."
msgstr ""
"memnew/memdelete utilise aussi un peu de lmagie du C++ pour notifier les "
"Objets juste après leur création et juste avant leur destruction."

msgid ""
"`core/os/memory.h <https://github.com/godotengine/godot/blob/master/core/os/"
"memory.h>`__"
msgstr ""
"`core/os/memory.h <https://github.com/godotengine/godot/blob/master/core/os/"
"memory.h>`__"

msgid "Containers"
msgstr "Conteneurs"

msgid "Comment"
msgstr "Commentaire"

msgid "|vector|"
msgstr "|vector|"

msgid "Math types"
msgstr "Types mathématiques"

msgid ""
"`core/math <https://github.com/godotengine/godot/tree/master/core/math>`__"
msgstr ""
"`core/math <https://github.com/godotengine/godot/tree/master/core/math>`__"

msgid "NodePath"
msgstr "NodePath"

msgid ""
"`core/string/node_path.h <https://github.com/godotengine/godot/blob/master/"
"core/string/node_path.h>`__"
msgstr ""
"`core/string/node_path.h <https://github.com/godotengine/godot/blob/master/"
"core/string/node_path.h>`__"

msgid "RID"
msgstr "RID"

msgid ""
"`core/templates/rid.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/rid.h>`__"
msgstr ""
"`core/templates/rid.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/rid.h>`__"
