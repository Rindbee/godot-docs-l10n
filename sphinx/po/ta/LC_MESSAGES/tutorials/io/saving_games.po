#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Saving games"
msgstr "விளையாட்டுகளைச் சேமித்தல்"

msgid "Introduction"
msgstr "அறிமுகம்"

msgid ""
"Save games can be complicated. For example, it may be desirable to store "
"information from multiple objects across multiple levels. Advanced save game "
"systems should allow for additional information about an arbitrary number of "
"objects. This will allow the save function to scale as the game grows more "
"complex."
msgstr ""
"விளையாட்டுகளைச் சேமிப்பது சிக்கலானது. எடுத்துக்காட்டாக, பல நிலைகளில் பல "
"பொருள்களிலிருந்து தகவல்களை சேமிப்பது விரும்பத்தக்கதாக இருக்கலாம். மேம்பட்ட சேமி "
"விளையாட்டு அமைப்புகள் தன்னிச்சையான எண்ணிக்கையிலான பொருள்களைப் பற்றிய கூடுதல் தகவல்களை "
"அனுமதிக்க வேண்டும். விளையாட்டு மிகவும் சிக்கலானதாக வளரும்போது சேமிப்பு செயல்பாட்டை "
"அளவிட இது அனுமதிக்கும்."

msgid ""
"If you're looking to save user configuration, you can use "
"the :ref:`class_ConfigFile` class for this purpose."
msgstr ""
"பயனர் உள்ளமைவை சேமிக்க நீங்கள் விரும்பினால், இந்த நோக்கத்திற்காக ref: `class_configfile` "
"வகுப்பைப் பயன்படுத்தலாம்."

msgid ""
"You can see how saving and loading works in action using the `Saving and "
"Loading (Serialization) demo project <https://github.com/godotengine/godot-"
"demo-projects/blob/master/loading/serialization>`__."
msgstr ""
"`சேமிப்பு மற்றும் ஏற்றுதல் (சீரியலைசேசன்) டெமோ திட்டம் <https://github.com/"
"godotengine/godotengine/blob/master/master/lading/urelization>` __."

msgid "Identify persistent objects"
msgstr "தொடர்ச்சியான பொருட்களை அடையாளம் காணவும்"

msgid ""
"Firstly, we should identify what objects we want to keep between game "
"sessions and what information we want to keep from those objects. For this "
"tutorial, we will use groups to mark and handle objects to be saved, but "
"other methods are certainly possible."
msgstr ""
"முதலாவதாக, விளையாட்டு அமர்வுகளுக்கு இடையில் நாம் எந்த பொருள்களை வைத்திருக்க "
"விரும்புகிறோம் என்பதையும், அந்த பொருட்களிலிருந்து எந்த தகவல்களை வைத்திருக்க "
"விரும்புகிறோம் என்பதையும் அடையாளம் காண வேண்டும். இந்த டுடோரியலைப் பொறுத்தவரை, சேமிக்க "
"வேண்டிய பொருள்களைக் குறிக்க மற்றும் கையாள குழுக்களைப் பயன்படுத்துவோம், ஆனால் பிற முறைகள் "
"நிச்சயமாக சாத்தியமாகும்."

msgid ""
"We will start by adding objects we wish to save to the \"Persist\" group. We "
"can do this through either the GUI or script. Let's add the relevant nodes "
"using the GUI:"
msgstr ""
"\"தொடர்ச்சியான\" குழுவில் சேமிக்க விரும்பும் பொருட்களைச் சேர்ப்பதன் மூலம் தொடங்குவோம். GUI "
"அல்லது ச்கிரிப்ட் மூலம் இதை நாம் செய்யலாம். GUI ஐப் பயன்படுத்தி தொடர்புடைய முனைகளைச் "
"சேர்ப்போம்:"

msgid ""
"Once this is done, when we need to save the game, we can get all objects to "
"save them and then tell them all to save with this script:"
msgstr ""
"இது முடிந்ததும், விளையாட்டைச் சேமிக்க வேண்டியிருக்கும் போது, அவற்றைக் காப்பாற்ற எல்லா "
"பொருட்களையும் பெறலாம், பின்னர் இந்த ச்கிரிப்டை சேமிக்க அனைவரையும் சொல்லலாம்:"

msgid "Serializing"
msgstr "தொடர்"

msgid ""
"The next step is to serialize the data. This makes it much easier to read "
"from and store to disk. In this case, we're assuming each member of group "
"Persist is an instanced node and thus has a path. GDScript has the helper "
"class :ref:`JSON<class_json>` to convert between dictionary and string. Our "
"node needs to contain a save function that returns this data. The save "
"function will look like this:"
msgstr ""
"அடுத்த கட்டம் தரவை வரிசைப்படுத்த வேண்டும். இது படித்து வட்டில் சேமித்து வைப்பதை மிகவும் "
"எளிதாக்குகிறது. இந்த விசயத்தில், குழுவின் ஒவ்வொரு உறுப்பினரும் ஒரு உறுதியான முனை "
"என்று நாங்கள் கருதுகிறோம், இதனால் ஒரு பாதை உள்ளது. GDSCRIPT உதவியாளர் வகுப்பைக் "
"கொண்டுள்ளது: குறிப்பு: `JSON <class_json>` அகராதி மற்றும் சரம் ஆகியவற்றுக்கு இடையில் "
"மாற்ற. இந்தத் தரவைத் தரும் சேமிப்பு செயல்பாட்டை எங்கள் முனை கொண்டிருக்க வேண்டும். சேமிக்கும் "
"செயல்பாடு இப்படி இருக்கும்:"

msgid ""
"This gives us a dictionary with the style "
"``{ \"variable_name\":value_of_variable }``, which will be useful when "
"loading."
msgstr ""
"இது `{\" viation_name \": value_of_variable}` `பாணியுடன் ஒரு அகராதியை நமக்கு "
"வழங்குகிறது, இது ஏற்றும்போது பயனுள்ளதாக இருக்கும்."

msgid "Saving and reading data"
msgstr "தரவைச் சேமித்தல் மற்றும் வாசித்தல்"

msgid ""
"As covered in the :ref:`doc_filesystem` tutorial, we'll need to open a file "
"so we can write to it or read from it. Now that we have a way to call our "
"groups and get their relevant data, let's use the "
"class :ref:`JSON<class_json>` to convert it into an easily stored string and "
"store them in a file. Doing it this way ensures that each line is its own "
"object, so we have an easy way to pull the data out of the file as well."
msgstr ""
"இதில்: ref: `doc_filesystem` டுடோரியல், நாங்கள் ஒரு கோப்பைத் திறக்க வேண்டும், எனவே "
"நாங்கள் அதற்கு எழுதலாம் அல்லது அதிலிருந்து படிக்கலாம். இப்போது எங்கள் குழுக்களை அழைத்து "
"அவற்றின் பொருத்தமான தரவைப் பெறுவதற்கு ஒரு வழி உள்ளது, வகுப்பைப் பயன்படுத்துவோம்: "
"குறிப்பு: `JSON <class_json>` அதை எளிதில் சேமித்து வைத்திருக்கும் சரமாக மாற்றி "
"அவற்றை ஒரு கோப்பில் சேமிக்க. இந்த வழியில் இதைச் செய்வது ஒவ்வொரு வரியும் அதன் சொந்த பொருள் "
"என்பதை உறுதி செய்கிறது, எனவே கோப்பிலிருந்து தரவை வெளியேற்றுவதற்கான எளிதான வழி "
"எங்களுக்கு உள்ளது."

msgid ""
"Game saved! Now, to load, we'll read each line. Use "
"the :ref:`parse<class_JSON_method_parse>` method to read the JSON string "
"back to a dictionary, and then iterate over the dict to read our values. But "
"we'll need to first create the object and we can use the filename and parent "
"values to achieve that. Here is our load function:"
msgstr ""
"விளையாட்டு சேமிக்கப்பட்டது! இப்போது, ஏற்ற, ஒவ்வொரு வரியையும் படிப்போம். : Ref: "
"`பாகுபடுத்தல் <class_json_method_parse>` சாதொபொகு சரத்தை மீண்டும் ஒரு அகராதிக்கு "
"படிக்க முறை, பின்னர் எங்கள் மதிப்புகளைப் படிக்க கட்டளைக்கு மீண்டும் மீண்டும் செய்யவும். ஆனால் "
"நாம் முதலில் பொருளை உருவாக்க வேண்டும், அதை அடைய கோப்பு பெயர் மற்றும் பெற்றோர் "
"மதிப்புகளைப் பயன்படுத்தலாம். எங்கள் சுமை செயல்பாடு இங்கே:"

msgid ""
"Now we can save and load an arbitrary number of objects laid out almost "
"anywhere across the scene tree! Each object can store different data "
"depending on what it needs to save."
msgstr ""
"இப்போது நாம் காட்சி மரத்தின் குறுக்கே எங்கும் போடப்பட்ட தன்னிச்சையான எண்ணிக்கையிலான "
"பொருட்களை சேமித்து ஏற்றலாம்! ஒவ்வொரு பொருளும் சேமிக்க வேண்டியதைப் பொறுத்து வெவ்வேறு "
"தரவை சேமிக்க முடியும்."

msgid "Some notes"
msgstr "சில குறிப்புகள்"

msgid ""
"We have glossed over setting up the game state for loading. It's ultimately "
"up to the project creator where much of this logic goes. This is often "
"complicated and will need to be heavily customized based on the needs of the "
"individual project."
msgstr ""
"ஏற்றுவதற்கான விளையாட்டு நிலையை அமைப்பது குறித்து நாங்கள் பளபளப்பாக உள்ளோம். இந்த "
"தர்க்கத்தின் பெரும்பகுதி செல்லும் திட்டத்தை உருவாக்கியவர் இது இறுதியில் உள்ளது. இது "
"பெரும்பாலும் சிக்கலானது மற்றும் தனிப்பட்ட திட்டத்தின் தேவைகளின் அடிப்படையில் பெரிதும் "
"தனிப்பயனாக்கப்பட வேண்டும்."

msgid ""
"Additionally, our implementation assumes no Persist objects are children of "
"other Persist objects. Otherwise, invalid paths would be created. To "
"accommodate nested Persist objects, consider saving objects in stages. Load "
"parent objects first so they are available for the :ref:`add_child() "
"<class_node_method_add_child>` call when child objects are loaded. You will "
"also need a way to link children to parents as the :ref:`NodePath "
"<class_nodepath>` will likely be invalid."
msgstr ""
"கூடுதலாக, எங்கள் செயல்படுத்தல் எந்தவிதமான தொடர்ச்சியான பொருள்களையும் மற்ற தொடர்ச்சியான "
"பொருள்களின் குழந்தைகள் என்று கருதுகிறது. இல்லையெனில், தவறான பாதைகள் உருவாக்கப்படும். "
"உள்ளமைக்கப்பட்ட தொடர்ச்சியான பொருள்களுக்கு இடமளிக்க, நிலைகளில் பொருட்களை சேமிப்பதைக் "
"கவனியுங்கள். பெற்றோர் பொருள்களை முதலில் ஏற்றவும், எனவே அவை கிடைக்கின்றன: ref: "
"`add_child () <class_node_method_add_child>` குழந்தை பொருள்கள் ஏற்றப்படும்போது "
"அழைக்கவும். குழந்தைகளை பெற்றோருடன் இணைக்க உங்களுக்கு ஒரு வழி தேவைப்படும்: ref: "
"`nodepath <class_nodepath>` தவறானதாக இருக்கும்."

msgid "JSON vs binary serialization"
msgstr "சாதொபொகு Vs பைனரி சீரியலைசேசன்"

msgid ""
"For simple game state, JSON may work and it generates human-readable files "
"that are easy to debug."
msgstr ""
"எளிய விளையாட்டு நிலைக்கு, சாதொபொகு வேலை செய்யலாம், மேலும் இது பிழைத்திருத்த எளிதான "
"மனிதனால் படிக்கக்கூடிய கோப்புகளை உருவாக்குகிறது."

msgid ""
"But JSON has many limitations. If you need to store more complex game state "
"or a lot of it, :ref:`binary serialization<doc_binary_serialization_api>` "
"may be a better approach."
msgstr ""
"ஆனால் சாதொபொகு க்கு பல வரம்புகள் உள்ளன. நீங்கள் மிகவும் சிக்கலான விளையாட்டு நிலையை "
"அல்லது நிறைய சேமிக்க வேண்டும் என்றால்,: ref: `பைனரி சீரியலைசேசன் "
"<doc_binary_serialization_api>` ஒரு சிறந்த அணுகுமுறையாக இருக்கலாம்."

msgid "JSON limitations"
msgstr "சாதொபொகு வரம்புகள்"

msgid "Here are some important gotchas to know about when using JSON."
msgstr ""
"சாதொபொகு ஐப் பயன்படுத்தும் போது தெரிந்து கொள்ள வேண்டிய சில முக்கியமான கோட்சாக்கள் இங்கே."

msgid ""
"**Filesize:** JSON stores data in text format, which is much larger than "
"binary formats."
msgstr ""
"** கோப்புகள்: ** சாதொபொகு தரவை உரை வடிவத்தில் சேமிக்கிறது, இது பைனரி வடிவங்களை விட "
"மிகப் பெரியது."

msgid ""
"**Data types:** JSON only offers a limited set of data types. If you have "
"data types that JSON doesn't have, you will need to translate your data to "
"and from types that JSON can handle. For example, some important types that "
"JSON can't parse are: ``Vector2``, ``Vector3``, ``Color``, ``Rect2``, and "
"``Quaternion``."
msgstr ""
"** தரவு வகைகள்: ** சாதொபொகு ஒரு வரையறுக்கப்பட்ட தரவு வகைகளை மட்டுமே வழங்குகிறது. "
"சாதொபொகு இல்லாத தரவு வகைகள் உங்களிடம் இருந்தால், உங்கள் தரவை சாதொபொகு கையாளக்கூடிய "
"வகைகளிலிருந்து மொழிபெயர்க்க வேண்டும். எடுத்துக்காட்டாக, சாதொபொகு பாகுபடுத்த முடியாத "
"சில முக்கியமான வகைகள்: `` vector2``, `` VECTOR3``, `` வண்ணம்``, `` rect2``, "
"மற்றும் `` குவாட்டர்னியன்``."

msgid ""
"**Custom logic needed for encoding/decoding:** If you have any custom "
"classes that you want to store with JSON, you will need to write your own "
"logic for encoding and decoding those classes."
msgstr ""
"**Custom தருக்கம், ஏரணம் needed க்கு encoding/decoding:** If you have any "
"தனிப்பயன் வகுப்புகள் that you want பெறுநர் store with சேசன், you will need பெறுநர் "
"write your own தருக்கம், ஏரணம் க்கு encoding and decoding those classes."

msgid "Binary serialization"
msgstr "பைனரி சீரியலைசேசன்"

msgid ""
":ref:`Binary serialization<doc_binary_serialization_api>` is an alternative "
"approach for storing game state, and you can use it with the functions "
"``get_var`` and ``store_var`` of :ref:`class_FileAccess`."
msgstr ""
":ref:`Binary serialization<doc_binary_serialization_api>` is an alternative "
"approach க்கு storing game state, and you can use it with the செயல்பாடுகள் "
"``get_var`` and ``store_var`` of :ref:`class_FileAccess`."

msgid "Binary serialization should produce smaller files than JSON."
msgstr "பைனரி சீரியலைசேசன் சாதொபொகு ஐ விட சிறிய கோப்புகளை உருவாக்க வேண்டும்."

msgid "Binary serialization can handle most common data types."
msgstr "பைனரி சீரியலைசேசன் மிகவும் பொதுவான தரவு வகைகளைக் கையாள முடியும்."

msgid ""
"Binary serialization requires less custom logic for encoding and decoding "
"custom classes."
msgstr ""
"தனிப்பயன் வகுப்புகளை குறியாக்கம் செய்வதற்கும் டிகோடி செய்வதற்கும் பைனரி சீரியலைசேசனுக்கு "
"குறைவான தனிப்பயன் வழக்கு தேவைப்படுகிறது."

msgid ""
"Note that not all properties are included. Only properties that are "
"configured with "
"the :ref:`PROPERTY_USAGE_STORAGE<class_@GlobalScope_constant_PROPERTY_USAGE_STORAGE>` "
"flag set will be serialized. You can add a new usage flag to a property by "
"overriding "
"the :ref:`_get_property_list<class_Object_private_method__get_property_list>` "
"method in your class. You can also check how property usage is configured by "
"calling ``Object._get_property_list``. "
"See :ref:`PropertyUsageFlags<enum_@GlobalScope_PropertyUsageFlags>` for the "
"possible usage flags."
msgstr ""
"எல்லா பண்புகளும் சேர்க்கப்படவில்லை என்பதை நினைவில் கொள்க. : Ref: "
"`property_usage_storage "
"<class_@globalscope_constant_property_usage_storage>` கொடி தொகுப்பு சீரியலைச் "
"செய்யப்படும். ஒரு சொத்தில் ஒரு புதிய பயன்பாட்டுக் கொடியைச் சேர்க்கலாம்: ref: "
"`_get_property_list <class_object_private_method__get_property_list>` உங்கள் "
"வகுப்பில் முறை. `` பொருள் ._செட்_பிராபர்ட்டி_லச்ட்`` ஐ அழைப்பதன் மூலம் சொத்து பயன்பாடு "
"எவ்வாறு கட்டமைக்கப்படுகிறது என்பதையும் நீங்கள் சரிபார்க்கலாம். காண்க: குறிப்பு: "
"`propertyusageflags <enum_@globalscope_propertyusageflags>` சாத்தியமான "
"பயன்பாட்டுக் கொடிகளுக்கு."
