#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "The Compositor"
msgstr "தொகுப்பாளர்"

msgid ""
"The compositor is a new feature in Godot 4 that allows control over the "
"rendering pipeline when rendering the contents of a :ref:`Viewport "
"<class_Viewport>`."
msgstr ""
"ஒரு புதிய நற்பொருத்தம் கோடோட் 4 இல் ஒரு புதிய அம்சமாகும், இது A இன் உள்ளடக்கங்களை "
"வழங்கும்போது வழங்குதல் பைப்லைன் மீது கட்டுப்படுத்த அனுமதிக்கிறது: ref: `ViewPort "
"<class_viewport>`."

msgid ""
"It can be configured on a :ref:`WorldEnvironment <class_WorldEnvironment>` "
"node where it applies to all Viewports, or it can be configured on "
"a :ref:`Camera3D <class_Camera3D>` and apply only to the Viewport using that "
"camera."
msgstr ""
"இதை ஒரு: ref: `உலக சுற்றுச்சூழல் <class_worlden சுற்றுச்சூழல்>` இது அனைத்து "
"காட்சியகங்களுக்கும் பொருந்தும் இடத்திலேயே கட்டமைக்கப்படலாம், அல்லது அதை ஒரு இல் "
"கட்டமைக்கலாம்: ref: `கேமரா 3 டி <class_camera3d>` மற்றும் அந்த கேமராவைப் பயன்படுத்தி "
"காட்சிப் பெட்டிக்கு மட்டுமே பொருந்தும்."

msgid ""
"The :ref:`Compositor <class_Compositor>` resource is used to configure the "
"compositor. To get started, create a new compositor on the appropriate node:"
msgstr ""
"தி: ரெஃப்: `இசையமைப்பாளர் <class_compositor>` இசையமைப்பாளரை உள்ளமைக்க வளம் "
"பயன்படுத்தப்படுகிறது. தொடங்க, பொருத்தமான முனையில் ஒரு புதிய இசையமைப்பாளரை "
"உருவாக்கவும்:"

msgid ""
"The compositor is currently a feature that is only supported by the Mobile "
"and Forward+ renderers."
msgstr ""
"இசையமைப்பாளர் தற்போது மொபைல் மற்றும் முன்னோக்கி+ ரெண்டரர்களால் மட்டுமே ஆதரிக்கப்படும் ஒரு "
"அம்சமாகும்."

msgid "Compositor effects"
msgstr "கூட்டு விளைவுகள்"

msgid ""
"Compositor effects allow you to insert additional logic into the rendering "
"pipeline at various stages. This is an advanced feature that requires a high "
"level of understanding of the rendering pipeline to use to its best "
"advantage."
msgstr ""
"பல்வேறு கட்டங்களில் வழங்குதல் குழாய்த்திட்டத்தில் கூடுதல் தர்க்கத்தை செருகுமாறு இசையமைப்பாளர் "
"விளைவுகள் உங்களை அனுமதிக்கின்றன. இது ஒரு மேம்பட்ட அம்சமாகும், இது வழங்குதல் பைப்லைனைப் "
"பற்றிய உயர் மட்ட புரிதல் அதன் சிறந்த நன்மைக்காகப் பயன்படுத்த வேண்டும்."

msgid ""
"As the core logic of the compositor effect is called from the rendering "
"pipeline it is important to note that this logic will thus run within the "
"thread on which rendering takes place. Care needs to be taken to ensure we "
"don't run into threading issues."
msgstr ""
"வழங்குதல் பைப்லைனில் இருந்து இசையமைப்பாளர் விளைவின் முக்கிய வழக்கு அழைக்கப்படுவதால், இந்த "
"வழக்கு வழங்குதல் நடைபெறும் நூலுக்குள் இயங்கும் என்பதைக் கவனத்தில் கொள்ள வேண்டும். நாங்கள் "
"த்ரெட்டிங் சிக்கல்களுக்குள் ஓடவில்லை என்பதை உறுதிப்படுத்த கவனமாக இருக்க வேண்டும்."

msgid ""
"To illustrate how to use compositor effects we'll create a simple post "
"processing effect that allows you to write your own shader code and apply "
"this full screen through a compute shader. You can find the finished demo "
"project `here <https://github.com/godotengine/godot-demo-projects/tree/"
"master/compute/post_shader>`_."
msgstr ""
"காம்போசிட்டர் விளைவுகளை எவ்வாறு பயன்படுத்துவது என்பதை விளக்குவதற்கு, உங்கள் சொந்த சேடர் "
"குறியீட்டை எழுதவும், இந்த முழுத் திரையை ஒரு கம்ப்யூட் சேடர் மூலம் பயன்படுத்தவும் "
"அனுமதிக்கும் எளிய இடுகை செயலாக்க விளைவை நாங்கள் உருவாக்குவோம். முடிக்கப்பட்ட டெமோ "
"திட்டத்தை நீங்கள் காணலாம் `இங்கே <https://github.com/godotengine/godot-demo-"
"projects/tree/master/compute/post_shader>` _."

msgid ""
"We start by creating a new script called ``post_process_shader.gd``. We'll "
"make this a tool script so we can see the compositor effect work in the "
"editor. We need to extend our node from :ref:`CompositorEffect "
"<class_CompositorEffect>`. We must also give our script a class name."
msgstr ""
"`` Post_process_shader.gd`` என்ற புதிய ச்கிரிப்டை உருவாக்குவதன் மூலம் தொடங்குகிறோம். "
"இதை நாங்கள் ஒரு கருவி ச்கிரிப்டாக மாற்றுவோம், எனவே கலவை விளைவு எடிட்டரில் வேலை "
"செய்வதைக் காணலாம். இதிலிருந்து நாம் எங்கள் முனையை நீட்டிக்க வேண்டும்: ref: "
"`compositoreffect <class_compositoreffect>`. எங்கள் ச்கிரிப்டுக்கு ஒரு வகுப்பு "
"பெயரையும் கொடுக்க வேண்டும்."

msgid "post_process_shader.gd"
msgstr "post_process_shader.gd"

msgid ""
"Next we're going to define a constant for our shader template code. This is "
"the boilerplate code that makes our compute shader work."
msgstr ""
"அடுத்து எங்கள் சேடர் வார்ப்புரு குறியீட்டிற்கான மாறிலி வரையறுக்கப் போகிறோம். இது எங்கள் "
"கம்ப்யூட் சேடர் வேலை செய்யும் கொதிகலன் குறியீடு ஆகும்."

msgid ""
"For more information on how compute shaders work, please check :ref:`Using "
"compute shaders <doc_compute_shaders>`."
msgstr ""
"சேடர்கள் எவ்வாறு செயல்படுகின்றன என்பது பற்றிய கூடுதல் தகவலுக்கு, தயவுசெய்து "
"சரிபார்க்கவும்: ref: `கம்ப்யூட் சேடர்களைப் பயன்படுத்துதல் <doc_compute_shaders>`."

msgid ""
"The important bit here is that for every pixel on our screen, our ``main`` "
"function is executed and inside of this we load the current color value of "
"our pixel, execute our user code, and write our modified color back to our "
"color image."
msgstr ""
"இங்கே முக்கியமான பிட் என்னவென்றால், எங்கள் திரையில் உள்ள ஒவ்வொரு பிக்சலுக்கும், எங்கள் `` "
"பிரதான`` செயல்பாடு செயல்படுத்தப்படுகிறது, இதன் உள்ளே எங்கள் பிக்சலின் தற்போதைய வண்ண "
"மதிப்பை ஏற்றுகிறோம், எங்கள் பயனர் குறியீட்டை இயக்குகிறோம், எங்கள் மாற்றியமைக்கப்பட்ட வண்ணத்தை "
"எங்கள் வண்ணத்திற்கு மீண்டும் எழுதுகிறோம் படம்."

msgid "``#COMPUTE_CODE`` gets replaced by our user code."
msgstr "``#Compute_code`` எங்கள் பயனர் குறியீட்டால் மாற்றப்படுகிறது."

msgid ""
"In order to set our user code, we need an export variable. We'll also define "
"a few script variables we'll be using:"
msgstr ""
"எங்கள் பயனர் குறியீட்டை அமைக்க, எங்களுக்கு ஏற்றுமதி மாறி தேவை. நாங்கள் பயன்படுத்தும் சில "
"ச்கிரிப்ட் மாறிகளையும் வரையறுப்போம்:"

msgid ""
"Note the use of a :ref:`Mutex <class_Mutex>` in our code. Most of our "
"implementation gets called from the rendering engine and thus runs within "
"our rendering thread."
msgstr ""
"ஒரு பயன்பாட்டைக் கவனியுங்கள்: ref: `mutex <class_mutex>` எங்கள் குறியீட்டில். எங்கள் "
"செயல்பாட்டில் பெரும்பாலானவை வழங்குதல் எஞ்சினிலிருந்து அழைக்கப்படுகின்றன, இதனால் எங்கள் "
"வழங்குதல் நூலுக்குள் இயங்கும்."

msgid ""
"We need to ensure that we set our new shader code, and mark our shader code "
"as dirty, without our render thread accessing this data at the same time."
msgstr ""
"இந்த தரவை ஒரே நேரத்தில் அணுகாமல், எங்கள் புதிய சேடர் குறியீட்டை நாங்கள் அமைத்து, எங்கள் "
"சேடர் குறியீட்டை அழுக்காகக் குறிக்கிறோம் என்பதை உறுதிப்படுத்த வேண்டும்."

msgid "Next we initialize our effect."
msgstr "அடுத்து நாங்கள் எங்கள் விளைவைத் தொடங்குகிறோம்."

msgid ""
"The main thing here is setting our ``effect_callback_type`` which tells the "
"rendering engine at what stage of the render pipeline to call our code."
msgstr ""
"இங்குள்ள முக்கிய சேதி என்னவென்றால், எங்கள் `` எஃபெக்ட்_கால்பேக்_ டைப்`` ஐ அமைப்பது, இது "
"வழங்குதல் எஞ்சினுக்கு வழங்குதல் பைப்லைனின் எந்த கட்டத்தில் எங்கள் குறியீட்டை அழைக்க வேண்டும் "
"என்று கூறுகிறது."

msgid ""
"Currently we only have access to the stages of the 3D rendering pipeline!"
msgstr "தற்போது 3D வழங்குதல் பைப்லைனின் நிலைகளுக்கு மட்டுமே அணுகல் உள்ளது!"

msgid ""
"We also get a reference to our rendering device, which will come in very "
"handy."
msgstr "எங்கள் வழங்குதல் சாதனத்தைப் பற்றிய குறிப்பையும் பெறுகிறோம், இது மிகவும் எளிது."

msgid ""
"We also need to clean up after ourselves, for this we react to the "
"``NOTIFICATION_PREDELETE`` notification:"
msgstr ""
"நாங்கள் நீங்களே தூய்மை செய்ய வேண்டும், ஏனென்றால் இதற்காக `` அறிவிப்பு பிடெலெட்`` "
"அறிவிப்புக்கு நாங்கள் எதிர்வினையாற்றுகிறோம்:"

msgid ""
"Note that we do not use our mutex here even though we create our shader "
"inside of our render thread. The methods on our rendering server are thread "
"safe and ``free_rid`` will be postponed cleaning up the shader until after "
"any frames currently being rendered are finished."
msgstr ""
"எங்கள் வழங்குதல் நூலுக்குள் எங்கள் சேடரை உருவாக்கினாலும் நாங்கள் இங்கே எங்கள் மியூடெக்சைப் "
"பயன்படுத்தவில்லை என்பதை நினைவில் கொள்க. எங்கள் வழங்குதல் சேவையகத்தில் உள்ள முறைகள் நூல் "
"பாதுகாப்பானவை, தற்போது வழங்கப்படும் எந்த பிரேம்களும் முடிந்ததும் `` ஃப்ரீ_ரிட்`` நிழலை "
"தூய்மை செய்வதை ஒத்திவைக்கப்படும்."

msgid ""
"Also note that we are not freeing our pipeline. The rendering device does "
"dependency tracking and as the pipeline is dependent on the shader, it will "
"be automatically freed when the shader is destructed."
msgstr ""
"நாங்கள் எங்கள் குழாய்த்திட்டத்தை விடுவிக்கவில்லை என்பதையும் நினைவில் கொள்க. வழங்குதல் சாதனம் "
"சார்பு கண்காணிப்பைச் செய்கிறது மற்றும் குழாய் நிழலைப் பொறுத்தது என்பதால், சேடர் "
"அழிக்கப்படும் போது அது தானாகவே விடுவிக்கப்படும்."

msgid "From this point onwards our code will run on the rendering thread."
msgstr "இந்த கட்டத்தில் இருந்து எங்கள் குறியீடு வழங்குதல் நூலில் இயங்கும்."

msgid ""
"Our next step is a helper function that will recompile the shader if the "
"user code was changed."
msgstr ""
"எங்கள் அடுத்த கட்டம் ஒரு உதவி செயல்பாடு, இது பயனர் குறியீடு மாற்றப்பட்டால் சேடரை மீண்டும் "
"தொகுக்கும்."

msgid ""
"At the top of this method we again use our mutex to protect accessing our "
"user shader code and our is dirty flag. We make a local copy of the user "
"shader code if our user shader code is dirty."
msgstr ""
"இந்த முறையின் மேற்புறத்தில், எங்கள் பயனர் சேடர் குறியீட்டை அணுகுவதைப் பாதுகாக்க மீண்டும் "
"எங்கள் மியூடெக்சைப் பயன்படுத்துகிறோம், மேலும் எங்கள் அழுக்கு கொடி. எங்கள் பயனர் சேடர் "
"குறியீடு அழுக்காக இருந்தால் பயனர் சேடர் குறியீட்டின் உள்ளக நகலை உருவாக்குகிறோம்."

msgid ""
"If we don't have a new code fragment, we return true if we already have a "
"valid pipeline."
msgstr ""
"எங்களிடம் புதிய குறியீடு துண்டு இல்லையென்றால், ஏற்கனவே சரியான குழாய் இருந்தால் நாங்கள் "
"உண்மையாகத் திரும்புவோம்."

msgid ""
"If we do have a new code fragment we embed it in our template code and then "
"compile it."
msgstr ""
"எங்களிடம் ஒரு புதிய குறியீடு துண்டு இருந்தால், அதை எங்கள் வார்ப்புரு குறியீட்டில் "
"உட்பொதித்து தொகுக்கவும்."

msgid ""
"The code shown here compiles our new code in runtime. This is great for "
"prototyping as we can immediately see the effect of the changed shader."
msgstr ""
"இங்கே காட்டப்பட்டுள்ள குறியீடு எங்கள் புதிய குறியீட்டை இயக்க நேரத்தில் தொகுக்கிறது. "
"மாற்றப்பட்ட சேடரின் விளைவை நாம் உடனடியாகக் காண முடியும் என்பதால் இது முன்மாதிரிக்கு "
"சிறந்தது."

msgid ""
"This prevents precompiling and caching this shader which may be an issues on "
"some platforms such as consoles. Note that the demo project comes with an "
"alternative example where a ``glsl`` file contains the entire compute shader "
"and this is used. Godot is able to precompile and cache the shader with this "
"approach."
msgstr ""
"இது இந்த சேடரை முன்கூட்டியே தொகுத்தல் மற்றும் தற்காலிக சேமிப்பைத் தடுக்கிறது, இது "
"கன்சோல்கள் போன்ற சில தளங்களில் சிக்கலாக இருக்கலாம். டெமோ திட்டம் ஒரு மாற்று உதாரணத்துடன் "
"வருகிறது என்பதை நினைவில் கொள்க, அங்கு ஒரு `` சி.எல்.எச்.எல்`` கோப்பில் முழு கம்ப்யூட் "
"சேடரும் உள்ளது, இது பயன்படுத்தப்படுகிறது. இந்த அணுகுமுறையால் கோடோட் சேடரை முன்கூட்டியே "
"மற்றும் கேச் செய்ய முடிகிறது."

msgid ""
"Finally we need to implement our effect callback, the rendering engine will "
"call this at the right stage of rendering."
msgstr ""
"இறுதியாக எங்கள் விளைவு கால்பேக்கை நாம் செயல்படுத்த வேண்டும், வழங்குதல் எஞ்சின் இதை "
"வழங்குதல் சரியான கட்டத்தில் அழைக்கும்."

msgid ""
"At the start of this method we check if we have a rendering device, if our "
"callback type is the correct one, and check if we have our shader."
msgstr ""
"இந்த முறையின் தொடக்கத்தில், எங்களிடம் வழங்குதல் சாதனம் இருக்கிறதா என்று சரிபார்க்கிறோம், "
"எங்கள் கால்பேக் வகை சரியானதாக இருந்தால், எங்கள் சேடர் இருக்கிறதா என்று சரிபார்க்கவும்."

msgid ""
"The check for the effect type is only a safety mechanism. We've set this in "
"our ``_init`` function, however it is possible for the user to change this "
"in the UI."
msgstr ""
"விளைவு வகைக்கான காசோலை ஒரு பாதுகாப்பு வழிமுறை மட்டுமே. இதை எங்கள் `` _init`` "
"செயல்பாட்டில் அமைத்துள்ளோம், இருப்பினும் பயனருக்கு இதை இடைமுகம் இல் மாற்ற முடியும்."

msgid ""
"Our ``p_render_data`` parameter gives us access to an object that holds data "
"specific to the frame we're currently rendering. We're currently only "
"interested in our render scene buffers, which provide us access to all the "
"internal buffers used by the rendering engine. Note that we cast this "
"to :ref:`RenderSceneBuffersRD <class_RenderSceneBuffersRD>` to expose the "
"full API to this data."
msgstr ""
"எங்கள் `` p_render_data`` அளவுரு நாம் தற்போது வழங்கும் சட்டகத்திற்கு குறிப்பிட்ட தரவை "
"வைத்திருக்கும் ஒரு பொருளுக்கு அணுகலை வழங்குகிறது. எங்கள் வழங்குதல் காட்சி இடையகங்களில் "
"மட்டுமே நாங்கள் ஆர்வமாக உள்ளோம், இது வழங்குதல் எஞ்சின் பயன்படுத்தும் அனைத்து உள் "
"இடையகங்களுக்கும் அணுகலை வழங்குகிறது. இதை நாங்கள் இதற்கு அனுப்புகிறோம் என்பதை நினைவில் "
"கொள்க: குறிப்பு: `renderscenebuffersrd <class_renderscenebuffersrd>` இந்த "
"தரவுக்கு முழு பநிஇ ஐ அம்பலப்படுத்த."

msgid ""
"Next we obtain our ``internal size`` which is the resolution of our 3D "
"render buffers before they are upscaled (if applicable), upscaling happens "
"after our post processes have run."
msgstr ""
"அடுத்து, எங்கள் `` உள் அளவு`` ஐப் பெறுகிறோம், இது எங்கள் 3D வழங்குதல் இடையகங்களை "
"உயர்த்துவதற்கு முன்பு (பொருந்தினால்) தீர்மானிக்கிறது (பொருந்தினால்), எங்கள் இடுகை "
"செயல்முறைகள் இயங்கிய பிறகு அதிகரிப்பு நிகழ்கிறது."

msgid ""
"From our internal size we calculate our group size, see our local size in "
"our template shader."
msgstr ""
"எங்கள் உள் அளவிலிருந்து நாங்கள் எங்கள் குழு அளவைக் கணக்கிடுகிறோம், எங்கள் வார்ப்புரு சேடரில் "
"எங்கள் உள்ளக அளவைக் காண்க."

msgid ""
"We also populate our push constant so our shader knows our size. Godot does "
"not support structs here **yet** so we use a ``PackedFloat32Array`` to store "
"this data into. Note that we have to pad this array with a 16 byte "
"alignment. In other words, the length of our array needs to be a multiple of "
"4."
msgstr ""
"நாங்கள் எங்கள் புச் மாறிலியையும் விரிவுபடுத்துகிறோம், எனவே எங்கள் சேடருக்கு எங்கள் அளவு "
"தெரியும். கோடோட் இங்கே கட்டமைப்புகளை ஆதரிக்கவில்லை ** இன்னும் ** எனவே இந்தத் தரவைச் "
"சேமிக்க `` பேக்ஃப்ளோட் 32ARRAY`` ஐப் பயன்படுத்துகிறோம். இந்த வரிசையை 16 பைட் சீரமைப்புடன் "
"நாம் திணிக்க வேண்டும் என்பதை நினைவில் கொள்க. வேறு வார்த்தைகளில் கூறுவதானால், எங்கள் "
"வரிசையின் நீளம் 4 இன் பெருக்கமாக இருக்க வேண்டும்."

msgid ""
"Now we loop through our views, this is in case we're using multiview "
"rendering which is applicable for stereo rendering (XR). In most cases we "
"will only have one view."
msgstr ""
"இப்போது நாங்கள் எங்கள் கருத்துக்களைக் கொண்டுள்ளோம், இது ச்டீரியோ வழங்குதல் (எக்ச்ஆர்) க்கு "
"பொருந்தக்கூடிய மல்டிவியூ வழங்குதல் பயன்படுத்தினால் இது. பெரும்பாலான சந்தர்ப்பங்களில் "
"எங்களுக்கு ஒரே ஒரு பார்வை மட்டுமே இருக்கும்."

msgid ""
"There is no performance benefit to use multiview for post processing here, "
"handling the views separately like this will still enable the GPU to use "
"parallelism if beneficial."
msgstr ""
"இங்கே பிந்தைய செயலாக்கத்திற்கு மல்டிவியூவை பயன்படுத்த செயல்திறன் நன்மை இல்லை, இது போன்ற "
"காட்சிகளை தனித்தனியாகக் கையாள்வது சி.பீ.யை நன்மை பயக்கும் என்றால் இணையான தன்மையைப் "
"பயன்படுத்த உதவும்."

msgid ""
"Next we obtain the color buffer for this view. This is the buffer into which "
"our 3D scene has been rendered."
msgstr ""
"அடுத்து இந்த பார்வைக்கு வண்ண இடையகத்தைப் பெறுகிறோம். எங்கள் 3D காட்சி வழங்கப்பட்ட "
"இடையகமாகும்."

msgid ""
"We then prepare a uniform set so we can communicate the color buffer to our "
"shader."
msgstr ""
"நாங்கள் ஒரு சீரான தொகுப்பை ஆயத்தம் செய்கிறோம், எனவே வண்ண இடையகத்தை எங்கள் சேடருக்கு "
"தொடர்பு கொள்ளலாம்."

msgid ""
"Note the use of our :ref:`UniformSetCacheRD <class_UniformSetCacheRD>` cache "
"which ensures we can check for our uniform set each frame. As our color "
"buffer can change from frame to frame and our uniform cache will "
"automatically clean up uniform sets when buffers are freed, this is the safe "
"way to ensure we do not leak memory or use an outdated set."
msgstr ""
"எங்கள் பயன்பாட்டைக் கவனியுங்கள்: ref: `intiformsetcacherd <class_uniformetCacherd>` "
"கேச், இது ஒவ்வொரு சட்டத்தையும் எங்கள் சீரான தொகுப்பைச் சரிபார்க்க முடியும் என்பதை உறுதி "
"செய்கிறது. எங்கள் வண்ண இடையகம் சட்டத்திலிருந்து சட்டகத்திற்கு மாறக்கூடும், மேலும் இடையகங்கள் "
"விடுவிக்கப்படும்போது எங்கள் சீரான தற்காலிக சேமிப்பு தானாகவே சீரான தொகுப்புகளை தூய்மை "
"செய்யும் என்பதால், நாங்கள் நினைவகத்தை கசியவிடாமல் அல்லது காலாவதியான தொகுப்பைப் "
"பயன்படுத்தவில்லை என்பதை உறுதிப்படுத்த இது பாதுகாப்பான வழியாகும்."

msgid ""
"Finally we build our compute list by binding our pipeline, binding our "
"uniform set, pushing our push constant data, and calling dispatch for our "
"groups."
msgstr ""
"இறுதியாக எங்கள் குழாய்த்திட்டத்தை பிணைப்பதன் மூலமும், எங்கள் சீரான தொகுப்பை பிணைப்பதன் "
"மூலமும், எங்கள் புச் நிலையான தரவைத் தள்ளுவதன் மூலமும், எங்கள் குழுக்களுக்கு அனுப்புவதை "
"அழைப்பதன் மூலமும் எங்கள் கம்ப்யூட் பட்டியலை உருவாக்குகிறோம்."

msgid ""
"With our compositor effect completed, we now need to add it to our "
"compositor."
msgstr ""
"எங்கள் இசையமைப்பாளர் விளைவு முடிந்தவுடன், இப்போது அதை எங்கள் இசையமைப்பாளரிடம் சேர்க்க "
"வேண்டும்."

msgid ""
"On our compositor we expand the compositor effects property and press ``Add "
"Element``."
msgstr ""
"எங்கள் இசையமைப்பாளரில் நாங்கள் கலவை விளைவுகள் சொத்தை விரிவுபடுத்தி `` உறுப்பைச் சேர்`` ஐ "
"அழுத்துகிறோம்."

msgid "Now we can add our compositor effect:"
msgstr "இப்போது நாம் எங்கள் கலவை விளைவைச் சேர்க்கலாம்:"

msgid ""
"After selecting our ``PostProcessShader`` we need to set our user shader "
"code:"
msgstr ""
"எங்கள் `` இடுகை செயல்முறை சேடரைத் தேர்ந்தெடுத்த பிறகு, உங்கள் பயனர் சேடர் குறியீட்டை "
"நாங்கள் அமைக்க வேண்டும்:"

msgid "With that all done, our output is in grayscale."
msgstr "அதையெல்லாம் செய்து முடித்தால், எங்கள் வெளியீடு கிரேச்கேலில் உள்ளது."

msgid ""
"For a more advanced example of post effects, check out the `Radial blur "
"based sky rays <https://github.com/BastiaanOlij/RERadialSunRays>`_ example "
"project created by Bastiaan Olij."
msgstr ""
"பிந்தைய விளைவுகளுக்கு மிகவும் மேம்பட்ட எடுத்துக்காட்டுக்கு, `ரேடியல் மங்கலான "
"அடிப்படையிலான வான கதிர்கள் <https://github.com/bastiaanolij/reeradialsunrays>` "
"_ பாச்டியான் ஓலிச் உருவாக்கிய எடுத்துக்காட்டு திட்டத்தைப் பாருங்கள்."
