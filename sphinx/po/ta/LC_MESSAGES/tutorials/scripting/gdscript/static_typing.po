#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Static typing in GDScript"
msgstr "GDSCRIPT இல் நிலையான தட்டச்சு"

msgid "In this guide, you will learn:"
msgstr "இந்த வழிகாட்டியில், நீங்கள் கற்றுக்கொள்வீர்கள்:"

msgid "how to use static typing in GDScript;"
msgstr "GDSCRIPT இல் நிலையான தட்டச்சு எவ்வாறு பயன்படுத்துவது;"

msgid "that static types can help you avoid bugs;"
msgstr "பிழைகள் தவிர்க்க அந்த நிலையான வகைகள் உங்களுக்கு உதவும்;"

msgid "that static typing improves your experience with the editor."
msgstr "அந்த நிலையான தட்டச்சு எடிட்டருடனான உங்கள் அனுபவத்தை மேம்படுத்துகிறது."

msgid ""
"Where and how you use this language feature is entirely up to you: you can "
"use it only in some sensitive GDScript files, use it everywhere, or don't "
"use it at all."
msgstr ""
"இந்த மொழி அம்சத்தை நீங்கள் எங்கே, எப்படி பயன்படுத்துகிறீர்கள் என்பது முற்றிலும் உங்களுடையது: "
"நீங்கள் இதை சில உணர்திறன் வாய்ந்த சி.டி.எச்ச்கிரிப்ட் கோப்புகளில் மட்டுமே பயன்படுத்தலாம், "
"எல்லா இடங்களிலும் பயன்படுத்தலாம், அல்லது அதைப் பயன்படுத்த வேண்டாம்."

msgid ""
"Static types can be used on variables, constants, functions, parameters, and "
"return types."
msgstr ""
"நிலையான வகைகளை மாறிகள், மாறிலிகள், செயல்பாடுகள், அளவுருக்கள் மற்றும் திரும்பும் "
"வகைகளில் பயன்படுத்தலாம்."

msgid "A brief look at static typing"
msgstr "நிலையான தட்டச்சு குறித்த சுருக்கமான பார்வை"

msgid ""
"With static typing, GDScript can detect more errors without even running the "
"code. Also type hints give you and your teammates more information as you're "
"working, as the arguments' types show up when you call a method. Static "
"typing improves editor autocompletion and :ref:`documentation "
"<doc_gdscript_documentation_comments>` of your scripts."
msgstr ""
"நிலையான தட்டச்சு மூலம், GDSCRIPT குறியீட்டை இயக்காமல் அதிக பிழைகளைக் கண்டறிய முடியும். "
"நீங்கள் ஒரு முறையை அழைக்கும்போது வாதங்களின் வகைகள் காண்பிக்கப்படுவதால், நீங்கள் பணிபுரியும் "
"போது தட்டச்சு குறிப்புகள் உங்களுக்கும் உங்கள் குழு உறுப்பினர்களுக்கும் கூடுதல் தகவல்களைத் "
"தருகின்றன. நிலையான தட்டச்சு எடிட்டர் தன்னியக்கவியல் மற்றும்: ref: `ஆவணங்கள் "
"<doc_gdscript_documentation_comments>` உங்கள் ச்கிரிப்ட்களின் `."

msgid ""
"Imagine you're programming an inventory system. You code an ``Item`` class, "
"then an ``Inventory``. To add items to the inventory, the people who work "
"with your code should always pass an ``Item`` to the ``Inventory.add()`` "
"method. With types, you can enforce this::"
msgstr ""
"நீங்கள் ஒரு சரக்கு அமைப்பை நிரலாக்குகிறீர்கள் என்று கற்பனை செய்து பாருங்கள். நீங்கள் ஒரு `` "
"உருப்படி`` வகுப்பைக் குறியிடுகிறீர்கள், பின்னர் ஒரு `` சரக்கு``. சரக்குகளில் "
"உருப்படிகளைச் சேர்க்க, உங்கள் குறியீட்டோடு பணிபுரியும் நபர்கள் எப்போதும் `` உருப்படி`` ஐ "
"`` சரக்குகள். கூட்டு () `` முறைக்கு அனுப்ப வேண்டும். வகைகளுடன், நீங்கள் இதைச் "
"செயல்படுத்தலாம் ::"

msgid ""
"Static types also give you better code completion options. Below, you can "
"see the difference between a dynamic and a static typed completion options."
msgstr ""
"நிலையான வகைகள் உங்களுக்கு சிறந்த குறியீடு நிறைவு விருப்பங்களையும் வழங்குகின்றன. கீழே, "
"ஒரு மாறும் மற்றும் நிலையான தட்டச்சு செய்யப்பட்ட நிறைவு விருப்பங்களுக்கு இடையிலான "
"வித்தியாசத்தை நீங்கள் காணலாம்."

msgid ""
"You've probably encountered a lack of autocomplete suggestions after a dot:"
msgstr ""
"ஒரு புள்ளிக்குப் பிறகு தன்னியக்கவியல் பரிந்துரைகளின் பற்றாக்குறையை நீங்கள் சந்தித்திருக்கலாம்:"

msgid "Completion options for dynamic typed code."
msgstr "மாறும் தட்டச்சு செய்யப்பட்ட குறியீட்டிற்கான நிறைவு விருப்பங்கள்."

msgid ""
"This is due to dynamic code. Godot cannot know what value type you're "
"passing to the function. If you write the type explicitly however, you will "
"get all methods, properties, constants, etc. from the value:"
msgstr ""
"இது மாறும் குறியீடு காரணமாகும். நீங்கள் செயல்பாட்டிற்கு எந்த மதிப்பு வகையை கடந்து "
"செல்கிறீர்கள் என்று கோடோட் அறிய முடியாது. இருப்பினும் நீங்கள் வகையை வெளிப்படையாக "
"எழுதினால், மதிப்பிலிருந்து அனைத்து முறைகள், பண்புகள், மாறிலிகள் போன்றவற்றைப் பெறுவீர்கள்:"

msgid "Completion options for static typed code."
msgstr "நிலையான தட்டச்சு செய்யப்பட்ட குறியீட்டிற்கான நிறைவு விருப்பங்கள்."

msgid ""
"If you prefer static typing, we recommend enabling the **Text Editor > "
"Completion > Add Type Hints** editor setting. Also consider enabling `some "
"warnings <Warning system_>`_ that are disabled by default."
msgstr ""
"நீங்கள் நிலையான தட்டச்சு விரும்பினால், ** உரை எடிட்டர்> நிறைவு> வகை குறிப்புகளைச் சேர் "
"** எடிட்டர் அமைப்பை இயக்க பரிந்துரைக்கிறோம். இயல்புநிலையாக முடக்கப்பட்ட `சில எச்சரிக்கைகள் "
"<எச்சரிக்கை அமைப்பு_>` _ ஐ இயக்குவதையும் கருத்தில் கொள்ளுங்கள்."

msgid ""
"Also, typed GDScript improves performance by using optimized opcodes when "
"operand/argument types are known at compile time. More GDScript "
"optimizations are planned in the future, such as JIT/AOT compilation."
msgstr ""
"மேலும், தட்டச்சு செய்யப்பட்ட GDSCRIPT தொகுக்கும் நேரத்தில் செயல்படும் போது உகந்த OPCodes "
"ஐப் பயன்படுத்துவதன் மூலம் செயல்திறனை மேம்படுத்துகிறது. JIT/AOT தொகுப்பு போன்ற "
"எதிர்காலத்தில் மேலும் GDSCRIPT மேம்படுத்தல்கள் திட்டமிடப்பட்டுள்ளன."

msgid ""
"Overall, typed programming gives you a more structured experience. It helps "
"prevent errors and improves the self-documenting aspect of your scripts. "
"This is especially helpful when you're working in a team or on a long-term "
"project: studies have shown that developers spend most of their time reading "
"other people's code, or scripts they wrote in the past and forgot about. The "
"clearer and the more structured the code, the faster it is to understand, "
"the faster you can move forward."
msgstr ""
"ஒட்டுமொத்தமாக, தட்டச்சு செய்யப்பட்ட நிரலாக்கமானது உங்களுக்கு மிகவும் கட்டமைக்கப்பட்ட "
"அனுபவத்தை வழங்குகிறது. இது பிழைகளைத் தடுக்க உதவுகிறது மற்றும் உங்கள் ச்கிரிப்ட்களின் சுய-"
"ஆவணப்படுத்தல் அம்சத்தை மேம்படுத்துகிறது. நீங்கள் ஒரு குழுவில் அல்லது நீண்ட கால திட்டத்தில் "
"பணிபுரியும் போது இது மிகவும் உதவியாக இருக்கும்: உருவாக்குபவர்கள் மற்றவர்களின் "
"குறியீட்டைப் படிக்க அல்லது கடந்த காலத்தில் அவர்கள் எழுதிய ச்கிரிப்ட்களைப் படித்து "
"மறந்துவிட்டதாக ஆய்வுகள் தெரிவிக்கின்றன. தெளிவான மற்றும் மிகவும் கட்டமைக்கப்பட்ட குறியீடு, "
"விரைவாக புரிந்துகொள்வது, வேகமாக நீங்கள் முன்னேற முடியும்."

msgid "How to use static typing"
msgstr "நிலையான தட்டச்சு எவ்வாறு பயன்படுத்துவது"

msgid ""
"To define the type of a variable, parameter, or constant, write a colon "
"after the name, followed by its type. E.g. ``var health: int``. This forces "
"the variable's type to always stay the same::"
msgstr ""
"ஒரு மாறி, அளவுரு அல்லது மாறிலியின் வகையை வரையறுக்க, பெயருக்குப் பிறகு ஒரு "
"பெருங்குடலை எழுதுங்கள், அதைத் தொடர்ந்து அதன் வகை. எ.கா. `` var உடல்நலம்: int``. இது "
"எப்போதும் ஒரே மாதிரியாக இருக்க மாறியின் வகையை கட்டாயப்படுத்துகிறது ::"

msgid ""
"Godot will try to infer types if you write a colon, but you omit the type::"
msgstr ""
"நீங்கள் ஒரு பெருங்குடல் எழுதினால் கோடோட் வகைகளை ஊகிக்க முயற்சிப்பார், ஆனால் நீங்கள் வகையைத் "
"தவிர்க்கவும் ::"

msgid "There is no difference between ``=`` and ``:=`` for constants."
msgstr "`` = `` மற்றும் ``: = `` ஆகியவற்றுக்கு இடையே எந்த வித்தியாசமும் இல்லை."

msgid ""
"You don't need to write type hints for constants, as Godot sets it "
"automatically from the assigned value. But you can still do so to make the "
"intent of your code clearer. Also, this is useful for typed arrays (like "
"``const A: Array[int] = [1, 2, 3]``), since untyped arrays are used by "
"default."
msgstr ""
"கோடோட் அதை ஒதுக்கப்பட்ட மதிப்பிலிருந்து தானாக அமைக்கும் என்பதால், மாறிலிகளுக்கான வகை "
"குறிப்புகளை நீங்கள் எழுதத் தேவையில்லை. ஆனால் உங்கள் குறியீட்டின் நோக்கத்தை "
"தெளிவுபடுத்துவதற்கு நீங்கள் இன்னும் அவ்வாறு செய்யலாம். மேலும், இது தட்டச்சு செய்யப்பட்ட "
"வரிசைகளுக்கு பயனுள்ளதாக இருக்கும் (`` const a: வரிசை [int] = [1, 2, 3] ``), "
"ஏனெனில் இயல்புநிலையாக பயன்படுத்தப்படாத வரிசைகள் பயன்படுத்தப்படுகின்றன."

msgid "What can be a type hint"
msgstr "ஒரு வகை குறிப்பு என்னவாக இருக்கும்"

msgid "Here is a complete list of what can be used as a type hint:"
msgstr "ஒரு வகை குறிப்பாக பயன்படுத்தக்கூடியவற்றின் முழுமையான பட்டியல் இங்கே:"

msgid ""
"``Variant``. Any type. In most cases this is not much different from an "
"untyped declaration, but increases readability. As a return type, forces the "
"function to explicitly return some value."
msgstr ""
"`` மாறுபாடு``. எந்த வகை. பெரும்பாலான சந்தர்ப்பங்களில் இது ஒரு அறிவிக்கப்படாத "
"அறிவிப்பிலிருந்து மிகவும் வேறுபட்டதல்ல, ஆனால் வாசிப்புத்திறனை அதிகரிக்கிறது. திரும்பும் "
"வகையாக, சில மதிப்புகளை வெளிப்படையாக திருப்பித் தர செயல்பாட்டை கட்டாயப்படுத்துகிறது."

msgid ""
"*(Only return type)* ``void``. Indicates that the function does not return "
"any value."
msgstr ""
"* (திரும்பும் வகை)* `` வெற்றிடத்தை``. செயல்பாடு எந்த மதிப்பையும் திருப்பித் தராது "
"என்பதைக் குறிக்கிறது."

msgid ":ref:`Built-in types <doc_gdscript_builtin_types>`."
msgstr ": குறிப்பு: `உள்ளமைக்கப்பட்ட வகைகள் <doc_gdscript_builtin_types>`."

msgid "Native classes (``Object``, ``Node``, ``Area2D``, ``Camera2D``, etc.)."
msgstr ""
"சொந்த வகுப்புகள் (`` பொருள்``, `` முனை``, `` ஏரியா 2 டி``, `` கேமரா 2 டி`` "
"போன்றவை)."

msgid ":ref:`Global classes <doc_gdscript_basics_class_name>`."
msgstr ": குறிப்பு: `உலகளாவிய வகுப்புகள் <doc_gdscript_basics_class_name>`."

msgid ":ref:`Inner classes <doc_gdscript_basics_inner_classes>`."
msgstr ": குறிப்பு: `உள் வகுப்புகள் <doc_gdscript_basics_inner_classes>`."

msgid ""
"Global, native and custom named enums. Note that an enum type is just an "
"``int``, there is no guarantee that the value belongs to the set of enum "
"values."
msgstr ""
"உலகளாவிய, பூர்வீக மற்றும் தனிப்பயன் என பெயரிடப்பட்டது. ஒரு enum வகை என்பது ஒரு `` "
"int`` என்பதை நினைவில் கொள்க, மதிப்பு ENUM மதிப்புகளின் தொகுப்பிற்கு சொந்தமானது "
"என்பதற்கு எந்த உத்தரவாதமும் இல்லை."

msgid ""
"Constants (including local ones) if they contain a preloaded class or enum."
msgstr ""
"மாறிலிகள் (உள்ளூர் உட்பட) அவை முன்பே ஏற்றப்பட்ட வகுப்பு அல்லது enum ஐக் கொண்டிருந்தால்."

msgid ""
"You can use any class, including your custom classes, as types. There are "
"two ways to use them in scripts. The first method is to preload the script "
"you want to use as a type in a constant::"
msgstr ""
"உங்கள் தனிப்பயன் வகுப்புகள் உட்பட எந்த வகுப்பையும் வகைகளாகப் பயன்படுத்தலாம். ச்கிரிப்ட்களில் "
"அவற்றைப் பயன்படுத்த இரண்டு வழிகள் உள்ளன. முதல் முறை நீங்கள் ஒரு மாறிலியில் ஒரு வகையாகப் "
"பயன்படுத்த விரும்பும் ச்கிரிப்டை முன்பே ஏற்றுவதாகும் ::"

msgid ""
"The second method is to use the ``class_name`` keyword when you create. For "
"the example above, your ``rifle.gd`` would look like this::"
msgstr ""
"இரண்டாவது முறை நீங்கள் உருவாக்கும்போது `` class_name`` முக்கிய சொல்லைப் பயன்படுத்துவது. "
"மேலே உள்ள எடுத்துக்காட்டுக்கு, உங்கள் `` rifle.gd`` இப்படி இருக்கும் ::"

msgid ""
"If you use ``class_name``, Godot registers the ``Rifle`` type globally in "
"the editor, and you can use it anywhere, without having to preload it into a "
"constant::"
msgstr ""
"நீங்கள் `` class_name`` ஐப் பயன்படுத்தினால், கோடோட் உலகளவில் `` துப்பாக்கி` `வகையை "
"எடிட்டரில் பதிவுசெய்கிறார், மேலும் அதை ஒரு நிலையானதாக ஏற்றாமல், அதை எங்கும் "
"பயன்படுத்தலாம் ::"

msgid "Specify the return type of a function with the arrow ``->``"
msgstr "அம்புக்குறியுடன் ஒரு செயல்பாட்டின் வருவாய் வகையைக் குறிப்பிடவும் `->` `"

msgid ""
"To define the return type of a function, write a dash and a right angle "
"bracket ``->`` after its declaration, followed by the return type::"
msgstr ""
"ஒரு செயல்பாட்டின் வருவாய் வகையை வரையறுக்க, ஒரு கோடு மற்றும் வலது கோண அடைப்புக்குறியை "
"எழுதுங்கள் ``-> `` அதன் அறிவிப்புக்குப் பிறகு, திரும்பும் வகை ::"

msgid ""
"The type ``void`` means the function does not return anything. You can use "
"any type, as with variables::"
msgstr ""
"`` வெற்றிடத்தை` வகை என்பது செயல்பாடு எதையும் திருப்பித் தராது. மாறிகள் போல நீங்கள் எந்த "
"வகையையும் பயன்படுத்தலாம் ::"

msgid "You can also use your own classes as return types::"
msgstr "உங்கள் சொந்த வகுப்புகளையும் திரும்ப வகைகளாகவும் பயன்படுத்தலாம் ::"

msgid "Covariance and contravariance"
msgstr "கோவாரன்ச் மற்றும் முரண்பாடு"

msgid ""
"When inheriting base class methods, you should follow the `Liskov "
"substitution principle <https://en.wikipedia.org/wiki/"
"Liskov_substitution_principle>`__."
msgstr ""
"அடிப்படை வகுப்பு முறைகளைப் பெறும்போது, நீங்கள் `லிச்கோவ் மாற்றுக் கொள்கையை <https://"
"en.wikipedia.org/wiki/liskov_substitution_principle> ____ ஐப் பின்பற்ற வேண்டும்."

msgid ""
"**Covariance:** When you inherit a method, you can specify a return type "
"that is more specific (**subtype**) than the parent method."
msgstr ""
"** கோவாரன்ச்: ** நீங்கள் ஒரு முறையைப் பெறும்போது, பெற்றோர் முறையை விட குறிப்பிட்ட (** "
"துணை வகை **) திரும்பும் வகையை நீங்கள் குறிப்பிடலாம்."

msgid ""
"**Contravariance:** When you inherit a method, you can specify a parameter "
"type that is less specific (**supertype**) than the parent method."
msgstr ""
"** முரண்பாடு: ** நீங்கள் ஒரு முறையைப் பெறும்போது, பெற்றோர் முறையை விட குறைவான "
"குறிப்பிட்ட (** சூப்பர் டைப் **) ஒரு அளவுரு வகையை நீங்கள் குறிப்பிடலாம்."

msgid "Example::"
msgstr "எடுத்துக்காட்டு ::"

msgid "Specify the element type of an ``Array``"
msgstr "ஒரு `` வரிசை`` இன் உறுப்பு வகையைக் குறிப்பிடவும்"

msgid "To define the type of an ``Array``, enclose the type name in ``[]``."
msgstr "`` வரிசை`` வகையை வரையறுக்க, வகை பெயரை `` [] `` இல் இணைக்கவும்."

msgid ""
"An array's type applies to ``for`` loop variables, as well as some operators "
"like ``[]``, ``[]=``, and ``+``. Array methods (such as ``push_back``) and "
"other operators (such as ``==``) are still untyped. Built-in types, native "
"and custom classes, and enums may be used as element types. Nested array "
"types (like ``Array[Array[int]]``) are not supported."
msgstr ""
"ஒரு வரிசையின் வகை ``` வளைய மாறிகள் மற்றும்` `[]` `,` `[] =` `, மற்றும்` `+` `போன்ற "
"சில ஆபரேட்டர்களுக்கும் பொருந்தும். வரிசை முறைகள் (`` புச்_பேக்`` போன்றவை) மற்றும் பிற "
"ஆபரேட்டர்கள் (`` == `` போன்றவை) இன்னும் குறைக்கப்படவில்லை. உள்ளமைக்கப்பட்ட வகைகள், சொந்த "
"மற்றும் தனிப்பயன் வகுப்புகள் மற்றும் ENUM கள் உறுப்பு வகைகளாகப் பயன்படுத்தப்படலாம். "
"உள்ளமைக்கப்பட்ட வரிசை வகைகள் (`` வரிசை [வரிசை [int]] `` போன்றவை) ஆதரிக்கப்படவில்லை."

msgid ""
"Since Godot 4.2, you can also specify a type for the loop variable in a "
"``for`` loop. For instance, you can write::"
msgstr ""
"கோடோட் 4.2 என்பதால், லூப் மாறிக்கான ஒரு வகையை `` `வளையத்தில் குறிப்பிடலாம். உதாரணமாக, "
"நீங்கள் எழுதலாம் ::"

msgid ""
"The array will remain untyped, but the ``name`` variable within the ``for`` "
"loop will always be of ``String`` type."
msgstr ""
"வரிசை வெட்டப்படாமல் இருக்கும், ஆனால் `` `வளையத்திற்குள் உள்ள` `பெயர்`` எப்போதும்` `சரம்`` "
"வகையாக இருக்கும்."

msgid "Type casting"
msgstr "வார்ப்பு தட்டச்சு"

msgid ""
"Type casting is an important concept in typed languages. Casting is the "
"conversion of a value from one type to another."
msgstr ""
"தட்டச்சு செய்யப்பட்ட மொழிகளில் வகை வார்ப்பு ஒரு முக்கியமான கருத்தாகும். வார்ப்பு என்பது "
"ஒரு மதிப்பை ஒரு வகையிலிருந்து மற்றொரு வகைக்கு மாற்றுவதாகும்."

msgid ""
"Imagine an ``Enemy`` in your game, that ``extends Area2D``. You want it to "
"collide with the ``Player``, a ``CharacterBody2D`` with a script called "
"``PlayerController`` attached to it. You use the ``body_entered`` signal to "
"detect the collision. With typed code, the body you detect is going to be a "
"generic ``PhysicsBody2D``, and not your ``PlayerController`` on the "
"``_on_body_entered`` callback."
msgstr ""
"உங்கள் விளையாட்டில் ஒரு `` எதிரி`` ஐ கற்பனை செய்து பாருங்கள், அது `` ஏரியா 2 டி`` ஐ "
"நீட்டிக்கிறது. `` பிளேயர்``, ஒரு `` `` `பிளேயர்கண்ட்ரோலர்`` என்று அழைக்கப்படும் "
"ச்கிரிப்டுடன் இது மோதிக் கொள்ள விரும்புகிறீர்கள். மோதலைக் கண்டறிய நீங்கள் `` "
"body_entered`` சமிக்ஞையைப் பயன்படுத்துகிறீர்கள். தட்டச்சு செய்த குறியீட்டைக் கொண்டு, நீங்கள் "
"கண்டறிந்த உடல் ஒரு பொதுவான `` இயற்பியல் பாடி 2 டி`` ஆக இருக்கும், ஆனால் `` "
"_ON_BODY_ENTERED`` கால்பேக்கில் உங்கள் `` Playercontroller`` அல்ல."

msgid ""
"You can check if this ``PhysicsBody2D`` is your ``Player`` with the ``as`` "
"keyword, and using the colon ``:`` again to force the variable to use this "
"type. This forces the variable to stick to the ``PlayerController`` type::"
msgstr ""
"இந்த `` இயற்பியல் பாடி 2 டி`` உங்கள் `` பிளேயர்`` என்பதை ```` முக்கிய சொல்லாக நீங்கள் "
"சரிபார்க்கலாம், மேலும் பெருங்குடலைப் பயன்படுத்துங்கள்` `:` `இந்த வகையைப் பயன்படுத்த மாறியை "
"கட்டாயப்படுத்த மீண்டும். இது `` bayercontroller`` வகை :: உடன் ஒட்டிக்கொள்ள மாறுகிறது"

msgid ""
"As we're dealing with a custom type, if the ``body`` doesn't extend "
"``PlayerController``, the ``player`` variable will be set to ``null``. We "
"can use this to check if the body is the player or not. We will also get "
"full autocompletion on the player variable thanks to that cast."
msgstr ""
"நாங்கள் தனிப்பயன் வகையுடன் கையாள்வதால், `` உடல்`` `` பிளேர்கண்ட்ரோலர்`` ஐ நீட்டிக்கவில்லை "
"என்றால், `` பிளேயர்`` மாறி `` பூச்யம்`` என அமைக்கப்படும். உடல் வீரரா இல்லையா என்பதை "
"சரிபார்க்க இதைப் பயன்படுத்தலாம். அந்த நடிகர்களுக்கு நன்றி பிளேயர் மாறியில் முழு "
"தன்னியக்கவியல் பெறுவோம்."

msgid ""
"The ``as`` keyword silently casts the variable to ``null`` in case of a type "
"mismatch at runtime, without an error/warning. While this may be convenient "
"in some cases, it can also lead to bugs. Use the ``as`` keyword only if this "
"behavior is intended. A safer alternative is to use the ``is`` keyword::"
msgstr ""
"``` 'முக்கிய சொல் ஒரு பிழை/எச்சரிக்கையின்றி, இயக்க நேரத்தில் ஒரு வகை பொருந்தாத "
"விசயத்தில் மாறியை` `NULL`` க்கு ம silent னமாக அளிக்கிறது. சில சந்தர்ப்பங்களில் இது "
"வசதியாக இருக்கும்போது, இது பிழைகளுக்கும் வழிவகுக்கும். இந்த நடத்தை நோக்கம் இருந்தால் "
"மட்டுமே `` AS`` முக்கிய சொல்லைப் பயன்படுத்தவும். ஒரு பாதுகாப்பான மாற்று `` is` முக்கிய "
"சொல் ::"

msgid "You can also simplify the code by using the ``is not`` operator::"
msgstr "`` என்பது ஆபரேட்டர் இல்லை :: ஐப் பயன்படுத்துவதன் மூலம் குறியீட்டை எளிமைப்படுத்தலாம்"

msgid "Alternatively, you can use the ``assert()`` statement::"
msgstr "மாற்றாக, நீங்கள் `` உறுதிப்படுத்தல் () `` அறிக்கை ::"

msgid ""
"If you try to cast with a built-in type and it fails, Godot will throw an "
"error."
msgstr ""
"நீங்கள் ஒரு உள்ளமைக்கப்பட்ட வகையுடன் நடிக்க முயற்சித்தால், அது தோல்வியுற்றால், கோடோட் ஒரு "
"பிழையை வீசும்."

msgid "Safe lines"
msgstr "பாதுகாப்பான கோடுகள்"

msgid ""
"You can also use casting to ensure safe lines. Safe lines are a tool to tell "
"you when ambiguous lines of code are type-safe. As you can mix and match "
"typed and dynamic code, at times, Godot doesn't have enough information to "
"know if an instruction will trigger an error or not at runtime."
msgstr ""
"பாதுகாப்பான வரிகளை உறுதிப்படுத்த நீங்கள் வார்ப்பைப் பயன்படுத்தலாம். குறியீட்டின் தெளிவற்ற "
"கோடுகள் வகை-பாதுகாப்பாக இருக்கும்போது உங்களுக்குச் சொல்ல ஒரு கருவியாகும். தட்டச்சு "
"செய்யப்பட்ட மற்றும் மாறும் குறியீட்டை நீங்கள் கலந்து பொருத்தலாம் என்பதால், சில நேரங்களில், ஒரு "
"அறிவுறுத்தல் ஒரு பிழையைத் தூண்டும் அல்லது இயக்க நேரத்தில் இல்லையா என்பதை அறிய கோடோட் "
"போதுமான தகவல்கள் இல்லை."

msgid ""
"This happens when you get a child node. Let's take a timer for example: with "
"dynamic code, you can get the node with ``$Timer``. GDScript supports `duck-"
"typing <https://stackoverflow.com/a/4205163/8125343>`__, so even if your "
"timer is of type ``Timer``, it is also a ``Node`` and an ``Object``, two "
"classes it extends. With dynamic GDScript, you also don't care about the "
"node's type as long as it has the methods you need to call."
msgstr ""
"நீங்கள் ஒரு குழந்தை முனை பெறும்போது இது நிகழ்கிறது. எடுத்துக்காட்டாக ஒரு டைமரை "
"எடுத்துக்கொள்வோம்: மாறும் குறியீட்டைக் கொண்டு, நீங்கள் `` $ டைமர்`` உடன் முனையைப் பெறலாம். "
"Gdscript `duck-tiping <https://stackoverflow.com/a/4205163/8125343> ____, "
"எனவே உங்கள் டைமர்` `டைமர்`` வகையாக இருந்தாலும், இது ஒரு` `நோட்`` மற்றும் ஒரு` "
"`பொருள்``, அது நீட்டிக்கிறது. மாறும் சி.டி.எச்ச்கிரிப்ட் மூலம், நீங்கள் அழைக்க வேண்டிய "
"முறைகள் இருக்கும் வரை முனையின் வகையைப் பற்றியும் நீங்கள் கவலைப்படவில்லை."

msgid ""
"You can use casting to tell Godot the type you expect when you get a node: "
"``($Timer as Timer)``, ``($Player as CharacterBody2D)``, etc. Godot will "
"ensure the type works and if so, the line number will turn green at the left "
"of the script editor."
msgstr ""
"நீங்கள் ஒரு முனையைப் பெறும்போது நீங்கள் எதிர்பார்க்கும் வகையைச் சொல்ல நீங்கள் வார்ப்பைப் "
"பயன்படுத்தலாம்: `` ($ நேரங்குறிகருவி டைமராக) ``, `` `(` பிளேயர் ரேசன்போடி 2 டி) `` "
"போன்றவை. , வரி எண் ச்கிரிப்ட் எடிட்டரின் இடதுபுறத்தில் பச்சை நிறமாக மாறும்."

msgid "Unsafe vs Safe Line"
msgstr "பாதுகாப்பற்ற Vs பாதுகாப்பான வரி"

msgid "Unsafe line (line 7) vs Safe Lines (line 6 and 8)"
msgstr "பாதுகாப்பற்ற வரி (வரி 7) vs பாதுகாப்பான கோடுகள் (வரி 6 மற்றும் 8)"

msgid ""
"Safe lines do not always mean better or more reliable code. See the note "
"above about the ``as`` keyword. For example::"
msgstr ""
"பாதுகாப்பான கோடுகள் எப்போதும் சிறந்த அல்லது நம்பகமான குறியீட்டைக் குறிக்காது. `` ஆச்` "
"முக்கிய சொல் பற்றி மேலே உள்ள குறிப்பைக் காண்க. உதாரணமாக ::"

msgid ""
"Even though ``node_2`` declaration is marked as an unsafe line, it is more "
"reliable than ``node_1`` declaration. Because if you change the node type in "
"the scene and accidentally forget to change it in the script, the error will "
"be detected immediately when the scene is loaded. Unlike ``node_1``, which "
"will be silently cast to ``null`` and the error will be detected later."
msgstr ""
"`` Node_2`` அறிவிப்பு பாதுகாப்பற்ற வரியாக குறிக்கப்பட்டிருந்தாலும், இது `` node_1`` "
"அறிவிப்பை விட நம்பகமானது. ஏனெனில் நீங்கள் காட்சியில் முனை வகையை மாற்றி, தற்செயலாக "
"ச்கிரிப்டில் அதை மாற்ற மறந்துவிட்டால், காட்சி ஏற்றப்பட்டவுடன் பிழை உடனடியாக கண்டறியப்படும். "
"`` Node_1`` போலல்லாமல், இது அமைதியாக `` NULL`` க்கு அனுப்பப்படும், பின்னர் பிழை "
"கண்டறியப்படும்."

msgid ""
"You can turn off safe lines or change their color in the editor settings."
msgstr ""
"நீங்கள் பாதுகாப்பான வரிகளை அணைக்கலாம் அல்லது ஆசிரியர் அமைப்புகளில் அவற்றின் நிறத்தை "
"மாற்றலாம்."

msgid "Typed or dynamic: stick to one style"
msgstr "தட்டச்சு செய்யப்பட்ட அல்லது மாறும்: ஒரு பாணியில் ஒட்டிக்கொள்க"

msgid ""
"Typed GDScript and dynamic GDScript can coexist in the same project. But "
"it's recommended to stick to either style for consistency in your codebase, "
"and for your peers. It's easier for everyone to work together if you follow "
"the same guidelines, and faster to read and understand other people's code."
msgstr ""
"தட்டச்சு செய்யப்பட்ட GDSCRIPT மற்றும் மாறும் சி.டி.எச்ச்கிரிப்ட் அதே திட்டத்தில் இணைந்து வாழ "
"முடியும். ஆனால் உங்கள் கோட்பேசில் நிலைத்தன்மைக்காகவும், உங்கள் சகாக்களுக்காகவும் பாணியில் "
"ஒட்டிக்கொள்ள பரிந்துரைக்கப்படுகிறது. நீங்கள் ஒரே வழிகாட்டுதல்களைப் பின்பற்றினால், மற்றவர்களின் "
"குறியீட்டைப் படித்து புரிந்துகொள்வது விரைவாகவும், விரைவாகவும் ஒன்றாக வேலை செய்வது "
"எளிதானது."

msgid ""
"Typed code takes a little more writing, but you get the benefits we "
"discussed above. Here's an example of the same, empty script, in a dynamic "
"style::"
msgstr ""
"தட்டச்சு செய்யப்பட்ட குறியீடு இன்னும் கொஞ்சம் எழுத்தை எடுக்கும், ஆனால் நாங்கள் மேலே விவாதித்த "
"நன்மைகளைப் பெறுவீர்கள். அதே, வெற்று ச்கிரிப்ட்டின் எடுத்துக்காட்டு இங்கே, மாறும் பாணியில் ::"

msgid "And with static typing::"
msgstr "மற்றும் நிலையான தட்டச்சு ::"

msgid ""
"As you can see, you can also use types with the engine's virtual methods. "
"Signal callbacks, like any methods, can also use types. Here's a "
"``body_entered`` signal in a dynamic style::"
msgstr ""
"நீங்கள் பார்க்க முடியும் என, இயந்திரத்தின் மெய்நிகர் முறைகளுடன் வகைகளையும் பயன்படுத்தலாம். "
"சிக்னல் கால்பேக்குகள், எந்தவொரு முறைகளையும் போலவே, வகைகளையும் பயன்படுத்தலாம். மாறும் "
"பாணியில் `` body_entered`` சமிக்ஞை இங்கே ::"

msgid "And the same callback, with type hints::"
msgstr "அதே அழைப்புகள், வகை குறிப்புகளுடன் ::"

msgid "Warning system"
msgstr "எச்சரிக்கை அமைப்பு"

msgid ""
"Detailed documentation about the GDScript warning system has been moved "
"to :ref:`doc_gdscript_warning_system`."
msgstr ""
"GDSCRIPT எச்சரிக்கை முறையைப் பற்றிய விரிவான ஆவணங்கள் நகர்த்தப்பட்டுள்ளன: Ref: "
"`Doc_gdscript_warning_system`."

msgid ""
"Godot gives you warnings about your code as you write it. The engine "
"identifies sections of your code that may lead to issues at runtime, but "
"lets you decide whether or not you want to leave the code as it is."
msgstr ""
"உங்கள் குறியீட்டை நீங்கள் எழுதும்போது கோடோட் உங்களுக்கு எச்சரிக்கைகளைத் தருகிறார். இயக்க "
"நேரத்தில் சிக்கல்களுக்கு வழிவகுக்கும் உங்கள் குறியீட்டின் பிரிவுகளை இயந்திரம் அடையாளம் "
"காட்டுகிறது, ஆனால் நீங்கள் குறியீட்டை அப்படியே விட்டுவிட விரும்புகிறீர்களா இல்லையா என்பதை "
"தீர்மானிக்க அனுமதிக்கிறது."

msgid ""
"We have a number of warnings aimed specifically at users of typed GDScript. "
"By default, these warnings are disabled, you can enable them in Project "
"Settings (**Debug > GDScript**, make sure **Advanced Settings** is enabled)."
msgstr ""
"தட்டச்சு செய்யப்பட்ட சி.டி.எச்.ச்கிரிப்ட் பயனர்களை குறிப்பாக இலக்காகக் கொண்ட பல எச்சரிக்கைகள் "
"எங்களிடம் உள்ளன. இயல்பாக, இந்த எச்சரிக்கைகள் முடக்கப்பட்டுள்ளன, அவற்றை திட்ட அமைப்புகளில் "
"இயக்கலாம் (** பிழைத்திருத்தம்> gdscript **, ** மேம்பட்ட அமைப்புகள் ** இயக்கப்பட்டிருப்பதை "
"உறுதிசெய்க)."

msgid ""
"You can enable the ``UNTYPED_DECLARATION`` warning if you want to always use "
"static types. Additionally, you can enable the ``INFERRED_DECLARATION`` "
"warning if you prefer a more readable and reliable, but more verbose syntax."
msgstr ""
"நீங்கள் எப்போதும் நிலையான வகைகளைப் பயன்படுத்த விரும்பினால் `` wantyped_declaration`` "
"எச்சரிக்கையை இயக்கலாம். கூடுதலாக, நீங்கள் மிகவும் படிக்கக்கூடிய மற்றும் நம்பகமான, ஆனால் "
"மேலும் சொற்களஞ்சியத் தொடரியல் விரும்பினால் `` அனுமானிக்கப்பட்ட_டிக்ளரேசன்`` எச்சரிக்கையை "
"இயக்கலாம்."

msgid ""
"``UNSAFE_*`` warnings make unsafe operations more noticeable, than unsafe "
"lines. Currently, ``UNSAFE_*`` warnings do not cover all cases that unsafe "
"lines cover."
msgstr ""
"`` பாதுகாப்பற்ற_*`` எச்சரிக்கைகள் பாதுகாப்பற்ற செயல்பாடுகளை பாதுகாப்பற்ற கோடுகளை விட "
"கவனிக்கத்தக்கதாக ஆக்குகின்றன. தற்போது, `` பாதுகாப்பற்ற_*`` எச்சரிக்கைகள் பாதுகாப்பற்ற "
"கோடுகள் மறைக்கும் அனைத்து நிகழ்வுகளையும் மறைக்காது."

msgid "Common unsafe operations and their safe counterparts"
msgstr "பொதுவான பாதுகாப்பற்ற செயல்பாடுகள் மற்றும் அவற்றின் பாதுகாப்பான சகாக்கள்"

msgid "``UNSAFE_PROPERTY_ACCESS`` and ``UNSAFE_METHOD_ACCESS`` warnings"
msgstr ""
"`` பாதுகாப்பற்ற_பிரபர்ட்டி_அக்சச்`` மற்றும் `` பாதுகாப்பற்ற_மெதோட்_அக்சச்` எச்சரிக்கைகள்"

msgid ""
"In this example, we aim to set a property and call a method on an object "
"that has a script attached with ``class_name MyScript`` and that ``extends "
"Node2D``. If we have a reference to the object as a ``Node2D`` (for "
"instance, as it was passed to us by the physics system), we can first check "
"if the property and method exist and then set and call them if they do::"
msgstr ""
"இந்த எடுத்துக்காட்டில், `` class_name myScript`` உடன் இணைக்கப்பட்ட ச்கிரிப்டைக் கொண்ட ஒரு "
"பொருளின் மீது ஒரு சொத்தை அமைத்து, `` Node2d`` ஐ நீட்டிக்கிறது. ஒரு `` node2d`` "
"(உதாரணமாக, இது இயற்பியல் அமைப்பால் எங்களுக்கு அனுப்பப்பட்டதால்) பொருளை ஒரு குறிப்பு "
"இருந்தால், முதலில் சொத்து மற்றும் முறை இருக்கிறதா என்று சரிபார்த்து, அவை செய்தால் அவற்றை "
"அமைத்து அழைக்கவும் ::"

msgid ""
"However, this code will produce ``UNSAFE_PROPERTY_ACCESS`` and "
"``UNSAFE_METHOD_ACCESS`` warnings as the property and method are not present "
"in the referenced type - in this case a ``Node2D``. To make these operations "
"safe, you can first check if the object is of type ``MyScript`` using the "
"``is`` keyword and then declare a variable with the type ``MyScript`` on "
"which you can set its properties and call its methods::"
msgstr ""
"எவ்வாறாயினும், இந்த குறியீடு `` பாதுகாப்பற்ற_பிராபர்ட்டி_அக்சச்`` மற்றும் `` "
"பாதுகாப்பற்ற_மெத்தோட்_அக்சச்`` எச்சரிக்கைகள் என சொத்து மற்றும் முறை குறிப்பிடப்பட்ட வகைகளில் "
"இல்லை - இந்த விசயத்தில் ஒரு `` முனை 2 டி``. இந்த செயல்பாடுகளை பாதுகாப்பாக மாற்ற, `` "
"``` முக்கிய சொல்லைப் பயன்படுத்தி பொருள் `` மைச்கிரிப்ட்` வகை என்பதை நீங்கள் முதலில் "
"சரிபார்க்கலாம், பின்னர் நீங்கள் அதன் பண்புகளை அமைக்கக்கூடிய `` மைச்கிரிப்ட்` வகையுடன் ஒரு "
"மாறியை அறிவிக்கவும் அதன் முறைகளை அழைக்கவும் ::"

msgid ""
"Alternatively, you can declare a variable and use the ``as`` operator to try "
"to cast the object. You'll then want to check whether the cast was "
"successful by confirming that the variable was assigned::"
msgstr ""
"மாற்றாக, நீங்கள் ஒரு மாறியை அறிவிக்கலாம் மற்றும் பொருளை நடிக்க முயற்சிக்க `` `` "
"ஆபரேட்டரைப் பயன்படுத்தலாம். மாறி ஒதுக்கப்பட்டது என்பதை உறுதிப்படுத்துவதன் மூலம் நடிகர்கள் "
"வெற்றிகரமாக இருந்தார்களா என்பதை நீங்கள் சரிபார்க்க வேண்டும் ::"

msgid "``UNSAFE_CAST`` warning"
msgstr "`` பாதுகாப்பற்ற_ காச்ட்`` எச்சரிக்கை"

msgid ""
"In this example, we would like the label connected to an object entering our "
"collision area to show the area's name. Once the object enters the collision "
"area, the physics system sends a signal with a ``Node2D`` object, and the "
"most straightforward (but not statically typed) solution to do what we want "
"could be achieved like this::"
msgstr ""
"இந்த எடுத்துக்காட்டில், எங்கள் மோதல் பகுதிக்குள் நுழையும் ஒரு பொருளுடன் இணைக்கப்பட்ட சிட்டை "
"இப்பகுதியின் பெயரைக் காட்ட விரும்புகிறோம். பொருள் மோதல் பகுதிக்குள் நுழைந்ததும், இயற்பியல் "
"அமைப்பு ஒரு `` node2d`` பொருளைக் கொண்டு ஒரு சமிக்ஞையை அனுப்புகிறது, மேலும் நாம் "
"விரும்பியதைச் செய்வதற்கான மிகவும் நேரடியான (ஆனால் சட்டப்பூர்வமாக தட்டச்சு செய்யப்படாத) "
"தீர்வு இதுபோன்று அடைய முடியும் ::"

msgid ""
"This piece of code produces an ``UNSAFE_PROPERTY_ACCESS`` warning because "
"``label`` is not defined in ``Node2D``. To solve this, we could first check "
"if the ``label`` property exist and cast it to type ``Label`` before "
"settings its text property like so::"
msgstr ""
"இந்த குறியீடு ஒரு `` பாதுகாப்பற்ற_பிராபர்ட்டி_செச்`` எச்சரிக்கையை உருவாக்குகிறது, "
"ஏனெனில் `` லேபிள்`` `` node2d`` இல் வரையறுக்கப்படவில்லை. இதைத் தீர்க்க, முதலில் `` "
"லேபிள்`` சொத்து இருக்கிறதா என்று சரிபார்த்து, அதன் உரை சொத்தை அமைப்பதற்கு முன்பு `` "
"லேபிள்`` தட்டச்சு செய்ய அதை அனுப்பலாம் ::"

msgid ""
"However, this produces an ``UNSAFE_CAST`` warning because ``body.label`` is "
"of a ``Variant`` type. To safely get the property in the type you want, you "
"can use the ``Object.get()`` method which returns the object as a "
"``Variant`` value or returns ``null`` if the property doesn't exist. You can "
"then determine whether the property contains an object of the right type "
"using the ``is`` keyword, and finally declare a statically typed variable "
"with the object::"
msgstr ""
"இருப்பினும், இது ஒரு `` பாதுகாப்பற்ற_காண்`` எச்சரிக்கையை உருவாக்குகிறது, ஏனெனில் `` "
"body.label`` ஒரு `` மாறுபாடு`` வகையாகும். நீங்கள் விரும்பும் வகையை பாதுகாப்பாகப் "
"பெற, நீங்கள் `` `மாறுபாடு`` `` முறையைப் பயன்படுத்தலாம், இது பொருளை `` மாறுபாடு` "
"`மதிப்பாகத் தருகிறது அல்லது சொத்து இல்லையென்றால்` `பூச்ய`` திருப்பித் தருகிறது உள்ளது. "
"`` `` முக்கிய சொல்லைப் பயன்படுத்தி சொத்து சரியான வகையின் ஒரு பொருளைக் கொண்டிருக்கிறதா "
"என்பதை நீங்கள் தீர்மானிக்க முடியும், இறுதியாக பொருளுடன் நிலையான தட்டச்சு செய்யப்பட்ட "
"மாறியை அறிவிக்கவும் ::"

msgid "Cases where you can't specify types"
msgstr "நீங்கள் வகைகளைக் குறிப்பிட முடியாத வழக்குகள்"

msgid ""
"To wrap up this introduction, let's mention cases where you can't use type "
"hints. This will trigger a **syntax error**."
msgstr ""
"இந்த அறிமுகத்தை மடக்குவதற்கு, நீங்கள் வகை குறிப்புகளைப் பயன்படுத்த முடியாத நிகழ்வுகளைக் "
"குறிப்பிடுவோம். இது ** தொடரியல் பிழையைத் தூண்டும் **."

msgid ""
"You can't specify the type of individual elements in an array or a "
"dictionary::"
msgstr ""
"ஒரு வரிசை அல்லது அகராதியில் தனிப்பட்ட கூறுகளின் வகையை நீங்கள் குறிப்பிட முடியாது ::"

msgid "Nested types are not currently supported::"
msgstr "உள்ளமை வகைகள் தற்போது ஆதரிக்கப்படவில்லை ::"

msgid "Summary"
msgstr "சுருக்கம்"

msgid ""
"Typed GDScript is a powerful tool. It helps you write more structured code, "
"avoid common errors, and create scalable and reliable systems. Static types "
"improve GDScript performance and more optimizations are planned for the "
"future."
msgstr ""
"தட்டச்சு செய்யப்பட்ட GDSCRIPT ஒரு சக்திவாய்ந்த கருவியாகும். இது மேலும் கட்டமைக்கப்பட்ட "
"குறியீட்டை எழுதவும், பொதுவான பிழைகளைத் தவிர்க்கவும், அளவிடக்கூடிய மற்றும் நம்பகமான "
"அமைப்புகளை உருவாக்கவும் உதவுகிறது. நிலையான வகைகள் GDSCRIPT செயல்திறனை "
"மேம்படுத்துகின்றன, மேலும் எதிர்காலத்திற்காக அதிக மேம்படுத்தல்கள் திட்டமிடப்பட்டுள்ளன."
