#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Optimization using MultiMeshes"
msgstr "மல்டிமேச்களைப் பயன்படுத்தி உகப்பாக்கம்"

msgid ""
"For large amount of instances (in the thousands), that need to be constantly "
"processed (and certain amount of control needs to be retained), :ref:`using "
"servers directly <doc_using_servers>` is the recommended optimization."
msgstr ""
"பெரிய அளவிலான நிகழ்வுகளுக்கு (ஆயிரக்கணக்கான), தொடர்ந்து செயலாக்கப்பட வேண்டும் (மற்றும் "
"குறிப்பிட்ட அளவு கட்டுப்பாட்டை தக்க வைத்துக் கொள்ள வேண்டும்),: ref: `நேரடியாக "
"சேவையகங்களைப் பயன்படுத்துதல் <doc_using_servers>` என்பது பரிந்துரைக்கப்பட்ட தேர்வுமுறை."

msgid ""
"When the amount of objects reach the hundreds of thousands or millions, none "
"of these approaches are efficient anymore. Still, depending on the "
"requirements, there is one more optimization possible."
msgstr ""
"பொருட்களின் அளவு நூறாயிரக்கணக்கான அல்லது மில்லியன்களை எட்டும்போது, இந்த அணுகுமுறைகள் "
"எதுவும் இனி திறமையாக இல்லை. இருப்பினும், தேவைகளைப் பொறுத்து, இன்னும் ஒரு தேர்வுமுறை "
"சாத்தியமாகும்."

msgid "MultiMeshes"
msgstr "மல்டிமேச்கள்"

msgid ""
"A :ref:`MultiMesh<class_MultiMesh>` is a single draw primitive that can draw "
"up to millions of objects in one go. It's extremely efficient because it "
"uses the GPU hardware to do this."
msgstr ""
"ப: குறிப்பு: `மல்டிமேச் <class_multimesh>` என்பது ஒற்றை டிரா பழமையானது, இது ஒரே "
"நேரத்தில் மில்லியன் கணக்கான பொருள்களை வரைய முடியும். இது மிகவும் திறமையானது, ஏனெனில் "
"இதைச் செய்ய சி.பீ.யூ வன்பொருளைப் பயன்படுத்துகிறது."

msgid ""
"The only drawback is that there is no *screen* or *frustum* culling possible "
"for individual instances. This means, that millions of objects will be "
"*always* or *never* drawn, depending on the visibility of the whole "
"MultiMesh. It is possible to provide a custom visibility rect for them, but "
"it will always be *all-or-none* visibility."
msgstr ""
"ஒரே குறைபாடு என்னவென்றால், தனிப்பட்ட நிகழ்வுகளுக்கு * திரை * அல்லது * ஃப்ரச்டம் * "
"சாத்தியமில்லை. இதன் பொருள், முழு மல்டிமேசின் தெரிவுநிலையைப் பொறுத்து மில்லியன் கணக்கான "
"பொருள்கள் * எப்போதும் * அல்லது * ஒருபோதும் * வரையப்பட்டதாக இருக்கும். அவர்களுக்கு "
"தனிப்பயன் தெரிவுநிலை செவ்வகத்தை வழங்க முடியும், ஆனால் அது எப்போதும் * அனைத்து அல்லது "
"எதுவுமில்லை * தெரிவுநிலை."

msgid ""
"If the objects are simple enough (just a couple of vertices), this is "
"generally not much of a problem as most modern GPUs are optimized for this "
"use case. A workaround is to create several MultiMeshes for different areas "
"of the world."
msgstr ""
"பொருள்கள் போதுமான எளிமையானவை என்றால் (ஓரிரு செங்குத்துகள்), இது பொதுவாக ஒரு சிக்கல் "
"அல்ல, ஏனெனில் பெரும்பாலான நவீன சி.பீ.யுகள் இந்த பயன்பாட்டு வழக்குக்கு உகந்ததாக உள்ளன. "
"உலகின் பல்வேறு பகுதிகளுக்கு பல மல்டிமெச்களை உருவாக்குவதே ஒரு பணித்தொகுப்பு."

msgid ""
"It is also possible to execute some logic inside the vertex shader (using "
"the ``INSTANCE_ID`` or ``INSTANCE_CUSTOM`` built-in constants). For an "
"example of animating thousands of objects in a MultiMesh, see "
"the :ref:`Animating thousands of fish <doc_animating_thousands_of_fish>` "
"tutorial. Information to the shader can be provided via textures (there are "
"floating-point :ref:`Image<class_Image>` formats which are ideal for this)."
msgstr ""
"வெர்டெக்ச் சேடருக்குள் சில தர்க்கங்களை இயக்கவும் முடியும் (`` Instance_id`` அல்லது `` "
"Instance_custom`` உள்ளமைக்கப்பட்ட மாறிலிகளைப் பயன்படுத்தி). மல்டிமேசில் ஆயிரக்கணக்கான "
"பொருள்களை அனிமேசன் செய்வதற்கான எடுத்துக்காட்டுக்கு, இதைக் காண்க: குறிப்பு: `ஆயிரக்கணக்கான "
"மீன்களை அனிமேசன் செய்தல் நிழலுக்கான தகவல்களை இழைமங்கள் வழியாக வழங்க முடியும் (மிதக்கும்-"
"புள்ளி உள்ளது: குறிப்பு: `படம் <class_image>` இதற்கு ஏற்ற வடிவங்கள்)."

msgid ""
"Another alternative is to use a GDExtension and C++, which should be "
"extremely efficient (it's possible to set the entire state for all objects "
"using linear memory via the :ref:`RenderingServer.multimesh_set_buffer() "
"<class_RenderingServer_method_multimesh_set_buffer>` function). This way, "
"the array can be created with multiple threads, then set in one call, "
"providing high cache efficiency."
msgstr ""
"மற்றொரு மாற்று ஒரு gdextension மற்றும் c ++ ஐப் பயன்படுத்துவது, இது மிகவும் திறமையாக "
"இருக்க வேண்டும் (நேரியல் நினைவகத்தைப் பயன்படுத்தும் அனைத்து பொருள்களுக்கும் முழு "
"நிலையையும் அமைக்க முடியும்: render: `renderingserver.multimesh_set_buffer () "
"<class_renderingserver_method_multimesh_set_buffer>` செயல்பாடு). இந்த வழியில், "
"வரிசையை பல நூல்களுடன் உருவாக்கலாம், பின்னர் ஒரு அழைப்பில் அமைக்கப்பட்டு, அதிக கேச் "
"செயல்திறனை வழங்கும்."

msgid ""
"Finally, it's not required to have all MultiMesh instances visible. The "
"amount of visible ones can be controlled with "
"the :ref:`MultiMesh.visible_instance_count "
"<class_MultiMesh_property_visible_instance_count>` property. The typical "
"workflow is to allocate the maximum amount of instances that will be used, "
"then change the amount visible depending on how many are currently needed."
msgstr ""
"இறுதியாக, அனைத்து மல்டிமேச் நிகழ்வுகளும் காண வேண்டிய அவசியமில்லை. புலப்படும் அளவைக் "
"கட்டுப்படுத்தலாம்: ref: `mullashes.visible_instance_count "
"<class_multimesh_property_visible_instance_count>` சொத்து. வழக்கமான பணிப்பாய்வு "
"என்பது பயன்படுத்தப்படும் அதிகபட்ச நிகழ்வுகளை ஒதுக்க வேண்டும், பின்னர் எத்தனை தேவை என்பதைப் "
"பொறுத்து புலப்படும் தொகையை மாற்றவும்."

msgid "Multimesh example"
msgstr "மல்டிமேச் எடுத்துக்காட்டு"

msgid ""
"Here is an example of using a MultiMesh from code. Languages other than "
"GDScript may be more efficient for millions of objects, but for a few "
"thousands, GDScript should be fine."
msgstr ""
"குறியீட்டிலிருந்து ஒரு மல்டிமேசைப் பயன்படுத்துவதற்கான எடுத்துக்காட்டு இங்கே. GDSCRIPT ஐத் "
"தவிர வேறு மொழிகள் மில்லியன் கணக்கான பொருள்களுக்கு மிகவும் திறமையாக இருக்கலாம், ஆனால் "
"சில ஆயிரக்கணக்கானவர்களுக்கு, GDSCRIPT நன்றாக இருக்க வேண்டும்."
