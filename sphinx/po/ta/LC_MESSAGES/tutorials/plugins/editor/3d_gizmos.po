#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "3D gizmo plugins"
msgstr "3D கிச்மோ செருகுநிரல்கள்"

msgid "Introduction"
msgstr "அறிமுகம்"

msgid ""
"3D gizmo plugins are used by the editor and custom plugins to define the "
"gizmos attached to any kind of Node3D node."
msgstr ""
"3D கிச்மோ செருகுநிரல்கள் எடிட்டர் மற்றும் தனிப்பயன் செருகுநிரல்களால் பயன்படுத்தப்படுகின்றன, "
"அவை எந்த வகையான Node3D முனையிலும் இணைக்கப்பட்ட கிச்மோசை வரையறுக்கின்றன."

msgid ""
"This tutorial shows the two main approaches to defining your own custom "
"gizmos. The first option works well for simple gizmos and creates less "
"clutter in your plugin structure, and the second one will let you store some "
"per-gizmo data."
msgstr ""
"இந்த பயிற்சி உங்கள் சொந்த தனிப்பயன் கிச்மோசை வரையறுப்பதற்கான இரண்டு முக்கிய "
"அணுகுமுறைகளைக் காட்டுகிறது. முதல் விருப்பம் எளிய கிச்மோசுக்கு நன்றாக வேலை செய்கிறது "
"மற்றும் உங்கள் சொருகி கட்டமைப்பில் குறைவான ஒழுங்கீனத்தை உருவாக்குகிறது, மேலும் இரண்டாவது "
"ஒரு கிச்மோ தரவை சேமிக்க அனுமதிக்கும்."

msgid ""
"This tutorial assumes you already know how to make generic plugins. If in "
"doubt, refer to the :ref:`doc_making_plugins` page."
msgstr ""
"இந்த டுடோரியல் பொதுவான செருகுநிரல்களை எவ்வாறு உருவாக்குவது என்பது உங்களுக்குத் "
"தெரியும் என்று கருதுகிறது. ஐயம் இருந்தால்,: ref: `doc_making_plugins` பக்கத்தைப் "
"பார்க்கவும்."

msgid "The EditorNode3DGizmoPlugin"
msgstr "Titighornode3dgizmoplugin"

msgid ""
"Regardless of the approach we choose, we will need to create a "
"new :ref:`EditorNode3DGizmoPlugin <class_EditorNode3DGizmoPlugin>`. This "
"will allow us to set a name for the new gizmo type and define other "
"behaviors such as whether the gizmo can be hidden or not."
msgstr ""
"நாங்கள் தேர்வுசெய்த அணுகுமுறையைப் பொருட்படுத்தாமல், புதியதை உருவாக்க வேண்டும்: Ref: "
"`Itimationornode3dgizmoplugin <class_editornode3dgizmoplugin>`. இது புதிய "
"கிச்மோ வகைக்கு ஒரு பெயரை அமைக்கவும், கிச்மோ மறைக்க முடியுமா இல்லையா போன்ற பிற "
"நடத்தைகளை வரையறுக்கவும் அனுமதிக்கும்."

msgid "This would be a basic setup:"
msgstr "இது ஒரு அடிப்படை அமைப்பாக இருக்கும்:"

msgid ""
"For simple gizmos, inheriting :ref:`EditorNode3DGizmoPlugin "
"<class_EditorNode3DGizmoPlugin>` is enough. If you want to store some per-"
"gizmo data or you are porting a Godot 3.0 gizmo to 3.1+, you should go with "
"the second approach."
msgstr ""
"எளிமையான கிச்மோசுக்கு, மரபுரிமை: குறிப்பு: `Itimitornode3dgizmoplugin "
"<class_editornode3dgizmoplugin>` போதுமானது. நீங்கள் சில கிச்மோ தரவை சேமிக்க "
"விரும்பினால் அல்லது நீங்கள் ஒரு கோடோட் 3.0 கிச்மோவை 3.1+ க்கு அனுப்புகிறீர்கள் என்றால், "
"நீங்கள் இரண்டாவது அணுகுமுறையுடன் செல்ல வேண்டும்."

msgid "Simple approach"
msgstr "எளிய அணுகுமுறை"

msgid ""
"The first step is to, in our custom gizmo plugin, override "
"the :ref:`_has_gizmo()<class_EditorNode3DGizmoPlugin_private_method__has_gizmo>` "
"method so that it returns ``true`` when the node parameter is of our target "
"type."
msgstr ""
"முதல் படி, எங்கள் தனிப்பயன் கிச்மோ சொருகி, மீறல்: ref: `_HAS_GIZMO () "
"<class_editornode3dgizmoplugin_private_method__has_gizmo>` முறை `` உண்மை`` "
"என்ற முறை நம்முடைய இலக்கு வகையின் போது திரும்பும்."

msgid ""
"Then we can override methods "
"like :ref:`_redraw()<class_EditorNode3DGizmoPlugin_private_method__redraw>` "
"or all the handle related ones."
msgstr ""
"பின்னர் நாம் போன்ற முறைகளை மேலெழுதலாம்: ref: `_redraw () "
"<class_editornode3dgizmoplugin_private_method__redraw>` அல்லது கைப்பிடி "
"தொடர்பான அனைத்து."

msgid ""
"Note that we created a material in the `_init` method, and retrieved it in "
"the `_redraw` method "
"using :ref:`get_material()<class_EditorNode3DGizmoPlugin_method_get_material>`. "
"This method retrieves one of the material's variants depending on the state "
"of the gizmo (selected and/or editable)."
msgstr ""
"`_INIT` முறையில் ஒரு பொருளை நாங்கள் உருவாக்கியுள்ளோம் என்பதை நினைவில் கொள்க, அதை` "
"_redraw` முறையில் மீட்டெடுத்தோம்: ref: `get_material () "
"<class_editornode3dgizmoplugin_method_get_material>`. இந்த முறை கிச்மோவின் "
"நிலையைப் பொறுத்து பொருளின் மாறுபாடுகளில் ஒன்றை மீட்டெடுக்கிறது (தேர்ந்தெடுக்கப்பட்ட மற்றும்/"
"அல்லது திருத்தக்கூடிய)."

msgid "So the final plugin would look somewhat like this:"
msgstr "எனவே இறுதி சொருகி இதுபோன்றதாக இருக்கும்:"

msgid ""
"Note that we just added some handles in the `_redraw` method, but we still "
"need to implement the rest of handle-related callbacks "
"in :ref:`EditorNode3DGizmoPlugin <class_EditorNode3DGizmoPlugin>` to get "
"properly working handles."
msgstr ""
"`_Redraw` முறையில் சில கைப்பிடிகளை நாங்கள் சேர்த்துள்ளோம் என்பதை நினைவில் கொள்க, ஆனால் "
"மீதமுள்ள கைப்பிடி தொடர்பான கால்பேக்குகளை நாங்கள் இன்னும் செயல்படுத்த வேண்டும்: குறிப்பு:` "
"Itimationornode3dgizmoplugin <class_editornode3dgizmoplugin> `ஒழுங்காக வேலை "
"கையாளுதல்களைப் பெற."

msgid "Alternative approach"
msgstr "மாற்று அணுகுமுறை"

msgid ""
"In some cases we want to provide our own implementation "
"of :ref:`EditorNode3DGizmo<class_EditorNode3DGizmo>`, maybe because we want "
"to have some state stored in each gizmo or because we are porting an old "
"gizmo plugin and we don't want to go through the rewriting process."
msgstr ""
"சில சந்தர்ப்பங்களில், நாங்கள் எங்கள் சொந்த செயல்பாட்டை வழங்க விரும்புகிறோம்: ref: "
"`witherornode3dgizmo <class_editornode3dgizmo>`, ஒவ்வொரு கிச்மோவிலும் சில "
"மாநிலங்களை சேமிக்க விரும்புவதால் அல்லது நாங்கள் ஒரு பழைய கிச்மோ சொருகி போர்ட்டிங் "
"செய்வதால், நாங்கள் செல்ல விரும்பவில்லை என்பதால் மீண்டும் எழுதும் செயல்முறை மூலம்."

msgid ""
"In these cases all we need to do is, in our new gizmo plugin, "
"override :ref:`_create_gizmo()<class_EditorNode3DGizmoPlugin_private_method__create_gizmo>`, "
"so it returns our custom gizmo implementation for the Node3D nodes we want "
"to target."
msgstr ""
"இந்த சந்தர்ப்பங்களில், நாம் செய்ய வேண்டியதெல்லாம், எங்கள் புதிய கிச்மோ சொருகி, மேலெழுத: "
"குறிப்பு: `_create_gizmo () "
"<class_editornode3dgizmoplugin_private_method__create_gizmo>` எனவே, எங்கள் "
"தனிப்பயன் கிச்மோ இலக்கு நோடிக்கு செல்ல வேண்டும்."

msgid ""
"This way all the gizmo logic and drawing methods can be implemented in a new "
"class extending :ref:`EditorNode3DGizmo<class_EditorNode3DGizmo>`, like so:"
msgstr ""
"இந்த வழியில் அனைத்து கிச்மோ வழக்கு மற்றும் வரைதல் முறைகள் ஒரு புதிய வகுப்பில் "
"நீட்டிக்கப்படலாம்: குறிப்பு: `Itimatornode3dgizmo <class_editornode3dgizmo>`, "
"அவ்வாறு:"

msgid ""
"Note that we just added some handles in the `_redraw` method, but we still "
"need to implement the rest of handle-related callbacks "
"in :ref:`EditorNode3DGizmo<class_EditorNode3DGizmo>` to get properly working "
"handles."
msgstr ""
"`_Redraw` முறையில் சில கைப்பிடிகளை நாங்கள் சேர்த்துள்ளோம் என்பதை நினைவில் கொள்க, ஆனால் "
"மீதமுள்ள கைப்பிடி தொடர்பான கால்பேக்குகளை நாங்கள் இன்னும் செயல்படுத்த வேண்டும்: குறிப்பு:` "
"Aticalornode3dgizmo <coss_editornode3dgizmo> `சரியாக வேலை செய்யும் கைப்பிடிகளைப் "
"பெற."
