#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Canvas layers"
msgstr "கேன்வாச் அடுக்குகள்"

msgid "Viewport and Canvas items"
msgstr "வியூபோர்ட் மற்றும் கேன்வாச் உருப்படிகள்"

msgid ""
":ref:`CanvasItem <class_CanvasItem>` is the base for all 2D nodes, be it "
"regular 2D nodes, such as :ref:`Node2D <class_Node2D>`, or :ref:`Control "
"<class_Control>`. Both inherit from :ref:`CanvasItem <class_CanvasItem>`. "
"You can arrange canvas items in trees. Each item will inherit its parent's "
"transform: when the parent moves, its children move too."
msgstr ""
". இருவரும் இதிலிருந்து பெறுகிறார்கள்: ref: `Canvasitem <class_canvasitem>`. நீங்கள் "
"மரங்களில் கேன்வாச் பொருட்களை ஏற்பாடு செய்யலாம். ஒவ்வொரு உருப்படியும் அதன் பெற்றோரின் "
"உருமாற்றத்தை வாரிசாகக் கொண்டிருக்கும்: பெற்றோர் நகரும் போது, அதன் குழந்தைகளும் நகர்கின்றன."

msgid ""
"CanvasItem nodes, and nodes inheriting from them, are direct or indirect "
"children of a :ref:`Viewport <class_Viewport>`, that displays them."
msgstr ""
"கேன்வாசிடெம் முனைகள் மற்றும் அவர்களிடமிருந்து பெறும் முனைகள், ஒரு நேரடி அல்லது மறைமுக "
"குழந்தைகள்: ref: `ViewPort <closs_viewport>`, அவை அவற்றைக் காண்பிக்கும்."

msgid ""
"The Viewport's property :ref:`Viewport.canvas_transform "
"<class_Viewport_property_canvas_transform>`, allows to apply a custom :ref:"
"`Transform2D <class_Transform2D>` transform to the CanvasItem hierarchy it "
"contains. Nodes such as :ref:`Camera2D <class_Camera2D>` work by changing "
"that transform."
msgstr ""
"வியூபோர்ட்டின் சொத்து: ref: `viewport.canvas_transform "
"<class_viewport_property_canvas_transform>`, ஒரு வழக்கத்தைப் பயன்படுத்த "
"அனுமதிக்கிறது: குறிப்பு: `உருமாற்றம் 2 டி <class_transform2d>` அதில் உள்ள "
"கேன்வாசிடெம் வரிசைக்கு மாற்றவும். போன்ற முனைகள்: குறிப்பு: `கேமரா 2 டி "
"<class_camera2d>` அந்த உருமாற்றத்தை மாற்றுவதன் மூலம் வேலை செய்யுங்கள்."

msgid ""
"To achieve effects like scrolling, manipulating the canvas transform "
"property is more efficient than moving the root canvas item and the entire "
"scene with it."
msgstr ""
"ச்க்ரோலிங் போன்ற விளைவுகளை அடைய, ரூட் கேன்வாச் உருப்படியையும் அதனுடன் முழு காட்சியையும் "
"நகர்த்துவதை விட கேன்வாச் உருமாற்ற சொத்தை கையாளுவது மிகவும் திறமையானது."

msgid ""
"Usually though, we don't want *everything* in the game or app to be subject "
"to the canvas transform. For example:"
msgstr ""
"வழக்கமாக இருந்தாலும், விளையாட்டு அல்லது பயன்பாட்டில் உள்ள எல்லாவற்றையும் * கேன்வாச் "
"உருமாற்றத்திற்கு உட்படுத்த விரும்பவில்லை. உதாரணமாக:"

msgid ""
"**Parallax Backgrounds**: Backgrounds that move slower than the rest of the "
"stage."
msgstr ""
"** இடமாறு பின்னணிகள் **: மேடையின் மற்ற பகுதிகளை விட மெதுவாக நகரும் பின்னணிகள்."

msgid ""
"**UI**: Think of a user interface (UI) or head-up display (HUD) superimposed "
"on our view of the game world. We want a life counter, score display and "
"other elements to retain their screen positions even when our view of the "
"game world changes."
msgstr ""
"** இடைமுகம் **: விளையாட்டு உலகத்தைப் பற்றிய எங்கள் பார்வையில் ஒரு பயனர் இடைமுகம் (UI) "
"அல்லது எட்-அப் டிச்ப்ளே (HUD) பற்றி சிந்தியுங்கள். விளையாட்டு உலகத்தைப் பற்றிய நமது பார்வை "
"மாறும்போது கூட ஒரு லைஃப் கவுண்டர், ச்கோர் டிச்ப்ளே மற்றும் பிற கூறுகள் அவற்றின் திரை "
"நிலைகளைத் தக்க வைத்துக் கொள்ள வேண்டும்."

msgid ""
"**Transitions**: We may want visual effects used for transitions (fades, "
"blends) to remain at a fixed screen location."
msgstr ""
"** மாற்றங்கள் **: மாற்றங்களுக்கு (மங்கல்கள், கலவைகள்) ஒரு நிலையான திரை இடத்தில் இருக்க "
"பயன்படுத்தப்படும் காட்சி விளைவுகளை நாங்கள் விரும்பலாம்."

msgid "How to solve these problems in a single scene tree?"
msgstr "ஒரே காட்சி மரத்தில் இந்த சிக்கல்களை எவ்வாறு தீர்ப்பது?"

msgid "CanvasLayers"
msgstr "கேன்வாச்லேயர்கள்"

msgid ""
"The answer is :ref:`CanvasLayer <class_CanvasLayer>`, which is a node that "
"adds a separate 2D rendering layer for all its children and grand-children. "
"Viewport children will draw by default at layer \"0\", while a CanvasLayer "
"will draw at any numeric layer. Layers with a greater number will be drawn "
"above those with a smaller number. CanvasLayers also have their own "
"transform and do not depend on the transform of other layers. This allows "
"the UI to be fixed in screen-space while our view on the game world changes."
msgstr ""
"பதில்: குறிப்பு: `கேன்வாச்லேயர் <class_canvaslayer>`, இது அதன் அனைத்து குழந்தைகள் "
"மற்றும் பெரிய குழந்தைகளுக்கும் தனி 2 டி வழங்குதல் அடுக்கை சேர்க்கும் ஒரு முனை. வியூபோர்ட் "
"குழந்தைகள் இயல்புநிலையாக \"0\" அடுக்கில் வரைவார்கள், அதே நேரத்தில் ஒரு கேன்வாச்லேயர் எந்த "
"எண் அடுக்கிலும் வரையப்படும். அதிக எண்ணிக்கையிலான அடுக்குகள் சிறிய எண்ணைக் கொண்டவர்களுக்கு "
"மேலே வரையப்படும். கேன்வாச்லேயர்களும் அவற்றின் சொந்த உருமாற்றத்தைக் கொண்டுள்ளன, மேலும் மற்ற "
"அடுக்குகளின் மாற்றத்தை சார்ந்து இல்லை. விளையாட்டு உலகத்தைப் பற்றிய எங்கள் பார்வை மாறும்போது "
"இது இடைமுகம் ஐ திரை-இடத்தில் சரி செய்ய அனுமதிக்கிறது."

msgid ""
"An example of this is creating a parallax background. This can be done with "
"a CanvasLayer at layer \"-1\". The screen with the points, life counter and "
"pause button can also be created at layer \"1\"."
msgstr ""
"இதற்கு ஒரு எடுத்துக்காட்டு ஒரு இடமாறு பின்னணியை உருவாக்குகிறது. இதை \"-1\" லேயரில் "
"கேன்வாச்லேயர் மூலம் செய்ய முடியும். புள்ளிகள், லைஃப் கவுண்டர் மற்றும் இடைநிறுத்த பொத்தானைக் "
"கொண்ட திரை \"1\" அடுக்கு \"1\" இல் உருவாக்கப்படலாம்."

msgid "Here's a diagram of how it looks:"
msgstr "இது எப்படி இருக்கிறது என்பதற்கான வரைபடம் இங்கே:"

msgid ""
"CanvasLayers are independent of tree order, and they only depend on their "
"layer number, so they can be instantiated when needed."
msgstr ""
"கேன்வாச்லேயர்கள் மர வரிசையில் இருந்து சுயாதீனமாக உள்ளனர், மேலும் அவை அவற்றின் அடுக்கு "
"எண்ணை மட்டுமே சார்ந்துள்ளது, எனவே அவை தேவைப்படும்போது உடனடிப்படுத்தப்படலாம்."

msgid ""
"CanvasLayers aren't necessary to control the drawing order of nodes. The "
"standard way to ensuring that a node is correctly drawn 'in front' or "
"'behind' others is to manipulate the order of the nodes in the scene panel. "
"Perhaps counterintuitively, the topmost nodes in the scene panel are drawn "
"on *behind* lower ones in the viewport. 2D nodes also have the :ref:"
"`CanvasItem.z_index <class_CanvasItem_property_z_index>` property for "
"controlling their drawing order."
msgstr ""
"முனைகளின் வரைதல் வரிசையை கட்டுப்படுத்த கேன்வாச்லேயர்கள் தேவையில்லை. ஒரு முனை 'முன்' "
"அல்லது 'பின்னால்' சரியாக வரையப்பட்டிருப்பதை உறுதி செய்வதற்கான நிலையான வழி, காட்சிக் "
"குழுவில் உள்ள முனைகளின் வரிசையை கையாளுவதாகும். ஒருவேளை எதிர்விளைவாக, காட்சிக் "
"குழுவில் உள்ள மிக உயர்ந்த முனைகள் பார்வையிடலில் * பின்னால் * பின்னால் வரையப்படுகின்றன. 2 "
"டி முனைகளும் உள்ளன: ref: `canvasitem.z_index "
"<class_canvasitem_property_z_index>` அவற்றின் வரைதல் வரிசையை கட்டுப்படுத்துவதற்கான "
"சொத்து."
