#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "அறிமுகம்"

msgid "Physics ticks and rendered frames"
msgstr "இயற்பியல் உண்ணி பிரேம்கள்"

msgid ""
"One key concept to understand in Godot is the distinction between physics "
"ticks (sometimes referred to as iterations or physics frames), and rendered "
"frames. The physics proceeds at a fixed tick rate (set in :ref:`Project "
"Settings > Physics > Common > Physics Tick per "
"Second<class_ProjectSettings_property_physics/common/"
"physics_ticks_per_second>`), which defaults to 60 ticks per second."
msgstr ""
"கோடோட்டில் புரிந்து கொள்ள வேண்டிய ஒரு முக்கிய கருத்து இயற்பியல் உண்ணி (சில நேரங்களில் "
"மறு செய்கைகள் அல்லது இயற்பியல் பிரேம்கள் என குறிப்பிடப்படுகிறது), மற்றும் பிரேம்கள் "
"வழங்கப்பட்ட வேறுபாடு ஆகும். இயற்பியல் ஒரு நிலையான டிக் விகிதத்தில் தொடர்கிறது "
"(அமைக்கவும்: `திட்ட அமைப்புகள்> இயற்பியல்> பொது> இயற்பியல் ஒரு நொடிக்கு டிக் "
"<class_projectsettings_property_physics/பொதுவான/இயற்பியல்_டிக்ச்_பெர்_செக்ட்>`), "
"இது நொடிக்கு 60 சாட்சிகளுக்கு இயல்புநிலையாகும்."

msgid ""
"However, the engine does not necessarily **render** at the same rate. "
"Although many monitors refresh at 60 Hz (cycles per second), many refresh at "
"completely different frequencies (e.g. 75 Hz, 144 Hz, 240 Hz or more). Even "
"though a monitor may be able to show a new frame e.g. 60 times a second, "
"there is no guarantee that the CPU and GPU will be able to *supply* frames "
"at this rate. For instance, when running with V-Sync, the computer may be "
"too slow for 60 and only reach the deadlines for 30 FPS, in which case the "
"frames you see will change at 30 FPS (resulting in stuttering)."
msgstr ""
"இருப்பினும், இயந்திரம் அதே விகிதத்தில் ** வழங்குதல் ** ஐ வழங்க வேண்டிய அவசியமில்லை. பல "
"மானிட்டர்கள் 60 எர்ட்ச் (வினாடிக்கு சுழற்சிகள்) புதுப்பித்தாலும், பலர் முற்றிலும் மாறுபட்ட "
"அதிர்வெண்களில் (எ.கா. 75 எர்ட்ச், 144 எர்ட்ச், 240 எர்ட்ச் அல்லது அதற்கு மேற்பட்டவை) "
"புதுப்பிக்கின்றனர். ஒரு மானிட்டர் ஒரு புதிய சட்டகத்தைக் காட்ட முடியும் என்றாலும் எ.கா. "
"ஒரு நொடிக்கு 60 முறை, சிபியு மற்றும் GPU இந்த விகிதத்தில் * பிரேம்களை வழங்க முடியும் "
"என்பதற்கு எந்த உத்தரவாதமும் இல்லை. உதாரணமாக, வி-ஒத்திசைவுடன் இயங்கும்போது, கணினி 60 "
"க்கு மிகவும் மெதுவாக இருக்கலாம் மற்றும் 30 எஃப்.பி.எச்-க்கு காலக்கெடுவை மட்டுமே "
"அடையலாம், இந்த விசயத்தில் நீங்கள் பார்க்கும் பிரேம்கள் 30 எஃப்.பி.எச்சில் மாறும் (இதன் "
"விளைவாக தடுமாறும்)."

msgid ""
"But there is a problem here. What happens if the physics ticks do not "
"coincide with frames? What happens if the physics tick rate is out of phase "
"with the frame rate? Or worse, what happens if the physics tick rate is "
"*lower* than the rendered frame rate?"
msgstr ""
"ஆனால் இங்கே ஒரு சிக்கல் உள்ளது. இயற்பியல் உண்ணி பிரேம்களுடன் ஒத்துப்போகவில்லை என்றால் என்ன "
"ஆகும்? பிரேம் வீதத்துடன் இயற்பியல் டிக் விகிதம் கட்டத்திற்கு வெளியே இருந்தால் என்ன ஆகும்? "
"அல்லது மோசமாக, இயற்பியல் டிக் விகிதம் வழங்கப்பட்ட பிரேம் வீதத்தை விட * குறைவாக இருந்தால் "
"என்ன ஆகும்?"

msgid ""
"This problem is easier to understand if we consider an extreme scenario. If "
"you set the physics tick rate to 10 ticks per second, in a simple game with "
"a rendered frame rate of 60 FPS. If we plot a graph of the positions of an "
"object against the rendered frames, you can see that the positions will "
"appear to \"jump\" every 1/10th of a second, rather than giving a smooth "
"motion. When the physics calculates a new position for a new object, it is "
"not rendered in this position for just one frame, but for 6 frames."
msgstr ""
"ஒரு தீவிரமான காட்சியை நாம் கருத்தில் கொண்டால் இந்த சிக்கலைப் புரிந்துகொள்வது எளிது. நீங்கள் "
"இயற்பியல் டிக் விகிதத்தை நொடிக்கு 10 டிக் ஆக அமைத்தால், 60 FPS இன் வழங்குதல் பிரேம் "
"வீதத்துடன் கூடிய எளிய விளையாட்டில். வழங்குதல் செய்யப்பட்ட பிரேம்களுக்கு எதிராக ஒரு "
"பொருளின் நிலைகளின் வரைபடத்தை நாங்கள் சூழ்ச்சி செய்தால், ஒரு மென்மையான இயக்கத்தைக் "
"கொடுப்பதை விட, ஒரு வினாடியின் ஒவ்வொரு 1/10 வது இடங்களும் \"குதிக்க\" தோன்றும் என்பதை "
"நீங்கள் காணலாம். இயற்பியல் ஒரு புதிய பொருளுக்கு ஒரு புதிய நிலையை கணக்கிடும்போது, அது "
"ஒரு சட்டகத்திற்கு இந்த நிலையில் வழங்கப்படவில்லை, ஆனால் 6 பிரேம்களுக்கு."

msgid ""
"This jump can be seen in other combinations of tick / frame rate as "
"glitches, or jitter, caused by this staircasing effect due to the "
"discrepancy between physics tick time and rendered frame time."
msgstr ""
"இந்த தாவலை டிக் / பிரேம் வீதத்தின் பிற சேர்க்கைகளில் குறைபாடுகள் அல்லது நடுக்கம், இயற்பியல் "
"டிக் நேரம் மற்றும் வழங்கப்பட்ட பிரேம் நேரம் ஆகியவற்றுக்கு இடையிலான வேறுபாடு காரணமாக இந்த "
"படிக்கட்டு விளைவால் ஏற்படுகிறது."

msgid "What can we do about frames and ticks being out of sync?"
msgstr ""
"பிரேம்கள் மற்றும் உண்ணி ஒத்திசைவுக்கு வெளியே இருப்பது பற்றி நாம் என்ன செய்ய முடியும்?"

msgid "Lock the tick / frame rate together?"
msgstr "டிக் / பிரேம் வீதத்தை ஒன்றாக பூட்டவா?"

msgid ""
"The most obvious solution is to get rid of the problem, by ensuring there is "
"a physics tick that coincides with every frame. This used to be the approach "
"on old consoles and fixed hardware computers. If you know that every player "
"will be using the same hardware, you can ensure it is fast enough to "
"calculate ticks and frames at e.g. 50 FPS, and you will be sure it will work "
"great for everybody."
msgstr ""
"ஒவ்வொரு சட்டகத்துடனும் ஒத்துப்போகும் இயற்பியல் டிக் இருப்பதை உறுதி செய்வதன் மூலம், சிக்கலில் "
"இருந்து விடுபடுவதே மிகவும் வெளிப்படையான தீர்வு. இது பழைய கன்சோல்கள் மற்றும் நிலையான "
"வன்பொருள் கணினிகளில் அணுகுமுறையாக இருந்தது. ஒவ்வொரு வீரரும் ஒரே வன்பொருளைப் "
"பயன்படுத்துவார்கள் என்பது உங்களுக்குத் தெரிந்தால், எ.கா. 50 எஃப்.பி.எச், இது எல்லோருக்கும் "
"நன்றாக வேலை செய்யும் என்று நீங்கள் உறுதியாக நம்புவீர்கள்."

msgid ""
"However, modern games are often no longer made for fixed hardware. You will "
"often be planning to release on desktop computers, mobiles, and more. All of "
"which have huge variations in performance, as well as different monitor "
"refresh rates. We need to come up with a better way of dealing with the "
"problem."
msgstr ""
"இருப்பினும், நவீன விளையாட்டுகள் பெரும்பாலும் நிலையான வன்பொருளுக்காக உருவாக்கப்படாது. "
"டெச்க்டாப் கணினிகள், மொபைல்கள் மற்றும் பலவற்றை வெளியிட நீங்கள் அடிக்கடி திட்டமிட்டுள்ளீர்கள். "
"இவை அனைத்தும் செயல்திறனில் பெரும் மாறுபாடுகளைக் கொண்டுள்ளன, அத்துடன் வெவ்வேறு மானிட்டர் "
"புதுப்பிப்பு விகிதங்களும் உள்ளன. சிக்கலைக் கையாள்வதற்கான சிறந்த வழியை நாம் கொண்டு வர "
"வேண்டும்."

msgid "Adapt the tick rate?"
msgstr "டிக் விகிதத்தை மாற்றியமைக்கவா?"

msgid ""
"Instead of designing the game at a fixed physics tick rate, we could allow "
"the tick rate to scale according to the end users hardware. We could for "
"example use a fixed tick rate that works for that hardware, or even vary the "
"duration of each physics tick to match a particular frame duration."
msgstr ""
"ஒரு நிலையான இயற்பியல் டிக் விகிதத்தில் விளையாட்டை வடிவமைப்பதற்கு பதிலாக, இறுதி "
"பயனர்களின் வன்பொருளின் படி டிக் விகிதத்தை அளவிட அனுமதிக்கலாம். உதாரணமாக அந்த "
"வன்பொருளுக்கு வேலை செய்யும் ஒரு நிலையான டிக் விகிதத்தைப் பயன்படுத்தலாம் அல்லது ஒரு "
"குறிப்பிட்ட பிரேம் காலத்திற்கு பொருந்தக்கூடிய ஒவ்வொரு இயற்பியல் டிக்கின் காலத்தையும் "
"வேறுபடுத்தலாம்."

msgid ""
"This works, but there is a problem. Physics (*and game logic*, which is "
"often also run in the ``_physics_process``) work best and most consistently "
"when run at a **fixed**, predetermined tick rate. If you attempt to run a "
"racing game physics that has been designed for 60 TPS (ticks per second) at "
"e.g. 10 TPS, the physics will behave completely differently. Controls may be "
"less responsive, collisions / trajectories can be completely different. You "
"may test your game thoroughly at 60 TPS, then find it breaks on end users "
"machines when it runs at a different tick rate."
msgstr ""
"இது வேலை செய்கிறது, ஆனால் ஒரு சிக்கல் உள்ளது. இயற்பியல் (*மற்றும் கேம் லாசிக்*, இது "
"பெரும்பாலும் `_Physics_Process``) இல் இயங்குகிறது, இது ** நிலையான **, முன்னரே "
"தீர்மானிக்கப்பட்ட டிக் விகிதத்தில் இயங்கும்போது மிகச் சிறப்பாகவும், தொடர்ந்து செயல்படவும். "
"எ.கா. 10 டி.பி.எச், இயற்பியல் முற்றிலும் வித்தியாசமாக நடந்து கொள்ளும். கட்டுப்பாடுகள் "
"குறைவாக பதிலளிக்கக்கூடியதாக இருக்கலாம், மோதல்கள் / பாதைகள் முற்றிலும் வேறுபட்டதாக "
"இருக்கலாம். உங்கள் விளையாட்டை 60 டி.பி.எச்சில் முழுமையாக சோதிக்கலாம், பின்னர் அது வேறு "
"டிக் விகிதத்தில் இயங்கும்போது இறுதி பயனர்களின் இயந்திரங்களை உடைப்பதைக் காணலாம்."

msgid ""
"This can make quality assurance difficult with hard to reproduce bugs, "
"especially in AAA games where problems of this sort can be very costly. This "
"can also be problematic for multiplayer games for competitive integrity, as "
"running the game at certain tick rates may be more advantageous than others."
msgstr ""
"பிழைகளை இனப்பெருக்கம் செய்வது கடினமாக தரமான உத்தரவாதத்தை கடினமாக்கும், குறிப்பாக AAA "
"விளையாட்டுகளில் இந்த வகையான பிரச்சினைகள் மிகவும் விலை உயர்ந்தவை. போட்டி "
"ஒருமைப்பாட்டிற்கான மல்டிபிளேயர் கேம்களுக்கும் இது சிக்கலாக இருக்கும், ஏனெனில் சில டிக் "
"விகிதங்களில் விளையாட்டை இயக்குவது மற்றவர்களை விட மிகவும் சாதகமாக இருக்கும்."

msgid ""
"Lock the tick rate, but use interpolation to smooth frames in between "
"physics ticks"
msgstr ""
"டிக் விகிதத்தை பூட்டவும், ஆனால் இயற்பியல் உண்ணிக்கு இடையில் பிரேம்களை மென்மையாக்க "
"இடைக்கணிப்பைப் பயன்படுத்தவும்"

msgid ""
"This has become one of the most popular approaches to deal with the problem, "
"although it is optional and disabled by default."
msgstr ""
"இது சிக்கலைச் சமாளிப்பதற்கான மிகவும் பிரபலமான அணுகுமுறைகளில் ஒன்றாக மாறியுள்ளது, "
"இருப்பினும் இது இயல்புநிலையாக விருப்பமானது மற்றும் முடக்கப்பட்டுள்ளது."

msgid ""
"We have established that the most desirable physics/game logic arrangement "
"for consistency and predictability is a physics tick rate that is fixed at "
"design-time. The problem is the discrepancy between the physics position "
"recorded, and where we \"want\" a physics object to be shown on a frame to "
"give smooth motion."
msgstr ""
"நிலைத்தன்மை மற்றும் முன்கணிப்புக்கான மிகவும் விரும்பத்தக்க இயற்பியல்/விளையாட்டு வழக்கு "
"ஏற்பாடு என்பது வடிவமைப்பு நேரத்தில் நிர்ணயிக்கப்பட்ட ஒரு இயற்பியல் டிக் விகிதம் என்பதை "
"நாங்கள் நிறுவியுள்ளோம். பதிவுசெய்யப்பட்ட இயற்பியல் நிலைக்கு இடையிலான முரண்பாடு, மற்றும் "
"மென்மையான இயக்கத்தை அளிக்க ஒரு சட்டத்தில் ஒரு இயற்பியல் பொருளை \"விரும்புகிறோம்\"."

msgid ""
"The answer turns out to be simple, but can be a little hard to get your head "
"around at first."
msgstr ""
"பதில் எளிமையானதாக மாறும், ஆனால் முதலில் உங்கள் தலையைச் சுற்றி வருவதற்கு கொஞ்சம் கடினமாக "
"இருக்கும்."

msgid ""
"Instead of keeping track of just the current position of a physics object in "
"the engine, we keep track of *both the current position of the object, and "
"the previous position* on the previous physics tick."
msgstr ""
"இயந்திரத்தில் ஒரு இயற்பியல் பொருளின் தற்போதைய நிலையை கண்காணிப்பதற்குப் பதிலாக, பொருளின் "
"தற்போதைய நிலை மற்றும் முந்தைய இயற்பியல் டிக்கில் முந்தைய நிலை * இரண்டையும் கண்காணிக்கிறோம்."

msgid ""
"Why do we need the previous position *(in fact the entire transform, "
"including rotation and scaling)*? By using a little math magic, we can use "
"**interpolation** to calculate what the transform of the object would be "
"between those two points, in our ideal world of smooth continuous movement."
msgstr ""
"முந்தைய நிலை நமக்கு ஏன் தேவை *(உண்மையில் சுழற்சி மற்றும் அளவிடுதல் உட்பட முழு மாற்றமும்) "
"*? ஒரு சிறிய கணித மந்திரத்தைப் பயன்படுத்துவதன் மூலம், மென்மையான தொடர்ச்சியான இயக்கத்தின் "
"நமது சிறந்த உலகில், அந்த இரண்டு புள்ளிகளுக்கும் இடையில் பொருளின் மாற்றம் என்ன என்பதைக் "
"கணக்கிட ** இடைக்கணிப்பு ** ஐப் பயன்படுத்தலாம்."

msgid "Linear interpolation"
msgstr "நேரியல் இடைக்கணிப்பு"

msgid ""
"The simplest way to achieve this is linear interpolation, or lerping, which "
"you may have used before."
msgstr ""
"இதை அடைவதற்கான எளிய வழி நேரியல் இடைக்கணிப்பு அல்லது லெர்பிங் ஆகும், இது நீங்கள் முன்பு "
"பயன்படுத்தியிருக்கலாம்."

msgid ""
"Let us consider only the position, and a situation where we know that the "
"previous physics tick X coordinate was 10 units, and the current physics "
"tick X coordinate is 30 units."
msgstr ""
"முந்தைய இயற்பியல் டிக் ஃச் ஒருங்கிணைப்பு 10 அலகுகள் என்பதையும், தற்போதைய இயற்பியல் டிக் ஃச் "
"ஒருங்கிணைப்பு 30 அலகுகள் என்பதையும் நாம் அறிந்த ஒரு நிலை மற்றும் ஒரு சூழ்நிலையை மட்டுமே "
"கருத்தில் கொள்வோம்."

msgid ""
"Although the maths is explained here, you do not have to worry about the "
"details, as this step will be performed for you. Under the hood, Godot may "
"use more complex forms of interpolation, but linear interpolation is the "
"easiest in terms of explanation."
msgstr ""
"கணிதம் இங்கே விளக்கப்பட்டாலும், விவரங்களைப் பற்றி நீங்கள் கவலைப்பட வேண்டியதில்லை, ஏனெனில் "
"இந்த நடவடிக்கை உங்களுக்காக செய்யப்படும். ஊட்டின் கீழ், கோடோட் இடைக்கணிப்பின் மிகவும் சிக்கலான "
"வடிவங்களைப் பயன்படுத்தலாம், ஆனால் விளக்கத்தின் அடிப்படையில் நேரியல் இடைக்கணிப்பு எளிதானது."

msgid "The physics interpolation fraction"
msgstr "இயற்பியல் இடைக்கணிப்பு பின்னம்"

msgid ""
"If our physics ticks are happening 10 times per second (for this example), "
"what happens if our rendered frame takes place at time 0.12 seconds? We can "
"do some math to figure out where the object would be to obtain a smooth "
"motion between the two ticks."
msgstr ""
"எங்கள் இயற்பியல் உண்ணி நொடிக்கு 10 முறை நடந்தால் (இந்த எடுத்துக்காட்டுக்கு), எங்கள் "
"வழங்கப்பட்ட சட்டகம் 0.12 வினாடிகளில் நடந்தால் என்ன ஆகும்? இரண்டு உண்ணிகளுக்கும் இடையில் ஒரு "
"மென்மையான இயக்கத்தைப் பெறுவதற்கான பொருள் எங்கே இருக்கும் என்பதைக் கண்டுபிடிக்க நாம் சில "
"கணிதத்தைச் செய்யலாம்."

msgid ""
"First of all, we have to calculate how far through the physics tick we want "
"the object to be. If the last physics tick took place at 0.1 seconds, we are "
"0.02 seconds *(0.12 - 0.1)* through a tick that we know will take 0.1 "
"seconds (10 ticks per second). The fraction through the tick is thus:"
msgstr ""
"முதலாவதாக, இயற்பியல் மூலம் பொருள் எவ்வளவு தூரம் இருக்க வேண்டும் என்று நாம் கணக்கிட "
"வேண்டும். கடைசி இயற்பியல் டிக் 0.1 வினாடிகளில் நடந்தால், நாங்கள் 0.02 வினாடிகள் * (0.12 "
"- 0.1) * ஒரு டிக் மூலம் 0.1 வினாடிகள் (வினாடிக்கு 10 உண்ணி) எடுக்கும் என்று "
"எங்களுக்குத் தெரியும். டிக் வழியாக பின்னம் இவ்வாறு:"

msgid ""
"This is called the **physics interpolation fraction**, and is handily "
"calculated for you by Godot. It can be retrieved on any frame by "
"calling :ref:`Engine.get_physics_interpolation_fraction<class_Engine_method_get_physics_interpolation_fraction>`."
msgstr ""
"இது ** இயற்பியல் இடைக்கணிப்பு பின்னம் ** என்று அழைக்கப்படுகிறது, மேலும் இது கோடோட்டால் "
"உங்களுக்காக கணக்கிடப்படுகிறது. அழைப்பதன் மூலம் எந்தவொரு சட்டத்திலும் இதை மீட்டெடுக்கலாம்: "
"ref: `Engine.get_physics_interpolation_fraction "
"<class_engine_method_get_physics_interpolation_fraction>`."

msgid "Calculating the interpolated position"
msgstr "இடைக்கணிப்பு நிலையை கணக்கிடுதல்"

msgid ""
"Once we have the interpolation fraction, we can insert it into a standard "
"linear interpolation equation. The X coordinate would thus be:"
msgstr ""
"இடைக்கணிப்பு பின்னம் நம்மிடம் இருந்தவுடன், அதை ஒரு நிலையான நேரியல் இடைக்கணிப்பு "
"சமன்பாட்டில் செருகலாம். ஃச் ஒருங்கிணைப்பு இவ்வாறு இருக்கும்:"

msgid "So substituting our ``x_prev`` as 10, and ``x_curr`` as 30:"
msgstr "எனவே எங்கள் `` x_prev`` ஐ 10 ஆகவும், `` x_curr`` 30 ஆகவும் மாற்றுகிறது:"

msgid "Let's break that down:"
msgstr "அதை உடைப்போம்:"

msgid ""
"We know the X starts from the coordinate on the previous tick (``x_prev``) "
"which is 10 units."
msgstr ""
"10 அலகுகள் என்ற முந்தைய டிக் (`` x_prev``) இன் ஒருங்கிணைப்பிலிருந்து ஃச் தொடங்குகிறது "
"என்பது எங்களுக்குத் தெரியும்."

msgid ""
"We know that after the full tick, the difference between the current tick "
"and the previous tick will have been added (``x_curr - x_prev``) (which is "
"20 units)."
msgstr ""
"முழு டிக்குக்குப் பிறகு, தற்போதைய டிக் மற்றும் முந்தைய டிக் இடையேயான வேறுபாடு "
"சேர்க்கப்பட்டிருக்கும் என்பதை நாங்கள் அறிவோம் (`` x_curr - x_prev``) (இது 20 அலகுகள்)."

msgid ""
"The only thing we need to vary is the proportion of this difference we add, "
"according to how far we are through the physics tick."
msgstr ""
"இயற்பியல் டிக் மூலம் நாம் எவ்வளவு தூரம் இருக்கிறோம் என்பதைப் பொறுத்தவரை, நாம் சேர்க்கும் இந்த "
"வேறுபாட்டின் விகிதமே நாம் மாறுபட வேண்டிய ஒரே சேதி."

msgid ""
"Although this example interpolates the position, the same thing can be done "
"with the rotation and scale of objects. It is not necessary to know the "
"details as Godot will do all this for you."
msgstr ""
"இந்த எடுத்துக்காட்டு நிலையை இடமாற்றம் செய்தாலும், அதே காரியத்தை பொருள்களின் சுழற்சி "
"மற்றும் அளவிலும் செய்ய முடியும். கோடோட் உங்களுக்காக இதையெல்லாம் செய்யும் என்பதால் விவரங்களை "
"அறிந்து கொள்வது அவசியமில்லை."

msgid "Smoothed transformations between physics ticks?"
msgstr "இயற்பியல் உண்ணிக்கு இடையில் மென்மையான மாற்றங்கள்?"

msgid ""
"Putting all this together shows that it should be possible to have a nice "
"smooth estimation of the transform of objects between the current and "
"previous physics tick."
msgstr ""
"இவை அனைத்தையும் ஒன்றாக இணைப்பது, தற்போதைய மற்றும் முந்தைய இயற்பியல் டிக் இடையே "
"பொருட்களின் உருமாற்றத்தின் நல்ல மென்மையான மதிப்பீட்டைக் கொண்டிருக்க முடியும் என்பதைக் "
"காட்டுகிறது."

msgid ""
"But wait, you may have noticed something. If we are interpolating between "
"the current and previous ticks, we are not estimating the position of the "
"object *now*, we are estimating the position of the object in the past. To "
"be exact, we are estimating the position of the object *between 1 and 2 "
"ticks* into the past."
msgstr ""
"ஆனால் காத்திருங்கள், நீங்கள் ஏதாவது கவனித்திருக்கலாம். தற்போதைய மற்றும் முந்தைய உண்ணி இடையே "
"நாம் இடைக்கணிப்பாக இருந்தால், பொருளின் நிலையை *இப்போது *மதிப்பிடவில்லை என்றால், கடந்த "
"காலங்களில் பொருளின் நிலையை மதிப்பிடுகிறோம். சரியாகச் சொல்வதானால், 1 முதல் 2 உண்ணி * "
"வரை பொருளின் நிலையை கடந்த காலத்திற்கு மதிப்பிடுகிறோம்."

msgid "In the past"
msgstr "கடந்த காலத்தில்"

msgid ""
"What does this mean? This scheme does work, but it does mean we are "
"effectively introducing a delay between what we see on the screen, and where "
"the objects *should* be."
msgstr ""
"இதன் பொருள் என்ன? இந்த திட்டம் வேலை செய்கிறது, ஆனால் திரையில் நாம் காணும் விசயங்களுக்கும், "
"பொருள்கள் * இருக்க வேண்டிய இடங்களுக்கும் இடையில் தாமதத்தை திறம்பட அறிமுகப்படுத்துகிறோம் "
"என்று பொருள்."

msgid ""
"In practice, most people won't notice this delay, or rather, it is typically "
"not *objectionable*. There are already significant delays involved in games, "
"we just don't typically notice them. The most significant effect is there "
"can be a slight delay to input, which can be a factor in fast twitch games. "
"In some of these fast input situations, you may wish to turn off physics "
"interpolation and use a different scheme, or use a high tick rate, which "
"mitigates these delays."
msgstr ""
"நடைமுறையில், இந்த தாமதத்தை பெரும்பாலான மக்கள் கவனிக்க மாட்டார்கள், அல்லது மாறாக, இது "
"பொதுவாக *ஆட்சேபனைக்குரியது அல்ல. விளையாட்டுகளில் ஏற்கனவே குறிப்பிடத்தக்க தாமதங்கள் "
"உள்ளன, நாங்கள் பொதுவாக அவற்றைக் கவனிக்க மாட்டோம். மிக முக்கியமான விளைவு என்னவென்றால், "
"உள்ளீட்டிற்கு சற்று நேரந்தவறுகை ஏற்படலாம், இது வேகமான இழுப்பு விளையாட்டுகளில் ஒரு "
"காரணியாக இருக்கலாம். இந்த வேகமான உள்ளீட்டு சூழ்நிலைகளில் சிலவற்றில், நீங்கள் இயற்பியல் "
"இடைக்கணிப்பை அணைத்து வேறு திட்டத்தைப் பயன்படுத்த விரும்பலாம் அல்லது அதிக டிக் விகிதத்தைப் "
"பயன்படுத்தலாம், இது இந்த தாமதங்களைத் தணிக்கும்."

msgid "Why look into the past? Why not predict the future?"
msgstr "கடந்த காலத்தை ஏன் பார்க்க வேண்டும்? எதிர்காலத்தை ஏன் கணிக்கக்கூடாது?"

msgid ""
"There is an alternative to this scheme, which is: instead of interpolating "
"between the previous and current tick, we use maths to *extrapolate* into "
"the future. We try to predict where the object *will be*, rather than show "
"it where it was. This can be done and may be offered as an option in future, "
"but there are some significant downsides:"
msgstr ""
"இந்த திட்டத்திற்கு ஒரு மாற்று உள்ளது, அதாவது: முந்தைய மற்றும் தற்போதைய டிக் இடையே "
"இடைக்கணிப்பதற்கு பதிலாக, கணிதங்களை எதிர்காலத்தில் * எக்ச்ட்ராபோலேட் செய்ய "
"பயன்படுத்துகிறோம். பொருள் *எங்கே இருக்கும் என்பதை கணிக்க முயற்சிக்கிறோம், அது "
"எங்கிருந்தாலும் அதைக் காண்பிப்பதை விட. இதைச் செய்யலாம் மற்றும் எதிர்காலத்தில் ஒரு "
"விருப்பமாக வழங்கப்படலாம், ஆனால் சில குறிப்பிடத்தக்க குறைபாடுகள் உள்ளன:"

msgid ""
"The prediction may not be correct, especially when an object collides with "
"another object during the physics tick."
msgstr ""
"கணிப்பு சரியாக இருக்காது, குறிப்பாக இயற்பியல் டிக் போது ஒரு பொருள் மற்றொரு பொருளுடன் "
"மோதுகையில்."

msgid ""
"Where a prediction was incorrect, the object may extrapolate into an "
"\"impossible\" position, like inside a wall."
msgstr ""
"ஒரு கணிப்பு தவறாக இருந்த இடத்தில், பொருள் ஒரு சுவருக்குள் இருப்பதைப் போல ஒரு "
"\"சாத்தியமற்ற\" நிலைக்கு விரிவுபடுத்தக்கூடும்."

msgid ""
"Providing the movement speed is slow, these incorrect predictions may not be "
"too much of a problem."
msgstr ""
"இயக்க வேகத்தை வழங்குவது மெதுவாக உள்ளது, இந்த தவறான கணிப்புகள் ஒரு பிரச்சினையாக "
"இருக்காது."

msgid ""
"When a prediction was incorrect, the object may have to jump or snap back "
"onto the corrected path. This can be visually jarring."
msgstr ""
"ஒரு கணிப்பு தவறாக இருந்தபோது, பொருள் திருத்தப்பட்ட பாதையில் குதிக்க வேண்டும் அல்லது "
"மீண்டும் எடுக்க வேண்டியிருக்கும். இது பார்வைக்கு சார்ரிங் செய்யலாம்."

msgid "Fixed timestep interpolation"
msgstr "நிலையான நேர இடைக்கணிப்பு"

msgid ""
"In Godot this whole system is referred to as physics interpolation, but you "
"may also hear it referred to as **\"fixed timestep interpolation\"**, as it "
"is interpolating between objects moved with a fixed timestep (physics ticks "
"per second). In some ways the second term is more accurate, because it can "
"also be used to interpolate objects that are not driven by physics."
msgstr ""
"கோடோட்டில் இந்த முழு அமைப்பும் இயற்பியல் இடைக்கணிப்பு என குறிப்பிடப்படுகிறது, ஆனால் இது "
"** \"நிலையான நேர அட்டவணையின் இடைக்கணிப்பு\" ** என்றும் குறிப்பிடப்படுவதையும் நீங்கள் "
"கேட்கலாம், ஏனெனில் இது ஒரு நிலையான நேர அட்டவணையுடன் (வினாடிக்கு இயற்பியல் உண்ணி) "
"நகர்த்தப்பட்ட பொருள்களுக்கு இடையில் இடைக்கணிக்கிறது. சில வழிகளில் இரண்டாவது சொல் மிகவும் "
"துல்லியமானது, ஏனென்றால் இயற்பியலால் இயக்கப்படாத பொருள்களை இடைக்கணிக்க இது "
"பயன்படுத்தப்படலாம்."

msgid ""
"Although physics interpolation is usually a good choice, there are "
"exceptions where you may choose not to use Godot's built-in physics "
"interpolation (or use it in a limited fashion). An example category is "
"internet multiplayer games. Multiplayer games often receive tick or timing "
"based information from other players or a server and these may not coincide "
"with local physics ticks, so a custom interpolation technique can often be a "
"better fit."
msgstr ""
"இயற்பியல் இடைக்கணிப்பு பொதுவாக ஒரு நல்ல தேர்வாக இருந்தாலும், கோடோட்டின் உள்ளமைக்கப்பட்ட "
"இயற்பியல் இடைக்கணிப்பைப் பயன்படுத்த வேண்டாம் என்று நீங்கள் தேர்வுசெய்யக்கூடிய விதிவிலக்குகள் "
"உள்ளன (அல்லது அதை வரையறுக்கப்பட்ட பாணியில் பயன்படுத்தவும்). ஒரு எடுத்துக்காட்டு வகை இணைய "
"மல்டிபிளேயர் விளையாட்டுகள். மல்டிபிளேயர் கேம்கள் பெரும்பாலும் பிற வீரர்கள் அல்லது "
"சேவையகத்திலிருந்து டிக் அல்லது டைமிங் அடிப்படையிலான தகவல்களைப் பெறுகின்றன, மேலும் இவை "
"உள்ளக இயற்பியல் உண்ணியுடன் ஒத்துப்போகாது, எனவே தனிப்பயன் இடைக்கணிப்பு நுட்பம் பெரும்பாலும் "
"சிறந்த பொருத்தமாக இருக்கும்."
