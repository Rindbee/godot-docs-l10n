#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using RigidBody"
msgstr "ரிகிட்போடி பயன்படுத்துதல்"

msgid "What is a rigid body?"
msgstr "கடுமையான உடல் என்றால் என்ன?"

msgid ""
"A rigid body is one that is directly controlled by the physics engine in "
"order to simulate the behavior of physical objects. In order to define the "
"shape of the body, it must have one or more :ref:`Shape3D <class_Shape3D>` "
"objects assigned. Note that setting the position of these shapes will affect "
"the body's center of mass."
msgstr ""
"ஒரு கடினமான உடல் என்பது இயற்பியல் பொருள்களின் நடத்தையை உருவகப்படுத்துவதற்காக இயற்பியல் "
"இயந்திரத்தால் நேரடியாக கட்டுப்படுத்தப்படுகிறது. உடலின் வடிவத்தை வரையறுக்க, அதற்கு ஒன்று "
"அல்லது அதற்கு மேற்பட்டவை இருக்க வேண்டும்: ref: `shate3d <class_shape3d>` ஒதுக்கப்பட்ட "
"பொருள்கள். இந்த வடிவங்களின் நிலையை அமைப்பது உடலின் வெகுசன மையத்தை பாதிக்கும் என்பதை "
"நினைவில் கொள்க."

msgid "How to control a rigid body"
msgstr "ஒரு கடினமான உடலைக் கட்டுப்படுத்துவது எப்படி"

msgid ""
"A rigid body's behavior can be altered by setting its properties, such as "
"mass and weight. A physics material needs to be added to the rigid body to "
"adjust its friction and bounce, and set if it's absorbent and/or rough. "
"These properties can be set in the Inspector or via code. "
"See :ref:`RigidBody3D <class_RigidBody3D>` and :ref:`PhysicsMaterial "
"<class_PhysicsMaterial>` for the full list of properties and their effects."
msgstr ""
"வெகுசன மற்றும் எடை போன்ற அதன் பண்புகளை அமைப்பதன் மூலம் ஒரு கடினமான உடலின் நடத்தை "
"மாற்றப்படலாம். ஒரு இயற்பியல் பொருள் அதன் உராய்வை சரிசெய்யவும், துள்ளவும் கடுமையான உடலில் "
"சேர்க்கப்பட வேண்டும், மேலும் அது உறிஞ்சக்கூடிய மற்றும்/அல்லது கடினமானதாக இருந்தால் அமைக்க "
"வேண்டும். இந்த பண்புகளை இன்ச்பெக்டரில் அல்லது குறியீடு வழியாக அமைக்கலாம். காண்க: ref: "
"`rigidbody3d <class_rigidbody3d>` மற்றும்: ref: `இயற்பியலாளர் "
"<class_physicsmaterial>` பண்புகள் மற்றும் அவற்றின் விளைவுகளின் முழு பட்டியலுக்கும்."

msgid ""
"There are several ways to control a rigid body's movement, depending on your "
"desired application."
msgstr ""
"நீங்கள் விரும்பிய பயன்பாட்டைப் பொறுத்து ஒரு கடுமையான உடலின் இயக்கத்தைக் கட்டுப்படுத்த பல "
"வழிகள் உள்ளன."

msgid ""
"If you only need to place a rigid body once, for example to set its initial "
"location, you can use the methods provided by the :ref:`Node3D "
"<class_Node3D>` node, such as ``set_global_transform()`` or ``look_at()``. "
"However, these methods cannot be called every frame or the physics engine "
"will not be able to correctly simulate the body's state. As an example, "
"consider a rigid body that you want to rotate so that it points towards "
"another object. A common mistake when implementing this kind of behavior is "
"to use ``look_at()`` every frame, which breaks the physics simulation. "
"Below, we'll demonstrate how to implement this correctly."
msgstr ""
"நீங்கள் ஒரு கடினமான உடலை ஒரு முறை மட்டுமே வைக்க வேண்டியிருந்தால், அதன் ஆரம்ப "
"இருப்பிடத்தை அமைக்க, நீங்கள் வழங்கிய முறைகளைப் பயன்படுத்தலாம்: re: `node3d "
"<class_node3d>` முனை, `` set_global_transform () `` `` `` போன்றவை look_at () "
"``. இருப்பினும், இந்த முறைகள் ஒவ்வொரு சட்டகத்தையும் அழைக்க முடியாது அல்லது இயற்பியல் "
"இயந்திரத்தால் உடலின் நிலையை சரியாக உருவகப்படுத்த முடியாது. உதாரணமாக, நீங்கள் சுழற்ற "
"விரும்பும் ஒரு கடினமான உடலைக் கவனியுங்கள், இதனால் அது மற்றொரு பொருளை நோக்கி "
"சுட்டிக்காட்டுகிறது. இந்த வகையான நடத்தையை செயல்படுத்தும்போது ஒரு பொதுவான தவறு "
"என்னவென்றால், இயற்பியல் உருவகப்படுத்துதலை உடைக்கும் ஒவ்வொரு சட்டகத்தையும் `` look_at () "
"`` பயன்படுத்துவது. கீழே, இதை எவ்வாறு சரியாக செயல்படுத்துவது என்பதை நாங்கள் நிரூபிப்போம்."

msgid ""
"The fact that you can't use ``set_global_transform()`` or ``look_at()`` "
"methods doesn't mean that you can't have full control of a rigid body. "
"Instead, you can control it by using the ``_integrate_forces()`` callback. "
"In this method, you can add *forces*, apply *impulses*, or set the "
"*velocity* in order to achieve any movement you desire."
msgstr ""
"நீங்கள் `` set_global_transform () `` அல்லது `` look_at () `` முறைகள் பயன்படுத்த "
"முடியாது என்பது ஒரு கடினமான உடலின் முழு கட்டுப்பாட்டையும் நீங்கள் கொண்டிருக்க முடியாது "
"என்று அர்த்தமல்ல. அதற்கு பதிலாக, `` _INTEGRATE_FORCES () `` திரும்பப்பெறுதலைப் "
"பயன்படுத்தி அதைக் கட்டுப்படுத்தலாம். இந்த முறையில், நீங்கள் விரும்பும் எந்த இயக்கத்தையும் அடைய "
"நீங்கள் *சக்திகளை *சேர்க்கலாம், *தூண்டுதல்களைப் பயன்படுத்தலாம் அல்லது *வேகத்தை *அமைக்கலாம்."

msgid "The \"look at\" method"
msgstr "\"பார்\" முறை"

msgid ""
"As described above, using the Node3D's ``look_at()`` method can't be used "
"each frame to follow a target. Here is a custom ``look_at()`` method called "
"``look_follow()`` that will work with rigid bodies:"
msgstr ""
"மேலே விவரிக்கப்பட்டுள்ளபடி, Node3D இன் `` look_at () `` முறையைப் பயன்படுத்துவது "
"ஒவ்வொரு சட்டத்தையும் இலக்கைப் பின்பற்ற முடியாது. இங்கே ஒரு தனிப்பயன் `` look_at () `` "
"முறை `` look_follow () `` இது கடுமையான உடல்களுடன் வேலை செய்யும்:"

msgid ""
"This method uses the rigid body's ``angular_velocity`` property to rotate "
"the body. The axis to rotate around is given by the cross product between "
"the current forward direction and the direction one wants to look in. The "
"``clamp`` is a simple method used to prevent the amount of rotation from "
"going past the direction which is wanted to be looked in, as the total "
"amount of rotation needed is given by the arccosine of the dot product. This "
"method can be used with ``axis_lock_angular_*`` as well. If more precise "
"control is needed, solutions such as ones relying on :ref:`class_Quaternion` "
"may be required, as discussed in :ref:`doc_using_transforms`."
msgstr ""
"இந்த முறை உடலை சுழற்ற கடுமையான உடலின் `` கோண_வெலோசிட்டி`` சொத்தை பயன்படுத்துகிறது. "
"சுழற்றுவதற்கான அச்சு தற்போதைய முன்னோக்கி திசைக்கும் ஒருவர் பார்க்க விரும்பும் திசைக்கும் "
"இடையில் குறுக்கு உற்பத்தியால் வழங்கப்படுகிறது. டாட் உற்பத்தியின் ஆர்கோசின் மூலம் தேவைப்படும் "
"மொத்த சுழற்சியின் அளவு வழங்கப்படுவதால், அதைப் பார்க்க வேண்டும். இந்த முறையை `` "
"AXIS_LOCK_ANGULAR_**`` உடன் பயன்படுத்தலாம். இன்னும் துல்லியமான கட்டுப்பாடு "
"தேவைப்பட்டால், நம்பியவர்கள்: ref: `class_quaternion` போன்ற தீர்வுகள் தேவைப்படலாம், இதில் "
"விவாதிக்கப்பட்டபடி: ref:` doc_using_transforms`."
