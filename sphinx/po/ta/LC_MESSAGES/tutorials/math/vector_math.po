#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Vector math"
msgstr "திசையன் கணிதம்"

msgid "Introduction"
msgstr "அறிமுகம்"

msgid ""
"This tutorial is a short and practical introduction to linear algebra as it "
"applies to game development. Linear algebra is the study of vectors and "
"their uses. Vectors have many applications in both 2D and 3D development and "
"Godot uses them extensively. Developing a good understanding of vector math "
"is essential to becoming a strong game developer."
msgstr ""
"இந்த பயிற்சி என்பது நேரியல் இயற்கணிதத்திற்கு ஒரு குறுகிய மற்றும் நடைமுறை அறிமுகமாகும், "
"ஏனெனில் இது விளையாட்டு வளர்ச்சிக்கு பொருந்தும். நேரியல் இயற்கணிதம் என்பது திசையன்கள் "
"மற்றும் அவற்றின் பயன்பாடுகளின் ஆய்வு. 2 டி மற்றும் 3 டி வளர்ச்சியில் திசையன்கள் பல "
"பயன்பாடுகளைக் கொண்டுள்ளன, மேலும் கோடோட் அவற்றை விரிவாகப் பயன்படுத்துகிறது. திசையன் "
"கணிதத்தைப் பற்றி நல்ல புரிதலை வளர்ப்பது ஒரு வலுவான விளையாட்டு உருவாக்குநராக "
"மாறுவதற்கு தேவை."

msgid ""
"This tutorial is **not** a formal textbook on linear algebra. We will only "
"be looking at how it is applied to game development. For a broader look at "
"the mathematics, see https://www.khanacademy.org/math/linear-algebra"
msgstr ""
"இந்த பயிற்சி ** அல்ல ** நேரியல் இயற்கணிதத்தில் ஒரு முறையான பாடநூல். விளையாட்டு "
"வளர்ச்சிக்கு இது எவ்வாறு பயன்படுத்தப்படுகிறது என்பதை மட்டுமே நாங்கள் பார்ப்போம். கணிதத்தைப் "
"பற்றிய பரந்த பார்வைக்கு, https://www.khanacademy.org/math/linear-algebra ஐப் "
"பார்க்கவும்"

msgid "Coordinate systems (2D)"
msgstr "ஒருங்கிணைப்பு அமைப்புகள் (2 டி)"

msgid ""
"In 2D space, coordinates are defined using a horizontal axis (``x``) and a "
"vertical axis (``y``). A particular position in 2D space is written as a "
"pair of values such as ``(4, 3)``."
msgstr ""
"2 டி இடத்தில், ஒரு கிடைமட்ட அச்சு (`` x``) மற்றும் செங்குத்து அச்சு (`` y``) "
"ஆகியவற்றைப் பயன்படுத்தி ஆயத்தொகுப்புகள் வரையறுக்கப்படுகின்றன. 2 டி இடத்தில் ஒரு "
"குறிப்பிட்ட நிலை `` (4, 3) `` போன்ற ஒரு இணை மதிப்புகளாக எழுதப்பட்டுள்ளது."

msgid ""
"If you're new to computer graphics, it might seem odd that the positive "
"``y`` axis points **downwards** instead of upwards, as you probably learned "
"in math class. However, this is common in most computer graphics "
"applications."
msgstr ""
"நீங்கள் கணினி கிராபிக்ச் புதியதாக இருந்தால், கணித வகுப்பில் நீங்கள் கற்றுக்கொண்டது போல, "
"நேர்மறையான `` y`` அச்சு புள்ளிகள் ** மேல்நோக்கி ** கீழ்நோக்கி ** என்பது ஒற்றைப்படை என்று "
"தோன்றலாம். இருப்பினும், பெரும்பாலான கணினி கிராபிக்ச் பயன்பாடுகளில் இது பொதுவானது."

msgid ""
"Any position in the 2D plane can be identified by a pair of numbers in this "
"way. However, we can also think of the position ``(4, 3)`` as an **offset** "
"from the ``(0, 0)`` point, or **origin**. Draw an arrow pointing from the "
"origin to the point:"
msgstr ""
"2 டி விமானத்தில் உள்ள எந்தவொரு நிலையையும் இந்த வழியில் ஒரு இணை எண்களால் அடையாளம் "
"காணலாம். எவ்வாறாயினும், `` (0, 0) `` புள்ளி, அல்லது ** தோற்றம் ** இலிருந்து `` (4, "
"3) `` ஒரு ** ஆஃப்செட் ** ஆகவும் நாம் சிந்திக்கலாம். தோற்றத்திலிருந்து புள்ளி வரை "
"சுட்டிக்காட்டும் ஒரு அம்புக்குறியை வரையவும்:"

msgid ""
"This is a **vector**. A vector represents a lot of useful information. As "
"well as telling us that the point is at ``(4, 3)``, we can also think of it "
"as an angle ``θ`` (theta) and a length (or magnitude) ``m``. In this case, "
"the arrow is a **position vector** - it denotes a position in space, "
"relative to the origin."
msgstr ""
"இது ஒரு ** திசையன் **. ஒரு திசையன் நிறைய பயனுள்ள தகவல்களைக் குறிக்கிறது. புள்ளி `` "
"(4, 3) `` இல் உள்ளது என்று எங்களிடம் கூறுவது, இதை ஒரு கோணமாகவும், `θ`` (தீட்டா) "
"மற்றும் ஒரு நீளம் (அல்லது அளவு)` `எம்`` என்றும் நினைக்கலாம். இந்த வழக்கில், அம்பு ஒரு ** "
"நிலை திசையன் ** - இது தோற்றத்துடன் ஒப்பிடும்போது விண்வெளியில் ஒரு நிலையைக் குறிக்கிறது."

msgid ""
"A very important point to consider about vectors is that they only represent "
"**relative** direction and magnitude. There is no concept of a vector's "
"position. The following two vectors are identical:"
msgstr ""
"திசையன்களைப் பற்றி கருத்தில் கொள்ள வேண்டிய மிக முக்கியமான சேதி என்னவென்றால், அவை ** "
"உறவினர் ** திசையையும் அளவையும் மட்டுமே குறிக்கின்றன. ஒரு திசையனின் நிலைப்பாடு பற்றிய "
"எந்த கருத்தும் இல்லை. பின்வரும் இரண்டு திசையன்கள் ஒரே மாதிரியானவை:"

msgid ""
"Both vectors represent a point 4 units to the right and 3 units below some "
"starting point. It does not matter where on the plane you draw the vector, "
"it always represents a relative direction and magnitude."
msgstr ""
"இரண்டு திசையன்களும் வலதுபுறத்தில் ஒரு புள்ளி 4 அலகுகளையும், சில தொடக்க புள்ளிகளுக்குக் "
"கீழே 3 அலகுகளையும் குறிக்கின்றன. விமானத்தில் நீங்கள் திசையனை எங்கு வரையலாம் என்பது "
"முக்கியமல்ல, அது எப்போதும் ஒரு உறவினர் திசையையும் அளவையும் குறிக்கிறது."

msgid "Vector operations"
msgstr "திசையன் செயல்பாடுகள்"

msgid ""
"You can use either method (x and y coordinates or angle and magnitude) to "
"refer to a vector, but for convenience, programmers typically use the "
"coordinate notation. For example, in Godot, the origin is the top-left "
"corner of the screen, so to place a 2D node named ``Node2D`` 400 pixels to "
"the right and 300 pixels down, use the following code:"
msgstr ""
"ஒரு திசையனைக் குறிக்க நீங்கள் முறை (x மற்றும் ஒய் ஆயத்தொகுப்புகள் அல்லது கோணம் மற்றும் "
"அளவு) பயன்படுத்தலாம், ஆனால் வசதிக்காக, புரோகிராமர்கள் பொதுவாக ஒருங்கிணைப்பு குறியீட்டைப் "
"பயன்படுத்துகிறார்கள். எடுத்துக்காட்டாக, கோடோட்டில், தோற்றம் திரையின் மேல்-இடது மூலையாகும், "
"எனவே 2 டி முனையை `` Node2d`` 400 படப்புள்ளிகள் வலதுபுறம் மற்றும் 300 படப்புள்ளிகள் "
"கீழே வைக்க, பின்வரும் குறியீட்டைப் பயன்படுத்தவும்:"

msgid ""
"Godot supports both :ref:`Vector2 <class_Vector2>` and :ref:`Vector3 "
"<class_Vector3>` for 2D and 3D usage, respectively. The same mathematical "
"rules discussed in this article apply to both types, and wherever we link to "
"``Vector2`` methods in the class reference, you can also check out their "
"``Vector3`` counterparts."
msgstr ""
"கோடோட் இரண்டையும் ஆதரிக்கிறது: ref: `vector2 <closs_vector2>` மற்றும்: ref: "
"`vector3 <class_vector3>` முறையே 2D மற்றும் 3D பயன்பாட்டிற்கு. இந்த கட்டுரையில் "
"விவாதிக்கப்பட்ட அதே கணித விதிகள் இரு வகைகளுக்கும் பொருந்தும், மேலும் வகுப்பு குறிப்பில் "
"`` vector2`` முறைகளுடன் நாங்கள் எங்கு இணைத்தாலும், அவற்றின் `` vecter3`` சகாக்களையும் "
"நீங்கள் பார்க்கலாம்."

msgid "Member access"
msgstr "உறுப்பினர் அணுகல்"

msgid ""
"The individual components of the vector can be accessed directly by name."
msgstr "திசையனின் தனிப்பட்ட கூறுகளை நேரடியாக பெயரால் அணுகலாம்."

msgid "Adding vectors"
msgstr "திசையன்களைச் சேர்ப்பது"

msgid ""
"When adding or subtracting two vectors, the corresponding components are "
"added:"
msgstr ""
"இரண்டு திசையன்களைச் சேர்க்கும்போது அல்லது கழிக்கும்போது, தொடர்புடைய கூறுகள் "
"சேர்க்கப்படுகின்றன:"

msgid ""
"We can also see this visually by adding the second vector at the end of the "
"first:"
msgstr "முதல் முடிவில் இரண்டாவது திசையனைச் சேர்ப்பதன் மூலமும் இதைக் காணலாம்:"

msgid "Note that adding ``a + b`` gives the same result as ``b + a``."
msgstr ""
"`` A + b`` ஐச் சேர்ப்பது `` b + a`` போன்ற அதே முடிவைக் கொடுக்கும் என்பதை நினைவில் "
"கொள்க."

msgid "Scalar multiplication"
msgstr "அளவிடுதல் பெருக்கல்"

msgid ""
"Vectors represent both direction and magnitude. A value representing only "
"magnitude is called a **scalar**. Scalars use the :ref:`class_float` type in "
"Godot."
msgstr ""
"திசையன்கள் திசை மற்றும் அளவு இரண்டையும் குறிக்கின்றன. அளவை மட்டுமே குறிக்கும் மதிப்பு ** "
"அளவிடுதல் ** என்று அழைக்கப்படுகிறது. அளவிடுதல்: ref: `class_float` வகை கோடோட்டில் "
"பயன்படுத்தவும்."

msgid "A vector can be multiplied by a **scalar**:"
msgstr "ஒரு திசையனை ** அளவிடுதல் ** மூலம் பெருக்கலாம்:"

msgid ""
"Multiplying a vector by a positive scalar does not change its direction, "
"only its magnitude. Multiplying with a negative scalar results in a vector "
"in the opposite direction. This is how you **scale** a vector."
msgstr ""
"ஒரு திசையனை நேர்மறையான அளவால் பெருக்குவது அதன் திசையை மாற்றாது, அதன் அளவு மட்டுமே. "
"எதிர்மறையான அளவிடலுடன் பெருக்கி எதிர் திசையில் ஒரு திசையனில் விளைகிறது. நீங்கள் ** "
"அளவுகோல் ** ஒரு திசையன் இப்படித்தான்."

msgid "Practical applications"
msgstr "நடைமுறை பயன்பாடுகள்"

msgid "Let's look at two common uses for vector addition and subtraction."
msgstr "திசையன் சேர்த்தல் மற்றும் கழிப்பதற்கான இரண்டு பொதுவான பயன்பாடுகளைப் பார்ப்போம்."

msgid "Movement"
msgstr "இயக்கம்"

msgid ""
"A vector can represent **any** quantity with a magnitude and direction. "
"Typical examples are: position, velocity, acceleration, and force. In this "
"image, the spaceship at step 1 has a position vector of ``(1, 3)`` and a "
"velocity vector of ``(2, 1)``. The velocity vector represents how far the "
"ship moves each step. We can find the position for step 2 by adding the "
"velocity to the current position."
msgstr ""
"ஒரு திசையன் ** எந்த ** அளவையும் ஒரு அளவு மற்றும் திசையுடன் குறிக்கலாம். வழக்கமான "
"எடுத்துக்காட்டுகள்: நிலை, விரைவு, முடுக்கம் மற்றும் ஆற்றல். இந்த படத்தில், படி 1 இல் உள்ள "
"விண்கலம் `` (1, 3) `` மற்றும் `` (2, 1) `` இன் திசைவேக திசையன் ஆகியவற்றின் நிலை "
"திசையன் உள்ளது. ஒவ்வொரு அடியிலும் கப்பல் எவ்வளவு தூரம் நகரும் என்பதை திசைவேக திசையன் "
"குறிக்கிறது. தற்போதைய நிலைக்கு வேகத்தை சேர்ப்பதன் மூலம் படி 2 க்கான நிலையை நாம் காணலாம்."

msgid ""
"Velocity measures the **change** in position per unit of time. The new "
"position is found by adding the velocity multiplied by the elapsed time "
"(here assumed to be one unit, e.g. 1 s) to the previous position."
msgstr ""
"விரைவு ** மாற்றத்தை ** ஒரு யூனிட் நேரத்தின் நிலையில் அளவிடுகிறது. கடந்த காலத்திற்கு "
"(இங்கே ஒரு அலகு, எ.கா. 1 கள் என்று கருதப்படுகிறது) முந்தைய நிலைக்கு பெருக்கப்பட்ட "
"வேகத்தை சேர்ப்பதன் மூலம் புதிய நிலை கண்டறியப்படுகிறது."

msgid ""
"In a typical 2D game scenario, you would have a velocity in pixels per "
"second, and multiply it by the ``delta`` parameter (time elapsed since the "
"previous frame) from the :ref:`_process() "
"<class_Node_private_method__process>` or :ref:`_physics_process() "
"<class_Node_private_method__physics_process>` callbacks."
msgstr ""
"ஒரு பொதுவான 2 டி விளையாட்டு சூழ்நிலையில், நீங்கள் நொடிக்கு பிக்சல்களில் ஒரு வேகத்தை "
"வைத்திருக்கிறீர்கள், மேலும் அதை `` டெல்டா`` அளவுருவால் (முந்தைய சட்டகத்திலிருந்து கடந்த "
"நேரம்) பெருக்கி: ref: `_Process () <class_node_private_method__process>` "
"அல்லது ."

msgid "Pointing toward a target"
msgstr "ஒரு இலக்கை நோக்கி சுட்டிக்காட்டுகிறது"

msgid ""
"In this scenario, you have a tank that wishes to point its turret at a "
"robot. Subtracting the tank's position from the robot's position gives the "
"vector pointing from the tank to the robot."
msgstr ""
"இந்த சூழ்நிலையில், உங்களிடம் ஒரு தொட்டி உள்ளது, அது அதன் கோபுரத்தை ஒரு ரோபோவில் "
"சுட்டிக்காட்ட விரும்பும். ரோபோவின் நிலையில் இருந்து தொட்டியின் நிலையை கழிப்பது, "
"தொட்டியில் இருந்து ரோபோவுக்கு சுட்டிக்காட்டும் திசையன் தருகிறது."

msgid "To find a vector pointing from ``A`` to ``B``, use ``B - A``."
msgstr ""
"`` A`` இலிருந்து `k`` வரை சுட்டிக்காட்டும் ஒரு திசையன் கண்டுபிடிக்க,` `b - a`` ஐப் "
"பயன்படுத்தவும்."

msgid "Unit vectors"
msgstr "அலகு திசையன்கள்"

msgid ""
"A vector with **magnitude** of ``1`` is called a **unit vector**. They are "
"also sometimes referred to as **direction vectors** or **normals**. Unit "
"vectors are helpful when you need to keep track of a direction."
msgstr ""
"`` 1`` இன் ** அளவு ** கொண்ட ஒரு திசையன் ** அலகு திசையன் ** என்று அழைக்கப்படுகிறது. "
"அவை சில நேரங்களில் ** திசை திசையன்கள் ** அல்லது ** இயல்பான ** என்றும் "
"குறிப்பிடப்படுகின்றன. நீங்கள் ஒரு திசையை கண்காணிக்க வேண்டியிருக்கும் போது யூனிட் "
"திசையன்கள் உதவியாக இருக்கும்."

msgid "Normalization"
msgstr "இயல்பாக்கம்"

msgid ""
"**Normalizing** a vector means reducing its length to ``1`` while preserving "
"its direction. This is done by dividing each of its components by its "
"magnitude. Because this is such a common operation, Godot provides a "
"dedicated :ref:`normalized() <class_Vector2_method_normalized>` method for "
"this:"
msgstr ""
"** இயல்பாக்குதல் ** ஒரு திசையன் என்பது அதன் நீளத்தை அதன் திசையைப் பாதுகாக்கும் போது அதன் "
"நீளத்தை `` 1`` ஆகக் குறைப்பதாகும். அதன் ஒவ்வொரு கூறுகளையும் அதன் அளவால் பிரிப்பதன் மூலம் "
"இது செய்யப்படுகிறது. இது ஒரு பொதுவான செயல்பாடாக இருப்பதால், கோடோட் ஒரு பிரத்யேகத்தை "
"வழங்குகிறது: Ref: `இயல்பாக்கப்பட்ட () <class_vector2_method_normationized>` "
"இதற்கான முறை:"

msgid ""
"Because normalization involves dividing by the vector's length, you cannot "
"normalize a vector of length ``0``. Attempting to do so would normally "
"result in an error. In GDScript though, trying to call the ``normalized()`` "
"method on a vector of length 0 leaves the value untouched and avoids the "
"error for you."
msgstr ""
"இயல்பாக்கம் என்பது திசையனின் நீளத்தால் பிரிப்பதை உள்ளடக்குவதால், நீளத்தின் திசையனை நீங்கள் "
"இயல்பாக்க முடியாது `` 0``. அவ்வாறு செய்ய முயற்சிப்பது பொதுவாக பிழையை ஏற்படுத்தும். "
"GDSCRIPT இல், நீளம் 0 திசையன் மீது `` இயல்பாக்கப்பட்ட () `முறையை அழைக்க முயற்சிப்பது "
"மதிப்பை தீண்டத்தகாதது மற்றும் உங்களுக்கான பிழையைத் தவிர்க்கிறது."

msgid "Reflection"
msgstr "பிரதிபலிப்பு"

msgid ""
"A common use of unit vectors is to indicate **normals**. Normal vectors are "
"unit vectors aligned perpendicularly to a surface, defining its direction. "
"They are commonly used for lighting, collisions, and other operations "
"involving surfaces."
msgstr ""
"யூனிட் திசையன்களின் பொதுவான பயன்பாடு ** இயல்பான ** ஐக் குறிக்கிறது. சாதாரண திசையன்கள் "
"அலகு திசையன்கள் ஒரு மேற்பரப்புடன் செங்குத்தாக சீரமைக்கப்பட்டவை, அதன் திசையை "
"வரையறுக்கின்றன. அவை பொதுவாக விளக்குகள், மோதல்கள் மற்றும் மேற்பரப்புகளை உள்ளடக்கிய பிற "
"செயல்பாடுகளுக்கு பயன்படுத்தப்படுகின்றன."

msgid ""
"For example, imagine we have a moving ball that we want to bounce off a wall "
"or other object:"
msgstr ""
"உதாரணமாக, ஒரு சுவர் அல்லது பிற பொருளைத் துள்ள விரும்பும் ஒரு நகரும் பந்து எங்களிடம் "
"உள்ளது என்று கற்பனை செய்து பாருங்கள்:"

msgid ""
"The surface normal has a value of ``(0, -1)`` because this is a horizontal "
"surface. When the ball collides, we take its remaining motion (the amount "
"left over when it hits the surface) and reflect it using the normal. In "
"Godot, there is a :ref:`bounce() <class_Vector2_method_bounce>` method to "
"handle this. Here is a code example of the above diagram using "
"a :ref:`CharacterBody2D <class_CharacterBody2D>`:"
msgstr ""
"மேற்பரப்பு இயல்பானது `` (0, -1) `` மதிப்பைக் கொண்டுள்ளது, ஏனெனில் இது ஒரு கிடைமட்ட "
"மேற்பரப்பு. பந்து மோதும்போது, அதன் மீதமுள்ள இயக்கத்தை எடுத்துக்கொள்கிறோம் (அது மேற்பரப்பைத் "
"தாக்கும் போது மீதமுள்ள அளவு) மற்றும் இயல்பைப் பயன்படுத்தி அதைப் பிரதிபலிக்கிறது. "
"கோடோட்டில், ஒரு: குறிப்பு உள்ளது: `பவுன்ச் () <class_vector2_method_bounce>` இதைக் "
"கையாளும் முறை. மேலே உள்ள வரைபடத்தின் குறியீடு எடுத்துக்காட்டு இங்கே: Ref: "
"`reatolbody2d <class_characterbody2d>`:"

msgid "Dot product"
msgstr "புள்ளி தயாரிப்பு"

msgid ""
"The **dot product** is one of the most important concepts in vector math, "
"but is often misunderstood. Dot product is an operation on two vectors that "
"returns a **scalar**. Unlike a vector, which contains both magnitude and "
"direction, a scalar value has only magnitude."
msgstr ""
"** டாட் தயாரிப்பு ** திசையன் கணிதத்தில் மிக முக்கியமான கருத்துகளில் ஒன்றாகும், ஆனால் "
"இது பெரும்பாலும் தவறாக புரிந்து கொள்ளப்படுகிறது. டாட் தயாரிப்பு என்பது இரண்டு "
"திசையன்களில் ஒரு செயல்பாடாகும், இது ** அளவிடுதல் ** ஐ வழங்குகிறது. ஒரு திசையன் "
"போலல்லாமல், அளவு மற்றும் திசை இரண்டையும் கொண்டுள்ளது, ஒரு அளவிடுதல் மதிப்பு அளவு "
"மட்டுமே உள்ளது."

msgid "The formula for dot product takes two common forms:"
msgstr "டாட் தயாரிப்புக்கான தேற்றம் இரண்டு பொதுவான வடிவங்களை எடுக்கும்:"

msgid "and"
msgstr "மற்றும்"

msgid ""
"The mathematical notation *||A||* represents the magnitude of vector ``A``, "
"and *A*\\ :sub:`x` means the ``x`` component of vector ``A``."
msgstr ""
"கணிதக் குறியீடு *|| a || *திசையன் `` a``, மற்றும் *a *\\: துணை: `x` என்றால் திசையன்` "
"`a`` என்பதன் பொருள்."

msgid ""
"However, in most cases it is easiest to use the built-in :ref:`dot() "
"<class_Vector2_method_dot>` method. Note that the order of the two vectors "
"does not matter:"
msgstr ""
"இருப்பினும், பெரும்பாலான சந்தர்ப்பங்களில் உள்ளமைக்கப்பட்டதைப் பயன்படுத்துவது எளிதானது: "
"குறிப்பு: `புள்ளி () <class_vector2_method_dot>` முறை. இரண்டு திசையன்களின் வரிசை "
"ஒரு பொருட்டல்ல என்பதை நினைவில் கொள்க:"

msgid ""
"The dot product is most useful when used with unit vectors, making the first "
"formula reduce to just ``cos(θ)``. This means we can use the dot product to "
"tell us something about the angle between two vectors:"
msgstr ""
"யூனிட் திசையன்களுடன் பயன்படுத்தும்போது புள்ளி தயாரிப்பு மிகவும் பயனுள்ளதாக இருக்கும், "
"இது முதல் சூத்திரத்தை `` காச் (θ) `` ஆகக் குறைக்கிறது. இதன் பொருள் இரண்டு "
"திசையன்களுக்கு இடையிலான கோணத்தைப் பற்றி ஏதாவது சொல்ல டாட் தயாரிப்பைப் பயன்படுத்தலாம்:"

msgid ""
"When using unit vectors, the result will always be between ``-1`` (180°) and "
"``1`` (0°)."
msgstr ""
"அலகு திசையன்களைப் பயன்படுத்தும் போது, இதன் விளைவாக எப்போதும் `` -1`` (180 °) மற்றும் "
"`` 1`` (0 °) க்கு இடையில் இருக்கும்."

msgid "Facing"
msgstr "எதிர்கொள்ளும்"

msgid ""
"We can use this fact to detect whether an object is facing toward another "
"object. In the diagram below, the player ``P`` is trying to avoid the "
"zombies ``A`` and ``B``. Assuming a zombie's field of view is **180°**, can "
"they see the player?"
msgstr ""
"ஒரு பொருள் மற்றொரு பொருளை நோக்கி எதிர்கொள்கிறதா என்பதைக் கண்டறிய இந்த உண்மையைப் "
"பயன்படுத்தலாம். கீழேயுள்ள வரைபடத்தில், பிளேயர் `` p`` சோம்பிசைத் தவிர்க்க முயற்சிக்கிறார் "
"`` a`` மற்றும் `` b``. ஒரு சாம்பியின் பார்வைத் துறையை கருதுவது ** 180 ° **, அவர்கள் "
"வீரரைப் பார்க்க முடியுமா?"

msgid ""
"The green arrows ``fA`` and ``fB`` are **unit vectors** representing the "
"zombie's facing direction and the blue semicircle represents its field of "
"view. For zombie ``A``, we find the direction vector ``AP`` pointing to the "
"player using ``P - A`` and normalize it, however, Godot has a helper method "
"to do this called :ref:`direction_to() <class_Vector2_method_direction_to>`. "
"If the angle between this vector and the facing vector is less than 90°, "
"then the zombie can see the player."
msgstr ""
"பச்சை அம்புகள் `` fa`` மற்றும் `fb`` ஆகியவை ** யூனிட் திசையன்கள் ** சாம்பியின் "
"எதிர்கொள்ளும் திசையை குறிக்கும் மற்றும் நீல அரை வட்டமானது அதன் பார்வைத் துறையை "
"குறிக்கிறது. சாம்பி `` a`` ஐப் பொறுத்தவரை, திசை திசையன் `` ap`` வீரரை `` p - a`` "
"ஐப் பயன்படுத்தி சுட்டிக்காட்டி அதை இயல்பாக்குவதைக் கண்டறிந்து, இதைச் செய்ய கோடோட் ஒரு உதவி "
"முறை உள்ளது: ref: `Direction_to . இந்த திசையன் மற்றும் எதிர்கொள்ளும் திசையன் இடையேயான "
"கோணம் 90 with க்கும் குறைவாக இருந்தால், சாம்பி பிளேயரைப் பார்க்க முடியும்."

msgid "In code it would look like this:"
msgstr "குறியீட்டில் இது இப்படி இருக்கும்:"

msgid "Cross product"
msgstr "குறுக்கு தயாரிப்பு"

msgid ""
"Like the dot product, the **cross product** is an operation on two vectors. "
"However, the result of the cross product is a vector with a direction that "
"is perpendicular to both. Its magnitude depends on their relative angle. If "
"two vectors are parallel, the result of their cross product will be a null "
"vector."
msgstr ""
"டாட் தயாரிப்பைப் போலவே, ** குறுக்கு தயாரிப்பு ** என்பது இரண்டு திசையன்களில் ஒரு "
"செயல்பாடாகும். இருப்பினும், குறுக்கு உற்பத்தியின் விளைவாக இருவருக்கும் செங்குத்தாக "
"இருக்கும் திசையைக் கொண்ட ஒரு திசையன் ஆகும். அதன் அளவு அவற்றின் உறவினர் கோணத்தைப் "
"பொறுத்தது. இரண்டு திசையன்கள் இணையாக இருந்தால், அவற்றின் குறுக்கு உற்பத்தியின் விளைவாக "
"சுழிய திசையன் இருக்கும்."

msgid "The cross product is calculated like this:"
msgstr "குறுக்கு தயாரிப்பு இப்படி கணக்கிடப்படுகிறது:"

msgid ""
"With Godot, you can use the built-in :ref:`Vector3.cross() "
"<class_Vector3_method_cross>` method:"
msgstr ""
"கோடோட் மூலம், நீங்கள் உள்ளமைக்கப்பட்டதைப் பயன்படுத்தலாம்: ref: `vector3.cross () "
"<class_vector3_method_crorse>` முறை:"

msgid ""
"The cross product is not mathematically defined in 2D. "
"The :ref:`Vector2.cross() <class_Vector2_method_cross>` method is a commonly "
"used analog of the 3D cross product for 2D vectors."
msgstr ""
"குறுக்கு தயாரிப்பு 2D இல் கணித ரீதியாக வரையறுக்கப்படவில்லை. தி: ref: `vecter2.cross "
"() <class_vector2_method_crorse>` முறை என்பது 2 டி திசையன்களுக்கான 3D குறுக்கு "
"உற்பத்தியின் பொதுவாகப் பயன்படுத்தப்படும் அனலாக் ஆகும்."

msgid ""
"In the cross product, order matters. ``a.cross(b)`` does not give the same "
"result as ``b.cross(a)``. The resulting vectors point in **opposite** "
"directions."
msgstr ""
"குறுக்கு தயாரிப்பில், ஆர்டர் விசயங்கள். `. இதன் விளைவாக வரும் திசையன்கள் ** எதிர் ** "
"திசைகளில் சுட்டிக்காட்டுகின்றன."

msgid "Calculating normals"
msgstr "இயல்புகளைக் கணக்கிடும்"

msgid ""
"One common use of cross products is to find the surface normal of a plane or "
"surface in 3D space. If we have the triangle ``ABC`` we can use vector "
"subtraction to find two edges ``AB`` and ``AC``. Using the cross product, "
"``AB × AC`` produces a vector perpendicular to both: the surface normal."
msgstr ""
"குறுக்கு தயாரிப்புகளின் ஒரு பொதுவான பயன்பாடு 3D இடத்தில் ஒரு விமானத்தின் அல்லது "
"மேற்பரப்பின் மேற்பரப்பைக் கண்டுபிடிப்பதாகும். எங்களிடம் முக்கோணம் `` ஏபிசி`` இருந்தால், "
"இரண்டு விளிம்புகளைக் கண்டுபிடிக்க திசையன் கழிப்பைப் பயன்படுத்தலாம் `` ab` மற்றும் `` "
"ac``. குறுக்கு உற்பத்தியைப் பயன்படுத்தி, `` AB × AC`` இரண்டிற்கும் செங்குத்தாக ஒரு "
"திசையன் உருவாக்குகிறது: மேற்பரப்பு இயல்பானது."

msgid "Here is a function to calculate a triangle's normal:"
msgstr "ஒரு முக்கோணத்தின் இயல்பை கணக்கிடுவதற்கான செயல்பாடு இங்கே:"

msgid "Pointing to a target"
msgstr "ஒரு இலக்கை சுட்டிக்காட்டுகிறது"

msgid ""
"In the dot product section above, we saw how it could be used to find the "
"angle between two vectors. However, in 3D, this is not enough information. "
"We also need to know what axis to rotate around. We can find that by "
"calculating the cross product of the current facing direction and the target "
"direction. The resulting perpendicular vector is the axis of rotation."
msgstr ""
"மேலே உள்ள புள்ளி தயாரிப்பு பிரிவில், இரண்டு திசையன்களுக்கு இடையிலான கோணத்தைக் "
"கண்டுபிடிக்க இது எவ்வாறு பயன்படுத்தப்படலாம் என்பதைக் கண்டோம். இருப்பினும், 3D இல், இது "
"போதுமான செய்தி அல்ல. எந்த அச்சில் சுழற்ற வேண்டும் என்பதையும் நாம் அறிந்து கொள்ள வேண்டும். "
"தற்போதைய எதிர்கொள்ளும் திசையின் குறுக்கு உற்பத்தியையும் இலக்கு திசையையும் கணக்கிடுவதன் "
"மூலம் அதைக் காணலாம். இதன் விளைவாக செங்குத்தாக திசையன் சுழற்சியின் அச்சு."

msgid "More information"
msgstr "மேலும் செய்தி"

msgid ""
"For more information on using vector math in Godot, see the following "
"articles:"
msgstr ""
"கோடோட்டில் திசையன் கணிதத்தைப் பயன்படுத்துவது பற்றிய கூடுதல் தகவலுக்கு, பின்வரும் "
"கட்டுரைகளைப் பார்க்கவும்:"

msgid ":ref:`doc_vectors_advanced`"
msgstr ": குறிப்பு: `doc_vectors_advanced`"

msgid ":ref:`doc_matrices_and_transforms`"
msgstr ": ref: `doc_matrices_and_transforms`"
