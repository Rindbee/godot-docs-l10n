#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Pull request workflow"
msgstr "கோரிக்கை பணிப்பாய்வு இழுக்கவும்"

msgid ""
"The so-called \"PR workflow\" used by Godot is common to many projects using "
"Git, and should be familiar to veteran free software contributors. The idea "
"is that only a small number (if any) commit directly to the *master* branch. "
"Instead, contributors *fork* the project (i.e. create a copy of it, which "
"they can modify as they wish), and then use the GitHub interface to request "
"a *pull* from one of their fork's branches to one branch of the original "
"(often named *upstream*) repository."
msgstr ""
"கோடோட் பயன்படுத்தும் \"பி.ஆர் பணிப்பாய்வு\" என்று அழைக்கப்படுவது அறிவிலி பயன்படுத்தும் பல "
"திட்டங்களுக்கு பொதுவானது, மேலும் மூத்த இலவச மென்பொருள் பங்களிப்பாளர்களுக்கு நன்கு "
"தெரிந்திருக்க வேண்டும். ஒரு சிறிய எண் (ஏதேனும் இருந்தால்) மட்டுமே * மாச்டர் * கிளைக்கு "
"நேரடியாக உறுதியளிக்கிறது என்பது சிந்தனை. அதற்கு பதிலாக, பங்களிப்பாளர்கள் * முட்கரண்டி "
"* திட்டம் (அதாவது அதன் நகலை உருவாக்குங்கள், அதை அவர்கள் விரும்பியபடி மாற்றியமைக்க "
"முடியும்), பின்னர் அறிவிலிமையம் இடைமுகத்தைப் பயன்படுத்தி அவர்களின் முட்கரண்டியின் "
"கிளைகளில் ஒன்றிலிருந்து அசல் ஒரு கிளைக்கு ஒரு * இழுத்தல் * ஐக் கோரவும் பெரும்பாலும் "
"*அப்ச்ட்ரீம் *) களஞ்சியம் என்று பெயரிடப்பட்டது."

msgid ""
"The resulting *pull request* (PR) can then be reviewed by other "
"contributors, which might approve it, reject it, or most often request that "
"modifications be done. Once approved, the PR can then be merged by one of "
"the core developers, and its commit(s) will become part of the target branch "
"(usually the *master* branch)."
msgstr ""
"இதன் விளைவாக * இழுக்கும் கோரிக்கை * (PR) பிற பங்களிப்பாளர்களால் மதிப்பாய்வு "
"செய்யப்படலாம், அவை ஒப்புதல் அளிக்கலாம், நிராகரிக்கலாம் அல்லது மாற்றங்கள் செய்யப்பட வேண்டும் "
"என்று அடிக்கடி கோருகின்றன. அங்கீகரிக்கப்பட்டதும், பி.ஆரை முக்கிய டெவலப்பர்களில் ஒருவரால் "
"இணைக்க முடியும், மேலும் அதன் கமிட் (கள்) இலக்கு கிளையின் ஒரு பகுதியாக மாறும் (பொதுவாக "
"* மாச்டர் * கிளை)."

msgid ""
"We will go together through an example to show the typical workflow and "
"associated Git commands. But first, let's have a quick look at the "
"organization of Godot's Git repository."
msgstr ""
"வழக்கமான பணிப்பாய்வு மற்றும் அதனுடன் தொடர்புடைய அறிவிலி கட்டளைகளைக் காட்ட ஒரு "
"எடுத்துக்காட்டு மூலம் ஒன்றாகச் செல்வோம். ஆனால் முதலில், கோடோட்டின் அறிவிலி களஞ்சியத்தின் "
"அமைப்பை விரைவாகப் பார்ப்போம்."

msgid "Git source repository"
msgstr "GIT மூல களஞ்சியம்"

msgid ""
"The `repository on GitHub <https://github.com/godotengine/godot>`_ is a `Git "
"<https://git-scm.com>`_ code repository together with an embedded issue "
"tracker and PR system."
msgstr ""
"Kithub <https://github.com/godotengine/godot> _ _ என்பது ஒரு `git <https://"
"git-scm.com>` _ குறியீடு களஞ்சியமும் உட்பொதிக்கப்பட்ட வெளியீட்டு டிராக்கர் மற்றும் பிஆர் "
"அமைப்புடன்."

msgid ""
"If you are contributing to the documentation, its repository can be found "
"`here <https://github.com/godotengine/godot-docs>`_."
msgstr ""
"ஆவணங்களுக்கு நீங்கள் பங்களிக்கிறீர்கள் என்றால், அதன் களஞ்சியத்தை இங்கே <https://github.com/"
"godotengine/godot-docs> `_ ஆகியவற்றைக் காணலாம்."

msgid ""
"The Git version control system is the tool used to keep track of successive "
"edits to the source code - to contribute efficiently to Godot, learning the "
"basics of the Git command line is *highly* recommended. There exist some "
"graphical interfaces for Git, but they usually encourage users to take bad "
"habits regarding the Git and PR workflow, and we therefore recommend not to "
"use them. In particular, we advise not to use GitHub's online editor for "
"code contributions (although it's tolerated for small fixes or documentation "
"changes) as it enforces one commit per file and per modification, which "
"quickly leads to PRs with an unreadable Git history (especially after peer "
"review)."
msgstr ""
"அறிவிலி பதிப்பு கட்டுப்பாட்டு அமைப்பு என்பது மூலக் குறியீட்டிற்கு அடுத்தடுத்த "
"திருத்தங்களைக் கண்காணிக்கப் பயன்படுத்தப்படும் கருவியாகும் - கோடோட்டுக்கு திறமையாக "
"பங்களிக்க, அறிவிலி கட்டளை வரியின் அடிப்படைகளைக் கற்றுக்கொள்வது * மிகவும் * "
"பரிந்துரைக்கப்படுகிறது. GIT க்கான சில வரைகலை இடைமுகங்கள் உள்ளன, ஆனால் அவை வழக்கமாக "
"பயனர்களை GIT மற்றும் PR பணிப்பாய்வு தொடர்பாக மோசமான பழக்கங்களை எடுக்க ஊக்குவிக்கின்றன, "
"எனவே அவற்றைப் பயன்படுத்த வேண்டாம் என்று நாங்கள் பரிந்துரைக்கிறோம். குறிப்பாக, குறியீடு "
"பங்களிப்புகளுக்கு கிட்அப்பின் நிகழ்நிலை எடிட்டரைப் பயன்படுத்த வேண்டாம் என்று நாங்கள் "
"அறிவுறுத்துகிறோம் (இது சிறிய திருத்தங்கள் அல்லது ஆவணப்படுத்தல் மாற்றங்களுக்கு "
"பொறுத்துக்கொள்ளப்பட்டாலும்) இது ஒரு கோப்பிற்கு ஒரு உறுதிப்பாட்டை அமல்படுத்துகிறது மற்றும் "
"மாற்றியமைக்கும், இது விரைவாக படிக்க முடியாத அறிவிலி வரலாற்றைக் கொண்டு பி.ஆர்.எச் -க்கு "
"வழிவகுக்கிறது (குறிப்பாக சகத்திற்குப் பிறகு விமர்சனம்)."

msgid ""
"The first sections of Git's \"Book\" are a good introduction to the tool's "
"philosophy and the various commands you need to master in your daily "
"workflow. You can read them online on the `Git SCM <https://git-scm.com/book/"
"en/v2>`_ website. You can also try out `GitHub's interactive guide <https://"
"try.github.io/>`__."
msgstr ""
"GIT இன் \"நூல்\" இன் முதல் பிரிவுகள் கருவியின் தத்துவத்திற்கும், உங்கள் அன்றாட "
"பணிப்பாய்வுகளில் நீங்கள் தேர்ச்சி பெற வேண்டிய பல்வேறு கட்டளைகளுக்கும் ஒரு நல்ல அறிமுகம். "
"நீங்கள் அவற்றை `git scm <https://git-scm.com/book/en/v2> _ _ இணையதளத்தில் ஆன்லைனில் "
"படிக்கலாம். `கிதுபின் ஊடாடும் வழிகாட்டியை <https://try.github.io/> __ __."

msgid "The branches on the Git repository are organized as follows:"
msgstr "அறிவிலி களஞ்சியத்தில் உள்ள கிளைகள் பின்வருமாறு ஒழுங்கமைக்கப்பட்டுள்ளன:"

msgid ""
"The ``master`` branch is where the development of the next major version "
"occurs. As a development branch, it can be unstable and is not meant for use "
"in production. This is where PRs should be done in priority."
msgstr ""
"`` மாச்டர்`` கிளை என்பது அடுத்த பெரிய பதிப்பின் வளர்ச்சி நிகழ்கிறது. ஒரு மேம்பாட்டுக் "
"கிளையாக, இது நிலையற்றதாக இருக்கலாம் மற்றும் உற்பத்தியில் பயன்படுத்தப்படுவதில்லை. பி.ஆர்."
"எச் முன்னுரிமையில் செய்யப்பட வேண்டும்."

msgid ""
"The stable branches are named after their version, e.g. ``3.1`` and ``2.1``. "
"They are used to backport bugfixes and enhancements from the ``master`` "
"branch to the currently maintained stable release (e.g. 3.1.2 or 2.1.6). As "
"a rule of thumb, the last stable branch is maintained until the next minor "
"version (e.g. the ``3.0`` branch was maintained until the release of Godot "
"3.1). If you want to make PRs against a maintained stable branch, please "
"check first if your changes are also relevant for the ``master`` branch, and "
"if so make the PR for the ``master`` branch in priority. Release managers "
"can then cherry-pick the fix to a stable branch if relevant."
msgstr ""
"நிலையான கிளைகள் அவற்றின் பதிப்பின் பெயரிடப்பட்டுள்ளன, எ.கா. `` 3.1`` மற்றும் `` 2.1``. "
"`` மாச்டர்` கிளையிலிருந்து தற்போது பராமரிக்கப்படும் நிலையான வெளியீட்டிற்கு (எ.கா. "
"3.1.2 அல்லது 2.1.6) பிழைத்திருத்தங்கள் மற்றும் மேம்பாடுகளுக்கு அவை பயன்படுத்தப்படுகின்றன. "
"கட்டைவிரல் விதியாக, அடுத்த சிறிய பதிப்பு வரை கடைசி நிலையான கிளை "
"பராமரிக்கப்படுகிறது (எ.கா. கோடோட் 3.1 வெளியிடும் வரை `` 3.0`` கிளை "
"பராமரிக்கப்பட்டது). பராமரிக்கப்படும் நிலையான கிளைக்கு எதிராக நீங்கள் பி.ஆர்.எச் செய்ய "
"விரும்பினால், தயவுசெய்து உங்கள் மாற்றங்கள் `` மாச்டர்`` கிளைக்கு பொருத்தமானதா என்பதை "
"முதலில் சரிபார்க்கவும், அப்படியானால் `` மாச்டர்` கிளைக்கான பி.ஆரை முன்னுரிமையாக "
"மாற்றவும். வெளியீட்டு மேலாளர்கள் பொருத்தமானால் ஒரு நிலையான கிளைக்கு பிழைத்திருத்தத்தை "
"செர்ரி-பிக் செய்யலாம்."

msgid ""
"There might occasionally be feature branches, usually meant to be merged "
"into the ``master`` branch at some time."
msgstr ""
"எப்போதாவது அம்சக் கிளைகள் இருக்கலாம், வழக்கமாக சில நேரங்களில் `` மாச்டர்`` கிளையில் "
"இணைக்கப்பட வேண்டும்."

msgid "Forking and cloning"
msgstr "ஃபோர்கிங் மற்றும் குளோனிங்"

msgid ""
"The first step is to *fork* the `godotengine/godot <https://github.com/"
"godotengine/godot>`_ repository on GitHub. To do so, you will need to have a "
"GitHub account and to be logged in. In the top right corner of the "
"repository's GitHub page, you should see the \"Fork\" button as shown below:"
msgstr ""
"முதல் படி * ஃபோர்க் * `கோடோடெங்கின்/கோடோட் <https://github.com/godotengine/godot>` "
"_ கிதுபில் களஞ்சியம். அவ்வாறு செய்ய, நீங்கள் ஒரு அறிவிலிமையம் கணக்கைக் கொண்டிருக்க வேண்டும் "
"மற்றும் உள்நுழைய வேண்டும். களஞ்சியத்தின் அறிவிலிமையம் பக்கத்தின் மேல் வலது மூலையில், கீழே "
"காட்டப்பட்டுள்ளபடி \"முட்கரண்டி\" பொத்தானைக் காண வேண்டும்:"

msgid ""
"Click it, and after a while you should be redirected to your own fork of the "
"Godot repo, with your GitHub username as namespace:"
msgstr ""
"அதைக் சொடுக்கு செய்து, சிறிது நேரத்திற்குப் பிறகு, உங்கள் அறிவிலிமையம் பயனர்பெயரை "
"பெயர்வெளியுடன் கோடோட் ரெப்போவின் சொந்த முட்கரண்டிக்கு திருப்பி விட வேண்டும்:"

msgid ""
"You can then *clone* your fork, i.e. create a local copy of the online "
"repository (in Git speak, the *origin remote*). If you haven't already, "
"download Git from `its website <https://git-scm.com>`_ if you're using "
"Windows or macOS, or install it through your package manager if you're using "
"Linux."
msgstr ""
"நீங்கள் *உங்கள் முட்கரண்டி *குளோன் *, அதாவது நிகழ்நிலை களஞ்சியத்தின் உள்ளக நகலை "
"உருவாக்கலாம் (கிட் ச்பீக்கில், *தோற்றம் ரிமோட் *). நீங்கள் ஏற்கனவே இல்லையென்றால், `அதன் "
"வலைத்தளத்திலிருந்து அறிவிலி <https://git-scm.com>` _ நீங்கள் சாளரங்கள் அல்லது மேகோசைப் "
"பயன்படுத்துகிறீர்கள் என்றால் பதிவிறக்கவும், அல்லது நீங்கள் லினக்சைப் பயன்படுத்துகிறீர்கள் என்றால் "
"அதை உங்கள் தொகுப்பு மேலாளர் மூலம் நிறுவவும்."

msgid ""
"If you are on Windows, open Git Bash to type commands. macOS and Linux users "
"can use their respective terminals."
msgstr ""
"நீங்கள் சாளரங்களில் இருந்தால், கட்டளைகளைத் தட்டச்சு செய்ய அறிவிலி பாசைத் திறக்கவும். மேகோச் "
"மற்றும் லினக்ச் பயனர்கள் அந்தந்த முனையங்களைப் பயன்படுத்தலாம்."

msgid "To clone your fork from GitHub, use the following command:"
msgstr ""
"கிட்அப்பிலிருந்து உங்கள் முட்கரண்டியை நகலி செய்ய, பின்வரும் கட்டளையைப் பயன்படுத்தவும்:"

msgid ""
"After a little while, you should have a ``godot`` directory in your current "
"working directory. Move into it using the ``cd`` command:"
msgstr ""
"சிறிது நேரத்திற்குப் பிறகு, உங்கள் தற்போதைய பணி கோப்பகத்தில் `` கோடோட்`` கோப்பகத்தை நீங்கள் "
"வைத்திருக்க வேண்டும். `` சிடி`` கட்டளையைப் பயன்படுத்தி அதற்குள் செல்லுங்கள்:"

msgid ""
"We will start by setting up a reference to the original repository that we "
"forked:"
msgstr "நாங்கள் முடக்கிய அசல் களஞ்சியத்தைப் பற்றிய குறிப்பை அமைப்பதன் மூலம் தொடங்குவோம்:"

msgid ""
"This will create a reference named ``upstream`` pointing to the original "
"``godotengine/godot`` repository. This will be useful when you want to pull "
"new commits from its ``master`` branch to update your fork. You have another "
"remote reference named ``origin``, which points to your fork (``USERNAME/"
"godot``)."
msgstr ""
"இது அசல் `` கோடோடெங்கின்/கோடோட்` `களஞ்சியத்தை சுட்டிக்காட்டி` `அப்ச்ட்ரீம்` 'என்ற குறிப்பை "
"உருவாக்கும். உங்கள் முட்கரண்டியைப் புதுப்பிக்க அதன் `` மாச்டர்` கிளையிலிருந்து புதிய "
"கமிட்டுகளை இழுக்க விரும்பினால் இது பயனுள்ளதாக இருக்கும். உங்கள் முட்கரண்டியை (`` "
"பயனர்பெயர்/கோடோட்``) சுட்டிக்காட்டும் `` தோற்றம்`` என்ற மற்றொரு தொலைநிலை குறிப்பு "
"உங்களிடம் உள்ளது."

msgid ""
"You only need to do the above steps once, as long as you keep that local "
"``godot`` folder (which you can move around if you want, the relevant "
"metadata is hidden in its ``.git`` subfolder)."
msgstr ""
"அந்த உள்ளக `` கோடோட்`` கோப்புறையை நீங்கள் வைத்திருக்கும் வரை, மேற்கண்ட படிகளை நீங்கள் ஒரு "
"முறை மட்டுமே செய்ய வேண்டும் (நீங்கள் விரும்பினால் நீங்கள் சுற்றலாம், தொடர்புடைய மேனிலை தரவு "
"அதன் `` .git`` துணை கோப்புறையில் மறைக்கப்படுகிறது)."

msgid ""
"*Branch it, pull it, code it, stage it, commit, push it, rebase it... "
"technologic.*"
msgstr ""
"*Branch it, pull it, குறியீடு it, stage it, commit, push it, rebase it... "
"technologic.*"

msgid ""
"This bad take on Daft Punk's *Technologic* shows the general conception Git "
"beginners have of its workflow: lots of strange commands to learn by copy "
"and paste, hoping they will work as expected. And that's actually not a bad "
"way to learn, as long as you're curious and don't hesitate to question your "
"search engine when lost, so we will give you the basic commands to know when "
"working in Git."
msgstr ""
"டாஃப்ட் பங்கின் * டெக்னாலசிக் * இன் இந்த மோசமான எடுத்துக்காட்டு, அதன் பணிப்பாய்வுகளின் பொது "
"கருத்தாக்க அறிவிலி ஆரம்பத்தில் இருப்பதைக் காட்டுகிறது: நகல் மற்றும் பேச்ட் மூலம் கற்றுக்கொள்ள "
"நிறைய விசித்திரமான கட்டளைகள், அவை எதிர்பார்த்தபடி செயல்படும் என்று நம்புகின்றன. நீங்கள் "
"ஆர்வமாக இருக்கும் வரை, தொலைந்து போகும்போது உங்கள் தேடுபொறியை கேள்வி கேட்க தயங்காத வரை, "
"அது உண்மையில் கற்றுக்கொள்ள ஒரு மோசமான வழி அல்ல, எனவே அறிவிலி வேலை செய்யும் போது "
"தெரிந்து கொள்ள வேண்டிய அடிப்படை கட்டளைகளை நாங்கள் உங்களுக்கு வழங்குவோம்."

msgid ""
"In the following, we will assume as an example that you want to implement a "
"feature in Godot's Project Manager, which is coded in the ``editor/"
"project_manager.cpp`` file."
msgstr ""
"பின்வருவனவற்றில், கோடோட்டின் திட்ட மேலாளரில் ஒரு அம்சத்தை நீங்கள் செயல்படுத்த "
"விரும்புகிறீர்கள் என்று கருதுவோம், இது `` எடிட்டர்/project_manager.cpp`` கோப்பில் "
"குறியிடப்பட்டுள்ளது."

msgid "Branching"
msgstr "கிளைகள்"

msgid ""
"By default, the ``git clone`` should have put you on the ``master`` branch "
"of your fork (``origin``). To start your own feature development, we will "
"create a feature branch:"
msgstr ""
"இயல்பாக, `` அறிவிலி குளோன்`` உங்களை உங்கள் முட்கரண்டி (`` தோற்றம்``) `` மாச்டர்` "
"கிளையில் வைத்திருக்க வேண்டும். உங்கள் சொந்த அம்ச வளர்ச்சியைத் தொடங்க, நாங்கள் ஒரு அம்சக் "
"கிளையை உருவாக்குவோம்:"

msgid "This command is equivalent:"
msgstr "இந்த கட்டளை சமம்:"

msgid "If you want to go back to the ``master`` branch, you'd use:"
msgstr "நீங்கள் மீண்டும் `` மாச்டர்`` கிளைக்குச் செல்ல விரும்பினால், நீங்கள் பயன்படுத்தலாம்:"

msgid ""
"You can see which branch you are currently on with the ``git branch`` "
"command:"
msgstr ""
"`` அறிவிலி கிளை` கட்டளையுடன் நீங்கள் தற்போது எந்த கிளையில் இருக்கிறீர்கள் என்பதைக் காணலாம்:"

msgid ""
"Be sure to always go back to the ``master`` branch before creating a new "
"branch, as your current branch will be used as the base for the new one. "
"Alternatively, you can specify a custom base branch after the new branch's "
"name:"
msgstr ""
"ஒரு புதிய கிளையை உருவாக்குவதற்கு முன்பு எப்போதும் `` மாச்டர்` கிளைக்குச் செல்வதை "
"உறுதிப்படுத்திக் கொள்ளுங்கள், ஏனெனில் உங்கள் தற்போதைய கிளை புதியவற்றுக்கான தளமாக "
"பயன்படுத்தப்படும். மாற்றாக, புதிய கிளையின் பெயருக்குப் பிறகு தனிப்பயன் அடிப்படை கிளையை "
"நீங்கள் குறிப்பிடலாம்:"

msgid "Updating your branch"
msgstr "உங்கள் கிளையை புதுப்பித்தல்"

msgid ""
"This would not be needed the first time (just after you forked the upstream "
"repository). However, the next time you want to work on something, you will "
"notice that your fork's ``master`` is several commits behind the upstream "
"``master`` branch: pull requests from other contributors would have been "
"merged in the meantime."
msgstr ""
"இது முதல் முறையாக தேவையில்லை (நீங்கள் மேலோடை களஞ்சியத்தை முடித்துவிட்ட பிறகு). "
"எவ்வாறாயினும், அடுத்த முறை நீங்கள் ஏதாவது வேலை செய்ய விரும்பினால், உங்கள் முட்கரண்டி `` "
"மாச்டர்`` அப்ச்ட்ரீமின் பின்னால் `` மாச்டர்`` கிளைக்கு பின்னால் பல கமாவில் இருப்பதை நீங்கள் "
"கவனிப்பீர்கள்: மற்ற பங்களிப்பாளர்களிடமிருந்து கோரிக்கைகள் இதற்கிடையில் "
"ஒன்றிணைக்கப்பட்டிருக்கும்."

msgid ""
"To ensure there won't be conflicts between the feature you develop and the "
"current upstream ``master`` branch, you will have to update your branch by "
"*pulling* the upstream branch."
msgstr ""
"நீங்கள் உருவாக்கும் அம்சத்திற்கும் தற்போதைய மேலோடை `மாச்டர்` கிளைக்கும் இடையில் மோதல்கள் "
"இருக்காது என்பதை உறுதிப்படுத்த, மேலோடை கிளையை * இழுப்பதன் மூலம் உங்கள் கிளையை "
"புதுப்பிக்க வேண்டும்."

msgid ""
"The ``--rebase`` argument will ensure that any local changes that you "
"committed will be re-applied *on top* of the pulled branch, which is usually "
"what we want in our PR workflow. This way, when you open a pull request, "
"your own commits will be the only difference with the upstream ``master`` "
"branch."
msgstr ""
"``-ரிபேச்`` உரையாடல் நீங்கள் செய்த எந்தவொரு உள்ளக மாற்றங்களும் இழுக்கப்பட்ட கிளையின் மேலே * "
"மீண்டும் பயன்படுத்தப்படுவதை உறுதி செய்யும், இது பொதுவாக எங்கள் பிஆர் பணிப்பாய்வுகளில் நாம் "
"விரும்புவது. இந்த வழியில், நீங்கள் ஒரு இழுக்கும் கோரிக்கையைத் திறக்கும்போது, உங்கள் சொந்த "
"கமிட்டுகள் மேலோடை `` மாச்டர்`` கிளையின் ஒரே வித்தியாசமாக இருக்கும்."

msgid ""
"While rebasing, conflicts may arise if your commits modified code that has "
"been changed in the upstream branch in the meantime. If that happens, Git "
"will stop at the conflicting commit and will ask you to resolve the "
"conflicts. You can do so with any text editor, then stage the changes (more "
"on that later), and proceed with ``git rebase --continue``. Repeat the "
"operation if later commits have conflicts too, until the rebase operation "
"completes."
msgstr ""
"மறுதொடக்கம் செய்யும் போது, இதற்கிடையில் மேலோடை கிளையில் மாற்றப்பட்ட மாற்றியமைக்கப்பட்ட "
"குறியீட்டை நீங்கள் செய்தால் மோதல்கள் ஏற்படலாம். அது நடந்தால், அறிவிலி முரண்பட்ட உறுதிப்பாட்டை "
"நிறுத்தி, மோதல்களைத் தீர்க்கும்படி கேட்கும். நீங்கள் எந்த உரை எடிட்டருடனும் அவ்வாறு செய்யலாம், "
"பின்னர் மாற்றங்களை அரங்கேற்றலாம் (பின்னர் மேலும்), மேலும் `` அறிவிலி ரிபேச் - -கான்டினூ`` "
"உடன் தொடரலாம். மறுசீரமைப்பு செயல்பாடு நிறைவடையும் வரை, பின்னர் கமிட்டுகளுக்கு மோதல்கள் "
"இருந்தால் செயல்பாட்டை மீண்டும் செய்யவும்."

msgid ""
"If you're unsure about what is going on during a rebase and you panic (no "
"worry, we all do the first few times), you can abort the rebase with ``git "
"rebase --abort``. You will then be back to the original state of your branch "
"before calling ``git pull --rebase``."
msgstr ""
"ஒரு மறுதொடக்கத்தின் போது என்ன நடக்கிறது என்பது பற்றி உங்களுக்குத் தெரியாவிட்டால், நீங்கள் "
"பீதியடைகிறீர்கள் (கவலைப்பட வேண்டாம், நாங்கள் அனைவரும் முதல் சில முறை செய்கிறோம்), நீங்கள் `` "
"அறிவிலி ரிபேச் --abort`` உடன் மறுதொடக்கத்தை நிறுத்தலாம். `` அறிவிலி புல் -ரிபேச்`` "
"என்று அழைப்பதற்கு முன்பு நீங்கள் உங்கள் கிளையின் அசல் நிலைக்குத் திரும்புவீர்கள்."

msgid ""
"If you omit the ``--rebase`` argument, you will instead create a merge "
"commit which tells Git what to make of the two distinct branches. If any "
"conflicts arise, they would be resolved all at once via this merge commit."
msgstr ""
"``-ரிபேச்`` வாதத்தை நீங்கள் தவிர்த்துவிட்டால், அதற்கு பதிலாக இரண்டு தனித்துவமான கிளைகளை "
"என்ன செய்ய வேண்டும் என்று அறிவிலி சொல்லும் ஒரு ஒன்றிணைவு உறுதிப்பாட்டை உருவாக்குவீர்கள். "
"ஏதேனும் மோதல்கள் ஏற்பட்டால், இந்த ஒன்றிணைக்கும் உறுதிப்பாட்டின் மூலம் அவை ஒரே நேரத்தில் "
"தீர்க்கப்படும்."

msgid ""
"While this is a valid workflow and the default behavior of ``git pull``, "
"merge commits within PRs are frowned upon in our PR workflow. We only use "
"them when merging PRs into the upstream branch."
msgstr ""
"இது செல்லுபடியாகும் பணிப்பாய்வு மற்றும் `` அறிவிலி புல்`` இன் இயல்புநிலை நடத்தை "
"என்றாலும், பி.ஆர்.எச் -க்குள் ஒன்றிணைத்தல் எங்கள் பி.ஆர் பணிப்பாய்வுகளில் "
"கோபப்படுத்தப்படுகிறது. பி.ஆர்.எச்சை மேலோடை கிளையில் இணைக்கும்போது மட்டுமே அவற்றைப் "
"பயன்படுத்துகிறோம்."

msgid ""
"The philosophy is that a PR should represent the final stage of the changes "
"made to the codebase, and we are not interested in mistakes and fixes that "
"would have been done in intermediate stages before merging. Git gives us "
"great tools to \"rewrite the history\" and make it as if we got things right "
"the first time, and we're happy to use it to ensure that changes are easy to "
"review and understand long after they have been merged."
msgstr ""
"கோட்பேசில் செய்யப்பட்ட மாற்றங்களின் இறுதி கட்டத்தை ஒரு பி.ஆர் பிரதிநிதித்துவப்படுத்த "
"வேண்டும் என்பதே உண்மை, மேலும் ஒன்றிணைவதற்கு முன் இடைநிலை கட்டங்களில் செய்யப்பட்டிருக்கும் "
"தவறுகள் மற்றும் திருத்தங்களில் நாங்கள் ஆர்வம் காட்டவில்லை. அறிவிலி எங்களுக்கு \"வரலாற்றை "
"மீண்டும் எழுத\" சிறந்த கருவிகளைத் தருகிறது, மேலும் முதல் முறையாக விசயங்களை சரியாகப் "
"பெற்றது போல் அதைச் செய்யுங்கள், மேலும் மாற்றங்கள் ஒன்றிணைக்கப்பட்ட பின்னர் நீண்ட காலமாக "
"மாற்றங்களை மதிப்பாய்வு செய்வதற்கும் புரிந்துகொள்வதற்கும் எளிதானது என்பதை உறுதிப்படுத்த "
"இதைப் பயன்படுத்துவதில் நாங்கள் மகிழ்ச்சியடைகிறோம்."

msgid ""
"If you have already created a merge commit without using ``rebase``, or have "
"made any other changes that have resulted in undesired history, the best "
"option is to use an *interactive rebase* on the upstream branch. See the :"
"ref:`dedicated section <doc_pr_workflow_rebase>` for instructions."
msgstr ""
"`` ரிபேச்`` ஐப் பயன்படுத்தாமல் நீங்கள் ஏற்கனவே ஒரு ஒன்றிணைப்பு உறுதிப்பாட்டை "
"உருவாக்கியிருந்தால், அல்லது விரும்பத்தகாத வரலாற்றில் விளைந்த வேறு ஏதேனும் மாற்றங்களைச் "
"செய்திருந்தால், மேலோடை கிளையில் * ஊடாடும் மறுசீரமைப்பு * ஐப் பயன்படுத்துவதே சிறந்த வழி. "
"ஐக் காண்க: ref: `அர்ப்பணிப்பு பிரிவு <doc_pr_workflow_rebase>` அறிவுறுத்தல்களுக்கு."

msgid ""
"If at any time you want to *reset* a local branch to a given commit or "
"branch, you can do so with ``git reset --hard <commit ID>`` or ``git reset --"
"hard <remote>/<branch>`` (e.g. ``git reset --hard upstream/master``)."
msgstr ""
"எந்த நேரத்திலும் நீங்கள் கொடுக்கப்பட்ட கமிட் அல்லது கிளைக்கு ஒரு உள்ளக கிளையை மீட்டமைக்க "
"விரும்பினால், `` அறிவிலி மீட்டமை - -ஆர்ட் <கமிட் ஐடி> `` அல்லது `` அறிவிலி மீட்டமை - -"
"ஆர்ட் <ரிமோட்>/ உடன் அவ்வாறு செய்யலாம் <கிளை> `` (எ.கா. `` அறிவிலி மீட்டமை -ஆர்ட் "
"அப்ச்ட்ரீம்/மாச்டர்``)."

msgid ""
"Be warned that this will remove any changes that you might have committed in "
"this branch. If you ever lose commits by mistake, use the ``git reflog`` "
"command to find the commit ID of the previous state that you would like to "
"restore, and use it as argument of ``git reset --hard`` to go back to that "
"state."
msgstr ""
"இந்த கிளையில் நீங்கள் செய்த எந்த மாற்றங்களையும் இது நீக்கும் என்று எச்சரிக்கவும். நீங்கள் "
"எப்போதாவது தவறுதலாக கமிட்டுகளை இழந்தால், நீங்கள் மீட்டெடுக்க விரும்பும் முந்தைய மாநிலத்தின் "
"கமிட் ஐடியைக் கண்டுபிடிக்க `` அறிவிலி ரிஃப்ளோக்`` கட்டளையைப் பயன்படுத்தவும், அதை `` "
"அறிவிலி மீட்டமைப்பு - -ஆர்ட்`` என்ற வாதமாகப் பயன்படுத்தவும் அந்த மாநிலத்திற்குத் திரும்பு."

msgid "Making changes"
msgstr "மாற்றங்களைச் செய்கிறது"

msgid ""
"You would then do your changes to our example's ``editor/project_manager."
"cpp`` file with your usual development environment (text editor, IDE, etc.)."
msgstr ""
"உங்கள் வழக்கமான மேம்பாட்டு சூழலுடன் (உரை எடிட்டர், ஐடிஇ, முதலியன) எங்கள் உதாரணத்தின் `` "
"எடிட்டர்/project_manager.cpp`` கோப்பில் உங்கள் மாற்றங்களைச் செய்வீர்கள்."

msgid ""
"By default, those changes are *unstaged*. The staging area is a layer "
"between your working directory (where you make your modifications) and the "
"local Git repository (the commits and all the metadata in the ``.git`` "
"folder). To bring changes from the working directory to the Git repository, "
"you need to *stage* them with the ``git add`` command, and then to commit "
"them with the ``git commit`` command."
msgstr ""
"இயல்பாக, அந்த மாற்றங்கள் *நிலையற்றவை *. ச்டேசிங் பகுதி என்பது உங்கள் பணி அடைவு (நீங்கள் "
"உங்கள் மாற்றங்களைச் செய்தால்) மற்றும் உள்ளக அறிவிலி களஞ்சியம் (கமிட்ச் மற்றும் அனைத்து மேனிலை "
"தரவு `.git`` கோப்புறையில்) இடையே ஒரு அடுக்காகும். வேலை கோப்பகத்திலிருந்து அறிவிலி "
"களஞ்சியத்திற்கு மாற்றங்களைக் கொண்டுவர, நீங்கள் அவற்றை `` அறிவிலி சேர்` கட்டளையுடன் * "
"நிலைநிறுத்த வேண்டும், பின்னர் அவற்றை `` அறிவிலி கமிட்`` கட்டளையுடன் ஈடுபடுத்த வேண்டும்."

msgid ""
"There are various commands you should know to review your current work, "
"before staging it, while it is staged, and after it has been committed."
msgstr ""
"உங்கள் தற்போதைய வேலையை அரங்கேற்றுவதற்கு முன், அது அரங்கேற்றப்படும்போது, அது "
"செய்யப்பட்டபின், நீங்கள் தெரிந்து கொள்ள வேண்டிய பல்வேறு கட்டளைகள் உள்ளன."

msgid ""
"``git diff`` will show you the current unstaged changes, i.e. the "
"differences between your working directory and the staging area."
msgstr ""
"`` அறிவிலி டிஃப்`` தற்போதைய நிலையற்ற மாற்றங்களைக் காண்பிக்கும், அதாவது உங்கள் பணி அடைவு "
"மற்றும் ச்டேசிங் பகுதிக்கு இடையிலான வேறுபாடுகள்."

msgid ""
"``git checkout -- <files>`` will undo the unstaged changes to the given "
"files."
msgstr ""
"`` அறிவிலி செக்அவுட் - <கோப்புகள்> `` கொடுக்கப்பட்ட கோப்புகளில் நிலைநிறுத்தப்படாத "
"மாற்றங்களை செயல்தவிர்க்கும்."

msgid "``git add <files>`` will *stage* the changes on the listed files."
msgstr ""
"`` அறிவிலி <கோப்புகளைச் சேர்> `` பட்டியலிடப்பட்ட கோப்புகளில் ஏற்படும் மாற்றங்களை * "
"நிலைநிறுத்தும்."

msgid ""
"``git diff --staged`` will show the current staged changes, i.e. the "
"differences between the staging area and the last commit."
msgstr ""
"`` அறிவிலி டிஃப் -ச்டேசேச்`` தற்போதைய அரங்கேற்ற மாற்றங்களைக் காண்பிக்கும், அதாவது ச்டேசிங் "
"பகுதிக்கும் கடைசி உறுதிப்பாட்டிற்கும் இடையிலான வேறுபாடுகள்."

msgid "``git reset HEAD <files>`` will *unstage* changes to the listed files."
msgstr ""
"`` அறிவிலி மீட்டமை தலை <கோப்புகள்> `` பட்டியலிடப்பட்ட கோப்புகளில் மாற்றங்கள் * மாற்றப்படும்."

msgid ""
"``git status`` will show you what are the currently staged and unstaged "
"modifications."
msgstr ""
"`` அறிவிலி நிலை`` தற்போது அரங்கேற்றப்பட்ட மற்றும் நிலைநிறுத்தப்படாத மாற்றங்கள் என்ன "
"என்பதைக் காண்பிக்கும்."

msgid ""
"``git commit`` will commit the staged files. It will open a text editor (you "
"can define the one you want to use with the ``GIT_EDITOR`` environment "
"variable or the ``core.editor`` setting in your Git configuration) to let "
"you write a commit log. You can use ``git commit -m \"Cool commit log\"`` to "
"write the log directly."
msgstr ""
"`` அறிவிலி கமிட்`` அரங்கேற்றப்பட்ட கோப்புகளைச் செய்யும். இது ஒரு உரை எடிட்டரைத் திறக்கும் "
"(நீங்கள் பயன்படுத்த விரும்பும் ஒன்றை `` git_editor`` சூழல் மாறி அல்லது உங்கள் அறிவிலி "
"உள்ளமைவில் `` கோர்.டிட்டர்`` அமைப்புடன் நீங்கள் வரையறுக்கலாம்) ஒரு கமிட் பதிவை எழுத "
"அனுமதிக்கலாம். பதிவை நேரடியாக எழுத `` அறிவிலி கமிட் -எம் \"கூல் கமிட் லாக்\" `` "
"பயன்படுத்தலாம்."

msgid ""
"``git commit --amend`` lets you amend the last commit with your currently "
"staged changes (added with ``git add``). This is the best option if you want "
"to fix a mistake in the last commit (bug, typo, style issue, etc.)."
msgstr ""
"`` அறிவிலி கமிட் -amend`` உங்கள் தற்போது அரங்கேற்றப்பட்ட மாற்றங்களுடன் கடைசி "
"உறுதிப்பாட்டைத் திருத்த உங்களை அனுமதிக்கிறது (`` அறிவிலி ஆட்`` உடன் சேர்க்கப்பட்டுள்ளது). "
"கடைசி உறுதிப்பாட்டில் (பிழை, எழுத்துப்பிழை, பாணி சிக்கல் போன்றவை) ஒரு தவறை சரிசெய்ய "
"விரும்பினால் இது சிறந்த வழி."

msgid ""
"``git log`` will show you the last commits of your current branch. If you "
"did local commits, they should be shown at the top."
msgstr ""
"`` அறிவிலி பதிவு`` உங்கள் தற்போதைய கிளையின் கடைசி கமிட்டுகளை உங்களுக்குக் காண்பிக்கும். "
"நீங்கள் உள்ளக கமிட்டுகளைச் செய்திருந்தால், அவை மேலே காட்டப்பட வேண்டும்."

msgid ""
"``git show`` will show you the changes of the last commit. You can also "
"specify a commit hash to see the changes for that commit."
msgstr ""
"`` அறிவிலி சோ`` கடைசி உறுதிப்பாட்டின் மாற்றங்களைக் காண்பிக்கும். அந்த உறுதிப்பாட்டிற்கான "
"மாற்றங்களைக் காண நீங்கள் ஒரு கமிட் ஆசைக் குறிப்பிடலாம்."

msgid ""
"That's a lot to memorize! Don't worry, just check this cheat sheet when you "
"need to make changes, and learn by doing."
msgstr ""
"மனப்பாடம் செய்ய நிறைய இருக்கிறது! கவலைப்பட வேண்டாம், நீங்கள் மாற்றங்களைச் செய்ய "
"வேண்டியிருக்கும் போது இந்த ஏமாற்றுத் தாளைச் சரிபார்க்கவும், செய்வதன் மூலம் கற்றுக்கொள்ளவும்."

msgid "Here's how the shell history could look like on our example:"
msgstr "எங்கள் எடுத்துக்காட்டில் செல் வரலாறு எப்படி இருக்கும் என்பது இங்கே:"

msgid ""
"With this, we should have two new commits in our ``better-project-manager`` "
"branch which were not in the ``master`` branch. They are still only local "
"though, the remote fork does not know about them, nor does the upstream repo."
msgstr ""
"இதன் மூலம், `` மாச்டர்` கிளையில் இல்லாத எங்கள் `` சிறந்த-திட்ட-மேலாளர்` கிளையில் இரண்டு "
"புதிய கமிட்டுகள் இருக்க வேண்டும். அவர்கள் இன்னும் உள்ளக மட்டுமே, தொலைநிலை முட்கரண்டி "
"அவர்களைப் பற்றி தெரியாது, அல்லது மேலோடை ரெப்போ இல்லை."

msgid "Pushing changes to a remote"
msgstr "மாற்றங்களை தொலைதூரத்திற்கு தள்ளும்"

msgid ""
"That's where ``git push`` will come into play. In Git, a commit is always "
"done in the local repository (unlike Subversion where a commit will modify "
"the remote repository directly). You need to *push* the new commits to a "
"remote branch to share them with the world. The syntax for this is:"
msgstr ""
"அங்குதான் `` அறிவிலி புச்`` செயல்பாட்டுக்கு வரும். அறிவிலி இல், உள்ளக களஞ்சியத்தில் ஒரு "
"கமிட் எப்போதும் செய்யப்படுகிறது (ஒரு கமிட் தொலைதூர களஞ்சியத்தை நேரடியாக மாற்றும் "
"அடிபர்ப்பு போலல்லாமல்). உலகத்துடன் பகிர்ந்து கொள்ள நீங்கள் தொலைதூர கிளைக்கு புதிய "
"கமிட்டுகளை * தள்ள வேண்டும். இதற்கான தொடரியல்:"

msgid ""
"The part about the remote branch can be omitted if you want it to have the "
"same name as the local branch, which is our case in this example, so we will "
"do:"
msgstr ""
"உள்ளக கிளையின் அதே பெயரைக் கொண்டிருக்க விரும்பினால் தொலை கிளையைப் பற்றிய பகுதியை "
"தவிர்க்கலாம், இது இந்த எடுத்துக்காட்டில் எங்கள் வழக்கு, எனவே நாங்கள் செய்வோம்:"

msgid ""
"Git will ask you for your username and password. For your password, enter "
"your GitHub Personal Access Token (PAT). If you do not have a GitHub "
"Personal Access Token, or do not have one with the correct permissions for "
"your newly forked repository, you will need to create one. Follow this link "
"to create your Personal Access Token: `Creating a personal access token "
"<https://docs.github.com/en/authentication/keeping-your-account-and-data-"
"secure/creating-a-personal-access-token>`_."
msgstr ""
"உங்கள் பயனர்பெயர் மற்றும் கடவுச்சொல்லை அறிவிலி உங்களிடம் கேட்கும். உங்கள் கடவுச்சொல்லுக்கு, "
"உங்கள் அறிவிலிமையம் தனிப்பட்ட அணுகல் கிள்ளாக்கை (PAT) உள்ளிடவும். உங்களிடம் அறிவிலிமையம் "
"தனிப்பட்ட அணுகல் கிள்ளாக்கு இல்லையென்றால், அல்லது புதிதாக முட்கரண்டி களஞ்சியத்திற்கான "
"சரியான அனுமதிகளைக் கொண்டிருக்கவில்லை என்றால், நீங்கள் ஒன்றை உருவாக்க வேண்டும். உங்கள் "
"தனிப்பட்ட அணுகல் கிள்ளாக்கை உருவாக்க இந்த இணைப்பைப் பின்தொடரவும்: `தனிப்பட்ட அணுகல் "
"கிள்ளாக்கை உருவாக்குதல் <https://docs.github.com/en/authentication/keeping-your-"
"account-and-data-secure/creating-a-personal-- அணுகல் -டோகன்> `_."

msgid ""
"After you have successfully verified your account using your PAT, the "
"changes will be sent to your remote repository. If you check the fork's page "
"on GitHub, you should see a new branch with your added commits."
msgstr ""
"உங்கள் PAT ஐப் பயன்படுத்தி உங்கள் கணக்கை வெற்றிகரமாக சரிபார்த்த பிறகு, மாற்றங்கள் உங்கள் "
"தொலை களஞ்சியத்திற்கு அனுப்பப்படும். கிதுபில் முட்கரண்டி பக்கத்தை நீங்கள் சரிபார்த்தால், உங்கள் "
"கூடுதல் கமிட்டுகளுடன் ஒரு புதிய கிளையைப் பார்க்க வேண்டும்."

msgid "Issuing a pull request"
msgstr "இழுக்கும் கோரிக்கையை வெளியிடுதல்"

msgid ""
"When you load your fork's branch on GitHub, you should see a line saying "
"*\"This branch is 2 commits ahead of godotengine:master.\"* (and potentially "
"some commits behind, if your ``master`` branch was out of sync with the "
"upstream ``master`` branch)."
msgstr ""
"கிதுபில் உங்கள் முட்கரண்டியின் கிளையை ஏற்றும்போது, \"இந்த கிளை கோடோடெங்கைனை விட 2 "
"முன்னதாகவே உள்ளது: மாச்டர்.\" மேலோடை `` மாச்டர்`` கிளை)."

msgid ""
"On that line, there is a \"Pull request\" link. Clicking it will open a form "
"that will let you issue a pull request on the ``godotengine/godot`` upstream "
"repository. It should show you your two commits, and state \"Able to "
"merge\". If not (e.g. it has way more commits, or says there are merge "
"conflicts), don't create the PR yet, something went wrong. Go to our `Godot "
"Contributors Chat <https://chat.godotengine.org/>`_ and ask for support :)"
msgstr ""
"அந்த வரியில், \"இழுக்கும் கோரிக்கை\" இணைப்பு உள்ளது. அதைக் சொடுக்கு செய்வது ஒரு "
"படிவத்தைத் திறக்கும், இது `` கோடோடெங்கின்/கோடோட்`` மேலோடை களஞ்சியத்தில் ஒரு இழுப்பு "
"கோரிக்கையை வெளியிட அனுமதிக்கும். இது உங்கள் இரண்டு கமிட்டுகளையும் உங்களுக்குக் காட்ட "
"வேண்டும், மேலும் \"ஒன்றிணைக்க முடியும்\" என்று கூறுகிறது. இல்லையென்றால் (எ.கா. இது "
"அதிக கமிட்டுகள் உள்ளன, அல்லது ஒன்றிணைக்கும் மோதல்கள் உள்ளன என்று கூறுகின்றன), பி.ஆரை "
"இன்னும் உருவாக்க வேண்டாம், ஏதோ தவறு நடந்தது. எங்கள் `கோடோட் பங்களிப்பாளர்கள் அரட்டைக்குச் "
"சென்று <https://chat.godotengine.org/>` _ ஆதரவைக் கேளுங்கள் :)"

msgid ""
"Use an explicit title for the PR and put the necessary details in the "
"comment area. You can drag and drop screenshots, GIFs or zipped projects if "
"relevant, to showcase what your work implements. Click \"Create a pull "
"request\", and tadaa!"
msgstr ""
"PR க்கு வெளிப்படையான தலைப்பைப் பயன்படுத்தவும், தேவையான விவரங்களை கருத்துப் பகுதியில் "
"வைக்கவும். உங்கள் பணி எதை செயல்படுத்துகிறது என்பதைக் காண்பிக்க, நீங்கள் பொருத்தமானதாக "
"இருந்தால் திரை சாட்கள், GIF கள் அல்லது சிப் செய்யப்பட்ட திட்டங்களை இழுத்து விடலாம். \"ஒரு "
"இழுத்தல் கோரிக்கையை உருவாக்கு\" என்பதைக் சொடுக்கு செய்க, மற்றும் தடா!"

msgid "Modifying a pull request"
msgstr "இழுக்கும் கோரிக்கையை மாற்றியமைத்தல்"

msgid ""
"While it is reviewed by other contributors, you will often need to make "
"changes to your yet-unmerged PR, either because contributors requested them, "
"or because you found issues yourself while testing."
msgstr ""
"இது மற்ற பங்களிப்பாளர்களால் மதிப்பாய்வு செய்யப்படுகையில், பங்களிப்பாளர்கள் அவர்களைக் "
"கோரியதாலோ அல்லது சோதனை செய்யும் போது நீங்களே சிக்கல்களைக் கண்டதாலோ, நீங்கள் இன்னும் "
"வெளிப்படுத்தப்படாத பி.ஆரில் மாற்றங்களைச் செய்ய வேண்டும்."

msgid ""
"The good news is that you can modify a pull request simply by acting on the "
"branch you made the pull request from. You can e.g. make a new commit on "
"that branch, push it to your fork, and the PR will be updated automatically:"
msgstr ""
"நல்ல செய்தி என்னவென்றால், நீங்கள் இழுக்கும் கோரிக்கையை செய்த கிளையில் செயல்படுவதன் மூலம் "
"இழுக்கும் கோரிக்கையை மாற்றலாம். நீங்கள் எ.கா. அந்த கிளையில் ஒரு புதிய உறுதிப்பாட்டை "
"உருவாக்குங்கள், அதை உங்கள் முட்கரண்டியில் தள்ளுங்கள், மேலும் PR தானாகவே புதுப்பிக்கப்படும்:"

msgid ""
"However, be aware that in our PR workflow, we favor commits that bring the "
"codebase from one functional state to another functional state, without "
"having intermediate commits fixing up bugs in your own code or style issues. "
"Most of the time, we will prefer a single commit in a given PR (unless "
"there's a good reason to keep the changes separate). Instead of authoring a "
"new commit, consider using ``git commit --amend`` to amend the previous "
"commit with your fixes. The above example would then become:"
msgstr ""
"எவ்வாறாயினும், எங்கள் பி.ஆர் பணிப்பாய்வுகளில், உங்கள் சொந்த குறியீடு அல்லது பாணி "
"சிக்கல்களில் பிழைகளை சரிசெய்ய இடைநிலை செய்யாமல், ஒரு செயல்பாட்டு நிலையிலிருந்து "
"மற்றொரு செயல்பாட்டு நிலைக்கு கோட்பேசை கொண்டு வருவதை நாங்கள் விரும்புகிறோம் என்பதை "
"அறிந்து கொள்ளுங்கள். பெரும்பாலான நேரங்களில், கொடுக்கப்பட்ட பி.ஆரில் ஒரு உறுதிப்பாட்டை "
"நாங்கள் விரும்புவோம் (மாற்றங்களை தனித்தனியாக வைத்திருக்க நல்ல காரணம் இல்லாவிட்டால்). ஒரு "
"புதிய உறுதிப்பாட்டை எழுதுவதற்குப் பதிலாக, உங்கள் திருத்தங்களுடன் முந்தைய உறுதிப்பாட்டை "
"திருத்த `` அறிவிலி கமிட் -ஐஆரண்ட்`` ஐப் பயன்படுத்துவதைக் கவனியுங்கள். மேலே உள்ள சான்று "
"பின்னர் ஆகிவிடும்:"

msgid "The interactive rebase"
msgstr "ஊடாடும் மறுசீரமைப்பு"

msgid ""
"If you didn't follow the above steps closely to *amend* changes into a "
"commit instead of creating fixup commits, or if you authored your changes "
"without being aware of our workflow and Git usage tips, reviewers might "
"request you to *rebase* your branch to *squash* some or all of the commits "
"into one."
msgstr ""
"சரிசெய்தல் கமிட்டுகளை உருவாக்குவதற்குப் பதிலாக * திருத்தம் * மாற்றங்களை * திருத்துவதற்கு "
"* மேலே உள்ள படிகளை நீங்கள் நெருக்கமாகப் பின்பற்றவில்லை என்றால், அல்லது எங்கள் பணிப்பாய்வு "
"மற்றும் அறிவிலி பயன்பாட்டு உதவிக்குறிப்புகளைப் பற்றி அறியாமல் உங்கள் மாற்றங்களை நீங்கள் "
"எழுதியிருந்தால், விமர்சகர்கள் * உங்கள் * ரீஃபேச் * ஐக் கோரலாம் கிளை * ச்குவாச் * சில "
"அல்லது அனைத்து கமிட்டுகளும் ஒன்றில்."

msgid ""
"Indeed, if some commits have been made following reviews to fix bugs, typos, "
"etc. in the original commit, they are not relevant to a future changelog "
"reader who would want to know what happened in the Godot codebase, or when "
"and how a given file was last modified."
msgstr ""
"உண்மையில், பிழைகள், எழுத்துப்பிழைகள் போன்றவற்றை சரிசெய்ய சில கமிட்டுகள் மதிப்புரைகளைச் "
"செய்திருந்தால், அசல் கமிட்டில், கோடோட் கோட்பேசில் என்ன நடந்தது என்பதை அறிய விரும்பும் "
"எதிர்கால சேஞ்ச்லாக் வாசகருக்கு அவை பொருந்தாது, அல்லது எப்போது, எப்போது கொடுக்கப்பட்டவை "
"கோப்பு கடைசியாக மாற்றப்பட்டது."

msgid ""
"To squash those extraneous commits into the main one, we will have to "
"*rewrite history*. Right, we have that power. You may read that it's a bad "
"practice, and it's true when it comes to branches of the upstream repo. But "
"in your fork, you can do whatever you want, and everything is allowed to get "
"neat PRs :)"
msgstr ""
"அந்த புறம்பான கமிட்டுகளை பிரதானமாக ச்குவாச் செய்ய, வரலாற்றை மீண்டும் எழுத வேண்டும் *. "
"சரி, எங்களுக்கு அந்த ஆற்றல் இருக்கிறது. இது ஒரு மோசமான நடைமுறை என்று நீங்கள் படிக்கலாம், "
"மேலும் இது மேலோடை ரெப்போவின் கிளைகளுக்கு வரும்போது உண்மை. ஆனால் உங்கள் முட்கரண்டியில், "
"நீங்கள் எதை வேண்டுமானாலும் செய்யலாம், எல்லாமே சுத்தமாக PRS ஐப் பெற அனுமதிக்கப்படுகின்றன :)"

msgid ""
"We will use the *interactive rebase* ``git rebase -i`` to do this. This "
"command takes a commit ID or a branch name as argument, and will let you "
"modify all commits between that commit/branch and the last one in your "
"working branch, the so-called ``HEAD``."
msgstr ""
"இதைச் செய்ய * ஊடாடும் மறுதொடக்கம் * `` அறிவிலி ரிபேச் -ஐ`` ஐப் பயன்படுத்துவோம். இந்த "
"கட்டளை ஒரு கமிட் ஐடி அல்லது ஒரு கிளை பெயரை வாதமாக எடுத்துக்கொள்கிறது, மேலும் அந்த "
"கமிட்/கிளைக்கும், உங்கள் பணிபுரியும் கிளையில் கடைசியாக இருப்பதற்கும், `` தலை`` என்று "
"அழைக்கப்படுவதையும் மாற்ற அனுமதிக்கும்."

msgid ""
"While you can give any commit ID to ``git rebase -i`` and review everything "
"in between, the most common and convenient workflow involves rebasing on the "
"upstream ``master`` branch, which you can do with:"
msgstr ""
"`` அறிவிலி ரிபேச் -இ -ஐ`` க்கு நீங்கள் எந்தவொரு கமிட் ஐடியையும் கொடுக்கலாம் மற்றும் "
"இடையில் உள்ள அனைத்தையும் மதிப்பாய்வு செய்யலாம், மிகவும் பொதுவான மற்றும் வசதியான "
"பணிப்பாய்வு `மாச்டர்`` கிளையில் மறுதொடக்கம் செய்வதை உள்ளடக்குகிறது, அதை நீங்கள் செய்ய "
"முடியும்:"

msgid ""
"Referencing branches in Git is a bit tricky due to the distinction between "
"remote and local branches. Here, ``upstream/master`` (with a `/`) is a local "
"branch which has been pulled from the ``upstream`` remote's ``master`` "
"branch."
msgstr ""
"தொலைநிலை மற்றும் உள்ளக கிளைகளுக்கு இடையிலான வேறுபாடு காரணமாக GIT இல் கிளைகளைக் "
"குறிப்பிடுவது சற்று தந்திரமானது. இங்கே, `` அப்ச்ட்ரீம்/மாச்டர்`` (`/` உடன்) என்பது ஒரு "
"உள்ளக கிளை ஆகும், இது `` அப்ச்ட்ரீம்` ரிமோட்டின் `மாச்டர்`` கிளையிலிருந்து "
"இழுக்கப்பட்டுள்ளது."

msgid ""
"Interactive rebases can only be done on local branches, so the `/` is "
"important here. As the upstream remote changes frequently, your local "
"``upstream/master`` branch may become outdated, so you can update it with "
"``git fetch upstream master``. Contrarily to ``git pull --rebase upstream "
"master`` which would update your currently checked out branch, ``fetch`` "
"will only update the ``upstream/master`` reference (which is distinct from "
"your local ``master`` branch... yes it's confusing, but you'll become "
"familiar with this little by little)."
msgstr ""
"ஊடாடும் மறுதொடக்கங்களை உள்ளக கிளைகளில் மட்டுமே செய்ய முடியும், எனவே இங்கே `/` "
"முக்கியமானது. மேலோடை ரிமோட் அடிக்கடி மாறும்போது, உங்கள் உள்ளக `` அப்ச்ட்ரீம்/மாச்டர்`` "
"கிளை காலாவதியானதாக மாறக்கூடும், எனவே நீங்கள் அதை `` அறிவிலி மேலோடை மாச்டர்`` உடன் "
"புதுப்பிக்கலாம். உங்கள் தற்போது சரிபார்க்கப்பட்ட கிளையை புதுப்பிக்கும் `` அறிவிலி புல் -"
"ரிபேச் மேலோடை மாச்டர்` க்கு மாறாக, `` ஃபெட்ச்`` `` அப்ச்ட்ரீம்/மாச்டர்`` குறிப்பை மட்டுமே "
"புதுப்பிக்கும் (இது உங்கள் உள்ளக `மாச்டர்` `கிளை ... ஆமாம் இது குழப்பமாக இருக்கிறது, "
"ஆனால் இந்த சிறியதை நீங்கள் நன்கு அறிந்திருப்பீர்கள்)."

msgid ""
"This will open a text editor (``vi`` by default, see `Git docs <https://git-"
"scm.com/book/en/v2/Customizing-Git-Git-Configuration#_core_editor>`_ to "
"configure your favorite one) with something which may look like this:"
msgstr ""
"இது ஒரு உரை எடிட்டரைத் திறக்கும் (`` vi`` இயல்பாக, `கிட் டாக்ச் <https://git-scm.com/"
"book/en/v2/customing-git-git-configuration#_core_editor> _ _ _ உங்களுக்கு "
"பிடித்த ஒன்று) இதைப் போல தோற்றமளிக்கும்:"

msgid ""
"The editor will also show instructions regarding how you can act on those "
"commits. In particular, it should tell you that \"pick\" means to use that "
"commit (do nothing), and that \"squash\" and \"fixup\" can be used to *meld* "
"the commit in its parent commit. The difference between \"squash\" and "
"\"fixup\" is that \"fixup\" will discard the commit log from the squashed "
"commit. In our example, we are not interested in keeping the log of the "
"\"Fix a typo\" commit, so we use:"
msgstr ""
"அந்த கமிட்டுகளில் நீங்கள் எவ்வாறு செயல்பட முடியும் என்பது குறித்த வழிமுறைகளையும் ஆசிரியர் "
"காண்பிப்பார். குறிப்பாக, \"பிக்\" என்பது அந்த உறுதிப்பாட்டைப் பயன்படுத்துவதாகும் (ஒன்றும் "
"செய்யாதீர்கள்) என்பதையும், \"ச்குவாச்\" மற்றும் \"ஃபிக்ச்அப்\" அதன் பெற்றோரின் உறுதிப்பாட்டை * "
"ஒன்றிணைக்க * பயன்படுத்தலாம் என்பதையும் இது உங்களுக்குச் சொல்ல வேண்டும். \"ச்குவாச்\" மற்றும் "
"\"ஃபிக்ச்அப்\" ஆகியவற்றுக்கு இடையிலான வேறுபாடு என்னவென்றால், \"ஃபிக்அப்\" ச்குவாச் "
"கமிட்டிலிருந்து கமிட் பதிவை நிராகரிக்கும். எங்கள் எடுத்துக்காட்டில், \"ஒரு "
"எழுத்துப்பிழையை சரிசெய்யவும்\" உறுதிப்பாட்டின் பதிவை வைத்திருப்பதில் நாங்கள் ஆர்வம் "
"காட்டவில்லை, எனவே நாங்கள் பயன்படுத்துகிறோம்:"

msgid ""
"Upon saving and quitting the editor, the rebase will occur. The second "
"commit will be melded into the first one, and ``git log`` and ``git show`` "
"should now confirm that you have only one commit with the changes from both "
"previous commits."
msgstr ""
"எடிட்டரைச் சேமித்து விட்டுவிட்டால், மறுதொடக்கம் ஏற்படும். இரண்டாவது கமிட் முதல் ஒன்றில் "
"ஒன்றிணைக்கப்படும், மேலும் `` அறிவிலி உள்நுழைவு` மற்றும் `` அறிவிலி சோ`` இப்போது "
"முந்தைய இரண்டு கமாண்டுகளிலிருந்தும் மாற்றங்களுடன் ஒரே ஒரு உறுதிப்பாட்டைக் கொண்டிருப்பதை "
"இப்போது உறுதிப்படுத்த வேண்டும்."

msgid ""
"But! You rewrote the history, and now your local and remote branches have "
"diverged. Indeed, commit 1b4aad7 in the above example will have changed, and "
"therefore got a new commit hash. If you try to push to your remote branch, "
"it will raise an error:"
msgstr ""
"ஆனால்! நீங்கள் வரலாற்றை மீண்டும் எழுதினீர்கள், இப்போது உங்கள் உள்ளக மற்றும் தொலைநிலை கிளைகள் "
"வேறுபட்டுள்ளன. உண்மையில், மேற்கண்ட எடுத்துக்காட்டில் 1b4aad7 ஐ கமிட் செய்திருக்கும், எனவே "
"ஒரு புதிய கமிட் ஆச் கிடைத்தது. உங்கள் தொலை கிளைக்குத் தள்ள முயற்சித்தால், அது ஒரு "
"பிழையை எழுப்பும்:"

msgid ""
"This is reasonable behavior, Git will not let you push changes that would "
"override remote content. But that's actually what we want to do here, so we "
"will have to *force* it:"
msgstr ""
"இது நியாயமான நடத்தை, தொலைதூர உள்ளடக்கத்தை மீறும் மாற்றங்களை தள்ள GIT உங்களை "
"அனுமதிக்காது. ஆனால் உண்மையில் நாம் இங்கே செய்ய விரும்புகிறோம், எனவே நாம் அதை * "
"கட்டாயப்படுத்த வேண்டும்:"

msgid ""
"And tadaa! Git will happily *replace* your remote branch with what you had "
"locally (so make sure that's what you wanted, using ``git log``). This will "
"also update the PR accordingly."
msgstr ""
"மற்றும் தடா! அறிவிலி உங்கள் தொலைதூரக் கிளையை நீங்கள் உள்நாட்டில் வைத்திருந்தவற்றைக் கொண்டு "
"மகிழ்ச்சியுடன் * மாற்றும் (எனவே `` அறிவிலி பதிவு`` ஐப் பயன்படுத்தி நீங்கள் விரும்பியதை "
"உறுதிப்படுத்திக் கொள்ளுங்கள்). இது அதற்கேற்ப PR ஐ புதுப்பிக்கும்."

msgid "Rebasing onto another branch"
msgstr "வேறொரு கிளையில் மறுவடிவமைப்பு"

msgid ""
"If you have accidentally opened your PR on the wrong branch, or need to "
"target another branch for some reason, you might need to filter out a lot of "
"commits that differ between the old branch (for example ``4.2``) and the new "
"branch (for example ``master``). This can make rebasing difficult and "
"tedious. Fortunately ``git`` has a command just for this situation, ``git "
"rebase --onto``."
msgstr ""
"நீங்கள் தற்செயலாக உங்கள் பி.ஆரை தவறான கிளையில் திறந்திருந்தால், அல்லது சில காரணங்களால் "
"மற்றொரு கிளையை குறிவைக்க வேண்டும் என்றால், பழைய கிளைக்கு (எடுத்துக்காட்டாக `` 4.2``) "
"மற்றும் புதியது ஆகியவற்றுக்கு இடையில் வேறுபடும் நிறைய கமிட்டுகளை நீங்கள் வடிகட்ட "
"வேண்டியிருக்கும் கிளை (எடுத்துக்காட்டாக `` மாச்டர்``). இது மறுதொடக்கம் செய்வது "
"கடினமாகவும் கடினமாகவும் இருக்கும். அதிர்ச்டவசமாக `` கிட்`` இந்த சூழ்நிலைக்கு ஒரு கட்டளை "
"உள்ளது, `` அறிவிலி ரிபேச் --ண்டோ``."

msgid ""
"If your PR was created from the ``4.2`` branch and you want to update it to "
"instead start at ``master`` the following steps *should* fix this in one "
"step:"
msgstr ""
"உங்கள் பி.ஆர் `` 4.2`` கிளையிலிருந்து உருவாக்கப்பட்டிருந்தால், அதற்கு பதிலாக `` "
"மாச்டர்`` இல் தொடங்க அதை புதுப்பிக்க விரும்பினால், பின்வரும் படிகள் * இதை ஒரு கட்டத்தில் "
"சரிசெய்ய வேண்டும்:"

msgid ""
"This will take all the commits on your branch *after* the ``4.2`` branch, "
"and then splice them on top of ``master``, ignoring any commits from the "
"``4.2`` branch not on the ``master`` branch. You may still need to do some "
"fixing, but this command should save you a lot of tedious work removing "
"commits."
msgstr ""
"இது உங்கள் கிளையில் உள்ள அனைத்து கமிட்டுகளையும் * `` 4.2`` கிளைக்குப் பிறகு எடுத்து, "
"பின்னர் `` 4.2`` கிளையில் இருந்து எந்தவொரு கமிட்டுகளையும் புறக்கணித்து, `` மாச்டர் "
"எசமானரில் இல்லாதது ஆகியவற்றின் மேல் அவற்றைப் பிரிக்கும் `` கிளை. நீங்கள் இன்னும் சில "
"சரிசெய்தல் செய்ய வேண்டியிருக்கலாம், ஆனால் இந்த கட்டளை உங்களுக்கு நிறைய கடினமான வேலைகளைச் "
"சேமிக்க வேண்டும்."

msgid ""
"Just like above for the interactive rebase you need to force push your "
"branch to handle the different changes:"
msgstr ""
"ஊடாடும் மறுசீரமைப்பிற்கான மேலே உள்ளதைப் போலவே, வெவ்வேறு மாற்றங்களைக் கையாள உங்கள் கிளையை "
"தள்ள கட்டாயப்படுத்த வேண்டும்:"

msgid "Deleting a Git branch"
msgstr "ஒரு அறிவிலி கிளையை நீக்குகிறது"

msgid ""
"After your pull request gets merged, there's one last thing you should do: "
"delete your Git branch for the PR. There won't be issues if you don't delete "
"your branch, but it's good practice to do so. You'll need to do this twice, "
"once for the local branch and another for the remote branch on GitHub."
msgstr ""
"உங்கள் இழுக்கும் கோரிக்கை ஒன்றிணைந்த பிறகு, நீங்கள் செய்ய வேண்டிய கடைசி சேதி இருக்கிறது: "
"பி.ஆருக்கு உங்கள் அறிவிலி கிளையை நீக்கு. உங்கள் கிளையை நீக்காவிட்டால் சிக்கல்கள் இருக்காது, "
"ஆனால் அவ்வாறு செய்வது நல்ல நடைமுறை. இதை நீங்கள் இரண்டு முறை செய்ய வேண்டும், உள்ளக "
"கிளைக்கு ஒரு முறை மற்றும் மற்றொரு கிதுபில் உள்ள தொலை கிளைக்கு."

msgid "To delete our better Project Manager branch locally, use this command:"
msgstr "உள்நாட்டில் எங்கள் சிறந்த திட்ட மேலாளர் கிளையை நீக்க, இந்த கட்டளையைப் பயன்படுத்தவும்:"

msgid ""
"Alternatively, if the branch hadn't been merged yet and we wanted to delete "
"it anyway, instead of ``-d`` you would use ``-D``."
msgstr ""
"மாற்றாக, கிளை இன்னும் ஒன்றிணைக்கப்படவில்லை மற்றும் `` -d`` என்பதற்குப் பதிலாக, அதை "
"எப்படியும் நீக்க விரும்பினால், நீங்கள் `` -d`` ஐப் பயன்படுத்துவீர்கள்."

msgid "Next, to delete the remote branch on GitHub use this command:"
msgstr "அடுத்து, கிட்அப்பில் ரிமோட் கிளையை நீக்க இந்த கட்டளையைப் பயன்படுத்தவும்:"

msgid ""
"You can also delete the remote branch from the GitHub PR itself, a button "
"should appear once it has been merged or closed."
msgstr ""
"நீங்கள் ரிமோட் கிளையை அறிவிலிமையம் பி.ஆரிலிருந்து நீக்கலாம், ஒரு பொத்தானை ஒன்றிணைந்தவுடன் "
"அல்லது மூடப்பட்டவுடன் தோன்ற வேண்டும்."
