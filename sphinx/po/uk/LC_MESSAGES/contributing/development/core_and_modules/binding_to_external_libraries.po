#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Binding to external libraries"
msgstr "Прив'язка до зовнішніх бібліотек"

msgid "Modules"
msgstr "Модулі"

msgid ""
"The Summator example in :ref:`doc_custom_modules_in_cpp` is great for small, "
"custom modules, but what if you want to use a larger, external library? "
"Let's look at an example using `Festival <https://www.cstr.ed.ac.uk/projects/"
"festival/>`_, a speech synthesis (text-to-speech) library written in C++."
msgstr ""
"Приклад Summator у :ref:`doc_custom_modules_in_cpp` чудово підходить для "
"невеликих спеціальних модулів, але що, якщо ви хочете використовувати більшу "
"зовнішню бібліотеку? Давайте розглянемо приклад використання `Festival "
"<https://www.cstr.ed.ac.uk/projects/festival/>`_, бібліотеки синтезу "
"мовлення (перетворення тексту в мовлення), написаної на C++."

msgid ""
"To bind to an external library, set up a module directory similar to the "
"Summator example:"
msgstr ""
"Щоб підключитися до зовнішньої бібліотеки, налаштуйте каталог модуля, "
"подібний до прикладу Summator:"

msgid "Next, you will create a header file with a TTS class:"
msgstr "Далі ви створите файл заголовка з класом TTS:"

msgid "And then you'll add the cpp file."
msgstr "Потім ви додасте файл cpp."

msgid ""
"Just as before, the new class needs to be registered somehow, so two more "
"files need to be created:"
msgstr ""
"Як і раніше, новий клас потрібно якось зареєструвати, тому необхідно "
"створити ще два файли:"

msgid ""
"These files must be in the top-level folder of your module (next to your "
"``SCsub`` and ``config.py`` files) for the module to be registered properly."
msgstr ""
"Ці файли мають бути у папці верхнього рівня вашого модуля (поруч із файлами "
"``SCsub`` і ``config.py``), щоб модуль було зареєстровано належним чином."

msgid "These files should contain the following:"
msgstr "Ці файли повинні містити наступне:"

msgid ""
"Next, you need to create an ``SCsub`` file so the build system compiles this "
"module:"
msgstr ""
"Далі вам потрібно створити файл ``SCsub``, щоб система збірки скомпілювала "
"цей модуль:"

msgid ""
"You'll need to install the external library on your machine to get the .a "
"library files. See the library's official documentation for specific "
"instructions on how to do this for your operation system. We've included the "
"installation commands for Linux below, for reference."
msgstr ""
"Щоб отримати файли бібліотеки .a, вам потрібно буде встановити зовнішню "
"бібліотеку на ваш комп’ютер. Перегляньте офіційну документацію бібліотеки, "
"щоб отримати конкретні інструкції щодо того, як це зробити для вашої "
"операційної системи. Ми включили команди встановлення для Linux нижче для "
"довідки."

msgid ""
"The voices that Festival uses (and any other potential external/3rd-party "
"resource) all have varying licenses and terms of use; some (if not most) of "
"them may be be problematic with Godot, even if the Festival Library itself "
"is MIT License compatible. Please be sure to check the licenses and terms of "
"use."
msgstr ""
"Голоси, які використовує Фестиваль (та будь-який інший потенційний зовнішній/"
"сторонній ресурс), усі мають різні ліцензії та умови використання; деякі "
"(якщо не більшість) із них можуть бути проблематичними з Godot, навіть якщо "
"сама бібліотека фестивалю сумісна з ліцензією MIT. Перевірте ліцензії та "
"умови використання."

msgid ""
"The external library will also need to be installed inside your module to "
"make the source files accessible to the compiler, while also keeping the "
"module code self-contained. The festival and speech_tools libraries can be "
"installed from the modules/tts/ directory via git using the following "
"commands:"
msgstr ""
"Зовнішню бібліотеку також потрібно буде встановити всередині вашого модуля, "
"щоб зробити вихідні файли доступними для компілятора, а також зберегти код "
"модуля автономним. Бібліотеки festival та speech_tools можна встановити з "
"каталогу modules/tts/ через git за допомогою таких команд:"

msgid ""
"If you don't want the external repository source files committed to your "
"repository, you can link to them instead by adding them as submodules (from "
"within the modules/tts/ directory), as seen below:"
msgstr ""
"Якщо ви не хочете, щоб вихідні файли зовнішнього сховища надсилалися у ваш "
"репозиторій, ви можете натомість зв’язатися з ними, додавши їх як підмодулі "
"(з каталогу modules/tts/), як показано нижче:"

msgid ""
"Please note that Git submodules are not used in the Godot repository. If you "
"are developing a module to be merged into the main Godot repository, you "
"should not use submodules. If your module doesn't get merged in, you can "
"always try to implement the external library as a GDExtension."
msgstr ""
"Зауважте, що субмодулі Git не використовуються в репозиторії Godot. Якщо ви "
"розробляєте модуль, який буде об’єднано з основним репозиторієм Godot, вам "
"не слід використовувати підмодулі. Якщо ваш модуль не об’єднується, ви "
"завжди можете спробувати реалізувати зовнішню бібліотеку як GDExtension."

msgid ""
"To add include directories for the compiler to look at you can append it to "
"the environment's paths:"
msgstr ""
"Щоб додати каталоги include для перегляду компілятором, ви можете додати "
"його до шляхів середовища:"

msgid ""
"If you want to add custom compiler flags when building your module, you need "
"to clone `env` first, so it won't add those flags to whole Godot build "
"(which can cause errors). Example `SCsub` with custom flags:"
msgstr ""
"Якщо ви хочете додати спеціальні позначки компілятора під час створення "
"вашого модуля, вам потрібно спочатку клонувати `env`, щоб він не додавав ці "
"прапорці до всієї збірки Godot (що може спричинити помилки). Приклад `SCsub` "
"із спеціальними прапорцями:"

msgid "The final module should look like this:"
msgstr "Кінцевий модуль має виглядати так:"

msgid "Using the module"
msgstr "Користування модулем"

msgid "You can now use your newly created module from any script:"
msgstr ""
"Тепер ви можете використовувати ваш щойно створений модуль з будь-якого "
"сценарію:"

msgid "And the output will be ``is_spoken: True`` if the text is spoken."
msgstr "І результат буде ``is_spoken: True``, якщо текст озвучено."
