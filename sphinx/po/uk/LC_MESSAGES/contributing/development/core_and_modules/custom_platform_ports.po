#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Custom platform ports"
msgstr "Спеціальні порти платформи"

msgid ""
"Similar to :ref:`doc_custom_modules_in_cpp`, Godot's multi-platform "
"architecture is designed in a way that allows creating platform ports "
"without modifying any existing source code."
msgstr ""
"Подібно до :ref:`doc_custom_modules_in_cpp`, багатоплатформна архітектура "
"Godot розроблена таким чином, що дозволяє створювати порти платформи без "
"змінення існуючого вихідного коду."

msgid ""
"An example of a custom platform port distributed independently from the "
"engine is `FRT <https://github.com/efornara/frt>`__, which targets single-"
"board computers. Note that this platform port currently targets Godot 3.x; "
"therefore, it does not use the :ref:`class_DisplayServer` abstraction that "
"is new in Godot 4."
msgstr ""
"Прикладом спеціального порту платформи, який розповсюджується незалежно від "
"двигуна, є `FRT <https://github.com/efornara/frt>`__, який націлений на "
"одноплатні комп’ютери. Зауважте, що цей порт платформи наразі націлений на "
"Godot 3.x; отже, він не використовує абстракцію :ref:`class_DisplayServer`, "
"яка є новою в Godot 4."

msgid "Some reasons to create custom platform ports might be:"
msgstr "Деякі причини для створення спеціальних портів платформи можуть бути:"

msgid ""
"You want to :ref:`port your game to consoles <doc_consoles>`, but wish to "
"write the platform layer yourself. This is a long and arduous process, as it "
"requires signing NDAs with console manufacturers, but it allows you to have "
"full control over the console porting process."
msgstr ""
"Ви хочете :ref:`перенести свою гру на консолі <doc_consoles>`, але хочете "
"написати рівень платформи самостійно. Це тривалий і трудомісткий процес, "
"оскільки він вимагає підписання NDA з виробниками консолей, але він дозволяє "
"повністю контролювати процес портування консолі."

msgid ""
"You want to port Godot to an exotic platform that isn't currently supported."
msgstr ""
"Ви хочете перенести Godot на екзотичну платформу, яка зараз не підтримується."

msgid ""
"If you have questions about creating a custom platform port, feel free to "
"ask in the ``#platforms`` channel of the `Godot Contributors Chat <https://"
"chat.godotengine.org/channel/platforms>`__."
msgstr ""
"Якщо у вас є запитання щодо створення спеціального порту платформи, не "
"соромтеся запитати на каналі ``#platforms`` у `чаті учасників Godot <https://"
"chat.godotengine.org/channel/platforms>`__."

msgid ""
"Godot is a modern engine with modern requirements. Even if you only intend "
"to run simple 2D projects on the target platform, it still requires an "
"amount of memory that makes it unviable to run on most retro consoles. For "
"reference, in Godot 4, an empty project with nothing visible requires about "
"100 MB of RAM to run on Linux (50 MB in headless mode)."
msgstr ""
"Godot – сучасний двигун із сучасними вимогами. Навіть якщо ви збираєтеся "
"запускати лише прості 2D-проекти на цільовій платформі, це все одно потребує "
"такої кількості пам’яті, що робить її нежиттєздатною для запуску на "
"більшості ретро-консолей. Для довідки, у Godot 4 порожній проект, у якому "
"нічого не видно, вимагає приблизно 100 МБ оперативної пам’яті для роботи в "
"Linux (50 МБ у безголовому режимі)."

msgid ""
"If you want to run Godot on heavily memory-constrained platforms, older "
"Godot versions have lower memory requirements. The porting process is "
"similar, with the exception of :ref:`class_DisplayServer` not being split "
"from the :ref:`class_OS` singleton."
msgstr ""
"Якщо ви бажаєте запускати Godot на платформах із великими обмеженнями "
"пам’яті, старіші версії Godot мають менші вимоги до пам’яті. Процес "
"перенесення подібний, за винятком того, що :ref:`class_DisplayServer` не "
"відокремлено від єдиного елемента :ref:`class_OS`."

msgid "Official platform ports"
msgstr "Офіційні порти платформи"

msgid ""
"The official platform ports can be used as a reference when creating a "
"custom platform port:"
msgstr ""
"Офіційні порти платформи можна використовувати як довідкові під час "
"створення спеціального порту платформи:"

msgid ""
"`Windows <https://github.com/godotengine/godot/tree/master/platform/"
"windows>`__"
msgstr ""
"`Windows <https://github.com/godotengine/godot/tree/master/platform/"
"windows>`__"

msgid ""
"`macOS <https://github.com/godotengine/godot/tree/master/platform/macos>`__"
msgstr ""
"`macOS <https://github.com/godotengine/godot/tree/master/platform/macos>`__"

msgid ""
"`Linux/\\*BSD <https://github.com/godotengine/godot/tree/master/platform/"
"linuxbsd>`__"
msgstr ""
"`Linux/\\*BSD <https://github.com/godotengine/godot/tree/master/platform/"
"linuxbsd>`__"

msgid ""
"`Android <https://github.com/godotengine/godot/tree/master/platform/"
"android>`__"
msgstr ""
"`Android <https://github.com/godotengine/godot/tree/master/platform/"
"android>`__"

msgid "`iOS <https://github.com/godotengine/godot/tree/master/platform/ios>`__"
msgstr ""
"`iOS <https://github.com/godotengine/godot/tree/master/platform/ios>`__"

msgid "`Web <https://github.com/godotengine/godot/tree/master/platform/web>`__"
msgstr ""
"`Web <https://github.com/godotengine/godot/tree/master/platform/web>`__"

msgid "Creating a custom platform port"
msgstr "Створення спеціального порту платформи"

msgid ""
"Creating a custom platform port is a large undertaking which requires prior "
"knowledge of the platform's SDKs. Depending on what features you need, the "
"amount of work needed varies:"
msgstr ""
"Створення спеціального порту платформи — це велика справа, яка потребує "
"попереднього знання SDK платформи. Залежно від того, які функції вам "
"потрібні, обсяг необхідної роботи змінюється:"

msgid "Required features of a platform port"
msgstr "Необхідні функції порту платформи"

msgid ""
"At the very least, a platform port must have methods from the :ref:"
"`class_OS` singleton implemented to be buildable and usable for headless "
"operation. A ``logo.svg`` (32×32) vector image must also be present within "
"the platform folder. This logo is displayed in the Export dialog for each "
"export preset targeting the platform in question."
msgstr ""
"Принаймні, порт платформи повинен мати методи з синглтона :ref:`class_OS`, "
"реалізовані, щоб їх можна було побудувати та використовувати для автономної "
"роботи. Векторне зображення ``logo.svg`` (32×32) також має бути в папці "
"платформи. Цей логотип відображається в діалоговому вікні експорту для "
"кожного стилю експорту, націленого на відповідну платформу."

msgid ""
"See `this implementation <https://github.com/godotengine/godot/blob/master/"
"platform/linuxbsd/os_linuxbsd.cpp>`__ for the Linux/\\*BSD platform as an "
"example. See also the `OS singleton header <https://github.com/godotengine/"
"godot/blob/master/core/os/os.h>`__ for reference."
msgstr ""
"Перегляньте `цю реалізацію <https://github.com/godotengine/godot/blob/master/"
"platform/linuxbsd/os_linuxbsd.cpp>`__ для платформи Linux/\\*BSD як приклад. "
"Дивіться також `Singleton заголовок ОС <https://github.com/godotengine/godot/"
"blob/master/core/os/os.h>`__ для довідки."

msgid ""
"If your target platform is UNIX-like, consider inheriting from the "
"``OS_Unix`` class to get much of the work done automatically."
msgstr ""
"Якщо ваша цільова платформа є UNIX-подібною, подумайте про успадкування від "
"класу ``OS_Unix``, щоб виконувати більшу частину роботи автоматично."

msgid "**detect.py file**"
msgstr "**detect.py file**"

msgid ""
"A ``detect.py`` file must be created within the platform's folder with all "
"methods implemented. This file is required for SCons to detect the platform "
"as a valid option for compiling. See the `detect.py file <https://github.com/"
"godotengine/godot/blob/master/platform/linuxbsd/detect.py>`__ for the Linux/"
"\\*BSD platform as an example."
msgstr ""
"Файл ``detect.py`` має бути створений у папці платформи з усіма "
"реалізованими методами. Цей файл потрібен SCons, щоб визначити платформу як "
"дійсний варіант для компіляції. Як приклад дивіться файл `detect.py <https://"
"github.com/godotengine/godot/blob/master/platform/linuxbsd/detect.py>`__ для "
"платформи Linux/\\*BSD."

msgid "All methods should be implemented within ``detect.py`` as follows:"
msgstr "Усі методи мають бути реалізовані в ``detect.py`` наступним чином:"

msgid ""
"``is_active()``: Can be used to temporarily disable building for a platform. "
"This should generally always return ``True``."
msgstr ""
"``is_active()``: можна використовувати для тимчасового вимкнення створення "
"для платформи. Загалом це має завжди повертати ``True``."

msgid "``get_name()``: Returns the platform's user-visible name as a string."
msgstr ""
"``get_name()``: повертає видиму користувачу назву платформи у вигляді рядка."

msgid ""
"``can_build()``: Return ``True`` if the host system is able to build for the "
"target platform, ``False`` otherwise. Do not put slow checks here, as this "
"is queried when the list of platforms is requested by the user. Use "
"``configure()`` for extensive dependency checks instead."
msgstr ""
"``can_build()``: повертає ``True``, якщо хост-система може створювати для "
"цільової платформи, ``False`` інакше. Не встановлюйте тут повільні "
"перевірки, оскільки це запитується, коли користувач запитує список платформ. "
"Замість цього використовуйте ``configure()`` для розширеної перевірки "
"залежностей."

msgid ""
"``get_opts()``: Returns the list of SCons build options that can be defined "
"by the user for this platform."
msgstr ""
"``get_opts()``: повертає список параметрів збірки SCons, які користувач може "
"визначити для цієї платформи."

msgid ""
"``get_flags()``: Returns the list of overridden SCons flags for this "
"platform."
msgstr ""
"``get_flags()``: Повертає список перевизначених прапорів SCons для цієї "
"платформи."

msgid ""
"``configure()``: Perform build configuration, such as selecting compiler "
"options depending on SCons options chosen."
msgstr ""
"``configure()``: Виконайте конфігурацію збірки, наприклад вибір параметрів "
"компілятора залежно від вибраних параметрів SCons."

msgid "Optional features of a platform port"
msgstr "Додаткові функції порту платформи"

msgid ""
"In practice, headless operation doesn't suffice if you want to see anything "
"on screen and handle input devices. You may also want audio output for most "
"games."
msgstr ""
"На практиці роботи без голови недостатньо, якщо ви хочете бачити щось на "
"екрані та керувати пристроями введення. Вам також може знадобитися "
"аудіовихід для більшості ігор."

msgid ""
"*Some links on this list point to the Linux/\\*BSD platform implementation "
"as a reference.*"
msgstr ""
"*Деякі посилання в цьому списку вказують на реалізацію платформи Linux/"
"\\*BSD як посилання.*"

msgid ""
"One or more `DisplayServers <https://github.com/godotengine/godot/blob/"
"master/platform/linuxbsd/x11/display_server_x11.cpp>`__, with the windowing "
"methods implemented. DisplayServer also covers features such as mouse "
"support, touchscreen support and tablet driver (for pen input). See the "
"`DisplayServer singleton header <https://github.com/godotengine/godot/blob/"
"master/servers/display_server.h>`__ for reference."
msgstr ""
"Один або кілька `DisplayServers <https://github.com/godotengine/godot/blob/"
"master/platform/linuxbsd/x11/display_server_x11.cpp>`__ з реалізованими "
"методами вікон. DisplayServer також охоплює такі функції, як підтримка миші, "
"підтримка сенсорного екрану та драйвер планшета (для введення пером). "
"Дивіться `Singleton заголовок DisplayServer <https://github.com/godotengine/"
"godot/blob/master/servers/display_server.h>`__ для довідки."

msgid ""
"For platforms not featuring full windowing support (or if it's not relevant "
"for the port you are making), most windowing functions can be left mostly "
"unimplemented. These functions can be made to only check if the window ID is "
"``MAIN_WINDOW_ID`` and specific operations like resizing may be tied to the "
"platform's screen resolution feature (if relevant). Any attempt to create or "
"manipulate other window IDs can be rejected."
msgstr ""
"Для платформ, які не мають повної підтримки вікон (або якщо це не стосується "
"порту, який ви створюєте), більшість функцій вікон можна залишити "
"здебільшого нереалізованими. Ці функції можна змусити лише перевіряти, чи "
"ідентифікатор вікна має значення ``MAIN_WINDOW_ID``, і певні операції, такі "
"як зміна розміру, можуть бути пов’язані з функцією роздільної здатності "
"екрана платформи (якщо доречно). Будь-які спроби створити або маніпулювати "
"іншими ідентифікаторами вікон можуть бути відхилені."

msgid ""
"Input handlers for `keyboard <https://github.com/godotengine/godot/blob/"
"master/platform/linuxbsd/x11/key_mapping_x11.cpp>`__ and `controller "
"<https://github.com/godotengine/godot/blob/master/platform/linuxbsd/"
"joypad_linux.cpp>`__."
msgstr ""
"Обробники введення для `клавіатури <https://github.com/godotengine/godot/"
"blob/master/platform/linuxbsd/x11/key_mapping_x11.cpp>`__ і `контролера "
"<https://github.com/godotengine/godot/ blob/master/platform/linuxbsd/"
"joypad_linux.cpp>`__."

msgid ""
"One or more `audio drivers <https://github.com/godotengine/godot/blob/master/"
"drivers/pulseaudio/audio_driver_pulseaudio.cpp>`__. The audio driver can be "
"located in the ``platform/`` folder (this is done for the Android and Web "
"platforms), or in the ``drivers/`` folder if multiple platforms may be using "
"this audio driver. See the `AudioServer singleton header <https://github.com/"
"godotengine/godot/blob/master/servers/audio_server.h>`__ for reference."
msgstr ""
"Один або кілька аудіодрайверів <https://github.com/godotengine/godot/blob/"
"master/drivers/pulseaudio/audio_driver_pulseaudio.cpp>`__. Аудіодрайвер "
"можна знайти в папці ``platform/`` (це робиться для платформ Android і Web) "
"або в папці ``drivers/``, якщо цей аудіодрайвер може використовуватись на "
"кількох платформах. Для довідки перегляньте `Singleton заголовок AudioServer "
"<https://github.com/godotengine/godot/blob/master/servers/audio_server.h>`__."

msgid ""
"`Crash handler <https://github.com/godotengine/godot/blob/master/platform/"
"linuxbsd/crash_handler_linuxbsd.cpp>`__, for printing crash backtraces when "
"the game crashes. This allows for easier troubleshooting on platforms where "
"logs aren't readily accessible."
msgstr ""
"`Обробник збоїв <https://github.com/godotengine/godot/blob/master/platform/"
"linuxbsd/crash_handler_linuxbsd.cpp>`__, для друку зворотних слідів збоїв, "
"коли гра вилітає. Це спрощує пошук несправностей на платформах, де журнали "
"недоступні."

msgid ""
"`Text-to-speech driver <https://github.com/godotengine/godot/blob/master/"
"platform/linuxbsd/tts_linux.cpp>`__ (for accessibility)."
msgstr ""
"`Драйвер перетворення тексту в мову <https://github.com/godotengine/godot/"
"blob/master/platform/linuxbsd/tts_linux.cpp>`__ (для доступності)."

msgid ""
"`Export handler <https://github.com/godotengine/godot/tree/master/platform/"
"linuxbsd/export>`__ (for exporting from the editor, including :ref:`doc_one-"
"click_deploy`). Not required if you intend to export only a PCK from the "
"editor, then run the export template binary directly by renaming it to match "
"the PCK file. See the `EditorExportPlatform header <https://github.com/"
"godotengine/godot/blob/master/editor/export/editor_export_platform.h>`__ for "
"reference. ``run_icon.svg`` (16×16) should be present within the platform "
"folder if :ref:`doc_one-click_deploy` is implemented for the target "
"platform. This icon is displayed at the top of the editor when one-click "
"deploy is set up for the target platform."
msgstr ""
"`Обробник експорту <https://github.com/godotengine/godot/tree/master/"
"platform/linuxbsd/export>`__ (для експорту з редактора, включаючи :ref:"
"`doc_one-click_deploy`). Не потрібно, якщо ви збираєтеся експортувати лише "
"PCK із редактора, а потім запустіть двійковий файл шаблону експорту "
"безпосередньо, перейменувавши його відповідно до файлу PCK. Перегляньте "
"`заголовок EditorExportPlatform <https://github.com/godotengine/godot/blob/"
"master/editor/export/editor_export_platform.h>`__ для довідки. ``run_icon."
"svg`` (16×16) має бути присутнім у теці платформи, якщо :ref:`doc_one-"
"click_deploy` реалізовано для цільової платформи. Цей значок відображається "
"у верхній частині редактора, якщо для цільової платформи налаштовано "
"розгортання одним клацанням миші."

msgid ""
"Create a new renderer from scratch. This is a large undertaking, especially "
"if you want to support both 2D and 3D rendering with advanced features."
msgstr ""
"Створіть новий рендерер з нуля. Це велике завдання, особливо якщо ви хочете "
"підтримувати як 2D, так і 3D візуалізацію з розширеними функціями."

msgid "Distributing a custom platform port"
msgstr "Розповсюдження спеціального порту платформи"

msgid ""
"Before distributing a custom platform port, make sure you're allowed to "
"distribute all the code that is being linked against. Console SDKs are "
"typically under NDAs which prevent redistribution to the public."
msgstr ""
"Перш ніж розповсюджувати спеціальний порт платформи, переконайтеся, що вам "
"дозволено розповсюджувати весь код, який посилається. Пакети SDK для консолі "
"зазвичай підпадають під дію NDA, що запобігає повторному розповсюдженню "
"серед громадськості."

msgid ""
"Platform ports are designed to be as self-contained as possible. Most of the "
"code can be kept within a single folder located in ``platform/``. Like :ref:"
"`doc_custom_modules_in_cpp`, this allows for streamlining the build process "
"by making it possible to ``git clone`` a platform folder within a Godot "
"repository clone's ``platform/`` folder, then run ``scons platform=<name>``. "
"No other steps are necessary for building, unless third-party platform-"
"specific dependencies need to be installed first."
msgstr ""
"Порти платформи розроблені таким чином, щоб бути максимально автономними. "
"Більшу частину коду можна зберігати в одній папці, розташованій у ``platform/"
"``. Подібно до :ref:`doc_custom_modules_in_cpp`, це дозволяє оптимізувати "
"процес збирання, дозволяючи ``git clone`` теки платформи в папці ``platform/"
"`` клону сховища Godot, а потім запустити ``scons platform=< ім'я>``. Жодних "
"інших кроків для створення не потрібно, окрім випадків, коли спочатку "
"потрібно інсталювати сторонні залежності для певної платформи."
