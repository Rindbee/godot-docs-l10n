#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Core types"
msgstr "Типи сердечників"

msgid ""
"Godot has a rich set of classes and templates that compose its core, and "
"everything is built upon them."
msgstr ""
"Godot має багатий набір класів і шаблонів, які складають його ядро, і все "
"побудовано на них."

msgid ""
"This reference will try to list them in order for their better understanding."
msgstr "У цьому довіднику спробуємо перерахувати їх для кращого розуміння."

msgid "Definitions"
msgstr "Визначення"

msgid ""
"Godot uses the standard C99 datatypes, such as ``uint8_t``, ``uint32_t``, "
"``int64_t``, etc. which are nowadays supported by every compiler. "
"Reinventing the wheel for those is not fun, as it makes code more difficult "
"to read."
msgstr ""
"Godot використовує стандартні типи даних C99, такі як ``uint8_t``, "
"``uint32_t``, ``int64_t`` тощо, які сьогодні підтримуються кожним "
"компілятором. Перевинаходити колесо для них не весело, оскільки це ускладнює "
"читання коду."

msgid ""
"In general, care is not taken to use the most efficient datatype for a given "
"task unless using large structures or arrays. ``int`` is used through most "
"of the code unless necessary. This is done because nowadays every device has "
"at least a 32 bits bus and can do such operations in one cycle. It makes "
"code more readable too."
msgstr ""
"Загалом, не приділяється уваги використанню найефективнішого типу даних для "
"даного завдання, якщо не використовуються великі структури чи масиви. "
"``int`` використовується в більшій частині коду, якщо це не потрібно. Це "
"зроблено тому, що в даний час кожен пристрій має принаймні 32-бітну шину і "
"може виконувати такі операції за один цикл. Це також робить код більш "
"читабельним."

msgid ""
"For files or memory sizes, ``size_t`` is used, which is warranted to be 64 "
"bits."
msgstr ""
"Для розмірів файлів або пам’яті використовується ``size_t``, який "
"гарантовано дорівнює 64 бітам."

msgid ""
"For Unicode characters, CharType instead of wchar_t is used, because many "
"architectures have 4 bytes long wchar_t, where 2 bytes might be desired. "
"However, by default, this has not been forced and CharType maps directly to "
"wchar_t."
msgstr ""
"Для символів Unicode використовується CharType замість wchar_t, оскільки "
"багато архітектур мають 4 байти wchar_t, де 2 байти можуть бути бажаними. "
"Однак за замовчуванням це не було примусово, і CharType відображається "
"безпосередньо на wchar_t."

msgid "References:"
msgstr "Посилання:"

msgid ""
"`core/typedefs.h <https://github.com/godotengine/godot/blob/master/core/"
"typedefs.h>`__"
msgstr ""
"`core/typedefs.h <https://github.com/godotengine/godot/blob/master/core/"
"typedefs.h>`__"

msgid "Memory model"
msgstr "Модель пам'яті"

msgid ""
"PC is a wonderful architecture. Computers often have gigabytes of RAM, "
"terabytes of storage and gigahertz of CPU, and when an application needs "
"more resources the OS will swap out the inactive ones. Other architectures "
"(like mobile or consoles) are in general more limited."
msgstr ""
"ПК — чудова архітектура. Комп’ютери часто мають гігабайти оперативної "
"пам’яті, терабайти пам’яті та гігагерці ЦП, і коли програмі потрібно більше "
"ресурсів, ОС замінить неактивні. Інші архітектури (наприклад, мобільні або "
"консолі) загалом більш обмежені."

msgid ""
"The most common memory model is the heap, where an application will request "
"a region of memory, and the underlying OS will try to fit it somewhere and "
"return it. This often works best and is flexible, but over time and with "
"abuse, this can lead to segmentation."
msgstr ""
"Найпоширенішою моделлю пам’яті є купа, де програма запитує область пам’яті, "
"а базова ОС намагатиметься її десь вмістити та повертати. Це часто працює "
"найкраще та є гнучким, але з часом і через зловживання це може призвести до "
"сегментації."

msgid ""
"Segmentation slowly creates holes that are too small for most common "
"allocations, so that memory is wasted. There is a lot of literature about "
"heap and segmentation, so this topic will not be developed further here. "
"Modern operating systems use paged memory, which helps mitigate the problem "
"of segmentation but doesn't solve it."
msgstr ""
"Сегментація повільно створює діри, які є занадто малими для більшості "
"поширених розподілів, тому пам’ять витрачається даремно. Існує багато "
"літератури про купу та сегментацію, тому ця тема не буде розвиватися далі. "
"Сучасні операційні системи використовують сторінкову пам’ять, що допомагає "
"пом’якшити проблему сегментації, але не вирішує її."

msgid ""
"However, in many studies and tests, it is shown that given enough memory, if "
"the maximum allocation size is below a given threshold in proportion to the "
"maximum heap size and proportion of memory intended to be unused, "
"segmentation will not be a problem over time as it will remain constant. In "
"other words, leave 10-20% of your memory free and perform all small "
"allocations and you are fine."
msgstr ""
"Однак у багатьох дослідженнях і тестах було показано, що за наявності "
"достатньої кількості пам’яті, якщо максимальний розмір виділення нижче "
"заданого порогу пропорційно максимальному розміру купи та частці пам’яті, "
"яка має бути невикористаною, сегментація не буде проблемою з часом. оскільки "
"він залишатиметься постійним. Іншими словами, залиште 10-20% пам’яті вільною "
"та виконайте всі невеликі розподіли, і все гаразд."

msgid ""
"Godot ensures that all objects that can be allocated dynamically are small "
"(less than a few kb at most). But what happens if an allocation is too large "
"(like an image or mesh geometry or large array)? In this case Godot has the "
"option to use a dynamic memory pool. This memory needs to be locked to be "
"accessed, and if an allocation runs out of memory, the pool will be "
"rearranged and compacted on demand. Depending on the need of the game, the "
"programmer can configure the dynamic memory pool size."
msgstr ""
"Godot гарантує, що всі об’єкти, які можна розподілити динамічно, малі "
"(щонайбільше менше кількох кб). Але що станеться, якщо виділення занадто "
"велике (наприклад, зображення, геометрія сітки чи великий масив)? У цьому "
"випадку Godot має можливість використовувати динамічний пул пам’яті. Цю "
"пам’ять потрібно заблокувати, щоб отримати до неї доступ, і якщо виділення "
"пам’яті закінчиться, пул буде переорганізовано та стиснуто за вимогою. "
"Залежно від потреб гри, програміст може налаштувати розмір пулу динамічної "
"пам'яті."

msgid "Allocating memory"
msgstr "Виділення пам'яті"

msgid ""
"Godot has many tools for tracking memory usage in a game, especially during "
"debug. Because of this, the regular C and C++ library calls should not be "
"used. Instead, a few other ones are provided."
msgstr ""
"Godot має багато інструментів для відстеження використання пам’яті в грі, "
"особливо під час налагодження. Через це не слід використовувати звичайні "
"виклики бібліотек C і C++. Натомість надано кілька інших."

msgid "For C-style allocation, Godot provides a few macros:"
msgstr "Для розподілу в стилі C Godot надає кілька макросів:"

msgid ""
"These are equivalent to the usual malloc, realloc, free of the standard C "
"library."
msgstr ""
"Вони еквівалентні звичайним malloc, realloc, вільним від стандартної "
"бібліотеки C."

msgid "For C++-style allocation, special macros are provided:"
msgstr "Для розподілу в стилі C++ передбачені спеціальні макроси:"

msgid "which are equivalent to new, delete, new[] and delete[]."
msgstr "які еквівалентні new, delete, new[] і delete[]."

msgid ""
"memnew/memdelete also use a little C++ magic and notify Objects right after "
"they are created, and right before they are deleted."
msgstr ""
"memnew/memdelete також використовує трохи магії C++ і сповіщає об’єкти "
"відразу після їх створення та безпосередньо перед їх видаленням."

msgid ""
"For dynamic memory, use one of Godot's sequence types such as ``Vector<>`` "
"or ``LocalVector<>``. ``Vector<>`` behaves much like an STL "
"``std::vector<>``, but is simpler and uses Copy-On-Write (CoW) semantics. "
"CoW copies of ``Vector<>`` can safely access the same data from different "
"threads, but several threads cannot access the same ``Vector<>`` instance "
"safely. It can be safely passed via public API if it has a ``Packed`` alias."
msgstr ""
"Для динамічної пам’яті використовуйте один із типів послідовності Godot, "
"наприклад ``Vector<>`` або ``LocalVector<>``. ``Vector<>`` поводиться так "
"само, як STL ``std::vector<>``, але він простіший і використовує семантику "
"Copy-On-Write (CoW). Копії CoW ``Vector<>`` можуть безпечно отримувати "
"доступ до тих самих даних з різних потоків, але кілька потоків не можуть "
"безпечно отримати доступ до того самого екземпляра ``Vector<>``. Його можна "
"безпечно передати через публічний API, якщо він має псевдонім ``Packed``."

msgid ""
"The ``Packed*Array`` :ref:`types <doc_gdscript_packed_arrays>` are aliases "
"for specific ``Vector<*>`` types (e.g., ``PackedByteArray``, "
"``PackedInt32Array``) that are accessible via GDScript. Outside of core, "
"prefer using the ``Packed*Array`` aliases for functions exposed to scripts, "
"and ``Vector<>`` for other occasions."
msgstr ""
"``Packed*Array`` :ref:`types <doc_gdscript_packed_arrays>` є псевдонімами "
"для конкретних типів ``Vector<*>`` (наприклад, ``PackedByteArray``, "
"``PackedInt32Array``), які доступні через GDScript. За межами ядра віддайте "
"перевагу використанню псевдонімів ``Packed*Array`` для функцій, які "
"піддаються сценаріям, і ``Vector<>`` для інших випадків."

msgid ""
"``LocalVector<>`` is much more like ``std::vector`` than ``Vector<>``. It is "
"non-CoW, with less overhead. It is intended for internal use where the "
"benefits of CoW are not needed. Note that neither ``LocalVector<>`` nor "
"``Vector<>`` are drop-in replacements for each other. They are two unrelated "
"types with similar interfaces, both using a buffer as their storage strategy."
msgstr ""
"``LocalVector<>`` більше схожий на ``std::vector``, ніж ``Vector<>``. Це не "
"CoW, з меншими накладними витратами. Він призначений для внутрішнього "
"використання, де переваги CoW не потрібні. Зауважте, що ні "
"``LocalVector<>``, ні ``Vector<>`` не замінюють один одного. Це два "
"непов’язані типи з подібними інтерфейсами, обидва використовують буфер як "
"стратегію зберігання."

msgid ""
"``List<>`` is another Godot sequence type, using a doubly-linked list as its "
"storage strategy. Prefer ``Vector<>`` (or ``LocalVector<>``) over ``List<>`` "
"unless you're sure you need it, as cache locality and memory fragmentation "
"tend to be more important with small collections."
msgstr ""
"``List<>`` — ще один тип послідовності Godot, який використовує подвійний "
"зв’язаний список як стратегію зберігання. Віддавайте перевагу ``Vector<>`` "
"(або ``LocalVector<>``) над ``List<>``, якщо ви не впевнені, що він вам "
"потрібен, оскільки локальність кешу та фрагментація пам’яті, як правило, "
"більш важливі для малих колекцій."

msgid ""
"`core/os/memory.h <https://github.com/godotengine/godot/blob/master/core/os/"
"memory.h>`__"
msgstr ""
"`core/os/memory.h <https://github.com/godotengine/godot/blob/master/core/os/"
"memory.h>`__"

msgid "Containers"
msgstr "Контейнери"

msgid "Godot provides also a set of common containers:"
msgstr "Godot також надає набір загальних контейнерів:"

msgid "Vector"
msgstr "Вектор"

msgid "List"
msgstr "Список"

msgid "Set"
msgstr "Встановити"

msgid "Map"
msgstr "Карта"

msgid ""
"They aim to be as minimal as possible, as templates in C++ are often inlined "
"and make the binary size much fatter, both in debug symbols and code. List, "
"Set and Map can be iterated using pointers, like this:"
msgstr ""
"Вони прагнуть бути якомога меншими, оскільки шаблони в C++ часто вбудовані "
"та роблять двійковий розмір набагато більшим, як у символах налагодження, "
"так і в коді. List, Set і Map можна ітерувати за допомогою покажчиків, "
"наприклад:"

msgid "The Vector<> class also has a few nice features:"
msgstr "Клас Vector<> також має кілька приємних особливостей:"

msgid ""
"It does copy on write, so making copies of it is cheap as long as they are "
"not modified."
msgstr ""
"Він копіює під час запису, тому створення його копій є дешевим, якщо вони не "
"змінені."

msgid ""
"It supports multi-threading, by using atomic operations on the reference "
"counter."
msgstr ""
"Він підтримує багатопотоковість за допомогою атомарних операцій на "
"лічильнику посилань."

msgid ""
"`core/templates/vector.h <https://github.com/godotengine/godot/blob/master/"
"core/templates/vector.h>`__"
msgstr ""
"`core/templates/vector.h <https://github.com/godotengine/godot/blob/master/"
"core/templates/vector.h>`__"

msgid ""
"`core/templates/list.h <https://github.com/godotengine/godot/blob/master/"
"core/templates/list.h>`__"
msgstr ""
"`core/templates/list.h <https://github.com/godotengine/godot/blob/master/"
"core/templates/list.h>`__"

msgid ""
"`core/templates/set.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/hash_set.h>`__"
msgstr ""
"`core/templates/set.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/hash_set.h>`__"

msgid ""
"`core/templates/map.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/hash_map.h>`__"
msgstr ""
"`core/templates/map.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/hash_map.h>`__"

msgid "String"
msgstr "Строка (рядок, текст)"

msgid ""
"Godot also provides a String class. This class has a huge amount of "
"features, full Unicode support in all the functions (like case operations) "
"and utf8 parsing/extracting, as well as helpers for conversion and "
"visualization."
msgstr ""
"Godot також надає клас String. Цей клас має величезну кількість можливостей, "
"повну підтримку Юнікоду в усіх функціях (як-от операції з регістром) і "
"розбір/видобування utf8, а також помічники для перетворення та візуалізації."

msgid ""
"`core/string/ustring.h <https://github.com/godotengine/godot/blob/master/"
"core/string/ustring.h>`__"
msgstr ""
"`core/string/ustring.h <https://github.com/godotengine/godot/blob/master/"
"core/string/ustring.h>`__"

msgid "StringName"
msgstr "Назва рядка"

msgid ""
"StringNames are like a String, but they are unique. Creating a StringName "
"from a string results in a unique internal pointer for all equal strings. "
"StringNames are useful for using strings as identifier, as comparing them is "
"basically comparing a pointer."
msgstr ""
"StringNames схожі на String, але вони унікальні. Створення StringName із "
"рядка призводить до створення унікального внутрішнього покажчика для всіх "
"рівних рядків. StringNames корисні для використання рядків як "
"ідентифікаторів, оскільки їх порівняння в основному є порівнянням покажчика."

msgid ""
"Creation of a StringName (especially a new one) is slow, but comparison is "
"fast."
msgstr ""
"Створення StringName (особливо нового) відбувається повільно, але порівняння "
"відбувається швидко."

msgid ""
"`core/string/string_name.h <https://github.com/godotengine/godot/blob/master/"
"core/string/string_name.h>`__"
msgstr ""
"`core/string/string_name.h <https://github.com/godotengine/godot/blob/master/"
"core/string/string_name.h>`__"

msgid "Math types"
msgstr "Типи математики"

msgid ""
"There are several linear math types available in the core/math directory."
msgstr "У каталозі core/math є кілька типів лінійної математики."

msgid ""
"`core/math <https://github.com/godotengine/godot/tree/master/core/math>`__"
msgstr ""
"`основний/математика <https://github.com/godotengine/godot/tree/master/core/"
"math>`__"

msgid "NodePath"
msgstr "Шлях до вузла"

msgid ""
"This is a special datatype used for storing paths in a scene tree and "
"referencing them fast."
msgstr ""
"Це спеціальний тип даних, який використовується для зберігання шляхів у "
"дереві сцени та швидкого посилання на них."

msgid ""
"`core/string/node_path.h <https://github.com/godotengine/godot/blob/master/"
"core/string/node_path.h>`__"
msgstr ""
"`core/string/node_path.h <https://github.com/godotengine/godot/blob/master/"
"core/string/node_path.h>`__"

msgid "RID"
msgstr "RID"

msgid ""
"RIDs are resource IDs. Servers use these to reference data stored in them. "
"RIDs are opaque, meaning that the data they reference can't be accessed "
"directly. RIDs are unique, even for different types of referenced data."
msgstr ""
"RID — це ідентифікатори ресурсів. Сервери використовують їх для посилання на "
"збережені в них дані. RID є непрозорими, тобто неможливо отримати прямий "
"доступ до даних, на які вони посилаються. Ідентифікатори RID є унікальними "
"навіть для різних типів посилальних даних."

msgid ""
"`core/templates/rid.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/rid.h>`__"
msgstr ""
"`core/templates/rid.h <https://github.com/godotengine/godot/blob/master/core/"
"templates/rid.h>`__"
