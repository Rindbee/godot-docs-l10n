#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Code style guidelines"
msgstr "Настанови щодо стилю програмного коду"

msgid ""
"When contributing to Godot's source code, you will be expected to follow the "
"style guidelines outlined below. Some of them are checked via the Continuous "
"Integration process and reviewers will ask you to fix potential issues, so "
"best setup your system as outlined below to ensure all your commits follow "
"the guidelines."
msgstr ""
"Під час створення вихідного коду Ґодо від вас очікується дотримання "
"наведених нижче вказівок щодо стилю. Деякі з них перевіряються за допомогою "
"процесу безперервної інтеграції, і рецензенти попросять вас усунути "
"потенційні проблеми, тому найкраще налаштуйте свою систему, як описано "
"нижче, щоб усі ваші коміти відповідали вказівкам."

msgid "C++ and Objective-C"
msgstr "C++ і Objective-C"

msgid ""
"There are no written guidelines, but the code style agreed upon by the "
"developers is enforced via the `clang-format <https://clang.llvm.org/docs/"
"ClangFormat.html>`__ code beautifier, which takes care for you of all our "
"conventions. To name a few:"
msgstr ""
"Письмових вказівок немає, але стиль коду, узгоджений розробниками, "
"забезпечується за допомогою інструмента `clang-format <https://clang.llvm."
"org/docs/ClangFormat.html>`__, який піклується про вас усіх наших конвенцій. "
"Щоб назвати декілька:"

msgid ""
"Indentation and alignment are both tab based (respectively one and two tabs)"
msgstr ""
"Відступи та вирівнювання залежать від табуляції (відповідно одна та дві "
"табуляції)"

msgid "One space around math and assignments operators as well as after commas"
msgstr ""
"Відступи та вирівнювання залежать від табуляції (відповідно одна та дві "
"табуляції)"

msgid ""
"Pointer and reference operators are affixed to the variable identifier, not "
"to the type name"
msgstr ""
"Оператори покажчика та посилання прикріплюються до ідентифікатора змінної, а "
"не до імені типу"

msgid "See further down regarding header includes"
msgstr "Дивіться нижче щодо включення заголовка"

msgid ""
"The rules used by clang-format are outlined in the `.clang-format <https://"
"github.com/godotengine/godot/blob/master/.clang-format>`__ file of the Godot "
"repository."
msgstr ""
"Правила, які використовує clang-format, викладені у файлі `.clang-format "
"<https://github.com/godotengine/godot/blob/master/.clang-format>`__ "
"репозиторію Godot."

msgid ""
"As long as you ensure that your style matches the surrounding code and that "
"you're not introducing trailing whitespace or space-based indentation, you "
"should be fine. If you plan to contribute regularly, however, we strongly "
"advise that you set up clang-format locally to check and automatically fix "
"all your commits."
msgstr ""
"Якщо ви гарантуєте, що ваш стиль відповідає навколишньому коду та що ви не "
"вводите кінцеві пробіли чи відступи на основі пробілів, у вас все буде "
"добре. Однак якщо ви плануєте регулярно робити внески, ми наполегливо "
"рекомендуємо вам налаштувати формат clang локально, щоб перевіряти та "
"автоматично виправляти всі ваші коміти."

msgid ""
"Godot's code style should *not* be applied to third-party code, i.e. that is "
"included in Godot's source tree but was not written specifically for our "
"project. Such code usually comes from different upstream projects with their "
"own style guides (or lack thereof), and don't want to introduce differences "
"that would make syncing with upstream repositories harder."
msgstr ""
"Стиль коду Godot *не* слід застосовувати до стороннього коду, тобто того, що "
"включено до дерева вихідних кодів Godot, але не було написано спеціально для "
"нашого проекту. Такий код зазвичай надходить з різних проектів, які мають "
"власний стиль (або його відсутність), і не хочеться вводити відмінності, які "
"ускладнюють синхронізацію зі сховищами."

msgid ""
"Third-party code is usually included in the ``thirdparty/`` folder and can "
"thus easily be excluded from formatting scripts. For the rare cases where a "
"third-party code snippet needs to be included directly within a Godot file, "
"you can use ``/* clang-format off */`` and ``/* clang-format on */`` to tell "
"clang-format to ignore a chunk of code."
msgstr ""
"Код третьої сторони зазвичай міститься в папці ``thirdparty/`` і тому його "
"можна легко виключити зі сценаріїв форматування. У рідкісних випадках, коли "
"фрагмент коду третьої сторони потрібно включити безпосередньо у файл Godot, "
"ви можете використовувати ``/* clang-format off */`` і ``/* clang-format on "
"*/``, щоб скажіть clang-format ігнорувати частину коду."

msgid ""
"These guidelines only cover code formatting. See :ref:"
"`doc_cpp_usage_guidelines` for a list of language features that are "
"permitted in pull requests."
msgstr ""
"Ці вказівки стосуються лише форматування коду. Перегляньте :ref:"
"`doc_cpp_usage_guidelines` список мовних функцій, які дозволені в запитах на "
"витягування."

msgid "Using clang-format locally"
msgstr "Використання clang-format локально"

msgid ""
"You need to use **clang-format 17** to be compatible with Godot's format. "
"Later versions might be suitable, but previous versions may not support all "
"used options, or format some things differently, leading to style issues in "
"pull requests."
msgstr ""
"Вам потрібно використовувати **clang-format 17**, щоб бути сумісним із "
"форматом Годо. Пізніші версії можуть підійти, але попередні версії можуть не "
"підтримувати всі використовувані параметри або відформатувати деякі речі по-"
"іншому, що призведе до проблем зі стилем у запитах на отримання."

msgid "Pre-commit hook"
msgstr "Хук попередньої фіксації"

msgid ""
"For ease of use, we provide hooks for Git with the `pre-commit <https://pre-"
"commit.com/>`__ Python framework that will run clang-format automatically on "
"all your commits with the correct version of clang-format. To set up:"
msgstr ""
"Для зручності використання ми надаємо хуки для Git із фреймворком `pre-"
"commit <https://pre-commit.com/>`__ Python, який автоматично запускатиме "
"clang-format для всіх ваших комітів із правильною версією clang- формат. Щоб "
"налаштувати:"

msgid "You can also run the hook manually with ``pre-commit run``."
msgstr "Ви також можете запустити хук вручну за допомогою ``pre-commit run``."

msgid ""
"Previously, we supplied a hook in the folder ``misc/hooks``. If you copied "
"the script manually, these hooks should still work, but symlinks will be "
"broken. If you are using the new system, run ``rm .git/hooks/*`` to remove "
"the old hooks that are no longer needed."
msgstr ""
"Раніше ми розміщували хук у папці ``misc/hooks``. Якщо ви скопіювали "
"сценарій вручну, ці хуки все одно повинні працювати, але символічні "
"посилання будуть пошкоджені. Якщо ви використовуєте нову систему, запустіть "
"``rm .git/hooks/*``, щоб видалити старі хуки, які більше не потрібні."

msgid "Installation"
msgstr "Встановлення"

msgid "Here's how to install clang-format:"
msgstr "Ось як встановити clang-format:"

msgid ""
"Linux: It will usually be available out-of-the-box with the clang toolchain "
"packaged by your distribution. If your distro version is not the required "
"one, you can download a pre-compiled version from the `LLVM website <https://"
"releases.llvm.org/download.html>`__, or if you are on a Debian derivative, "
"use the `upstream repos <https://apt.llvm.org/>`__."
msgstr ""
"Linux: зазвичай він доступний із пакетом інструментів clang, який "
"укомплектовано вашим дистрибутивом. Якщо ваша версія дистрибутива не є "
"потрібною, ви можете завантажити попередньо скомпільовану версію з `веб-"
"сайту LLVM <https://releases.llvm.org/download.html>`__, або, якщо ви "
"використовуєте похідну версію Debian, використовуйте `репозиториї вище за "
"течією <https://apt.llvm.org/>`__."

msgid ""
"macOS and Windows: You can download precompiled binaries from the `LLVM "
"website <https://releases.llvm.org/download.html>`__. You may need to add "
"the path to the binary's folder to your system's ``PATH`` environment "
"variable to be able to call clang-format out of the box."
msgstr ""
"macOS і Windows: попередньо скомпільовані двійкові файли можна завантажити з "
"веб-сайту `LLVM <https://releases.llvm.org/download.html>`__. Можливо, вам "
"знадобиться додати шлях до теки двійкового файлу до системної змінної "
"середовища ``PATH``, щоб мати можливість викликати clang-format із коробки."

msgid ""
"You then have different possibilities to apply clang-format to your changes:"
msgstr "Тоді у вас є різні можливості застосувати clang-format до ваших змін:"

msgid "Manual usage"
msgstr "Використання вручну"

msgid ""
"You can apply clang-format manually for one or more files with the following "
"command:"
msgstr ""
"Ви можете застосувати clang-format вручну для одного або кількох файлів за "
"допомогою такої команди:"

msgid ""
"``-i`` means that the changes should be written directly to the file (by "
"default clang-format would only output the fixed version to the terminal)."
msgstr ""
"``-i`` означає, що зміни мають бути записані безпосередньо у файл (за "
"замовчуванням clang-format виводить на термінал лише фіксовану версію)."

msgid ""
"The path can point to several files, either one after the other or using "
"wildcards like in a typical Unix shell. Be careful when globbing so that you "
"don't run clang-format on compiled objects (.o and .a files) that are in "
"Godot's tree. So better use ``core/*.{cpp,h}`` than ``core/*``."
msgstr ""
"Шлях може вказувати на кілька файлів, один за одним або за допомогою "
"символів підстановки, як у типовій оболонці Unix. Будьте обережні під час "
"глоббування, щоб не запустити clang-format на скомпільованих об’єктах "
"(файлах .o та .a), які знаходяться в дереві Годо. Тому краще використовувати "
"``core/*.{cpp,h}``, ніж ``core/*``."

msgid "IDE plugin"
msgstr "Додаток до IDE"

msgid ""
"Most IDEs or code editors have beautifier plugins that can be configured to "
"run clang-format automatically, for example, each time you save a file."
msgstr ""
"Більшість IDE або редакторів коду мають плагіни beautifier, які можна "
"налаштувати на автоматичний запуск clang-format, наприклад, кожного разу, "
"коли ви зберігаєте файл."

msgid "Here is a non-exhaustive list of beautifier plugins for some IDEs:"
msgstr "Ось неповний список плагінів beautifier для деяких IDE:"

msgid ""
"Qt Creator: `Beautifier plugin <https://doc.qt.io/qtcreator/creator-"
"beautifier.html>`__"
msgstr ""
"Qt Creator: `Плагін Beautifier <https://doc.qt.io/qtcreator/creator-"
"beautifier.html>`__"

msgid ""
"Visual Studio Code: `Clang-Format <https://marketplace.visualstudio.com/"
"items?itemName=xaver.clang-format>`__"
msgstr ""
"Код Visual Studio: `Clang-Format <https://marketplace.visualstudio.com/items?"
"itemName=xaver.clang-format>`__"

msgid ""
"Visual Studio: `Clang Power Tools 2022 <https://marketplace.visualstudio.com/"
"items?itemName=caphyon.ClangPowerTools2022>`__"
msgstr ""
"Visual Studio: `Clang Power tools 2022 <https://marketplace.visualstudio.com/"
"items?itemName=caphyon.ClangPowerTools2022>`__"

msgid "vim: `vim-clang-format <https://github.com/rhysd/vim-clang-format>`__"
msgstr "вім: `vim-clang-format <https://github.com/rhysd/vim-clang-format>`__"

msgid ""
"CLion: Starting from version ``2019.1``, no plugin is required. Instead, "
"enable `ClangFormat <https://www.jetbrains.com/help/clion/clangformat-as-"
"alternative-formatter.html#clion-support>`__"
msgstr ""
"CLion: починаючи з версії ``2019.1`` плагін не потрібен. Натомість увімкніть "
"`ClangFormat <https://www.jetbrains.com/help/clion/clangformat-as-"
"alternative-formatter.html#clion-support>`__"

msgid "(Pull requests are welcome to extend this list with tested plugins.)"
msgstr ""
"(Запити на витягування вітаються, щоб розширити цей список перевіреними "
"плагінами.)"

msgid "Header includes"
msgstr "Заголовок містить"

msgid ""
"When adding new C++ or Objective-C files or including new headers in "
"existing ones, the following rules should be followed:"
msgstr ""
"Додаючи нові файли C++ або Objective-C або включаючи нові заголовки в "
"існуючі, слід дотримуватися таких правил:"

msgid ""
"The first lines in the file should be Godot's copyright header and MIT "
"license, copy-pasted from another file. Make sure to adjust the filename."
msgstr ""
"Перші рядки у файлі мають бути заголовком авторського права Годо та "
"ліцензією MIT, скопійованою з іншого файлу. Переконайтеся, що змінено назву "
"файлу."

msgid ""
"In a ``.h`` header, include guards should be used with the form "
"``FILENAME_H``."
msgstr ""
"У заголовку ``.h`` захисні засоби включення слід використовувати у формі "
"``FILENAME_H``."

msgid ""
"In a ``.cpp`` file (e.g. ``filename.cpp``), the first include should be the "
"one where the class is declared (e.g. ``#include \"filename.h\"``), followed "
"by an empty line for separation."
msgstr ""
"У файлі ``.cpp`` (наприклад, ``filename.cpp``) перше включення має бути тим, "
"у якому оголошено клас (наприклад ``#include \"filename.h\"``), за яким іде "
"порожній рядок для розділення."

msgid ""
"Then come headers from Godot's own code base, included in alphabetical order "
"(enforced by ``clang-format``) with paths relative to the root folder. Those "
"includes should be done with quotes, e.g. ``#include \"core/object.h\"``. "
"The block of Godot header includes should then be followed by an empty line "
"for separation."
msgstr ""
"Потім йдуть заголовки з власної кодової бази Godot, включені в алфавітному "
"порядку (забезпечується ``clang-format``) із шляхами відносно кореневої "
"папки. Ці включення слід робити за допомогою лапок, напр. ``#include \"core/"
"object.h\"``. Після цього за блоком заголовка Годо має слідувати порожній "
"рядок для розділення."

msgid ""
"Finally, third-party headers (either from ``thirdparty`` or from the "
"system's include paths) come next and should be included with the < and > "
"symbols, e.g. ``#include <png.h>``. The block of third-party headers should "
"also be followed by an empty line for separation."
msgstr ""
"Нарешті, сторонні заголовки (або від ``thirdparty``, або від шляхів "
"включення системи) йдуть наступними і повинні бути включені з символами < і "
">, наприклад. ``#include <png.h>``. Блок сторонніх заголовків також повинен "
"супроводжуватися порожнім рядком для розділення."

msgid ""
"Godot and third-party headers should be included in the file that requires "
"them, i.e. in the `.h` header if used in the declarative code or in the `."
"cpp` if used only in the imperative code."
msgstr ""
"Заголовки Godot і сторонніх розробників слід включити у файл, який їх "
"потребує, тобто в заголовок `.h`, якщо він використовується в декларативному "
"коді, або в `.cpp`, якщо він використовується лише в імперативному коді."

msgid "Example:"
msgstr "Приклад:"

msgid "Java"
msgstr "Java"

msgid ""
"Godot's Java code (mostly in ``platform/android``) is also enforced via "
"``clang-format``, so see the instructions above to set it up. Keep in mind "
"that this style guide only applies to code written and maintained by Godot, "
"not third-party code such as the ``java/src/com/google`` subfolder."
msgstr ""
"Java-код Godot (здебільшого в ``platform/android``) також застосовується "
"через ``clang-format``, тому див. інструкції вище, щоб налаштувати його. "
"Майте на увазі, що цей посібник із стилю стосується лише коду, написаного та "
"підтримуваного Godot, а не стороннього коду, такого як підпапка ``java/src/"
"com/google``."

msgid "Python"
msgstr "Python"

msgid ""
"Godot's SCons buildsystem is written in Python, and various scripts included "
"in the source tree are also using Python."
msgstr ""
"Система збірки Godot SCons написана мовою Python, і різні сценарії, включені "
"в дерево вихідних кодів, також використовують Python."

msgid ""
"For those, we use the `Ruff linter and code formatter <https://docs.astral."
"sh/ruff/>`__."
msgstr ""
"Для цього ми використовуємо `Ruff linter і форматування коду <https://docs."
"astral.sh/ruff/>`__."

msgid "Using ruff locally"
msgstr "Використання йоржа локально"

msgid ""
"First of all, you will need to install Ruff. Ruff requires Python 3.7+ to "
"run."
msgstr ""
"Перш за все, вам потрібно буде встановити Ruff. Для роботи Ruff потрібен "
"Python 3.7+."

msgid "Here's how to install ruff:"
msgstr "Ось як встановити ruff:"

msgid "You then have different possibilities to apply ruff to your changes:"
msgstr "Тоді ви матимете різні можливості застосувати до ваших змін зміни:"

msgid ""
"You can apply ``ruff`` manually to one or more files with the following "
"command:"
msgstr ""
"Ви можете застосувати ``ruff`` вручну до одного або кількох файлів за "
"допомогою такої команди:"

msgid ""
"``-l 120`` means that the allowed number of characters per line is 120. This "
"number was agreed upon by the developers."
msgstr ""
"``-l 120`` означає, що дозволена кількість символів у рядку становить 120. "
"Цю кількість узгодили розробники."

msgid ""
"The path can point to several files, either one after the other or using "
"wildcards like in a typical Unix shell."
msgstr ""
"Шлях може вказувати на кілька файлів, один за одним або за допомогою "
"символів підстановки, як у типовій оболонці Unix."

msgid ""
"For ease of use, we provide hooks for Git with the `pre-commit <https://pre-"
"commit.com/>`__ Python framework that will run ``ruff`` automatically on all "
"your commits with the correct version of ``ruff``. To set up:"
msgstr ""
"Для зручності використання ми надаємо хуки для Git із фреймворком `pre-"
"commit <https://pre-commit.com/>`__ Python, який автоматично запускатиме "
"``ruff`` для всіх ваших комітів із правильною версією ``йорж``. Щоб "
"налаштувати:"

msgid "Editor integration"
msgstr "Інтеграція редактора"

msgid ""
"Many IDEs or code editors have beautifier plugins that can be configured to "
"run ruff automatically, for example, each time you save a file. For details, "
"you can check `Ruff Integrations <https://docs.astral.sh/ruff/integrations/"
">`__."
msgstr ""
"Багато IDE або редактори коду мають плагіни beautifier, які можна "
"налаштувати на автоматичний запуск ruff, наприклад, кожного разу, коли ви "
"зберігаєте файл. Щоб дізнатися більше, ви можете перевірити `інтеграції Ruff "
"<https://docs.astral.sh/ruff/integrations/>`__."

msgid "Comment style guide"
msgstr "Керівництво по стилю коментарів"

msgid ""
"This comment style guide applies to all programming languages used within "
"Godot's codebase."
msgstr ""
"Цей посібник зі стилю коментарів стосується всіх мов програмування, які "
"використовуються в кодовій базі Годо."

msgid ""
"Begin comments with a space character to distinguish them from disabled code."
msgstr "Починайте коментарі з пробілу, щоб відрізнити їх від вимкненого коду."

msgid ""
"Use sentence case for comments. Begin comments with an uppercase character "
"and always end them with a period."
msgstr ""
"Використовуйте регістр для коментарів. Починайте коментарі з великої літери "
"і завжди закінчуйте їх крапкою."

msgid "Reference variable/function names and values using backticks."
msgstr ""
"Посилання на імена та значення змінних/функцій за допомогою зворотних "
"позначок."

msgid "Wrap comments to ~100 characters."
msgstr "Розмістіть коментарі приблизно до 100 символів."

msgid ""
"You can use ``TODO:``, ``FIXME:``, ``NOTE:``, or ``HACK:`` as admonitions "
"when needed."
msgstr ""
"За потреби ви можете використовувати ``TODO:``, ``FIXME:``, ``NOTE:`` або "
"``HACK:`` як попередження."

msgid "**Example:**"
msgstr "Приклад"

msgid ""
"Don't repeat what the code says in a comment. Explain the *why* rather than "
"*how*."
msgstr ""
"Не повторюйте те, що говорить код у коментарі. Поясніть *чому*, а не *як*."

msgid "**Bad:**"
msgstr "**Неправильно:**"

msgid ""
"You can use Javadoc-style comments above function or macro definitions. It's "
"recommended to use Javadoc-style comments *only* for methods which are not "
"exposed to scripting. This is because exposed methods should be documented "
"in the :ref:`class reference XML <doc_updating_the_class_reference>` instead."
msgstr ""
"Ви можете використовувати коментарі у стилі Javadoc над визначеннями функцій "
"або макросів. Рекомендовано використовувати коментарі у стилі Javadoc "
"*тільки* для методів, які не піддаються сценаріям. Це пояснюється тим, що "
"відкриті методи мають бути задокументовані в :ref:`посиланні на клас XML "
"<doc_updating_the_class_reference>`."

msgid ""
"For member variables, don't use Javadoc-style comments but use single-line "
"comments instead:"
msgstr ""
"Для змінних-членів не використовуйте коментарі у стилі Javadoc, замість "
"цього використовуйте однорядкові коментарі:"
