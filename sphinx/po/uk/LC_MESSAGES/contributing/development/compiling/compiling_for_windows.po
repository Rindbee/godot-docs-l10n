#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Windows"
msgstr "Компіляція для Windows"

msgid ""
"This page describes how to compile Windows editor and export template "
"binaries from source. If you're looking to export your project to Windows "
"instead, read :ref:`doc_exporting_for_windows`."
msgstr ""
"На цій сторінці описано, як скомпілювати редактор Windows і експортувати "
"двійкові файли шаблону з джерела. Якщо ви натомість хочете експортувати свій "
"проект у Windows, прочитайте :ref:`doc_exporting_for_windows`."

msgid "Requirements"
msgstr "Вимоги"

msgid "For compiling under Windows, the following is required:"
msgstr "Для компіляції під Windows необхідно:"

msgid "A C++ compiler. Use one of the following:"
msgstr "Компілятор C++. Використовуйте один із наведених нижче способів:"

msgid ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_, "
"version 2019 or later. Visual Studio 2022 is recommended. **Make sure to "
"enable C++ in the list of workflows to install.** If you've already "
"installed Visual Studio without C++ support, run the installer again; it "
"should present you a **Modify** button. Supports ``x86_64``, ``x86_32``, and "
"``arm64``."
msgstr ""
"`Спільнота Visual Studio <https://www.visualstudio.com/vs/community/>`_, "
"версія 2019 або новіша. Рекомендується Visual Studio 2022. **Обов’язково "
"ввімкніть C++ у списку робочих процесів для інсталяції.** Якщо ви вже "
"встановили Visual Studio без підтримки C++, запустіть інсталятор ще раз; він "
"повинен представити вам кнопку **Змінити**. Підтримує ``x86_64``, ``x86_32`` "
"і ``arm64``."

msgid ""
"`MinGW-w64 <https://mingw-w64.org/>`_ with GCC can be used as an alternative "
"to Visual Studio. Be sure to install/configure it to use the ``posix`` "
"thread model. **Important:** When using MinGW to compile the ``master`` "
"branch, you need GCC 9 or later. Supports ``x86_64`` and ``x86_32`` only."
msgstr ""
"`MinGW-w64 <https://mingw-w64.org/>`_ з GCC можна використовувати як "
"альтернативу Visual Studio. Обов’язково встановіть/налаштуйте його для "
"використання моделі потоку ``posix``. **Важливо:** При використанні MinGW "
"для компіляції гілки ``master`` вам потрібен GCC 9 або новішої версії. "
"Підтримує лише ``x86_64`` і ``x86_32``."

msgid ""
"`MinGW-LLVM <https://github.com/mstorsjo/llvm-mingw/releases>`_ with clang "
"can be used as an alternative to Visual Studio and MinGW-w64. Supports "
"``x86_64``, ``x86_32``, and ``arm64``."
msgstr ""
"`MinGW-LLVM <https://github.com/mstorsjo/llvm-mingw/releases>`_ із clang "
"можна використовувати як альтернативу Visual Studio та MinGW-w64. Підтримує "
"``x86_64``, ``x86_32`` і ``arm64``."

msgid ""
"`Python 3.8+ <https://www.python.org/downloads/windows/>`_. **Make sure to "
"enable the option to add Python to the** ``PATH`` **in the installer.**"
msgstr ""
"`Python 3.8+ <https://www.python.org/downloads/windows/>`_. **Обов’язково "
"ввімкніть опцію додавання Python до** ``PATH`` **у програмі встановлення.**"

msgid ""
"`SCons 4.0+ <https://scons.org/pages/download.html>`_ build system. Using "
"the latest release is recommended, especially for proper support of recent "
"Visual Studio releases."
msgstr ""
"`SCons 4.0+ <https://scons.org/pages/download.html>`_ система збірки. "
"Рекомендується використовувати останній випуск, особливо для належної "
"підтримки останніх випусків Visual Studio."

msgid ""
"If you have `Scoop <https://scoop.sh/>`_ installed, you can easily install "
"MinGW and other dependencies using the following command::"
msgstr ""
"Якщо у вас встановлено `Scoop <https://scoop.sh/>`_, ви можете легко "
"встановити MinGW та інші залежності за допомогою такої команди::"

msgid ""
"If you have `MSYS2 <https://www.msys2.org/>`_ installed, you can easily "
"install MinGW and other dependencies using the following command::"
msgstr ""
"Якщо у вас встановлено `MSYS2 <https://www.msys2.org/>`_, ви можете легко "
"встановити MinGW та інші залежності за допомогою такої команди::"

msgid ""
"For each MSYS2 MinGW subsystem, you should then run `pip3 install scons` in "
"its shell."
msgstr ""
"Для кожної підсистеми MSYS2 MinGW ви повинні запустити `pip3 install scons` "
"в її оболонці."

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""
"Щоб отримати вихідний код Godot для компіляції, "
"перегляньте :ref:`doc_getting_source`."

msgid ""
"For a general overview of SCons usage for Godot, "
"see :ref:`doc_introduction_to_the_buildsystem`."
msgstr ""
"Для загального огляду використання SCons для Godot "
"див. :ref:`doc_introduction_to_the_buildsystem`."

msgid "Setting up SCons"
msgstr "Налаштування SCons"

msgid ""
"To install SCons, open the command prompt and run the following command::"
msgstr ""
"Щоб установити SCons, відкрийте командний рядок і виконайте таку команду:"

msgid ""
"If you are prompted with the message ``Defaulting to user installation "
"because normal site-packages is not writeable``, you may have to run that "
"command again using elevated permissions. Open a new command prompt as an "
"Administrator then run the command again to ensure that SCons is available "
"from the ``PATH``."
msgstr ""
"Якщо вам буде запропоновано повідомлення ``Встановлення користувача за "
"замовчуванням, оскільки звичайні пакети сайту неможливі для запису``, "
"можливо, вам доведеться запустити цю команду знову, використовуючи підвищені "
"дозволи. Відкрийте новий командний рядок як адміністратор, а потім знову "
"запустіть команду, щоб переконатися, що SCons доступний із ``PATH``."

msgid ""
"To check whether you have installed Python and SCons correctly, you can type "
"``python --version`` and ``scons --version`` into a command prompt "
"(``cmd.exe``)."
msgstr ""
"Щоб перевірити, чи правильно ви встановили Python і SCons, ви можете ввести "
"``python --version`` і ``scons --version`` у командному рядку (``cmd.exe``)."

msgid ""
"If the commands above don't work, make sure to add Python to your ``PATH`` "
"environment variable after installing it, then check again. You can do so by "
"running the Python installer again and enabling the option to add Python to "
"the ``PATH``."
msgstr ""
"Якщо наведені вище команди не працюють, обов’язково додайте Python до "
"змінної середовища ``PATH`` після встановлення, а потім перевірте ще раз. Ви "
"можете зробити це, знову запустивши програму встановлення Python і "
"ввімкнувши опцію додавання Python до ``PATH``."

msgid ""
"If SCons cannot detect your Visual Studio installation, it might be that "
"your SCons version is too old. Update it to the latest version with ``python "
"-m pip install --upgrade scons``."
msgstr ""
"Якщо SCons не може виявити інсталяцію Visual Studio, можливо, ваша версія "
"SCons застаріла. Оновіть його до останньої версії за допомогою ``python -m "
"pip install --upgrade scons``."

msgid "Downloading Godot's source"
msgstr "Завантаження джерела Godot"

msgid "Refer to :ref:`doc_getting_source` for detailed instructions."
msgstr ""
"Зверніться до :ref:`doc_getting_source` для отримання детальних інструкцій."

msgid ""
"The tutorial will assume from now on that you placed the source code in ``C:"
"\\godot``."
msgstr ""
"Відтепер підручник передбачає, що ви розмістили вихідний код у ``C:\\godot``."

msgid ""
"To prevent slowdowns caused by continuous virus scanning during compilation, "
"add the Godot source folder to the list of exceptions in your antivirus "
"software."
msgstr ""
"Щоб запобігти сповільненню, спричиненому безперервним скануванням на віруси "
"під час компіляції, додайте вихідну папку Godot до списку винятків у вашому "
"антивірусному програмному забезпеченні."

msgid ""
"For Windows Defender, hit the :kbd:`Windows` key, type \"Windows Security\" "
"then hit :kbd:`Enter`. Click on **Virus & threat protection** on the left "
"panel. Under **Virus & threat protection settings** click on **Manage "
"Settings** and scroll down to **Exclusions**. Click **Add or remove "
"exclusions** then add the Godot source folder."
msgstr ""
"Для Windows Defender натисніть клавішу :kbd:`Windows`, введіть «Безпека "
"Windows», а потім натисніть :kbd:`Enter`. Натисніть **Захист від вірусів і "
"загроз** на лівій панелі. У розділі **Параметри захисту від вірусів і "
"загроз** натисніть **Керувати налаштуваннями** та прокрутіть вниз до "
"**Виключення**. Натисніть **Додати або видалити виключення**, а потім "
"додайте вихідну папку Godot."

msgid "Compiling"
msgstr "Компілювання"

msgid "Selecting a compiler"
msgstr "Вибір компілятора"

msgid ""
"SCons will automatically find and use an existing Visual Studio "
"installation. If you do not have Visual Studio installed, it will attempt to "
"use MinGW instead. If you already have Visual Studio installed and want to "
"use MinGW-w64, pass ``use_mingw=yes`` to the SCons command line. Note that "
"MSVC builds cannot be performed from the MSYS2 or MinGW shells. Use either "
"``cmd.exe`` or PowerShell instead. If you are using MinGW-LLVM, pass both "
"``use_mingw=yes`` and ``use_llvm=yes`` to the SCons command line."
msgstr ""
"SCons автоматично знайде та використає наявну інсталяцію Visual Studio. Якщо "
"у вас не встановлено Visual Studio, вона спробує використати MinGW. Якщо у "
"вас уже встановлено Visual Studio і ви хочете використовувати MinGW-w64, "
"передайте ``use_mingw=yes`` у командний рядок SCons. Зауважте, що збірки "
"MSVC не можна виконати з оболонок MSYS2 або MinGW. Натомість використовуйте "
"``cmd.exe`` або PowerShell. Якщо ви використовуєте MinGW-LLVM, передайте як "
"use_mingw=yes, так і use_llvm=yes у командний рядок SCons."

msgid ""
"During development, using the Visual Studio compiler is usually a better "
"idea, as it links the Godot binary much faster than MinGW. However, MinGW "
"can produce more optimized binaries using link-time optimization (see "
"below), making it a better choice for production use. This is particularly "
"the case for the GDScript VM which performs much better with MinGW compared "
"to MSVC. Therefore, it's recommended to use MinGW to produce builds that you "
"distribute to players."
msgstr ""
"Під час розробки зазвичай краще використовувати компілятор Visual Studio, "
"оскільки він зв’язує двійковий файл Godot набагато швидше, ніж MinGW. Однак "
"MinGW може створити більш оптимізовані двійкові файли за допомогою "
"оптимізації часу зв’язку (див. нижче), що робить його кращим вибором для "
"використання у виробництві. Особливо це стосується віртуальної машини "
"GDScript, яка працює набагато краще з MinGW порівняно з MSVC. Тому "
"рекомендується використовувати MinGW для створення збірок, які ви "
"розповсюджуєте гравцям."

msgid ""
"All official Godot binaries are built in `custom containers <https://"
"github.com/godotengine/build-containers>`__ using MinGW."
msgstr ""
"Усі офіційні двійкові файли Godot створено в `спеціальних контейнерах "
"<https://github.com/godotengine/build-containers>`__ за допомогою MinGW."

msgid "Running SCons"
msgstr "Запуск SCons"

msgid ""
"After opening a command prompt, change to the root directory of the engine "
"source code (using ``cd``) and type:"
msgstr ""
"Відкривши командний рядок, перейдіть до кореневого каталогу вихідного коду "
"двигуна (за допомогою ``cd``) і введіть:"

msgid ""
"When compiling with multiple CPU threads, SCons may warn about pywin32 being "
"missing. You can safely ignore this warning."
msgstr ""
"Під час компіляції з кількома потоками процесора SCons може попередити про "
"відсутність pywin32. Ви можете сміливо ігнорувати це попередження."

msgid ""
"If you are compiling Godot to make changes or contribute to the engine, you "
"may want to use the SCons options ``dev_build=yes`` or ``dev_mode=yes``. "
"See :ref:`doc_introduction_to_the_buildsystem_development_and_production_aliases` "
"for more info."
msgstr ""
"Якщо ви компілюєте Godot, щоб внести зміни або зробити внесок у механізм, ви "
"можете використати параметри SCons ``dev_build=yes`` або ``dev_mode=yes``. "
"Перегляньте :ref:`doc_introduction_to_the_buildsystem_development_and_production_aliases` "
"для отримання додаткової інформації."

msgid ""
"If all goes well, the resulting binary executable will be placed in ``C:"
"\\godot\\bin\\`` with the name ``godot.windows.editor.x86_32.exe`` or "
"``godot.windows.editor.x86_64.exe``. By default, SCons will build a binary "
"matching your CPU architecture, but this can be overridden using "
"``arch=x86_64``, ``arch=x86_32``, or ``arch=arm64``."
msgstr ""
"Якщо все піде добре, отриманий двійковий виконуваний файл буде розміщено в "
"``C:\\godot\\bin\\`` з назвою ``godot.windows.editor.x86_32.exe`` або "
"``godot.windows.editor.x86_64.exe``. За замовчуванням SCons створить "
"двійковий файл, який відповідає архітектурі вашого ЦП, але це можна змінити "
"за допомогою ``arch=x86_64``, ``arch=x86_32`` або ``arch=arm64``."

msgid ""
"This executable file contains the whole engine and runs without any "
"dependencies. Running it will bring up the Project Manager."
msgstr ""
"Цей виконуваний файл містить весь механізм і працює без будь-яких "
"залежностей. Після його запуску відкриється менеджер проекту."

msgid ""
"If you are compiling Godot for production use, you can make the final "
"executable smaller and faster by adding the SCons option ``production=yes``. "
"This enables additional compiler optimizations and link-time optimization."
msgstr ""
"Якщо ви компілюєте Godot для використання у виробництві, ви можете зробити "
"кінцевий виконуваний файл меншим і швидшим, додавши опцію SCons "
"``production=yes``. Це дозволяє додатково оптимізувати компілятор і "
"оптимізувати час зв’язку."

msgid ""
"LTO takes some time to run and requires up to 30 GB of available RAM while "
"compiling (depending on toolchain). If you're running out of memory with the "
"above option, use ``production=yes lto=none`` or ``production=yes lto=thin`` "
"(LLVM only) for a lightweight but less effective form of LTO."
msgstr ""
"LTO потребує деякий час для запуску та потребує до 30 ГБ доступної "
"оперативної пам’яті під час компіляції (залежно від інструментарію). Якщо "
"вам не вистачає пам’яті з наведеним вище параметром, використовуйте "
"``production=yes lto=none`` або ``production=yes lto=thin`` (тільки LLVM) "
"для легкої, але менш ефективної форми LTO."

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"Якщо ви хочете використовувати окремі параметри редактора для власних збірок "
"Godot та офіційних випусків, ви можете "
"ввімкнути :ref:`doc_data_paths_self_contained_mode`, створивши файл під "
"назвою ``._sc_`` або ``_sc_`` у ``bin/`` папка."

msgid "Compiling with support for Direct3D 12"
msgstr "Компіляція з підтримкою Direct3D 12"

msgid ""
"By default, builds of Godot do not contain support for the Direct3D 12 "
"graphics API."
msgstr ""
"За замовчуванням збірки Godot не містять підтримки графічного API Direct3D "
"12."

msgid ""
"You can install the required dependencies by running ``python misc/scripts/"
"install_d3d12_sdk_windows.py`` in the Godot source repository. After running "
"this script, add the ``d3d12=yes`` SCons option to enable Direct3D 12 "
"support. This will use the default paths for the various dependencies, which "
"match the ones used in the script."
msgstr ""
"Ви можете встановити необхідні залежності, запустивши ``python misc/scripts/"
"install_d3d12_sdk_windows.py`` у сховищі вихідних кодів Godot. Після запуску "
"цього сценарію додайте параметр ``d3d12=yes`` SCons, щоб увімкнути підтримку "
"Direct3D 12. Буде використано шляхи за замовчуванням для різних залежностей, "
"які збігаються з тими, що використовуються в сценарії."

msgid ""
"You can find the detailed steps below if you wish to set up dependencies "
"manually, but the above script handles everything for you (including the "
"optional PIX and Agility SDK components)."
msgstr ""
"Ви можете знайти докладні кроки нижче, якщо ви бажаєте налаштувати "
"залежності вручну, але наведений вище сценарій обробляє все за вас "
"(включаючи додаткові компоненти PIX і Agility SDK)."

msgid ""
"`godot-nir-static library <https://github.com/godotengine/godot-nir-static/"
"releases/>`_. We compile the Mesa libraries you will need into a static "
"library. Download it anywhere, unzip it and remember the path to the "
"unzipped folder, you will need it below."
msgstr ""
"`статична бібліотека godot-nir <https://github.com/godotengine/godot-nir-"
"static/releases/>`_. Ми компілюємо бібліотеки Mesa, які вам знадобляться, у "
"статичну бібліотеку. Завантажте його будь-де, розархівуйте і запам'ятайте "
"шлях до розпакованої папки, він вам знадобиться нижче."

msgid ""
"You can optionally build the godot-nir-static libraries yourself with the "
"following steps:"
msgstr ""
"За бажанням ви можете створити статичні бібліотеки godot-nir самостійно, "
"виконавши такі дії:"

msgid ""
"Install the Python package `mako <https://www.makotemplates.org>`_ which is "
"needed to generate some files."
msgstr ""
"Встановіть пакет Python `mako <https://www.makotemplates.org>`_, який "
"потрібен для створення деяких файлів."

msgid ""
"Clone the `godot-nir-static <https://github.com/godotengine/godot-nir-"
"static>`_ directory and navigate to it."
msgstr ""
"Клонуйте каталог `godot-nir-static <https://github.com/godotengine/godot-nir-"
"static>`_ і перейдіть до нього."

msgid "Run the following::"
msgstr "Виконайте наступне:"

msgid ""
"If you are building with MinGW-w64, add ``use_mingw=yes`` to the ``scons`` "
"command, you can also specify build architecture using ``arch={architecture}"
"``. If you are building with MinGW-LLVM, add both ``use_mingw=yes`` and "
"``use_llvm=yes`` to the ``scons`` command."
msgstr ""
"Якщо ви створюєте за допомогою MinGW-w64, додайте ``use_mingw=yes`` до "
"команди ``scons``, ви також можете вказати архітектуру побудови за допомогою "
"``arch={architecture}``. Якщо ви створюєте за допомогою MinGW-LLVM, додайте "
"як use_mingw=yes, так і use_llvm=yes до команди scons."

msgid ""
"If you are building with MinGW and the binaries are not located in the "
"``PATH``, add ``mingw_prefix=\"/path/to/mingw\"`` to the ``scons`` command."
msgstr ""
"Якщо ви створюєте за допомогою MinGW і двійкові файли не розташовані в "
"``PATH``, додайте ``mingw_prefix=\"/path/to/mingw\"`` до команди ``scons``."

msgid ""
"Mesa static library should be built using the same compiler and the same CRT "
"(if you are building with MinGW) you are using for building Godot."
msgstr ""
"Статичну бібліотеку Mesa слід створювати за допомогою того самого "
"компілятора та того самого CRT (якщо ви збираєте з MinGW), які ви "
"використовуєте для створення Godot."

msgid "Optionally, you can compile with the following for additional features:"
msgstr "За бажанням ви можете скомпілювати наступне для додаткових функцій:"

msgid ""
"`PIX <https://devblogs.microsoft.com/pix/download>`_ is a performance tuning "
"and debugging application for Direct3D12 applications. If you compile-in "
"support for it, you can get much more detailed information through PIX that "
"will help you optimize your game and troubleshoot graphics bugs. To use it, "
"download the WinPixEventRuntime package. You will be taken to a NuGet "
"package page where you can click \"Download package\" to get it. Once "
"downloaded, change the file extension to .zip and unzip the file to some "
"path."
msgstr ""
"`PIX <https://devblogs.microsoft.com/pix/download>`_ — це програма для "
"налаштування продуктивності та налагодження програм Direct3D12. Якщо ви "
"скомпілюєте його підтримку, ви зможете отримати набагато більш детальну "
"інформацію через PIX, яка допоможе вам оптимізувати вашу гру та усунути "
"помилки графіки. Щоб використовувати його, завантажте пакет "
"WinPixEventRuntime. Ви перейдете на сторінку пакета NuGet, де ви можете "
"натиснути «Завантажити пакет», щоб отримати його. Після завантаження змініть "
"розширення файлу на .zip і розархівуйте файл за певним шляхом."

msgid ""
"`Agility SDK <https://devblogs.microsoft.com/directx/directx12agility>`_ can "
"be used to provide access to the latest Direct3D 12 features without relying "
"on driver updates. To use it, download the latest Agility SDK package. You "
"will be taken to a NuGet package page where you can click \"Download "
"package\" to get it. Once downloaded, change the file extension to .zip and "
"unzip the file to some path."
msgstr ""
"`Agility SDK <https://devblogs.microsoft.com/directx/directx12agility>`_ "
"можна використовувати для надання доступу до останніх функцій Direct3D 12, "
"не покладаючись на оновлення драйверів. Щоб використовувати його, завантажте "
"найновіший пакет Agility SDK. Ви перейдете на сторінку пакета NuGet, де ви "
"можете натиснути «Завантажити пакет», щоб отримати його. Після завантаження "
"змініть розширення файлу на .zip і розархівуйте файл за певним шляхом."

msgid ""
"If you use a preview version of the Agility SDK, remember to enable "
"developer mode in Windows; otherwise it won't be used."
msgstr ""
"Якщо ви використовуєте попередній перегляд Agility SDK, не забудьте "
"ввімкнути режим розробника в Windows; інакше він не буде використаний."

msgid ""
"If you want to use a PIX with MinGW build, navigate to PIX runtime directory "
"and use the following commands to generate import library::"
msgstr ""
"Якщо ви хочете використовувати PIX зі збіркою MinGW, перейдіть до каталогу "
"середовища виконання PIX і використовуйте такі команди для створення "
"бібліотеки імпорту::"

msgid ""
"When building Godot, you will need to tell SCons to use Direct3D 12 and "
"where to look for the additional libraries:"
msgstr ""
"Під час створення Godot вам потрібно буде сказати SCons використовувати "
"Direct3D 12 і де шукати додаткові бібліотеки:"

msgid "Or, with all options enabled:"
msgstr "Або з увімкненими всіма параметрами:"

msgid ""
"For the Agility SDK's DLLs you have to explicitly choose the kind of "
"workflow. Single-arch is the default (DLLs copied to ``bin/``). If you pass "
"``agility_sdk_multi_arch=yes`` to SCons, you'll opt-in for multi-arch. DLLs "
"will be copied to the appropriate ``bin/<arch>/`` subdirectories and at "
"runtime the right one will be loaded."
msgstr ""
"Для бібліотек DLL Agility SDK вам потрібно явно вибрати тип робочого "
"процесу. За замовчуванням є одна арка (DLL-файли скопійовані до ``bin/``). "
"Якщо ви передасте ``agility_sdk_multi_arch=yes`` для SCons, ви підключитесь "
"до кількох архівів. DLL-файли будуть скопійовані до відповідних підкаталогів "
"``bin/<arch>/``, а під час виконання буде завантажено правильний."

msgid "Compiling with ANGLE support"
msgstr "Компіляція з підтримкою ANGLE"

msgid ""
"ANGLE provides a translation layer from OpenGL ES 3.x to Direct3D 11 and can "
"be used to improve support for the Compatibility renderer on some older GPUs "
"with outdated OpenGL drivers and on Windows for ARM."
msgstr ""
"ANGLE забезпечує рівень перекладу з OpenGL ES 3.x на Direct3D 11 і може "
"використовуватися для покращення підтримки рендерера сумісності на деяких "
"старіших графічних процесорах із застарілими драйверами OpenGL і в Windows "
"для ARM."

msgid ""
"By default, Godot is built with dynamically linked ANGLE, you can use it by "
"placing ``libEGL.dll`` and ``libGLESv2.dll`` alongside the executable."
msgstr ""
"За замовчуванням Godot створено з динамічно пов’язаним ANGLE, ви можете "
"використовувати його, розмістивши ``libEGL.dll`` і ``libGLESv2.dll`` поруч "
"із виконуваним файлом."

msgid ""
"You can use dynamically linked ANGLE with export templates as well, rename "
"aforementioned DLLs to ``libEGL.{architecture}.dll`` and ``libGLESv2."
"{architecture}.dll`` and place them alongside export template executables, "
"and libraries will be automatically copied during the export process."
msgstr ""
"Ви також можете використовувати динамічно зв’язаний ANGLE із шаблонами "
"експорту, перейменувати вищезазначені DLL на ``libEGL.{architecture}.dll`` і "
"``libGLESv2.{architecture}.dll`` і розмістити їх поруч із виконуваними "
"файлами шаблонів експорту, і бібліотеки будуть автоматично копіювати під час "
"процесу експорту."

msgid "To compile Godot with statically linked ANGLE:"
msgstr "Щоб скомпілювати Godot зі статично пов’язаним ANGLE:"

msgid ""
"Download pre-built static libraries from `godot-angle-static library "
"<https://github.com/godotengine/godot-angle-static/releases>`_, and unzip "
"them."
msgstr ""
"Завантажте попередньо зібрані статичні бібліотеки з `godot-angle-static "
"library <https://github.com/godotengine/godot-angle-static/releases>`_ та "
"розпакуйте їх."

msgid ""
"When building Godot, add ``angle_libs={path}`` to tell SCons where to look "
"for the ANGLE libraries::"
msgstr ""
"Під час створення Godot додайте ``angle_libs={path}``, щоб вказати SCons, де "
"шукати бібліотеки ANGLE::"

msgid ""
"You can optionally build the godot-angle-static libraries yourself with the "
"following steps:"
msgstr ""
"За бажанням ви можете самостійно створити бібліотеки godot-angle-static, "
"виконавши наступні дії:"

msgid ""
"Clone the `godot-angle-static <https://github.com/godotengine/godot-angle-"
"static>`_ directory and navigate to it."
msgstr ""
"Склонуйте каталог `godot-angle-static <https://github.com/godotengine/godot-"
"angle-static>`_ і перейдіть до нього."

msgid "Run the following command::"
msgstr "Виконайте таку команду::"

msgid ""
"If you are buildng with MinGW, add ``use_mingw=yes`` to the command, you can "
"also specify build architecture using ``arch={architecture}``. If you are "
"building with MinGW-LLVM, add both ``use_mingw=yes`` and ``use_llvm=yes`` to "
"the ``scons`` command."
msgstr ""
"Якщо ви створюєте за допомогою MinGW, додайте ``use_mingw=yes`` до команди, "
"ви також можете вказати архітектуру побудови за допомогою "
"``arch={architecture}``. Якщо ви створюєте за допомогою MinGW-LLVM, додайте "
"як use_mingw=yes, так і use_llvm=yes до команди scons."

msgid ""
"ANGLE static library should be built using the same compiler and the same "
"CRT (if you are building with MinGW) you are using for building Godot."
msgstr ""
"Статичну бібліотеку ANGLE слід створювати за допомогою того самого "
"компілятора та того самого CRT (якщо ви збираєте з MinGW), які ви "
"використовуєте для створення Godot."

msgid "Development in Visual Studio"
msgstr "Розробка в Visual Studio"

msgid ""
"Using an IDE is not required to compile Godot, as SCons takes care of "
"everything. But if you intend to do engine development or debugging of the "
"engine's C++ code, you may be interested in configuring a code editor or an "
"IDE."
msgstr ""
"Для компіляції Godot не потрібно використовувати IDE, оскільки SCons подбає "
"про все. Але якщо ви маєте намір займатися розробкою двигуна або "
"налагодженням коду двигуна C++, вас може зацікавити налаштування редактора "
"коду або IDE."

msgid ""
"Folder-based editors don't require any particular setup to start working "
"with Godot's codebase. To edit projects with Visual Studio they need to be "
"set up as a solution."
msgstr ""
"Редактори на основі папок не вимагають жодних спеціальних налаштувань, щоб "
"розпочати роботу з кодовою базою Godot. Щоб редагувати проекти за допомогою "
"Visual Studio, їх потрібно налаштувати як рішення."

msgid ""
"You can create a Visual Studio solution via SCons by running SCons with the "
"``vsproj=yes`` parameter, like this::"
msgstr ""
"Ви можете створити рішення Visual Studio за допомогою SCons, запустивши "
"SCons із параметром ``vsproj=yes``, наприклад:"

msgid ""
"You will be able to open Godot's source in a Visual Studio solution now, and "
"able to build Godot using Visual Studio's **Build** button."
msgstr ""
"Тепер ви зможете відкрити вихідний код Godot у рішенні Visual Studio, а "
"також зможете створити Godot за допомогою кнопки **Build** у Visual Studio."

msgid "See :ref:`doc_configuring_an_ide_vs` for further details."
msgstr ""
"Перегляньте :ref:`doc_configuring_an_ide_vs` для отримання додаткової "
"інформації."

msgid "Cross-compiling for Windows from other operating systems"
msgstr "Крос-компіляція для Windows з інших операційних систем"

msgid ""
"If you are a Linux or macOS user, you need to install `MinGW-w64 <https://"
"www.mingw-w64.org/>`__, which typically comes in 32-bit and 64-bit variants, "
"or `MinGW-LLVM <https://github.com/mstorsjo/llvm-mingw/releases>`_, which "
"comes as a single archive for all target architectures. The package names "
"may differ based on your distribution, here are some known ones:"
msgstr ""
"Якщо ви користуєтеся Linux або macOS, вам потрібно інсталювати `MinGW-w64 "
"<https://www.mingw-w64.org/>`__, який зазвичай доступний у 32-розрядному та "
"64-розрядному варіантах, або `MinGW-LLVM <https://github.com/mstorsjo/llvm-"
"mingw/releases>`_, який постачається як єдиний архів для всіх цільових "
"архітектури. Назви пакетів можуть відрізнятися залежно від вашого "
"дистрибутива, ось деякі з них:"

msgid "**Arch Linux**"
msgstr "**arch Linux**"

msgid "**Debian** / **Ubuntu**"
msgstr "**Debian** / **Ubuntu**"

msgid "**Fedora**"
msgstr "**Fedora**"

msgid "**macOS**"
msgstr "**macOS**"

msgid "**Mageia**"
msgstr "**Маґей**"

msgid ""
"Before attempting the compilation, SCons will check for the following "
"binaries in your ``PATH`` environment variable::"
msgstr ""
"Перед спробою компіляції SCons перевірить наявність таких двійкових файлів у "
"вашій змінній середовища ``PATH``:"

msgid ""
"If the binaries are not located in the ``PATH`` (e.g. ``/usr/bin``), you can "
"define the following environment variable to give a hint to the build "
"system::"
msgstr ""
"Якщо двійкові файли не знаходяться в ``PATH`` (наприклад, ``/usr/bin``), ви "
"можете визначити таку змінну середовища, щоб дати підказку системі збірки::"

msgid ""
"Where ``/path/to/mingw`` is the path containing the ``bin`` directory where "
"``i686-w64-mingw32-gcc`` and ``x86_64-w64-mingw32-gcc`` are located (e.g. ``/"
"opt/mingw-w64`` if the binaries are located in ``/opt/mingw-w64/bin``)."
msgstr ""
"Де ``/path/to/mingw`` це шлях, що містить каталог ``bin``, де розташовані "
"``i686-w64-mingw32-gcc`` і ``x86_64-w64-mingw32-gcc`` (наприклад, ``/opt/"
"mingw-w64``, якщо двійкові файли знаходяться в ``/opt/mingw-w64/bin``)."

msgid ""
"To make sure you are doing things correctly, executing the following in the "
"shell should result in a working compiler (the version output may differ "
"based on your system)::"
msgstr ""
"Щоб переконатися, що ви все робите правильно, виконання наступної команди в "
"оболонці має призвести до роботи компілятора (версія може відрізнятися "
"залежно від вашої системи):"

msgid ""
"If you are building with MinGW-LLVM, add ``use_llvm=yes`` to the ``scons`` "
"command."
msgstr ""
"Якщо ви створюєте за допомогою MinGW-LLVM, додайте ``use_llvm=yes`` до "
"команди ``scons``."

msgid ""
"When cross-compiling for Windows using MinGW-w64, keep in mind only "
"``x86_64`` and ``x86_32`` architectures are supported. MinGW-LLVM supports "
"``arm64`` as well. Be sure to specify the right ``arch=`` option when "
"invoking SCons if building from a different architecture."
msgstr ""
"Під час крос-компіляції для Windows із використанням MinGW-w64 пам’ятайте, "
"що підтримуються лише архітектури ``x86_64`` і ``x86_32``. MinGW-LLVM також "
"підтримує ``arm64``. Обов’язково вкажіть правильний параметр ``arch=`` під "
"час виклику SCons, якщо будуєте з іншої архітектури."

msgid "Troubleshooting"
msgstr "Вирішення проблем"

msgid ""
"Cross-compiling from some Ubuntu versions may lead to `this bug <https://"
"github.com/godotengine/godot/issues/9258>`_, due to a default configuration "
"lacking support for POSIX threading."
msgstr ""
"Перехресна компіляція з деяких версій Ubuntu може призвести до `цієї помилки "
"<https://github.com/godotengine/godot/issues/9258>`_ через те, що стандартна "
"конфігурація не підтримує потоки POSIX."

msgid ""
"You can change that configuration following those instructions, for 64-bit::"
msgstr ""
"Ви можете змінити цю конфігурацію, дотримуючись цих інструкцій для 64-"
"розрядної версії:"

msgid "And for 32-bit::"
msgstr "А для 32-бітної::"

msgid "Creating Windows export templates"
msgstr "Створення шаблонів експорту Windows"

msgid ""
"Windows export templates are created by compiling Godot without the editor, "
"with the following flags:"
msgstr ""
"Шаблони експорту Windows створюються шляхом компіляції Godot без редактора з "
"такими прапорцями:"

msgid ""
"If you plan on replacing the standard export templates, copy these to the "
"following location, replacing ``<version>`` with the version identifier "
"(such as ``4.2.1.stable`` or ``4.3.dev``):"
msgstr ""
"Якщо ви плануєте замінити стандартні шаблони експорту, скопіюйте їх у таке "
"розташування, замінивши ``<version>`` на ідентифікатор версії (наприклад, "
"``4.2.1.stable`` або ``4.3.dev``) :"

msgid "With the following names::"
msgstr "З такими назвами::"

msgid ""
"However, if you are using custom modules or custom engine code, you may "
"instead want to configure your binaries as custom export templates here:"
msgstr ""
"Однак, якщо ви використовуєте спеціальні модулі або спеціальний код двигуна, "
"ви можете замість цього налаштувати свої двійкові файли як спеціальні "
"шаблони експорту тут:"

msgid "Select matching architecture in the export config."
msgstr "Виберіть відповідну архітектуру в конфігурації експорту."

msgid ""
"You don't need to copy them in this case, just reference the resulting files "
"in the ``bin\\`` directory of your Godot source folder, so the next time you "
"build, you will automatically have the custom templates referenced."
msgstr ""
"Вам не потрібно копіювати їх у цьому випадку, просто посилайтеся на отримані "
"файли в каталозі ``bin\\`` вашої вихідної теки Godot, тож наступного разу, "
"коли ви збиратимете, ви автоматично матимете посилання на спеціальні шаблони."
