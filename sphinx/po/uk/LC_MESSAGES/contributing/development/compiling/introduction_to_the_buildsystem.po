#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to the buildsystem"
msgstr "Знайомство з системою побудови"

msgid ""
"Godot is a primarily C++ project and it :ref:`uses the SCons build system. "
"<doc_faq_why_scons>` We love SCons for how maintainable and easy to set up "
"it makes our buildsystem. And thanks to that compiling Godot from source can "
"be as simple as running::"
msgstr ""
"Godot — це переважно C++ проект, і це :ref:`uses the SCons build system. "
"<doc_faq_why_scons>` Ми любимо SCons за те, що наша система збірки зручна в "
"обслуговуванні та проста в налаштуванні. І завдяки цьому компіляція Godot з "
"початкових кодів може бути такою ж простою, як запуск::"

msgid ""
"This produces an editor build for your current platform, operating system, "
"and architecture. You can change what gets built by specifying a target, a "
"platform, and/or an architecture. For example, to build an export template "
"used for running exported games, you can run::"
msgstr ""
"Це створює збірку редактора для вашої поточної платформи, операційної "
"системи та архітектури. Ви можете змінити те, що створюється, вказавши ціль, "
"платформу та/або архітектуру. Наприклад, щоб створити шаблон експорту, який "
"використовується для запуску експортованих ігор, ви можете запустити::"

msgid ""
"If you plan to debug or develop the engine, then you might want to enable "
"the ``dev_build`` option to enable dev-only debugging code::"
msgstr ""
"Якщо ви плануєте налагоджувати або розробляти движок, ви можете ввімкнути "
"опцію ``dev_build``, щоб увімкнути код налагодження лише для розробників:"

msgid ""
"Following sections in the article will explain these and other universal "
"options in more detail. But before you can compile Godot, you need to "
"install a few prerequisites. Please refer to the platform documentation to "
"learn more:"
msgstr ""
"У наступних розділах статті докладніше пояснюється ці та інші універсальні "
"варіанти. Але перш ніж ви зможете скомпілювати Godot, вам потрібно "
"встановити кілька попередніх умов. Щоб дізнатися більше, зверніться до "
"документації платформи:"

msgid ":ref:`doc_compiling_for_android`"
msgstr ":ref:`doc_compiling_for_android`"

msgid ":ref:`doc_compiling_for_ios`"
msgstr ":ref:`doc_compiling_for_ios`"

msgid ":ref:`doc_compiling_for_linuxbsd`"
msgstr ":ref:`doc_compiling_for_linuxbsd`"

msgid ":ref:`doc_compiling_for_macos`"
msgstr ":ref:`doc_compiling_for_macos`"

msgid ":ref:`doc_compiling_for_web`"
msgstr ":ref:`doc_compiling_for_web`"

msgid ":ref:`doc_compiling_for_windows`"
msgstr ":ref:`doc_compiling_for_windows`"

msgid ""
"These articles cover in great detail both how to setup your environment to "
"compile Godot on a specific platform, and how to compile for that platform. "
"Please feel free to go back and forth between them and this article to "
"reference platform-specific and universal configuration options."
msgstr ""
"У цих статтях детально описано як налаштувати ваше середовище для компіляції "
"Godot на певній платформі, так і як компілювати для цієї платформи. Будь "
"ласка, не соромтеся переходити між ними та цією статтею, щоб посилатися на "
"специфічні для платформи та універсальні параметри конфігурації."

msgid "Using multi-threading"
msgstr "Використання багатопоточності"

msgid ""
"The build process may take a while, depending on how powerful your system "
"is. By default, Godot's SCons setup is configured to use all CPU threads but "
"one (to keep the system responsive during compilation). If you want to "
"adjust how many CPU threads SCons will use, use the ``-j <threads>`` "
"parameter to specify how many threads will be used for the build."
msgstr ""
"Процес збирання може зайняти деякий час, залежно від потужності вашої "
"системи. За замовчуванням налаштування Godot SCons налаштовано на "
"використання всіх потоків процесора, крім одного (щоб підтримувати реакцію "
"системи під час компіляції). Якщо ви хочете налаштувати, скільки потоків ЦП "
"використовуватиме SCons, використовуйте параметр ``-j <threads>``, щоб "
"вказати, скільки потоків використовуватиметься для збірки."

msgid "Example for using 4 threads::"
msgstr "Приклад використання 4-х ниток::"

msgid "Platform selection"
msgstr "Вибір платформи"

msgid ""
"Godot's build system will begin by detecting the platforms it can build for. "
"If not detected, the platform will simply not appear on the list of "
"available platforms. The build requirements for each platform are described "
"in the rest of this tutorial section."
msgstr ""
"Система збірки Godot розпочнеться з виявлення платформ, для яких вона може "
"створюватися. Якщо не буде виявлено, платформа просто не з’явиться в списку "
"доступних платформ. Вимоги до збірки для кожної платформи описано в решті "
"цього розділу підручника."

msgid ""
"SCons is invoked by just calling ``scons``. If no platform is specified, "
"SCons will detect the target platform automatically based on the host "
"platform. It will then start building for the target platform right away."
msgstr ""
"SCons викликається простим викликом ``scons``. Якщо платформа не вказана, "
"SCons автоматично визначить цільову платформу на основі платформи хоста. "
"Після цього відразу почнеться створення для цільової платформи."

msgid "To list the available target platforms, use ``scons platform=list``::"
msgstr ""
"Щоб отримати список доступних цільових платформ, використовуйте ``scons "
"platform=list``::"

msgid ""
"To build for a platform (for example, ``linuxbsd``), run with the "
"``platform=`` (or ``p=`` to make it short) argument:"
msgstr ""
"Щоб створити для платформи (наприклад, ``linux bsd``), запустіть аргумент "
"``platform=`` (або ``p=``, щоб зробити його коротким):"

msgid "Resulting binary"
msgstr "Результуючий двійковий файл"

msgid ""
"The resulting binaries will be placed in the ``bin/`` subdirectory, "
"generally with this naming convention::"
msgstr ""
"Отримані двійкові файли буде розміщено в підкаталозі ``bin/``, як правило, з "
"таким іменуванням:"

msgid "For the previous build attempt, the result would look like this:"
msgstr "Для попередньої спроби збірки результат виглядав би так:"

msgid ""
"This means that the binary is for Linux *or* \\*BSD (*not* both), is not "
"optimized, has the whole editor compiled in, and is meant for 64 bits."
msgstr ""
"Це означає, що двійковий файл призначений для Linux *або* \\*BSD (*не* для "
"обох), не оптимізований, у ньому скомпільовано весь редактор і призначений "
"для 64 бітів."

msgid "A Windows binary with the same configuration will look like this:"
msgstr "Двійковий файл Windows із такою ж конфігурацією виглядатиме так:"

msgid ""
"Copy that binary to any location you like, as it contains the Project "
"Manager, editor and all means to execute the game. However, it lacks the "
"data to export it to the different platforms. For that the export templates "
"are needed (which can be either downloaded from `godotengine.org <https://"
"godotengine.org/>`__, or you can build them yourself)."
msgstr ""
"Скопіюйте цей двійковий файл у будь-яке розташування, оскільки він містить "
"менеджер проекту, редактор і всі засоби для виконання гри. Однак йому бракує "
"даних для експорту на різні платформи. Для цього потрібні шаблони експорту "
"(які можна завантажити з `godotengine.org <https://godotengine.org/>`__, або "
"ви можете створити їх самостійно)."

msgid ""
"Aside from that, there are a few standard options that can be set in all "
"build targets, and which will be explained below."
msgstr ""
"Окрім цього, є кілька стандартних параметрів, які можна встановити в усіх "
"цілях збірки, і які будуть пояснені нижче."

msgid "Target"
msgstr "Призначення"

msgid ""
"Target controls if the editor is contained and debug flags are used. All "
"builds are optimized. Each mode means:"
msgstr ""
"Target контролює, якщо міститься редактор і використовуються позначки "
"налагодження. Усі збірки оптимізовані. Кожен режим означає:"

msgid ""
"``target=editor``: Build with editor, optimized, with debugging code "
"(defines: ``TOOLS_ENABLED``, ``DEBUG_ENABLED``, ``-O2``/``/O2``)"
msgstr ""
"``target=editor``: збірка за допомогою редактора, оптимізована, з кодом "
"налагодження (визначає: ``TOOLS_ENABLED``, ``DEBUG_ENABLED``, ``-O2``/``/"
"O2``)"

msgid ""
"``target=template_debug``: Build with C++ debugging symbols (defines: "
"``DEBUG_ENABLED``, ``-O2``/``/O2``)"
msgstr ""
"``target=template_debug``: збірка за допомогою символів налагодження C++ "
"(визначає: ``DEBUG_ENABLED``, ``-O2``/``/O2``)"

msgid ""
"``target=template_release``: Build without symbols (defines: ``-O3``/``/O2``)"
msgstr ""
"``target=template_release``: збірка без символів (визначає: ``-O3``/``/O2``)"

msgid ""
"The editor is enabled by default in all PC targets (Linux, Windows, macOS), "
"disabled for everything else. Disabling the editor produces a binary that "
"can run projects but does not include the editor or the Project Manager."
msgstr ""
"Редактор увімкнено за замовчуванням у всіх цільових ПК (Linux, Windows, "
"macOS), вимкнено для всіх інших. Вимкнення редактора створює двійковий файл, "
"який може запускати проекти, але не включає редактор або менеджер проекту."

msgid "Development and production aliases"
msgstr "Псевдоніми розробки та виробництва"

msgid ""
"When creating builds for development (running debugging/:ref:`profiling "
"<doc_using_cpp_profilers>` tools), you often have different goals compared "
"to production builds (making binaries as fast and small as possible)."
msgstr ""
"Створюючи збірки для розробки (виконуючи інструменти debugging/:ref:"
"`profiling <doc_using_cpp_profilers>`), ви часто маєте інші цілі порівняно з "
"робочими збірками (створення двійкових файлів якомога швидших і менших)."

msgid "Godot provides two aliases for this purpose:"
msgstr "Годо пропонує два псевдоніми для цієї мети:"

msgid ""
"``dev_mode=yes`` is an alias for ``verbose=yes warnings=extra werror=yes "
"tests=yes``. This enables warnings-as-errors behavior (similar to Godot's "
"continuous integration setup) and also builds :ref:`unit tests "
"<doc_unit_testing>` so you can run them locally."
msgstr ""
"``dev_mode=yes`` — це псевдонім для ``verbose=yes warnings=extra werror=yes "
"tests=yes``. Це вмикає поведінку попереджень як помилок (подібно до "
"налаштування безперервної інтеграції Godot), а також створює :ref:`модульні "
"тести <doc_unit_testing>`, щоб ви могли запускати їх локально."

msgid ""
"``production=yes`` is an alias for ``use_static_cpp=yes debug_symbols=no "
"lto=auto``. Statically linking libstdc++ allows for better binary "
"portability when compiling for Linux. This alias also enables link-time "
"optimization when compiling for Linux, Web and Windows with MinGW, but keeps "
"LTO disabled when compiling for macOS, iOS or Windows with MSVC. This is "
"because LTO on those platforms is very slow to link or has issues with the "
"generated code."
msgstr ""
"``production=yes`` — це псевдонім для ``use_static_cpp=yes debug_symbols=no "
"lto=auto``. Статичне зв’язування libstdc++ забезпечує кращу бінарну "
"переносимість під час компіляції для Linux. Цей псевдонім також дозволяє "
"оптимізувати час підключення під час компіляції для Linux, Web і Windows за "
"допомогою MinGW, але залишає LTO вимкненим під час компіляції для macOS, iOS "
"або Windows за допомогою MSVC. Це тому, що LTO на цих платформах дуже "
"повільно підключається або має проблеми зі згенерованим кодом."

msgid ""
"You can manually override options from those aliases by specifying them on "
"the same command line with different values. For example, you can use "
"``scons production=yes debug_symbols=yes`` to create production-optimized "
"binaries with debugging symbols included."
msgstr ""
"Ви можете вручну змінити параметри цих псевдонімів, вказавши їх у тому "
"самому командному рядку з різними значеннями. Наприклад, ви можете "
"використовувати ``scons production=yes debug_symbols=yes`` для створення "
"оптимізованих для виробництва двійкових файлів із включеними символами "
"налагодження."

msgid "Dev build"
msgstr "Розробник збірки"

msgid ""
"``dev_build`` should **not** be confused with ``dev_mode``, which is an "
"alias for several development-related options (see above)."
msgstr ""
"``dev_build`` **не** слід плутати з ``dev_mode``, який є псевдонімом для "
"кількох параметрів, пов’язаних з розробкою (див. вище)."

msgid ""
"When doing engine development the ``dev_build`` option can be used together "
"with ``target`` to enable dev-specific code. ``dev_build`` defines "
"``DEV_ENABLED``, disables optimization (``-O0``/``/0d``), enables generating "
"debug symbols, and does not define ``NDEBUG`` (so ``assert()`` works in "
"thirdparty libraries)."
msgstr ""
"Під час розробки двигуна опцію ``dev_build`` можна використовувати разом із "
"``target``, щоб увімкнути спеціальний код розробника. ``dev_build`` визначає "
"``DEV_ENABLED``, вимикає оптимізацію (``-O0``/``/0d``), дозволяє генерувати "
"символи налагодження та не визначає ``NDEBUG`` (тому ``assert( )`` працює в "
"сторонніх бібліотеках)."

msgid ""
"This flag appends the ``.dev`` suffix (for development) to the generated "
"binary name."
msgstr ""
"Цей прапорець додає суфікс ``.dev`` (для розробки) до згенерованого "
"двійкового імені."

msgid ""
"There are additional SCons options to enable *sanitizers*, which are tools "
"you can enable at compile-time to better debug certain engine issues. See :"
"ref:`doc_using_sanitizers` for more information."
msgstr ""
"Існують додаткові параметри SCons для ввімкнення *дезінфікуючих засобів*, "
"які є інструментами, які можна ввімкнути під час компіляції для кращого "
"усунення певних проблем двигуна. Перегляньте :ref:`doc_using_sanitizers` для "
"отримання додаткової інформації."

msgid "Debugging symbols"
msgstr "Налагоджувальні символи"

msgid ""
"By default, ``debug_symbols=no`` is used, which means **no** debugging "
"symbols are included in compiled binaries. Use ``debug_symbols=yes`` to "
"include debug symbols within compiled binaries, which allows debuggers and "
"profilers to work correctly. Debugging symbols are also required for Godot's "
"crash stacktraces to display with references to source code files and lines."
msgstr ""
"За замовчуванням використовується ``debug_symbols=no``, що означає, що "
"**жоден** налагоджувальний символ не включено до скомпільованих двійкових "
"файлів. Використовуйте ``debug_symbols=yes``, щоб включити символи "
"налагодження в скомпільовані двійкові файли, що дозволяє налагоджувачам і "
"профайлерам працювати правильно. Символи налагодження також необхідні для "
"відображення стеків аварійного завершення Годо з посиланнями на файли та "
"рядки вихідного коду."

msgid ""
"The downside is that debugging symbols are large files (significantly larger "
"than the binaries themselves). As a result, official binaries currently do "
"not include debugging symbols. This means you need to compile Godot yourself "
"to have access to debugging symbols."
msgstr ""
"Недоліком є те, що символи налагодження є великими файлами (значно більшими "
"за самі двійкові файли). Як наслідок, офіційні двійкові файли наразі не "
"містять символів налагодження. Це означає, що вам потрібно самостійно "
"скомпілювати Godot, щоб мати доступ до символів налагодження."

msgid ""
"When using ``debug_symbols=yes``, you can also use "
"``separate_debug_symbols=yes`` to put debug information in a separate file "
"with a ``.debug`` suffix. This allows distributing both files independently. "
"Note that on Windows, when compiling with MSVC, debugging information is "
"*always* written to a separate ``.pdb`` file regardless of "
"``separate_debug_symbols``."
msgstr ""
"Використовуючи ``debug_symbols=yes``, ви також можете використовувати "
"``separate_debug_symbols=yes``, щоб помістити інформацію про налагодження в "
"окремий файл із суфіксом ``.debug``. Це дозволяє розповсюджувати обидва "
"файли окремо. Зауважте, що в Windows під час компіляції за допомогою MSVC "
"інформація про налагодження *завжди* записується в окремий файл ``.pdb`` "
"незалежно від ``separate_debug_symbols``."

msgid ""
"Use the ``strip <path/to/binary>`` command to remove debugging symbols from "
"a binary you've already compiled."
msgstr ""
"Використовуйте команду ``strip <path/to/binary>``, щоб видалити символи "
"налагодження з двійкового файлу, який ви вже зібрали."

msgid "Optimization level"
msgstr "Рівень оптимізації"

msgid "Several compiler optimization levels can be chosen from:"
msgstr "Можна вибрати кілька рівнів оптимізації компілятора:"

msgid ""
"``optimize=speed_trace`` *(default when targeting non-Web platforms)*: "
"Favors execution speed at the cost of larger binary size. Optimizations may "
"sometimes negatively impact debugger usage (stack traces may be less "
"accurate. If this occurs to you, use ``optimize=debug`` instead."
msgstr ""
"``optimize=speed_trace`` *(за умовчанням, якщо націлено на не-веб-"
"платформи)*: надає перевагу швидкості виконання за рахунок більшого "
"двійкового розміру. Оптимізація іноді може негативно вплинути на "
"використання налагоджувача (трасування стека може бути менш точним. Якщо це "
"станеться з вами, використовуйте натомість ``optimize=debug``)."

msgid ""
"``optimize=speed``: Favors even more execution speed, at the cost of even "
"larger binary size compared to ``optimize=speed_trace``. Even less friendly "
"to debugging compared to ``optimize=debug``, as this uses the most "
"aggressive optimizations available."
msgstr ""
"``optimize=speed``: надає перевагу навіть вищій швидкості виконання за "
"рахунок ще більшого двійкового розміру порівняно з ``optimize=speed_trace``. "
"Ще менш зручний для налагодження порівняно з ``optimize=debug``, оскільки "
"тут використовуються найагресивніші доступні оптимізації."

msgid ""
"``optimize=size`` *(default when targeting the Web platform)*: Favors small "
"binaries at the cost of slower execution speed."
msgstr ""
"``optimize=size`` *(за замовчуванням, якщо націлено на веб-платформу)*: "
"надає перевагу невеликим двійковим файлам ціною меншої швидкості виконання."

msgid ""
"``optimize=debug``: Only enables optimizations that do not impact debugging "
"in any way. This results in faster binaries than ``optimize=none``, but "
"slower binaries than ``optimize=speed_trace``."
msgstr ""
"``optimize=debug``: вмикає лише оптимізацію, яка жодним чином не впливає на "
"налагодження. Це призводить до швидших двійкових файлів, ніж "
"``optimize=none``, але повільніших двійкових файлів, ніж "
"``optimize=speed_trace``."

msgid ""
"``optimize=none``: Do not perform any optimization. This provides the "
"fastest build times, but the slowest execution times."
msgstr ""
"``optimize=none``: не виконувати оптимізацію. Це забезпечує найшвидший час "
"створення, але найповільніший час виконання."

msgid ""
"``optimize=custom`` *(advanced users only)*: Do not pass optimization "
"arguments to the C/C++ compilers. You will have to pass arguments manually "
"using the ``cflags``, ``ccflags`` and ``cxxflags`` SCons options."
msgstr ""
"``optimize=custom`` *(тільки для досвідчених користувачів)*: не передавати "
"аргументи оптимізації компіляторам C/C++. Вам доведеться передавати "
"аргументи вручну за допомогою параметрів ``cflags``, ``ccflags`` і "
"``cxxflags`` SCons."

msgid "Architecture"
msgstr "Архітектура"

msgid ""
"The ``arch`` option is meant to control the CPU or OS version intended to "
"run the binaries. It is focused mostly on desktop platforms and ignored "
"everywhere else."
msgstr ""
"Параметр ``arch`` призначений для керування версією ЦП або ОС, призначеною "
"для запуску двійкових файлів. Він зосереджений переважно на настільних "
"платформах і ігнорується скрізь."

msgid ""
"Supported values for the ``arch`` option are **auto**, **x86_32**, "
"**x86_64**, **arm32**, **arm64**, **rv64**, **ppc32**, **ppc64** and "
"**wasm32**."
msgstr ""
"Підтримувані значення для параметра ``arch``: **auto**, **x86_32**, "
"**x86_64**, **arm32**, **arm64**, **rv64**, **ppc32 **, **ppc64** і "
"**wasm32**."

msgid ""
"This flag appends the value of ``arch`` to resulting binaries when "
"relevant.  The default value ``arch=auto`` detects the architecture that "
"matches the host platform."
msgstr ""
"Цей прапорець додає значення ``arch`` до отриманих двійкових файлів, якщо це "
"необхідно. Значення за замовчуванням ``arch=auto`` визначає архітектуру, яка "
"відповідає хост-платформі."

msgid "Custom modules"
msgstr "Спеціальні модулі"

msgid ""
"It's possible to compile modules residing outside of Godot's directory tree, "
"along with the built-in modules."
msgstr ""
"Можна скомпілювати модулі, що знаходяться поза деревом каталогів Godot, "
"разом із вбудованими модулями."

msgid ""
"A ``custom_modules`` build option can be passed to the command line before "
"compiling. The option represents a comma-separated list of directory paths "
"containing a collection of independent C++ modules that can be seen as C++ "
"packages, just like the built-in ``modules/`` directory."
msgstr ""
"Параметр збірки ``custom_modules`` можна передати в командний рядок перед "
"компіляцією. Параметр представляє розділений комами список шляхів до "
"каталогу, що містить колекцію незалежних модулів C++, які можна розглядати "
"як пакети C++, як і вбудований каталог ``modules/``."

msgid ""
"For instance, it's possible to provide both relative, absolute, and user "
"directory paths containing such modules:"
msgstr ""
"Наприклад, можна надати як відносний, абсолютний шлях, так і шлях до "
"каталогу користувача, що містить такі модулі:"

msgid ""
"If there's any custom module with the exact directory name as a built-in "
"module, the engine will only compile the custom one. This logic can be used "
"to override built-in module implementations."
msgstr ""
"Якщо є будь-який настроюваний модуль із точною назвою каталогу як вбудований "
"модуль, система скомпілює лише настроюваний модуль. Цю логіку можна "
"використовувати для заміни реалізацій вбудованих модулів."

msgid ":ref:`doc_custom_modules_in_cpp`"
msgstr ":ref:`doc_custom_modules_in_cpp`"

msgid "Cleaning generated files"
msgstr "Очищення створених файлів"

msgid ""
"Sometimes, you may encounter an error due to generated files being present. "
"You can remove them by using ``scons --clean <options>``, where "
"``<options>`` is the list of build options you've used to build Godot "
"previously."
msgstr ""
"Іноді ви можете зіткнутися з помилкою через наявність згенерованих файлів. "
"Ви можете видалити їх за допомогою ``scons --clean <options>``, де "
"``<options>`` це список параметрів побудови, які ви використовували для "
"створення Godot раніше."

msgid ""
"Alternatively, you can use ``git clean -fixd`` which will clean build "
"artifacts for all platforms and configurations. Beware, as this will remove "
"all untracked and ignored files in the repository. Don't run this command if "
"you have uncommitted work!"
msgstr ""
"Крім того, ви можете використовувати ``git clean -fixd``, який очистить "
"артефакти збірки для всіх платформ і конфігурацій. Будьте обережні, оскільки "
"це видалить усі невідстежувані та проігноровані файли зі сховища. Не "
"запускайте цю команду, якщо у вас є незакріплена робота!"

msgid "Other build options"
msgstr "Інші параметри збирання"

msgid ""
"There are several other build options that you can use to configure the way "
"Godot should be built (compiler, debug options, etc.) as well as the "
"features to include/disable."
msgstr ""
"Існує кілька інших параметрів збірки, які ви можете використовувати, щоб "
"налаштувати спосіб збирання Godot (компілятор, параметри налагодження тощо), "
"а також функції, які потрібно включити/вимкнути."

msgid ""
"Check the output of ``scons --help`` for details about each option for the "
"version you are willing to compile."
msgstr ""
"Перевірте висновок ``scons --help``, щоб дізнатися більше про кожну опцію "
"для версії, яку ви бажаєте скомпілювати."

msgid "Overriding the build options"
msgstr "Перевизначення параметрів збірки"

msgid "Using a file"
msgstr "Використання файлу"

msgid ""
"The default ``custom.py`` file can be created at the root of the Godot "
"Engine source to initialize any SCons build options passed via the command "
"line:"
msgstr ""
"Файл ``custom.py`` за замовчуванням можна створити в корені вихідного коду "
"Godot Engine для ініціалізації будь-яких параметрів збірки SCons, переданих "
"через командний рядок:"

msgid ""
"You can also disable some of the builtin modules before compiling, saving "
"some time it takes to build the engine. See :ref:`doc_optimizing_for_size` "
"page for more details."
msgstr ""
"Ви також можете вимкнути деякі вбудовані модулі перед компіляцією, "
"заощаджуючи час, необхідний для збирання механізму. Додаткову інформацію "
"див. на сторінці :ref:`doc_optimizing_for_size`."

msgid ""
"You can use the online `Godot build options generator <https://godot-build-"
"options-generator.github.io/>`__ to generate a ``custom.py`` file containing "
"SCons options. You can then save this file and place it at the root of your "
"Godot source directory."
msgstr ""
"Ви можете використати онлайн-генератор параметрів збірки Godot <https://"
"godot-build-options-generator.github.io/>`__, щоб створити файл ``custom."
"py``, що містить параметри SCons. Потім ви можете зберегти цей файл і "
"розмістити його в корені вихідного каталогу Godot."

msgid ""
"Another custom file can be specified explicitly with the ``profile`` command "
"line option, both overriding the default build configuration:"
msgstr ""
"Інший спеціальний файл можна вказати явно за допомогою параметра командного "
"рядка ``profile``, обидва замінюють конфігурацію збірки за замовчуванням:"

msgid ""
"Build options set from the file can be overridden by the command line "
"options."
msgstr ""
"Параметри збірки, встановлені з файлу, можуть бути перевизначені параметрами "
"командного рядка."

msgid "It's also possible to override the options conditionally:"
msgstr "Також можна умовно змінити параметри:"

msgid "Using the SCONSFLAGS"
msgstr "Використання SCONSFLAGS"

msgid ""
"``SCONSFLAGS`` is an environment variable which is used by the SCons to set "
"the options automatically without having to supply them via the command line."
msgstr ""
"``SCONSFLAGS`` — це змінна середовища, яка використовується SCons для "
"автоматичного встановлення параметрів без необхідності вказувати їх через "
"командний рядок."

msgid ""
"For instance, you may want to force a number of CPU threads with the "
"aforementioned ``-j`` option for all future builds:"
msgstr ""
"Наприклад, ви можете захотіти примусово використовувати кілька потоків "
"процесора за допомогою вищезгаданого параметра ``-j`` для всіх майбутніх "
"збірок:"

msgid "SCU (single compilation unit) build"
msgstr "Збірка SCU (один блок компіляції)"

msgid ""
"Regular builds tend to be bottlenecked by including large numbers of headers "
"in each compilation translation unit. Primarily to speed up development "
"(rather than for production builds), Godot offers a \"single compilation "
"unit\" build (aka \"Unity / Jumbo\" build)."
msgstr ""
"Звичайні збірки, як правило, є вузькими місцями, включаючи велику кількість "
"заголовків у кожну одиницю перекладу компіляції. В першу чергу для "
"прискорення розробки (а не для збірок виробництва), Godot пропонує збірку "
"«єдиного модуля компіляції» (така ж збірка «Unity / Jumbo»)."

msgid ""
"For the folders accelerated by this option, multiple ``.cpp`` files are "
"compiled in each translation unit, so headers can be shared between multiple "
"files, which can dramatically decrease build times."
msgstr ""
"Для папок, прискорених за допомогою цього параметра, кілька файлів ``.cpp`` "
"компілюються в кожну одиницю перекладу, тому заголовки можуть бути спільними "
"для кількох файлів, що може значно скоротити час створення."

msgid "To perform an SCU build, use the ``scu_build=yes`` SCons option."
msgstr ""
"Щоб виконати збірку SCU, використовуйте параметр SCons ``scu_build=yes``."

msgid ""
"When developing a Pull Request using SCU builds, be sure to make a regular "
"build prior to submitting the PR. This is because SCU builds by nature "
"include headers from earlier ``.cpp`` files in the translation unit, "
"therefore won't catch all the includes you will need in a regular build. The "
"CI will catch these errors but it will usually be faster to catch them on a "
"local build on your machine."
msgstr ""
"Розробляючи Pull Request за допомогою збірок SCU, обов’язково зробіть "
"регулярну збірку перед подачею PR. Це пояснюється тим, що збірки SCU за "
"своєю природою включають заголовки з попередніх файлів ``.cpp`` в одиниці "
"перекладу, тому не вловлюють усі включення, які вам знадобляться у звичайній "
"збірці. КІ виловить ці помилки, але зазвичай це буде швидше виявити їх у "
"локальній збірці на вашій машині."

msgid "Export templates"
msgstr "Шаблони експорту"

msgid ""
"Official export templates are downloaded from the Godot Engine site: "
"`godotengine.org <https://godotengine.org/>`__. However, you might want to "
"build them yourself (in case you want newer ones, you are using custom "
"modules, or simply don't trust your own shadow)."
msgstr ""
"Офіційні шаблони експорту завантажуються з сайту Godot Engine: `godotengine."
"org <https://godotengine.org/>`__. Однак ви можете створити їх самостійно "
"(якщо вам потрібні новіші, ви використовуєте власні модулі або просто не "
"довіряєте власній тіні)."

msgid ""
"If you download the official export templates package and unzip it, you will "
"notice that most files are optimized binaries or packages for each platform:"
msgstr ""
"Якщо ви завантажите офіційний пакет шаблонів експорту та розпакуєте його, ви "
"помітите, що більшість файлів є оптимізованими двійковими файлами або "
"пакетами для кожної платформи:"

msgid ""
"To create those yourself, follow the instructions detailed for each platform "
"in this same tutorial section. Each platform explains how to create its own "
"template."
msgstr ""
"Щоб створити їх самостійно, дотримуйтесь інструкцій, докладних для кожної "
"платформи в тому самому розділі підручника. Кожна платформа пояснює, як "
"створити власний шаблон."

msgid ""
"The ``version.txt`` file should contain the corresponding Godot version "
"identifier. This file is used to install export templates in a version-"
"specific directory to avoid conflicts. For instance, if you are building "
"export templates for Godot 3.1.1, ``version.txt`` should contain ``3.1.1."
"stable`` on the first line (and nothing else). This version identifier is "
"based on the ``major``, ``minor``, ``patch`` (if present) and ``status`` "
"lines of the `version.py file in the Godot Git repository <https://github."
"com/godotengine/godot/blob/master/version.py>`__."
msgstr ""
"Файл ``version.txt`` має містити відповідний ідентифікатор версії Godot. Цей "
"файл використовується для встановлення шаблонів експорту в каталог певної "
"версії, щоб уникнути конфліктів. Наприклад, якщо ви створюєте шаблони "
"експорту для Godot 3.1.1, ``version.txt`` має містити ``3.1.1.stable`` у "
"першому рядку (і нічого більше). Цей ідентифікатор версії базується на "
"рядках ``major``, ``minor``, ``patch`` (якщо є) і ``status`` файлу `version."
"py у сховищі Godot Git <https: //github.com/godotengine/godot/blob/master/"
"version.py>`__."

msgid ""
"If you are developing for multiple platforms, macOS is definitely the most "
"convenient host platform for cross-compilation, since you can cross-compile "
"for every target. Linux and Windows come in second place, but Linux has the "
"advantage of being the easier platform to set this up."
msgstr ""
"Якщо ви розробляєте для кількох платформ, macOS, безперечно, є найзручнішою "
"хост-платформою для крос-компіляції, оскільки ви можете крос-компілювати для "
"кожної цілі. Linux і Windows займають друге місце, але Linux має перевагу в "
"тому, що є простішою платформою для налаштування."
