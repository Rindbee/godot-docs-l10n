#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Linux, \\*BSD"
msgstr "Компіляція для Linux, \\*BSD"

msgid ""
"This page describes how to compile Linux editor and export template binaries "
"from source. If you're looking to export your project to Linux instead, "
"read :ref:`doc_exporting_for_linux`."
msgstr ""
"На цій сторінці описано, як скомпілювати редактор Linux і експортувати "
"двійкові файли шаблону з джерела. Якщо ви натомість хочете експортувати свій "
"проект у Linux, прочитайте :ref:`doc_exporting_for_linux`."

msgid "Requirements"
msgstr "Вимоги"

msgid ""
"For compiling under Linux or other Unix variants, the following is required:"
msgstr ""
"Для того щоб зібрати проєкт під Linux чи який-небудь інший вид Unix системи, "
"вам знадобляться:"

msgid "GCC 9+ or Clang 6+."
msgstr "GCC 9+ або Clang 6+."

msgid "`Python 3.6+ <https://www.python.org/downloads/>`_."
msgstr "`Python 3.6+ <https://www.python.org/downloads/>`_."

msgid "`SCons 3.1.2+ <https://scons.org/pages/download.html>`_ build system."
msgstr ""
"`SCons 3.1.2+ <https://scons.org/pages/download.html>`_ збірка системи."

msgid "pkg-config (used to detect the development libraries listed below)."
msgstr ""
"pkg-config (використовується для виявлення бібліотек розробки, перелічених "
"нижче)."

msgid "Development libraries:"
msgstr "Бібліотеки розробки:"

msgid "X11, Xcursor, Xinerama, Xi and XRandR."
msgstr "X11, Xcursor, Xinerama, Xi та XRandR."

msgid "Wayland and wayland-scanner."
msgstr "Wayland і Wayland-сканер."

msgid "Mesa."
msgstr "Меса."

msgid "ALSA."
msgstr "ALSA."

msgid "PulseAudio."
msgstr "Пульс Аудіо."

msgid "*Optional* - libudev (build with ``udev=yes``)."
msgstr "*За бажанням* - libudev (зберіть з параметром ``udev=yes``)."

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr ""
"Щоб отримати вихідний код Godot для компіляції, перегляньте :ref:"
"`doc_getting_source`."

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"Для загального огляду використання SCons для Godot див. :ref:"
"`doc_introduction_to_the_buildsystem`."

msgid "Distro-specific one-liners"
msgstr "Команди для різних дистрибутивів"

msgid "Alpine Linux"
msgstr "Alpine Linux"

msgid "Arch Linux"
msgstr "Arch Linux"

msgid "Debian/Ubuntu"
msgstr "Debian/Ubuntu"

msgid "Fedora"
msgstr "Fedora"

msgid "FreeBSD"
msgstr "freeBSD"

msgid "Gentoo"
msgstr "Gentoo"

msgid "Mageia"
msgstr "mageia"

msgid "NetBSD"
msgstr "netBSD"

msgid "For audio support, you can optionally install ``pulseaudio``."
msgstr ""
"Для забезпечення підтримки звуку ви, якщо хочете, можете встановити "
"``pulseaudio``."

msgid "OpenBSD"
msgstr "Відкритий БСД"

msgid "openSUSE"
msgstr "openSUSE"

msgid "Solus"
msgstr "solus"

msgid "Compiling"
msgstr "Компілювання"

msgid ""
"Start a terminal, go to the root dir of the engine source code and type:"
msgstr ""
"Відкрийте термінал, перейдіть до кореневої директорії проєкту та введіть:"

msgid ""
"Prior to Godot 4.0, the Linux/\\*BSD target was called ``x11`` instead of "
"``linuxbsd``. If you are looking to compile Godot 3.x, make sure to use the "
"`3.x branch of this documentation <https://docs.godotengine.org/en/3.6/"
"development/compiling/compiling_for_x11.html>`__."
msgstr ""
"До Godot 4.0 ціль Linux/\\*BSD називалася ``x11`` замість ``linuxbsd``. Якщо "
"ви хочете скомпілювати Godot 3.x, обов’язково використовуйте гілку 3.x цієї "
"документації <https://docs.godotengine.org/en/3.6/development/compiling/"
"compiling_for_x11.html>`__."

msgid ""
"If all goes well, the resulting binary executable will be placed in the "
"\"bin\" subdirectory. This executable file contains the whole engine and "
"runs without any dependencies. Executing it will bring up the Project "
"Manager."
msgstr ""
"Якщо все піде добре, отриманий двійковий виконуваний файл буде розміщено в "
"підкаталозі \"bin\". Цей виконуваний файл містить весь механізм і працює без "
"будь-яких залежностей. Після його виконання з’явиться менеджер проекту."

msgid "If you wish to compile using Clang rather than GCC, use this command:"
msgstr ""
"Якщо ж вам хочеться зібрати проєкт використовуючи Clang а не GCC, то "
"використайте команду:"

msgid ""
"Using Clang appears to be a requirement for OpenBSD, otherwise fonts would "
"not build. For RISC-V architecture devices, use the Clang compiler instead "
"of the GCC compiler."
msgstr ""
"Використання Clang є обов’язковою умовою для OpenBSD, інакше шрифти не "
"збиратимуться. Для пристроїв з архітектурою RISC-V використовуйте компілятор "
"Clang замість компілятора GCC."

msgid ""
"If you are compiling Godot for production use, you can make the final "
"executable smaller and faster by adding the SCons option ``production=yes``. "
"This enables additional compiler optimizations and link-time optimization."
msgstr ""
"Якщо ви компілюєте Godot для використання у виробництві, ви можете зробити "
"кінцевий виконуваний файл меншим і швидшим, додавши опцію SCons "
"``production=yes``. Це дозволяє додатково оптимізувати компілятор і "
"оптимізувати час зв’язку."

msgid ""
"LTO takes some time to run and requires about 7 GB of available RAM while "
"compiling. If you're running out of memory with the above option, use "
"``production=yes lto=none`` or ``production=yes lto=thin`` for a lightweight "
"but less effective form of LTO."
msgstr ""
"LTO потребує деякий час для запуску та вимагає близько 7 ГБ доступної "
"оперативної пам’яті під час компіляції. Якщо вам не вистачає пам’яті з "
"наведеним вище параметром, використовуйте ``production=yes lto=none`` або "
"``production=yes lto=thin`` для легкої, але менш ефективної форми LTO."

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"Якщо ви хочете використовувати окремі параметри редактора для власних збірок "
"Godot та офіційних випусків, ви можете ввімкнути :ref:"
"`doc_data_paths_self_contained_mode`, створивши файл під назвою ``._sc_`` "
"або ``_sc_`` у ``bin/`` папка."

msgid "Running a headless/server build"
msgstr "Запуск безголової/серверної збірки"

msgid ""
"To run in *headless* mode which provides editor functionality to export "
"projects in an automated manner, use the normal build::"
msgstr ""
"Щоб працювати в режимі *headless*, який надає функції редактора для "
"автоматичного експорту проектів, використовуйте звичайну збірку::"

msgid "And then use the ``--headless`` command line argument::"
msgstr "А потім скористайтеся аргументом командного рядка ``--headless``::"

msgid ""
"To compile a debug *server* build which can be used with :ref:`remote "
"debugging tools <doc_command_line_tutorial>`, use::"
msgstr ""
"Щоб зібрати *серверну* версію, яку можна використати зі :ref:`сторонніми "
"інструментами дебагу <doc_command_line_tutorial>`, скористайтесь:"

msgid ""
"To compile a *server* build which is optimized to run dedicated game "
"servers, use::"
msgstr ""
"Щоб зібрати *серверну* версію, оптимізовану для запуску ігрових серверів, "
"скористайтесь:"

msgid "Building export templates"
msgstr "Збірка шаблонів експорту"

msgid ""
"Linux binaries usually won't run on distributions that are older than the "
"distribution they were built on. If you wish to distribute binaries that "
"work on most distributions, you should build them on an old distribution "
"such as Ubuntu 16.04. You can use a virtual machine or a container to set up "
"a suitable build environment."
msgstr ""
"Зазвичай, програми для Linux не запускаються на дистрибутивах, старіших ніж "
"той, на якому вони побудовані. Якщо ви хочете мати змогу розповсюджувати "
"свою збірку серед більшости дистрибутивів, вам варто зібрати програму на "
"старій версії ОС, на зразок Ubuntu 16.04. Ви можете скористатись "
"віртуальними машинами чи контейнерами щоб підготувати стабільне середовище "
"для збірки."

msgid ""
"To build Linux or \\*BSD export templates, run the build system with the "
"following parameters:"
msgstr ""
"Щоб створити шаблони експорту Linux або \\*BSD, запустіть систему збирання з "
"такими параметрами:"

msgid "(32 bits)"
msgstr "(32 біт)"

msgid "(64 bits)"
msgstr "(64 біт)"

msgid ""
"Note that cross-compiling for the opposite bits (64/32) as your host "
"platform is not always straight-forward and might need a chroot environment."
msgstr ""
"Візьміть до уваги: збірка для протилежної платформи (64/32) може бути "
"складним завданням, та потребувати входу в середовище chroot."

msgid ""
"To create standard export templates, the resulting files in the ``bin/`` "
"folder must be copied to:"
msgstr ""
"Щоб створити стандартні шаблони експорту, отримані файли в папці ``bin/`` "
"необхідно скопіювати до:"

msgid ""
"and named like this (even for \\*BSD which is seen as \"Linux/X11\" by "
"Godot):"
msgstr ""
"і має таку назву (навіть для \\*BSD, який Годо розглядає як «Linux/X11»):"

msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your binaries as custom export templates "
"here:"
msgstr ""
"А якщо ви пишете власні модулі чи код на C++ то вам, натомість, краще обрати "
"ваші шаблони експорту тут:"

msgid ""
"You don't even need to copy them, you can just reference the resulting files "
"in the ``bin/`` directory of your Godot source folder, so the next time you "
"build, you automatically have the custom templates referenced."
msgstr ""
"Вам навіть не потрібно копіювати їх файли, достатньо просто вказати їх в "
"підтеці ``bin/`` з теки, де знаходиться код Godot, щоб наступного разу, при "
"збірці, ваші шаблони будуть додані автоматично."

msgid "Using Clang and LLD for faster development"
msgstr "Використання Clang та LLD для пришвидшення розробки"

msgid ""
"You can also use Clang and LLD to build Godot. This has two upsides compared "
"to the default GCC + GNU ld setup:"
msgstr ""
"Ви можете збудувати Godot з Clang та LLD. Вони мають пару переваг у "
"порівнянні зі стандартною зв'язкою GCC + GNU ld:"

msgid ""
"LLD links Godot significantly faster compared to GNU ld or gold. This leads "
"to faster iteration times."
msgstr ""
"LLD збирає Godot значно швидше у порівнянні з to GNU ld чи gold. Таким чином "
"збирання проходить швидшими ітераціями."

msgid "Clang tends to give more useful error messages compared to GCC."
msgstr "Clang дає корисніші повідомлення про помилки ніж GCC."

msgid ""
"To do so, install Clang and the ``lld`` package from your distribution's "
"package manager then use the following SCons command::"
msgstr ""
"Щоб це зробити, встановіть Clang та пакет ``lld`` з вашого пакетного "
"менеджера та використайте їх в наступній команді:"

msgid ""
"After the build is completed, a new binary with a ``.llvm`` suffix will be "
"created in the ``bin/`` folder."
msgstr ""
"Щойно побудова буде завершена, в теці ``bin/`` буде створений новий бінарний "
"файл із суфіксом ``.llvm``."

msgid ""
"It's still recommended to use GCC for production builds as they can be "
"compiled using link-time optimization, making the resulting binaries smaller "
"and faster."
msgstr ""
"Але ми рекомендуємо використовувати GCC для фінальної збірки, так як він дає "
"змогу її оптимізувати: зробити кінцевий бінарний файл меншим та швидшим."

msgid "If this error occurs::"
msgstr "Якщо виникає ця помилка:"

msgid "There are two solutions:"
msgstr "Є два рішення:"

msgid "In your SCons command, add the parameter ``use_static_cpp=no``."
msgstr "У вашій команді SCons додайте параметр ``use_static_cpp=no``."

msgid ""
"Follow `these instructions <https://github.com/ivmai/"
"libatomic_ops#installation-and-usage>`__ to configure, build, and install "
"``libatomic_ops``. Then, copy ``/usr/lib/libatomic_ops.a`` to ``/usr/lib/"
"libatomic.a``, or create a soft link to ``libatomic_ops`` by command ``ln -"
"s /usr/lib/libatomic_ops.a /usr/lib/libatomic.a``. The soft link can ensure "
"the latest ``libatomic_ops`` will be used without the need to copy it every "
"time when it is updated."
msgstr ""
"Дотримуйтеся `цих інструкцій <https://github.com/ivmai/"
"libatomic_ops#installation-and-usage>`__, щоб налаштувати, створити та "
"встановити ``libatomic_ops``. Потім скопіюйте ``/usr/lib/libatomic_ops.a`` "
"до ``/usr/lib/libatomic.a`` або створіть програмне посилання на "
"``libatomic_ops`` командою ``ln -s /usr/ lib/libatomic_ops.a /usr/lib/"
"libatomic.a``. М'яке посилання може гарантувати, що останній "
"``libatomic_ops`` буде використовуватися без необхідності копіювати його "
"кожного разу, коли він оновлюється."

msgid "Using mold for faster development"
msgstr "Використання цвілі для швидшого розвитку"

msgid ""
"For even faster linking compared to LLD, you can use `mold <https://github."
"com/rui314/mold>`__. mold can be used with either GCC or Clang."
msgstr ""
"Для ще швидшого зв’язування порівняно з LLD ви можете використовувати `mold "
"<https://github.com/rui314/mold>`__. mold можна використовувати з GCC або "
"Clang."

msgid ""
"As of January 2023, mold is not readily available in Linux distribution "
"repositories, so you will have to install its binaries manually."
msgstr ""
"Станом на січень 2023 року mold не доступний у сховищах дистрибутивів Linux, "
"тому вам доведеться інсталювати його двійкові файли вручну."

msgid ""
"Download mold binaries from its `releases page <https://github.com/rui314/"
"mold/releases/latest>`__."
msgstr ""
"Завантажте двійкові файли mold зі сторінки випусків <https://github.com/"
"rui314/mold/releases/latest>`__."

msgid ""
"Extract the ``.tar.gz`` file, then move the extracted folder to a location "
"such as ``.local/share/mold``."
msgstr ""
"Розпакуйте файл ``.tar.gz``, а потім перемістіть видобуту папку в таке "
"розташування, як ``.local/share/mold``."

msgid ""
"Add ``$HOME/.local/share/mold/bin`` to your user's ``PATH`` environment "
"variable. For example, you can add the following line at the end of your "
"``$HOME/.bash_profile`` file:"
msgstr ""
"Додайте ``$HOME/.local/share/mold/bin`` до змінної середовища вашого "
"користувача ``PATH``. Наприклад, ви можете додати такий рядок у кінці вашого "
"файлу ``$HOME/.bash_profile``:"

msgid ""
"Open a new terminal (or run ``source \"$HOME/.bash_profile\"``), then use "
"the following SCons command when compiling Godot::"
msgstr ""
"Відкрийте новий термінал (або запустіть ``source \"$HOME/.bash_profile\"``), "
"а потім використовуйте таку команду SCons під час компіляції Godot::"

msgid "Using system libraries for faster development"
msgstr "Використання системних бібліотек для прискорення розробки"

msgid ""
"`Godot bundles the source code of various third-party libraries. <https://"
"github.com/godotengine/godot/tree/master/thirdparty>`__ You can choose to "
"use system versions of third-party libraries instead. This makes the Godot "
"binary faster to link, as third-party libraries are dynamically linked. "
"Therefore, they don't need to be statically linked every time you build the "
"engine (even on small incremental changes)."
msgstr ""
"`Godot об’єднує вихідний код різних сторонніх бібліотек. <https://github.com/"
"godotengine/godot/tree/master/thirdparty>`__ Натомість ви можете "
"використовувати системні версії сторонніх бібліотек. Це робить двійковий "
"файл Godot швидшим для зв’язування, оскільки сторонні бібліотеки зв’язуються "
"динамічно. Таким чином, їх не потрібно статично пов’язувати кожного разу, "
"коли ви створюєте механізм (навіть при невеликих поступових змінах)."

msgid ""
"However, not all Linux distributions have packages for third-party libraries "
"available (or they may not be up-to-date)."
msgstr ""
"Однак не всі дистрибутиви Linux мають пакунки для бібліотек сторонніх "
"розробників (або вони можуть бути неоновленими)."

msgid ""
"Moving to system libraries can reduce linking times by several seconds on "
"slow CPUs, but it requires manual testing depending on your Linux "
"distribution. Also, you may not be able to use system libraries for "
"everything due to bugs in the system library packages (or in the build "
"system, as this feature is less tested)."
msgstr ""
"Перехід до системних бібліотек може скоротити час зв’язування на кілька "
"секунд на повільних процесорах, але це вимагає ручного тестування залежно "
"від вашого дистрибутива Linux. Крім того, можливо, ви не зможете "
"використовувати системні бібліотеки для всього через помилки в пакетах "
"системної бібліотеки (або в системі збірки, оскільки ця функція менш "
"перевірена)."

msgid ""
"After installing all required packages, use the following command to build "
"Godot:"
msgstr ""
"Після встановлення всіх необхідних пакетів скористайтеся такою командою, щоб "
"створити Godot:"

msgid ""
"You can view a list of all built-in libraries that have system alternatives "
"by running ``scons -h``, then looking for options starting with ``builtin_``."
msgstr ""
"Ви можете переглянути список усіх вбудованих бібліотек, які мають системні "
"альтернативи, запустивши ``scons -h``, а потім шукаючи параметри, що "
"починаються з ``builtin_``."

msgid ""
"When using system libraries, the resulting library is **not** portable "
"across Linux distributions anymore. Do not use this approach for creating "
"binaries you intend to distribute to others, unless you're creating a "
"package for a Linux distribution."
msgstr ""
"При використанні системних бібліотек отримана бібліотека більше **не** "
"переноситься між дистрибутивами Linux. Не використовуйте цей підхід для "
"створення двійкових файлів, які ви збираєтеся розповсюдити іншим, якщо ви не "
"створюєте пакет для дистрибутива Linux."
