#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Requirements"
msgstr "Вимоги"

msgid ""
"For compiling under Linux or other Unix variants, the following is required:"
msgstr ""
"Для того щоб зібрати проєкт під Linux чи який-небудь інший вид Unix системи, "
"вам знадобляться:"

msgid "Development libraries:"
msgstr "Бібліотеки розробки:"

msgid "PulseAudio."
msgstr "Пульс Аудіо."

msgid "*Optional* - libudev (build with ``udev=yes``)."
msgstr "*За бажанням* - libudev (зберіть з параметром ``udev=yes``)."

msgid "Distro-specific one-liners"
msgstr "Команди для різних дистрибутивів"

msgid "For audio support, you can optionally install ``pulseaudio``."
msgstr ""
"Для забезпечення підтримки звуку ви, якщо хочете, можете встановити "
"``pulseaudio``."

msgid "OpenBSD"
msgstr "Відкритий БСД"

msgid "Compiling"
msgstr "Компілювання"

msgid ""
"Start a terminal, go to the root dir of the engine source code and type:"
msgstr ""
"Відкрийте термінал, перейдіть до кореневої директорії проєкту та введіть:"

msgid "If you wish to compile using Clang rather than GCC, use this command:"
msgstr ""
"Якщо ж вам хочеться зібрати проєкт використовуючи Clang а не GCC, то "
"використайте команду:"

msgid ""
"To compile a debug *server* build which can be used with :ref:`remote "
"debugging tools <doc_command_line_tutorial>`, use::"
msgstr ""
"Щоб зібрати *серверну* версію, яку можна використати зі :ref:`сторонніми "
"інструментами дебагу <doc_command_line_tutorial>`, скористайтесь:"

msgid ""
"To compile a *server* build which is optimized to run dedicated game "
"servers, use::"
msgstr ""
"Щоб зібрати *серверну* версію, оптимізовану для запуску ігрових серверів, "
"скористайтесь:"

msgid "Building export templates"
msgstr "Збірка шаблонів експорту"

msgid ""
"Linux binaries usually won't run on distributions that are older than the "
"distribution they were built on. If you wish to distribute binaries that "
"work on most distributions, you should build them on an old distribution "
"such as Ubuntu 16.04. You can use a virtual machine or a container to set up "
"a suitable build environment."
msgstr ""
"Зазвичай, програми для Linux не запускаються на дистрибутивах, старіших ніж "
"той, на якому вони побудовані. Якщо ви хочете мати змогу розповсюджувати "
"свою збірку серед більшости дистрибутивів, вам варто зібрати програму на "
"старій версії ОС, на зразок Ubuntu 16.04. Ви можете скористатись "
"віртуальними машинами чи контейнерами щоб підготувати стабільне середовище "
"для збірки."

msgid "(32 bits)"
msgstr "(32 біт)"

msgid "(64 bits)"
msgstr "(64 біт)"

msgid ""
"Note that cross-compiling for the opposite bits (64/32) as your host "
"platform is not always straight-forward and might need a chroot environment."
msgstr ""
"Візьміть до уваги: збірка для протилежної платформи (64/32) може бути "
"складним завданням, та потребувати входу в середовище chroot."

msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your binaries as custom export templates "
"here:"
msgstr ""
"А якщо ви пишете власні модулі чи код на C++ то вам, натомість, краще обрати "
"ваші шаблони експорту тут:"

msgid ""
"You don't even need to copy them, you can just reference the resulting files "
"in the ``bin/`` directory of your Godot source folder, so the next time you "
"build, you automatically have the custom templates referenced."
msgstr ""
"Вам навіть не потрібно копіювати їх файли, достатньо просто вказати їх в "
"підтеці ``bin/``з теки, де знаходиться код Godot, щоб наступного разу, при "
"збірці, ваші шаблони будуть додані автоматично."

msgid "Using Clang and LLD for faster development"
msgstr "Використання Clang та LLD для пришвидшення розробки"

msgid ""
"You can also use Clang and LLD to build Godot. This has two upsides compared "
"to the default GCC + GNU ld setup:"
msgstr ""
"Ви можете збудувати Godot з Clang та LLD. Вони мають пару переваг у "
"порівнянні зі стандартною зв'язкою GCC + GNU ld:"

msgid ""
"LLD links Godot significantly faster compared to GNU ld or gold. This leads "
"to faster iteration times."
msgstr ""
"LLD збирає Godot значно швидше у порівнянні з to GNU ld чи gold. Таким чином "
"збирання проходить швидшими ітераціями."

msgid "Clang tends to give more useful error messages compared to GCC."
msgstr "Clang дає корисніші повідомлення про помилки ніж GCC."

msgid ""
"To do so, install Clang and the ``lld`` package from your distribution's "
"package manager then use the following SCons command::"
msgstr ""
"Щоб це зробити, встановіть Clang та пакет ``lld`` з вашого пакетного "
"менеджера та використайте їх в наступній команді:"

msgid ""
"After the build is completed, a new binary with a ``.llvm`` suffix will be "
"created in the ``bin/`` folder."
msgstr ""
"Щойно побудова буде завершена, в теці ``bin/`` буде створений новий бінарний "
"файл із суфіксом ``.llvm``."

msgid ""
"It's still recommended to use GCC for production builds as they can be "
"compiled using link-time optimization, making the resulting binaries smaller "
"and faster."
msgstr ""
"Але ми рекомендуємо використовувати GCC для фінальної збірки, так як він дає "
"змогу її оптимізувати: зробити кінцевий бінарний файл меншим та швидшим."

msgid "**Fedora**"
msgstr "**Fedora**"

msgid "Translation status"
msgstr "Стан перекладу"
