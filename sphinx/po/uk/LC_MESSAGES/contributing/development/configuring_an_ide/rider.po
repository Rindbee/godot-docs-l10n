#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "JetBrains Rider"
msgstr "JetBrains Райдер"

msgid ""
"`JetBrains Rider <https://www.jetbrains.com/rider/>`_ is a commercial "
"`JetBrains <https://www.jetbrains.com/>`_ IDE for C# and C++ that uses the "
"same solution system as Visual Studio."
msgstr ""
"`JetBrains Rider <https://www.jetbrains.com/rider/>`_ — це комерційна IDE "
"`JetBrains <https://www.jetbrains.com/>`_ для C# і C++, яка використовує ту "
"саму систему рішень, що й Visual Studio."

msgid ""
"This documentation is for contributions to the game engine, and not using "
"JetBrains Rider as a C# or GDScript editor. To code C# or GDScript in an "
"external editor, see :ref:`the C# guide to configure an external editor "
"<doc_c_sharp_setup_external_editor>`."
msgstr ""
"Ця документація призначена для внеску в ігровий движок, а не для "
"використання JetBrains Rider як редактора C# або GDScript. Щоб закодувати C# "
"або GDScript у зовнішньому редакторі, перегляньте :ref:`the C# guide to "
"configure an external editor <doc_c_sharp_setup_external_editor>`."

msgid "Importing the project"
msgstr "Імпорт проекту"

msgid ""
"You will need to install `Python <https://www.python.org/>`_ in your "
"development environment along with `MinGW <https://www.mingw-w64.org/"
"downloads/>`_. You will also need the Visual Studio C++ Build Tools, which "
"you can install using the Visual Studio Installer. Ensure all dependencies "
"are installed before you continue to the next steps."
msgstr ""
"Вам потрібно буде встановити `Python <https://www.python.org/>`_ у вашому "
"середовищі розробки разом з `MinGW <https://www.mingw-w64.org/downloads/>`_. "
"Вам також знадобляться інструменти збірки Visual Studio C++, які можна "
"встановити за допомогою інсталятора Visual Studio. Перш ніж переходити до "
"наступних кроків, переконайтеся, що всі залежності встановлено."

msgid ""
"If you already use Visual Studio as your main IDE, you can use the same "
"solution file in Rider. Rider and Visual Studio use the same solution "
"format, so you can switch between the two IDEs without rebuilding the "
"solution file. Debug configurations need to be changed when going from one "
"IDE to another."
msgstr ""
"Якщо ви вже використовуєте Visual Studio як основну IDE, ви можете "
"використовувати той самий файл рішення в Rider. Rider і Visual Studio "
"використовують однаковий формат рішення, тому ви можете перемикатися між "
"двома IDE без перебудови файлу рішення. Конфігурації налагодження потрібно "
"змінювати під час переходу від однієї IDE до іншої."

msgid ""
"Rider requires a solution file to work on a C++ project. While Godot does "
"not come with a solution file, it can be generated using SCons."
msgstr ""
"Для роботи над проектом C++ Rider потрібен файл рішення. Хоча Godot не "
"постачається з файлом рішення, його можна створити за допомогою SCons."

msgid ""
"Navigate to the Godot root folder and open a Command Prompt or PowerShell "
"window."
msgstr ""
"Перейдіть до кореневої папки Godot і відкрийте вікно командного рядка або "
"PowerShell."

msgid "Copy, paste and run the next command to generate the solution."
msgstr ""
"Скопіюйте, вставте та виконайте наступну команду, щоб створити рішення."

msgid ""
"The ``vsproj`` parameter signals that you want Visual Studio solution "
"generated. The ``dev_build`` parameter makes sure the debug symbols are "
"included, allowing to e.g. step through code using breakpoints."
msgstr ""
"Параметр ``vsproj`` сигналізує про те, що ви хочете створити рішення Visual "
"Studio. Параметр ``dev_build`` забезпечує включення символів налагодження, "
"дозволяючи, наприклад, проходження коду за допомогою точок зупину."

msgid ""
"If you have Rider setup as your main IDE for .sln, you can now open the "
"project by double-clicking on the ``godot.sln`` in the project root or by "
"using the **Open** option inside of Rider."
msgstr ""
"Якщо у вас є налаштування Rider як основного IDE для .sln, тепер ви можете "
"відкрити проект, двічі клацнувши на ``godot.sln`` у корені проекту або "
"скориставшись опцією **Відкрити** всередині Rider."

msgid ""
"Rider could fail to build the solution. If that is the case, try running "
"`git clean -xdf` to remove all traces of the previous build artifacts and "
"regenerate the build files using the `scons` command again. Restarting the "
"terminal and your development environment may help."
msgstr ""
"Райдер міг не побудувати рішення. Якщо це так, спробуйте запустити `git "
"clean -xdf`, щоб видалити всі сліди попередніх артефактів збірки та знову "
"згенерувати файли збірки за допомогою команди `scons`. Перезапуск терміналу "
"та середовища розробки може допомогти."

msgid "Compiling and debugging the project"
msgstr "Компіляція та налагодження проекту"

msgid ""
"Rider comes with a built-in debugger that can be used to debug the Godot "
"project. You can launch the debugger by pressing the **Debug** icon at the "
"top of the screen, this only works for the Project manager, if you want to "
"debug the editor, you need to configure the debugger first."
msgstr ""
"Rider постачається з вбудованим налагоджувачем, який можна використовувати "
"для налагодження проекту Godot. Ви можете запустити налагоджувач, натиснувши "
"піктограму **Debug** у верхній частині екрана. Це працює лише для менеджера "
"проекту. Якщо ви хочете налагодити редактор, вам потрібно спочатку "
"налаштувати налагоджувач."

msgid ""
"Click on the **Godot > Edit Configurations** option at the top of the screen."
msgstr ""
"Натисніть опцію **Godot > Edit Configurations** у верхній частині екрана."

msgid "Ensure the following values for the C++ Project Run Configuration:"
msgstr ""
"Переконайтеся, що такі значення для конфігурації виконання проекту C++:"

msgid "Exe Path : ``$(LocalDebuggerCommand)``"
msgstr "Шлях до Exe: ``$(LocalDebuggerCommand)``"

msgid "Program Arguments: ``-e --path <path to the Godot project>``"
msgstr "Аргументи програми: ``-e --path <шлях до проекту Godot>``"

msgid "Working Directory: ``$(LocalDebuggerWorkingDirectory)``"
msgstr "Робочий каталог: ``$(LocalDebuggerWorkingDirectory)``"

msgid "Before Launch has a value of \"Build Project\""
msgstr "Перед запуском має значення «Створити проект»"

msgid ""
"This will tell the executable to debug the specified project without using "
"the project manager. Use the root path to the project folder, not "
"``project.godot`` file path."
msgstr ""
"Це вкаже виконуваному файлу налагодити вказаний проект без використання "
"менеджера проекту. Використовуйте кореневий шлях до папки проекту, а не шлях "
"до файлу ``project.godot``."

msgid "Finally click on \"Apply\" and \"OK\" to save the changes."
msgstr "Нарешті натисніть «Застосувати» та «ОК», щоб зберегти зміни."

msgid ""
"When you press the **Debug** icon at the top of the screen, JetBrains Rider "
"will launch the Godot editor with the debugger attached."
msgstr ""
"Коли ви натискаєте піктограму **Debug** у верхній частині екрана, JetBrains "
"Rider запустить редактор Godot із підключеним налагоджувачем."

msgid ""
"Alternatively you can use **Run > Attach to Process** to attach the debugger "
"to a running Godot instance."
msgstr ""
"Крім того, ви можете скористатися **Виконати > Приєднати до процесу**, щоб "
"приєднати налагоджувач до запущеного екземпляра Godot."

msgid ""
"You can find the Godot instance by searching for ``godot.editor`` and then "
"clicking ``Attach with LLDB``"
msgstr ""
"Ви можете знайти екземпляр Godot, виконавши пошук за ``godot.editor`` і "
"натиснувши ``Прикріпити за допомогою LLDB``"

msgid ""
"Please consult the `JetBrains Rider documentation <https://www.jetbrains.com/"
"rider/documentation/>`_ for any specific information about the JetBrains IDE."
msgstr ""
"Зверніться до `документації JetBrains Rider <https://www.jetbrains.com/rider/"
"documentation/>`_, щоб отримати будь-яку конкретну інформацію про JetBrains "
"IDE."
