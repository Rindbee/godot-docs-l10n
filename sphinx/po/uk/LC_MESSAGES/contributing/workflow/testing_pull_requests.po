#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Testing pull requests"
msgstr "Тестування тягових запитів"

msgid ""
"Many people are developing new features or fixing bugs on GitHub. To help "
"with engine development, you may be asked to test those pull requests with a "
"Godot build that includes code from the pull request in question."
msgstr ""
"Багато людей розробляють нові функції або виправляють помилки на GitHub. Щоб "
"допомогти з розробкою механізму, вас можуть попросити перевірити ці запити "
"на отримання за допомогою збірки Godot, яка містить код відповідного запиту."

msgid ""
"Thanks to GitHub Actions, all `pull requests <https://github.com/godotengine/"
"godot/pulls>`__ have continuous builds available. These builds let you try "
"out pull requests without having to compile anything from source."
msgstr ""
"Завдяки GitHub Actions усі запити на витягування <https://github.com/"
"godotengine/godot/pulls>`__ мають безперервні збірки. Ці збірки дозволяють "
"випробувати запити на витяг без необхідності компілювати що-небудь із "
"джерела."

msgid "Downloading a compiled build"
msgstr "Завантаження скомпільованої збірки"

msgid ""
"You can download pull request builds from GitHub Actions. Since only signed "
"in users may download builds directly from GitHub Actions, the procedure "
"varies depending on whether you have a GitHub account or not."
msgstr ""
"Ви можете завантажити збірки запитів на отримання з GitHub Actions. Оскільки "
"лише авторизовані користувачі можуть завантажувати збірки безпосередньо з "
"GitHub Actions, процедура залежить від того, чи є у вас обліковий запис "
"GitHub чи ні."

msgid ""
"Due to a GitHub Actions limitation, builds are only available for 90 days "
"after the pull request was last updated. If you still wish to try a pull "
"request locally, you can :ref:`compile the pull request branch from source "
"<doc_testing_pull_requests_compile>` instead."
msgstr ""
"Через обмеження GitHub Actions збірки доступні лише протягом 90 днів після "
"останнього оновлення запиту на отримання. Якщо ви все ще бажаєте спробувати "
"запит на витягування локально, ви можете натомість :ref:`компілювати гілку "
"запиту на витягування з джерела <doc_testing_pull_requests_compile>`."

msgid "If you have a GitHub account"
msgstr "Якщо у вас є обліковий запис GitHub"

msgid ""
"Open the pull request page. Click the **Checks** tab near the top of the "
"page:"
msgstr ""
"Відкрийте сторінку запиту на отримання. Натисніть вкладку **Чеки** у верхній "
"частині сторінки:"

msgid "Click the **Artifacts** dropdown on the right of the page:"
msgstr "Натисніть спадне меню **Артефакти** праворуч на сторінці:"

msgid ""
"In the dropdown, click the artifact's name to download it. Remember to "
"scroll if you cannot see the name of the platform you're looking for:"
msgstr ""
"У розкривному списку натисніть назву артефакту, щоб завантажити його. Не "
"забудьте прокрутити, якщо ви не бачите назву платформи, яку шукаєте:"

msgid ""
"Extract the ZIP archive then run the executable. Note that Windows and macOS "
"binaries are **not** code signed. This means you may have to bypass a "
"security warning before you can run the executable. On Windows, if you "
"frequently test pull request builds, it may be better to disable Windows "
"SmartScreen permanently in the Windows security settings. On macOS, see :ref:"
"`doc_running_on_macos` for instructions on bypassing Gatekeeper."
msgstr ""
"Розпакуйте ZIP-архів і запустіть виконуваний файл. Зауважте, що двійкові "
"файли Windows і macOS **не** підписані кодом. Це означає, що вам, можливо, "
"доведеться обійти попередження безпеки, перш ніж ви зможете запустити "
"виконуваний файл. У Windows, якщо ви часто тестуєте збірки запитів на "
"отримання, можливо, краще назавжди вимкнути Windows SmartScreen у "
"налаштуваннях безпеки Windows. У macOS перегляньте :ref:"
"`doc_running_on_macos` інструкції щодо обходу Gatekeeper."

msgid "If you don't have a GitHub account"
msgstr "Якщо у вас немає облікового запису GitHub"

msgid ""
"If you don't have a GitHub account and can't sign up for one, you can use "
"the third-party `nightly.link <https://nightly.link>`__ service to generate "
"a universal download link."
msgstr ""
"Якщо у вас немає облікового запису GitHub і ви не можете його зареєструвати, "
"ви можете скористатися сторонньою службою `nightly.link <https://nightly."
"link>`__, щоб створити універсальне посилання для завантаження."

msgid ""
"Open the pull request page. Click the *fork*'s branch name near the top of "
"the page:"
msgstr ""
"Відкрийте сторінку запиту на отримання. Натисніть назву гілки *fork* у "
"верхній частині сторінки:"

msgid ""
"Now that you are on the fork's branch page, click the ``.github`` folder at "
"the top of the file list. Then, click on the ``workflows`` folder (which is "
"inside the ``.github`` folder). Click the workflow file for the platform you "
"wish to download artifacts for. *After* clicking on the file (which opens "
"the file view), copy the page URL from your browser's address bar."
msgstr ""
"Тепер, коли ви перебуваєте на сторінці гілки форка, натисніть папку ``."
"github`` у верхній частині списку файлів. Потім клацніть папку ``workflows`` "
"(яка знаходиться всередині папки ``.github``). Клацніть файл робочого "
"процесу для платформи, для якої ви хочете завантажити артефакти. *Після* "
"натискання файлу (що відкриває перегляд файлу), скопіюйте URL-адресу "
"сторінки з адресного рядка браузера."

msgid ""
"Open the `nightly.link <https://nightly.link>`__ website and paste the URL "
"you just copied into the text field located below the heading **Paste a "
"GitHub link, get a nightly.link!**. After pasting the URL, click **Get "
"links** on the right. If the format of the URL you pasted is correct, you "
"should be presented with a page like this:"
msgstr ""
"Відкрийте веб-сайт `nightly.link <https://nightly.link>`__ і вставте URL-"
"адресу, яку ви щойно скопіювали, у текстове поле під заголовком **Вставте "
"посилання GitHub, отримайте nightly.link!**. Вставивши URL-адресу, натисніть "
"**Отримати посилання** праворуч. Якщо формат URL-адреси, який ви вставили, "
"правильний, вам має бути представлена така сторінка:"

msgid "Click the URL of the artifact you wish to download."
msgstr "Натисніть URL-адресу артефакту, який ви хочете завантажити."

msgid ""
"Extract the ZIP archive then run the executable. Note that Windows and macOS "
"binaries are not code signed. This means you may have to bypass a security "
"warning before you can run the executable. If you frequently test pull "
"request builds, it may be better to disable Windows SmartScreen or `disable "
"macOS Gatekeeper <https://disable-gatekeeper.github.io/>`__ permanently."
msgstr ""
"Розпакуйте ZIP-архів і запустіть виконуваний файл. Зауважте, що двійкові "
"файли Windows і macOS не підписані кодом. Це означає, що вам, можливо, "
"доведеться обійти попередження безпеки, перш ніж ви зможете запустити "
"виконуваний файл. Якщо ви часто тестуєте збірки запитів на підключення, "
"можливо, краще назавжди вимкнути Windows SmartScreen або `вимкнути macOS "
"Gatekeeper <https://disable-gatekeeper.github.io/>`__."

msgid "Compiling a pull request branch from source"
msgstr "Компіляція гілки запиту на отримання з джерела"

msgid ""
"This approach may be needed for pull requests that were last updated more "
"than 90 days ago, or to test on platforms and configurations that are not "
"supported by Godot's GitHub Actions setup."
msgstr ""
"Цей підхід може знадобитися для запитів на витягування, які востаннє "
"оновлювалися понад 90 днів тому, або для тестування на платформах і "
"конфігураціях, які не підтримуються налаштуваннями Godot GitHub Actions."

msgid "Downloading a zipped pull request branch"
msgstr "Завантаження заархівованої гілки запиту на отримання"

msgid ""
"Now that you are on the fork's branch page, click the green **Code** button "
"on the right of the page then choose **Download ZIP** in the dropdown:"
msgstr ""
"Тепер, коли ви перебуваєте на сторінці гілки форка, натисніть зелену кнопку "
"**Код** праворуч на сторінці, а потім виберіть **Завантажити ZIP** у "
"спадному списку:"

msgid ""
"Extract the ZIP archive and follow the :ref:`compiling <toc-devel-"
"compiling>` instructions for your operating system."
msgstr ""
"Розпакуйте ZIP-архів і дотримуйтесь інструкцій :ref:`compiling <toc-devel-"
"compiling>` для вашої операційної системи."

msgid "Checking out a pull request branch with git"
msgstr "Перевірка гілки запиту на отримання за допомогою git"

msgid "Alternatively, you can checkout the pull request directly with git:"
msgstr ""
"Крім того, ви можете перевірити запит на отримання безпосередньо за "
"допомогою git:"

msgid ""
"Open the pull request page. Note the pull request *number* (``PR_NUMBER``), "
"and the *branch name* (``BRANCH_NAME``), but without the user name."
msgstr ""
"Відкрийте сторінку запиту на отримання. Зверніть увагу на *номер* запиту на "
"отримання (``PR_NUMBER``) і *назву гілки* (``BRANCH_NAME``), але без імені "
"користувача."

msgid "Construct the command using this pattern:"
msgstr "Створіть команду за цим шаблоном:"

msgid "So for the pull request above, the actual command will be:"
msgstr "Отже, для наведеного вище запиту на витяг фактична команда буде такою:"

msgid "Once the pull request finishes downloading, checkout its branch:"
msgstr ""
"Після завершення завантаження запиту на отримання перевірте його гілку:"

msgid ""
"And follow the :ref:`compiling <toc-devel-compiling>` instructions for your "
"operating system."
msgstr ""
"Дотримуйтесь інструкцій :ref:`compiling <toc-devel-compiling>` для вашої "
"операційної системи."
