#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Theme type variations"
msgstr "Варіації типу теми"

msgid ""
"When designing a user interface there may be times when a :ref:`Control "
"<class_Control>` node needs to have a different look than what is normally "
"defined by a :ref:`Theme <class_Theme>`. Every control node has theme "
"property overrides, which allow you to redefine the styling for each "
"individual UI element."
msgstr ""
"Під час розробки інтерфейсу користувача можуть бути випадки, коли "
"вузол :ref:`Control <class_Control>` повинен мати вигляд, відмінний від "
"того, який зазвичай визначається :ref:`Theme <class_Theme>`. Кожен вузол "
"керування має перевизначення властивостей теми, які дозволяють вам "
"перевизначати стиль для кожного окремого елемента інтерфейсу користувача."

msgid ""
"This approach quickly becomes hard to manage, if you need to share the same "
"custom look between several controls. Imagine that you use gray, blue, and "
"red variants of :ref:`Button <class_Button>` throughout your project. "
"Setting it up every time you add a new button element to your interface is a "
"tedious task."
msgstr ""
"Таким підходом швидко стає важко керувати, якщо вам потрібно використовувати "
"один і той же настроюваний вигляд для кількох елементів керування. Уявіть, "
"що ви використовуєте сірий, синій і червоний варіанти :ref:`Button "
"<class_Button>` у своєму проекті. Налаштовувати його кожного разу, коли ви "
"додаєте новий елемент кнопки до свого інтерфейсу, є виснажливим завданням."

msgid ""
"To help with the organization and to better utilize the :ref:`power of "
"themes <doc_gui_skinning>` you can use theme type variations. These work "
"like normal theme types, but instead of being self-sufficient and standalone "
"they extend another, base type."
msgstr ""
"Щоб допомогти з організацією та краще використовувати :ref:`силу тем "
"<doc_gui_skinning>`, ви можете використовувати варіації типів тем. Вони "
"працюють як звичайні типи тем, але замість того, щоб бути самодостатніми та "
"автономними, вони розширюють інший, базовий тип."

msgid ""
"Following the previous example, your theme can have some styles, colors, and "
"fonts defined for the ``Button`` type, customizing the looks of every button "
"element in your UI. To then have a gray, red, or blue button you would "
"create a new type, e.g. ``GrayButton``, and mark it as a variation of the "
"base ``Button`` type."
msgstr ""
"Слідуючи попередньому прикладу, ваша тема може мати деякі стилі, кольори та "
"шрифти, визначені для типу ``Кнопка``, налаштовуючи зовнішній вигляд кожного "
"елемента кнопки у вашому інтерфейсі користувача. Щоб отримати сіру, червону "
"чи синю кнопку, ви повинні створити новий тип, наприклад. ``GrayButton`` і "
"позначте його як варіацію базового типу ``Button``."

msgid ""
"Type variations can replace some aspects of the base type, but keep others. "
"They can also define properties that the base style hasn't defined. For "
"example, your ``GrayButton`` can override the ``normal`` style from the base "
"``Button`` and add ``font_color`` that ``Button`` has never defined. The "
"control will use a combination of both types giving priority to the type "
"variation."
msgstr ""
"Варіації типу можуть замінити деякі аспекти базового типу, але зберегти "
"інші. Вони також можуть визначати властивості, які не визначені в базовому "
"стилі. Наприклад, ваша ``GrayButton`` може замінити ``звичайний`` стиль "
"базового ``Button`` і додати ``font_color``, який ``Button`` ніколи не "
"визначав. Елемент керування використовуватиме комбінацію обох типів, надаючи "
"пріоритет варіації типу."

msgid ""
"The way controls resolve what theme items they use from each type and each "
"theme is better described in the :ref:`Customizing a project "
"<doc_gui_theme_in_project>` section of the \"Introduction to GUI skinning\" "
"article."
msgstr ""
"Спосіб, яким елементи керування визначають, які елементи теми вони "
"використовують для кожного типу та кожної теми, краще описано в "
"розділі :ref:`Customizing a project <doc_gui_theme_in_project>` статті "
"\"Вступ до скінінгу графічного інтерфейсу\"."

msgid "Creating a type variation"
msgstr "Створення варіанту типу"

msgid ""
"To create a type variation open the theme editor, then click the plus icon "
"next to the **Type** dropdown on the right side of the editor. Type in what "
"you want to name your theme type variation in the text box, then click **Add "
"Type**."
msgstr ""
"Щоб створити варіант типу, відкрийте редактор теми, а потім клацніть значок "
"плюса поруч зі спадним меню **Тип** у правій частині редактора. Введіть у "
"текстове поле назву, яку ви хочете назвати для варіанту типу теми, а потім "
"натисніть **Додати тип**."

msgid ""
"Below the **Type** dropdown are the property tabs. Switch to the tab with a "
"wrench and screwdriver icon."
msgstr ""
"Під спадним меню **Тип** є вкладки властивостей. Перейдіть на вкладку зі "
"значком гайкового ключа та викрутки."

msgid ""
"Click on the plus icon next to the **Base Type** field. You can select the "
"base type there, which would typically be the name of a control node class "
"(e.g., ``Button``, ``Label``, etc). Type variations can also chain and "
"extend other type variations. This works in the same way control nodes "
"inherit styling of their base class. For example, ``CheckButton`` inherits "
"styles from ``Button`` because corresponding node types extend each other."
msgstr ""
"Натисніть значок плюса поруч із полем **Базовий тип**. Ви можете вибрати "
"базовий тип, який зазвичай буде назвою класу вузла керування (наприклад, "
"``Button``, ``Label`` тощо). Варіації типів також можуть об’єднувати та "
"розширювати інші варіації типів. Це працює так само, як керуючі вузли "
"успадковують стиль свого базового класу. Наприклад, ``CheckButton`` "
"успадковує стилі від ``Button``, оскільки відповідні типи вузлів розширюють "
"один одного."

msgid ""
"After you select the base type, you should now be able to see its properties "
"on the other tabs in the theme editor. You can edit them as usual."
msgstr ""
"Після вибору базового типу ви зможете побачити його властивості на інших "
"вкладках у редакторі тем. Ви можете редагувати їх як зазвичай."

msgid "Using a type variation"
msgstr "Використання варіанту типу"

msgid ""
"Now that a type variation has been created you can apply it to your nodes. "
"In the inspector dock, under the **Theme** property of a control node, you "
"can find the **Theme Type Variation** property. It is empty by default, "
"which means that only the base type has an effect on this node."
msgstr ""
"Тепер, коли варіант типу створено, ви можете застосувати його до своїх "
"вузлів. У доці інспектора у властивості **Тема** вузла керування можна "
"знайти властивість **Варіант типу теми**. Він порожній за замовчуванням, що "
"означає, що лише базовий тип впливає на цей вузол."

msgid ""
"You can either select a type variation from a dropdown list, or input its "
"name manually. Variations appear on the list only if the type variation "
"belongs to the project-wide theme, which you can configure in the project "
"settings. For any other case you have to input the name of the variation "
"manually. Click on the pencil icon to the right. Then type in the name of "
"the type variation and click the check mark icon or press enter. If a type "
"variation with that name exists it will now be used by the node."
msgstr ""
"Ви можете вибрати варіант типу зі спадного списку або ввести його назву "
"вручну. Варіанти відображаються в списку, лише якщо варіація типу належить "
"до загальнопроектної теми, яку можна налаштувати в налаштуваннях проекту. У "
"будь-якому іншому випадку вам доведеться ввести назву варіанту вручну. "
"Натисніть на значок олівця праворуч. Потім введіть назву варіанту типу та "
"клацніть значок галочки або натисніть клавішу enter. Якщо варіант типу з "
"такою назвою існує, він тепер використовуватиметься вузлом."
