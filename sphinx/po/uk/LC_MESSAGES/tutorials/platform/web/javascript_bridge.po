#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "The JavaScriptBridge singleton"
msgstr "Синглтон JavaScriptBridge"

msgid ""
"In web builds, the :ref:`JavaScriptBridge <class_JavaScriptBridge>` "
"singleton allows interaction with JavaScript and web browsers, and can be "
"used to implement some functionalities unique to the web platform."
msgstr ""
"У веб-версіях синглтон :ref:`JavaScriptBridge <class_JavaScriptBridge>` "
"дозволяє взаємодіяти з JavaScript і веб-браузерами та може використовуватися "
"для реалізації деяких функцій, унікальних для веб-платформи."

msgid "Interacting with JavaScript"
msgstr "Взаємодія з JavaScript"

msgid ""
"Sometimes, when exporting Godot for the Web, it might be necessary to "
"interface with external JavaScript code like third-party SDKs, libraries, or "
"simply to access browser features that are not directly exposed by Godot."
msgstr ""
"Іноді під час експорту Godot для Інтернету може знадобитися взаємодія із "
"зовнішнім кодом JavaScript, як-от SDK сторонніх розробників, бібліотеки, або "
"просто отримати доступ до функцій браузера, які Godot безпосередньо не "
"відкриває."

msgid ""
"The ``JavaScriptBridge`` singleton provides methods to wrap a native "
"JavaScript object into a Godot :ref:`JavaScriptObject "
"<class_JavaScriptObject>` that tries to feel natural in the context of Godot "
"scripting (e.g. GDScript and C#)."
msgstr ""
"Синглтон ``JavaScriptBridge`` надає методи для обгортання рідного об’єкта "
"JavaScript у Godot :ref:`JavaScriptObject <class_JavaScriptObject>`, який "
"намагається виглядати природно в контексті сценаріїв Godot (наприклад, "
"GDScript і C#)."

msgid ""
"The :ref:`JavaScriptBridge.get_interface() "
"<class_JavaScriptBridge_method_get_interface>` method retrieves an object in "
"the global scope."
msgstr ""
"Метод :ref:`JavaScriptBridge.get_interface() "
"<class_JavaScriptBridge_method_get_interface>` отримує об’єкт у глобальній "
"області видимості."

msgid ""
"The :ref:`JavaScriptBridge.create_object() "
"<class_JavaScriptBridge_method_create_object>` creates a new object via the "
"JavaScript ``new`` constructor."
msgstr ""
":ref:`JavaScriptBridge.create_object() "
"<class_JavaScriptBridge_method_create_object>` створює новий об’єкт за "
"допомогою конструктора JavaScript ``new``."

msgid ""
"As you can see, by wrapping JavaScript objects into ``JavaScriptObject`` you "
"can interact with them like they were native Godot objects, calling their "
"methods, and retrieving (or even setting) their properties."
msgstr ""
"Як бачите, обернувши об’єкти JavaScript в ``JavaScriptObject``, ви можете "
"взаємодіяти з ними, як з рідними об’єктами Godot, викликаючи їхні методи та "
"отримуючи (або навіть встановлюючи) їхні властивості."

msgid ""
"Base types (int, floats, strings, booleans) are automatically converted "
"(floats might lose precision when converted from Godot to JavaScript). "
"Anything else (i.e. objects, arrays, functions) are seen as "
"``JavaScriptObjects`` themselves."
msgstr ""
"Базові типи (int, floats, strings, booleans) автоматично перетворюються "
"(floats можуть втратити точність під час перетворення з Godot на "
"JavaScript). Усе інше (тобто об’єкти, масиви, функції) розглядається як "
"``JavaScriptObjects``."

msgid "Callbacks"
msgstr "Зворотні дзвінки"

msgid ""
"Calling JavaScript code from Godot is nice, but sometimes you need to call a "
"Godot function from JavaScript instead."
msgstr ""
"Виклик коду JavaScript з Godot – це добре, але іноді замість цього потрібно "
"викликати функцію Godot з JavaScript."

msgid ""
"This case is a bit more complicated. JavaScript relies on garbage "
"collection, while Godot uses reference counting for memory management. This "
"means you have to explicitly create callbacks (which are returned as "
"``JavaScriptObjects`` themselves) and you have to keep their reference."
msgstr ""
"Цей випадок трохи складніший. JavaScript покладається на збирання сміття, "
"тоді як Godot використовує підрахунок посилань для керування пам’яттю. Це "
"означає, що ви повинні явно створити зворотні виклики (які повертаються як "
"самі ``JavaScriptObjects``), і ви повинні зберегти їх посилання."

msgid ""
"Arguments passed by JavaScript to the callback will be passed as a single "
"Godot ``Array``."
msgstr ""
"Аргументи, передані JavaScript до зворотного виклику, будуть передані як "
"єдиний ``масив`` Godot."

msgid ""
"Callback methods created via :ref:`JavaScriptBridge.get_interface() "
"<class_JavaScriptBridge_method_get_interface>` (``_my_callback`` in the "
"above example) **must** take exactly one :ref:`Array<class_Array>` argument, "
"which is going to be the JavaScript `arguments object <https://"
"developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/"
"arguments>`__ converted to an array. Otherwise, the callback method will not "
"be called."
msgstr ""
"Методи зворотного виклику, створені за "
"допомогою :ref:`JavaScriptBridge.get_interface() "
"<class_JavaScriptBridge_method_get_interface>` (``_my_callback`` у прикладі "
"вище) **повинні** приймати рівно один аргумент :ref:`Array<class_Array>`, "
"`який буде об’єктом аргументів JavaScript <https://developer.mozilla.org/en-"
"US/docs/Web/JavaScript/Reference/Functions/arguments>`__ перетворено на "
"масив. Інакше метод зворотного виклику не буде викликано."

msgid ""
"Here is another example that asks the user for the `Notification permission "
"<https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API>`__ and "
"waits asynchronously to deliver a notification if the permission is granted:"
msgstr ""
"Ось ще один приклад, який запитує у користувача `Дозвіл на сповіщення "
"<https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API>`__ та "
"чекає асинхронної доставки сповіщення, якщо дозвіл надано:"

msgid "Can I use my favorite library?"
msgstr "Чи можу я користуватися улюбленою бібліотекою?"

msgid ""
"You most likely can. First, you have to include your library in the page. "
"You can customize the :ref:`Head Include <doc_javascript_export_options>` "
"during export (see below), or even :ref:`write your own template "
"<doc_customizing_html5_shell>`."
msgstr ""
"Ви, швидше за все, зможете. По-перше, ви повинні включити свою бібліотеку на "
"сторінку. Ви можете налаштувати :ref:`Head Include "
"<doc_javascript_export_options>` під час експорту (див. нижче) або "
"навіть :ref:`write your own template <doc_customizing_html5_shell>`."

msgid ""
"In the example below, we customize the ``Head Include`` to add an external "
"library (`axios <https://axios-http.com/>`__) from a content delivery "
"network, and a second ``<script>`` tag to define our own custom function:"
msgstr ""
"У наведеному нижче прикладі ми налаштовуємо ``Head Include``, щоб додати "
"зовнішню бібліотеку (`axios <https://axios-http.com/>`__) із мережі доставки "
"вмісту та другий ``<script >`` тег для визначення нашої власної спеціальної "
"функції:"

msgid ""
"We can then access both the library and the function from Godot, like we did "
"in previous examples:"
msgstr ""
"Тоді ми можемо отримати доступ і до бібліотеки, і до функції з Godot, як ми "
"робили в попередніх прикладах:"

msgid "The eval interface"
msgstr "Інтерфейс eval"

msgid ""
"The ``eval`` method works similarly to the JavaScript function of the same "
"name. It takes a string as an argument and executes it as JavaScript code. "
"This allows interacting with the browser in ways not possible with script "
"languages integrated into Godot."
msgstr ""
"Метод ``eval`` працює подібно до однойменної функції JavaScript. Він приймає "
"рядок як аргумент і виконує його як код JavaScript. Це дозволяє взаємодіяти "
"з браузером у спосіб, який неможливий за допомогою мов сценаріїв, "
"інтегрованих у Godot."

msgid ""
"The value of the last JavaScript statement is converted to a GDScript value "
"and returned by ``eval()`` under certain circumstances:"
msgstr ""
"Значення останнього оператора JavaScript перетворюється у значення GDScript "
"і повертається ``eval()`` за певних обставин:"

msgid "JavaScript ``number`` is returned as :ref:`class_float`"
msgstr "``число`` JavaScript повертається як :ref:`class_float`"

msgid "JavaScript ``boolean`` is returned as :ref:`class_bool`"
msgstr "JavaScript ``boolean`` повертається як :ref:`class_bool`"

msgid "JavaScript ``string`` is returned as :ref:`class_String`"
msgstr "``Рядок`` JavaScript повертається як :ref:`class_String`"

msgid ""
"JavaScript ``ArrayBuffer``, ``TypedArray``, and ``DataView`` are returned "
"as :ref:`PackedByteArray<class_PackedByteArray>`"
msgstr ""
"JavaScript ``ArrayBuffer``, ``TypedArray`` і ``DataView`` повертаються "
"як :ref:`PackedByteArray<class_PackedByteArray>`"

msgid "Any other JavaScript value is returned as ``null``."
msgstr "Будь-яке інше значення JavaScript повертається як ``null``."

msgid ""
"HTML5 export templates may be :ref:`built <doc_compiling_for_web>` without "
"support for the singleton to improve security. With such templates, and on "
"platforms other than HTML5, calling ``JavaScriptBridge.eval`` will also "
"return ``null``. The availability of the singleton can be checked with the "
"``web`` :ref:`feature tag <doc_feature_tags>`:"
msgstr ""
"Для покращення безпеки шаблони експорту HTML5 можуть бути :ref:`built "
"<doc_compiling_for_web>` без підтримки єдиного елемента. З такими шаблонами "
"та на платформах, відмінних від HTML5, виклик ``JavaScriptBridge.eval`` "
"також поверне ``null``. Доступність синглтона можна перевірити за допомогою "
"``web`` :ref:`feature tag <doc_feature_tags>`:"

msgid ""
"GDScript's multi-line strings, surrounded by 3 quotes ``\"\"\"`` as in "
"``my_func3()`` above, are useful to keep JavaScript code readable."
msgstr ""
"Багаторядні рядки GDScript, оточені 3 лапками, ``\"\"\"`` як зазначено вище "
"в ``my_func3()``, корисні для збереження коду JavaScript читабельним."

msgid ""
"The ``eval`` method also accepts a second, optional Boolean argument, which "
"specifies whether to execute the code in the global execution context, "
"defaulting to ``false`` to prevent polluting the global namespace:"
msgstr ""
"Метод ``eval`` також приймає другий необов'язковий логічний аргумент, який "
"визначає, чи потрібно виконувати код у глобальному контексті виконання, за "
"замовчуванням ``false``, щоб запобігти забрудненню глобального простору імен:"

msgid "Downloading files"
msgstr "Завантаження файлів"

msgid ""
"Downloading files (e.g. a save game) from the Godot Web export to the user's "
"computer can be done by directly interacting with JavaScript, but given it "
"is a very common use case, Godot exposes this functionality to scripting via "
"a dedicated :ref:`JavaScriptBridge.download_buffer() "
"<class_JavaScriptBridge_method_download_buffer>` function which lets you "
"download any generated buffer."
msgstr ""
"Завантаження файлів (наприклад, збереження гри) із веб-експорту Godot на "
"комп’ютер користувача можна здійснити шляхом безпосередньої взаємодії з "
"JavaScript, але, оскільки це дуже поширений випадок використання, Godot "
"надає цю функцію сценарію через "
"спеціальний :ref:`JavaScriptBridge.download_buffer() "
"<class_JavaScriptBridge_method_download_buffer>`, яка дозволяє завантажувати "
"будь-який згенерований буфер."

msgid "Here is a minimal example on how to use it:"
msgstr "Ось мінімальний приклад того, як його використовувати:"

msgid "extends Node"
msgstr "розширює вузол"

msgid ""
"And here is a more complete example on how to download a previously saved "
"file:"
msgstr ""
"А ось більш повний приклад того, як завантажити раніше збережений файл:"
