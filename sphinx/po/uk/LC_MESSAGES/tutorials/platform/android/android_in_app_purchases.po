#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Android in-app purchases"
msgstr "покупки через програму Android"

msgid ""
"Godot offers a first-party ``GodotGooglePlayBilling`` Android plugin "
"compatible with Godot 4 which uses the `Google Play Billing library <https://"
"developer.android.com/google/play/billing>`_."
msgstr ""
"Godot пропонує власний плагін ``GodotGooglePlayBilling`` для Android, "
"сумісний із Godot 4, який використовує `бібліотеку Google Play Billing "
"<https://developer.android.com/google/play/billing>`_."

msgid "Usage"
msgstr "Використання"

msgid "Getting started"
msgstr "Перші кроки"

msgid ""
"Make sure you have enabled and successfully set up :ref:`Android Gradle "
"Builds <doc_android_gradle_build>`. Follow the compiling instructions on the "
"``GodotGooglePlayBilling`` `github page <https://github.com/godotengine/"
"godot-google-play-billing>`__."
msgstr ""
"Переконайтеся, що ви ввімкнули й успішно налаштували :ref:`Android Gradle "
"Builds <doc_android_gradle_build>`. Дотримуйтесь інструкцій щодо компіляції "
"на сторінці Github ``GodotGooglePlayBilling`` <https://github.com/"
"godotengine/godot-google-play-billing>`__."

msgid ""
"Then put the files `./godot-google-play-billing/build/outputs/aar/"
"GodotGooglePlayBilling.***.release.aar` and `./GodotGooglePlayBilling.gdap` "
"into your project in the `res://android/plugins` folder."
msgstr ""
"Потім додайте файли `./godot-google-play-billing/build/outputs/aar/"
"GodotGooglePlayBilling.***.release.aar` і `./GodotGooglePlayBilling.gdap` у "
"свій проект у `res://android папка /plugins`."

msgid ""
"The plugin should now show up in the Android export settings, where you can "
"enable it."
msgstr ""
"Тепер плагін має з’явитися в налаштуваннях експорту Android, де його можна "
"ввімкнути."

msgid "Initialize the plugin"
msgstr "Ініціалізуйте плагін"

msgid "To use the ``GodotGooglePlayBilling`` API:"
msgstr "Щоб використовувати API GodotGooglePlayBilling:"

msgid "Obtain a reference to the ``GodotGooglePlayBilling`` singleton"
msgstr "Отримайте посилання на синглтон ``GodotGooglePlayBilling``"

msgid "Connect handlers for the plugin signals"
msgstr "Підключіть обробники для сигналів плагіна"

msgid "Call ``startConnection``"
msgstr "Викличте ``startConnection``"

msgid "Initialization example:"
msgstr "Приклад ініціалізації:"

msgid ""
"The API must be in a connected state prior to use. The ``connected`` signal "
"is sent when the connection process succeeds. You can also use ``isReady()`` "
"to determine if the plugin is ready for use. The ``getConnectionState()`` "
"function returns the current connection state of the plugin."
msgstr ""
"Перед використанням API має бути підключено. Сигнал ``connected`` "
"надсилається, коли процес підключення вдається. Ви також можете "
"використовувати ``isReady()``, щоб визначити, чи плагін готовий до "
"використання. Функція getConnectionState() повертає поточний стан "
"підключення плагіна."

msgid "Return values for ``getConnectionState()``:"
msgstr "Повернуті значення для ``getConnectionState()``:"

msgid "Query available items"
msgstr "Отримати наявні товари"

msgid ""
"Once the API has connected, query SKUs using ``querySkuDetails()``. You must "
"successfully complete an SKU query before calling the ``purchase()`` or "
"``queryPurchases()`` functions, or they will return an error. "
"``querySkuDetails()`` takes two parameters: an array of SKU name strings, "
"and a string specifying the type of SKU being queried. The SKU type string "
"should be ``\"inapp\"`` for normal in-app purchases or ``\"subs\"`` for "
"subscriptions. The name strings in the array should match the SKU product "
"ids defined in the Google Play Console entry for your app."
msgstr ""
"Після підключення API надішліть запит до SKU за допомогою "
"``querySkuDetails()``. Ви повинні успішно виконати запит SKU перед викликом "
"функцій ``purchase()`` або ``queryPurchases()``, інакше вони повернуть "
"помилку. ``querySkuDetails()`` приймає два параметри: масив рядків імен SKU "
"та рядок, що вказує тип SKU, який запитується. Рядок типу SKU має бути "
"``\"inapp\"`` для звичайних покупок у програмі або ``\"subs\"`` для "
"підписок. Рядки імен у масиві мають збігатися з ідентифікаторами продуктів "
"SKU, визначеними в записі Google Play Console для вашої програми."

msgid "Example use of ``querySkuDetails()``:"
msgstr "Приклад використання ``querySkuDetails()``:"

msgid "Query user purchases"
msgstr "Запит на покупки користувачів і"

msgid ""
"To retrieve a user's purchases, call the ``queryPurchases()`` function "
"passing a string with the type of SKU to query. The SKU type string should "
"be ``\"inapp\"`` for normal in-app purchases or ``\"subs\"`` for "
"subscriptions. The ``query_purchases_response`` signal is sent with the "
"result. The signal has a single parameter: a :ref:`Dictionary "
"<class_Dictionary>` with a status code and either an array of purchases or "
"an error message. Only active subscriptions and non-consumed one-time "
"purchases are included in the purchase array."
msgstr ""
"Щоб отримати покупки користувача, викличте функцію ``queryPurchases()``, "
"передаючи рядок із типом SKU для запиту. Рядок типу SKU має бути "
"``\"inapp\"`` для звичайних покупок у програмі або ``\"subs\"`` для "
"підписок. З результатом надсилається сигнал ``query_purchases_response``. "
"Сигнал має єдиний параметр: :ref:`Dictionary <class_Dictionary>` з кодом "
"статусу та або масивом покупок, або повідомленням про помилку. Лише активні "
"підписки та невикористані одноразові покупки включені в масив покупок."

msgid "Example use of ``queryPurchases()``:"
msgstr "Приклад використання ``queryPurchases()``:"

msgid ""
"You should query purchases during startup after successfully retrieving SKU "
"details. Since the user may make a purchase or resolve a pending transaction "
"from outside your app, you should recheck for purchases when resuming from "
"the background. To accomplish this, you can use the ``billing_resume`` "
"signal."
msgstr ""
"Ви повинні запитати покупки під час запуску після успішного отримання "
"деталей SKU. Оскільки користувач може зробити покупку або завершити "
"незавершену транзакцію з-за меж вашої програми, ви повинні повторно "
"перевірити наявність покупок під час відновлення у фоновому режимі. Щоб "
"досягти цього, ви можете використати сигнал ``billing_resume``."

msgid "Example use of ``billing_resume``:"
msgstr "Приклад використання ``billing_resume``:"

msgid ""
"For more information on processing the purchase items returned by "
"``queryPurchases()``, see `Processing a purchase item`_"
msgstr ""
"Щоб отримати додаткові відомості про обробку предметів покупки, повернутих "
"``queryPurchases()``, див. `Обробка предмета покупки`_"

msgid "Purchase an item"
msgstr "Придбайте товар"

msgid ""
"To initiate the purchase flow for an item, call ``purchase()`` passing the "
"product id string of the SKU you wish to purchase. Reminder: you **must** "
"query the SKU details for an item before you can pass it to ``purchase()``."
msgstr ""
"Щоб ініціювати потік покупки товару, викличте ``purchase()``, передавши "
"рядок ідентифікатора продукту SKU, який ви бажаєте придбати. Нагадування: ви "
"**повинні** запитати деталі SKU для товару, перш ніж передати його в "
"``purchase()``."

msgid "Example use of ``purchase()``:"
msgstr "Приклад використання ``purchase()``:"

msgid ""
"The payment flow will send a ``purchases_updated`` signal on success or a "
"``purchase_error`` signal on failure."
msgstr ""
"Потік платежу надсилатиме сигнал ``purchases_updated`` у разі успіху або "
"``purchase_error`` у разі невдачі."

msgid "Processing a purchase item"
msgstr "Обробка покупки товару"

msgid ""
"The ``query_purchases_response`` and ``purchases_updated`` signals provide "
"an array of purchases in :ref:`Dictionary <class_Dictionary>` format. The "
"purchase Dictionary includes keys that map to values of the Google Play "
"Billing `Purchase <https://developer.android.com/reference/com/android/"
"billingclient/api/Purchase>`_ class."
msgstr ""
"Сигнали ``query_purchases_response`` і ``purchases_updated`` надають масив "
"покупок у форматі :ref:`Dictionary <class_Dictionary>`. Словник покупок "
"містить ключі, які зіставляються зі значеннями класу Google Play Billing "
"`Purchase <https://developer.android.com/reference/com/android/billingclient/"
"api/Purchase>`_."

msgid "Purchase fields:"
msgstr "Поля покупки:"

msgid "Check purchase state"
msgstr "Перевірити стан покупки"

msgid ""
"Check the ``purchase_state`` value of a purchase to determine if a purchase "
"was completed or is still pending."
msgstr ""
"Перевірте значення ``purchase_state`` покупки, щоб визначити, чи була "
"покупка завершена чи все ще очікує на розгляд."

msgid "PurchaseState values:"
msgstr "Значення PurchaseState:"

msgid ""
"If a purchase is in a ``PENDING`` state, you should not award the contents "
"of the purchase or do any further processing of the purchase until it "
"reaches the ``PURCHASED`` state. If you have a store interface, you may wish "
"to display information about pending purchases needing to be completed in "
"the Google Play Store. For more details on pending purchases, see `Handling "
"pending transactions <https://developer.android.com/google/play/billing/"
"integrate#pending>`_ in the Google Play Billing Library documentation."
msgstr ""
"Якщо покупка перебуває в стані ``ОЧІКУВАННЯ``, вам не слід присуджувати "
"вміст покупки або виконувати будь-яку подальшу обробку покупки, доки вона не "
"досягне стану ``ПРИДБАНО``. Якщо у вас є інтерфейс магазину, ви можете "
"відобразити інформацію про незавершені покупки, які потрібно завершити в "
"магазині Google Play. Додаткову інформацію про незавершені покупки див. у "
"розділі «Обробка незавершених транзакцій <https://developer.android.com/"
"google/play/billing/integrate#pending>`_ у документації бібліотеки платежів "
"Google Play."

msgid "Consumables"
msgstr "Витратні матеріали"

msgid ""
"If your in-app item is not a one-time purchase but a consumable item (e.g. "
"coins) which can be purchased multiple times, you can consume an item by "
"calling ``consumePurchase()`` passing the ``purchase_token`` value from the "
"purchase dictionary. Calling ``consumePurchase()`` automatically "
"acknowledges a purchase. Consuming a product allows the user to purchase it "
"again, it will no longer appear in subsequent ``queryPurchases()`` calls "
"unless it is repurchased."
msgstr ""
"Якщо ваш продукт у додатку не є одноразовою покупкою, а споживаним предметом "
"(наприклад, монетами), який можна придбати кілька разів, ви можете споживати "
"предмет, викликавши ``consumePurchase()``, передаючи значення "
"``purchase_token`` із купівельного словника. Виклик ``consumePurchase()`` "
"автоматично підтверджує покупку. Споживання продукту дозволяє користувачеві "
"придбати його знову, він більше не відображатиметься в наступних викликах "
"``queryPurchases()``, якщо він не буде повторно придбаний."

msgid "Example use of ``consumePurchase()``:"
msgstr "Приклад використання ``consumePurchase()``:"

msgid "Acknowledging purchases"
msgstr "Підтвердження покупок"

msgid ""
"If your in-app item is a one-time purchase, you must acknowledge the "
"purchase by calling the ``acknowledgePurchase()`` function, passing the "
"``purchase_token`` value from the purchase dictionary. If you do not "
"acknowledge a purchase within three days, the user automatically receives a "
"refund, and Google Play revokes the purchase. If you are calling "
"``comsumePurchase()`` it automatically acknowledges the purchase and you do "
"not need to call ``acknowledgePurchase()``."
msgstr ""
"Якщо ваш продукт у програмі є одноразовою покупкою, ви повинні підтвердити "
"покупку, викликавши функцію ``acknowledgePurchase()``, передавши значення "
"``purchase_token`` зі словника покупки. Якщо ви не підтверджуєте покупку "
"протягом трьох днів, користувач автоматично отримує відшкодування, а Google "
"Play скасовує покупку. Якщо ви викликаєте ``comsumePurchase()``, це "
"автоматично підтверджує покупку, і вам не потрібно викликати "
"``acknowledgePurchase()``."

msgid "Example use of ``acknowledgePurchase()``:"
msgstr "Приклад використання ``acknowledgePurchase()``:"

msgid "Subscriptions"
msgstr "Підписки"

msgid ""
"Subscriptions work mostly like regular in-app items. Use ``\"subs\"`` as the "
"second argument to ``querySkuDetails()`` to get subscription details. Pass "
"``\"subs\"`` to ``queryPurchases()`` to get subscription purchase details."
msgstr ""
"Підписки працюють здебільшого як звичайні елементи в програмі. "
"Використовуйте ``\"subs\"`` як другий аргумент ``querySkuDetails()``, щоб "
"отримати деталі підписки. Передайте ``\"subs\"`` в ``queryPurchases()``, щоб "
"отримати деталі покупки підписки."

msgid ""
"You can check ``is_auto_renewing`` in the a subscription purchase returned "
"from ``queryPurchases()`` to see if a user has cancelled an auto-renewing "
"subscription."
msgstr ""
"Ви можете перевірити ``is_auto_renewing`` у покупці підписки, повернутій "
"``queryPurchases()``, щоб побачити, чи користувач скасував підписку з "
"автоматичним поновленням."

msgid ""
"You need to acknowledge new subscription purchases, but not automatic "
"subscription renewals."
msgstr ""
"Вам потрібно підтверджувати придбання нових підписок, але не автоматичне "
"поновлення підписки."

msgid ""
"If you support upgrading or downgrading between different subscription "
"levels, you should use ``updateSubscription()`` to use the subscription "
"update flow to change an active subscription. Like ``purchase()``, results "
"are returned by the ``purchases_updated`` and ``purchase_error`` signals. "
"There are three parameters to ``updateSubscription()``:"
msgstr ""
"Якщо ви підтримуєте оновлення або пониження між різними рівнями підписки, "
"вам слід використовувати ``updateSubscription()``, щоб використовувати потік "
"оновлення підписки для зміни активної підписки. Як і ``purchase()``, "
"результати повертаються сигналами ``purchases_updated`` і "
"``purchase_error``. Є три параметри для ``updateSubscription()``:"

msgid "The purchase token of the currently active subscription"
msgstr "Маркер покупки поточної активної підписки"

msgid "The product id string of the subscription SKU to change to"
msgstr "Рядок ідентифікатора продукту SKU підписки, на який потрібно змінити"

msgid "The proration mode to apply to the subscription."
msgstr "Режим пропорції для підписки."

msgid "The proration values are defined as:"
msgstr "Значення пропорції визначаються як:"

msgid "Default behavior is ``IMMEDIATE_WITH_TIME_PRORATION``."
msgstr "Типовою поведінкою є ``IMMEDIATE_WITH_TIME_PRORATION``."

msgid "Example use of ``updateSubscription``:"
msgstr "Приклад використання ``updateSubscription``:"

msgid ""
"The ``confirmPriceChange()`` function can be used to launch price change "
"confirmation flow for a subscription. Pass the product id of the "
"subscription SKU subject to the price change. The result will be sent by the "
"``price_change_acknowledged`` signal."
msgstr ""
"Функцію ``confirmPriceChange()`` можна використовувати для запуску потоку "
"підтвердження зміни ціни для підписки. Передайте ідентифікатор продукту для "
"SKU підписки, що залежить від зміни ціни. Результат буде надіслано сигналом "
"``price_change_acknowledged``."

msgid "Example use of ``confirmPriceChange()``:"
msgstr "Приклад використання ``confirmPriceChange()``:"
