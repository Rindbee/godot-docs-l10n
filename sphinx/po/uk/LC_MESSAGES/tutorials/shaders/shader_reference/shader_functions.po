#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Built-in functions"
msgstr "Вбудовані функції"

msgid ""
"Godot supports a large number of built-in functions, conforming roughly to "
"the GLSL ES 3.0 specification."
msgstr ""
"Godot підтримує велику кількість вбудованих функцій, що приблизно "
"відповідають специфікації GLSL ES 3.0."

msgid ""
"The following type aliases only used in documentation to reduce repetitive "
"function declarations. They can each refer to any of several actual types."
msgstr ""
"Наступні псевдоніми типів використовуються лише в документації, щоб зменшити "
"повторювані оголошення функцій. Кожен з них може стосуватися будь-якого з "
"кількох фактичних типів."

msgid "alias"
msgstr "псевдонім"

msgid "actual types"
msgstr "фактичні типи"

msgid "glsl documentation alias"
msgstr "псевдонім документації glsl"

msgid "vec_type"
msgstr "vec_type"

msgid "float, vec2, vec3, or vec4"
msgstr "float, vec2, vec3, or vec4"

msgid "genType"
msgstr "genType"

msgid "vec_int_type"
msgstr "vec_int_type"

msgid "int, ivec2, ivec3, or ivec4"
msgstr "int, ivec2, ivec3, or ivec4"

msgid "genIType"
msgstr "genIType"

msgid "vec_uint_type"
msgstr "vec_uint_type"

msgid "uint, uvec2, uvec3, or uvec4"
msgstr "uint, uvec2, uvec3, or uvec4"

msgid "genUType"
msgstr "genUType"

msgid "vec_bool_type"
msgstr "vec_bool_type"

msgid "bool, bvec2, bvec3, or bvec4"
msgstr "bool, bvec2, bvec3, or bvec4"

msgid "genBType"
msgstr "genBType"

msgid "mat_type"
msgstr "mat_type"

msgid "mat2, mat3, or mat4"
msgstr "mat2, mat3, or mat4"

msgid "mat"
msgstr "mat"

msgid "gvec4_type"
msgstr "gvec4_type"

msgid "vec4, ivec4, or uvec4"
msgstr "vec4, ivec4, or uvec4"

msgid "gvec4"
msgstr "gvec4"

msgid "gsampler2D"
msgstr "gsampler2D"

msgid "sampler2D, isampler2D, or uSampler2D"
msgstr "sampler2D, isampler2D, або uSampler2D"

msgid "gsampler2DArray"
msgstr "gsampler2DArray"

msgid "sampler2DArray, isampler2DArray, or uSampler2DArray"
msgstr "sampler2DArray, isampler2DArray, або uSampler2DArray"

msgid "gsampler3D"
msgstr "gsampler3D"

msgid "sampler3D, isampler3D, or uSampler3D"
msgstr "sampler3D, isampler3D, або uSampler3D"

msgid ""
"If any of these are specified for multiple parameters, they must all be the "
"same type unless otherwise noted."
msgstr ""
"Якщо будь-який із них указано для кількох параметрів, усі вони мають бути "
"одного типу, якщо не зазначено інше."

msgid ""
"Many functions that accept one or more vectors or matrices perform the "
"described function on each component of the vector/matrix. Some examples:"
msgstr ""
"Багато функцій, які приймають один або більше векторів або матриць, "
"виконують описану функцію для кожного компонента вектора/матриці. Деякі "
"приклади:"

msgid "Operation"
msgstr "Операція"

msgid "Equivalent Scalar Operation"
msgstr "Еквівалентна скалярна операція"

msgid "``sqrt(vec2(4, 64))``"
msgstr "``sqrt(vec2(4, 64))``"

msgid "``vec2(sqrt(4), sqrt(64))``"
msgstr "``vec2(sqrt(4), sqrt(64))``"

msgid "``min(vec2(3, 4), 1)``"
msgstr "``min(vec2(3, 4), 1)``"

msgid "``vec2(min(3, 1), min(4, 1))``"
msgstr "``vec2(min(3, 1), min(4, 1))``"

msgid "``min(vec3(1, 2, 3),vec3(5, 1, 3))``"
msgstr "``min(vec3(1, 2, 3),vec3(5, 1, 3))``"

msgid "``vec3(min(1, 5), min(2, 1), min(3, 3))``"
msgstr "``vec3(min(1, 5), min(2, 1), min(3, 3))``"

msgid "``pow(vec3(3, 8, 5 ), 2)``"
msgstr "``pow(vec3(3, 8, 5 ), 2)``"

msgid "``vec3(pow(3, 2), pow(8, 2), pow(5, 2))``"
msgstr "``vec3(pow(3, 2), pow(8, 2), pow(5, 2))``"

msgid "``pow(vec3(3, 8, 5), vec3(1, 2, 4))``"
msgstr "``pow(vec3(3, 8, 5), vec3(1, 2, 4))``"

msgid "``vec3(pow(3, 1), pow(8, 2), pow(5, 4))``"
msgstr "``vec3(pow(3, 1), pow(8, 2), pow(5, 4))``"

msgid ""
"The `GLSL Language Specification <http://www.opengl.org/registry/doc/"
"GLSLangSpec.4.30.6.pdf>`_ says under section 5.10 Vector and Matrix "
"Operations:"
msgstr ""
"`Специфікація мови GLSL <http://www.opengl.org/registry/doc/"
"GLSLangSpec.4.30.6.pdf>`_ говорить у розділі 5.10 Векторні та матричні "
"операції:"

msgid ""
"With a few exceptions, operations are component-wise. Usually, when an "
"operator operates on a vector or matrix, it is operating independently on "
"each component of the vector or matrix, in a component-wise fashion. [...] "
"The exceptions are matrix multiplied by vector, vector multiplied by matrix, "
"and matrix multiplied by matrix. These do not operate component-wise, but "
"rather perform the correct linear algebraic multiply."
msgstr ""
"За кількома винятками, операції є компонентними. Зазвичай, коли оператор "
"працює з вектором або матрицею, він діє незалежно від кожного компонента "
"вектора або матриці, покомпонентно. [...] Винятками є матриця, помножена на "
"вектор, помножена на матрицю, і матриця, помножена на матрицю. Вони не "
"працюють покомпонентно, а скоріше виконують правильне лінійне алгебраїчне "
"множення."

msgid ""
"These function descriptions are adapted and modified from `official OpenGL "
"documentation <https://registry.khronos.org/OpenGL-Refpages/gl4/>`__ "
"originally published by Khronos Group under the `Open Publication License "
"<https://opencontent.org/openpub>`__. Each function description links to the "
"corresponding official OpenGL documentation. Modification history for this "
"page can be found on `GitHub <https://github.com/godotengine/godot-docs/blob/"
"master/tutorials/shaders/shader_reference/shader_functions.rst>`__."
msgstr ""
"Ці описи функцій адаптовано та змінено з `офіційної документації OpenGL "
"<https://registry.khronos.org/OpenGL-Refpages/gl4/>`__, спочатку "
"опублікованої Khronos Group згідно з `Ліцензією відкритої публікації "
"<https://opencontent.org/openpub>`__. Кожен опис функції містить посилання "
"на відповідну офіційну документацію OpenGL. Історію змін цієї сторінки можна "
"знайти на `GitHub <https://github.com/godotengine/godot-docs/blob/master/"
"tutorials/shaders/shader_reference/shader_functions.rst>`__."

msgid "Trigonometric functions"
msgstr "Тригонометричні функції"

msgid "Return Type"
msgstr "Тип повернення"

msgid "Function"
msgstr "Function"

msgid "Description / Return value"
msgstr "Опис/Повернене значення"

msgid "|vec_type|"
msgstr "|vec_type|"

msgid ":ref:`radians<shader_func_radians>`\\ (\\ |vec_type| degrees)"
msgstr ":ref:`radians<shader_func_radians>`\\ (\\ |vec_type| degrees)"

msgid "Convert degrees to radians."
msgstr "Перетворіть градуси в радіани."

msgid ":ref:`degrees<shader_func_degrees>`\\ (\\ |vec_type| radians)"
msgstr ":ref:`degrees<shader_func_degrees>`\\ (\\ |vec_type| radians)"

msgid "Convert radians to degrees."
msgstr "Перетворіть радіани в градуси."

msgid ":ref:`sin<shader_func_sin>`\\ (\\ |vec_type| x)"
msgstr ":ref:`sin<shader_func_sin>`\\ (\\ |vec_type| x)"

msgid "Sine."
msgstr "Синус."

msgid ":ref:`cos<shader_func_cos>`\\ (\\ |vec_type| x)"
msgstr ":ref:`cos<shader_func_cos>`\\ (\\ |vec_type| x)"

msgid "Cosine."
msgstr "Косинус."

msgid ":ref:`tan<shader_func_tan>`\\ (\\ |vec_type| x)"
msgstr ":ref:`tan<shader_func_tan>`\\ (\\ |vec_type| x)"

msgid "Tangent."
msgstr "По дотичній."

msgid ":ref:`asin<shader_func_asin>`\\ (\\ |vec_type| x)"
msgstr ":ref:`asin<shader_func_asin>`\\ (\\ |vec_type| x)"

msgid "Arc sine."
msgstr "Аркс синус."

msgid ":ref:`acos<shader_func_acos>`\\ (\\ |vec_type| x)"
msgstr ":ref:`acos<shader_func_acos>`\\ (\\ |vec_type| x)"

msgid "Arc cosine."
msgstr "Арккосинус."

msgid ":ref:`atan<shader_func_atan>`\\ (\\ |vec_type| y_over_x)"
msgstr ":ref:`atan<shader_func_atan>`\\ (\\ |vec_type| y_over_x)"

msgid ":ref:`atan<shader_func_atan2>`\\ (\\ |vec_type| y, |vec_type| x)"
msgstr ":ref:`atan<shader_func_atan2>`\\ (\\ |vec_type| y, |vec_type| x)"

msgid "Arc tangent."
msgstr "Арктангенс."

msgid ":ref:`sinh<shader_func_sinh>`\\ (\\ |vec_type| x)"
msgstr ":ref:`sinh<shader_func_sinh>`\\ (\\ |vec_type| x)"

msgid "Hyperbolic sine."
msgstr "Гіперболічний синус."

msgid ":ref:`cosh<shader_func_cosh>`\\ (\\ |vec_type| x)"
msgstr ":ref:`cosh<shader_func_cosh>`\\ (\\ |vec_type| x)"

msgid "Hyperbolic cosine."
msgstr "Гіперболічний косинус."

msgid ":ref:`tanh<shader_func_tanh>`\\ (\\ |vec_type| x)"
msgstr ":ref:`tanh<shader_func_tanh>`\\ (\\ |vec_type| x)"

msgid "Hyperbolic tangent."
msgstr "Гіперболічний тангенс."

msgid ":ref:`asinh<shader_func_asinh>`\\ (\\ |vec_type| x)"
msgstr ":ref:`asinh<shader_func_asinh>`\\ (\\ |vec_type| x)"

msgid "Arc hyperbolic sine."
msgstr "Гіперболічний синус дуги."

msgid ":ref:`acosh<shader_func_acosh>`\\ (\\ |vec_type| x)"
msgstr ":ref:`acosh<shader_func_acosh>`\\ (\\ |vec_type| x)"

msgid "Arc hyperbolic cosine."
msgstr "Дуга гіперболічного косинуса."

msgid ":ref:`atanh<shader_func_atanh>`\\ (\\ |vec_type| x)"
msgstr ":ref:`atanh<shader_func_atanh>`\\ (\\ |vec_type| x)"

msgid "Arc hyperbolic tangent."
msgstr "Дуга гіперболічного тангенса."

msgid "Trigonometric function descriptions"
msgstr "Опис тригонометричних функцій"

msgid ""
"|vec_type| **radians**\\ (\\ |vec_type| "
"degrees) :ref:`🔗<shader_func_radians>`"
msgstr ""
"|vec_type| **радіан**\\ (\\ |vec_type| "
"degrees) :ref:`🔗<shader_func_radians>`"

msgid "|componentwise|"
msgstr "|componentwise|"

msgid ""
"Converts a quantity specified in degrees into radians, with the formula "
"``degrees * (PI / 180)``."
msgstr ""
"Перетворює величину, указану в градусах, у радіани за формулою ``градуси * "
"(PI / 180)``."

msgid "param degrees"
msgstr "парам ступенів"

msgid "The quantity, in degrees, to be converted to radians."
msgstr "Величина в градусах, яку потрібно перетворити в радіани."

msgid "return"
msgstr "return"

msgid "The input ``degrees`` converted to radians."
msgstr "Введені ``градуси`` перетворені в радіани."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/radians.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/radians.xhtml"

msgid ""
"|vec_type| **degrees**\\ (\\ |vec_type| "
"radians) :ref:`🔗<shader_func_degrees>`"
msgstr ""
"|vec_type| **ступенів**\\ (\\ |vec_type| "
"radians) :ref:`🔗<shader_func_degrees>`"

msgid ""
"Converts a quantity specified in radians into degrees, with the formula "
"``radians * (180 / PI)``"
msgstr ""
"Перетворює кількість, указану в радіанах, у градуси за формулою \"радіани * "
"(180 / PI)\""

msgid "param radians"
msgstr "параметр радіан"

msgid "The quantity, in radians, to be converted to degrees."
msgstr "Величина в радіанах, яку потрібно конвертувати в градуси."

msgid "The input ``radians`` converted to degrees."
msgstr "Введені ``радіани`` перетворені в градуси."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/degrees.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/degrees.xhtml"

msgid "|vec_type| **sin**\\ (\\ |vec_type| angle) :ref:`🔗<shader_func_sin>`"
msgstr "|vec_type| **гріх**\\ (\\ |vec_type| angle) :ref:`🔗<shader_func_sin>`"

msgid "Returns the trigonometric sine of ``angle``."
msgstr "Повертає тригонометричний синус \"кута\"."

msgid "param angle"
msgstr "параметр кута"

msgid "The quantity, in radians, of which to return the sine."
msgstr "Кількість у радіанах, синус якої потрібно повернути."

msgid "The sine of ``angle``."
msgstr "Синус від ``angle``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sin.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sin.xhtml"

msgid "|vec_type| **cos**\\ (\\ |vec_type| angle) :ref:`🔗<shader_func_cos>`"
msgstr "|vec_type| **cos**\\ (\\ |vec_type| angle) :ref:`🔗<shader_func_cos>`"

msgid "Returns the trigonometric cosine of ``angle``."
msgstr "Повертає тригонометричний косинус ``angle``."

msgid "The quantity, in radians, of which to return the cosine."
msgstr "Кількість у радіанах, косинус якої потрібно повернути."

msgid "The cosine of ``angle``."
msgstr "Косинус від ``angle``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/cos.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/cos.xhtml"

msgid "|vec_type| **tan**\\ (\\ |vec_type| angle) :ref:`🔗<shader_func_tan>`"
msgstr "|vec_type| **tan**\\ (\\ |vec_type| angle) :ref:`🔗<shader_func_tan>`"

msgid "Returns the trigonometric tangent of ``angle``."
msgstr "Повертає тригонометричний тангенс ``angle``."

msgid "The quantity, in radians, of which to return the tangent."
msgstr "Кількість у радіанах, тангенс якої потрібно повернути."

msgid "The tangent of ``angle``."
msgstr "Дотична до ``angle``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/tan.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/tan.xhtml"

msgid "|vec_type| **asin**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_asin>`"
msgstr "|vec_type| **asin**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_asin>`"

msgid ""
"Arc sine, or inverse sine. Calculates the angle whose sine is ``x`` and is "
"in the range ``[-PI/2, PI/2]``. The result is undefined if ``x < -1`` or ``x "
"> 1``."
msgstr ""
"Аркс-синус, або арксинус. Обчислює кут, синус якого дорівнює ``x`` і "
"знаходиться в діапазоні ``[-PI/2, PI/2]``. Результат не визначений, якщо ``x "
"< -1`` або ``x > 1``."

msgid "param x"
msgstr "параметр x"

msgid "The value whose arc sine to return."
msgstr "Значення, чий арксинус повертається."

msgid "The angle whose trigonometric sine is ``x``."
msgstr "Кут, тригонометричний синус якого становить ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/asin.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/asin.xhtml"

msgid "|vec_type| **acos**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_acos>`"
msgstr "|vec_type| **acos**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_acos>`"

msgid ""
"Arc cosine, or inverse cosine. Calculates the angle whose cosine is ``x`` "
"and is in the range ``[0, PI]``."
msgstr ""
"Арккосинус, або арккосинус. Обчислює кут, косинус якого дорівнює ``x`` і "
"знаходиться в діапазоні ``[0, PI]``."

msgid "The result is undefined if ``x < -1`` or ``x > 1``."
msgstr "Результат не визначений, якщо ``x < -1`` або ``x > 1``."

msgid "The value whose arc cosine to return."
msgstr "Значення, арккосинус якого потрібно повернути."

msgid "The angle whose trigonometric cosine is ``x``."
msgstr "Кут, тригонометричний косинус якого дорівнює x."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/acos.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/acos.xhtml"

msgid ""
"|vec_type| **atan**\\ (\\ |vec_type| y_over_x) :ref:`🔗<shader_func_atan>`"
msgstr ""
"|vec_type| **atan**\\ (\\ |vec_type| y_over_x) :ref:`🔗<shader_func_atan>`"

msgid "Calculates the arc tangent given a tangent value of ``y/x``."
msgstr "Обчислює арктангенс із значенням тангенса ``y/x``."

msgid ""
"Because of the sign ambiguity, the function cannot determine with certainty "
"in which quadrant the angle falls only by its tangent value. If you need to "
"know the quadrant, use :ref:`atan(vec_type y, vec_type "
"x)<shader_func_atan2>`."
msgstr ""
"Через неоднозначність знака функція не може з упевненістю визначити, в якому "
"квадранті знаходиться кут, лише за його значенням тангенса. Якщо вам "
"потрібно знати квадрант, використовуйте :ref:`atan(vec_type y, vec_type "
"x)<shader_func_atan2>`."

msgid "param y_over_x"
msgstr "параметр y_over_x"

msgid "The fraction whose arc tangent to return."
msgstr "Дріб, арктангенс якого потрібно повернути."

msgid ""
"The trigonometric arc-tangent of ``y_over_x`` and is in the range ``[-PI/2, "
"PI/2]``."
msgstr ""
"Тригонометричний арктангенс ``y_over_x`` і знаходиться в діапазоні ``[-PI/2, "
"PI/2]``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/atan.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/atan.xhtml"

msgid ""
"|vec_type| **atan**\\ (\\ |vec_type| y, |vec_type| "
"x) :ref:`🔗<shader_func_atan2>`"
msgstr ""
"|vec_type| **atan**\\ (\\ |vec_type| y, |vec_type| "
"x) :ref:`🔗<shader_func_atan2>`"

msgid ""
"Calculates the arc tangent given a numerator and denominator. The signs of "
"``y`` and ``x`` are used to determine the quadrant that the angle lies in. "
"The result is undefined if ``x == 0``."
msgstr ""
"Обчислює арктангенс із чисельником і знаменником. Знаки ``y`` і ``x`` "
"використовуються для визначення квадранта, в якому лежить кут. Результат не "
"визначений, якщо ``x == 0``."

msgid ""
"Equivalent to :ref:`atan2() <class_@GlobalScope_method_atan2>` in GDScript."
msgstr ""
"Еквівалент :ref:`atan2() <class_@GlobalScope_method_atan2>` в GDScript."

msgid "param y"
msgstr "параметр і"

msgid "The numerator of the fraction whose arc tangent to return."
msgstr "Чисельник дробу, арктангенс якого потрібно повернути."

msgid "The denominator of the fraction whose arc tangent to return."
msgstr "Знаменник дробу, арктангенс якого потрібно повернути."

msgid ""
"The trigonometric arc tangent of ``y/x`` and is in the range ``[-PI, PI]``."
msgstr ""
"Тригонометричний арктангенс \"y/x\" і знаходиться в діапазоні \"[-PI, PI]\"."

msgid "|vec_type| **sinh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_sinh>`"
msgstr "|vec_type| **sinh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_sinh>`"

msgid "Calculates the hyperbolic sine using ``(e^x - e^-x)/2``."
msgstr "Обчислює гіперболічний синус за допомогою ``(e^x - e^-x)/2``."

msgid "The value whose hyperbolic sine to return."
msgstr "Значення, гіперболічний синус якого потрібно повернути."

msgid "The hyperbolic sine of ``x``."
msgstr "Гіперболічний синус ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sinh.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sinh.xhtml"

msgid "|vec_type| **cosh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_cosh>`"
msgstr "|vec_type| **cosh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_cosh>`"

msgid "Calculates the hyperbolic cosine using ``(e^x + e^-x)/2``."
msgstr "Обчислює гіперболічний косинус за допомогою ``(e^x + e^-x)/2``."

msgid "The value whose hyperbolic cosine to return."
msgstr "Значення, гіперболічний косинус якого потрібно повернути."

msgid "The hyperbolic cosine of ``x``."
msgstr "Гіперболічний косинус ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/cosh.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/cosh.xhtml"

msgid "|vec_type| **tanh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_tanh>`"
msgstr "|vec_type| **tanh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_tanh>`"

msgid "Calculates the hyperbolic tangent using ``sinh(x)/cosh(x)``."
msgstr "Обчислює гіперболічний тангенс за допомогою ``sinh(x)/cosh(x)``."

msgid "The value whose hyperbolic tangent to return."
msgstr "Значення, гіперболічний тангенс якого потрібно повернути."

msgid "The hyperbolic tangent of ``x``."
msgstr "Гіперболічний тангенс ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/tanh.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/tanh.xhtml"

msgid "|vec_type| **asinh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_asinh>`"
msgstr "|vec_type| **asinh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_asinh>`"

msgid ""
"Calculates the arc hyperbolic sine of ``x``, or the inverse of ``sinh``."
msgstr "Обчислює дуговий гіперболічний синус ``x`` або зворотний ``sinh``."

msgid "The value whose arc hyperbolic sine to return."
msgstr "Значення, гіперболічний синус дуги якого потрібно повернути."

msgid "The arc hyperbolic sine of ``x``."
msgstr "Гіперболічний синус дуги \"x\"."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/asinh.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/asinh.xhtml"

msgid "|vec_type| **acosh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_acosh>`"
msgstr "|vec_type| **acosh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_acosh>`"

msgid ""
"Calculates the arc hyperbolic cosine of ``x``, or the non-negative inverse "
"of ``cosh``. The result is undefined if ``x < 1``."
msgstr ""
"Обчислює арк-гіперболічний косинус ``x`` або невід’ємну обернену ``cosh``. "
"Результат не визначений, якщо ``x < 1``."

msgid "The value whose arc hyperbolic cosine to return."
msgstr "Значення, гіперболічний косинус дуги якого потрібно повернути."

msgid "The arc hyperbolic cosine of ``x``."
msgstr "Аркгіперболічний косинус \"x\"."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/acosh.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/acosh.xhtml"

msgid "|vec_type| **atanh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_atanh>`"
msgstr "|vec_type| **atanh**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_atanh>`"

msgid ""
"Calculates the arc hyperbolic tangent of ``x``, or the inverse of ``tanh``. "
"The result is undefined if ``abs(x) > 1``."
msgstr ""
"Обчислює аркугіперболічний тангенс \"x\" або обернений до \"tanh\". "
"Результат не визначений, якщо ``abs(x) > 1``."

msgid "The value whose arc hyperbolic tangent to return."
msgstr "Значення, гіперболічний тангенс якого потрібно повернути."

msgid "The arc hyperbolic tangent of ``x``."
msgstr "Аркгіперболічний тангенс ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/atanh.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/atanh.xhtml"

msgid "Exponential and math functions"
msgstr "Показникові та математичні функції"

msgid ":ref:`pow<shader_func_pow>`\\ (\\ |vec_type| x, |vec_type| y)"
msgstr ":ref:`pow<shader_func_pow>`\\ (\\ |vec_type| x, |vec_type| y)"

msgid "Power (undefined if ``x < 0`` or if ``x == 0`` and ``y <= 0``)."
msgstr ""
"Потужність (не визначено, якщо ``x < 0`` або якщо ``x == 0`` і ``y <= 0``)."

msgid ":ref:`exp<shader_func_exp>`\\ (\\ |vec_type| x)"
msgstr ":ref:`exp<shader_func_exp>`\\ (\\ |vec_type| x)"

msgid "Base-e exponential."
msgstr "База-е експонента."

msgid ":ref:`exp2<shader_func_exp2>`\\ (\\ |vec_type| x)"
msgstr ":ref:`exp2<shader_func_exp2>`\\ (\\ |vec_type| x)"

msgid "Base-2 exponential."
msgstr "Основа-2 експоненціальна."

msgid ":ref:`log<shader_func_log>`\\ (\\ |vec_type| x)"
msgstr ":ref:`log<shader_func_log>`\\ (\\ |vec_type| x)"

msgid "Natural (base-e) logarithm."
msgstr "Натуральний (база-е)."

msgid ":ref:`log2<shader_func_log2>`\\ (\\ |vec_type| x)"
msgstr ":ref:`log2<shader_func_log2>`\\ (\\ |vec_type| x)"

msgid "Base-2 logarithm."
msgstr "Логарифм з основою 2."

msgid ":ref:`sqrt<shader_func_sqrt>`\\ (\\ |vec_type| x)"
msgstr ":ref:`sqrt<shader_func_sqrt>`\\ (\\ |vec_type| x)"

msgid "Square root."
msgstr "Квадратний корінь."

msgid ":ref:`inversesqrt<shader_func_inversesqrt>`\\ (\\ |vec_type| x)"
msgstr ":ref:`inversesqrt<shader_func_inversesqrt>`\\ (\\ |vec_type| x)"

msgid "Inverse square root."
msgstr "Обернений квадратний корінь."

msgid "|vec_int_type|"
msgstr "|vec_int_type|"

msgid ":ref:`abs<shader_func_abs>`\\ (\\ |vec_type| x)"
msgstr ":ref:`abs<shader_func_abs>`\\ (\\ |vec_type| x)"

msgid ":ref:`abs<shader_func_abs>`\\ (\\ |vec_int_type| x)"
msgstr ":ref:`abs<shader_func_abs>`\\ (\\ |vec_int_type| x)"

msgid "Absolute value (returns positive value if negative)."
msgstr "Абсолютне значення (повертає додатне значення, якщо від’ємне)."

msgid ":ref:`sign<shader_func_sign>`\\ (\\ |vec_type| x)"
msgstr ":ref:`sign<shader_func_sign>`\\ (\\ |vec_type| x)"

msgid "Returns ``1.0`` if positive, ``-1.0`` if negative, ``0.0`` otherwise."
msgstr ""
"Повертає ``1.0``, якщо позитивне значення, ``-1.0``, ``-1.0``, якщо "
"негативне значення, ``0.0`` інакше."

msgid ":ref:`sign<shader_func_sign>`\\ (\\ |vec_int_type| x)"
msgstr ":ref:`sign<shader_func_sign>`\\ (\\ |vec_int_type| x)"

msgid "Returns ``1`` if positive, ``-1`` if negative, ``0`` otherwise."
msgstr ""
"Повертає ``1``, якщо додатне значення, ``-1``, ``-1``, ``0`` якщо негативне "
"значення, ``0`` інакше."

msgid ":ref:`floor<shader_func_floor>`\\ (\\ |vec_type| x)"
msgstr ":ref:`floor<shader_func_floor>`\\ (\\ |vec_type| x)"

msgid "Rounds to the integer below."
msgstr "Округлює до цілого числа нижче."

msgid ":ref:`round<shader_func_round>`\\ (\\ |vec_type| x)"
msgstr ":ref:`round<shader_func_round>`\\ (\\ |vec_type| x)"

msgid "Rounds to the nearest integer."
msgstr "Округлює до найближчого цілого числа."

msgid ":ref:`roundEven<shader_func_roundEven>`\\ (\\ |vec_type| x)"
msgstr ":ref:`roundEven<shader_func_roundEven>`\\ (\\ |vec_type| x)"

msgid "Rounds to the nearest even integer."
msgstr "Округлює до найближчого парного цілого числа."

msgid ":ref:`trunc<shader_func_trunc>`\\ (\\ |vec_type| x)"
msgstr ":ref:`trunc<shader_func_trunc>`\\ (\\ |vec_type| x)"

msgid "Truncation."
msgstr "Усічення."

msgid ":ref:`ceil<shader_func_ceil>`\\ (\\ |vec_type| x)"
msgstr ":ref:`ceil<shader_func_ceil>`\\ (\\ |vec_type| x)"

msgid "Rounds to the integer above."
msgstr "Округлює до цілого числа вище."

msgid ":ref:`fract<shader_func_fract>`\\ (\\ |vec_type| x)"
msgstr ":ref:`fract<shader_func_fract>`\\ (\\ |vec_type| x)"

msgid "Fractional (returns ``x - floor(x)``)."
msgstr "Дробовий (повертає ``x - floor(x)``)."

msgid ":ref:`mod<shader_func_mod>`\\ (\\ |vec_type| x, |vec_type| y)"
msgstr ":ref:`mod<shader_func_mod>`\\ (\\ |vec_type| x, |vec_type| y)"

msgid ":ref:`mod<shader_func_mod>`\\ (\\ |vec_type| x, float y)"
msgstr ":ref:`mod<shader_func_mod>`\\ (\\ |vec_type| x, float y)"

msgid "Modulo (division remainder)."
msgstr "По модулю (залишок від ділення)."

msgid ":ref:`modf<shader_func_modf>`\\ (\\ |vec_type| x, out |vec_type| i)"
msgstr ":ref:`modf<shader_func_modf>`\\ (\\ |vec_type| x, out |vec_type| i)"

msgid "Fractional of ``x``, with ``i`` as integer part."
msgstr "Дробове значення x, де i є цілою частиною."

msgid "|vec_uint_type|"
msgstr "|vec_uint_type|"

msgid ":ref:`min<shader_func_min>`\\ (\\ |vec_type| a, |vec_type| b)"
msgstr ":ref:`min<shader_func_min>`\\ (\\ |vec_type| a, |vec_type| b)"

msgid ":ref:`min<shader_func_min>`\\ (\\ |vec_type| a, float b)"
msgstr ":ref:`min<shader_func_min>`\\ (\\ |vec_type| a, float b)"

msgid ":ref:`min<shader_func_min>`\\ (\\ |vec_int_type| a, |vec_int_type| b)"
msgstr ":ref:`min<shader_func_min>`\\ (\\ |vec_int_type| a, |vec_int_type| b)"

msgid ":ref:`min<shader_func_min>`\\ (\\ |vec_int_type| a, int b)"
msgstr ":ref:`min<shader_func_min>`\\ (\\ |vec_int_type| a, int b)"

msgid ":ref:`min<shader_func_min>`\\ (\\ |vec_uint_type| a, |vec_uint_type| b)"
msgstr ""
":ref:`min<shader_func_min>`\\ (\\ |vec_uint_type| a, |vec_uint_type| b)"

msgid ":ref:`min<shader_func_min>`\\ (\\ |vec_uint_type| a, uint b)"
msgstr ":ref:`min<shader_func_min>`\\ (\\ |vec_uint_type| a, uint b)"

msgid "Lowest value between ``a`` and ``b``."
msgstr "Найменше значення між \"a\" і \"b\"."

msgid ":ref:`max<shader_func_max>`\\ (\\ |vec_type| a, |vec_type| b)"
msgstr ":ref:`max<shader_func_max>`\\ (\\ |vec_type| a, |vec_type| b)"

msgid ":ref:`max<shader_func_max>`\\ (\\ |vec_type| a, float b)"
msgstr ":ref:`max<shader_func_max>`\\ (\\ |vec_type| a, float b)"

msgid ":ref:`max<shader_func_max>`\\ (\\ |vec_uint_type| a, |vec_uint_type| b)"
msgstr ""
":ref:`max<shader_func_max>`\\ (\\ |vec_uint_type| a, |vec_uint_type| b)"

msgid ":ref:`max<shader_func_max>`\\ (\\ |vec_uint_type| a, uint b)"
msgstr ":ref:`max<shader_func_max>`\\ (\\ |vec_uint_type| a, uint b)"

msgid ":ref:`max<shader_func_max>`\\ (\\ |vec_int_type| a, |vec_int_type| b)"
msgstr ":ref:`max<shader_func_max>`\\ (\\ |vec_int_type| a, |vec_int_type| b)"

msgid ":ref:`max<shader_func_max>`\\ (\\ |vec_int_type| a, int b)"
msgstr ":ref:`max<shader_func_max>`\\ (\\ |vec_int_type| a, int b)"

msgid "Highest value between ``a`` and ``b``."
msgstr "Найвище значення між ``a`` і ``b``."

msgid ""
":ref:`clamp<shader_func_clamp>`\\ (\\ |vec_type| x, |vec_type| min, |"
"vec_type| max)"
msgstr ""
":ref:`clamp<shader_func_clamp>`\\ (\\ |vec_type| x, |vec_type| min, |"
"vec_type| max)"

msgid ""
":ref:`clamp<shader_func_clamp>`\\ (\\ |vec_type| x, float min, float max)"
msgstr ""
":ref:`clamp<shader_func_clamp>`\\ (\\ |vec_type| x, float min, float max)"

msgid ""
":ref:`clamp<shader_func_clamp>`\\ (\\ |vec_int_type| x, |vec_int_type| min, |"
"vec_int_type| max)"
msgstr ""
":ref:`clamp<shader_func_clamp>`\\ (\\ |vec_int_type| x, |vec_int_type| min, |"
"vec_int_type| max)"

msgid ""
":ref:`clamp<shader_func_clamp>`\\ (\\ |vec_int_type| x, float min, float max)"
msgstr ""
":ref:`clamp<shader_func_clamp>`\\ (\\ |vec_int_type| x, float min, float max)"

msgid "Clamps ``x`` between ``min`` and ``max`` (inclusive)."
msgstr "Затискає ``x`` між ``min`` і ``max`` (включно)."

msgid ""
":ref:`mix<shader_func_mix>`\\ (\\ |vec_type| a, |vec_type| b, |vec_type| c)"
msgstr ""
":ref:`mix<shader_func_mix>`\\ (\\ |vec_type| a, |vec_type| b, |vec_type| c)"

msgid ":ref:`mix<shader_func_mix>`\\ (\\ |vec_type| a, |vec_type| b, float c)"
msgstr ":ref:`mix<shader_func_mix>`\\ (\\ |vec_type| a, |vec_type| b, float c)"

msgid ""
":ref:`mix<shader_func_mix>`\\ (\\ |vec_type| a, |vec_type| b, |"
"vec_bool_type| c)"
msgstr ""
":ref:`mix<shader_func_mix>`\\ (\\ |vec_type| a, |vec_type| b, |"
"vec_bool_type| c)"

msgid "Linear interpolate between ``a`` and ``b`` by ``c``."
msgstr "Лінійна інтерполяція між ``a`` і ``b`` на ``c``."

msgid ""
":ref:`fma<shader_func_fma>`\\ (\\ |vec_type| a, |vec_type| b, |vec_type| c)"
msgstr ""
":ref:`fma<shader_func_fma>`\\ (\\ |vec_type| a, |vec_type| b, |vec_type| c)"

msgid "Fused multiply-add operation: ``(a * b + c)``"
msgstr "Операція злитого множення-додавання: ``(a * b + c)``"

msgid ":ref:`step<shader_func_step>`\\ (\\ |vec_type| a, |vec_type| b)"
msgstr ":ref:`step<shader_func_step>`\\ (\\ |vec_type| a, |vec_type| b)"

msgid ":ref:`step<shader_func_step>`\\ (\\ float a, |vec_type| b)"
msgstr ":ref:`step<shader_func_step>`\\ (\\ float a, |vec_type| b)"

msgid "``b < a ? 0.0 : 1.0``"
msgstr "``b < a ? 0.0 : 1.0``"

msgid ""
":ref:`smoothstep<shader_func_smoothstep>`\\ (\\ |vec_type| a, |vec_type| b, |"
"vec_type| c)"
msgstr ""
":ref:`smoothstep<shader_func_smoothstep>`\\ (\\ |vec_type| a, |vec_type| b, |"
"vec_type| c)"

msgid ""
":ref:`smoothstep<shader_func_smoothstep>`\\ (\\ float a, float b, |vec_type| "
"c)"
msgstr ""
":ref:`smoothstep<shader_func_smoothstep>`\\ (\\ float a, float b, |vec_type| "
"c)"

msgid "Hermite interpolate between ``a`` and ``b`` by ``c``."
msgstr "Ерміт інтерполює між ``a`` і ``b`` на ``c``."

msgid "|vec_bool_type|"
msgstr "|vec_bool_type|"

msgid ":ref:`isnan<shader_func_isnan>`\\ (\\ |vec_type| x)"
msgstr ":ref:`isnan<shader_func_isnan>`\\ (\\ |vec_type| x)"

msgid "Returns ``true`` if scalar or vector component is ``NaN``."
msgstr "Повертає ``true``, якщо скалярний або векторний компонент є ``NaN``."

msgid ":ref:`isinf<shader_func_isinf>`\\ (\\ |vec_type| x)"
msgstr ":ref:`isinf<shader_func_isinf>`\\ (\\ |vec_type| x)"

msgid "Returns ``true`` if scalar or vector component is ``INF``."
msgstr "Повертає ``true``, якщо скалярний або векторний компонент є ``INF``."

msgid ":ref:`floatBitsToInt<shader_func_floatBitsToInt>`\\ (\\ |vec_type| x)"
msgstr ":ref:`floatBitsToInt<shader_func_floatBitsToInt>`\\ (\\ |vec_type| x)"

msgid "``float`` to ``int`` bit copying, no conversion."
msgstr "Копіювання бітів ``float`` в ``int``, без перетворення."

msgid ":ref:`floatBitsToUint<shader_func_floatBitsToUint>`\\ (\\ |vec_type| x)"
msgstr ""
":ref:`floatBitsToUint<shader_func_floatBitsToUint>`\\ (\\ |vec_type| x)"

msgid "``float`` to ``uint`` bit copying, no conversion."
msgstr "Копіювання бітів ``float`` в ``uint``, без перетворення."

msgid ""
":ref:`intBitsToFloat<shader_func_intBitsToFloat>`\\ (\\ |vec_int_type| x)"
msgstr ""
":ref:`intBitsToFloat<shader_func_intBitsToFloat>`\\ (\\ |vec_int_type| x)"

msgid "``int`` to ``float`` bit copying, no conversion."
msgstr "Копіювання бітів ``int`` у ``float``, без перетворення."

msgid ""
":ref:`uintBitsToFloat<shader_func_uintBitsToFloat>`\\ (\\ |vec_uint_type| x)"
msgstr ""
":ref:`uintBitsToFloat<shader_func_uintBitsToFloat>`\\ (\\ |vec_uint_type| x)"

msgid "``uint`` to ``float`` bit copying, no conversion."
msgstr "``uint`` до ``float`` бітове копіювання, без перетворення."

msgid "Exponential and math function descriptions"
msgstr "Опис експоненціальних і математичних функцій"

msgid ""
"|vec_type| **pow**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_pow>`"
msgstr ""
"|vec_type| **pow**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_pow>`"

msgid "Raises ``x`` to the power of ``y``."
msgstr "Підносить ``x`` до степеня ``y``."

msgid "The result is undefined if ``x < 0`` or  if ``x == 0`` and ``y <= 0``."
msgstr ""
"Результат не визначений, якщо ``x < 0`` або якщо ``x == 0`` і ``y <= 0``."

msgid "The value to be raised to the power ``y``."
msgstr "Значення, яке потрібно підняти до степеня ``y``."

msgid "The power to which ``x`` will be raised."
msgstr "Степінь, до якого буде зведено ``x``."

msgid "The value of ``x`` raised to the ``y`` power."
msgstr "Значення ``x``, зведене до степеня ``y``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/pow.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/pow.xhtml"

msgid "|vec_type| **exp**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_exp>`"
msgstr "|vec_type| **exp**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_exp>`"

msgid "Raises ``e`` to the power of ``x``, or the the natural exponentiation."
msgstr "Підносить ``e`` до степеня ``x`` або натурального степеня."

msgid "Equivalent to ``pow(e, x)``."
msgstr "Еквівалент ``pow(e, x)``."

msgid "The value to exponentiate."
msgstr "Значення, яке потрібно піднести до степеня."

msgid "The natural exponentiation of ``x``."
msgstr "Природне піднесення до степеня ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/exp.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/exp.xhtml"

msgid "|vec_type| **exp2**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_exp2>`"
msgstr "|vec_type| **exp2**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_exp2>`"

msgid "Raises ``2`` to the power of ``x``."
msgstr "Підносить ``2`` до степеня ``x``."

msgid "Equivalent to ``pow(2.0, x)``."
msgstr "Еквівалент ``pow(2.0, x)``."

msgid "The value of the power to which ``2`` will be raised."
msgstr "Значення степеня, до якого буде зведено \"2\"."

msgid "``2`` raised to the power of x."
msgstr "``2`` піднесені до степеня х."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/exp2.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/exp2.xhtml"

msgid "|vec_type| **log**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_log>`"
msgstr "|vec_type| **log**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_log>`"

msgid ""
"Returns the natural logarithm of ``x``, i.e. the value ``y`` which satisfies "
"``x == pow(e, y)``. The result is undefined if ``x <= 0``."
msgstr ""
"Повертає натуральний логарифм ``x``, тобто значення ``y``, яке задовольняє "
"``x == pow(e, y)``. Результат не визначений, якщо ``x <= 0``."

msgid "The value of which to take the natural logarithm."
msgstr "Значення якого взяти за натуральний логарифм."

msgid "The natural logarithm of ``x``."
msgstr "Натуральний логарифм \"x\"."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/log.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/log.xhtml"

msgid "|vec_type| **log2**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_log2>`"
msgstr "|vec_type| **log2**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_log2>`"

msgid ""
"Returns the base-2 logarithm of ``x``, i.e. the value ``y`` which satisfies "
"``x == pow(2, y)``. The result is undefined if ``x <= 0``."
msgstr ""
"Повертає логарифм ``x`` за основою 2, тобто значення ``y``, яке задовольняє "
"``x == pow(2, y)``. Результат не визначений, якщо ``x <= 0``."

msgid "The value of which to take the base-2 logarithm."
msgstr "Значення, яке взяти за логарифмом за основою 2."

msgid "The base-2 logarithm of ``x``."
msgstr "Логарифм \"x\" за основою 2."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/log2.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/log2.xhtml"

msgid "|vec_type| **sqrt**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_sqrt>`"
msgstr "|vec_type| **sqrt**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_sqrt>`"

msgid "Returns the square root of ``x``. The result is undefined if ``x < 0``."
msgstr ""
"Повертає квадратний корінь із x. Результат не визначений, якщо ``x < 0``."

msgid "The value of which to take the square root."
msgstr "Значення, з якого потрібно взяти квадратний корінь."

msgid "The square root of ``x``."
msgstr "Квадратний корінь із \"x\"."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sqrt.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sqrt.xhtml"

msgid ""
"|vec_type| **inversesqrt**\\ (\\ |vec_type| "
"x) :ref:`🔗<shader_func_inversesqrt>`"
msgstr ""
"|vec_type| **inversesqrt**\\ (\\ |vec_type| "
"x) :ref:`🔗<shader_func_inversesqrt>`"

msgid ""
"Returns the inverse of the square root of ``x``, or ``1.0 / sqrt(x)``. The "
"result is undefined if ``x <= 0``."
msgstr ""
"Повертає значення, обернене до квадратного кореня з ``x`` або ``1,0 / "
"sqrt(x)``. Результат не визначений, якщо ``x <= 0``."

msgid "The value of which to take the inverse of the square root."
msgstr "Значення, обернене до квадратного кореня."

msgid "The inverse of the square root of ``x``."
msgstr "Значення, обернене до квадратного кореня з \"x\"."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/inversesqrt.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/inversesqrt.xhtml"

msgid "|vec_type| **abs**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_abs>`"
msgstr "|vec_type| **abs**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_abs>`"

msgid ""
"|vec_int_type| **abs**\\ (\\ |vec_int_type| x) :ref:`🔗<shader_func_abs>`"
msgstr ""
"|vec_int_type| **abs**\\ (\\ |vec_int_type| x) :ref:`🔗<shader_func_abs>`"

msgid ""
"Returns the absolute value of ``x``. Returns ``x`` if ``x`` is positive, "
"otherwise returns ``-1 * x``."
msgstr ""
"Повертає абсолютне значення ``x``. Повертає ``x``, якщо ``x`` є додатним, "
"інакше повертає ``-1 * x``."

msgid "The value of which to return the absolute."
msgstr "Абсолютне значення, яке потрібно повернути."

msgid "The absolute value of ``x``."
msgstr "Абсолютне значення ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/abs.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/abs.xhtml"

msgid "|vec_type| **sign**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_sign>`"
msgstr "|vec_type| **sign**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_sign>`"

msgid ""
"|vec_int_type| **sign**\\ (\\ |vec_int_type| x) :ref:`🔗<shader_func_sign>`"
msgstr ""
"|vec_int_type| **sign**\\ (\\ |vec_int_type| x) :ref:`🔗<shader_func_sign>`"

msgid ""
"Returns ``-1`` if ``x < 0``, ``0`` if ``x == 0``, and ``1`` if ``x > 0``."
msgstr ""
"Повернення ``-1`` if ``x < 0``, ``0`` if ``x == 0``, and ``1`` if ``x > 0``."

msgid "The value from which to extract the sign."
msgstr "Значення, з якого потрібно отримати знак."

msgid "The sign of ``x``."
msgstr "Знак ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sign.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/sign.xhtml"

msgid "|vec_type| **floor**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_floor>`"
msgstr "|vec_type| **floor**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_floor>`"

msgid ""
"Returns a value equal to the nearest integer that is less than or equal to "
"``x``."
msgstr ""
"Повертає значення, що дорівнює найближчому цілому числу, яке менше або "
"дорівнює ``x``."

msgid "The value to floor."
msgstr "Значення підлоги."

msgid "The nearest integer that is less than or equal to ``x``."
msgstr "Найближче ціле число, яке менше або дорівнює \"x\"."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/floor.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/floor.xhtml"

msgid "|vec_type| **round**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_round>`"
msgstr "|vec_type| **round**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_round>`"

msgid "Rounds ``x`` to the nearest integer."
msgstr "Округлює x до найближчого цілого числа."

msgid ""
"Rounding of values with a fractional part of ``0.5`` is implementation-"
"dependent. This includes the possibility that ``round(x)`` returns the same "
"value as ``roundEven(x)``for all values of ``x``."
msgstr ""
"Округлення значень із дробовою частиною ``0,5`` залежить від реалізації. Це "
"включає можливість того, що ``round(x)`` повертає те саме значення, "
"``roundEven(x)`` для всіх значень ``x``."

msgid "The value to round."
msgstr "Значення для округлення."

msgid "The rounded value."
msgstr "Округлене значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/round.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/round.xhtml"

msgid ""
"|vec_type| **roundEven**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_roundEven>`"
msgstr ""
"|vec_type| **roundEven**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_roundEven>`"

msgid ""
"Rounds ``x`` to the nearest integer. A value with a fractional part of "
"``0.5`` will always round toward the nearest even integer. For example, both "
"``3.5`` and ``4.5`` will round to ``4.0``."
msgstr ""
"Округлює x до найближчого цілого числа. Значення з дробовою частиною ``0,5`` "
"завжди округлятиметься до найближчого парного цілого числа. Наприклад, і "
"``3,5``, і ``4,5`` округлять до ``4,0``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/roundEven.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/roundEven.xhtml"

msgid "|vec_type| **trunc**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_trunc>`"
msgstr "|vec_type| **trunc**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_trunc>`"

msgid ""
"Truncates ``x``. Returns a value equal to the nearest integer to ``x`` whose "
"absolute value is not larger than the absolute value of ``x``."
msgstr ""
"Скорочує ``x``. Повертає значення, що дорівнює найближчому цілому числу до "
"``x``, абсолютне значення якого не перевищує абсолютного значення ``x``."

msgid "The value to evaluate."
msgstr "Значення для оцінки."

msgid "The truncated value."
msgstr "Усічене значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/trunc.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/trunc.xhtml"

msgid "|vec_type| **ceil**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_ceil>`"
msgstr "|vec_type| **ceil**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_ceil>`"

msgid ""
"Returns a value equal to the nearest integer that is greater than or equal "
"to ``x``."
msgstr ""
"Повертає значення, що дорівнює найближчому цілому числу, яке більше або "
"дорівнює ``x``."

msgid "The ceiling-ed value."
msgstr "Максимальне значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/ceil.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/ceil.xhtml"

msgid "|vec_type| **fract**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_fract>`"
msgstr "|vec_type| **fract**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_fract>`"

msgid "Returns the fractional part of ``x``."
msgstr "Повертає дробову частину ``x``."

msgid "This is calculated as ``x - floor(x)``."
msgstr "Це обчислюється як ``x - floor(x)``."

msgid "The fractional part of ``x``."
msgstr "Дробова частина ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/fract.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/fract.xhtml"

msgid ""
"|vec_type| **mod**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_mod>`"
msgstr ""
"|vec_type| **mod**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_mod>`"

msgid ""
"|vec_type| **mod**\\ (\\ |vec_type| x, float y) :ref:`🔗<shader_func_mod>`"
msgstr ""
"|vec_type| **mod**\\ (\\ |vec_type| x, float y) :ref:`🔗<shader_func_mod>`"

msgid ""
"Returns the value of ``x modulo y``. This is also sometimes called the "
"remainder."
msgstr "Повертає значення x по модулю y. Це також іноді називають залишком."

msgid "This is computed as ``x - y * floor(x/y)``."
msgstr "Це обчислюється як ``x - y * floor(x/y)``."

msgid "The value of ``x modulo y``."
msgstr "Значення ``x modulo y``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mod.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mod.xhtml"

msgid ""
"|vec_type| **modf**\\ (\\ |vec_type| x, out |vec_type| "
"i) :ref:`🔗<shader_func_modf>`"
msgstr ""
"|vec_type| **modf**\\ (\\ |vec_type| x, out |vec_type| "
"i) :ref:`🔗<shader_func_modf>`"

msgid ""
"Separates a floating-point value ``x`` into its integer and fractional parts."
msgstr "Розділяє значення з плаваючою комою ``x`` на цілу та дробову частини."

msgid ""
"The fractional part of the number is returned from the function. The integer "
"part (as a floating-point quantity) is returned in the output parameter "
"``i``."
msgstr ""
"Функція повертає дробову частину числа. Ціла частина (як величина з "
"плаваючою комою) повертається у вихідному параметрі ``i``."

msgid "The value to separate."
msgstr "Значення, яке потрібно розділити."

msgid "param out i"
msgstr "param out i"

msgid "A variable that receives the integer part of ``x``."
msgstr "Змінна, яка отримує цілу частину ``x``."

msgid "The fractional part of the number."
msgstr "Дробова частина числа."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/modf.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/modf.xhtml"

msgid ""
"|vec_type| **min**\\ (\\ |vec_type| a, |vec_type| "
"b) :ref:`🔗<shader_func_min>`"
msgstr ""
"|vec_type| **min**\\ (\\ |vec_type| a, |vec_type| "
"b) :ref:`🔗<shader_func_min>`"

msgid ""
"|vec_type| **min**\\ (\\ |vec_type| a, float b) :ref:`🔗<shader_func_min>`"
msgstr ""
"|vec_type| **min**\\ (\\ |vec_type| a, float b) :ref:`🔗<shader_func_min>`"

msgid ""
"|vec_int_type| **min**\\ (\\ |vec_int_type| a, |vec_int_type| "
"b) :ref:`🔗<shader_func_min>`"
msgstr ""
"|vec_int_type| **min**\\ (\\ |vec_int_type| a, |vec_int_type| "
"b) :ref:`🔗<shader_func_min>`"

msgid ""
"|vec_int_type| **min**\\ (\\ |vec_int_type| a, int "
"b) :ref:`🔗<shader_func_min>`"
msgstr ""
"|vec_int_type| **min**\\ (\\ |vec_int_type| a, int "
"b) :ref:`🔗<shader_func_min>`"

msgid ""
"|vec_uint_type| **min**\\ (\\ |vec_uint_type| a, |vec_uint_type| "
"b) :ref:`🔗<shader_func_min>`"
msgstr ""
"|vec_uint_type| **min**\\ (\\ |vec_uint_type| a, |vec_uint_type| "
"b) :ref:`🔗<shader_func_min>`"

msgid ""
"|vec_uint_type| **min**\\ (\\ |vec_uint_type| a, uint "
"b) :ref:`🔗<shader_func_min>`"
msgstr ""
"|vec_uint_type| **min**\\ (\\ |vec_uint_type| a, uint "
"b) :ref:`🔗<shader_func_min>`"

msgid "Returns the minimum of two values ``a`` and ``b``."
msgstr "Повертає мінімум із двох значень ``a`` і ``b``."

msgid "Returns ``b`` if ``b < a``, otherwise returns ``a``."
msgstr "Повертає ``b``, якщо ``b < a``, інакше повертає ``a``."

msgid "param a"
msgstr "param a"

msgid "The first value to compare."
msgstr "Перше значення для порівняння."

msgid "param b"
msgstr "param b"

msgid "The second value to compare."
msgstr "Друге значення для порівняння."

msgid "The minimum value."
msgstr "Мінімальне значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/min.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/min.xhtml"

msgid ""
"|vec_type| **max**\\ (\\ |vec_type| a, |vec_type| "
"b) :ref:`🔗<shader_func_max>`"
msgstr ""
"|vec_type| **max**\\ (\\ |vec_type| a, |vec_type| "
"b) :ref:`🔗<shader_func_max>`"

msgid ""
"|vec_type| **max**\\ (\\ |vec_type| a, float b) :ref:`🔗<shader_func_max>`"
msgstr ""
"|vec_type| **max**\\ (\\ |vec_type| a, float b) :ref:`🔗<shader_func_max>`"

msgid ""
"|vec_uint_type| **max**\\ (\\ |vec_uint_type| a, |vec_uint_type| "
"b) :ref:`🔗<shader_func_max>`"
msgstr ""
"|vec_uint_type| **max**\\ (\\ |vec_uint_type| a, |vec_uint_type| "
"b) :ref:`🔗<shader_func_max>`"

msgid ""
"|vec_uint_type| **max**\\ (\\ |vec_uint_type| a, uint "
"b) :ref:`🔗<shader_func_max>`"
msgstr ""
"|vec_uint_type| **max**\\ (\\ |vec_uint_type| a, uint "
"b) :ref:`🔗<shader_func_max>`"

msgid ""
"|vec_int_type| **max**\\ (\\ |vec_int_type| a, |vec_int_type| "
"b) :ref:`🔗<shader_func_max>`"
msgstr ""
"|vec_int_type| **max**\\ (\\ |vec_int_type| a, |vec_int_type| "
"b) :ref:`🔗<shader_func_max>`"

msgid ""
"|vec_int_type| **max**\\ (\\ |vec_int_type| a, int "
"b) :ref:`🔗<shader_func_max>`"
msgstr ""
"|vec_int_type| **max**\\ (\\ |vec_int_type| a, int "
"b) :ref:`🔗<shader_func_max>`"

msgid "Returns the maximum of two values ``a`` and ``b``."
msgstr "Повертає максимум із двох значень ``a`` і ``b``."

msgid "It returns ``b`` if ``b > a``, otherwise it returns ``a``."
msgstr "Повертає ``b``, якщо ``b > a``, інакше повертає ``a``."

msgid "The maximum value."
msgstr "Максимальне значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/max.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/max.xhtml"

msgid ""
"|vec_type| **clamp**\\ (\\ |vec_type| x, |vec_type| minVal, |vec_type| "
"maxVal) :ref:`🔗<shader_func_clamp>`"
msgstr ""
"|vec_type| **clamp**\\ (\\ |vec_type| x, |vec_type| minVal, |vec_type| "
"maxVal) :ref:`🔗<shader_func_clamp>`"

msgid ""
"|vec_type| **clamp**\\ (\\ |vec_type| x, float minVal, float "
"maxVal) :ref:`🔗<shader_func_clamp>`"
msgstr ""
"|vec_type| **clamp**\\ (\\ |vec_type| x, float minVal, float "
"maxVal) :ref:`🔗<shader_func_clamp>`"

msgid ""
"|vec_uint_type| **clamp**\\ (\\ |vec_int_type| x, float minVal, float "
"maxVal) :ref:`🔗<shader_func_clamp>`"
msgstr ""
"|vec_uint_type| **clamp**\\ (\\ |vec_int_type| x, float minVal, float "
"maxVal) :ref:`🔗<shader_func_clamp>`"

msgid ""
"|vec_int_type| **clamp**\\ (\\ |vec_type| x, |vec_type| minVal, |vec_type| "
"maxVal) :ref:`🔗<shader_func_clamp>`"
msgstr ""
"|vec_int_type| **clamp**\\ (\\ |vec_type| x, |vec_type| minVal, |vec_type| "
"maxVal) :ref:`🔗<shader_func_clamp>`"

msgid ""
"|vec_int_type| **clamp**\\ (\\ |vec_type| x, float minVal, float "
"maxVal) :ref:`🔗<shader_func_clamp>`"
msgstr ""
"|vec_int_type| **clamp**\\ (\\ |vec_type| x, float minVal, float "
"maxVal) :ref:`🔗<shader_func_clamp>`"

msgid ""
"Returns the value of ``x`` constrained to the range ``minVal`` to ``maxVal``."
msgstr "Повертає значення ``x``, обмежене діапазоном ``minVal`` до ``maxVal``."

msgid "The returned value is computed as ``min(max(x, minVal), maxVal)``."
msgstr "Повернене значення обчислюється як ``min(max(x, minVal), maxVal)``."

msgid "The value to constrain."
msgstr "Значення, яке потрібно обмежити."

msgid "param minVal"
msgstr "param minVal"

msgid "The lower end of the range into which to constrain ``x``."
msgstr "Нижня межа діапазону, до якого потрібно обмежити \"x\"."

msgid "param maxVal"
msgstr "param maxVal"

msgid "The upper end of the range into which to constrain ``x``."
msgstr "Верхня межа діапазону, до якого потрібно обмежити \"x\"."

msgid "The clamped value."
msgstr "Закріплене значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/clamp.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/clamp.xhtml"

msgid ""
"|vec_type| **mix**\\ (\\ |vec_type| a, |vec_type| b, |vec_type| "
"c) :ref:`🔗<shader_func_mix>`"
msgstr ""
"|vec_type| **mix**\\ (\\ |vec_type| a, |vec_type| b, |vec_type| "
"c) :ref:`🔗<shader_func_mix>`"

msgid ""
"|vec_type| **mix**\\ (\\ |vec_type| a, |vec_type| b, float "
"c) :ref:`🔗<shader_func_mix>`"
msgstr ""
"|vec_type| **mix**\\ (\\ |vec_type| a, |vec_type| b, float "
"c) :ref:`🔗<shader_func_mix>`"

msgid ""
"Performs a linear interpolation between ``a`` and ``b`` using ``c`` to "
"weight between them."
msgstr ""
"Виконує лінійну інтерполяцію між ``a`` і ``b``, використовуючи ``c`` для "
"зважування між ними."

msgid "Computed as ``a * (1 - c) + b * c``."
msgstr "Обчислюється як ``a * (1 - c) + b * c``."

msgid ""
"Equivalent to :ref:`lerp() <class_@GlobalScope_method_lerp>` in GDScript."
msgstr "Еквівалент :ref:`lerp() <class_@GlobalScope_method_lerp>` в GDScript."

msgid "The start of the range in which to interpolate."
msgstr "Початок діапазону для інтерполяції."

msgid "The end of the range in which to interpolate."
msgstr "Кінець діапазону для інтерполяції."

msgid "param c"
msgstr "param c"

msgid "The value to use to interpolate between ``a`` and ``b``."
msgstr "Значення, яке використовується для інтерполяції між ``a`` і ``b``."

msgid "The interpolated value."
msgstr "Інтерпольоване значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mix.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mix.xhtml"

msgid ""
"|vec_type| **mix**\\ (\\ |vec_type| a, |vec_type| b, |vec_bool_type| "
"c) :ref:`🔗<shader_func_mix>`"
msgstr ""
"|vec_type| **mix**\\ (\\ |vec_type| a, |vec_type| b, |vec_bool_type| "
"c) :ref:`🔗<shader_func_mix>`"

msgid ""
"Selects either value ``a`` or value ``b`` based on the value of ``c``. For a "
"component of ``c`` that is false, the corresponding component of ``a`` is "
"returned. For a component of ``c`` that is true, the corresponding component "
"of ``b`` is returned. Components of ``a`` and ``b`` that are not selected "
"are allowed to be invalid floating-point values and will have no effect on "
"the results."
msgstr ""
"Вибирає або значення \"a\" або значення \"b\" на основі значення \"c\". Для "
"компонента ``c``, який є false, повертається відповідний компонент ``a``. "
"Для компонента ``c``, який є істинним, повертається відповідний компонент "
"``b``. Компоненти ``a`` і ``b``, які не вибрано, можуть бути недійсними "
"значеннями з плаваючою комою і не матимуть впливу на результати."

msgid ""
"If ``a``, ``b``, and ``c`` are vector types the operation is "
"performed :ref:`component-wise <shading_componentwise>`. ie. ``mix(vec2(42, "
"314), vec2(9.8, 6e23), bvec2(true, false)))`` will return ``vec2(9.8, 314)``."
msgstr ""
"Якщо ``a``, ``b`` і ``c`` є векторними типами, операція "
"виконується :ref:`component-wise <shading_componentwise>`. тобто. "
"``mix(vec2(42, 314), vec2(9.8, 6e23), bvec2(true, false)))`` поверне "
"``vec2(9.8, 314)``."

msgid "Value returned when ``c`` is false."
msgstr "Значення, що повертається, коли ``c`` є false."

msgid "Value returned when ``c`` is true."
msgstr "Значення, що повертається, коли ``c`` має значення true."

msgid "The value used to select between ``a`` and ``b``."
msgstr "Значення, яке використовується для вибору між ``a`` і ``b``."

msgid ""
"|vec_type| **fma**\\ (\\ |vec_type| a, |vec_type| b, |vec_type| "
"c) :ref:`🔗<shader_func_fma>`"
msgstr ""
"|vec_type| **fma**\\ (\\ |vec_type| a, |vec_type| b, |vec_type| "
"c) :ref:`🔗<shader_func_fma>`"

msgid ""
"Performs, where possible, a fused multiply-add operation, returning ``a * b "
"+ c``. In use cases where the return value is eventually consumed by a "
"variable declared as precise:"
msgstr ""
"Виконує, де можливо, операцію злитого множення-додавання, повертаючи ``a * b "
"+ c``. У випадках використання, коли повернуте значення зрештою споживається "
"змінною, оголошеною як precise:"

msgid ""
"``fma()`` is considered a single operation, whereas the expression ``a * b + "
"c`` consumed by a variable declared as precise is considered two operations."
msgstr ""
"``fma()`` вважається однією операцією, тоді як вираз ``a * b + c``, що "
"споживається змінною, оголошеною як precise, вважається двома операціями."

msgid ""
"The precision of ``fma()`` can differ from the precision of the expression "
"``a * b + c``."
msgstr ""
"Точність ``fma()`` може відрізнятися від точності виразу ``a * b + c``."

msgid ""
"``fma()`` will be computed with the same precision as any other ``fma()`` "
"consumed by a precise variable, giving invariant results for the same input "
"values of a, b and c."
msgstr ""
"``fma()`` обчислюватиметься з такою ж точністю, як і будь-який інший "
"``fma()``, що споживається точною змінною, даючи незмінні результати для тих "
"самих вхідних значень a, b і c."

msgid ""
"Otherwise, in the absence of precise consumption, there are no special "
"constraints on the number of operations or difference in precision between "
"``fma()`` and the expression ``a * b + c``."
msgstr ""
"В іншому випадку, за відсутності точного споживання, немає особливих "
"обмежень щодо кількості операцій або різниці в точності між ``fma()`` і "
"виразом ``a * b + c``."

msgid "The first value to be multiplied."
msgstr "Перше значення для множення."

msgid "The second value to be multiplied."
msgstr "Друге значення для множення."

msgid "The value to be added to the result."
msgstr "Значення, яке потрібно додати до результату."

msgid "The value of ``a * b + c``."
msgstr "Значення ``a * b + c``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/fma.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/fma.xhtml"

msgid ""
"|vec_type| **step**\\ (\\ |vec_type| a, |vec_type| "
"b) :ref:`🔗<shader_func_step>`"
msgstr ""
"|vec_type| **step**\\ (\\ |vec_type| a, |vec_type| "
"b) :ref:`🔗<shader_func_step>`"

msgid ""
"|vec_type| **step**\\ (\\ float a, |vec_type| b) :ref:`🔗<shader_func_step>`"
msgstr ""
"|vec_type| **step**\\ (\\ float a, |vec_type| b) :ref:`🔗<shader_func_step>`"

msgid "Generates a step function by comparing b to a."
msgstr "Створює ступінчасту функцію шляхом порівняння b з a."

msgid ""
"Equivalent to ``if (b < a) { return 0.0; } else { return 1.0; }``. For "
"element i of the return value, 0.0 is returned if b[i] < a[i], and 1.0 is "
"returned otherwise."
msgstr ""
"Еквівалент ``if (b < a) { return 0.0; } else { return 1.0; }``. Для елемента "
"i значення, що повертається, 0,0 повертається, якщо b[i] < a[i], і 1,0 "
"повертається в іншому випадку."

msgid "The location of the edge of the step function."
msgstr "Розташування краю ступінчастої функції."

msgid "The value to be used to generate the step function."
msgstr "Значення, яке буде використано для генерації крокової функції."

msgid "``0.0`` or ``1.0``."
msgstr "``0.0`` або ``1.0``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/step.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/step.xhtml"

msgid ""
"|vec_type| **smoothstep**\\ (\\ |vec_type| a, |vec_type| b, |vec_type| "
"c) :ref:`🔗<shader_func_smoothstep>`"
msgstr ""
"|vec_type| **smoothstep**\\ (\\ |vec_type| a, |vec_type| b, |vec_type| "
"c) :ref:`🔗<shader_func_smoothstep>`"

msgid ""
"|vec_type| **smoothstep**\\ (\\ float a, float b, |vec_type| "
"c) :ref:`🔗<shader_func_smoothstep>`"
msgstr ""
"|vec_type| **smoothstep**\\ (\\ float a, float b, |vec_type| "
"c) :ref:`🔗<shader_func_smoothstep>`"

msgid ""
"Performs smooth Hermite interpolation between ``0`` and ``1`` when a < c < "
"b. This is useful in cases where a threshold function with a smooth "
"transition is desired."
msgstr ""
"Виконує плавну інтерполяцію Ерміта між ``0`` і ``1``, коли a < c < b. Це "
"корисно у випадках, коли потрібна порогова функція з плавним переходом."

msgid "Smoothstep is equivalent to::"
msgstr "Smoothstep еквівалентний::"

msgid "Results are undefined if ``a >= b``."
msgstr "Результати не визначені, якщо ``a >= b``."

msgid "The value of the lower edge of the Hermite function."
msgstr "Значення нижнього краю функції Ерміта."

msgid "The value of the upper edge of the Hermite function."
msgstr "Значення верхнього краю функції Ерміта."

msgid "The source value for interpolation."
msgstr "Вихідне значення для інтерполяції."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/smoothstep.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/smoothstep.xhtml"

msgid ""
"|vec_bool_type| **isnan**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_isnan>`"
msgstr ""
"|vec_bool_type| **isnan**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_isnan>`"

msgid ""
"For each element i of the result, returns ``true`` if x[i] is positive or "
"negative floating-point NaN (Not a Number) and false otherwise."
msgstr ""
"Для кожного елемента i результату повертає ``true``, якщо x[i] є додатним "
"або від’ємним NaN із плаваючою комою (не число), і false в іншому випадку."

msgid "The value to test for NaN."
msgstr "Значення для перевірки NaN."

msgid "``true`` or ``false``."
msgstr "``true`` або ``false``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/isnan.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/isnan.xhtml"

msgid ""
"|vec_bool_type| **isinf**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_isinf>`"
msgstr ""
"|vec_bool_type| **isinf**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_isinf>`"

msgid ""
"For each element i of the result, returns ``true`` if x[i] is positive or "
"negative floating-point infinity and false otherwise."
msgstr ""
"Для кожного елемента i результату повертає ``true``, якщо x[i] є додатним "
"або від’ємним числом із плаваючою комою та false в іншому випадку."

msgid "The value to test for infinity."
msgstr "Значення для перевірки нескінченності."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/isinf.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/isinf.xhtml"

msgid ""
"|vec_int_type| **floatBitsToInt**\\ (\\ |vec_type| "
"x) :ref:`🔗<shader_func_floatBitsToInt>`"
msgstr ""
"|vec_int_type| **floatBitsToInt**\\ (\\ |vec_type| "
"x) :ref:`🔗<shader_func_floatBitsToInt>`"

msgid "Returns the encoding of the floating-point parameters as ``int``."
msgstr "Повертає кодування параметрів з плаваючою комою як ``int``."

msgid "The floating-point bit-level representation is preserved."
msgstr "Представлення бітового рівня з плаваючою комою зберігається."

msgid "The value whose floating-point encoding to return."
msgstr "Значення, кодування якого з плаваючою комою потрібно повернути."

msgid "The floating-point encoding of ``x``."
msgstr "Кодування з плаваючою комою ``x``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"floatBitsToInt.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"floatBitsToInt.xhtml"

msgid ""
"|vec_uint_type| **floatBitsToUint**\\ (\\ |vec_type| "
"x) :ref:`🔗<shader_func_floatBitsToUint>`"
msgstr ""
"|vec_uint_type| **floatBitsToUint**\\ (\\ |vec_type| "
"x) :ref:`🔗<shader_func_floatBitsToUint>`"

msgid "Returns the encoding of the floating-point parameters as ``uint``."
msgstr "Повертає кодування параметрів з плаваючою комою як ``uint``."

msgid ""
"|vec_type| **intBitsToFloat**\\ (\\ |vec_int_type| "
"x) :ref:`🔗<shader_func_intBitsToFloat>`"
msgstr ""
"|vec_type| **intBitsToFloat**\\ (\\ |vec_int_type| "
"x) :ref:`🔗<shader_func_intBitsToFloat>`"

msgid ""
"Converts a bit encoding to a floating-point value. Opposite of "
"`floatBitsToInt<shader_func_floatBitsToInt>`"
msgstr ""
"Перетворює бітове кодування на значення з плаваючою комою. Навпроти "
"`floatBitsToInt<shader_func_floatBitsToInt>`"

msgid ""
"If the encoding of a ``NaN`` is passed in ``x``, it will not signal and the "
"resulting value will be undefined."
msgstr ""
"Якщо кодування ``NaN`` передано в ``x``, воно не сигналізуватиме, а "
"результуюче значення буде невизначеним."

msgid ""
"If the encoding of a floating-point infinity is passed in parameter ``x``, "
"the resulting floating-point value is the corresponding (positive or "
"negative) floating-point infinity."
msgstr ""
"Якщо кодування нескінченності з плаваючою комою передається в параметрі "
"``x``, результуюче значення з плаваючою комою є відповідним (позитивним або "
"від’ємним) нескінченністю з плаваючою комою."

msgid "The bit encoding to return as a floating-point value."
msgstr "Бітове кодування, яке повертається як значення з плаваючою комою."

msgid "A floating-point value."
msgstr "Значення з плаваючою комою."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"intBitsToFloat.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"intBitsToFloat.xhtml"

msgid ""
"|vec_type| **uintBitsToFloat**\\ (\\ |vec_uint_type| "
"x) :ref:`🔗<shader_func_uintBitsToFloat>`"
msgstr ""
"|vec_type| **uintBitsToFloat**\\ (\\ |vec_uint_type| "
"x) :ref:`🔗<shader_func_uintBitsToFloat>`"

msgid ""
"Converts a bit encoding to a floating-point value. Opposite of "
"`floatBitsToUint<shader_func_floatBitsToUint>`"
msgstr ""
"Перетворює бітове кодування на значення з плаваючою комою. Навпроти "
"`floatBitsToUint<shader_func_floatBitsToUint>`"

msgid "Geometric functions"
msgstr "Геометричні функції"

msgid "float"
msgstr "десяткове число"

msgid ":ref:`length<shader_func_length>`\\ (\\ |vec_type| x)"
msgstr ":ref:`length<shader_func_length>`\\ (\\ |vec_type| x)"

msgid "Vector length."
msgstr "Довжина вектора."

msgid ":ref:`distance<shader_func_distance>`\\ (\\ |vec_type| a, |vec_type| b)"
msgstr ""
":ref:`distance<shader_func_distance>`\\ (\\ |vec_type| a, |vec_type| b)"

msgid "Distance between vectors i.e ``length(a - b)``."
msgstr "Відстань між векторами, тобто ``довжина (a - b)``."

msgid ":ref:`dot<shader_func_dot>`\\ (\\ |vec_type| a, |vec_type| b)"
msgstr ":ref:`dot<shader_func_dot>`\\ (\\ |vec_type| a, |vec_type| b)"

msgid "Dot product."
msgstr "Точковий продукт."

msgid "vec3"
msgstr "Vec3"

msgid ":ref:`cross<shader_func_cross>`\\ (\\ vec3 a, vec3 b)"
msgstr ":ref:`cross<shader_func_cross>`\\ (\\ vec3 a, vec3 b)"

msgid "Cross product."
msgstr "Перехресний продукт."

msgid ":ref:`normalize<shader_func_normalize>`\\ (\\ |vec_type| x)"
msgstr ":ref:`normalize<shader_func_normalize>`\\ (\\ |vec_type| x)"

msgid "Normalize to unit length."
msgstr "Нормалізувати до одиниці довжини."

msgid ":ref:`reflect<shader_func_reflect>`\\ (\\ vec3 I, vec3 N)"
msgstr ":ref:`reflect<shader_func_reflect>`\\ (\\ vec3 I, vec3 N)"

msgid "Reflect."
msgstr "Подумай."

msgid ":ref:`refract<shader_func_refract>`\\ (\\ vec3 I, vec3 N, float eta)"
msgstr ":ref:`refract<shader_func_refract>`\\ (\\ vec3 I, vec3 N, float eta)"

msgid "Refract."
msgstr "Заломлення."

msgid ""
":ref:`faceforward<shader_func_faceforward>`\\ (\\ |vec_type| N, |vec_type| "
"I, |vec_type| Nref)"
msgstr ""
":ref:`faceforward<shader_func_faceforward>`\\ (\\ |vec_type| N, |vec_type| "
"I, |vec_type| Nref)"

msgid "If ``dot(Nref, I)`` < 0, return ``N``, otherwise ``-N``."
msgstr "Якщо ``точка(Nref, I)`` < 0, повертається ``N``, інакше ``-N``."

msgid "|mat_type|"
msgstr "|mat_type|"

msgid ""
":ref:`matrixCompMult<shader_func_matrixCompMult>`\\ (\\ |mat_type| x, |"
"mat_type| y)"
msgstr ""
":ref:`matrixCompMult<shader_func_matrixCompMult>`\\ (\\ |mat_type| x, |"
"mat_type| y)"

msgid "Matrix component multiplication."
msgstr "Множення компонент матриці."

msgid ""
":ref:`outerProduct<shader_func_outerProduct>`\\ (\\ |vec_type| column, |"
"vec_type| row)"
msgstr ""
":ref:`outerProduct<shader_func_outerProduct>`\\ (\\ |vec_type| column, |"
"vec_type| row)"

msgid "Matrix outer product."
msgstr "Зовнішній продукт матриці."

msgid ":ref:`transpose<shader_func_transpose>`\\ (\\ |mat_type| m)"
msgstr ":ref:`transpose<shader_func_transpose>`\\ (\\ |mat_type| m)"

msgid "Transpose matrix."
msgstr "Транспонуємо матрицю."

msgid ":ref:`determinant<shader_func_determinant>`\\ (\\ |mat_type| m)"
msgstr ":ref:`determinant<shader_func_determinant>`\\ (\\ |mat_type| m)"

msgid "Matrix determinant."
msgstr "Матричний визначник."

msgid ":ref:`inverse<shader_func_inverse>`\\ (\\ |mat_type| m)"
msgstr ":ref:`inverse<shader_func_inverse>`\\ (\\ |mat_type| m)"

msgid "Inverse matrix."
msgstr "Обернена матриця."

msgid "Geometric function descriptions"
msgstr "Описи геометричних функцій"

msgid "float **length**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_length>`"
msgstr "float **length**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_length>`"

msgid ""
"Returns the length of the vector. ie. ``sqrt(x[0] * x[0] + x[1] * x[1] + ... "
"+ x[n] * x[n])``"
msgstr ""
"Повертає довжину вектора. тобто. ``sqrt(x[0] * x[0] + x[1] * x[1] + ... + "
"x[n] * x[n])``"

msgid "The vector"
msgstr "Вектор"

msgid "The length of the vector."
msgstr "Довжина вектора."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/length.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/length.xhtml"

msgid ""
"float **distance**\\ (\\ |vec_type| a, |vec_type| "
"b) :ref:`🔗<shader_func_distance>`"
msgstr ""
"float **distance**\\ (\\ |vec_type| a, |vec_type| "
"b) :ref:`🔗<shader_func_distance>`"

msgid "Returns the distance between the two points a and b."
msgstr "Повертає відстань між двома точками a і b."

msgid "i.e., ``length(b - a);``"
msgstr "тобто ``довжина (b - a);``"

msgid "The first point."
msgstr "Пункт перший."

msgid "The second point."
msgstr "Пункт другий."

msgid "The scalar distance between the points"
msgstr "Скалярна відстань між точками"

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/distance.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/distance.xhtml"

msgid ""
"float **dot**\\ (\\ |vec_type| a, |vec_type| b) :ref:`🔗<shader_func_dot>`"
msgstr ""
"float **dot**\\ (\\ |vec_type| a, |vec_type| b) :ref:`🔗<shader_func_dot>`"

msgid ""
"Returns the dot product of two vectors, ``a`` and ``b``. i.e., ``a.x * b.x + "
"a.y * b.y + ...``"
msgstr ""
"Повертає скалярний добуток двох векторів, \"a\" і \"b\". тобто ``a.x * b.x + "
"a.y * b.y + ...``"

msgid "The first vector."
msgstr "Перший вектор."

msgid "The second vector."
msgstr "Другий вектор."

msgid "The dot product."
msgstr "Точковий добуток."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/dot.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/dot.xhtml"

msgid "vec3 **cross**\\ (\\ vec3 a, vec3 b) :ref:`🔗<shader_func_cross>`"
msgstr "vec3 **cross**\\ (\\ vec3 a, vec3 b) :ref:`🔗<shader_func_cross>`"

msgid "Returns the cross product of two vectors. i.e.::"
msgstr "Повертає перехресний добуток двох векторів. тобто::"

msgid "The cross product of ``a`` and ``b``."
msgstr "Перехресний добуток ``a`` і ``b``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/cross.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/cross.xhtml"

msgid ""
"|vec_type| **normalize**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_normalize>`"
msgstr ""
"|vec_type| **normalize**\\ (\\ |vec_type| x) :ref:`🔗<shader_func_normalize>`"

msgid ""
"Returns a vector with the same direction as ``x`` but with length ``1.0``."
msgstr ""
"Повертає вектор із тим самим напрямком, що й ``x``, але довжиною ``1,0``."

msgid "The vector to normalize."
msgstr "Вектор для нормалізації."

msgid "The normalized vector."
msgstr "Нормований вектор."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/normalize.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/normalize.xhtml"

msgid "vec3 **reflect**\\ (\\ vec3 I, vec3 N) :ref:`🔗<shader_func_reflect>`"
msgstr "vec3 **reflect**\\ (\\ vec3 I, vec3 N) :ref:`🔗<shader_func_reflect>`"

msgid "Calculate the reflection direction for an incident vector."
msgstr "Обчислити напрямок відбиття для падаючого вектора."

msgid ""
"For a given incident vector ``I`` and surface normal ``N`` reflect returns "
"the reflection direction calculated as ``I - 2.0 * dot(N, I) * N``."
msgstr ""
"Для заданого вектора падіння ``I`` і нормалі до поверхні ``N`` reflect "
"повертає напрямок відбиття, обчислений як ``I - 2,0 * dot(N, I) * N``."

msgid "``N`` should be normalized in order to achieve the desired result."
msgstr "``N`` слід нормалізувати, щоб досягти бажаного результату."

msgid "param I"
msgstr "param I"

msgid "The incident vector."
msgstr "Вектор інциденту."

msgid "param N"
msgstr "param N"

msgid "The normal vector."
msgstr "Нормальний вектор."

msgid "The reflection vector."
msgstr "Вектор відбиття."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/reflect.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/reflect.xhtml"

msgid ""
"vec3 **refract**\\ (\\ vec3 I, vec3 N, float "
"eta) :ref:`🔗<shader_func_refract>`"
msgstr ""
"vec3 **refract**\\ (\\ vec3 I, vec3 N, float "
"eta) :ref:`🔗<shader_func_refract>`"

msgid "Calculate the refraction direction for an incident vector."
msgstr "Обчисліть напрямок заломлення для падаючого вектора."

msgid ""
"For a given incident vector ``I``, surface normal ``N`` and ratio of indices "
"of refraction, ``eta``, refract returns the refraction vector, ``R``."
msgstr ""
"Для заданого вектора падіння ``I``, нормалі до поверхні ``N`` і "
"співвідношення показників заломлення ``eta``, refract повертає вектор "
"заломлення ``R``."

msgid "``R`` is calculated as::"
msgstr "``R`` обчислюється як:"

msgid ""
"The input parameters I and N should be normalized in order to achieve the "
"desired result."
msgstr ""
"Вхідні параметри I і N необхідно нормалізувати, щоб отримати бажаний "
"результат."

msgid "param eta"
msgstr "param eta"

msgid "The ratio of indices of refraction."
msgstr "Співвідношення показників заломлення."

msgid "The refraction vector."
msgstr "Вектор заломлення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/refract.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/refract.xhtml"

msgid ""
"|vec_type| **faceforward**\\ (\\ |vec_type| N, |vec_type| I, |vec_type| "
"Nref) :ref:`🔗<shader_func_faceforward>`"
msgstr ""
"|vec_type| **faceforward**\\ (\\ |vec_type| N, |vec_type| I, |vec_type| "
"Nref) :ref:`🔗<shader_func_faceforward>`"

msgid "Returns a vector pointing in the same direction as another."
msgstr "Повертає вектор, що вказує в тому ж напрямку, що й інший."

msgid ""
"Orients a vector to point away from a surface as defined by its normal. If "
"``dot(Nref, I) < 0`` faceforward returns ``N``, otherwise it returns ``-N``."
msgstr ""
"Орієнтує вектор так, щоб він вказував від поверхні, як визначено її "
"нормаллю. Якщо ``dot(Nref, I) < 0`` faceforward повертає ``N``, інакше "
"повертає ``-N``."

msgid "The vector to orient."
msgstr "Вектор для орієнтування."

msgid "param Nref"
msgstr "param Nref"

msgid "The reference vector."
msgstr "Опорний вектор."

msgid "The oriented vector."
msgstr "Орієнтований вектор."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/faceforward.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/faceforward.xhtml"

msgid ""
"|mat_type| **matrixCompMult**\\ (\\ |mat_type| x, |mat_type| "
"y) :ref:`🔗<shader_func_matrixCompMult>`"
msgstr ""
"|mat_type| **matrixCompMult**\\ (\\ |mat_type| x, |mat_type| "
"y) :ref:`🔗<shader_func_matrixCompMult>`"

msgid ""
"Perform a :ref:`component-wise <shading_componentwise>` multiplication of "
"two matrices."
msgstr ""
"Виконайте :ref:`component-wise <shading_componentwise>` множення двох "
"матриць."

msgid ""
"Performs a component-wise multiplication of two matrices, yielding a result "
"matrix where each component, ``result[i][j]`` is computed as the scalar "
"product of ``x[i][j]`` and ``y[i][j]``."
msgstr ""
"Виконує покомпонентне множення двох матриць, утворюючи матрицю результатів, "
"де кожен компонент, ``result[i][j]``, обчислюється як скалярний добуток "
"``x[i][j]`` та ``y[i][j]``."

msgid "The first matrix multiplicand."
msgstr "Перше матричне множене."

msgid "The second matrix multiplicand."
msgstr "Друге матричне множене."

msgid "The resultant matrix."
msgstr "Результуюча матриця."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"matrixCompMult.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"matrixCompMult.xhtml"

msgid ""
"|mat_type| **outerProduct**\\ (\\ |vec_type| column, |vec_type| "
"row) :ref:`🔗<shader_func_outerProduct>`"
msgstr ""
"|mat_type| **outerProduct**\\ (\\ |vec_type| column, |vec_type| "
"row) :ref:`🔗<shader_func_outerProduct>`"

msgid "Calculate the outer product of a pair of vectors."
msgstr "Обчисліть зовнішній добуток пари векторів."

msgid ""
"Does a linear algebraic matrix multiply ``column * row``, yielding a matrix "
"whose number of rows is the number of components in ``column`` and whose "
"number of columns is the number of components in ``row``."
msgstr ""
"Чи виконує лінійна алгебраїчна матриця множення ``стовпець * рядок``, "
"утворюючи матрицю, кількість рядків якої є кількістю компонентів у "
"``стовпці``, а кількість стовпців — це кількість компонентів ``рядка``."

msgid "param column"
msgstr "param column"

msgid "The column vector for multiplication."
msgstr "Вектор-стовпець для множення."

msgid "param row"
msgstr "param row"

msgid "The row vector for multiplication."
msgstr "Вектор-рядок для множення."

msgid "The outer product matrix."
msgstr "Зовнішня матриця продукту."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/outerProduct.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/outerProduct.xhtml"

msgid ""
"|mat_type| **transpose**\\ (\\ |mat_type| m) :ref:`🔗<shader_func_transpose>`"
msgstr ""
"|mat_type| **transpose**\\ (\\ |mat_type| m) :ref:`🔗<shader_func_transpose>`"

msgid "Calculate the transpose of a matrix."
msgstr "Обчислити транспонування матриці."

msgid "param m"
msgstr "param m"

msgid "The matrix to transpose."
msgstr "Матриця для транспонування."

msgid "A new matrix that is the transpose of the input matrix ``m``."
msgstr "Нова матриця, яка є транспонуванням вхідної матриці ``m``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/transpose.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/transpose.xhtml"

msgid ""
"float **determinant**\\ (\\ |mat_type| m) :ref:`🔗<shader_func_determinant>`"
msgstr ""
"float **determinant**\\ (\\ |mat_type| m) :ref:`🔗<shader_func_determinant>`"

msgid "Calculate the determinant of a matrix."
msgstr "Обчислити визначник матриці."

msgid "The matrix."
msgstr "Матриця."

msgid "The determinant of the input matrix ``m``."
msgstr "Визначник вхідної матриці ``m``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/determinant.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/determinant.xhtml"

msgid ""
"|mat_type| **inverse**\\ (\\ |mat_type| m) :ref:`🔗<shader_func_inverse>`"
msgstr ""
"|mat_type| **inverse**\\ (\\ |mat_type| m) :ref:`🔗<shader_func_inverse>`"

msgid "Calculate the inverse of a matrix."
msgstr "Обчисліть обернену матрицю."

msgid ""
"The values in the returned matrix are undefined if ``m`` is singular or "
"poorly-conditioned (nearly singular)."
msgstr ""
"Значення у поверненій матриці є невизначеними, якщо ``m`` є сингулярним або "
"погано обумовленим (майже сингулярним)."

msgid "The matrix of which to take the inverse."
msgstr "Матрицю якої взяти оберненою."

msgid "A new matrix which is the inverse of the input matrix ``m``."
msgstr "Нова матриця, яка є оберненою до вхідної матриці ``m``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/inverse.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/inverse.xhtml"

msgid "Comparison functions"
msgstr "Функції порівняння"

msgid ":ref:`lessThan<shader_func_lessThan>`\\ (\\ |vec_type| x, |vec_type| y)"
msgstr ""
":ref:`lessThan<shader_func_lessThan>`\\ (\\ |vec_type| x, |vec_type| y)"

msgid "Bool vector comparison on < int/uint/float vectors."
msgstr "Порівняння векторів Bool на векторах < int/uint/float."

msgid ""
":ref:`greaterThan<shader_func_greaterThan>`\\ (\\ |vec_type| x, |vec_type| y)"
msgstr ""
":ref:`greaterThan<shader_func_greaterThan>`\\ (\\ |vec_type| x, |vec_type| y)"

msgid "Bool vector comparison on > int/uint/float vectors."
msgstr "Порівняння векторів Bool на векторах > int/uint/float."

msgid ""
":ref:`lessThanEqual<shader_func_lessThanEqual>`\\ (\\ |vec_type| x, |"
"vec_type| y)"
msgstr ""
":ref:`lessThanEqual<shader_func_lessThanEqual>`\\ (\\ |vec_type| x, |"
"vec_type| y)"

msgid "Bool vector comparison on <= int/uint/float vectors."
msgstr "Порівняння векторів Bool на векторах <= int/uint/float."

msgid ""
":ref:`greaterThanEqual<shader_func_greaterThanEqual>`\\ (\\  |vec_type| x, |"
"vec_type| y)"
msgstr ""
":ref:`greaterThanEqual<shader_func_greaterThanEqual>`\\ (\\  |vec_type| x, |"
"vec_type| y)"

msgid "Bool vector comparison on >= int/uint/float vectors."
msgstr "Порівняння векторів Bool на векторах >= int/uint/float."

msgid ":ref:`equal<shader_func_equal>`\\ (\\ |vec_type| x, |vec_type| y)"
msgstr ":ref:`equal<shader_func_equal>`\\ (\\ |vec_type| x, |vec_type| y)"

msgid "Bool vector comparison on == int/uint/float vectors."
msgstr "Порівняння векторів Bool на векторах == int/uint/float."

msgid ":ref:`notEqual<shader_func_notEqual>`\\ (\\ |vec_type| x, |vec_type| y)"
msgstr ""
":ref:`notEqual<shader_func_notEqual>`\\ (\\ |vec_type| x, |vec_type| y)"

msgid "Bool vector comparison on != int/uint/float vectors."
msgstr "Порівняння векторів Bool на векторах != int/uint/float."

msgid "bool"
msgstr "bool"

msgid ":ref:`any<shader_func_any>`\\ (\\ |vec_bool_type| x)"
msgstr ":ref:`any<shader_func_any>`\\ (\\ |vec_bool_type| x)"

msgid "``true`` if any component is ``true``, ``false`` otherwise."
msgstr ""
"``true``, якщо будь-який компонент має значення ``true``, ``false`` інакше."

msgid ":ref:`all<shader_func_all>`\\ (\\ |vec_bool_type| x)"
msgstr ":ref:`all<shader_func_all>`\\ (\\ |vec_bool_type| x)"

msgid "``true`` if all components are ``true``, ``false`` otherwise."
msgstr "``true``, якщо всі компоненти ``true``, ``false`` інакше."

msgid ":ref:`not<shader_func_not>`\\ (\\ |vec_bool_type| x)"
msgstr ":ref:`not<shader_func_not>`\\ (\\ |vec_bool_type| x)"

msgid "Invert boolean vector."
msgstr "Інвертувати булевий вектор."

msgid "Comparison function descriptions"
msgstr "Опис функції порівняння"

msgid ""
"|vec_bool_type| **lessThan**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_lessThan>`"
msgstr ""
"|vec_bool_type| **lessThan**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_lessThan>`"

msgid ""
"Performs a :ref:`component-wise<shading_componentwise>` less-than comparison "
"of two vectors."
msgstr ""
"Виконує :ref:`component-wise<shading_componentwise>` менше ніж порівняння "
"двох векторів."

msgid "The first vector to compare."
msgstr "Перший вектор для порівняння."

msgid "The second vector to compare."
msgstr "Другий вектор для порівняння."

msgid ""
"A boolean vector in which each element ``i`` is computed as ``x[i] < y[i]``."
msgstr ""
"Логічний вектор, у якому кожен елемент \"i\" обчислюється як \"x[i] < y[i]\"."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/lessThan.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/lessThan.xhtml"

msgid ""
"|vec_bool_type| **greaterThan**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_greaterThan>`"
msgstr ""
"|vec_bool_type| **greaterThan**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_greaterThan>`"

msgid ""
"Performs a :ref:`component-wise<shading_componentwise>` greater-than "
"comparison of two vectors."
msgstr ""
"Виконує :ref:`component-wise<shading_componentwise>` порівняння двох "
"векторів."

msgid ""
"A boolean vector in which each element ``i`` is computed as ``x[i] > y[i]``."
msgstr ""
"Логічний вектор, у якому кожен елемент ``i`` обчислюється як ``1x[i] > "
"y[i]``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/greaterThan.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/greaterThan.xhtml"

msgid ""
"|vec_bool_type| **lessThanEqual**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_lessThanEqual>`"
msgstr ""
"|vec_bool_type| **lessThanEqual**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_lessThanEqual>`"

msgid ""
"Performs a :ref:`component-wise<shading_componentwise>` less-than-or-equal "
"comparison of two vectors."
msgstr ""
"Виконує :ref:`component-wise<shading_componentwise>` порівняння двох "
"векторів менш ніж або рівно."

msgid ""
"A boolean vector in which each element ``i`` is computed as ``x[i] <= y[i]``."
msgstr ""
"Логічний вектор, у якому кожен елемент ``i`` обчислюється як ``1x[i] <= "
"y[i]``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/lessThanEqual.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/lessThanEqual.xhtml"

msgid ""
"|vec_bool_type| **greaterThanEqual**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_greaterThanEqual>`"
msgstr ""
"|vec_bool_type| **greaterThanEqual**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_greaterThanEqual>`"

msgid ""
"Performs a :ref:`component-wise<shading_componentwise>` greater-than-or-"
"equal comparison of two vectors."
msgstr ""
"Виконує :ref:`component-wise<shading_componentwise>` порівняння двох "
"векторів більше або рівно."

msgid ""
"A boolean vector in which each element ``i`` is computed as ``x[i] >= y[i]``."
msgstr ""
"Логічний вектор, у якому кожен елемент ``i`` обчислюється як ``x[i] >= "
"y[i]``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"greaterThanEqual.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"greaterThanEqual.xhtml"

msgid ""
"|vec_bool_type| **equal**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_equal>`"
msgstr ""
"|vec_bool_type| **equal**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_equal>`"

msgid ""
"Performs a :ref:`component-wise<shading_componentwise>` equal-to comparison "
"of two vectors."
msgstr ""
"Виконує порівняння :ref:`component-wise<shading_componentwise>` двох "
"векторів."

msgid ""
"A boolean vector in which each element ``i`` is computed as ``x[i] == y[i]``."
msgstr ""
"Логічний вектор, у якому кожен елемент ``i`` обчислюється як ``x[i] == "
"y[i]``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/equal.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/equal.xhtml"

msgid ""
"|vec_bool_type| **notEqual**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_notEqual>`"
msgstr ""
"|vec_bool_type| **notEqual**\\ (\\ |vec_type| x, |vec_type| "
"y) :ref:`🔗<shader_func_notEqual>`"

msgid ""
"Performs a :ref:`component-wise<shading_componentwise>` not-equal-to "
"comparison of two vectors."
msgstr ""
"Виконує а :ref:`component-wise<shading_componentwise>` не-рівно порівняння "
"двох векторів."

msgid "The first vector for comparison."
msgstr "Перший вектор для порівняння."

msgid "The second vector for comparison."
msgstr "Другий вектор для порівняння."

msgid ""
"A boolean vector in which each element ``i`` is computed as ``x[i] != y[i]``."
msgstr ""
"Логічний вектор, у якому кожен елемент ``i`` обчислюється як ``x[i] != "
"y[i]``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/notEqual.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/notEqual.xhtml"

msgid "bool **any**\\ (\\ |vec_bool_type| x) :ref:`🔗<shader_func_any>`"
msgstr "bool **any**\\ (\\ |vec_bool_type| x) :ref:`🔗<shader_func_any>`"

msgid ""
"Returns ``true`` if any element of a boolean vector is ``true``, ``false`` "
"otherwise."
msgstr ""
"Повертає ``true``, якщо будь-який елемент булевого вектора ``true``, "
"``false`` інакше."

msgid "Functionally equivalent to::"
msgstr "Функціонально еквівалентно:"

msgid "The vector to be tested for truth."
msgstr "Вектор, який потрібно перевірити на істинність."

msgid "True if any element of x is true and false otherwise."
msgstr ""
"Істинний, якщо будь-який елемент x є істинним, і хибний в іншому випадку."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/any.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/any.xhtml"

msgid "bool **all**\\ (\\ |vec_bool_type| x) :ref:`🔗<shader_func_all>`"
msgstr "bool **all**\\ (\\ |vec_bool_type| x) :ref:`🔗<shader_func_all>`"

msgid ""
"Returns ``true`` if all elements of a boolean vector are ``true``, ``false`` "
"otherwise."
msgstr ""
"Повертає ``true``, якщо всі елементи булевого вектора ``true``, ``false`` "
"інакше."

msgid "``true`` if all elements of ``x`` are ``true`` and ``false`` otherwise."
msgstr "``true``, якщо всі елементи ``x`` є ``true``, і ``false`` інакше."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/all.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/all.xhtml"

msgid ""
"|vec_bool_type| **not**\\ (\\ |vec_bool_type| x) :ref:`🔗<shader_func_not>`"
msgstr ""
"|vec_bool_type| **not**\\ (\\ |vec_bool_type| x) :ref:`🔗<shader_func_not>`"

msgid "Logically invert a boolean vector."
msgstr "Логічно інвертувати логічний вектор."

msgid "The vector to be inverted."
msgstr "Вектор, який потрібно інвертувати."

msgid "A new boolean vector for which each element i is computed as !x[i]."
msgstr ""
"Новий логічний вектор, для якого кожен елемент i обчислюється як !x[i]."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/not.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/not.xhtml"

msgid "Texture functions"
msgstr "Текстурні функції"

msgid "ivec2"
msgstr "ivec2"

msgid "ivec3"
msgstr "ivec3"

msgid ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ |gsampler2D| s, int lod)"
msgstr ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ |gsampler2D| s, int lod)"

msgid ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ samplerCube s, int lod)"
msgstr ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ samplerCube s, int lod)"

msgid ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ samplerCubeArray s, int "
"lod)"
msgstr ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ samplerCubeArray s, int "
"lod)"

msgid ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ |gsampler2DArray| s, int "
"lod)"
msgstr ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ |gsampler2DArray| s, int "
"lod)"

msgid ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ |gsampler3D| s, int lod)"
msgstr ""
":ref:`textureSize<shader_func_textureSize>`\\ (\\ |gsampler3D| s, int lod)"

msgid "Get the size of a texture."
msgstr "Отримайте розмір текстури."

msgid "vec2"
msgstr "Vec2"

msgid ""
":ref:`textureQueryLod<shader_func_textureQueryLod>`\\ (\\ |gsampler2D| s, "
"vec2 p)"
msgstr ""
":ref:`textureQueryLod<shader_func_textureQueryLod>`\\ (\\ |gsampler2D| s, "
"vec2 p)"

msgid ""
":ref:`textureQueryLod<shader_func_textureQueryLod>`\\ (\\ |gsampler2DArray| "
"s, vec2 p)"
msgstr ""
":ref:`textureQueryLod<shader_func_textureQueryLod>`\\ (\\ |gsampler2DArray| "
"s, vec2 p)"

msgid ""
":ref:`textureQueryLod<shader_func_textureQueryLod>`\\ (\\ |gsampler3D| s, "
"vec3 p)"
msgstr ""
":ref:`textureQueryLod<shader_func_textureQueryLod>`\\ (\\ |gsampler3D| s, "
"vec3 p)"

msgid ""
":ref:`textureQueryLod<shader_func_textureQueryLod>`\\ (\\ samplerCube s, "
"vec3 p)"
msgstr ""
":ref:`textureQueryLod<shader_func_textureQueryLod>`\\ (\\ samplerCube s, "
"vec3 p)"

msgid ""
"Compute the level-of-detail that would be used to sample from a texture."
msgstr ""
"Обчисліть рівень деталізації, який використовуватиметься для вибірки "
"текстури."

msgid "int"
msgstr "int"

msgid ""
":ref:`textureQueryLevels<shader_func_textureQueryLevels>`\\ (\\ |gsampler2D| "
"s)"
msgstr ""
":ref:`textureQueryLevels<shader_func_textureQueryLevels>`\\ (\\ |gsampler2D| "
"s)"

msgid ""
":ref:`textureQueryLevels<shader_func_textureQueryLevels>`\\ (\\ |"
"gsampler2DArray| s)"
msgstr ""
":ref:`textureQueryLevels<shader_func_textureQueryLevels>`\\ (\\ |"
"gsampler2DArray| s)"

msgid ""
":ref:`textureQueryLevels<shader_func_textureQueryLevels>`\\ (\\ |gsampler3D| "
"s)"
msgstr ""
":ref:`textureQueryLevels<shader_func_textureQueryLevels>`\\ (\\ |gsampler3D| "
"s)"

msgid ""
":ref:`textureQueryLevels<shader_func_textureQueryLevels>`\\ (\\ samplerCube "
"s)"
msgstr ""
":ref:`textureQueryLevels<shader_func_textureQueryLevels>`\\ (\\ samplerCube "
"s)"

msgid "Get the number of accessible mipmap levels of a texture."
msgstr "Отримайте кількість доступних рівнів mipmap текстури."

msgid "|gvec4_type|"
msgstr "|gvec4_type|"

msgid "vec4"
msgstr "Vec4"

msgid ""
":ref:`texture<shader_func_texture>`\\ (\\ |gsampler2D| s, vec2 p [, float "
"bias] )"
msgstr ""
":ref:`texture<shader_func_texture>`\\ (\\ |gsampler2D| s, vec2 p [, float "
"bias] )"

msgid ""
":ref:`texture<shader_func_texture>`\\ (\\ |gsampler2DArray| s, vec3 p [, "
"float bias] )"
msgstr ""
":ref:`texture<shader_func_texture>`\\ (\\ |gsampler2DArray| s, vec3 p [, "
"float bias] )"

msgid ""
":ref:`texture<shader_func_texture>`\\ (\\ |gsampler3D| s, vec3 p [, float "
"bias] )"
msgstr ""
":ref:`texture<shader_func_texture>`\\ (\\ |gsampler3D| s, vec3 p [, float "
"bias] )"

msgid ""
":ref:`texture<shader_func_texture>`\\ (\\ samplerCube s, vec3 p [, float "
"bias] )"
msgstr ""
":ref:`texture<shader_func_texture>`\\ (\\ samplerCube s, vec3 p [, float "
"bias] )"

msgid ""
":ref:`texture<shader_func_texture>`\\ (\\ samplerCubeArray s, vec4 p [, "
"float bias] )"
msgstr ""
":ref:`texture<shader_func_texture>`\\ (\\ samplerCubeArray s, vec4 p [, "
"float bias] )"

msgid ""
":ref:`texture<shader_func_texture>`\\ (\\ samplerExternalOES s, vec2 p [, "
"float bias] )"
msgstr ""
":ref:`texture<shader_func_texture>`\\ (\\ samplerExternalOES s, vec2 p [, "
"float bias] )"

msgid "Performs a texture read."
msgstr "Виконує зчитування текстури."

msgid ""
":ref:`textureProj<shader_func_textureProj>`\\ (\\ |gsampler2D| s, vec3 p [, "
"float bias] )"
msgstr ""
":ref:`textureProj<shader_func_textureProj>`\\ (\\ |gsampler2D| s, vec3 p [, "
"float bias] )"

msgid ""
":ref:`textureProj<shader_func_textureProj>`\\ (\\ |gsampler2D| s, vec4 p [, "
"float bias] )"
msgstr ""
":ref:`textureProj<shader_func_textureProj>`\\ (\\ |gsampler2D| s, vec4 p [, "
"float bias] )"

msgid ""
":ref:`textureProj<shader_func_textureProj>`\\ (\\ |gsampler3D| s, vec4 p [, "
"float bias] )"
msgstr ""
":ref:`textureProj<shader_func_textureProj>`\\ (\\ |gsampler3D| s, vec4 p [, "
"float bias] )"

msgid "Performs a texture read with projection."
msgstr "Виконує зчитування текстури за допомогою проекції."

msgid ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ |gsampler2D| s, vec2 p, "
"float lod)"
msgstr ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ |gsampler2D| s, vec2 p, "
"float lod)"

msgid ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ |gsampler2DArray| s, vec3 p, "
"float lod)"
msgstr ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ |gsampler2DArray| s, vec3 p, "
"float lod)"

msgid ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ |gsampler3D| s, vec3 p, "
"float lod)"
msgstr ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ |gsampler3D| s, vec3 p, "
"float lod)"

msgid ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ samplerCube s, vec3 p, float "
"lod)"
msgstr ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ samplerCube s, vec3 p, float "
"lod)"

msgid ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ samplerCubeArray s, vec4 p, "
"float lod)"
msgstr ""
":ref:`textureLod<shader_func_textureLod>`\\ (\\ samplerCubeArray s, vec4 p, "
"float lod)"

msgid "Performs a texture read at custom mipmap."
msgstr "Виконує зчитування текстури на власному mipmap."

msgid ""
":ref:`textureProjLod<shader_func_textureProjLod>`\\ (\\ |gsampler2D| s, vec3 "
"p, float lod)"
msgstr ""
":ref:`textureProjLod<shader_func_textureProjLod>`\\ (\\ |gsampler2D| s, vec3 "
"p, float lod)"

msgid ""
":ref:`textureProjLod<shader_func_textureProjLod>`\\ (\\ |gsampler2D| s, vec4 "
"p, float lod)"
msgstr ""
":ref:`textureProjLod<shader_func_textureProjLod>`\\ (\\ |gsampler2D| s, vec4 "
"p, float lod)"

msgid ""
":ref:`textureProjLod<shader_func_textureProjLod>`\\ (\\ |gsampler3D| s, vec4 "
"p, float lod)"
msgstr ""
":ref:`textureProjLod<shader_func_textureProjLod>`\\ (\\ |gsampler3D| s, vec4 "
"p, float lod)"

msgid "Performs a texture read with projection/LOD."
msgstr "Виконує зчитування текстури за допомогою проекції/LOD."

msgid ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ |gsampler2D| s, vec2 p, "
"vec2 dPdx, vec2 dPdy)"
msgstr ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ |gsampler2D| s, vec2 p, "
"vec2 dPdx, vec2 dPdy)"

msgid ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ |gsampler2DArray| s, vec3 "
"p, vec2 dPdx, vec2 dPdy)"
msgstr ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ |gsampler2DArray| s, vec3 "
"p, vec2 dPdx, vec2 dPdy)"

msgid ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ |gsampler3D| s, vec3 p, "
"vec2 dPdx, vec2 dPdy)"
msgstr ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ |gsampler3D| s, vec3 p, "
"vec2 dPdx, vec2 dPdy)"

msgid ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ samplerCube s, vec3 p, "
"vec3 dPdx, vec3 dPdy)"
msgstr ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ samplerCube s, vec3 p, "
"vec3 dPdx, vec3 dPdy)"

msgid ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ samplerCubeArray s, vec3 "
"p, vec3 dPdx, vec3 dPdy)"
msgstr ""
":ref:`textureGrad<shader_func_textureGrad>`\\ (\\ samplerCubeArray s, vec3 "
"p, vec3 dPdx, vec3 dPdy)"

msgid "Performs a texture read with explicit gradients."
msgstr "Виконує зчитування текстури з явними градієнтами."

msgid ""
":ref:`textureProjGrad<shader_func_textureProjGrad>`\\ (\\ |gsampler2D| s, "
"vec3 p, vec2 dPdx, vec2 dPdy)"
msgstr ""
":ref:`textureProjGrad<shader_func_textureProjGrad>`\\ (\\ |gsampler2D| s, "
"vec3 p, vec2 dPdx, vec2 dPdy)"

msgid ""
":ref:`textureProjGrad<shader_func_textureProjGrad>`\\ (\\ |gsampler2D| s, "
"vec4 p, vec2 dPdx, vec2 dPdy)"
msgstr ""
":ref:`textureProjGrad<shader_func_textureProjGrad>`\\ (\\ |gsampler2D| s, "
"vec4 p, vec2 dPdx, vec2 dPdy)"

msgid ""
":ref:`textureProjGrad<shader_func_textureProjGrad>`\\ (\\ |gsampler3D| s, "
"vec4 p, vec3 dPdx, vec3 dPdy)"
msgstr ""
":ref:`textureProjGrad<shader_func_textureProjGrad>`\\ (\\ |gsampler3D| s, "
"vec4 p, vec3 dPdx, vec3 dPdy)"

msgid "Performs a texture read with projection/LOD and with explicit"
msgstr "Виконує зчитування текстури з проекцією/LOD і з явним"

msgid ""
":ref:`texelFetch<shader_func_texelFetch>`\\ (\\ |gsampler2D| s, ivec2 p, int "
"lod)"
msgstr ""
":ref:`texelFetch<shader_func_texelFetch>`\\ (\\ |gsampler2D| s, ivec2 p, int "
"lod)"

msgid ""
":ref:`texelFetch<shader_func_texelFetch>`\\ (\\ |gsampler2DArray| s, ivec3 "
"p, int lod)"
msgstr ""
":ref:`texelFetch<shader_func_texelFetch>`\\ (\\ |gsampler2DArray| s, ivec3 "
"p, int lod)"

msgid ""
":ref:`texelFetch<shader_func_texelFetch>`\\ (\\ |gsampler3D| s, ivec3 p, int "
"lod)"
msgstr ""
":ref:`texelFetch<shader_func_texelFetch>`\\ (\\ |gsampler3D| s, ivec3 p, int "
"lod)"

msgid "Fetches a single texel using integer coordinates."
msgstr "Отримує один тексель за допомогою цілих координат."

msgid ""
":ref:`textureGather<shader_func_textureGather>`\\ (\\ |gsampler2D| s, vec2 p "
"[, int comps] )"
msgstr ""
":ref:`textureGather<shader_func_textureGather>`\\ (\\ |gsampler2D| s, vec2 p "
"[, int comps] )"

msgid ""
":ref:`textureGather<shader_func_textureGather>`\\ (\\ |gsampler2DArray| s, "
"vec3 p [, int comps] )"
msgstr ""
":ref:`textureGather<shader_func_textureGather>`\\ (\\ |gsampler2DArray| s, "
"vec3 p [, int comps] )"

msgid ""
":ref:`textureGather<shader_func_textureGather>`\\ (\\ samplerCube s, vec3 p "
"[, int comps] )"
msgstr ""
":ref:`textureGather<shader_func_textureGather>`\\ (\\ samplerCube s, vec3 p "
"[, int comps] )"

msgid "Gathers four texels from a texture."
msgstr "Збирає чотири текселі з текстури."

msgid ":ref:`dFdx<shader_func_dFdx>`\\ (\\ |vec_type| p)"
msgstr ":ref:`dFdx<shader_func_dFdx>`\\ (\\ |vec_type| p)"

msgid ""
"Derivative with respect to ``x`` window coordinate, automatic granularity."
msgstr "Похідна відносно віконної координати ``x``, автоматична деталізація."

msgid ":ref:`dFdxCoarse<shader_func_dFdxCoarse>`\\ (\\ |vec_type| p)"
msgstr ":ref:`dFdxCoarse<shader_func_dFdxCoarse>`\\ (\\ |vec_type| p)"

msgid "Derivative with respect to ``x`` window coordinate, course granularity."
msgstr "Похідна відносно віконної координати ``x``, деталізація курсу."

msgid "Not available when using the Compatibility renderer."
msgstr "Недоступно, якщо використовується рендерер сумісності."

msgid ":ref:`dFdxFine<shader_func_dFdxFine>`\\ (\\ |vec_type| p)"
msgstr ":ref:`dFdxFine<shader_func_dFdxFine>`\\ (\\ |vec_type| p)"

msgid "Derivative with respect to ``x`` window coordinate, fine granularity."
msgstr "Похідна відносно віконної координати ``x``, дрібна деталізація."

msgid ":ref:`dFdy<shader_func_dFdy>`\\ (\\ |vec_type| p)"
msgstr ":ref:`dFdy<shader_func_dFdy>`\\ (\\ |vec_type| p)"

msgid ""
"Derivative with respect to ``y`` window coordinate, automatic granularity."
msgstr "Похідна відносно віконної координати ``y``, автоматична деталізація."

msgid ":ref:`dFdyCoarse<shader_func_dFdyCoarse>`\\ (\\ |vec_type| p)"
msgstr ":ref:`dFdyCoarse<shader_func_dFdyCoarse>`\\ (\\ |vec_type| p)"

msgid "Derivative with respect to ``y`` window coordinate, course granularity."
msgstr "Похідна відносно віконної координати ``y``, деталізація курсу."

msgid ":ref:`dFdyFine<shader_func_dFdyFine>`\\ (\\ |vec_type| p)"
msgstr ":ref:`dFdyFine<shader_func_dFdyFine>`\\ (\\ |vec_type| p)"

msgid "Derivative with respect to ``y`` window coordinate, fine granularity."
msgstr "Похідна відносно віконної координати ``y``, дрібна деталізація."

msgid ":ref:`fwidth<shader_func_fwidth>`\\ (\\ |vec_type| p)"
msgstr ":ref:`fwidth<shader_func_fwidth>`\\ (\\ |vec_type| p)"

msgid "Sum of absolute derivative in ``x`` and ``y``."
msgstr "Сума абсолютної похідної в ``x`` і ``y``."

msgid ":ref:`fwidthCoarse<shader_func_fwidthCoarse>`\\ (\\ |vec_type| p)"
msgstr ":ref:`fwidthCoarse<shader_func_fwidthCoarse>`\\ (\\ |vec_type| p)"

msgid ":ref:`fwidthFine<shader_func_fwidthFine>`\\ (\\ |vec_type| p)"
msgstr ":ref:`fwidthFine<shader_func_fwidthFine>`\\ (\\ |vec_type| p)"

msgid "Texture function descriptions"
msgstr "Опис функцій текстури"

msgid ""
"ivec2 **textureSize**\\ (\\ |gsampler2D| s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"
msgstr ""
"ivec2 **textureSize**\\ (\\ |gsampler2D| s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"

msgid ""
"ivec2 **textureSize**\\ (\\ samplerCube s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"
msgstr ""
"ivec2 **textureSize**\\ (\\ samplerCube s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"

msgid ""
"ivec2 **textureSize**\\ (\\ samplerCubeArray s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"
msgstr ""
"ivec2 **textureSize**\\ (\\ samplerCubeArray s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"

msgid ""
"ivec3 **textureSize**\\ (\\ |gsampler2DArray| s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"
msgstr ""
"ivec3 **textureSize**\\ (\\ |gsampler2DArray| s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"

msgid ""
"ivec3 **textureSize**\\ (\\ |gsampler3D| s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"
msgstr ""
"ivec3 **textureSize**\\ (\\ |gsampler3D| s, int "
"lod) :ref:`🔗<shader_func_textureSize>`"

msgid "Retrieves the dimensions of a level of a texture."
msgstr "Отримує розміри рівня текстури."

msgid ""
"Returns the dimensions of level ``lod`` (if present) of the texture bound to "
"sampler."
msgstr ""
"Повертає розміри рівня ``lod`` (якщо є) текстури, прив’язаної до семплера."

msgid ""
"The components in the return value are filled in, in order, with the width, "
"height and depth of the texture. For the array forms, the last component of "
"the return value is the number of layers in the texture array."
msgstr ""
"Компоненти в поверненому значенні заповнюються в порядку ширини, висоти та "
"глибини текстури. Для форм масиву останнім компонентом значення, що "
"повертається, є кількість шарів у масиві текстур."

msgid "param s"
msgstr "param s"

msgid "The sampler to which the texture whose dimensions to retrieve is bound."
msgstr "Семплер, до якого прив’язана текстура, розміри якої потрібно отримати."

msgid "param lod"
msgstr "param lod"

msgid "The level of the texture for which to retrieve the dimensions."
msgstr "Рівень текстури, для якого потрібно отримати розміри."

msgid ""
"The dimensions of level ``lod`` (if present) of the texture bound to sampler."
msgstr "Розміри рівня ``lod`` (якщо є) текстури, прив’язаної до семплера."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureSize.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureSize.xhtml"

msgid ""
"vec2 **textureQueryLod**\\ (\\ |gsampler2D| s, vec2 "
"p) :ref:`🔗<shader_func_textureQueryLod>`"
msgstr ""
"vec2 **textureQueryLod**\\ (\\ |gsampler2D| s, vec2 "
"p) :ref:`🔗<shader_func_textureQueryLod>`"

msgid ""
"vec2 **textureQueryLod**\\ (\\ |gsampler2DArray| s, vec2 "
"p) :ref:`🔗<shader_func_textureQueryLod>`"
msgstr ""
"vec2 **textureQueryLod**\\ (\\ |gsampler2DArray| s, vec2 "
"p) :ref:`🔗<shader_func_textureQueryLod>`"

msgid ""
"vec2 **textureQueryLod**\\ (\\ |gsampler3D| s, vec3 "
"p) :ref:`🔗<shader_func_textureQueryLod>`"
msgstr ""
"vec2 **textureQueryLod**\\ (\\ |gsampler3D| s, vec3 "
"p) :ref:`🔗<shader_func_textureQueryLod>`"

msgid ""
"vec2 **textureQueryLod**\\ (\\ samplerCube s, vec3 "
"p) :ref:`🔗<shader_func_textureQueryLod>`"
msgstr ""
"vec2 **textureQueryLod**\\ (\\ samplerCube s, vec3 "
"p) :ref:`🔗<shader_func_textureQueryLod>`"

msgid "Available only in the fragment shader."
msgstr "Доступно лише у фрагментному шейдері."

msgid ""
"The mipmap array(s) that would be accessed is returned in the x component of "
"the return value. The computed level-of-detail relative to the base level is "
"returned in the y component of the return value."
msgstr ""
"Масив(и) mipmap, до якого буде доступ, повертається в компоненті x значення, "
"що повертається. Обчислений рівень деталізації відносно базового рівня "
"повертається в компоненті y повертаного значення."

msgid ""
"If called on an incomplete texture, the result of the operation is undefined."
msgstr "Якщо викликати неповну текстуру, результат операції буде невизначеним."

msgid ""
"The sampler to which the texture whose level-of-detail will be queried is "
"bound."
msgstr ""
"Семплер, до якого прив’язана текстура, чий рівень деталізації "
"запитуватиметься."

msgid "param p"
msgstr "param p"

msgid "The texture coordinates at which the level-of-detail will be queried."
msgstr "Координати текстури, за якими запитуватиметься рівень деталізації."

msgid "See description."
msgstr "Дивіться опис."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"textureQueryLod.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"textureQueryLod.xhtml"

msgid ""
"int **textureQueryLevels**\\ (\\ |gsampler2D| "
"s) :ref:`🔗<shader_func_textureQueryLevels>`"
msgstr ""
"int **textureQueryLevels**\\ (\\ |gsampler2D| "
"s) :ref:`🔗<shader_func_textureQueryLevels>`"

msgid ""
"int **textureQueryLevels**\\ (\\ |gsampler2DArray| "
"s) :ref:`🔗<shader_func_textureQueryLevels>`"
msgstr ""
"int **textureQueryLevels**\\ (\\ |gsampler2DArray| "
"s) :ref:`🔗<shader_func_textureQueryLevels>`"

msgid ""
"int **textureQueryLevels**\\ (\\ |gsampler3D| "
"s) :ref:`🔗<shader_func_textureQueryLevels>`"
msgstr ""
"int **textureQueryLevels**\\ (\\ |gsampler3D| "
"s) :ref:`🔗<shader_func_textureQueryLevels>`"

msgid ""
"int **textureQueryLevels**\\ (\\ samplerCube "
"s) :ref:`🔗<shader_func_textureQueryLevels>`"
msgstr ""
"int **textureQueryLevels**\\ (\\ samplerCube "
"s) :ref:`🔗<shader_func_textureQueryLevels>`"

msgid "Compute the number of accessible mipmap levels of a texture."
msgstr "Обчисліть кількість доступних рівнів mipmap текстури."

msgid ""
"If called on an incomplete texture, or if no texture is associated with "
"sampler, ``0`` is returned."
msgstr ""
"У разі виклику для неповної текстури або якщо жодна текстура не пов’язана із "
"семплером, повертається ``0``."

msgid ""
"The sampler to which the texture whose mipmap level count will be queried is "
"bound."
msgstr ""
"Семплер, до якого прив’язана текстура, чий рівень міп-карти запитуватиметься."

msgid "The number of accessible mipmap levels in the texture, or ``0``."
msgstr "Кількість доступних рівнів mipmap у текстурі або ``0``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"textureQueryLevels.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"textureQueryLevels.xhtml"

msgid ""
"|gvec4_type| **texture**\\ (\\ |gsampler2D| s, vec2 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"
msgstr ""
"|gvec4_type| **texture**\\ (\\ |gsampler2D| s, vec2 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"

msgid ""
"|gvec4_type| **texture**\\ (\\ |gsampler2DArray| s, vec3 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"
msgstr ""
"|gvec4_type| **texture**\\ (\\ |gsampler2DArray| s, vec3 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"

msgid ""
"|gvec4_type| **texture**\\ (\\ |gsampler3D| s, vec3 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"
msgstr ""
"|gvec4_type| **texture**\\ (\\ |gsampler3D| s, vec3 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"

msgid ""
"vec4 **texture**\\ (\\ samplerCube s, vec3 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"
msgstr ""
"vec4 **texture**\\ (\\ samplerCube s, vec3 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"

msgid ""
"vec4 **texture**\\ (\\ samplerCubeArray s, vec4 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"
msgstr ""
"vec4 **texture**\\ (\\ samplerCubeArray s, vec4 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"

msgid ""
"vec4 **texture**\\ (\\ samplerExternalOES s, vec2 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"
msgstr ""
"vec4 **texture**\\ (\\ samplerExternalOES s, vec2 p [, float "
"bias] ) :ref:`🔗<shader_func_texture>`"

msgid "Retrieves texels from a texture."
msgstr "Отримує текселі з текстури."

msgid ""
"Samples texels from the texture bound to ``s`` at texture coordinate ``p``. "
"An optional bias, specified in ``bias`` is included in the level-of-detail "
"computation that is used to choose mipmap(s) from which to sample."
msgstr ""
"Вибірка текселів із текстури, прив’язаної до ``s`` за координатою текстури "
"``p``. Необов’язкове зміщення, указане в ``bias``, включено в обчислення "
"рівня деталізації, яке використовується для вибору MIP-карт для вибірки."

msgid ""
"For shadow forms, the last component of ``p`` is used as Dsub and the array "
"layer is specified in the second to last component of ``p``. (The second "
"component of ``p`` is unused for 1D shadow lookups.)"
msgstr ""
"Для тіньових форм останній компонент ``p`` використовується як Dsub, а шар "
"масиву вказується в передостанньому компоненті ``p``. (Другий компонент "
"``p`` не використовується для 1D тіньового пошуку.)"

msgid ""
"For non-shadow variants, the array layer comes from the last component of P."
msgstr ""
"Для нетіньових варіантів шар масиву походить від останнього компонента P."

msgid ""
"The sampler to which the texture from which texels will be retrieved is "
"bound."
msgstr "Семплер, до якого прив’язана текстура, з якої будуть отримані текселі."

msgid "The texture coordinates at which texture will be sampled."
msgstr "Координати текстури, у яких текстура буде взята."

msgid "param bias"
msgstr "param bias"

msgid "An optional bias to be applied during level-of-detail computation."
msgstr ""
"Додаткове зміщення, яке слід застосовувати під час обчислення рівня "
"деталізації."

msgid "A texel."
msgstr "Тексель."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/texture.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/texture.xhtml"

msgid ""
"|gvec4_type| **textureProj**\\ (\\ |gsampler2D| s, vec3 p [, float "
"bias] ) :ref:`🔗<shader_func_textureProj>`"
msgstr ""
"|gvec4_type| **textureProj**\\ (\\ |gsampler2D| s, vec3 p [, float "
"bias] ) :ref:`🔗<shader_func_textureProj>`"

msgid ""
"|gvec4_type| **textureProj**\\ (\\ |gsampler2D| s, vec4 p [, float "
"bias] ) :ref:`🔗<shader_func_textureProj>`"
msgstr ""
"|gvec4_type| **textureProj**\\ (\\ |gsampler2D| s, vec4 p [, float "
"bias] ) :ref:`🔗<shader_func_textureProj>`"

msgid ""
"|gvec4_type| **textureProj**\\ (\\ |gsampler3D| s, vec4 p [, float "
"bias] ) :ref:`🔗<shader_func_textureProj>`"
msgstr ""
"|gvec4_type| **textureProj**\\ (\\ |gsampler3D| s, vec4 p [, float "
"bias] ) :ref:`🔗<shader_func_textureProj>`"

msgid "Perform a texture lookup with projection."
msgstr "Виконайте пошук текстури за допомогою проекції."

msgid ""
"The texture coordinates consumed from ``p``, not including the last "
"component of ``p``, are divided by the last component of ``p``. The "
"resulting 3rd component of ``p`` in the shadow forms is used as Dref. After "
"these values are computed, the texture lookup proceeds as in texture."
msgstr ""
"Координати текстури, отримані від ``p``, не включаючи останній компонент "
"``p``, діляться на останній компонент ``p``. Отриманий 3-й компонент ``p`` у "
"тіньових формах використовується як Dref. Після того, як ці значення "
"обчислено, пошук текстури продовжується, як у текстурі."

msgid "Optional bias to be applied during level-of-detail computation."
msgstr "Під час обчислення рівня деталізації необов’язкове зміщення."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureProj.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureProj.xhtml"

msgid ""
"|gvec4_type| **textureLod**\\ (\\ |gsampler2D| s, vec2 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"
msgstr ""
"|gvec4_type| **textureLod**\\ (\\ |gsampler2D| s, vec2 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"

msgid ""
"|gvec4_type| **textureLod**\\ (\\ |gsampler2DArray| s, vec3 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"
msgstr ""
"|gvec4_type| **textureLod**\\ (\\ |gsampler2DArray| s, vec3 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"

msgid ""
"|gvec4_type| **textureLod**\\ (\\ |gsampler3D| s, vec3 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"
msgstr ""
"|gvec4_type| **textureLod**\\ (\\ |gsampler3D| s, vec3 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"

msgid ""
"vec4 **textureLod**\\ (\\ samplerCube s, vec3 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"
msgstr ""
"vec4 **textureLod**\\ (\\ samplerCube s, vec3 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"

msgid ""
"vec4 **textureLod**\\ (\\ samplerCubeArray s, vec4 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"
msgstr ""
"vec4 **textureLod**\\ (\\ samplerCubeArray s, vec4 p, float "
"lod) :ref:`🔗<shader_func_textureLod>`"

msgid ""
"Performs a texture lookup at coordinate ``p`` from the texture bound to "
"sampler with an explicit level-of-detail as specified in ``lod``. ``lod`` "
"specifies λbase and sets the partial derivatives as follows::"
msgstr ""
"Виконує пошук текстури за координатою ``p`` з текстури, прив’язаної до "
"семплера з явним рівнем деталізації, як зазначено в ``lod``. ``lod`` "
"визначає λbase і встановлює часткові похідні таким чином:"

msgid "The explicit level-of-detail."
msgstr "Явний рівень деталізації."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureLod.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureLod.xhtml"

msgid ""
"|gvec4_type| **textureProjLod**\\ (\\ |gsampler2D| s, vec3 p, float "
"lod) :ref:`🔗<shader_func_textureProjLod>`"
msgstr ""
"|gvec4_type| **textureProjLod**\\ (\\ |gsampler2D| s, vec3 p, float "
"lod) :ref:`🔗<shader_func_textureProjLod>`"

msgid ""
"|gvec4_type| **textureProjLod**\\ (\\ |gsampler2D| s, vec4 p, float "
"lod) :ref:`🔗<shader_func_textureProjLod>`"
msgstr ""
"|gvec4_type| **textureProjLod**\\ (\\ |gsampler2D| s, vec4 p, float "
"lod) :ref:`🔗<shader_func_textureProjLod>`"

msgid ""
"|gvec4_type| **textureProjLod**\\ (\\ |gsampler3D| s, vec4 p, float "
"lod) :ref:`🔗<shader_func_textureProjLod>`"
msgstr ""
"|gvec4_type| **textureProjLod**\\ (\\ |gsampler3D| s, vec4 p, float "
"lod) :ref:`🔗<shader_func_textureProjLod>`"

msgid ""
"Performs a texture lookup with projection from an explicitly specified level-"
"of-detail."
msgstr "Виконує пошук текстури з проекцією з явно вказаного рівня деталізації."

msgid ""
"The texture coordinates consumed from P, not including the last component of "
"``p``, are divided by the last component of ``p``. The resulting 3rd "
"component of ``p`` in the shadow forms is used as Dref. After these values "
"are computed, the texture lookup proceeds as in "
"`textureLod<shader_func_textureLod>`, with ``lod`` used to specify the level-"
"of-detail from which the texture will be sampled."
msgstr ""
"Координати текстури, отримані з P, не включаючи останній компонент ``p``, "
"діляться на останній компонент ``p``. Отриманий 3-й компонент ``p`` у "
"тіньових формах використовується як Dref. Після обчислення цих значень пошук "
"текстури виконується так, як у `textureLod<shader_func_textureLod>`, з "
"``lod``, що використовується для визначення рівня деталізації, з якого буде "
"взято вибірку текстури."

msgid "The explicit level-of-detail from which to fetch texels."
msgstr "Явний рівень деталізації, з якого потрібно отримати текселі."

msgid "a texel"
msgstr "тексель"

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"textureProjLod.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"textureProjLod.xhtml"

msgid ""
"|gvec4_type| **textureGrad**\\ (\\ |gsampler2D| s, vec2 p, vec2 dPdx, vec2 "
"dPdy) :ref:`🔗<shader_func_textureGrad>`"
msgstr ""
"|gvec4_type| **textureGrad**\\ (\\ |gsampler2D| s, vec2 p, vec2 dPdx, vec2 "
"dPdy) :ref:`🔗<shader_func_textureGrad>`"

msgid ""
"|gvec4_type| **textureGrad**\\ (\\ |gsampler2DArray| s, vec3 p, vec2 dPdx, "
"vec2 dPdy) :ref:`🔗<shader_func_textureGrad>`"
msgstr ""
"|gvec4_type| **textureGrad**\\ (\\ |gsampler2DArray| s, vec3 p, vec2 dPdx, "
"vec2 dPdy) :ref:`🔗<shader_func_textureGrad>`"

msgid ""
"|gvec4_type| **textureGrad**\\ (\\ |gsampler3D| s, vec3 p, vec2 dPdx, vec2 "
"dPdy) :ref:`🔗<shader_func_textureGrad>`"
msgstr ""
"|gvec4_type| **textureGrad**\\ (\\ |gsampler3D| s, vec3 p, vec2 dPdx, vec2 "
"dPdy) :ref:`🔗<shader_func_textureGrad>`"

msgid ""
"vec4 **textureGrad**\\ (\\ samplerCube s, vec3 p, vec3 dPdx, vec3 "
"dPdy) :ref:`🔗<shader_func_textureGrad>`"
msgstr ""
"vec4 **textureGrad**\\ (\\ samplerCube s, vec3 p, vec3 dPdx, vec3 "
"dPdy) :ref:`🔗<shader_func_textureGrad>`"

msgid ""
"vec4 **textureGrad**\\ (\\ samplerCubeArray s, vec3 p, vec3 dPdx, vec3 "
"dPdy) :ref:`🔗<shader_func_textureGrad>`"
msgstr ""
"vec4 **textureGrad**\\ (\\ samplerCubeArray s, vec3 p, vec3 dPdx, vec3 "
"dPdy) :ref:`🔗<shader_func_textureGrad>`"

msgid ""
"Performs a texture lookup at coordinate ``p`` from the texture bound to "
"sampler with explicit texture coordinate gradiends as specified in ``dPdx`` "
"and ``dPdy``. Set:"
msgstr ""
"Виконує пошук текстури за координатою ``p`` з текстури, прив’язаної до "
"семплера з явними градієнтами координат текстури, як зазначено в ``dPdx`` і "
"``dPdy``. Набір:"

msgid "``δs/δx=δp/δx`` for a 1D texture, ``δp.s/δx`` otherwise"
msgstr "``δs/δx=δp/δx`` для одновимірної текстури, ``δp.s/δx`` інакше"

msgid "``δs/δy=δp/δy`` for a 1D texture, ``δp.s/δy`` otherwise"
msgstr "``δs/δy=δp/δy`` для одновимірної текстури, ``δp.s/δy`` інакше"

msgid "``δt/δx=0.0`` for a 1D texture, ``δp.t/δx`` otherwise"
msgstr "``δt/δx=0.0`` для одновимірної текстури, ``δp.t/δx`` інакше"

msgid "``δt/δy=0.0`` for a 1D texture, ``δp.t/δy`` otherwise"
msgstr "``δt/δy=0.0`` для одновимірної текстури, ``δp.t/δy`` інакше"

msgid "``δr/δx=0.0`` for a 1D or 2D texture, ``δp.p/δx`` otherwise"
msgstr "``δr/δx=0.0`` для 1D або 2D текстури, ``δp.p/δx`` інакше"

msgid "``δr/δy=0.0``  for a 1D or 2D texture, ``δp.p/δy`` otherwise"
msgstr "``δr/δy=0.0`` для 1D або 2D текстури, ``δp.p/δy`` інакше"

msgid ""
"For the cube version, the partial derivatives of ``p`` are assumed to be in "
"the coordinate system used before texture coordinates are projected onto the "
"appropriate cube face."
msgstr ""
"Для кубічної версії припускається, що часткові похідні ``p`` знаходяться в "
"системі координат, яка використовується до того, як координати текстури "
"проектуються на відповідну грань куба."

msgid "param dPdx"
msgstr "param dPdx"

msgid "The partial derivative of P with respect to window x."
msgstr "Часткова похідна P відносно вікна x."

msgid "param dPdy"
msgstr "param dPdy"

msgid "The partial derivative of P with respect to window y."
msgstr "Часткова похідна P відносно вікна y."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureGrad.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureGrad.xhtml"

msgid ""
"|gvec4_type| **textureProjGrad**\\ (\\ |gsampler2D| s, vec3 p, vec2 dPdx, "
"vec2 dPdy) :ref:`🔗<shader_func_textureProjGrad>`"
msgstr ""
"|gvec4_type| **textureProjGrad**\\ (\\ |gsampler2D| s, vec3 p, vec2 dPdx, "
"vec2 dPdy) :ref:`🔗<shader_func_textureProjGrad>`"

msgid ""
"|gvec4_type| **textureProjGrad**\\ (\\ |gsampler2D| s, vec4 p, vec2 dPdx, "
"vec2 dPdy) :ref:`🔗<shader_func_textureProjGrad>`"
msgstr ""
"|gvec4_type| **textureProjGrad**\\ (\\ |gsampler2D| s, vec4 p, vec2 dPdx, "
"vec2 dPdy) :ref:`🔗<shader_func_textureProjGrad>`"

msgid ""
"|gvec4_type| **textureProjGrad**\\ (\\ |gsampler3D| s, vec4 p, vec3 dPdx, "
"vec3 dPdy) :ref:`🔗<shader_func_textureProjGrad>`"
msgstr ""
"|gvec4_type| **textureProjGrad**\\ (\\ |gsampler3D| s, vec4 p, vec3 dPdx, "
"vec3 dPdy) :ref:`🔗<shader_func_textureProjGrad>`"

msgid "Perform a texture lookup with projection and explicit gradients."
msgstr "Виконайте пошук текстури за допомогою проекції та явних градієнтів."

msgid ""
"The texture coordinates consumed from ``p``, not including the last "
"component of ``p``, are divided by the last component of ``p``. After these "
"values are computed, the texture lookup proceeds as in "
"`textureGrad<shader_func_textureGrad>`, passing ``dPdx`` and ``dPdy`` as "
"gradients."
msgstr ""
"Координати текстури, отримані від ``p``, не включаючи останній компонент "
"``p``, діляться на останній компонент ``p``. Після обчислення цих значень "
"пошук текстури виконується, як у `textureGrad<shader_func_textureGrad>`, "
"передаючи ``dPdx`` і ``dPdy`` як градієнти."

msgid "The partial derivative of ``p`` with respect to window x."
msgstr "Часткова похідна \"p\" відносно вікна x."

msgid "The partial derivative of ``p`` with respect to window y."
msgstr "Часткова похідна \"p\" відносно вікна y."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"textureProjGrad.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"textureProjGrad.xhtml"

msgid ""
"|gvec4_type| **texelFetch**\\ (\\ |gsampler2D| s, ivec2 p, int "
"lod) :ref:`🔗<shader_func_texelFetch>`"
msgstr ""
"|gvec4_type| **texelFetch**\\ (\\ |gsampler2D| s, ivec2 p, int "
"lod) :ref:`🔗<shader_func_texelFetch>`"

msgid ""
"|gvec4_type| **texelFetch**\\ (\\ |gsampler2DArray| s, ivec3 p, int "
"lod) :ref:`🔗<shader_func_texelFetch>`"
msgstr ""
"|gvec4_type| **texelFetch**\\ (\\ |gsampler2DArray| s, ivec3 p, int "
"lod) :ref:`🔗<shader_func_texelFetch>`"

msgid ""
"|gvec4_type| **texelFetch**\\ (\\ |gsampler3D| s, ivec3 p, int "
"lod) :ref:`🔗<shader_func_texelFetch>`"
msgstr ""
"|gvec4_type| **texelFetch**\\ (\\ |gsampler3D| s, ivec3 p, int "
"lod) :ref:`🔗<shader_func_texelFetch>`"

msgid ""
"Performs a lookup of a single texel from texture coordinate ``p`` in the "
"texture bound to sampler."
msgstr ""
"Виконує пошук одного текселя з координати текстури ``p`` у текстурі, "
"прив’язаній до семплера."

msgid ""
"Specifies the level-of-detail within the texture from which the texel will "
"be fetched."
msgstr ""
"Визначає рівень деталізації в межах текстури, з якої буде отримано тексель."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/texelFetch.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/texelFetch.xhtml"

msgid ""
"|gvec4_type| **textureGather**\\ (\\ |gsampler2D| s, vec2 p [, int "
"comps] ) :ref:`🔗<shader_func_textureGather>`"
msgstr ""
"|gvec4_type| **textureGather**\\ (\\ |gsampler2D| s, vec2 p [, int "
"comps] ) :ref:`🔗<shader_func_textureGather>`"

msgid ""
"|gvec4_type| **textureGather**\\ (\\ |gsampler2DArray| s, vec3 p [, int "
"comps] ) :ref:`🔗<shader_func_textureGather>`"
msgstr ""
"|gvec4_type| **textureGather**\\ (\\ |gsampler2DArray| s, vec3 p [, int "
"comps] ) :ref:`🔗<shader_func_textureGather>`"

msgid ""
"vec4 **textureGather**\\ (\\ samplerCube s, vec3 p [, int "
"comps] ) :ref:`🔗<shader_func_textureGather>`"
msgstr ""
"vec4 **textureGather**\\ (\\ samplerCube s, vec3 p [, int "
"comps] ) :ref:`🔗<shader_func_textureGather>`"

msgid "Returns the value::"
msgstr "Повертає значення::"

msgid "param comps"
msgstr "param comps"

msgid ""
"*optional* the component of the source texture (0 -> x, 1 -> y, 2 -> z, 3 -> "
"w) that will be used to generate the resulting vector. Zero if not specified."
msgstr ""
"*необов’язковий* компонент вихідної текстури (0 -> x, 1 -> y, 2 -> z, 3 -> "
"w), який використовуватиметься для створення результуючого вектора. Нуль, "
"якщо не вказано."

msgid "The gathered texel."
msgstr "Зібраний тексель."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureGather.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/textureGather.xhtml"

msgid "|vec_type| **dFdx**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_dFdx>`"
msgstr "|vec_type| **dFdx**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_dFdx>`"

msgid ""
"Returns the partial derivative of ``p`` with respect to the window x "
"coordinate using local differencing."
msgstr ""
"Повертає часткову похідну від \"p\" відносно віконної координати x за "
"допомогою локальної різниці."

msgid ""
"Returns either :ref:`dFdxCoarse<shader_func_dFdxCoarse>` "
"or :ref:`dFdxFine<shader_func_dfdxFine>`. The implementation may choose "
"which calculation to perform based upon factors such as performance or the "
"value of the API ``GL_FRAGMENT_SHADER_DERIVATIVE_HINT`` hint."
msgstr ""
"Повертає :ref:`dFdxCoarse<shader_func_dFdxCoarse>` "
"або :ref:`dFdxFine<shader_func_dfdxFine>`. Реалізація може вибрати, яке "
"обчислення виконати, на основі таких факторів, як продуктивність або "
"значення підказки API ``GL_FRAGMENT_SHADER_DERIVATIVE_HINT``."

msgid ""
"Expressions that imply higher order derivatives such as ``dFdx(dFdx(n))`` "
"have undefined results, as do mixed-order derivatives such as "
"``dFdx(dFdy(n))``."
msgstr ""
"Вирази, які передбачають похідні вищого порядку, такі як ``dFdx(dFdx(n))``, "
"мають невизначені результати, як і похідні змішаного порядку, такі як "
"``dFdx(dFdy(n))``."

msgid "The expression of which to take the partial derivative."
msgstr "Вираз якого взяти частковою похідною."

msgid ""
"It is assumed that the expression ``p`` is continuous and therefore "
"expressions evaluated via non-uniform control flow may be undefined."
msgstr ""
"Передбачається, що вираз ``p`` є неперервним, і тому вирази, обчислені за "
"допомогою нерівномірного потоку керування, можуть бути невизначеними."

msgid "The partial derivative of ``p``."
msgstr "Часткова похідна від ``p``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/dFdx.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/dFdx.xhtml"

msgid ""
"|vec_type| **dFdxCoarse**\\ (\\ |vec_type| "
"p) :ref:`🔗<shader_func_dFdxCoarse>`"
msgstr ""
"|vec_type| **dFdxCoarse**\\ (\\ |vec_type| "
"p) :ref:`🔗<shader_func_dFdxCoarse>`"

msgid ""
"Available only in the fragment shader. Not available when using the "
"Compatibility renderer."
msgstr ""
"Доступно лише у фрагментному шейдері. Недоступно, якщо використовується "
"рендерер сумісності."

msgid ""
"Returns the partial derivative of ``p`` with respect to the window x "
"coordinate."
msgstr "Повертає часткову похідну ``p`` відносно координати вікна x."

msgid ""
"Calculates derivatives using local differencing based on the value of ``p`` "
"for the current fragment's neighbors, and will possibly, but not "
"necessarily, include the value for the current fragment. That is, over a "
"given area, the implementation can compute derivatives in fewer unique "
"locations than would be allowed for the "
"corresponding :ref:`dFdxFine<shader_func_dFdxFine>` function."
msgstr ""
"Обчислює похідні за допомогою локальної різниці на основі значення ``p`` для "
"сусідів поточного фрагмента та, можливо, але не обов’язково, включатиме "
"значення для поточного фрагмента. Тобто, у певній області реалізація може "
"обчислювати похідні в меншій кількості унікальних місць, ніж дозволено для "
"відповідної функції :ref:`dFdxFine<shader_func_dFdxFine>`."

msgid ""
"|vec_type| **dFdxFine**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_dFdxFine>`"
msgstr ""
"|vec_type| **dFdxFine**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_dFdxFine>`"

msgid ""
"Calculates derivatives using local differencing based on the value of ``p`` "
"for the current fragment and its immediate neighbor(s)."
msgstr ""
"Обчислює похідні за допомогою локальної різниці на основі значення \"p\" для "
"поточного фрагмента та його найближчих сусідів."

msgid "|vec_type| **dFdy**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_dFdy>`"
msgstr "|vec_type| **dFdy**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_dFdy>`"

msgid ""
"Returns the partial derivative of ``p`` with respect to the window y "
"coordinate using local differencing."
msgstr ""
"Повертає часткову похідну від \"p\" відносно координати вікна y за допомогою "
"локальної різниці."

msgid ""
"Returns either :ref:`dFdyCoarse<shader_func_dFdyCoarse>` "
"or :ref:`dFdyFine<shader_func_dfdyFine>`. The implementation may choose "
"which calculation to perform based upon factors such as performance or the "
"value of the API ``GL_FRAGMENT_SHADER_DERIVATIVE_HINT`` hint."
msgstr ""
"Повертає :ref:`dFdyCoarse<shader_func_dFdyCoarse>` "
"або :ref:`dFdyFine<shader_func_dfdyFine>`. Реалізація може вибрати, яке "
"обчислення виконати, на основі таких факторів, як продуктивність або "
"значення підказки API ``GL_FRAGMENT_SHADER_DERIVATIVE_HINT``."

msgid ""
"|vec_type| **dFdyCoarse**\\ (\\ |vec_type| "
"p) :ref:`🔗<shader_func_dFdyCoarse>`"
msgstr ""
"|vec_type| **dFdyCoarse**\\ (\\ |vec_type| "
"p) :ref:`🔗<shader_func_dFdyCoarse>`"

msgid ""
"Returns the partial derivative of ``p`` with respect to the window y "
"coordinate."
msgstr "Повертає часткову похідну \"p\" відносно координати вікна y."

msgid ""
"Calculates derivatives using local differencing based on the value of ``p`` "
"for the current fragment's neighbors, and will possibly, but not "
"necessarily, include the value for the current fragment. That is, over a "
"given area, the implementation can compute derivatives in fewer unique "
"locations than would be allowed for the corresponding dFdyFine and dFdyFine "
"functions."
msgstr ""
"Обчислює похідні за допомогою локальної різниці на основі значення ``p`` для "
"сусідів поточного фрагмента та, можливо, але не обов’язково, включатиме "
"значення для поточного фрагмента. Тобто, у заданій області реалізація може "
"обчислювати похідні в меншій кількості унікальних місць, ніж це дозволено "
"для відповідних функцій dFdyFine і dFdyFine."

msgid ""
"|vec_type| **dFdyFine**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_dFdyFine>`"
msgstr ""
"|vec_type| **dFdyFine**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_dFdyFine>`"

msgid "|vec_type| **fwidth**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_fwidth>`"
msgstr ""
"|vec_type| **fwidth**\\ (\\ |vec_type| p) :ref:`🔗<shader_func_fwidth>`"

msgid "Returns the sum of the absolute value of derivatives in x and y."
msgstr "Повертає суму абсолютних значень похідних по x і y."

msgid "Uses local differencing for the input argument ``p``."
msgstr "Використовує локальну різницю для вхідного аргументу ``p``."

msgid "Equivalent to ``abs(dFdx(p)) + abs(dFdy(p))``."
msgstr "Еквівалент ``abs(dFdx(p)) + abs(dFdy(p))``."

msgid "The partial derivative."
msgstr "Часткова похідна."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/fwidth.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/fwidth.xhtml"

msgid ""
"|vec_type| **fwidthCoarse**\\ (\\ |vec_type| "
"p) :ref:`🔗<shader_func_fwidthCoarse>`"
msgstr ""
"|vec_type| **fwidthCoarse**\\ (\\ |vec_type| "
"p) :ref:`🔗<shader_func_fwidthCoarse>`"

msgid "Uses local differencing for the input argument p."
msgstr "Використовує локальну різницю для вхідного аргументу p."

msgid "Equivalent  to ``abs(dFdxCoarse(p)) + abs(dFdyCoarse(p))``."
msgstr "Еквівалент ``abs(dFdxCoarse(p)) + abs(dFdyCoarse(p))``."

msgid ""
"|vec_type| **fwidthFine**\\ (\\ |vec_type| "
"p) :ref:`🔗<shader_func_fwidthFine>`"
msgstr ""
"|vec_type| **fwidthFine**\\ (\\ |vec_type| "
"p) :ref:`🔗<shader_func_fwidthFine>`"

msgid "Equivalent to ``abs(dFdxFine(p)) + abs(dFdyFine(p))``."
msgstr "Еквівалент ``abs(dFdxFine(p)) + abs(dFdyFine(p))``."

msgid "Packing and unpacking functions"
msgstr "Функції пакування та розпакування"

msgid ""
"These functions convert floating-point numbers into various sized integers "
"and then pack those integers into a single 32bit unsigned integer. The "
"'unpack' functions perform the opposite operation, returning the original "
"floating-point numbers."
msgstr ""
"Ці функції перетворюють числа з плаваючою комою в цілі числа різного "
"розміру, а потім упаковують ці цілі числа в одне 32-розрядне ціле число без "
"знаку. Функції «розпакувати» виконують протилежну операцію, повертаючи "
"вихідні числа з плаваючою комою."

msgid "uint"
msgstr "uint"

msgid ":ref:`packHalf2x16<shader_func_packHalf2x16>`\\ (\\ vec2 v)"
msgstr ":ref:`packHalf2x16<shader_func_packHalf2x16>`\\ (\\ vec2 v)"

msgid ":ref:`unpackHalf2x16<shader_func_unpackHalf2x16>`\\ (\\ uint v)"
msgstr ":ref:`unpackHalf2x16<shader_func_unpackHalf2x16>`\\ (\\ uint v)"

msgid "Convert two 32-bit floats to 16 bit floats and pack them."
msgstr ""
"Перетворіть два 32-бітні числа з плаваючою точкою на 16-бітні числа з "
"плаваючою точкою та запакуйте їх."

msgid ":ref:`packUnorm2x16<shader_func_packUnorm2x16>`\\ (\\ vec2 v)"
msgstr ":ref:`packUnorm2x16<shader_func_packUnorm2x16>`\\ (\\ vec2 v)"

msgid ":ref:`unpackUnorm2x16<shader_func_unpackUnorm2x16>`\\ (\\ uint v)"
msgstr ":ref:`unpackUnorm2x16<shader_func_unpackUnorm2x16>`\\ (\\ uint v)"

msgid ""
"Convert two normalized (range 0..1) 32-bit floats to 16-bit floats and pack "
"them."
msgstr ""
"Перетворіть два нормалізовані (діапазон 0..1) 32-бітні числа з плаваючою "
"точкою на 16-бітні числа з плаваючою точкою та запакуйте їх."

msgid ":ref:`packSnorm2x16<shader_func_packSnorm2x16>`\\ (\\ vec2 v)"
msgstr ":ref:`packSnorm2x16<shader_func_packSnorm2x16>`\\ (\\ vec2 v)"

msgid ":ref:`unpackSnorm2x16<shader_func_unpackSnorm2x16>`\\ (\\ uint v)"
msgstr ":ref:`unpackSnorm2x16<shader_func_unpackSnorm2x16>`\\ (\\ uint v)"

msgid ""
"Convert two signed normalized (range -1..1) 32-bit floats to 16-bit floats "
"and pack them."
msgstr ""
"Перетворіть два нормалізованих зі знаком (діапазон -1..1) 32-розрядних чисел "
"з плаваючою точкою в 16-розрядні числа з плаваючою точкою та запакуйте їх."

msgid ":ref:`packUnorm4x8<shader_func_packUnorm4x8>`\\ (\\ vec4 v)"
msgstr ":ref:`packUnorm4x8<shader_func_packUnorm4x8>`\\ (\\ vec4 v)"

msgid ":ref:`unpackUnorm4x8<shader_func_unpackUnorm4x8>`\\ (\\ uint v)"
msgstr ":ref:`unpackUnorm4x8<shader_func_unpackUnorm4x8>`\\ (\\ uint v)"

msgid ""
"Convert four normalized (range 0..1) 32-bit floats into 8-bit floats and "
"pack them."
msgstr ""
"Перетворіть чотири нормалізовані (діапазон 0..1) 32-бітні числа з плаваючою "
"точкою у 8-бітні числа з плаваючою точкою та запакуйте їх."

msgid ":ref:`packSnorm4x8<shader_func_packSnorm4x8>`\\ (\\ vec4 v)"
msgstr ":ref:`packSnorm4x8<shader_func_packSnorm4x8>`\\ (\\ vec4 v)"

msgid ":ref:`unpackSnorm4x8<shader_func_unpackSnorm4x8>`\\ (\\ uint v)"
msgstr ":ref:`unpackSnorm4x8<shader_func_unpackSnorm4x8>`\\ (\\ uint v)"

msgid ""
"Convert four signed normalized (range -1..1) 32-bit floats into 8-bit floats "
"and pack them."
msgstr ""
"Перетворіть чотири знакові нормалізовані (діапазон -1..1) 32-розрядні числа "
"з плаваючою точкою у 8-розрядні числа з плаваючою точкою та запакуйте їх."

msgid "Packing and unpacking function descriptions"
msgstr "Опис функцій пакування та розпакування"

msgid "uint **packHalf2x16**\\ (\\ vec2 v) :ref:`🔗<shader_func_packHalf2x16>`"
msgstr ""
"uint **packHalf2x16**\\ (\\ vec2 v) :ref:`🔗<shader_func_packHalf2x16>`"

msgid ""
"Converts two 32-bit floating-point quantities to 16-bit floating-point "
"quantities and packs them into a single 32-bit integer."
msgstr ""
"Перетворює дві 32-розрядні величини з плаваючою комою на 16-розрядні "
"величини з плаваючою комою та упаковує їх в одне 32-розрядне ціле число."

msgid ""
"Returns an unsigned integer obtained by converting the components of a two-"
"component floating-point vector to the 16-bit floating-point representation "
"found in the OpenGL Specification, and then packing these two 16-bit "
"integers into a 32-bit unsigned integer. The first vector component "
"specifies the 16 least-significant bits of the result; the second component "
"specifies the 16 most-significant bits."
msgstr ""
"Повертає ціле число без знаку, отримане шляхом перетворення компонентів "
"двокомпонентного вектора з плаваючою комою в 16-бітне представлення з "
"плаваючою комою, знайдене в специфікації OpenGL, а потім упаковування цих "
"двох 16-бітних цілих чисел у 32-бітне ціле число без знаку. Перший компонент "
"вектора визначає 16 молодших бітів результату; другий компонент визначає 16 "
"старших бітів."

msgid "param v"
msgstr "param v"

msgid ""
"A vector of two 32-bit floating-point values that are to be converted to 16-"
"bit representation and packed into the result."
msgstr ""
"Вектор двох 32-розрядних значень із плаваючою комою, які потрібно "
"перетворити на 16-розрядне представлення та запакувати в результат."

msgid "The packed value."
msgstr "Упакована цінність."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/packHalf2x16.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/packHalf2x16.xhtml"

msgid ""
"vec2 **unpackHalf2x16**\\ (\\ uint v) :ref:`🔗<shader_func_unpackHalf2x16>`"
msgstr ""
"vec2 **unpackHalf2x16**\\ (\\ uint v) :ref:`🔗<shader_func_unpackHalf2x16>`"

msgid "Inverse of :ref:`packHalf2x16<shader_func_packHalf2x16>`."
msgstr "Зворотне до :ref:`packHalf2x16<shader_func_packHalf2x16>`."

msgid ""
"Unpacks a 32-bit integer into two 16-bit floating-point values, converts "
"them to 32-bit floating-point values, and puts them into a vector. The first "
"component of the vector is obtained from the 16 least-significant bits of "
"``v``; the second component is obtained from the 16 most-significant bits of "
"``v``."
msgstr ""
"Розпаковує 32-розрядне ціле число в два 16-розрядних значення з плаваючою "
"комою, перетворює їх на 32-розрядні значення з плаваючою комою та поміщає їх "
"у вектор. Перший компонент вектора отримується з 16 молодших бітів ``v``; "
"другий компонент отримується з 16 старших бітів ``v``."

msgid ""
"A single 32-bit unsigned integer containing 2 packed 16-bit floating-point "
"values."
msgstr ""
"Єдине 32-розрядне ціле число без знаку, що містить 2 упаковані 16-розрядні "
"значення з плаваючою комою."

msgid "Two unpacked floating-point values."
msgstr "Два розпакованих значення з плаваючою комою."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"unpackHalf2x16.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"unpackHalf2x16.xhtml"

msgid ""
"uint **packUnorm2x16**\\ (\\ vec2 v) :ref:`🔗<shader_func_packUnorm2x16>`"
msgstr ""
"uint **packUnorm2x16**\\ (\\ vec2 v) :ref:`🔗<shader_func_packUnorm2x16>`"

msgid "Pack floating-point values into an unsigned integer."
msgstr "Упакувати значення з плаваючою комою в ціле число без знака."

msgid ""
"Converts each component of the normalized floating-point value v into 16-bit "
"integer values and then packs the results into a 32-bit unsigned integer."
msgstr ""
"Перетворює кожен компонент нормалізованого значення з плаваючою комою v на "
"16-розрядне ціле число, а потім упаковує результати в 32-розрядне ціле число "
"без знака."

msgid ""
"The conversion for component c of ``v`` to fixed-point is performed as "
"follows::"
msgstr ""
"Перетворення для компонента c ``v`` у фіксовану точку виконується таким "
"чином:"

msgid ""
"The first component of the vector will be written to the least significant "
"bits of the output; the last component will be written to the most "
"significant bits."
msgstr ""
"Перший компонент вектора буде записаний у молодші біти виходу; останній "
"компонент буде записаний до старших бітів."

msgid "A vector of values to be packed into an unsigned integer."
msgstr "Вектор значень, які потрібно упакувати в ціле число без знака."

msgid "Unsigned 32 bit integer containing the packed encoding of the vector."
msgstr ""
"32-розрядне ціле число без знаку, що містить упаковане кодування вектора."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/packUnorm.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/packUnorm.xhtml"

msgid ""
"vec2 **unpackUnorm2x16**\\ (\\ uint v) :ref:`🔗<shader_func_unpackUnorm2x16>`"
msgstr ""
"vec2 **unpackUnorm2x16**\\ (\\ uint v) :ref:`🔗<shader_func_unpackUnorm2x16>`"

msgid "Unpack floating-point values from an unsigned integer."
msgstr "Розпакуйте значення з плаваючою комою з цілого числа без знака."

msgid ""
"Unpack single 32-bit unsigned integers into a pair of 16-bit unsigned "
"integers. Then, each component is converted to a normalized floating-point "
"value to generate the returned two-component vector."
msgstr ""
"Розпакуйте окремі 32-розрядні цілі числа без знака в пару 16-розрядних цілих "
"чисел без знаку. Потім кожен компонент перетворюється на нормалізоване "
"значення з плаваючою комою, щоб створити повернутий двокомпонентний вектор."

msgid ""
"The conversion for unpacked fixed point value f to floating-point is "
"performed as follows:"
msgstr ""
"Перетворення неупакованого значення фіксованої коми f у число з плаваючою "
"комою виконується наступним чином:"

msgid "f / 65535.0"
msgstr "f / 65535.0"

msgid ""
"The first component of the returned vector will be extracted from the least "
"significant bits of the input; the last component will be extracted from the "
"most significant bits."
msgstr ""
"Перший компонент повернутого вектора буде витягнуто з молодших бітів вхідних "
"даних; останній компонент буде виділено зі старших бітів."

msgid "An unsigned integer containing packed floating-point values."
msgstr "Ціле число без знака, що містить упаковані значення з плаваючою комою."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/unpackUnorm.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/unpackUnorm.xhtml"

msgid ""
"uint **packSnorm2x16**\\ (\\ vec2 v) :ref:`🔗<shader_func_packSnorm2x16>`"
msgstr ""
"uint **packSnorm2x16**\\ (\\ vec2 v) :ref:`🔗<shader_func_packSnorm2x16>`"

msgid "Packs floating-point values into an unsigned integer."
msgstr "Пакує значення з плаваючою комою в ціле число без знака."

msgid ""
"Convert each component of the normalized floating-point value ``v`` into 16-"
"bit integer values and then packs the results into a 32-bit unsigned integer."
msgstr ""
"Перетворіть кожен компонент нормалізованого значення з плаваючою комою ``v`` "
"на 16-бітне ціле число, а потім запакуйте результати в 32-бітне ціле число "
"без знаку."

msgid ""
"vec2 **unpackSnorm2x16**\\ (\\ uint v) :ref:`🔗<shader_func_unpackSnorm2x16>`"
msgstr ""
"vec2 **unpackSnorm2x16**\\ (\\ uint v) :ref:`🔗<shader_func_unpackSnorm2x16>`"

msgid "Unpacks floating-point values from an unsigned integer."
msgstr "Розпаковує значення з плаваючою комою з цілого числа без знаку."

msgid ""
"Unpacks single 32-bit unsigned integers into a pair of 16-bit signed "
"integers. Then, each component is converted to a normalized floating-point "
"value to generate the returned two-component vector."
msgstr ""
"Розпаковує окремі 32-розрядні цілі числа без знака в пару 16-розрядних цілих "
"чисел зі знаком. Потім кожен компонент перетворюється на нормалізоване "
"значення з плаваючою комою, щоб створити повернутий двокомпонентний вектор."

msgid "clamp(f / 32727.0, -1.0, 1.0)"
msgstr "clamp(f / 32727.0, -1.0, 1.0)"

msgid "uint **packUnorm4x8**\\ (\\ vec4 v) :ref:`🔗<shader_func_packUnorm4x8>`"
msgstr ""
"uint **packUnorm4x8**\\ (\\ vec4 v) :ref:`🔗<shader_func_packUnorm4x8>`"

msgid ""
"Converts each component of the normalized floating-point value ``v`` into 16-"
"bit integer values and then packs the results into a 32-bit unsigned integer."
msgstr ""
"Перетворює кожен компонент нормалізованого значення з плаваючою комою ``v`` "
"на 16-бітне ціле число, а потім упаковує результати в 32-бітне ціле число "
"без знаку."

msgid ""
"vec4 **unpackUnorm4x8**\\ (\\ uint v) :ref:`🔗<shader_func_unpackUnorm4x8>`"
msgstr ""
"vec4 **unpackUnorm4x8**\\ (\\ uint v) :ref:`🔗<shader_func_unpackUnorm4x8>`"

msgid ""
"Unpacks single 32-bit unsigned integers into four 8-bit unsigned integers. "
"Then, each component is converted to a normalized floating-point value to "
"generate the returned four-component vector."
msgstr ""
"Розпаковує окремі 32-розрядні цілі числа без знака в чотири 8-розрядні цілі "
"числа без знаку. Потім кожен компонент перетворюється на нормалізоване "
"значення з плаваючою комою, щоб створити повернутий чотирикомпонентний "
"вектор."

msgid "f / 255.0"
msgstr "f / 255.0"

msgid "uint **packSnorm4x8**\\ (\\ vec4 v) :ref:`🔗<shader_func_packSnorm4x8>`"
msgstr ""
"uint **packSnorm4x8**\\ (\\ vec4 v) :ref:`🔗<shader_func_packSnorm4x8>`"

msgid ""
"vec4 **unpackSnorm4x8**\\ (\\ uint v) :ref:`🔗<shader_func_unpackSnorm4x8>`"
msgstr ""
"vec4 **unpackSnorm4x8**\\ (\\ uint v) :ref:`🔗<shader_func_unpackSnorm4x8>`"

msgid ""
"Unpack single 32-bit unsigned integers into four 8-bit signed integers. "
"Then, each component is converted to a normalized floating-point value to "
"generate the returned four-component vector."
msgstr ""
"Розпакуйте одні 32-розрядні цілі числа без знака в чотири 8-розрядні цілі "
"числа зі знаком. Потім кожен компонент перетворюється на нормалізоване "
"значення з плаваючою комою, щоб створити повернутий чотирикомпонентний "
"вектор."

msgid "clamp(f / 127.0, -1.0, 1.0)"
msgstr "clamp(f / 127.0, -1.0, 1.0)"

msgid "Bitwise functions"
msgstr "Порозрядні функції"

msgid ""
":ref:`bitfieldExtract<shader_func_bitfieldExtract>`\\ (\\ |vec_int_type| "
"value, int offset, int bits)"
msgstr ""
":ref:`bitfieldExtract<shader_func_bitfieldExtract>`\\ (\\ |vec_int_type| "
"value, int offset, int bits)"

msgid ""
":ref:`bitfieldExtract<shader_func_bitfieldExtract>`\\ (\\ |vec_uint_type| "
"value, int offset, int bits)"
msgstr ""
":ref:`bitfieldExtract<shader_func_bitfieldExtract>`\\ (\\ |vec_uint_type| "
"value, int offset, int bits)"

msgid "Extracts a range of bits from an integer."
msgstr "Виділяє діапазон бітів із цілого числа."

msgid ""
":ref:`bitfieldInsert<shader_func_bitfieldInsert>`\\ (\\ |vec_int_type| base, "
"|vec_int_type| insert, int offset, int bits)"
msgstr ""
":ref:`bitfieldInsert<shader_func_bitfieldInsert>`\\ (\\ |vec_int_type| base, "
"|vec_int_type| insert, int offset, int bits)"

msgid ""
":ref:`bitfieldInsert<shader_func_bitfieldInsert>`\\ (\\ |vec_uint_type| "
"base, |vec_uint_type| insert, int offset, int bits)"
msgstr ""
":ref:`bitfieldInsert<shader_func_bitfieldInsert>`\\ (\\ |vec_uint_type| "
"base, |vec_uint_type| insert, int offset, int bits)"

msgid "Insert a range of bits into an integer."
msgstr "Вставте діапазон бітів у ціле число."

msgid ""
":ref:`bitfieldReverse<shader_func_bitfieldReverse>`\\ (\\ |vec_int_type| "
"value)"
msgstr ""
":ref:`bitfieldReverse<shader_func_bitfieldReverse>`\\ (\\ |vec_int_type| "
"value)"

msgid ""
":ref:`bitfieldReverse<shader_func_bitfieldReverse>`\\ (\\ |vec_uint_type| "
"value)"
msgstr ""
":ref:`bitfieldReverse<shader_func_bitfieldReverse>`\\ (\\ |vec_uint_type| "
"value)"

msgid "Reverse the order of bits in an integer."
msgstr "Змінити порядок бітів у цілому числі."

msgid ":ref:`bitCount<shader_func_bitCount>`\\ (\\ |vec_int_type| value)"
msgstr ":ref:`bitCount<shader_func_bitCount>`\\ (\\ |vec_int_type| value)"

msgid ":ref:`bitCount<shader_func_bitCount>`\\ (\\ |vec_uint_type| value)"
msgstr ":ref:`bitCount<shader_func_bitCount>`\\ (\\ |vec_uint_type| value)"

msgid "Counts the number of 1 bits in an integer."
msgstr "Підраховує кількість 1 біта в цілому числі."

msgid ":ref:`findLSB<shader_func_findLSB>`\\ (\\ |vec_int_type| value)"
msgstr ":ref:`findLSB<shader_func_findLSB>`\\ (\\ |vec_int_type| value)"

msgid ":ref:`findLSB<shader_func_findLSB>`\\ (\\ |vec_uint_type| value)"
msgstr ":ref:`findLSB<shader_func_findLSB>`\\ (\\ |vec_uint_type| value)"

msgid "Find the index of the least significant bit set to 1 in an integer."
msgstr "Знайдіть індекс молодшого біта, який дорівнює 1, у цілому числі."

msgid ":ref:`findMSB<shader_func_findMSB>`\\ (\\ |vec_int_type| value)"
msgstr ":ref:`findMSB<shader_func_findMSB>`\\ (\\ |vec_int_type| value)"

msgid ":ref:`findMSB<shader_func_findMSB>`\\ (\\ |vec_uint_type| value)"
msgstr ":ref:`findMSB<shader_func_findMSB>`\\ (\\ |vec_uint_type| value)"

msgid "Find the index of the most significant bit set to 1 in an integer."
msgstr "Знайдіть індекс старшого біта, який дорівнює 1, у цілому числі."

msgid "|void|"
msgstr "|void|"

msgid ""
":ref:`imulExtended<shader_func_imulExtended>`\\ (\\ |vec_int_type| x, |"
"vec_int_type| y, out |vec_int_type| msb, out |vec_int_type| lsb)"
msgstr ""
":ref:`imulExtended<shader_func_imulExtended>`\\ (\\ |vec_int_type| x, |"
"vec_int_type| y, out |vec_int_type| msb, out |vec_int_type| lsb)"

msgid ""
":ref:`umulExtended<shader_func_umulExtended>`\\ (\\ |vec_uint_type| x, |"
"vec_uint_type| y, out |vec_uint_type| msb, out |vec_uint_type| lsb)"
msgstr ""
":ref:`umulExtended<shader_func_umulExtended>`\\ (\\ |vec_uint_type| x, |"
"vec_uint_type| y, out |vec_uint_type| msb, out |vec_uint_type| lsb)"

msgid "Multiplies two 32-bit numbers and produce a 64-bit result."
msgstr "Перемножує два 32-розрядних числа та отримує 64-розрядний результат."

msgid ""
":ref:`uaddCarry<shader_func_uaddCarry>`\\ (\\ |vec_uint_type| x, |"
"vec_uint_type| y, out |vec_uint_type| carry)"
msgstr ""
":ref:`uaddCarry<shader_func_uaddCarry>`\\ (\\ |vec_uint_type| x, |"
"vec_uint_type| y, out |vec_uint_type| carry)"

msgid "Adds two unsigned integers and generates carry."
msgstr "Додає два цілі числа без знаку та генерує перенесення."

msgid ""
":ref:`usubBorrow<shader_func_usubBorrow>`\\ (\\ |vec_uint_type| x, |"
"vec_uint_type| y, out |vec_uint_type| borrow)"
msgstr ""
":ref:`usubBorrow<shader_func_usubBorrow>`\\ (\\ |vec_uint_type| x, |"
"vec_uint_type| y, out |vec_uint_type| borrow)"

msgid "Subtracts two unsigned integers and generates borrow."
msgstr "Віднімає два цілі числа без знаку та генерує позику."

msgid ""
":ref:`ldexp<shader_func_ldexp>`\\ (\\ |vec_type| x, out |vec_int_type| exp)"
msgstr ""
":ref:`ldexp<shader_func_ldexp>`\\ (\\ |vec_type| x, out |vec_int_type| exp)"

msgid "Assemble a floating-point number from a value and exponent."
msgstr "Складіть число з плаваючою комою зі значення та експоненти."

msgid ""
":ref:`frexp<shader_func_frexp>`\\ (\\ |vec_type| x, out |vec_int_type| exp)"
msgstr ""
":ref:`frexp<shader_func_frexp>`\\ (\\ |vec_type| x, out |vec_int_type| exp)"

msgid ""
"Splits a floating-point number (``x``) into significand integral components"
msgstr "Розділяє число з плаваючою комою (``x``) на значущі та цілі компоненти"

msgid "Bitwise function descriptions"
msgstr "Порозрядні описи функцій"

msgid ""
"|vec_int_type| **bitfieldExtract**\\ (\\ |vec_int_type| value, int offset, "
"int bits) :ref:`🔗<shader_func_bitfieldExtract>`"
msgstr ""
"|vec_int_type| **bitfieldExtract**\\ (\\ |vec_int_type| value, int offset, "
"int bits) :ref:`🔗<shader_func_bitfieldExtract>`"

msgid ""
"Extracts a subset of the bits of ``value`` and returns it in the least "
"significant bits of the result. The range of bits extracted is ``[offset, "
"offset + bits - 1]``."
msgstr ""
"Витягує підмножину бітів \"значення\" та повертає її в молодших бітах "
"результату. Діапазон видобутих бітів: ``[зсув, зміщення + біти - 1]``."

msgid "The most significant bits of the result will be set to zero."
msgstr "Старші біти результату будуть встановлені на нуль."

msgid "If bits is zero, the result will be zero."
msgstr "Якщо біт дорівнює нулю, результат буде нульовим."

msgid "The result will be undefined if:"
msgstr "Результат буде невизначеним, якщо:"

msgid "offset or bits is negative."
msgstr "зсув або біти від’ємні."

msgid ""
"if the sum of offset and bits is greater than the number of bits used to "
"store the operand."
msgstr ""
"якщо сума зсуву та бітів більша за кількість бітів, які використовуються для "
"зберігання операнда."

msgid "param value"
msgstr "param value"

msgid "The integer from which to extract bits."
msgstr "Ціле число, з якого потрібно отримати біти."

msgid "param offset"
msgstr "param offset"

msgid "The index of the first bit to extract."
msgstr "Індекс першого біта для вилучення."

msgid "param bits"
msgstr "param bits"

msgid "The number of bits to extract."
msgstr "Кількість бітів для вилучення."

msgid "Integer with the requested bits."
msgstr "Ціле число із запитаними бітами."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"bitfieldExtract.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"bitfieldExtract.xhtml"

msgid ""
"|vec_uint_type| **bitfieldExtract**\\ (\\ |vec_uint_type| value, int offset, "
"int bits) :ref:`🔗<shader_func_bitfieldExtract>`"
msgstr ""
"|vec_uint_type| **bitfieldExtract**\\ (\\ |vec_uint_type| value, int offset, "
"int bits) :ref:`🔗<shader_func_bitfieldExtract>`"

msgid ""
"The most significant bits will be set to the value of ``offset + base - 1`` "
"(i.e., it is sign extended to the width of the return type)."
msgstr ""
"Для старших бітів буде встановлено значення ``зміщення + основа - 1`` (тобто "
"це знак, розширений на ширину типу, що повертається)."

msgid ""
"|vec_uint_type| **bitfieldExtract**\\ (\\ |vec_uint_type| value, int offset, "
"int bits) :ref:`🔗<shader_func_bitfieldInsert>`"
msgstr ""
"|vec_uint_type| **bitfieldExtract**\\ (\\ |vec_uint_type| value, int offset, "
"int bits) :ref:`🔗<shader_func_bitfieldInsert>`"

msgid ""
"|vec_uint_type| **bitfieldInsert**\\ (\\ |vec_uint_type| base, |"
"vec_uint_type| insert, int offset, int "
"bits) :ref:`🔗<shader_func_bitfieldInsert>`"
msgstr ""
"|vec_uint_type| **bitfieldInsert**\\ (\\ |vec_uint_type| base, |"
"vec_uint_type| insert, int offset, int "
"bits) :ref:`🔗<shader_func_bitfieldInsert>`"

msgid ""
"Inserts the ``bits`` least significant bits of ``insert`` into ``base`` at "
"offset ``offset``."
msgstr ""
"Вставляє ``біти`` молодші значущі біти ``insert`` у ``основу`` зі зміщенням "
"``offset``."

msgid ""
"The returned value will have bits [offset, offset + bits + 1] taken from [0, "
"bits - 1] of ``insert`` and all other bits taken directly from the "
"corresponding bits of base."
msgstr ""
"Повернуте значення матиме біти [зсув, зсув + біти + 1], взяті з [0, біти - "
"1] ``вставки``, а всі інші біти взяті безпосередньо з відповідних бітів "
"основи."

msgid "If bits is zero, the result will be the original value of base."
msgstr "Якщо біт дорівнює нулю, результатом буде вихідне значення основи."

msgid "param base"
msgstr "param base"

msgid "The integer into which to insert ``insert``."
msgstr "Ціле число, у яке потрібно вставити ``insert``."

msgid "param insert"
msgstr "param insert"

msgid "The value of the bits to insert."
msgstr "Значення бітів для вставки."

msgid "The index of the first bit to insert."
msgstr "Індекс першого біта для вставки."

msgid "The number of bits to insert."
msgstr "Кількість бітів для вставки."

msgid "``base`` with inserted bits."
msgstr "``base`` зі вставленими бітами."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"bitfieldInsert.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"bitfieldInsert.xhtml"

msgid ""
"|vec_int_type| **bitfieldReverse**\\ (\\ |vec_int_type| "
"value) :ref:`🔗<shader_func_bitfieldReverse>`"
msgstr ""
"|vec_int_type| **bitfieldReverse**\\ (\\ |vec_int_type| "
"value) :ref:`🔗<shader_func_bitfieldReverse>`"

msgid ""
"|vec_uint_type| **bitfieldReverse**\\ (\\ |vec_uint_type| "
"value) :ref:`🔗<shader_func_bitfieldReverse>`"
msgstr ""
"|vec_uint_type| **bitfieldReverse**\\ (\\ |vec_uint_type| "
"value) :ref:`🔗<shader_func_bitfieldReverse>`"

msgid ""
"The bit numbered ``n`` will be taken from bit ``(bits - 1) - n`` of "
"``value``, where bits is the total number of bits used to represent "
"``value``."
msgstr ""
"Біт з номером ``n`` буде взято з біта ``(біти - 1) - n`` ``значення``, де "
"біт - це загальна кількість бітів, які використовуються для представлення "
"``значення``."

msgid "The value whose bits to reverse."
msgstr "Значення, біти якого потрібно змінити."

msgid "``value`` but with its bits reversed."
msgstr "``value`` але з перевернутими частинами."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"bitfieldReverse.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/"
"bitfieldReverse.xhtml"

msgid ""
"|vec_int_type| **bitCount**\\ (\\ |vec_int_type| "
"value) :ref:`🔗<shader_func_bitCount>`"
msgstr ""
"|vec_int_type| **bitCount**\\ (\\ |vec_int_type| "
"value) :ref:`🔗<shader_func_bitCount>`"

msgid ""
"|vec_uint_type| **bitCount**\\ (\\ |vec_uint_type| "
"value) :ref:`🔗<shader_func_bitCount>`"
msgstr ""
"|vec_uint_type| **bitCount**\\ (\\ |vec_uint_type| "
"value) :ref:`🔗<shader_func_bitCount>`"

msgid "The value whose bits to count."
msgstr "Значення, біти якого підраховуються."

msgid ""
"The number of bits that are set to 1 in the binary representation of "
"``value``."
msgstr ""
"Кількість бітів, для яких встановлено значення 1 у двійковому представленні "
"``value``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/bitCount.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/bitCount.xhtml"

msgid ""
"|vec_int_type| **findLSB**\\ (\\ |vec_int_type| "
"value) :ref:`🔗<shader_func_findLSB>`"
msgstr ""
"|vec_int_type| **findLSB**\\ (\\ |vec_int_type| "
"value) :ref:`🔗<shader_func_findLSB>`"

msgid ""
"|vec_uint_type| **findLSB**\\ (\\ |vec_uint_type| "
"value) :ref:`🔗<shader_func_findLSB>`"
msgstr ""
"|vec_uint_type| **findLSB**\\ (\\ |vec_uint_type| "
"value) :ref:`🔗<shader_func_findLSB>`"

msgid "Find the index of the least significant bit set to ``1``."
msgstr "Знайдіть індекс молодшого біта, встановленого на ``1``."

msgid "If ``value`` is zero, ``-1`` will be returned."
msgstr "Якщо ``значення`` дорівнює нулю, буде повернено ``-1``."

msgid "The value whose bits to scan."
msgstr "Значення, біти якого скануються."

msgid ""
"The bit number of the least significant bit that is set to 1 in the binary "
"representation of value."
msgstr ""
"Номер біта молодшого біта, який має значення 1 у двійковому представленні "
"значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/findLSB.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/findLSB.xhtml"

msgid ""
"|vec_int_type| **findMSB**\\ (\\ |vec_int_type| "
"value) :ref:`🔗<shader_func_findMSB>`"
msgstr ""
"|vec_int_type| **findMSB**\\ (\\ |vec_int_type| "
"value) :ref:`🔗<shader_func_findMSB>`"

msgid ""
"|vec_uint_type| **findMSB**\\ (\\ |vec_uint_type| "
"value) :ref:`🔗<shader_func_findMSB>`"
msgstr ""
"|vec_uint_type| **findMSB**\\ (\\ |vec_uint_type| "
"value) :ref:`🔗<shader_func_findMSB>`"

msgid "Find the index of the most significant bit set to 1."
msgstr "Знайдіть індекс старшого біта, який дорівнює 1."

msgid "For signed integer types, the sign bit is checked first and then:"
msgstr ""
"Для цілих типів зі знаком спочатку перевіряється знаковий біт, а потім:"

msgid ""
"For positive integers, the result will be the bit number of the most "
"significant bit that is set to 1."
msgstr ""
"Для додатних цілих чисел результатом буде номер біта старшого біта, який має "
"значення 1."

msgid ""
"For negative integers, the result will be the bit number of the most "
"significant bit set to 0."
msgstr ""
"Для від’ємних цілих чисел результатом буде номер біта старшого біта, "
"встановлений на 0."

msgid "For a value of zero or negative 1, -1 will be returned."
msgstr "Для значення нуль або мінус 1 буде повернено -1."

msgid ""
"The bit number of the most significant bit that is set to 1 in the binary "
"representation of value."
msgstr ""
"Номер біта старшого біта, який має значення 1 у двійковому представленні "
"значення."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/findMSB.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/findMSB.xhtml"

msgid ""
"|void| **imulExtended**\\ (\\ |vec_int_type| x, |vec_int_type| y, out |"
"vec_int_type| msb, out |vec_int_type| "
"lsb) :ref:`🔗<shader_func_imulExtended>`"
msgstr ""
"|void| **imulExtended**\\ (\\ |vec_int_type| x, |vec_int_type| y, out |"
"vec_int_type| msb, out |vec_int_type| "
"lsb) :ref:`🔗<shader_func_imulExtended>`"

msgid ""
"Perform 32-bit by 32-bit signed multiplication to produce a 64-bit result."
msgstr ""
"Виконайте множення зі знаком 32-біт на 32-біт, щоб отримати 64-бітний "
"результат."

msgid ""
"The 32 least significant bits of this product are returned in ``lsb`` and "
"the 32 most significant bits are returned in ``msb``."
msgstr ""
"32 молодші біти цього продукту повертаються в ``lsb``, а 32 старші біти "
"повертаються в ``msb``."

msgid "The first multiplicand."
msgstr "Перше множене."

msgid "The second multiplicand."
msgstr "Друге множене."

msgid "param msb"
msgstr "param msb"

msgid "The variable to receive the most significant word of the product."
msgstr "Змінна для отримання найважливішого слова продукту."

msgid "param lsb"
msgstr "param lsb"

msgid "The variable to receive the least significant word of the product."
msgstr "Змінна для отримання найменшого значущого слова продукту."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/umulExtended.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/umulExtended.xhtml"

msgid ""
"|void| **umulExtended**\\ (\\ |vec_uint_type| x, |vec_uint_type| y, out |"
"vec_uint_type| msb, out |vec_uint_type| "
"lsb) :ref:`🔗<shader_func_umulExtended>`"
msgstr ""
"|void| **umulExtended**\\ (\\ |vec_uint_type| x, |vec_uint_type| y, out |"
"vec_uint_type| msb, out |vec_uint_type| "
"lsb) :ref:`🔗<shader_func_umulExtended>`"

msgid ""
"Perform 32-bit by 32-bit unsigned multiplication to produce a 64-bit result."
msgstr ""
"Виконайте беззнакове множення 32-біт на 32-біт, щоб отримати 64-бітний "
"результат."

msgid ""
"|vec_uint_type| **uaddCarry**\\ (\\ |vec_uint_type| x, |vec_uint_type| y, "
"out |vec_uint_type| carry) :ref:`🔗<shader_func_uaddCarry>`"
msgstr ""
"|vec_uint_type| **uaddCarry**\\ (\\ |vec_uint_type| x, |vec_uint_type| y, "
"out |vec_uint_type| carry) :ref:`🔗<shader_func_uaddCarry>`"

msgid "Add unsigned integers and generate carry."
msgstr "Додати цілі числа без знаку та створити перенесення."

msgid ""
"adds two 32-bit unsigned integer variables (scalars or vectors) and "
"generates a 32-bit unsigned integer result, along with a carry output. The "
"value carry is ."
msgstr ""
"додає дві 32-розрядні цілі змінні без знака (скаляри або вектори) і генерує "
"32-розрядне ціле число без знаку разом із виводом переносу. Перенесення "
"значення становить ."

msgid "The first operand."
msgstr "Перший операнд."

msgid "The second operand."
msgstr "Другий операнд."

msgid "param carry"
msgstr "param carry"

msgid "0 if the sum is less than 2\\ :sup:`32`, otherwise 1."
msgstr "0, якщо сума менша за 2\\ :sup:`32`, інакше 1."

msgid "``(x + y) % 2^32``."
msgstr "``(x + y) % 2^32``."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/uaddCarry.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/uaddCarry.xhtml"

msgid ""
"|vec_uint_type| **usubBorrow**\\ (\\ |vec_uint_type| x, |vec_uint_type| y, "
"out |vec_uint_type| borrow) :ref:`🔗<shader_func_usubBorrow>`"
msgstr ""
"|vec_uint_type| **usubBorrow**\\ (\\ |vec_uint_type| x, |vec_uint_type| y, "
"out |vec_uint_type| borrow) :ref:`🔗<shader_func_usubBorrow>`"

msgid "Subtract unsigned integers and generate borrow."
msgstr "Відніміть цілі числа без знака та згенеруйте запозичення."

msgid "param borrow"
msgstr "param borrow"

msgid "``0`` if ``x >= y``, otherwise ``1``."
msgstr "``0`` якщо ``x >= y``, інакше ``1``."

msgid ""
"The difference of ``x`` and ``y`` if non-negative, or 2\\ :sup:`32` plus "
"that difference otherwise."
msgstr ""
"Різниця ``x`` і ``y``, якщо невід’ємне, або 2\\ :sup:`32` плюс ця різниця в "
"іншому випадку."

msgid ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/usubBorrow.xhtml"
msgstr ""
"https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/usubBorrow.xhtml"

msgid ""
"|vec_type| **ldexp**\\ (\\ |vec_type| x, out |vec_int_type| "
"exp) :ref:`🔗<shader_func_ldexp>`"
msgstr ""
"|vec_type| **ldexp**\\ (\\ |vec_type| x, out |vec_int_type| "
"exp) :ref:`🔗<shader_func_ldexp>`"

msgid "Assembles a floating-point number from a value and exponent."
msgstr "Складає число з плаваючою комою зі значення та експоненти."

msgid ""
"If this product is too large to be represented in the floating-point type, "
"the result is undefined."
msgstr ""
"Якщо цей добуток завеликий для представлення в типі з плаваючою комою, "
"результат буде невизначеним."

msgid "The value to be used as a source of significand."
msgstr "Значення, яке буде використовуватися як джерело значущості."

msgid "param exp"
msgstr "param exp"

msgid "The value to be used as a source of exponent."
msgstr "Значення, яке буде використовуватися як джерело експоненти."

msgid "``x * 2^exp``"
msgstr "``x * 2^exp``"

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/ldexp.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/ldexp.xhtml"

msgid ""
"|vec_type| **frexp**\\ (\\ |vec_type| x, out |vec_int_type| "
"exp) :ref:`🔗<shader_func_frexp>`"
msgstr ""
"|vec_type| **frexp**\\ (\\ |vec_type| x, out |vec_int_type| "
"exp) :ref:`🔗<shader_func_frexp>`"

msgid ""
"Extracts ``x`` into a floating-point significand in the range ``[0.5, 1.0)`` "
"and in integral exponent of two, such that::"
msgstr ""
"Виділяє ``x`` у значуще число з плаваючою комою в діапазоні ``[0,5, 1,0)`` і "
"в інтегральному показнику двох, так що:"

msgid ""
"For a floating-point value of zero, the significand and exponent are both "
"zero."
msgstr ""
"Для значення з плаваючою комою, що дорівнює нулю, і значуща, і експонента "
"дорівнюють нулю."

msgid ""
"For a floating-point value that is an infinity or a floating-point NaN, the "
"results are undefined."
msgstr ""
"Для значення з плаваючою комою, яке є нескінченністю, або NaN з плаваючою "
"комою результати не визначені."

msgid "The value from which significand and exponent are to be extracted."
msgstr "Значення, з якого слід витягти значуще число та показник степеня."

msgid "The variable into which to place the exponent of ``x``."
msgstr "Змінна, у яку потрібно помістити експоненту \"x\"."

msgid "The significand of ``x``."
msgstr "Значуще значення ``x``."

msgid "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/frexp.xhtml"
msgstr "https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/frexp.xhtml"
