#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using ImmediateMesh"
msgstr "Використання ImmediateMesh"

msgid ""
"The :ref:`ImmediateMesh <class_ImmediateMesh>` is a convenient tool to "
"create dynamic geometry using an OpenGL 1.x-style API. Which makes it both "
"approachable to use and efficient for meshes which need to be updated every "
"frame."
msgstr ""
":ref:`ImmediateMesh <class_ImmediateMesh>` — це зручний інструмент для "
"створення динамічної геометрії за допомогою API у стилі OpenGL 1.x. Це "
"робить його доступним для використання та ефективним для сіток, які потрібно "
"оновлювати кожен кадр."

msgid ""
"Generating complex geometry (several thousand vertices) with this tool is "
"inefficient, even if it's done only once. Instead, it is designed to "
"generate simple geometry that changes every frame."
msgstr ""
"Генерувати складну геометрію (кілька тисяч вершин) за допомогою цього "
"інструменту неефективно, навіть якщо це зробити лише один раз. Натомість він "
"призначений для створення простої геометрії, яка змінює кожен кадр."

msgid ""
"First, you need to create a :ref:`MeshInstance3D <class_meshinstance3d>` and "
"add an :ref:`ImmediateMesh <class_ImmediateMesh>` to it in the Inspector."
msgstr ""
"Спочатку вам потрібно створити :ref:`MeshInstance3D <class_meshinstance3d>` "
"і додати :ref:`ImmediateMesh <class_ImmediateMesh>` до нього в інспекторі."

msgid ""
"Next, add a script to the MeshInstance3D. The code for the ImmediateMesh "
"should go in the ``_process()`` function if you want it to update each "
"frame, or in the ``_ready()`` function if you want to create the mesh once "
"and not update it. If you only generate a surface once, the ImmediateMesh is "
"just as efficient as any other kind of mesh as the generated mesh is cached "
"and reused."
msgstr ""
"Далі додайте сценарій до MeshInstance3D. Код для ImmediateMesh має міститися "
"у функції ``_process()``, якщо ви хочете, щоб він оновлював кожен кадр, або "
"у функції ``_ready()``, якщо ви хочете створити сітку один раз і не "
"оновлювати її. Якщо ви створюєте поверхню лише один раз, ImmediateMesh так "
"само ефективний, як і будь-який інший вид сіті, оскільки створена сітка "
"кешується та повторно використовується."

msgid ""
"To begin generating geometry you must call ``surface_begin()``. "
"``surface_begin()`` takes a ``PrimitiveType`` as an argument. "
"``PrimitiveType`` instructs the GPU how to arrange the primitive based on "
"the vertices given whether it is triangles, lines, points, etc. A complete "
"list can be found under the :ref:`Mesh <class_mesh>` class reference page."
msgstr ""
"Щоб почати генерувати геометрію, ви повинні викликати ``surface_begin()``. "
"``surface_begin()`` приймає ``PrimitiveType`` як аргумент. ``PrimitiveType`` "
"вказує GPU, як упорядкувати примітив на основі заданих вершин, незалежно від "
"того, чи це трикутники, лінії, точки тощо. Повний список можна знайти на "
"сторінці посилання на клас :ref:`Mesh <class_mesh>`."

msgid ""
"Once you have called ``surface_begin()`` you are ready to start adding "
"vertices. You add vertices one at a time. First you add vertex specific "
"attributes such as normals or UVs using ``surface_set_****()`` (e.g. "
"``surface_set_normal()``). Then you call ``surface_add_vertex()`` to add a "
"vertex with those attributes. For example:"
msgstr ""
"Після виклику Surface_begin() ви готові почати додавати вершини. Ви додаєте "
"вершини по одній. Спочатку ви додаєте специфічні атрибути вершин, такі як "
"нормалі або UV, використовуючи ``surface_set_****()`` (наприклад, "
"``surface_set_normal()``). Потім ви викликаєте ``surface_add_vertex()``, щоб "
"додати вершину з цими атрибутами. Наприклад:"

msgid ""
"Only attributes added before the call to ``surface_add_vertex()`` will be "
"included in that vertex. If you add an attribute twice before calling "
"``surface_add_vertex()``, only the second call will be used."
msgstr ""
"Лише атрибути, додані до виклику ``surface_add_vertex()``, будуть включені в "
"цю вершину. Якщо ви двічі додаєте атрибут перед викликом "
"``surface_add_vertex()``, використовуватиметься лише другий виклик."

msgid ""
"Finally, once you have added all your vertices call ``surface_end()`` to "
"signal that you have finished generating the surface. You can call "
"``surface_begin()`` and ``surface_end()`` multiple times to generate "
"multiple surfaces for the mesh."
msgstr ""
"Нарешті, коли ви додали всі свої вершини, викличте ``surface_end()``, щоб "
"сигналізувати про те, що ви закінчили генерувати поверхню. Ви можете "
"викликати ``surface_begin()`` і ``surface_end()`` кілька разів, щоб створити "
"кілька поверхонь для сітки."

msgid ""
"The example code below draws a single triangle in the ``_ready()`` function."
msgstr ""
"Наведений нижче приклад коду малює один трикутник у функції ``_ready()``."

msgid ""
"The ImmediateMesh can also be used across frames. Each time you call "
"``surface_begin()`` and ``surface_end()``, you are adding a new surface to "
"the ImmediateMesh. If you want to recreate the mesh from scratch each frame, "
"call ``clear_surfaces()`` before calling ``surface_begin()``."
msgstr ""
"ImmediateMesh також можна використовувати між фреймами. Кожного разу, коли "
"ви викликаєте ``surface_begin()`` і ``surface_end()``, ви додаєте нову "
"поверхню до ImediateMesh. Якщо ви хочете відтворити сітку з нуля для кожного "
"кадру, викличте ``clear_surfaces()`` перед викликом ``surface_begin()``."

msgid ""
"The above code will dynamically create and draw a single surface each frame."
msgstr ""
"Наведений вище код динамічно створюватиме та малюватиме одну поверхню для "
"кожного кадру."
