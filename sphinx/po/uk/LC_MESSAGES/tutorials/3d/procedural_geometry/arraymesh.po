#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the ArrayMesh"
msgstr "Використання ArrayMesh"

msgid ""
"This tutorial will present the basics of using an :ref:`ArrayMesh "
"<class_arraymesh>`."
msgstr "Цей урок дасть основи використання :ref:`ArrayMesh <class_arraymesh>`."

msgid ""
"The first parameter is the ``PrimitiveType``, an OpenGL concept that "
"instructs the GPU how to arrange the primitive based on the vertices given, "
"i.e. whether they represent triangles, lines, points, etc. See :ref:`Mesh."
"PrimitiveType <enum_Mesh_PrimitiveType>` for the options available."
msgstr ""
"Перший параметр - ``PrimitiveType``, це концепція OpenGL, яка інструктує "
"графічний процесор, як розташувати примітив на основі вершин, враховуючи, чи "
"це трикутники, лінії, точки тощо. Повний список варіантів дивіться в :ref:"
"`Mesh.PrimitiveType <enum_Mesh_PrimitiveType>`."

msgid "Index"
msgstr "Індекс"

msgid "Mesh.ArrayType Enum"
msgstr "Сітка.ТипМасиву.Enum"

msgid "Array type"
msgstr "Тип масиву"

msgid "0"
msgstr "0"

msgid "``ARRAY_VERTEX``"
msgstr "``ARRAY_VERTEX``"

msgid "1"
msgstr "1"

msgid "``ARRAY_NORMAL``"
msgstr "``ARRAY_NORMAL``"

msgid "2"
msgstr "2"

msgid "``ARRAY_TANGENT``"
msgstr "``ARRAY_TANGENT``"

msgid "3"
msgstr "3"

msgid "``ARRAY_COLOR``"
msgstr "``ARRAY_COLOR``"

msgid "4"
msgstr "4"

msgid "``ARRAY_TEX_UV``"
msgstr "``ARRAY_TEX_UV``"

msgid "5"
msgstr "5"

msgid "``ARRAY_TEX_UV2``"
msgstr "``ARRAY_TEX_UV2``"

msgid "10"
msgstr "10"

msgid "``ARRAY_BONES``"
msgstr "``ARRAY_BONES``"

msgid "11"
msgstr "11"

msgid "``ARRAY_WEIGHTS``"
msgstr "``ARRAY_WEIGHTS``"

msgid "``ARRAY_INDEX``"
msgstr "``ARRAY_INDEX``"

msgid "Under ``_ready()``, create a new Array."
msgstr "Під ``_ready()`` створіть новий масив."

msgid ""
"This will be the array that we keep our surface information in - it will "
"hold all the arrays of data that the surface needs. Godot will expect it to "
"be of size ``Mesh.ARRAY_MAX``, so resize it accordingly."
msgstr ""
"Це буде масив, в якому ми зберігаємо інформацію про нашу поверхню, він буде "
"містити всі масиви даних, які потрібні поверхні. Godot очікує, що він буде "
"розміром з ``Mesh.ARRAY_MAX``, тому змініть його відповідно."

msgid "Next create the arrays for each data type you will use."
msgstr ""
"Далі створіть масиви для кожного типу даних, які ви будете використовувати."

msgid ""
"Once you have filled your data arrays with your geometry you can create a "
"mesh by adding each array to ``surface_array`` and then committing to the "
"mesh."
msgstr ""
"Після того, як ви заповнили свої масиви даних геометрією, ви можете створити "
"меш, додавши кожен масив до ``surface_array`` *(масиву поверхні)*."

msgid ""
"In this example, we used ``Mesh.PRIMITIVE_TRIANGLES``, but you can use any "
"primitive type available from mesh."
msgstr ""
"У цьому прикладі ми використовували ``Mesh.PRIMITIVE_TRIANGLES``, але ви "
"можете використовувати будь-який тип примітиву, доступний для меша."

msgid "Put together, the full code looks like:"
msgstr "В сукупності повний код виглядає так:"

msgid ""
"The code that goes in the middle can be whatever you want. Below we will "
"present some example code for generating a sphere."
msgstr ""
"Код в середині, може бути інший, залежно від вашого бажання. Нижче ми "
"наведемо кілька прикладів коду для генерування сфери."

msgid "Generating geometry"
msgstr "Генерування геометрії"

msgid ""
"Here is sample code for generating a sphere. Although the code is presented "
"in GDScript, there is nothing Godot specific about the approach to "
"generating it. This implementation has nothing in particular to do with "
"ArrayMeshes and is just a generic approach to generating a sphere. If you "
"are having trouble understanding it or want to learn more about procedural "
"geometry in general, you can use any tutorial that you find online."
msgstr ""
"Ось зразок коду для створення сфери. Хоча код представлений в GDScript, "
"немає нічого специфічного для Godot в підході до його створення. Ця "
"реалізація не має нічого спільного з ArrayMesh-ами і є лише загальним "
"підходом до створення сфери. Якщо у вас виникли проблеми з розумінням, або "
"ви хочете дізнатися більше про процедурну геометрію, ви можете "
"використовувати будь-який урок, який знайдете в Інтернеті."

msgid "Saving"
msgstr "Збереження"

msgid ""
"Finally, we can use the :ref:`ResourceSaver <class_resourcesaver>` class to "
"save the ArrayMesh. This is useful when you want to generate a mesh and then "
"use it later without having to re-generate it."
msgstr ""
"Нарешті, ми можемо використати клас :ref:`ResourceSaver "
"<class_resourcesaver>`, щоб зберегти ArrayMesh. Це корисно, коли ви хочете "
"створити меш, а потім використовувати його пізніше без необхідності повторно "
"генерувати."

msgid "Translation status"
msgstr "Стан перекладу"
