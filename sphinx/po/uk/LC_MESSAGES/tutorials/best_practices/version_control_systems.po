#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Version control systems"
msgstr "Системи контролю версій"

msgid "Introduction"
msgstr "Вступ"

msgid ""
"Godot aims to be VCS-friendly and generate mostly readable and mergeable "
"files."
msgstr ""
"Godot прагне бути дружнім до VCS і створювати здебільшого читабельні та "
"об’єднувані файли."

msgid "Version control plugins"
msgstr "Плагіни контролю версій"

msgid ""
"Godot also supports the use of version control systems in the editor itself. "
"However, version control in the editor requires a plugin for the specific "
"VCS you're using."
msgstr ""
"Godot також підтримує використання систем контролю версій у самому "
"редакторі. Однак для контролю версій у редакторі потрібен плагін для певного "
"VCS, який ви використовуєте."

msgid ""
"As of July 2023, there is only a Git plugin available, but the community may "
"create additional VCS plugins."
msgstr ""
"Станом на липень 2023 року доступний лише плагін Git, але спільнота може "
"створювати додаткові плагіни VCS."

msgid "Official Git plugin"
msgstr "Офіційний плагін Git"

msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases on `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."
msgstr ""
"Використання Git усередині редактора підтримується офіційним плагіном. Ви "
"можете знайти останні випуски на `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."

msgid ""
"Documentation on how to use the Git plugin can be found on its `wiki "
"<https://github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"Документацію щодо використання плагіна Git можна знайти на його `wiki "
"<https://github.com/godotengine/godot-git-plugin/wiki>`__."

msgid "Files to exclude from VCS"
msgstr "Файли для виключення з VCS"

msgid ""
"This lists files and folders that should be ignored from version control in "
"Godot 4.1 and later."
msgstr ""
"Тут перелічено файли та папки, які слід ігнорувати в системі контролю версій "
"у Godot 4.1 і пізніших версіях."

msgid ""
"The list of files of folders that should be ignored from version control in "
"Godot 3.x and Godot 4.0 is **entirely** different. This is important, as "
"Godot 3.x and 4.0 may store sensitive credentials in ``export_presets.cfg`` "
"(unlike Godot 4.1 and later)."
msgstr ""
"Список файлів і папок, які слід ігнорувати в контролі версій у Godot 3.x і "
"Godot 4.0, **повністю** відрізняється. Це важливо, оскільки Godot 3.x і 4.0 "
"можуть зберігати конфіденційні облікові дані в ``export_presets.cfg`` (на "
"відміну від Godot 4.1 і пізніших версій)."

msgid ""
"If you are using Godot 3, check the ``3.5`` version of this documentation "
"page instead."
msgstr ""
"Якщо ви використовуєте Godot 3, перевірте натомість версію ``3.5`` цієї "
"сторінки документації."

msgid ""
"There are some files and folders Godot automatically creates when opening a "
"project in the editor for the first time. To avoid bloating your version "
"control repository with generated data, you should add them to your VCS "
"ignore:"
msgstr ""
"Є деякі файли та папки, які Godot автоматично створює під час першого "
"відкриття проекту в редакторі. Щоб уникнути роздування репозиторію контролю "
"версій згенерованими даними, ви повинні додати їх до свого ігнорування VCS:"

msgid "``.godot/``: This folder stores various project cache data."
msgstr "``.godot/``: Ця папка зберігає різні дані кешу проекту."

msgid ""
"``*.translation``: These files are binary imported :ref:`translations "
"<doc_internationalizing_games>` generated from CSV files."
msgstr ""
"``*.translation``: Ці файли імпортовані у двійковій формі :ref:`translations "
"<doc_internationalizing_games>` згенеровано з CSV-файлів."

msgid ""
"You can make the Godot project manager generate version control metadata for "
"you automatically when creating a project. When choosing the **Git** option, "
"this creates ``.gitignore`` and ``.gitattributes`` files in the project root:"
msgstr ""
"Ви можете змусити менеджера проекту Godot автоматично генерувати для вас "
"метадані керування версіями під час створення проекту. Якщо вибрати опцію "
"**Git**, це створить файли ``.gitignore`` і ``.gitattributes`` у корені "
"проекту:"

msgid ""
"Creating version control metadata in the project manager's New Project dialog"
msgstr ""
"Створення метаданих керування версіями в діалоговому вікні «Новий проект» "
"менеджера проекту"

msgid ""
"Creating version control metadata in the project manager's **New Project** "
"dialog"
msgstr ""
"Створення метаданих керування версіями в діалоговому вікні **Новий проект** "
"менеджера проекту"

msgid ""
"In existing projects, select the **Project** menu at the top of the editor, "
"then choose **Version Control > Generate Version Control Metadata**. This "
"creates the same files as if the operation was performed in the project "
"manager."
msgstr ""
"У існуючих проектах виберіть меню **Проект** у верхній частині редактора, а "
"потім виберіть **Керування версіями > Створити метадані керування "
"версіями**. При цьому створюються ті самі файли, якби операція була виконана "
"в менеджері проектів."

msgid "Working with Git on Windows"
msgstr "Робота з Git у Windows"

msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted from LF to CRLF "
"automatically."
msgstr ""
"Більшість клієнтів Git для Windows налаштовано з ``core.autocrlf`` "
"встановленим на ``true``. Це може призвести до непотрібного позначення "
"файлів як модифікованих Git через автоматичне перетворення закінчень їх "
"рядків. Краще встановити цей параметр як."

msgid "It is better to set this option as:"
msgstr "Цей параметр краще встановити так:"

msgid ""
"Creating version control metadata using the project manager or editor will "
"automatically enforce LF line endings using the ``.gitattributes`` file. In "
"this case, you don't need to change your Git configuration."
msgstr ""
"Створення метаданих контролю версій за допомогою менеджера проекту або "
"редактора призведе до автоматичного застосування закінчення рядків LF за "
"допомогою файлу ``.gitattributes``. У цьому випадку вам не потрібно "
"змінювати конфігурацію Git."
