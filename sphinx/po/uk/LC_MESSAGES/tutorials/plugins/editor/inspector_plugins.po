#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Inspector plugins"
msgstr "Плагіни Inspector"

msgid ""
"The inspector dock allows you to create custom widgets to edit properties "
"through plugins. This can be beneficial when working with custom datatypes "
"and resources, although you can use the feature to change the inspector "
"widgets for built-in types. You can design custom controls for specific "
"properties, entire objects, and even separate controls associated with "
"particular datatypes."
msgstr ""
"Панель інспектора дозволяє створювати власні віджети для редагування "
"властивостей за допомогою плагінів. Це може бути корисним під час роботи з "
"настроюваними типами даних і ресурсами, хоча ви можете використовувати цю "
"функцію, щоб змінити віджети інспектора для вбудованих типів. Ви можете "
"створювати спеціальні елементи керування для певних властивостей, цілих "
"об’єктів і навіть окремих елементів керування, пов’язаних із певними типами "
"даних."

msgid ""
"This guide explains how to use the :ref:`class_EditorInspectorPlugin` and :"
"ref:`class_EditorProperty` classes to create a custom interface for "
"integers, replacing the default behavior with a button that generates random "
"values between 0 and 99."
msgstr ""
"У цьому посібнику пояснюється, як використовувати класи :ref:"
"`class_EditorInspectorPlugin` і :ref:`class_EditorProperty` для створення "
"спеціального інтерфейсу для цілих чисел, замінюючи стандартну поведінку "
"кнопкою, яка генерує випадкові значення від 0 до 99."

msgid "The default behavior on the left and the end result on the right."
msgstr "Поведінка за замовчуванням ліворуч і кінцевий результат праворуч."

msgid "Setting up your plugin"
msgstr "Налаштування плагіна"

msgid "Create a new empty plugin to get started."
msgstr "Щоб почати, створіть новий порожній плагін."

msgid "See :ref:`doc_making_plugins` guide to set up your new plugin."
msgstr ""
"Перегляньте :ref:`doc_making_plugins` посібник, щоб налаштувати ваш новий "
"плагін."

msgid ""
"Let's assume you've called your plugin folder ``my_inspector_plugin``. If "
"so, you should end up with a new ``addons/my_inspector_plugin`` folder that "
"contains two files: ``plugin.cfg`` and ``plugin.gd``."
msgstr ""
"Припустімо, що ви назвали папку плагіна ``my_inspector_plugin``. Якщо так, у "
"вас має бути нова папка addons/my_inspector_plugin, яка містить два файли: "
"plugin.cfg і plugin.gd."

msgid ""
"As before, ``plugin.gd`` is a script extending :ref:`class_EditorPlugin` and "
"you need to introduce new code for its ``_enter_tree`` and ``_exit_tree`` "
"methods. To set up your inspector plugin, you must load its script, then "
"create and add the instance by calling ``add_inspector_plugin()``. If the "
"plugin is disabled, you should remove the instance you have added by calling "
"``remove_inspector_plugin()``."
msgstr ""
"Як і раніше, ``plugin.gd`` — це сценарій, що розширює :ref:"
"`class_EditorPlugin`, і вам потрібно ввести новий код для його методів "
"``_enter_tree`` і ``_exit_tree``. Щоб налаштувати плагін інспектора, ви "
"повинні завантажити його сценарій, а потім створити та додати екземпляр, "
"викликавши ``add_inspector_plugin()``. Якщо плагін вимкнено, ви повинні "
"видалити екземпляр, який ви додали, викликавши ``remove_inspector_plugin()``."

msgid ""
"Here, you are loading a script and not a packed scene. Therefore you should "
"use ``new()`` instead of ``instantiate()``."
msgstr ""
"Тут ви завантажуєте сценарій, а не упаковану сцену. Тому вам слід "
"використовувати ``new()`` замість ``instantiate()``."

msgid "Interacting with the inspector"
msgstr "Взаємодія з інспектором"

msgid ""
"To interact with the inspector dock, your ``my_inspector_plugin.gd`` script "
"must extend the :ref:`class_EditorInspectorPlugin` class. This class "
"provides several virtual methods that affect how the inspector handles "
"properties."
msgstr ""
"Щоб взаємодіяти з доком інспектора, ваш скрипт ``my_inspector_plugin.gd`` "
"має розширювати клас :ref:`class_EditorInspectorPlugin`. Цей клас надає "
"кілька віртуальних методів, які впливають на те, як інспектор обробляє "
"властивості."

msgid ""
"To have any effect at all, the script must implement the ``_can_handle()`` "
"method. This function is called for each edited :ref:`class_Object` and must "
"return ``true`` if this plugin should handle the object or its properties."
msgstr ""
"Щоб мати будь-який ефект, сценарій повинен реалізувати метод "
"``_can_handle()``. Ця функція викликається для кожного відредагованого :ref:"
"`class_Object` і має повертати ``true``, якщо цей плагін має обробляти "
"об’єкт або його властивості."

msgid "This includes any :ref:`class_Resource` attached to the object."
msgstr "Це включає будь-який :ref:`class_Resource`, приєднаний до об’єкта."

msgid ""
"You can implement four other methods to add controls to the inspector at "
"specific positions. The ``_parse_begin()`` and ``_parse_end()`` methods are "
"called only once at the beginning and the end of parsing for each object, "
"respectively. They can add controls at the top or bottom of the inspector "
"layout by calling ``add_custom_control()``."
msgstr ""
"Ви можете реалізувати чотири інші методи, щоб додати елементи керування до "
"інспектора на певних позиціях. Методи ``_parse_begin()`` і ``_parse_end()`` "
"викликаються лише один раз на початку та в кінці аналізу для кожного об’єкта "
"відповідно. Вони можуть додавати елементи керування вгорі чи внизу макета "
"інспектора, викликаючи add_custom_control()`."

msgid ""
"As the editor parses the object, it calls the ``_parse_category()`` and "
"``_parse_property()`` methods. There, in addition to "
"``add_custom_control()``, you can call both ``add_property_editor()`` and "
"``add_property_editor_for_multiple_properties()``. Use these last two "
"methods to specifically add :ref:`class_EditorProperty`-based controls."
msgstr ""
"Коли редактор аналізує об’єкт, він викликає методи ``_parse_category()`` і "
"``_parse_property()``. Там, окрім ``add_custom_control()``, ви можете "
"викликати як ``add_property_editor()``, так і "
"``add_property_editor_for_multiple_properties()``. Використовуйте останні "
"два методи, щоб спеціально додати елементи керування на основі :ref:"
"`class_EditorProperty`."

msgid "Adding an interface to edit properties"
msgstr "Додавання інтерфейсу для редагування властивостей"

msgid ""
"The :ref:`class_EditorProperty` class is a special type of :ref:"
"`class_Control` that can interact with the inspector dock's edited objects. "
"It doesn't display anything but can house any other control nodes, including "
"complex scenes."
msgstr ""
"Клас :ref:`class_EditorProperty` — це особливий тип :ref:`class_Control`, "
"який може взаємодіяти з відредагованими об’єктами дока інспектора. Він "
"нічого не відображає, але може розміщувати будь-які інші вузли керування, "
"включаючи складні сцени."

msgid ""
"There are three essential parts to the script extending :ref:"
"`class_EditorProperty`:"
msgstr ""
"Є три основні частини сценарію, що розширює :ref:`class_EditorProperty`:"

msgid ""
"You must define the ``_init()`` method to set up the control nodes' "
"structure."
msgstr ""
"Ви повинні визначити метод ``_init()``, щоб налаштувати структуру вузлів "
"керування."

msgid ""
"You should implement the ``_update_property()`` to handle changes to the "
"data from the outside."
msgstr ""
"Ви повинні застосувати ``_update_property()`` для обробки змін даних ззовні."

msgid ""
"A signal must be emitted at some point to inform the inspector that the "
"control has changed the property using ``emit_changed``."
msgstr ""
"Сигнал повинен бути виданий в якийсь момент, щоб повідомити інспектору про "
"те, що елемент керування змінив властивість за допомогою ``emit_changed``."

msgid ""
"You can display your custom widget in two ways. Use just the default "
"``add_child()`` method to display it to the right of the property name, and "
"use ``add_child()`` followed by ``set_bottom_editor()`` to position it below "
"the name."
msgstr ""
"Ви можете відобразити свій настроюваний віджет двома способами. "
"Використовуйте метод за замовчуванням add_child() для відображення праворуч "
"від назви властивості та використовуйте add_child() із наступним "
"set_bottom_editor() щоб розташувати його під назвою."

msgid ""
"Using the example code above you should be able to make a custom widget that "
"replaces the default :ref:`class_SpinBox` control for integers with a :ref:"
"`class_Button` that generates random values."
msgstr ""
"Використовуючи наведений вище приклад коду, ви зможете створити спеціальний "
"віджет, який замінює стандартний елемент керування :ref:`class_SpinBox` для "
"цілих чисел на :ref:`class_Button`, який генерує випадкові значення."
