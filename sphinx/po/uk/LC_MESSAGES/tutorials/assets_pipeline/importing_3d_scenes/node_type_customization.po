#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Node type customization using name suffixes"
msgstr "Налаштування типу вузла за допомогою суфіксів імен"

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr ""
"Часто під час редагування сцени виникають загальні потреби, які потрібно "
"виконати після експорту:"

msgid "Adding collision detection to objects."
msgstr "Додати виявлення зіткнень до об'єктів."

msgid "Setting objects as navigation meshes."
msgstr "Встановити об'єкти як навігаційні сітки."

msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modeling)."
msgstr ""
"Видалення вузлів, які не використовуються в движку гри (наприклад, певні "
"світильники, які використовуються для моделювання)."

msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modeling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"Щоб спростити цей робочий процес, Godot пропонує кілька суфіксів, які можна "
"додати до назв об’єктів у вашому програмному забезпеченні 3D-моделювання. "
"Під час імпортування Godot виявить суфікси в назвах об’єктів і автоматично "
"виконає дії."

msgid ""
"All the suffixes described below can be used with ``-``, ``$``, and ``_`` "
"and are **case-insensitive**."
msgstr ""
"Усі описані нижче суфікси можна використовувати з ``-``, ``$`` і ``_`` і "
"**не враховують регістр**."

msgid "Remove nodes (-noimp)"
msgstr "Вилучити вузли (-noimp)"

msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"Імена вузлів, з суфіксом ``-noimp``, будуть видалені під час імпорту, "
"незалежно від їх типу. Вони не з’являться на імпортованій сцені."

msgid ""
"This is equivalent to enabling **Skip Import** for a node in the Advanced "
"Import Settings dialog."
msgstr ""
"Це еквівалентно ввімкненню **Пропустити імпорт** для вузла в діалоговому "
"вікні «Додаткові параметри імпорту»."

msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "Створення зіткнень (-col, -colonly, -convcolonly)"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""
"Параметр ``-col`` працюватиме лише для об’єктів Mesh. Якщо він виявлений, "
"буде додано дочірній вузол статичного зіткнення, що використовує ту ж "
"геометрію, що і меш (сітка). Буде створена побудована з трикутників форма "
"зіткнення, яка є повільним, але точним варіантом виявлення зіткнень. Цей "
"варіант, як правило, потрібен для геометрії рівня (але дивіться також ``-"
"colonly`` нижче)."

msgid ""
"The option ``-convcol`` will create a :ref:`class_ConvexPolygonShape3D` "
"instead of a :ref:`class_ConcavePolygonShape3D`. Unlike triangle meshes "
"which can be concave, a convex shape can only accurately represent a shape "
"that doesn't have any concave angles (a pyramid is convex, but a hollow box "
"is concave). Due to this, convex collision shapes are generally not suited "
"for level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""
"Параметр ``-convcol`` створить :ref:`class_ConvexPolygonShape3D` "
"замість :ref:`class_ConcavePolygonShape3D`. На відміну від трикутних сіток, "
"які можуть бути увігнутими, опукла форма може точно представляти лише форму, "
"яка не має жодних увігнутих кутів (піраміда є опуклою, але порожниста "
"коробка є увігнутою). Через це опуклі форми зіткнення зазвичай не підходять "
"для геометрії рівня. При представленні досить простих сіток опуклі форми "
"зіткнення можуть призвести до кращої продуктивності порівняно з трикутною "
"формою зіткнення. Цей параметр ідеально підходить для простих або динамічних "
"об’єктів, які вимагають переважно точного виявлення зіткнень."

msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"Однак в обох випадках візуальна геометрія може бути занадто складною, або "
"недостатньо гладкою для зіткнень. Це може спричинити збої у фізиці та без "
"потреб уповільнити роботу движка."

msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_StaticBody3D` collision "
"instead. This helps the visual mesh and actual collision to be separated."
msgstr ""
"Щоб вирішити цю проблему, існує модифікатор ``-colonly``. Він видалить сітку "
"під час імпортування та створить натомість "
"колізію :ref:`class_StaticBody3D`. Це допомагає розділити візуальну сітку та "
"фактичне зіткнення."

msgid ""
"The option ``-convcolonly`` works in a similar way, but will create "
"a :ref:`class_ConvexPolygonShape3D` instead using convex decomposition."
msgstr ""
"Параметр ``-convcolonly`` працює подібним чином, але "
"створить :ref:`class_ConvexPolygonShape3D` замість цього за допомогою "
"опуклої декомпозиції."

msgid ""
"With Collada files, the option ``-colonly`` can also be used with Blender's "
"empty objects. On import, it will create a :ref:`class_StaticBody3D` with a "
"collision node as a child. The collision node will have one of a number of "
"predefined shapes, depending on Blender's empty draw type:"
msgstr ""
"У файлах Collada опцію ``-colonly`` також можна використовувати з порожніми "
"об’єктами Blender. Під час імпорту він створить :ref:`class_StaticBody3D` з "
"вузлом зіткнення як дочірнього. Вузол зіткнення матиме одну з кількох "
"попередньо визначених форм, залежно від типу порожнього малювання Blender:"

msgid "Choosing a draw type for an Empty on creation in Blender"
msgstr "Вибір типу малювання для Empty під час створення в Blender"

msgid "Single arrow will create a :ref:`class_SeparationRayShape3D`."
msgstr "Одна стрілка створить :ref:`class_SeparationRayShape3D`."

msgid "Cube will create a :ref:`class_BoxShape3D`."
msgstr "Cube створить :ref:`class_BoxShape3D`."

msgid "Image will create a :ref:`class_WorldBoundaryShape3D`."
msgstr "Зображення створить :ref:`class_WorldBoundaryShape3D`."

msgid ""
"Sphere (and the others not listed) will create a :ref:`class_SphereShape3D`."
msgstr ""
"Sphere (та інші, яких немає в списку) створить :ref:`class_SphereShape3D`."

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""
"По можливості, **намагайтеся використовувати кілька примітивних форм "
"зіткнень** замість побудованої з трикутників сітки або опуклих фігур. "
"Первісні форми часто мають найкращі характеристики та надійність."

msgid ""
"For better visibility on Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them by changing **Edit "
"> Preferences > Themes > 3D Viewport > Empty**."
msgstr ""
"Для кращої видимості в редакторі Blender ви можете встановити опцію «X-Ray» "
"для порожніх елементів зіткнення та встановити певний колір для них, "
"змінивши **Правка > Параметри > Теми > 3D Viewport > Empty**."

msgid ""
"If using Blender 2.79 or older, follow these steps instead: **User "
"Preferences > Themes > 3D View > Empty**."
msgstr ""
"Якщо ви використовуєте Blender 2.79 або старішу версію, виконайте натомість "
"такі кроки: **Налаштування користувача > Теми > 3D-перегляд > Порожній**."

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr ""
"Дивіться :ref:`doc_collision_shapes_3d` для детального огляду форм зіткнення."

msgid "Create Occluder (-occ, -occonly)"
msgstr "Створити Occluder (-occ, -occonly)"

msgid ""
"If a mesh is imported with the ``-occ`` suffix an :ref:`class_occluder3D` "
"node will be created based on the geometry of the mesh, it does not replace "
"the mesh. A mesh node with the ``-occonly`` suffix will be converted to "
"an :ref:`class_occluder3D` on import."
msgstr ""
"Якщо сітку імпортовано з суфіксом ``-occ``, вузол :ref:`class_occluder3D` "
"буде створено на основі геометрії сітки, він не замінить сітку. Під час "
"імпортування вузол сітки із суфіксом ``-occonly`` буде перетворено "
"на :ref:`class_occluder3D`."

msgid "Create navigation (-navmesh)"
msgstr "Створити навігацію (-navmesh)"

msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"Вузол сітки (меша) з суфіксом ``-navmesh`` буде перетворений у навігаційну "
"сітку. Оригінальний об'єкт Mesh буде видалено під час імпорту."

msgid "Create a VehicleBody (-vehicle)"
msgstr "Створити VehicleBody (-vehicle)"

msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to "
"a :ref:`class_VehicleBody3D` node."
msgstr ""
"Вузол сітки із суфіксом ``-vehicle`` буде імпортований як дочірній у "
"вузол :ref:`class_VehicleBody3D`."

msgid "Create a VehicleWheel (-wheel)"
msgstr "Створити VehicleWheel (-wheel)"

msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to "
"a :ref:`class_VehicleWheel3D` node."
msgstr ""
"Вузол сітки із суфіксом ``-wheel`` буде імпортований як дочірній у "
"вузол :ref:`class_VehicleWheel3D`."

msgid "Rigid Body (-rigid)"
msgstr "Тверде тіло (-rigid)"

msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as "
"a :ref:`class_RigidBody3D`."
msgstr ""
"Вузол сітки із суфіксом ``-rigid`` буде імпортовано "
"як :ref:`class_RigidBody3D`."

msgid "Animation loop (-loop, -cycle)"
msgstr "Цикл анімації (-loop, -cycle)"

msgid ""
"Animation clips in the source 3D file that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot :ref:`class_Animation` "
"with the loop flag set. **Unlike the other suffixes described above, this "
"does not require a hyphen.**"
msgstr ""
"Анімаційні кліпи у вихідному 3D-файлі, які починаються або закінчуються "
"маркером ``loop`` або ``cycle``, будуть імпортовані як "
"Godot :ref:`class_Animation` зі встановленим прапором loop. **На відміну від "
"інших суфіксів, описаних вище, тут не потрібен дефіс.**"

msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"Для Blender це вимагає використання редактора NLA та іменування дії (Action) "
"з префіксом, або суфіксом, ``loop`` чи ``cycle``."
