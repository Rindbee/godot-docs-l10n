#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Model export considerations"
msgstr "Експорт моделі"

msgid ""
"Before exporting a 3D model from a 3D modeling application, such as Blender, "
"there are some considerations that should be taken into account to ensure "
"that the model follows the conventions and best practices for Godot."
msgstr ""
"Перш ніж експортувати 3D-модель із програми 3D-моделювання, наприклад "
"Blender, необхідно врахувати деякі міркування, щоб переконатися, що модель "
"відповідає умовам і найкращим практикам Godot."

msgid "3D asset direction conventions"
msgstr "Умовні позначення напрямків 3D-активів"

msgid ""
"Godot uses a right-handed, Y-is-up coordinate system, with the -Z axis as "
"the camera's forward direction. This is the same as OpenGL. This implies "
"that +Z is back, +X is right, and -X is left for a camera."
msgstr ""
"Godot використовує правосторонню систему координат Y-вгорі з віссю -Z як "
"напрямом камери вперед. Це те саме, що OpenGL. Це означає, що +Z "
"повертається, +X правий, а -X лівий для камери."

msgid ""
"The convention for 3D assets is to face the opposite direction as the "
"camera, so that characters and other assets are facing the camera by "
"default. This convention is extremely common in 3D modeling applications, "
"and is `codified in glTF as part of the glTF 2.0 specification <https://"
"registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#coordinate-system-and-"
"units>`__. This means that for oriented 3D assets (such as characters), the "
"+Z axis is the direction of the front, so -Z is the rear, +X is the left "
"side, and -X is the right side for a 3D asset. In Blender, this means that "
"+Y is rear and -Y is front for an asset."
msgstr ""
"Угода щодо 3D-ресурсів полягає в тому, щоб дивитися в протилежний бік "
"камери, тож персонажі та інші ресурси за замовчуванням дивляться в камеру. "
"Ця конвенція є надзвичайно поширеною у програмах 3D-моделювання та "
"«закодована в glTF як частина специфікації glTF 2.0 <https://"
"registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#coordinate-system- і-"
"одиниці>`__. Це означає, що для орієнтованих 3D-ресурсів (наприклад, "
"персонажів) вісь +Z є напрямком передньої частини, тому -Z є задньою "
"стороною, +X є лівою стороною, а -X є правою стороною для 3D-ресурсу. У "
"Blender це означає, що +Y є заднім, а -Y є переднім для ресурсу."

msgid ""
"When rotating an oriented 3D asset in Godot, use the ``use_model_front`` "
"option on the ``look_at`` functions, and use the ``Vector3.MODEL_*`` "
"constants to perform calculations in the oriented asset's local space."
msgstr ""
"Під час обертання орієнтованого 3D-ресурсу в Godot використовуйте параметр "
"``use_model_front`` у функціях ``look_at`` і використовуйте константи "
"``Vector3.MODEL_*`` для виконання обчислень у локальному просторі "
"орієнтованого ресурсу."

msgid ""
"For assets without an intrinsic front side or forward direction, such as a "
"game map or terrain, take note of the cardinal directions instead. The "
"convention in Godot and the vast majority of other applications is that +X "
"is east and -X is west. Due to Godot's right-handed Y-is-up coordinate "
"system, this implies that +Z is south and -Z is north. In Blender, this "
"means that +Y is north and -Y is south."
msgstr ""
"Для об’єктів без внутрішньої передньої сторони чи прямого напрямку, як-от "
"ігрова карта чи місцевість, зверніть увагу на сторони світу. Конвенція в "
"Godot та переважній більшості інших програм полягає в тому, що +X означає "
"схід, а -X – захід. Завдяки правій системі координат Godot Y-вгорі, це "
"означає, що +Z – південь, а -Z – північ. У Blender це означає, що +Y – "
"північ, а -Y – південь."

msgid "Exporting textures separately"
msgstr "Експорт текстур окремо"

msgid ""
"While textures can be exported with a model in certain file formats, such as "
"glTF 2.0, you can also export them separately. Godot uses PBR (physically "
"based rendering) for its materials, so if a texturing program can export PBR "
"textures, they can work in Godot. This includes the `Substance suite "
"<https://www.adobe.com/creativecloud/3d-ar.html>`__, `ArmorPaint (open "
"source) <https://armorpaint.org/>`__, and `Material Maker (open source) "
"<https://github.com/RodZill4/material-maker>`__."
msgstr ""
"Хоча текстури можна експортувати з моделлю в певні формати файлів, наприклад "
"glTF 2.0, ви також можете експортувати їх окремо. Godot використовує PBR "
"(фізичне відтворення) для своїх матеріалів, тому якщо програма текстурування "
"може експортувати текстури PBR, вони можуть працювати в Godot. Сюди входить "
"`Substance Suite <https://www.adobe.com/creativecloud/3d-ar.html>`__, "
"`ArmorPaint (з відкритим кодом) <https://armorpaint.org/>`__ і `Material "
"Maker (з відкритим кодом) <https://github.com/RodZill4/material-maker>`__."

msgid ""
"For more information on Godot's materials, "
"see :ref:`doc_standard_material_3d`."
msgstr ""
"Додаткову інформацію про матеріали Godot "
"див. :ref:`doc_standard_material_3d`."

msgid "Exporting considerations"
msgstr "Міркування щодо експорту"

msgid ""
"Since GPUs can only render triangles, meshes that contain quads or N-gons "
"have to be *triangulated* before they can be rendered. Godot can triangulate "
"meshes on import, but results may be unpredictable or incorrect, especially "
"with N-gons. Regardless of the target application, triangulating *before* "
"exporting the scene will lead to more consistent results and should be done "
"whenever possible."
msgstr ""
"Оскільки графічні процесори можуть відтворювати лише трикутники, сітки "
"(меші), що містять чотирикутники або N-кутники, повинні бути триангульовані "
"(переведені в трикутники) перед тим, як їх можна відтворити. Godot може "
"триангулювати сітки (меші) при імпорті, але результати можуть бути "
"непередбачуваними або неправильними, особливо для N-кутників. Незалежно від "
"цільової програми, тріангуляція перед експортом сцени призведе до "
"послідовніших результатів і повинна виконуватися по можливості."

msgid ""
"To avoid issues with incorrect triangulation after importing in Godot, it is "
"recommended to make the 3D modeling software triangulate objects on its own. "
"In Blender, this can be done by adding a Triangulate modifier to your "
"objects and making sure **Apply Modifiers** is checked in the export dialog. "
"Alternatively, depending on the exporter, you may be able to find and enable "
"a **Triangulate Faces** option in the export dialog."
msgstr ""
"Щоб уникнути проблем із неправильною тріангуляцією після імпорту в Godot, "
"рекомендується змусити програмне забезпечення для 3D-моделювання "
"тріангулявати об’єкти самостійно. У Blender це можна зробити, додавши "
"модифікатор Triangulate до ваших об’єктів і переконавшись, що в діалоговому "
"вікні експорту позначено **Застосувати модифікатори**. Крім того, залежно "
"від експортера, ви можете знайти та ввімкнути параметр **Трикутні грані** у "
"діалоговому вікні експорту."

msgid ""
"To avoid issues with 3D selection in the editor, it is recommended to apply "
"the object transform in the 3D modeling software before exporting the scene."
msgstr ""
"Щоб уникнути проблем із 3D-вибором у редакторі, рекомендується застосувати "
"трансформацію об’єкта в програмному забезпеченні 3D-моделювання перед "
"експортом сцени."

msgid ""
"It is important that the mesh is not deformed by bones when exporting. Make "
"sure that the skeleton is reset to its T-pose or default rest pose before "
"exporting with your favorite 3D editor."
msgstr ""
"Важливо, щоб сітка (меш) не деформувалася кістками при експорті. "
"Переконайтесь, що скелет встановлений у T-позі, або позі за замовчуванням, "
"перед експортом з вашого улюбленого 3D-редактора."

msgid "Lighting considerations"
msgstr "Міркування щодо освітлення"

msgid ""
"While it's possible to import lights from a 3D scene using the glTF, "
"``.blend`` or Collada formats, it's generally advised to design the scene's "
"lighting in the Godot editor after importing the scene."
msgstr ""
"Хоча можна імпортувати світло з 3D-сцени за допомогою форматів glTF, "
"``.blend`` або Collada, зазвичай рекомендується проектувати освітлення сцени "
"в редакторі Godot після імпорту сцени."

msgid ""
"This allows you to get a more accurate feel for the final result, as "
"different engines will render lights in a different manner. This also avoids "
"any issues with lights appearing excessively strong or faint as a result of "
"the import process."
msgstr ""
"Це дає вам точніше відчуття кінцевого результату, оскільки різні механізми "
"відображатимуть світло по-різному. Це також дозволяє уникнути будь-яких "
"проблем із надмірно яскравим або слабким світлом у результаті процесу "
"імпорту."
