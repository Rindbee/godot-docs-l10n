#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Available 3D formats"
msgstr "Доступні 3D формати"

msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr "Для роботи з 3D-активами Godot має гнучкий та настроювальний імпортер."

msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D modeling software will be transferred as close as "
"possible."
msgstr ""
"Godot працює зі сценами. Це означає, що вся сцена, над якою працюєте у "
"вашому улюбленому програмному забезпеченні для 3D-моделювання, буде передана "
"якомога ближче."

msgid "Godot supports the following 3D *scene file formats*:"
msgstr "Godot підтримує такі *формати файлів 3D- сцен*:"

msgid ""
"glTF 2.0 **(recommended)**. Godot has support for both text (``.gltf``) and "
"binary (``.glb``) formats."
msgstr ""
"glTF 2.0 **(рекомендовано)**. Godot підтримує як текстовий (``.gltf``), так "
"і двійковий (``.glb``) формати."

msgid ""
"``.blend`` (Blender). This works by calling Blender to export to glTF in a "
"transparent manner (requires Blender to be installed)."
msgstr ""
"``.blend`` (Blender). Це працює, викликаючи Blender для експорту в glTF у "
"прозорий спосіб (потрібно встановити Blender)."

msgid "DAE (COLLADA), an older format that is supported."
msgstr "DAE (COLLADA), старіший формат, який підтримується."

msgid ""
"OBJ (Wavefront) format + their MTL material files. This is also supported, "
"but pretty limited given the format's limitations (no support for pivots, "
"skeletons, animations, UV2, PBR materials, ...)."
msgstr ""
"Формат OBJ (Wavefront) + їхні файли матеріалів MTL. Це також підтримується, "
"але досить обмежено з огляду на обмеження формату (немає підтримки опор, "
"скелетів, анімації, UV2, матеріалів PBR тощо)."

msgid ""
"FBX, supported via the `ufbx <https://github.com/ufbx/ufbx>`__ library. The "
"previous import workflow used `FBX2glTF <https://github.com/godotengine/"
"FBX2glTF>`__ integration. This requires installing an external program that "
"links against the proprietary FBX SDK, so we recommend using the default "
"ubfx method or other formats listed above (if suitable for your workflow)."
msgstr ""
"FBX, підтримується бібліотекою `ufbx <https://github.com/ufbx/ufbx>`__. "
"Попередній процес імпорту використовував інтеграцію `FBX2glTF <https://"
"github.com/godotengine/FBX2glTF>`__. Для цього потрібно інсталювати зовнішню "
"програму, яка пов’язана з власним FBX SDK, тому ми рекомендуємо "
"використовувати стандартний метод ubfx або інші формати, перелічені вище "
"(якщо це підходить для вашого робочого процесу)."

msgid ""
"Copy the scene file together with the textures and mesh data (if separate) "
"to the project repository, then Godot will do a full import when focusing "
"the editor window."
msgstr ""
"Скопіюйте файл сцени разом із текстурами та даними сітки (якщо окремо) до "
"репозиторію проекту, тоді Godot виконає повний імпорт під час фокусування "
"вікна редактора."

msgid "Exporting glTF 2.0 files from Blender (recommended)"
msgstr "Експорт файлів glTF 2.0 із Blender (рекомендовано)"

msgid "There are 3 ways to export glTF files from Blender:"
msgstr "Є 3 способи експортувати файли glTF з Blender:"

msgid "As a glTF binary file (``.glb``)."
msgstr "Як бінарний файл glTF (``.glb``)."

msgid ""
"As a glTF text-based file with separate binary data and textures (``.gltf`` "
"file + ``.bin`` file + textures)."
msgstr ""
"Як текстовий файл glTF з окремими бінарними даними та текстурами (файл "
"``.gltf`` + файл ``.bin`` + текстури)."

msgid ""
"glTF binary files (``.glb``) are the smaller option. They include the mesh "
"and textures set up in Blender. When brought into Godot the textures are "
"part of the object's material file."
msgstr ""
"Двійкові файли glTF (``.glb``) є меншим варіантом. Вони включають сітку та "
"текстури, налаштовані в Blender. При внесенні в Godot текстури є частиною "
"файлу матеріалів об’єкта."

msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text-based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those, "
"glTF binary files are fine."
msgstr ""
"Є дві причини використовувати glTF з окремими текстурами. Один з них полягає "
"в тому, щоб опис сцени був у текстовому форматі, а двійкові дані – в "
"окремому двійковому файлі. Це може бути корисним для контролю версій, якщо "
"ви хочете переглядати зміни в текстовому форматі. По-друге, вам потрібні "
"файли текстур окремо від файлу матеріалу. Якщо вам нічого з цього не "
"потрібно, бінарні файли glTF підійдуть."

msgid ""
"The glTF import process first loads the glTF file's data into an in-memory "
"GLTFState class. This data is then used to generate a Godot scene. When "
"importing files at runtime, this scene can be directly added to the tree. "
"The export process is the reverse of this, a Godot scene is converted to a "
"GLTFState class, then the glTF file is generated from that."
msgstr ""
"Процес імпорту glTF спочатку завантажує дані файлу glTF у клас GLTFState у "
"пам’яті. Потім ці дані використовуються для створення сцени Godot. Під час "
"імпортування файлів під час виконання цю сцену можна безпосередньо додати до "
"дерева. Процес експорту є протилежним до цього: сцена Godot перетворюється "
"на клас GLTFState, а потім з нього генерується файл glTF."

msgid ""
"Diagram explaining the runtime import and export process for glTF files in "
"Godot"
msgstr ""
"Діаграма, що пояснює процес виконання імпорту та експорту для файлів glTF у "
"Godot"

msgid ""
"When importing glTF files in the editor, there are two more steps. After "
"generating the Godot scene, the ResourceImporterScene class is used to apply "
"additional import settings, including settings you set through the Import "
"dock and the Advanced Import Settings dialog. This is then saved as a Godot "
"scene file, which is what gets used when you run/export your game."
msgstr ""
"Під час імпортування файлів glTF у редакторі є ще два кроки. Після генерації "
"сцени Godot клас ResourceImporterScene використовується для застосування "
"додаткових налаштувань імпорту, зокрема налаштувань, які ви встановлюєте в "
"док-станції «Імпорт» і діалоговому вікні «Додаткові параметри імпорту». "
"Потім це зберігається як файл сцени Godot, який використовується під час "
"запуску/експорту гри."

msgid "Diagram explaining the editor import process for glTF files in Godot"
msgstr "Діаграма, що пояснює процес імпорту редактора для файлів glTF у Godot"

msgid "Exporting non-deforming bones anyway will lead to incorrect shading."
msgstr ""
"Експорт недеформованих кісток у будь-якому випадку призведе до неправильного "
"затінення."

msgid ""
"Blender versions older than 3.2 do not export emissive textures with the "
"glTF file. If your model uses one and you're using an older version of "
"Blender, it must be brought in separately."
msgstr ""
"Версії Blender'а старші за 3.2 не експортують емісійні текстури, з файлом "
"glTF. Якщо у вашій моделі використовується такий файл і ви використовуєте "
"старішу версію Blender'а, його потрібно експортувати окремо."

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""
"За замовчуванням у Blender вимкнено відсіювання задньої поверхні для "
"матеріалів і експортуватиме матеріали відповідно до того, як вони "
"відображаються в Blender. Це означає, що для матеріалів у Godot буде "
"встановлено режим відбирання ** Disabled**. Це може знизити продуктивність, "
"оскільки зворотні грані будуть відтворюватися, навіть якщо їх перекривають "
"інші грані. Щоб вирішити цю проблему, увімкніть ** Backface Culling** на "
"вкладці Materials в Blender, а потім знову експортуйте сцену до gITF."

msgid "Importing ``.blend`` files directly within Godot"
msgstr "Імпорт файлів ``.blend`` безпосередньо в Godot"

msgid ""
"This functionality requires Blender 3.0 or later. For best results, we "
"recommend using Blender 3.5 or later, as it includes many fixes to the glTF "
"exporter."
msgstr ""
"Для цієї функції потрібен Blender 3.0 або новішої версії. Для досягнення "
"найкращих результатів ми рекомендуємо використовувати Blender 3.5 або "
"новішої версії, оскільки він містить багато виправлень для експортера glTF."

msgid ""
"It is **strongly** recommended to use an official Blender release downloaded "
"from blender.org, as opposed to a Linux distribution package or Flatpak. "
"This avoids any issues related to packaging, such as different library "
"versions that can cause incompatibilities or sandboxing restrictions."
msgstr ""
"**Наполегливо** рекомендується використовувати офіційну версію Blender, "
"завантажену з blender.org, на відміну від дистрибутивного пакета Linux або "
"Flatpak. Це дозволяє уникнути будь-яких проблем, пов’язаних із упаковкою, як-"
"от різні версії бібліотек, які можуть спричинити несумісність або обмеження "
"ізольованого програмного середовища."

msgid ""
"The editor can directly import ``.blend`` files by calling `Blender <https://"
"www.blender.org/>`__'s glTF export functionality in a transparent manner."
msgstr ""
"Редактор може безпосередньо імпортувати файли ``.blend``, викликавши функцію "
"експорту glTF `Blender <https://www.blender.org/>`__ у прозорий спосіб."

msgid ""
"This allows you to iterate on your 3D scenes faster, as you can save the "
"scene in Blender, alt-tab back to Godot then see your changes immediately. "
"When working with version control, this is also more efficient as you no "
"longer need to commit a copy of the exported glTF file to version control."
msgstr ""
"Це дозволяє вам швидше повторювати свої 3D-сцени, оскільки ви можете "
"зберегти сцену в Blender, натиснувши клавішу Alt Tab і повернутися до Godot, "
"а потім негайно побачити свої зміни. Під час роботи з контролем версій це "
"також ефективніше, оскільки вам більше не потрібно фіксувати копію "
"експортованого файлу glTF до контролю версій."

msgid ""
"To use ``.blend`` import, you must install Blender before opening the Godot "
"editor (if opening a project that already contains ``.blend`` files). If you "
"keep Blender installed at its default location, Godot should be able to "
"detect its path automatically. If this isn't the case, configure the path to "
"the Blender executable in the Editor Settings (**Filesystem > Import > "
"Blender > Blender Path**)."
msgstr ""
"Щоб використовувати імпорт ``.blend``, ви повинні встановити Blender перед "
"відкриттям редактора Godot (якщо відкриваєте проект, який уже містить файли "
"``.blend``). Якщо ви збережете Blender встановленим у місці за "
"замовчуванням, Godot зможе автоматично визначити його шлях. Якщо це не так, "
"налаштуйте шлях до виконуваного файлу Blender у налаштуваннях редактора "
"(**Файлова система > Імпорт > Blender > Шлях Blender**)."

msgid ""
"If you keep ``.blend`` files within your project folder but don't want them "
"to be imported by Godot, disable **Filesystem > Import > Blender > Enabled** "
"in the advanced Project Settings."
msgstr ""
"Якщо ви зберігаєте файли ``.blend`` у папці проекту, але не хочете, щоб їх "
"імпортував Godot, вимкніть **Файлова система > Імпорт > Blender > "
"Увімкнуто** в розширених параметрах проекту."

msgid ""
"The ``.blend`` import process converts to glTF first, so it still uses "
"Godot's glTF import code. Therefore, the ``.blend`` import process is the "
"same as the glTF import process, but with an extra step at the beginning."
msgstr ""
"Процес імпорту ``.blend`` спочатку перетворює на glTF, тому все ще "
"використовує код імпорту glTF Godot. Тому процес імпорту ``.blend`` такий "
"самий, як процес імпорту glTF, але з додатковим кроком на початку."

msgid "Diagram explaining the import process for Blender files in Godot"
msgstr "Діаграма, що пояснює процес імпорту файлів Blender у Godot"

msgid ""
"When working in a team, keep in mind using ``.blend`` files in your project "
"will require *all* team members to have Blender installed. While Blender is "
"a free download, this may add friction when working on the project. "
"``.blend`` import is also not available on the Android and web editors, as "
"these platforms can't call external programs."
msgstr ""
"Працюючи в команді, майте на увазі, що використання файлів ``.blend`` у "
"вашому проекті вимагатиме від *всіх* членів команди інсталяції Blender. Хоча "
"Blender є безкоштовним завантаженням, це може викликати труднощі під час "
"роботи над проектом. Імпорт ``.blend`` також недоступний в Android і веб-"
"редакторах, оскільки ці платформи не можуть викликати зовнішні програми."

msgid ""
"If this is problematic, consider using glTF scenes exported from Blender "
"instead."
msgstr ""
"Якщо це проблематично, подумайте про використання сцен glTF, експортованих "
"із Blender."

msgid "Exporting DAE files from Blender"
msgstr "Експорт файлів DAE з Blender"

msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and shouldn't be used as-is. However, scenes exported "
"with the built-in Collada support may still work for simple scenes without "
"animation."
msgstr ""
"Blender має вбудовану підтримку COLLADA, але вона не працює належним чином "
"для потреб ігрових двигунів і не повинна використовуватися як є. Однак "
"сцени, експортовані за допомогою вбудованої підтримки Collada, можуть "
"працювати для простих сцен без анімації."

msgid ""
"For complex scenes or scenes that contain animations it is highly recommend "
"to use glTF instead."
msgstr ""
"Для складних сцен або сцен, які містять анімацію, настійно рекомендуємо "
"замість цього використовувати glTF."

msgid "Importing OBJ files in Godot"
msgstr "Імпорт файлів OBJ у Godot"

msgid ""
"OBJ is one of the simplest 3D formats out there, so Godot should be able to "
"import most OBJ files successfully. However, OBJ is also a very limited "
"format: it doesn't support skinning, animation, UV2 or PBR materials."
msgstr ""
"OBJ є одним із найпростіших 3D-форматів, тому Godot повинен мати змогу "
"успішно імпортувати більшість файлів OBJ. Однак OBJ також є дуже обмеженим "
"форматом: він не підтримує скінинг, анімацію, матеріали UV2 або PBR."

msgid "There are 2 ways to use OBJ meshes in Godot:"
msgstr "Існує 2 способи використання сіток OBJ у Godot:"

msgid ""
"Load them directly in a MeshInstance3D node, or any other property that "
"expects as mesh (such as GPUParticles3D). This is the default mode."
msgstr ""
"Завантажте їх безпосередньо у вузол MeshInstance3D або будь-яку іншу "
"властивість, яка очікує як сітку (наприклад, GPUParticles3D). Це режим за "
"замовчуванням."

msgid ""
"Change their import mode to **OBJ as Scene** in the Import dock then restart "
"the editor. This allows you to use the same import options as glTF or "
"Collada scenes, such as unwrapping UV2 on import "
"(for :ref:`doc_using_lightmap_gi`)."
msgstr ""
"Змініть режим імпорту на **OBJ як сцена** в док-станції «Імпорт», а потім "
"перезапустіть редактор. Це дозволяє вам використовувати ті самі параметри "
"імпорту, що й сцени glTF або Collada, наприклад розгортання UV2 під час "
"імпорту (для :ref:`doc_using_lightmap_gi`)."

msgid ""
"Blender 3.4 and later can export RGB vertex colors in OBJ files (this is a "
"nonstandard extension of the OBJ format). Godot is able to import those "
"vertex colors, but they will not be displayed on the material unless you "
"enable **Vertex Color > Use As Albedo** on the material."
msgstr ""
"Blender 3.4 і новіші версії можуть експортувати кольори вершин RGB у файли "
"OBJ (це нестандартне розширення формату OBJ). Godot може імпортувати ці "
"кольори вершин, але вони не відображатимуться на матеріалі, якщо ви не "
"ввімкнете **Колір вершин > Використовувати як альбедо** для матеріалу."

msgid ""
"Vertex colors from OBJ meshes keep their original color space once imported "
"(sRGB/linear), but their brightness is clamped to 1.0 (they can't be "
"overbright)."
msgstr ""
"Кольори вершин із сіток OBJ зберігають свій початковий колірний простір "
"після імпорту (sRGB/лінійний), але їх яскравість обмежується до 1,0 (вони не "
"можуть бути надто яскравими)."

msgid "Importing FBX files in Godot"
msgstr "Імпорт файлів FBX у Godot"

msgid ""
"By default any FBX file added to a Godot project in Godot 4.3 or later will "
"use the ufbx import method. Any file that was was added to a project in a "
"previous version, such as 4.2, will continue to be imported via the FBX2glTF "
"method unless you go into that files import settings, and change the "
"importer to  ``ufbx``."
msgstr ""
"За замовчуванням будь-який файл FBX, доданий до проекту Godot у Godot 4.3 "
"або новішої версії, використовуватиме метод імпорту ufbx. Будь-який файл, "
"який було додано до проекту в попередній версії, наприклад 4.2, "
"продовжуватиме імпортуватися за допомогою методу FBX2glTF, якщо ви не "
"зайдете в налаштування імпорту цих файлів і не зміните імпортер на ``ufbx``."

msgid ""
"If you keep ``.fbx`` files within your project folder but don't want them to "
"be imported by Godot, disable **Filesystem > Import > FBX > Enabled** in the "
"advanced Project Settings."
msgstr ""
"Якщо ви зберігаєте файли ``.fbx`` у папці проекту, але не хочете, щоб їх "
"імпортував Godot, вимкніть **Файлова система > Імпорт > FBX > Увімкнено** у "
"розширених параметрах проекту."

msgid ""
"If you want to setup the FBX2glTF workflow, which is generally not recommend "
"unless you have a specific reason to use it, you need to download the "
"`FBX2glTF <https://github.com/godotengine/FBX2glTF>`__ executable, then "
"specify the path to that executable in the editor settings under "
"**Filesystem > Import > FBX > FBX2glTFPath**"
msgstr ""
"Якщо ви хочете налаштувати робочий процес FBX2glTF, який зазвичай не "
"рекомендується використовувати, якщо у вас немає конкретної причини для його "
"використання, вам потрібно завантажити виконуваний файл `FBX2glTF <https://"
"github.com/godotengine/FBX2glTF>`__, а потім вказати шлях до цього "
"виконуваного файлу в налаштуваннях редактора в розділі **Файлова система > "
"Імпорт > FBX > FBX2glTFPath**"

msgid ""
"The FBX2glTF import process converts to glTF first, so it still uses Godot's "
"glTF import code. Therefore, the FBX import process is the same as the glTF "
"import process, but with an extra step at the beginning."
msgstr ""
"Процес імпорту FBX2glTF спочатку перетворює на glTF, тому все ще "
"використовує код імпорту glTF Godot. Тому процес імпорту FBX такий самий, як "
"процес імпорту glTF, але з додатковим кроком на початку."

msgid ""
"Diagram explaining the import process for FBX files in Godot  via FBX2glTF"
msgstr "Схема, що пояснює процес імпорту файлів FBX у Godot через FBX2glTF"

msgid ""
"The full installation process for using FBX2glTF in Godot is described on "
"the `FBX import page of the Godot website <https://godotengine.org/fbx-"
"import>`__."
msgstr ""
"Повний процес встановлення для використання FBX2glTF у Godot описано на "
"`сторінці імпорту FBX веб-сайту Godot <https://godotengine.org/fbx-"
"import>`__."
