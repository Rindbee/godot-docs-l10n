#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Thread-safe APIs"
msgstr "Потокобезпечні API"

msgid "Threads"
msgstr "Потоки"

msgid ""
"Threads are used to balance processing power across CPUs and cores. Godot "
"supports multithreading, but not in the whole engine."
msgstr ""
"Потоки використовуються для балансування потужності процесорів і ядер. Godot "
"підтримує багатопотоковість, але не в усьому двигуні."

msgid ""
"Below is a list of ways multithreading can be used in different areas of "
"Godot."
msgstr ""
"Нижче наведено список способів використання багатопоточності в різних "
"областях Godot."

msgid "Global scope"
msgstr "Глобальна область"

msgid ""
":ref:`Global Scope<class_@GlobalScope>` singletons are all thread-safe. "
"Accessing servers from threads is supported (for RenderingServer and Physics "
"servers, ensure threaded or thread-safe operation is enabled in the project "
"settings!)."
msgstr ""
":ref:`Global Scope<class_@GlobalScope>` синглтони є потокобезпечними. "
"Підтримується доступ до серверів із потоків (для серверів RenderingServer і "
"Physics переконайтеся, що в налаштуваннях проекту ввімкнено потокову або "
"потокобезпечну роботу!)."

msgid ""
"This makes them ideal for code that creates dozens of thousands of instances "
"in servers and controls them from threads. Of course, it requires a bit more "
"code, as this is used directly and not within the scene tree."
msgstr ""
"Це робить їх ідеальними для коду, який створює десятки тисяч екземплярів на "
"серверах і керує ними з потоків. Звичайно, для цього потрібно трохи більше "
"коду, оскільки він використовується безпосередньо, а не в дереві сцени."

msgid "Scene tree"
msgstr "Дерево сцени"

msgid ""
"Interacting with the active scene tree is **NOT** thread-safe. Make sure to "
"use mutexes when sending data between threads. If you want to call functions "
"from a thread, the *call_deferred* function may be used:"
msgstr ""
"Взаємодія з деревом активної сцени є **НЕ** потокобезпечною. Під час "
"надсилання даних між потоками обов’язково використовуйте м’ютекси. Якщо ви "
"хочете викликати функції з потоку, можна використати функцію *call_deferred*:"

msgid ""
"However, creating scene chunks (nodes in tree arrangement) outside the "
"active tree is fine. This way, parts of a scene can be built or instantiated "
"in a thread, then added in the main thread:"
msgstr ""
"Однак створення блоків сцени (вузлів у структурі дерева) поза активним "
"деревом є нормальним. Таким чином, частини сцени можуть бути створені або "
"створені в потоці, а потім додані в головному потоці:"

msgid ""
"Still, this is only really useful if you have **one** thread loading data. "
"Attempting to load or create scene chunks from multiple threads may work, "
"but you risk resources (which are only loaded once in Godot) tweaked by the "
"multiple threads, resulting in unexpected behaviors or crashes."
msgstr ""
"Тим не менш, це дійсно корисно, лише якщо у вас є **один** потік даних для "
"завантаження. Спроба завантажити або створити фрагменти сцени з кількох "
"потоків може спрацювати, але ви ризикуєте, що ресурси (які завантажуються "
"лише один раз у Godot) будуть налаштовані кількома потоками, що призведе до "
"неочікуваної поведінки або збоїв."

msgid ""
"Only use more than one thread to generate scene data if you *really* know "
"what you are doing and you are sure that a single resource is not being used "
"or set in multiple ones. Otherwise, you are safer just using the servers API "
"(which is fully thread-safe) directly and not touching scene or resources."
msgstr ""
"Використовуйте більше ніж один потік для генерації даних сцени, лише якщо ви "
"*справді* знаєте, що робите, і ви впевнені, що один ресурс не "
"використовується або встановлений у кількох. В іншому випадку вам безпечніше "
"просто використовувати API серверів (який є повністю потоково-безпечним) "
"безпосередньо і не торкатися сцени чи ресурсів."

msgid "Rendering"
msgstr "Рендеринг"

msgid ""
"Instancing nodes that render anything in 2D or 3D (such as Sprite) is *not* "
"thread-safe by default. To make rendering thread-safe, set "
"the :ref:`Rendering > Driver > Thread "
"Model<class_ProjectSettings_property_rendering/driver/threads/thread_model>` "
"project setting to **Multi-Threaded**."
msgstr ""
"Вузли створення екземплярів, які відображають будь-що у 2D або 3D "
"(наприклад, Sprite), за замовчуванням є *не* потокобезпечними. Щоб зробити "
"візуалізацію потоково-безпечною, установіть для параметра "
"проекту :ref:`Rendering > Driver > Thread "
"Model<class_ProjectSettings_property_rendering/driver/threads/thread_model>` "
"значення **Multi-Threaded**."

msgid ""
"Note that the Multi-Threaded thread model has several known bugs, so it may "
"not be usable in all scenarios."
msgstr ""
"Зауважте, що багатопотокова модель потоку має кілька відомих помилок, тому "
"її можна використовувати не в усіх сценаріях."

msgid ""
"You should avoid calling functions involving direct interaction with the GPU "
"on other threads, such as creating new textures or modifying and retrieving "
"image data, these operations can lead to performance stalls because they "
"require synchronization with "
"the :ref:`RenderingServer<class_RenderingServer>`, as data needs to be "
"transmitted to or updated on the GPU."
msgstr ""
"Слід уникати виклику функцій, що передбачають безпосередню взаємодію з "
"графічним процесором в інших потоках, таких як створення нових текстур або "
"модифікація та отримання даних зображення, ці операції можуть призвести до "
"падіння продуктивності, оскільки вони вимагають синхронізації "
"з :ref:`RenderingServer<class_RenderingServer>`, оскільки дані потрібно "
"передавати на графічний процесор або оновлювати на ньому."

msgid "GDScript arrays, dictionaries"
msgstr "Масиви GDScript, словники"

msgid ""
"In GDScript, reading and writing elements from multiple threads is OK, but "
"anything that changes the container size (resizing, adding or removing "
"elements) requires locking a mutex."
msgstr ""
"У GDScript можна читати та записувати елементи з кількох потоків, але все, "
"що змінює розмір контейнера (зміна розміру, додавання або видалення "
"елементів), потребує блокування м’ютексу."

msgid "Resources"
msgstr "Ресурси"

msgid ""
"Modifying a unique resource from multiple threads is not supported. However "
"handling references on multiple threads is supported, hence loading "
"resources on a thread is as well - scenes, textures, meshes, etc - can be "
"loaded and manipulated on a thread and then added to the active scene on the "
"main thread. The limitation here is as described above, one must be careful "
"not to load the same resource from multiple threads at once, therefore it is "
"easiest to use **one** thread for loading and modifying resources, and then "
"the main thread for adding them."
msgstr ""
"Модифікація унікального ресурсу з декількох потоків не підтримується. Проте "
"робота з посиланнями у декількох потоках підтримується, отже, завантаження "
"ресурсів у потоці також підтримується - сцени, текстури, сіті тощо можуть "
"бути завантажені та оброблені у потоці, а потім додані до активної сцени у "
"головному потоці. Обмеження тут таке, як описано вище, потрібно бути "
"обережним, щоб не завантажувати один і той самий ресурс з декількох потоків "
"одночасно, тому найпростіше використовувати **один** потік для завантаження "
"і модифікації ресурсів, а потім основний потік для їхнього додавання."
