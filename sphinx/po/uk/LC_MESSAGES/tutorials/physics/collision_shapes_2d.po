#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Collision shapes (2D)"
msgstr "Форми зіткнення (2D)"

msgid "This guide explains:"
msgstr "Цей посібник пояснює:"

msgid "The types of collision shapes available in 2D in Godot."
msgstr "Типи фігур зіткнення, доступні в 2D у Godot."

msgid "Using an image converted to a polygon as a collision shape."
msgstr ""
"Використання зображення, перетвореного на багатокутник, як форми зіткнення."

msgid "Performance considerations regarding 2D collisions."
msgstr "Зауваження продуктивності щодо двовимірних зіткнень."

msgid ""
"Godot provides many kinds of collision shapes, with different performance "
"and accuracy tradeoffs."
msgstr ""
"Godot надає багато видів колізійних форм із різною продуктивністю та "
"точністю."

msgid ""
"You can define the shape of a :ref:`class_PhysicsBody2D` by adding one or "
"more :ref:`CollisionShape2Ds <class_CollisionShape2D>` "
"or :ref:`CollisionPolygon2Ds <class_CollisionPolygon2D>` as *direct* child "
"nodes. Indirect child nodes (i.e. children of child nodes) will be ignored "
"and won't be used as collision shapes. Also, note that you must add "
"a :ref:`class_Shape2D` *resource* to collision shape nodes in the Inspector "
"dock."
msgstr ""
"Ви можете визначити форму :ref:`class_PhysicsBody2D`, додавши один або "
"кілька :ref:`CollisionShape2Ds <class_CollisionShape2D>` "
"або :ref:`CollisionPolygon2Ds <class_CollisionPolygon2D>` як *прямі* дочірні "
"вузли. Непрямі дочірні вузли (тобто діти дочірніх вузлів) ігноруватимуться "
"та не використовуватимуться як форми зіткнень. Також зауважте, що ви повинні "
"додати :ref:`class_Shape2D` *ресурс* до вузлів форми зіткнень у доку "
"Inspector."

msgid ""
"When you add multiple collision shapes to a single PhysicsBody2D, you don't "
"have to worry about them overlapping. They won't \"collide\" with each other."
msgstr ""
"Коли ви додаєте кілька форм зіткнення до одного PhysicsBody2D, вам не "
"потрібно турбуватися про те, що вони накладаються. Вони не будуть "
"«зіткнутися» один з одним."

msgid "Primitive collision shapes"
msgstr "Примітивні форми зіткнення"

msgid "Godot provides the following primitive collision shape types:"
msgstr "Godot надає наступні типи примітивних форм зіткнення:"

msgid ":ref:`class_RectangleShape2D`"
msgstr ":ref:`class_RectangleShape2D`"

msgid ":ref:`class_CircleShape2D`"
msgstr ":ref:`class_CircleShape2D`"

msgid ":ref:`class_CapsuleShape2D`"
msgstr ":ref:`class_CapsuleShape2D`"

msgid ":ref:`class_SegmentShape2D`"
msgstr ":ref:`class_SegmentShape2D`"

msgid ":ref:`class_SeparationRayShape2D` (designed for characters)"
msgstr ":ref:`class_SeparationRayShape2D` (призначений для символів)"

msgid ":ref:`class_WorldBoundaryShape2D` (infinite plane)"
msgstr ":ref:`class_WorldBoundaryShape2D` (нескінченна площина)"

msgid ""
"You can represent the collision of most smaller objects using one or more "
"primitive shapes. However, for more complex objects, such as a large ship or "
"a whole level, you may need convex or concave shapes instead. More on that "
"below."
msgstr ""
"Ви можете представити зіткнення більшості менших об’єктів за допомогою "
"однієї або кількох простих форм. Однак для більш складних об'єктів, таких як "
"великий корабель або цілий рівень, вам можуть знадобитися опуклі або "
"увігнуті форми. Детальніше про це нижче."

msgid ""
"We recommend favoring primitive shapes for dynamic objects such as "
"RigidBodies and CharacterBodies as their behavior is the most reliable. They "
"often provide better performance as well."
msgstr ""
"Ми рекомендуємо віддавати перевагу примітивним формам для динамічних "
"об’єктів, таких як RigidBodies і CharacterBodies, оскільки їх поведінка є "
"найбільш надійною. Вони також часто забезпечують кращу продуктивність."

msgid "Convex collision shapes"
msgstr "Опуклі форми зіткнення"

msgid ""
"Godot currently doesn't offer a built-in way to create 2D convex collision "
"shapes. This section is mainly here for reference purposes."
msgstr ""
"Godot наразі не пропонує вбудованого способу створення 2D опуклих форм "
"зіткнення. Цей розділ в основному тут для довідкових цілей."

msgid ""
":ref:`Convex collision shapes <class_ConvexPolygonShape2D>` are a compromise "
"between primitive collision shapes and concave collision shapes. They can "
"represent shapes of any complexity, but with an important caveat. As their "
"name implies, an individual shape can only represent a *convex* shape. For "
"instance, a pyramid is *convex*, but a hollow box is *concave*. To define a "
"concave object with a single collision shape, you need to use a concave "
"collision shape."
msgstr ""
":ref:`Convex collision shapes <class_ConvexPolygonShape2D>` є компромісом "
"між примітивними формами зіткнення та увігнутими формами зіткнення. Вони "
"можуть представляти фігури будь-якої складності, але з важливим "
"застереженням. Як випливає з назви, окрема фігура може представляти лише "
"*опуклу* форму. Наприклад, піраміда *опукла*, а порожниста коробка "
"*увігнута*. Щоб визначити увігнутий об’єкт з єдиною формою зіткнення, "
"потрібно використовувати увігнуту форму зіткнення."

msgid ""
"Depending on the object's complexity, you may get better performance by "
"using multiple convex shapes instead of a concave collision shape. Godot "
"lets you use *convex decomposition* to generate convex shapes that roughly "
"match a hollow object. Note this performance advantage no longer applies "
"after a certain amount of convex shapes. For large and complex objects such "
"as a whole level, we recommend using concave shapes instead."
msgstr ""
"Залежно від складності об’єкта, ви можете отримати кращу продуктивність, "
"використовуючи кілька опуклих форм замість увігнутої форми зіткнення. Godot "
"дозволяє використовувати *опукле розкладання* для створення опуклих форм, "
"які приблизно відповідають порожнистому об’єкту. Зауважте, що ця перевага "
"продуктивності більше не застосовується після певної кількості опуклих форм. "
"Для великих і складних об’єктів, таких як цілий рівень, ми рекомендуємо "
"замість цього використовувати увігнуті форми."

msgid "Concave or trimesh collision shapes"
msgstr "Увігнуті або трійчасті форми зіткнення"

msgid ""
":ref:`Concave collision shapes <class_ConcavePolygonShape2D>`, also called "
"trimesh collision shapes, can take any form, from a few triangles to "
"thousands of triangles. Concave shapes are the slowest option but are also "
"the most accurate in Godot. **You can only use concave shapes within "
"StaticBodies.** They will not work with CharacterBodies or RigidBodies "
"unless the RigidBody's mode is Static."
msgstr ""
":ref:`Concave collision shapes <class_ConcavePolygonShape2D>`, які також "
"називаються фігурами зіткнень з трійкою, можуть мати будь-яку форму, від "
"кількох трикутників до тисяч трикутників. Увігнуті форми є найповільнішим "
"варіантом, але також найточнішим у Godot. **Ви можете використовувати лише "
"увігнуті фігури в StaticBodies.** Вони не працюватимуть із CharacterBodies "
"або RigidBodies, якщо для RigidBody не встановлено режим Static."

msgid ""
"Even though concave shapes offer the most accurate *collision*, contact "
"reporting can be less precise than primitive shapes."
msgstr ""
"Незважаючи на те, що увігнуті форми забезпечують найточнішу *колізію*, звіти "
"про контакти можуть бути менш точними, ніж примітивні форми."

msgid ""
"When not using TileMaps for level design, concave shapes are the best "
"approach for a level's collision."
msgstr ""
"Якщо не використовувати TileMaps для проектування рівнів, увігнуті форми є "
"найкращим підходом для зіткнення рівнів."

msgid ""
"You can configure the CollisionPolygon2D node's *build mode* in the "
"inspector. If it is set to **Solids** (the default), collisions will include "
"the polygon and its contained area. If it is set to **Segments**, collisions "
"will only include the polygon edges."
msgstr ""
"Ви можете налаштувати *режим* збірки вузла CollisionPolygon2D в інспекторі. "
"Якщо встановлено значення **Solids** (за замовчуванням), зіткнення "
"включатиме багатокутник і його область. Якщо для нього встановлено значення "
"**Сегменти**, зіткнення включатиме лише ребра багатокутників."

msgid ""
"You can generate a concave collision shape from the editor by selecting a "
"Sprite2D and using the **Sprite2D** menu at the top of the 2D viewport. The "
"Sprite2D menu dropdown exposes an option called **Create CollisionPolygon2D "
"Sibling**. Once you click it, it displays a menu with 3 settings:"
msgstr ""
"Ви можете створити увігнуту форму зіткнення з редактора, вибравши Sprite2D і "
"скориставшись меню **Sprite2D** у верхній частині вікна перегляду 2D. "
"Розкривне меню Sprite2D відкриває опцію під назвою **Create "
"CollisionPolygon2D Sibling**. Коли ви натискаєте його, відображається меню з "
"3 налаштуваннями:"

msgid ""
"**Simplification:** Higher values will result in a less detailed shape, "
"which improves performance at the cost of accuracy."
msgstr ""
"**Спрощення:** вищі значення призведуть до менш детальної форми, що покращує "
"продуктивність ціною точності."

msgid ""
"**Shrink (Pixels):** Higher values will shrink the generated collision "
"polygon relative to the sprite's edges."
msgstr ""
"**Зменшити (пікселі):** Вищі значення зменшать створений багатокутник "
"зіткнення відносно країв спрайту."

msgid ""
"**Grow (Pixels):** Higher values will grow the generated collision polygon "
"relative to the sprite's edges. Note that setting Grow and Shrink to equal "
"values may yield different results than leaving both of them on 0."
msgstr ""
"**Зростання (пікселі):** Вищі значення збільшать згенерований багатокутник "
"зіткнення відносно країв спрайту. Зауважте, що встановлення рівних значень "
"Grow і Shrink може дати інші результати, ніж якщо залишити обидва на 0."

msgid ""
"If you have an image with many small details, it's recommended to create a "
"simplified version and use it to generate the collision polygon. This can "
"result in better performance and game feel, since the player won't be "
"blocked by small, decorative details."
msgstr ""
"Якщо у вас є зображення з великою кількістю дрібних деталей, рекомендується "
"створити спрощену версію та використовувати її для генерації багатокутника "
"зіткнень. Це може призвести до кращої продуктивності та відчуття від гри, "
"оскільки гравець не буде заблокований дрібними декоративними деталями."

msgid ""
"To use a separate image for collision polygon generation, create another "
"Sprite2D, generate a collision polygon sibling from it then remove the "
"Sprite2D node. This way, you can exclude small details from the generated "
"collision."
msgstr ""
"Щоб використати окреме зображення для генерації багатокутника зіткнення, "
"створіть інший Sprite2D, згенеруйте з нього полігон зіткнення, а потім "
"видаліть вузол Sprite2D. Таким чином ви можете виключити дрібні деталі зі "
"згенерованого зіткнення."

msgid "Performance caveats"
msgstr "Застереження щодо продуктивності"

msgid ""
"You aren't limited to a single collision shape per PhysicsBody. Still, we "
"recommend keeping the number of shapes as low as possible to improve "
"performance, especially for dynamic objects like RigidBodies and "
"CharacterBodies. On top of that, avoid translating, rotating, or scaling "
"CollisionShapes to benefit from the physics engine's internal optimizations."
msgstr ""
"Ви не обмежені однією формою зіткнення на PhysicsBody. Тим не менш, ми "
"рекомендуємо зберігати якомога меншу кількість форм, щоб покращити "
"продуктивність, особливо для динамічних об’єктів, таких як RigidBodies і "
"CharacterBodies. Крім того, уникайте перекладу, обертання або масштабування "
"CollisionShapes, щоб скористатися перевагами внутрішньої оптимізації "
"фізичного механізму."

msgid ""
"When using a single non-transformed collision shape in a StaticBody, the "
"engine's *broad phase* algorithm can discard inactive PhysicsBodies. The "
"*narrow phase* will then only have to take into account the active bodies' "
"shapes. If a StaticBody has many collision shapes, the broad phase will "
"fail. The narrow phase, which is slower, must then perform a collision check "
"against each shape."
msgstr ""
"У разі використання однієї нетрансформованої форми зіткнення в StaticBody "
"алгоритм *широкої фази* двигуна може відкидати неактивні PhysicsBodies. Тоді "
"*вузька фаза* повинна буде враховувати лише форми активних тіл. Якщо "
"StaticBody має багато форм зіткнення, широка фаза не вдасться. Вузька фаза, "
"яка є повільнішою, повинна виконати перевірку на зіткнення з кожною формою."

msgid ""
"If you run into performance issues, you may have to make tradeoffs in terms "
"of accuracy. Most games out there don't have a 100% accurate collision. They "
"find creative ways to hide it or otherwise make it unnoticeable during "
"normal gameplay."
msgstr ""
"Якщо у вас виникли проблеми з продуктивністю, вам, можливо, доведеться піти "
"на компроміси щодо точності. Більшість ігор не мають 100% точного зіткнення. "
"Вони знаходять творчі способи приховати це або іншим чином зробити "
"непомітним під час звичайної гри."
