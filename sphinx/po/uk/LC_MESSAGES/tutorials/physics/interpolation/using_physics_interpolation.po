#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using physics interpolation"
msgstr "Використання фізичної інтерполяції"

msgid ""
"How do we incorporate physics interpolation into a Godot game? Are there any "
"caveats?"
msgstr "Як включити інтерполяцію фізики в гру Godot? Чи є якісь застереження?"

msgid ""
"We have tried to make the system as easy to use as possible, and many "
"existing games will work with few changes. That said there are some "
"situations which require special treatment, and these will be described."
msgstr ""
"Ми намагалися зробити систему максимально простою у використанні, і багато "
"існуючих ігор працюватимуть з невеликими змінами. Тим не менш, є деякі "
"ситуації, які вимагають спеціального лікування, і вони будуть описані."

msgid "Turn on the physics interpolation setting"
msgstr "Увімкніть налаштування фізичної інтерполяції"

msgid ""
"The first step is to turn on physics interpolation in :ref:`Project Settings "
"> Physics > Common > Physics "
"Interpolation<class_ProjectSettings_property_physics/common/"
"physics_interpolation>` You can now run your game."
msgstr ""
"Перший крок — увімкнути фізичну інтерполяцію в :ref:`Project Settings > "
"Physics > Common > Physics "
"Interpolation<class_ProjectSettings_property_physics/common/"
"physics_interpolation>` Тепер ви можете запускати гру."

msgid ""
"It is likely that nothing looks hugely different, particularly if you are "
"running physics at 60 TPS or a multiple of it. However, quite a bit more is "
"happening behind the scenes."
msgstr ""
"Цілком імовірно, що ніщо не виглядає суттєво інакше, особливо якщо ви "
"використовуєте фізику на 60 TPS або більше. Однак за лаштунками відбувається "
"чимало іншого."

msgid ""
"To convert an existing game to use interpolation, it is highly recommended "
"that you temporarily set :ref:`Project Settings > Physics > Common > Physics "
"Tick per Second<class_ProjectSettings_property_physics/common/"
"physics_ticks_per_second>` to a low value such as ``10``, which will make "
"interpolation problems more obvious."
msgstr ""
"Щоб перетворити існуючу гру на використання інтерполяції, наполегливо "
"рекомендуємо тимчасово встановити :ref:`Project Settings > Physics > Common "
"> Physics Tick per Second<class_ProjectSettings_property_physics/common/"
"physics_ticks_per_second>` на низьке значення, наприклад ``10``, що зробить "
"проблеми інтерполяції більш очевидними."

msgid "Move (almost) all game logic from _process to _physics_process"
msgstr "Перемістіть (майже) всю логіку гри з _process до _physics_process"

msgid ""
"The most fundamental requirement for physics interpolation (which you may be "
"doing already) is that you should be moving and performing game logic on "
"your objects within ``_physics_process`` (which runs at a physics tick) "
"rather than ``_process`` (which runs on a rendered frame). This means your "
"scripts should typically be doing the bulk of their processing within "
"``_physics_process``, including responding to input and AI."
msgstr ""
"Найфундаментальніша вимога для фізичної інтерполяції (яку ви, можливо, вже "
"робите) полягає в тому, що ви повинні рухатися та виконувати ігрову логіку "
"на своїх об’єктах у межах ``_physics_process`` (який виконується на фізиці), "
"а не ``_process`` (який виконується на відтвореному кадрі). Це означає, що "
"ваші сценарії, як правило, повинні виконувати основну частину своєї обробки "
"в межах ``_physics_process``, включаючи реакцію на введення та ШІ."

msgid ""
"Setting the transform of objects only within physics ticks allows the "
"automatic interpolation to deal with transforms *between* physics ticks, and "
"ensures the game will run the same whatever machine it is run on. As a "
"bonus, this also reduces CPU usage if the game is rendering at high FPS, "
"since AI logic (for example) will no longer run on every rendered frame."
msgstr ""
"Налаштування трансформації об’єктів лише в межах фізичних тактів дозволяє "
"автоматичній інтерполяції мати справу з трансформаціями *між* фізичними "
"тактами та гарантує, що гра працюватиме однаково, незалежно від того, на "
"якій машині вона працює. Як бонус, це також зменшує використання процесора, "
"якщо гра рендериться з високим FPS, оскільки логіка штучного інтелекту "
"(наприклад) більше не працюватиме на кожному відрендереному кадрі."

msgid ""
"If you attempt to set the transform of interpolated objects *outside* the "
"physics tick, the calculations for the interpolated position will be "
"incorrect, and you will get jitter. This jitter may not be visible on your "
"machine, but it *will* occur for some players. For this reason, setting the "
"transform of interpolated objects should be avoided outside of the physics "
"tick. Godot will attempt to produce warnings in the editor if this case is "
"detected."
msgstr ""
"Якщо ви спробуєте встановити перетворення інтерпольованих об’єктів *поза* "
"фізикою, обчислення для інтерпольованої позиції будуть неправильними, і ви "
"отримаєте тремтіння. Це тремтіння може бути невидимим на вашій машині, але "
"воно *виникне* у деяких гравців. З цієї причини слід уникати налаштування "
"перетворення інтерпольованих об’єктів поза межами фізики. Godot спробує "
"створити попередження в редакторі, якщо цей випадок буде виявлено."

msgid ""
"This is only a *soft rule*. There are some occasions where you might want to "
"teleport objects outside of the physics tick (for instance when starting a "
"level, or respawning objects). Still, in general, you should be applying "
"transforms from the physics tick."
msgstr ""
"Це лише *м’яке правило*. Бувають випадки, коли вам може знадобитися "
"телепортувати об’єкти поза галочкою фізики (наприклад, під час початку рівня "
"або відновлення об’єктів). Тим не менш, загалом, ви повинні застосовувати "
"перетворення з галочки фізики."

msgid "Ensure that all indirect movement happens during physics ticks"
msgstr ""
"Переконайтеся, що всі непрямі рухи відбуваються під час фізичних тактів"

msgid ""
"Consider that in Godot, nodes can be moved not just directly in your own "
"scripts, but also by automatic methods such as tweening, animation, and "
"navigation. All these methods should also have their timing set to operate "
"on the physics tick rather than each frame (\"idle\"), **if** you are using "
"them to move objects (*these methods can also be used to control properties "
"that are not interpolated*)."
msgstr ""
"Зверніть увагу на те, що в Godot вузли можна переміщувати не лише "
"безпосередньо у ваших власних сценаріях, а й за допомогою автоматичних "
"методів, таких як анімація, анімація та навігація. Усі ці методи також "
"повинні мати свій час, налаштований для роботи з фізичним тиком, а не з "
"кожним кадром («неактивний»), **якщо** ви використовуєте їх для переміщення "
"об’єктів (*ці методи також можна використовувати для керування "
"властивостями, які не інтерполюються*)."

msgid ""
"Also consider that nodes can be moved not just by moving themselves, but "
"also by moving parent nodes in the :ref:`SceneTree<class_SceneTree>`. The "
"movement of parents should therefore also only occur during physics ticks."
msgstr ""
"Також врахуйте, що вузли можна переміщувати не лише переміщенням самих себе, "
"але й переміщенням батьківських вузлів у :ref:`SceneTree<class_SceneTree>`. "
"Таким чином, рух батьків має відбуватися лише під час фізико-тактів."

msgid "Choose a physics tick rate"
msgstr "Оберіть ставку з фізики"

msgid ""
"When using physics interpolation, the rendering is decoupled from physics, "
"and you can choose any value that makes sense for your game. You are no "
"longer limited to values that are multiples of the user's monitor refresh "
"rate (for stutter-free gameplay if the target FPS is reached)."
msgstr ""
"Під час використання фізичної інтерполяції відтворення відокремлюється від "
"фізики, і ви можете вибрати будь-яке значення, яке має сенс для вашої гри. "
"Ви більше не обмежені значеннями, кратними частоті оновлення монітора "
"користувача (для геймплея без запинань, якщо досягнуто цільового FPS)."

msgid "As a rough guide:"
msgstr "Як приблизний посібник:"

msgid "Low tick rates (10-30)"
msgstr "Низькі показники (10-30)"

msgid "Medium tick rates (30-60)"
msgstr "Середні тики (30-60)"

msgid "High tick rates (60+)"
msgstr "Високі тикові показники (60+)"

msgid "Better CPU performance"
msgstr "Краща продуктивність ЦП"

msgid "Good physics behavior in complex scenes"
msgstr "Хороша фізична поведінка в складних сценах"

msgid "Good with fast physics"
msgstr "Добре з швидкою фізикою"

msgid "Add some delay to input"
msgstr "Додайте деяку затримку до введення"

msgid "Good for first person games"
msgstr "Добре підходить для ігор від першої особи"

msgid "Good for racing games"
msgstr "Добре підходить для гоночних ігор"

msgid "Simple physics behaviour"
msgstr "Проста фізична поведінка"

msgid ""
"You can always change the tick rate as you develop, it is as simple as "
"changing the project setting."
msgstr ""
"Ви завжди можете змінити частоту тактів під час розробки, це так само "
"просто, як змінити налаштування проекту."

msgid "Call ``reset_physics_interpolation()`` when teleporting objects"
msgstr ""
"Викликати ``reset_physics_interpolation()`` під час телепортації об’єктів"

msgid ""
"Most of the time, interpolation is what you want between two physics ticks. "
"However, there is one situation in which it may *not* be what you want. That "
"is when you are initially placing objects, or moving them to a new location. "
"Here, you don't want a smooth motion between where the object was (e.g. the "
"origin) and the initial position - you want an instantaneous move."
msgstr ""
"Здебільшого інтерполяція – це те, що вам потрібно між двома фізичними "
"галочками. Однак є одна ситуація, коли це може бути *не* тим, що ви хочете. "
"Це коли ви спочатку розміщуєте об’єкти або переміщуєте їх у нове місце. Тут "
"вам не потрібен плавний рух між місцем розташування об’єкта (наприклад, "
"початковою позицією) і початковою позицією – вам потрібен миттєвий рух."

msgid ""
"The solution to this is to call "
"the :ref:`Node.reset_physics_interpolation<class_Node_method_reset_physics_interpolation>` "
"function. What this function does under the hood is set the internally "
"stored *previous transform* of the object to be equal to the *current "
"transform*. This ensures that when interpolating between these two equal "
"transforms, there will be no movement."
msgstr ""
"Рішенням цього є виклик "
"функції :ref:`Node.reset_physics_interpolation<class_Node_method_reset_physics_interpolation>`. "
"Те, що робить ця функція під капотом, — це встановлення внутрішньо "
"збереженого *попереднього перетворення* об’єкта рівним *поточному "
"перетворенню*. Це гарантує, що під час інтерполяції між цими двома рівними "
"перетвореннями не буде руху."

msgid ""
"Even if you forget to call this, it will usually not be a problem in most "
"situations (especially at high tick rates). This is something you can easily "
"leave to the polishing phase of your game. The worst that will happen is "
"seeing a streaking motion for a frame or so when you move them - you will "
"know when you need it!"
msgstr ""
"Навіть якщо ви забудете зателефонувати, зазвичай це не буде проблемою в "
"більшості ситуацій (особливо при високих тиках). Це те, що ви можете легко "
"залишити на етапі полірування вашої гри. Найгірше, що трапиться, це побачити "
"рух смуг для кадру або близько того, коли ви їх переміщуєте - ви дізнаєтеся, "
"коли вам це потрібно!"

msgid "There are actually two ways to use ``reset_physics_interpolation()``:"
msgstr ""
"Фактично існує два способи використання ``reset_physics_interpolation()``:"

msgid "*Standing start (e.g. player)*"
msgstr "*Початок стоячи (наприклад, гравець)*"

msgid "Set the initial transform"
msgstr "Встановіть початкове перетворення"

msgid "Call ``reset_physics_interpolation()``"
msgstr "Викличте ``reset_physics_interpolation()``"

msgid ""
"The previous and current transforms will be identical, resulting in no "
"initial movement."
msgstr ""
"Попереднє та поточне перетворення будуть ідентичними, що призведе до "
"відсутності початкового руху."

msgid "*Moving start (e.g. bullet)*"
msgstr "*Початок руху (наприклад, куля)*"

msgid "Immediately set the transform expected after the first tick of motion"
msgstr "Негайно встановіть очікуване перетворення після першого руху"

msgid ""
"The previous transform will be the starting position, and the current "
"transform will act as though a tick of simulation has already taken place. "
"This will immediately start moving the object, instead of having a tick "
"delay standing still."
msgstr ""
"Попереднє перетворення буде початковою позицією, а поточне перетворення "
"діятиме так, ніби позначка симуляції вже відбулася. Це негайно почне рухати "
"об’єкт, замість того, щоб затримка стояла на місці."

msgid ""
"Make sure you set the transform and call ``reset_physics_interpolation()`` "
"in the correct order as shown above, otherwise you will see unwanted "
"\"streaking\"."
msgstr ""
"Переконайтеся, що ви встановили перетворення та викликали "
"``reset_physics_interpolation()`` у правильному порядку, як показано вище, "
"інакше ви побачите небажані «смуги»."

msgid "Testing and debugging tips"
msgstr "Поради щодо тестування та налагодження"

msgid ""
"Even if you intend to run physics at 60 TPS, in order to thoroughly test "
"your interpolation and get the smoothest gameplay, it is highly recommended "
"to temporarily set the physics tick rate to a low value such as 10 TPS."
msgstr ""
"Навіть якщо ви маєте намір запустити фізику на 60 TPS, щоб ретельно "
"перевірити свою інтерполяцію та отримати максимально плавний ігровий процес, "
"настійно рекомендується тимчасово встановити низьке значення тактової "
"швидкості фізики, наприклад 10 TPS."

msgid ""
"The gameplay may not work perfectly, but it should enable you to more easily "
"see cases where you should be "
"calling :ref:`Node.reset_physics_interpolation<class_Node_method_reset_physics_interpolation>`, "
"or where you should be using your own custom interpolation on e.g. "
"a :ref:`Camera3D<class_Camera3D>`. Once you have these cases fixed, you can "
"set the physics tick rate back to the desired setting."
msgstr ""
"Геймплей може працювати не ідеально, але він повинен дозволити вам легше "
"бачити випадки, коли ви повинні "
"викликати :ref:`Node.reset_physics_interpolation<class_Node_method_reset_physics_interpolation>`, "
"або де ви повинні використовувати власну інтерполяцію, напр. "
"a :ref:`Camera3D<class_Camera3D>`. Після того, як ви виправите ці випадки, "
"ви зможете повернути потрібне значення швидкості тактів фізики."

msgid ""
"The other great advantage to testing at a low tick rate is you can often "
"notice other game systems that are synchronized to the physics tick and "
"creating glitches which you may want to work around. Typical examples "
"include setting animation blend values, which you may decide to set in "
"``_process()`` and interpolate manually."
msgstr ""
"Інша велика перевага тестування з низькою швидкістю тику полягає в тому, що "
"ви часто можете помітити, що інші ігрові системи синхронізуються з фізичним "
"тиком і створюють збої, які ви можете вирішити. Типові приклади включають "
"налаштування значень змішування анімації, які ви можете встановити в "
"``_process()`` та інтерполювати вручну."
