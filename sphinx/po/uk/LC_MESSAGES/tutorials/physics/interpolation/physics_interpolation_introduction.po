#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction"
msgstr "Вступ"

msgid "Physics ticks and rendered frames"
msgstr "Фізичні кліщі та візуалізовані кадри"

msgid ""
"One key concept to understand in Godot is the distinction between physics "
"ticks (sometimes referred to as iterations or physics frames), and rendered "
"frames. The physics proceeds at a fixed tick rate (set in :ref:`Project "
"Settings > Physics > Common > Physics Tick per "
"Second<class_ProjectSettings_property_physics/common/"
"physics_ticks_per_second>`), which defaults to 60 ticks per second."
msgstr ""
"Однією з ключових концепцій Godot, яку слід зрозуміти, є різниця між "
"фізичними тиками (іноді їх називають ітераціями або фізичними фреймами) і "
"відтвореними фреймами. Фізика виконується з фіксованою швидкістю "
"(встановленою в :ref:`Project Settings > Physics > Common > Physics Tick per "
"Second<class_ProjectSettings_property_physics/common/"
"physics_ticks_per_second>`), яка за замовчуванням становить 60 тактів за "
"секунду."

msgid ""
"However, the engine does not necessarily **render** at the same rate. "
"Although many monitors refresh at 60 Hz (cycles per second), many refresh at "
"completely different frequencies (e.g. 75 Hz, 144 Hz, 240 Hz or more). Even "
"though a monitor may be able to show a new frame e.g. 60 times a second, "
"there is no guarantee that the CPU and GPU will be able to *supply* frames "
"at this rate. For instance, when running with V-Sync, the computer may be "
"too slow for 60 and only reach the deadlines for 30 FPS, in which case the "
"frames you see will change at 30 FPS (resulting in stuttering)."
msgstr ""
"Однак механізм не обов’язково **відтворює** з однаковою швидкістю. Хоча "
"багато моніторів оновлюються з частотою 60 Гц (циклів на секунду), багато "
"оновлюються на зовсім інших частотах (наприклад, 75 Гц, 144 Гц, 240 Гц або "
"більше). Навіть якщо монітор може показати новий кадр, напр. 60 разів на "
"секунду, немає гарантії, що ЦП і ГП зможуть *забезпечувати* кадри з такою "
"швидкістю. Наприклад, під час роботи з V-Sync комп’ютер може бути надто "
"повільним для 60 і досягати кінцевих термінів лише для 30 FPS, у цьому "
"випадку кадри, які ви бачите, змінюватимуться на 30 FPS (що призведе до "
"заїкань)."

msgid ""
"But there is a problem here. What happens if the physics ticks do not "
"coincide with frames? What happens if the physics tick rate is out of phase "
"with the frame rate? Or worse, what happens if the physics tick rate is "
"*lower* than the rendered frame rate?"
msgstr ""
"Але тут є проблема. Що буде, якщо галочки фізики не збігаються з рамками? Що "
"станеться, якщо фізична тактова частота не відповідає фазі частоти кадрів? "
"Або ще гірше, що станеться, якщо частота тактів фізики буде *нижчою* за "
"частоту кадрів рендерингу?"

msgid ""
"This problem is easier to understand if we consider an extreme scenario. If "
"you set the physics tick rate to 10 ticks per second, in a simple game with "
"a rendered frame rate of 60 FPS. If we plot a graph of the positions of an "
"object against the rendered frames, you can see that the positions will "
"appear to \"jump\" every 1/10th of a second, rather than giving a smooth "
"motion. When the physics calculates a new position for a new object, it is "
"not rendered in this position for just one frame, but for 6 frames."
msgstr ""
"Цю проблему легше зрозуміти, якщо розглянути екстремальний сценарій. Якщо ви "
"встановите частоту фізичних тактів на 10 тактів на секунду, у простій грі з "
"частотою відтворення кадрів 60 FPS. Якщо ми побудуємо графік позицій об’єкта "
"на відтворених кадрах, ви побачите, що позиції будуть «стрибати» кожну 1/10 "
"секунди, а не рухатися плавно. Коли фізика розраховує нове положення для "
"нового об’єкта, він рендериться в цьому положенні не лише для одного кадру, "
"а для 6 кадрів."

msgid ""
"This jump can be seen in other combinations of tick / frame rate as "
"glitches, or jitter, caused by this staircasing effect due to the "
"discrepancy between physics tick time and rendered frame time."
msgstr ""
"Цей стрибок можна побачити в інших комбінаціях тиків/частоти кадрів як збої "
"або тремтіння, спричинені цим ефектом сходів через розбіжність між часом "
"фізичного такту та часом відтворення кадру."

msgid "What can we do about frames and ticks being out of sync?"
msgstr "Що ми можемо зробити з розсинхронізацією кадрів і позначок?"

msgid "Lock the tick / frame rate together?"
msgstr "Зафіксувати тік/частоту кадрів разом?"

msgid ""
"The most obvious solution is to get rid of the problem, by ensuring there is "
"a physics tick that coincides with every frame. This used to be the approach "
"on old consoles and fixed hardware computers. If you know that every player "
"will be using the same hardware, you can ensure it is fast enough to "
"calculate ticks and frames at e.g. 50 FPS, and you will be sure it will work "
"great for everybody."
msgstr ""
"Найбільш очевидним рішенням є позбутися проблеми, переконавшись, що галочка "
"фізики збігається з кожним кадром. Раніше це був підхід на старих консолях і "
"комп’ютерах зі стаціонарним обладнанням. Якщо ви знаєте, що всі гравці "
"використовуватимуть одне й те саме обладнання, ви можете переконатися, що "
"воно достатньо швидке для обчислення тиків і фреймів, наприклад. 50 FPS, і "
"ви будете впевнені, що це буде чудово працювати для всіх."

msgid ""
"However, modern games are often no longer made for fixed hardware. You will "
"often be planning to release on desktop computers, mobiles, and more. All of "
"which have huge variations in performance, as well as different monitor "
"refresh rates. We need to come up with a better way of dealing with the "
"problem."
msgstr ""
"Однак сучасні ігри часто більше не створюються для фіксованого обладнання. "
"Ви часто плануєте випуск на настільних комп’ютерах, мобільних телефонах "
"тощо. Усі вони мають величезні варіації продуктивності, а також різні "
"частоти оновлення монітора. Нам потрібно придумати кращий спосіб вирішення "
"проблеми."

msgid "Adapt the tick rate?"
msgstr "Адаптувати тікрейт?"

msgid ""
"Instead of designing the game at a fixed physics tick rate, we could allow "
"the tick rate to scale according to the end users hardware. We could for "
"example use a fixed tick rate that works for that hardware, or even vary the "
"duration of each physics tick to match a particular frame duration."
msgstr ""
"Замість того, щоб розробляти гру з фіксованою швидкістю фізичного тику, ми "
"могли б дозволити частоті тику масштабуватися відповідно до апаратного "
"забезпечення кінцевого користувача. Ми могли б, наприклад, використовувати "
"фіксовану частоту тактів, яка працює для цього обладнання, або навіть "
"змінювати тривалість кожного фізичного таку, щоб відповідати певній "
"тривалості кадру."

msgid ""
"This works, but there is a problem. Physics (*and game logic*, which is "
"often also run in the ``_physics_process``) work best and most consistently "
"when run at a **fixed**, predetermined tick rate. If you attempt to run a "
"racing game physics that has been designed for 60 TPS (ticks per second) at "
"e.g. 10 TPS, the physics will behave completely differently. Controls may be "
"less responsive, collisions / trajectories can be completely different. You "
"may test your game thoroughly at 60 TPS, then find it breaks on end users "
"machines when it runs at a different tick rate."
msgstr ""
"Це працює, але є проблема. Фізика (*та ігрова логіка*, яка часто також "
"запускається в ``_physics_process``) працює найкраще та найпослідовніше, "
"коли виконується з **фіксованою**, заздалегідь визначеною швидкістю. Якщо ви "
"спробуєте запустити гоночну гру з фізикою, яка була розроблена для 60 TPS "
"(тактів на секунду) напр. 10 TPS, фізика буде поводитися зовсім по-іншому. "
"Елементи управління можуть бути менш чуйними, зіткнення / траєкторії можуть "
"бути зовсім іншими. Ви можете ретельно перевірити свою гру на 60 TPS, а "
"потім виявити, що вона ламається на машинах кінцевих користувачів, коли вона "
"працює з іншою швидкістю."

msgid ""
"This can make quality assurance difficult with hard to reproduce bugs, "
"especially in AAA games where problems of this sort can be very costly. This "
"can also be problematic for multiplayer games for competitive integrity, as "
"running the game at certain tick rates may be more advantageous than others."
msgstr ""
"Це може ускладнити перевірку якості через помилки, які важко відтворити, "
"особливо в іграх AAA, де проблеми такого роду можуть коштувати дуже дорого. "
"Це також може бути проблематичним для багатокористувацьких ігор для "
"конкурентної цілісності, оскільки запуск гри з певними тиками може бути "
"більш вигідним, ніж інші."

msgid ""
"Lock the tick rate, but use interpolation to smooth frames in between "
"physics ticks"
msgstr ""
"Зафіксуйте частоту тактів, але використовуйте інтерполяцію, щоб згладити "
"кадри між фізичними тактами"

msgid ""
"This has become one of the most popular approaches to deal with the problem, "
"although it is optional and disabled by default."
msgstr ""
"Це став один із найпопулярніших підходів до вирішення проблеми, хоча він "
"необов’язковий і вимкнений за замовчуванням."

msgid ""
"We have established that the most desirable physics/game logic arrangement "
"for consistency and predictability is a physics tick rate that is fixed at "
"design-time. The problem is the discrepancy between the physics position "
"recorded, and where we \"want\" a physics object to be shown on a frame to "
"give smooth motion."
msgstr ""
"Ми встановили, що найбажаніша логіка фізики/ігри для узгодженості та "
"передбачуваності — це швидкість фізичних тактів, яка фіксується під час "
"розробки. Проблема полягає в розбіжності між фізичною позицією, яку "
"записали, і місцем, де ми «хочемо», щоб фізичний об’єкт був показаний на "
"кадрі, щоб забезпечити плавний рух."

msgid ""
"The answer turns out to be simple, but can be a little hard to get your head "
"around at first."
msgstr ""
"Відповідь виявляється простою, але спочатку може бути трохи важко зрозуміти."

msgid ""
"Instead of keeping track of just the current position of a physics object in "
"the engine, we keep track of *both the current position of the object, and "
"the previous position* on the previous physics tick."
msgstr ""
"Замість того, щоб відстежувати лише поточне положення фізичного об’єкта в "
"механізмі, ми відстежуємо *поточне положення об’єкта та попереднє положення* "
"на попередньому фізичному тику."

msgid ""
"Why do we need the previous position *(in fact the entire transform, "
"including rotation and scaling)*? By using a little math magic, we can use "
"**interpolation** to calculate what the transform of the object would be "
"between those two points, in our ideal world of smooth continuous movement."
msgstr ""
"Навіщо нам потрібна попередня позиція *(фактично все перетворення, включаючи "
"обертання та масштабування)*? Використовуючи трохи математичної магії, ми "
"можемо використовувати **інтерполяцію**, щоб обчислити, яким буде "
"перетворення об’єкта між цими двома точками в нашому ідеальному світі "
"плавного безперервного руху."

msgid "Linear interpolation"
msgstr "Лінійна інтерполяція"

msgid ""
"The simplest way to achieve this is linear interpolation, or lerping, which "
"you may have used before."
msgstr ""
"Найпростішим способом досягти цього є лінійна інтерполяція, або lerping, яку "
"ви, можливо, використовували раніше."

msgid ""
"Let us consider only the position, and a situation where we know that the "
"previous physics tick X coordinate was 10 units, and the current physics "
"tick X coordinate is 30 units."
msgstr ""
"Давайте розглянемо лише позицію та ситуацію, коли ми знаємо, що попередня "
"фізична координата Х у фізичному тику становила 10 одиниць, а поточна "
"координата Х у фізичному тику становить 30 одиниць."

msgid ""
"Although the maths is explained here, you do not have to worry about the "
"details, as this step will be performed for you. Under the hood, Godot may "
"use more complex forms of interpolation, but linear interpolation is the "
"easiest in terms of explanation."
msgstr ""
"Хоча тут пояснюється математика, вам не потрібно турбуватися про деталі, "
"оскільки цей крок буде виконано за вас. Під капотом Godot може "
"використовувати більш складні форми інтерполяції, але лінійна інтерполяція є "
"найпростішою з точки зору пояснення."

msgid "The physics interpolation fraction"
msgstr "Інтерполяційна частка фізики"

msgid ""
"If our physics ticks are happening 10 times per second (for this example), "
"what happens if our rendered frame takes place at time 0.12 seconds? We can "
"do some math to figure out where the object would be to obtain a smooth "
"motion between the two ticks."
msgstr ""
"Якщо наші фізичні тики відбуваються 10 разів на секунду (для цього "
"прикладу), що станеться, якщо наш рендерений кадр відбудеться в момент часу "
"0,12 секунди? Ми можемо зробити трохи математики, щоб визначити, де буде "
"знаходитися об’єкт, щоб отримати плавний рух між двома позначками."

msgid ""
"First of all, we have to calculate how far through the physics tick we want "
"the object to be. If the last physics tick took place at 0.1 seconds, we are "
"0.02 seconds *(0.12 - 0.1)* through a tick that we know will take 0.1 "
"seconds (10 ticks per second). The fraction through the tick is thus:"
msgstr ""
"Перш за все, ми повинні обчислити, на якій відстані через фізичний тік ми "
"хочемо, щоб об’єкт був. Якщо останній фізичний тік відбувся на 0,1 секунди, "
"ми проходимо 0,02 секунди *(0,12 - 0,1)* через тік, який, як ми знаємо, "
"займе 0,1 секунди (10 тактів на секунду). Таким чином, частка через галочку "
"дорівнює:"

msgid ""
"This is called the **physics interpolation fraction**, and is handily "
"calculated for you by Godot. It can be retrieved on any frame by "
"calling :ref:`Engine.get_physics_interpolation_fraction<class_Engine_method_get_physics_interpolation_fraction>`."
msgstr ""
"Це називається **фізичною інтерполяційною часткою**, яку зручно розраховує "
"для вас Godot. Його можна отримати з будь-якого кадру, "
"викликавши :ref:`Engine.get_physics_interpolation_fraction<class_Engine_method_get_physics_interpolation_fraction>`."

msgid "Calculating the interpolated position"
msgstr "Обчислення інтерпольованої позиції"

msgid ""
"Once we have the interpolation fraction, we can insert it into a standard "
"linear interpolation equation. The X coordinate would thus be:"
msgstr ""
"Отримавши інтерполяційний дріб, ми можемо вставити його в стандартне лінійне "
"рівняння інтерполяції. Таким чином, координата X буде:"

msgid "So substituting our ``x_prev`` as 10, and ``x_curr`` as 30:"
msgstr "Отже, замінивши наш ``x_prev`` на 10, а ``x_curr`` на 30:"

msgid "Let's break that down:"
msgstr "Давайте розберемо це:"

msgid ""
"We know the X starts from the coordinate on the previous tick (``x_prev``) "
"which is 10 units."
msgstr ""
"Ми знаємо, що X починається з координати на попередньому тику (``x_prev``), "
"яка становить 10 одиниць."

msgid ""
"We know that after the full tick, the difference between the current tick "
"and the previous tick will have been added (``x_curr - x_prev``) (which is "
"20 units)."
msgstr ""
"Ми знаємо, що після повного тику різниця між поточним і попереднім тиками "
"буде додана (``x_curr - x_prev``) (це 20 одиниць)."

msgid ""
"The only thing we need to vary is the proportion of this difference we add, "
"according to how far we are through the physics tick."
msgstr ""
"Єдине, що нам потрібно змінювати, це частка цієї різниці, яку ми додаємо, "
"відповідно до того, наскільки далеко ми пройшли фізику."

msgid ""
"Although this example interpolates the position, the same thing can be done "
"with the rotation and scale of objects. It is not necessary to know the "
"details as Godot will do all this for you."
msgstr ""
"Хоча в цьому прикладі інтерполюється положення, те ж саме можна зробити з "
"обертанням і масштабом об’єктів. Не обов'язково знати подробиці, адже все це "
"за вас зробить Godot."

msgid "Smoothed transformations between physics ticks?"
msgstr "Згладжені перетворення між галочками фізики?"

msgid ""
"Putting all this together shows that it should be possible to have a nice "
"smooth estimation of the transform of objects between the current and "
"previous physics tick."
msgstr ""
"Поєднання всього цього разом показує, що має бути можливим мати хорошу "
"плавну оцінку трансформації об’єктів між поточною та попередньою фізикою."

msgid ""
"But wait, you may have noticed something. If we are interpolating between "
"the current and previous ticks, we are not estimating the position of the "
"object *now*, we are estimating the position of the object in the past. To "
"be exact, we are estimating the position of the object *between 1 and 2 "
"ticks* into the past."
msgstr ""
"Але зачекайте, можливо, ви щось помітили. Якщо ми виконуємо інтерполяцію між "
"поточним і попереднім тиками, ми не оцінюємо положення об’єкта *зараз*, ми "
"оцінюємо положення об’єкта в минулому. Якщо бути точним, ми оцінюємо "
"положення об'єкта *між 1 і 2 тиками* в минулому."

msgid "In the past"
msgstr "У минулому"

msgid ""
"What does this mean? This scheme does work, but it does mean we are "
"effectively introducing a delay between what we see on the screen, and where "
"the objects *should* be."
msgstr ""
"Що це означає? Ця схема дійсно працює, але це означає, що ми фактично "
"вводимо затримку між тим, що ми бачимо на екрані, і тим, де *мають* бути "
"об’єкти."

msgid ""
"In practice, most people won't notice this delay, or rather, it is typically "
"not *objectionable*. There are already significant delays involved in games, "
"we just don't typically notice them. The most significant effect is there "
"can be a slight delay to input, which can be a factor in fast twitch games. "
"In some of these fast input situations, you may wish to turn off physics "
"interpolation and use a different scheme, or use a high tick rate, which "
"mitigates these delays."
msgstr ""
"На практиці більшість людей не помітять цю затримку, точніше, вона зазвичай "
"не викликає *заперечень*. В іграх вже є значні затримки, просто ми зазвичай "
"їх не помічаємо. Найсуттєвішим ефектом є невелика затримка введення, що може "
"бути фактором у швидких іграх. У деяких із цих ситуацій швидкого введення ви "
"можете вимкнути фізичну інтерполяцію та використати іншу схему або "
"використати високу частоту тактів, що зменшить ці затримки."

msgid "Why look into the past? Why not predict the future?"
msgstr "Навіщо дивитися в минуле? Чому б не передбачити майбутнє?"

msgid ""
"There is an alternative to this scheme, which is: instead of interpolating "
"between the previous and current tick, we use maths to *extrapolate* into "
"the future. We try to predict where the object *will be*, rather than show "
"it where it was. This can be done and may be offered as an option in future, "
"but there are some significant downsides:"
msgstr ""
"Існує альтернатива цій схемі: замість інтерполяції між попереднім і поточним "
"тиками ми використовуємо математику для *екстраполяції* на майбутнє. Ми "
"намагаємося передбачити, де *буде* об’єкт, а не показувати, де він був. Це "
"можна зробити та запропонувати як опцію в майбутньому, але є кілька суттєвих "
"недоліків:"

msgid ""
"The prediction may not be correct, especially when an object collides with "
"another object during the physics tick."
msgstr ""
"Прогноз може бути невірним, особливо якщо об’єкт стикається з іншим під час "
"фізики."

msgid ""
"Where a prediction was incorrect, the object may extrapolate into an "
"\"impossible\" position, like inside a wall."
msgstr ""
"Якщо передбачення було неправильним, об’єкт може екстраполюватися в "
"«неможливе» положення, наприклад, усередині стіни."

msgid ""
"Providing the movement speed is slow, these incorrect predictions may not be "
"too much of a problem."
msgstr ""
"Якщо швидкість руху повільна, ці неправильні передбачення можуть не "
"становити великої проблеми."

msgid ""
"When a prediction was incorrect, the object may have to jump or snap back "
"onto the corrected path. This can be visually jarring."
msgstr ""
"Якщо передбачення виявилося неправильним, об’єкт може стрибнути або "
"повернутися на виправлену траєкторію. Це може візуально дратувати."

msgid "Fixed timestep interpolation"
msgstr "Виправлена інтерполяція з кроком за часом"

msgid ""
"In Godot this whole system is referred to as physics interpolation, but you "
"may also hear it referred to as **\"fixed timestep interpolation\"**, as it "
"is interpolating between objects moved with a fixed timestep (physics ticks "
"per second). In some ways the second term is more accurate, because it can "
"also be used to interpolate objects that are not driven by physics."
msgstr ""
"У Ґодо всю цю систему називають фізичною інтерполяцією, але ви також можете "
"почути, що її називають **\"інтерполяцією з фіксованим кроком у часі\"**, "
"оскільки вона інтерполює між об’єктами, які переміщуються з фіксованим "
"кроком у часі (фізичні тики за секунду). У певному сенсі другий термін більш "
"точний, оскільки його також можна використовувати для інтерполяції об’єктів, "
"які не керуються фізикою."

msgid ""
"Although physics interpolation is usually a good choice, there are "
"exceptions where you may choose not to use Godot's built-in physics "
"interpolation (or use it in a limited fashion). An example category is "
"internet multiplayer games. Multiplayer games often receive tick or timing "
"based information from other players or a server and these may not coincide "
"with local physics ticks, so a custom interpolation technique can often be a "
"better fit."
msgstr ""
"Хоча фізична інтерполяція зазвичай є хорошим вибором, є винятки, коли ви "
"можете не використовувати вбудовану фізичну інтерполяцію Godot (або "
"використовувати її обмежено). Прикладом категорії є багатокористувацькі "
"інтернет-ігри. Багатокористувацькі ігри часто отримують від інших гравців "
"або сервера інформацію на основі тиків або часу, і вони можуть не збігатися "
"з локальними фізичними тиками, тому спеціальна техніка інтерполяції часто "
"може бути кращою."
