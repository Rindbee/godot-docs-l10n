#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Overridable functions"
msgstr "Переобумовленої функції"

msgid ""
"Godot's Node class provides virtual functions you can override to update "
"nodes every frame or on specific events, like when they enter the scene tree."
msgstr ""
"Клас Node Godot надає віртуальні функції, які можна перевизначати, щоб "
"оновлювати вузли кожного кадру або під час певних подій, наприклад, коли "
"вони потрапляють у дерево сцен."

msgid "This document presents the ones you'll use most often."
msgstr ""
"У цьому документі представлені ті, якими ви будете користуватися найчастіше."

msgid ""
"Under the hood, these functions rely on Godot's low-level notifications "
"system. To learn more about it, see :ref:`doc_godot_notifications`."
msgstr ""
"Під капотом ці функції покладаються на низькорівневу систему сповіщень "
"Godot. Щоб дізнатися більше про це, перегляньте :ref:"
"`doc_godot_notifications`."

msgid ""
"Two functions allow you to initialize and get nodes besides the class's "
"constructor: ``_enter_tree()`` and ``_ready()``."
msgstr ""
"Дві функції дозволяють ініціалізувати та отримувати вузли, крім конструктора "
"класу: ``_enter_tree()`` і ``_ready()``."

msgid ""
"When the node enters the Scene Tree, it becomes active and the engine calls "
"its ``_enter_tree()`` method. That node's children may not be part of the "
"active scene yet. As you can remove and re-add nodes to the scene tree, this "
"function may be called multiple times throughout a node's lifetime."
msgstr ""
"Коли вузол потрапляє в дерево сцен, він стає активним, і механізм викликає "
"його метод ``_enter_tree()``. Дочірні елементи цього вузла можуть ще не бути "
"частиною активної сцени. Оскільки ви можете видаляти та повторно додавати "
"вузли до дерева сцени, цю функцію можна викликати кілька разів протягом "
"життя вузла."

msgid ""
"Most of the time, you'll use ``_ready()`` instead. This function is called "
"only once in a node's lifetime, after ``_enter_tree()``. ``_ready()`` "
"ensures that all children have entered the scene tree first, so you can "
"safely call ``get_node()`` on them."
msgstr ""
"У більшості випадків замість цього ви використовуєте ``_ready()``. Ця "
"функція викликається лише один раз за час існування вузла, після "
"``_enter_tree()``. ``_ready()`` гарантує, що всі дочірні елементи першими "
"увійшли до дерева сцен, тому ви можете безпечно викликати ``get_node()`` для "
"них."

msgid ""
"To learn more about getting node references, read :ref:"
"`doc_nodes_and_scene_instances`."
msgstr ""
"Щоб дізнатися більше про отримання посилань на вузли, прочитайте :ref:"
"`doc_nodes_and_scene_instances`."

msgid ""
"Another related callback is ``_exit_tree()``, which the engine calls every "
"time a node is about to exit the scene tree. This can be when you call :ref:"
"`Node.remove_child() <class_Node_method_remove_child>` or when you free a "
"node."
msgstr ""
"Інший пов’язаний зворотний виклик — це ``_exit_tree()``, який движок "
"викликає кожного разу, коли вузол збирається вийти з дерева сцени. Це може "
"бути, коли ви викликаєте :ref:`Node.remove_child() "
"<class_Node_method_remove_child>` або коли ви звільняєте вузол."

msgid ""
"The two virtual methods ``_process()`` and ``_physics_process()`` allow you "
"to update the node, every frame and every physics frame respectively. For "
"more information, read the dedicated documentation: :ref:"
"`doc_idle_and_physics_processing`."
msgstr ""
"Два віртуальних методи ``_process()`` і ``_physics_process()`` дозволяють "
"оновлювати вузол, кожен кадр і кожен кадр фізики відповідно. Для отримання "
"додаткової інформації прочитайте спеціальну документацію: :ref:"
"`doc_idle_and_physics_processing`."

msgid ""
"Two more essential built-in node callback functions are :ref:`Node."
"_unhandled_input() <class_Node_private_method__unhandled_input>` and :ref:"
"`Node._input() <class_Node_private_method__input>`, which you use to both "
"receive and process individual input events. The ``_unhandled_input()`` "
"method receives every key press, mouse click, etc. that have not been "
"handled already in an ``_input()`` callback or in a user interface "
"component. You want to use it for gameplay input in general. The "
"``_input()`` callback allows you to intercept and process input events "
"before ``_unhandled_input()`` gets them."
msgstr ""
"Ще дві важливі вбудовані функції зворотного виклику вузла: :ref:`Node."
"_unhandled_input() <class_Node_private_method__unhandled_input>` і :ref:"
"`Node._input() <class_Node_private_method__input>`, які ви використовуєте як "
"для отримання, так і для обробки окремих вхідних подій. Метод "
"``_unhandled_input()`` отримує кожне натискання клавіші, клацання мишею "
"тощо, які ще не були оброблені у зворотному виклику ``_input()`` або в "
"компоненті інтерфейсу користувача. Ви хочете використовувати його для "
"введення в ігровий процес загалом. Зворотний виклик ``_input()`` дозволяє "
"вам перехоплювати та обробляти події введення до того, як "
"``_unhandled_input()`` їх отримає."

msgid ""
"To learn more about inputs in Godot, see the :ref:`Input section <toc-learn-"
"features-inputs>`."
msgstr ""
"Щоб дізнатися більше про введення в Godot, перегляньте :ref:`розділ введення "
"<toc-learn-features-inputs>`."

msgid ""
"There are some more overridable functions like :ref:`Node."
"_get_configuration_warnings() "
"<class_Node_private_method__get_configuration_warnings>`. Specialized node "
"types provide more callbacks like :ref:`CanvasItem._draw() "
"<class_CanvasItem_private_method__draw>` to draw programmatically or :ref:"
"`Control._gui_input() <class_Control_private_method__gui_input>` to handle "
"clicks and input on UI elements."
msgstr ""
"Є ще деякі функції, які можна замінити, наприклад :ref:`Node."
"_get_configuration_warnings() "
"<class_Node_private_method__get_configuration_warnings>`. Спеціалізовані "
"типи вузлів забезпечують більше зворотних викликів, наприклад :ref:"
"`CanvasItem._draw() <class_CanvasItem_private_method__draw>` для програмного "
"малювання або :ref:`Control._gui_input() "
"<class_Control_private_method__gui_input>` для обробки клацань і введення в "
"елементи інтерфейсу користувача."
