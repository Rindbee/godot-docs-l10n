#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "C# basics"
msgstr "Основи C#"

msgid "Introduction"
msgstr "Вступ"

msgid ""
"This page provides a brief introduction to C#, both what it is and how to "
"use it in Godot. Afterwards, you may want to look at :ref:`how to use "
"specific features <doc_c_sharp_features>`, read about the :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>`, and "
"(re)visit the :ref:`Scripting section <doc_scripting>` of the step-by-step "
"tutorial."
msgstr ""
"Ця сторінка містить короткий вступ до C#, як це таке, так і як його "
"використовувати в Godot. Після цього ви можете переглянути :ref:`how to use "
"specific features <doc_c_sharp_features>`, читати про :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>`, і (знову) "
"відвідайте :ref:`Scripting section <doc_scripting>` покрокового посібника."

msgid ""
"C# is a high-level programming language developed by Microsoft. In Godot, it "
"is implemented with .NET 8.0."
msgstr ""
"C# — мова програмування високого рівня, розроблена Microsoft. У Godot це "
"реалізовано за допомогою .NET 8.0."

msgid ""
"Projects written in C# using Godot 4 currently cannot be exported to the web "
"platform. To use C# on the web platform, consider Godot 3 instead. Android "
"and iOS platform support is available as of Godot 4.2, but is experimental "
"and :ref:`some limitations apply <doc_c_sharp_platforms>`."
msgstr ""
"Проекти, написані на C# з використанням Godot 4, наразі не можна "
"експортувати на веб-платформу. Щоб використовувати C# на веб-платформі, "
"розгляньте Godot 3. Підтримка платформ Android та iOS доступна з Godot 4.2, "
"але є експериментальною та :ref:`some limitations apply "
"<doc_c_sharp_platforms>`."

msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If you "
"aren't already familiar with its syntax or features, see the `Microsoft C# "
"guide <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ or look for a "
"suitable introduction elsewhere."
msgstr ""
"Це **не** повномасштабний підручник з мови C#. Якщо ви ще не знайомі з її "
"синтаксисом, або можливостями, перегляньте `посібник Microsoft C# <https://"
"docs.microsoft.com/en-us/dotnet/csharp/index>`_ або знайдіть відповідний "
"вступ у іншому місці."

msgid "Prerequisites"
msgstr "Передумови"

msgid ""
"Godot bundles the parts of .NET needed to run already compiled games. "
"However, Godot does not bundle the tools required to build and compile "
"games, such as MSBuild and the C# compiler. These are included in the .NET "
"SDK, and need to be installed separately."
msgstr ""
"Godot об’єднує частини .NET, необхідні для запуску вже скомпільованих ігор. "
"Однак Godot не містить інструментів, необхідних для створення та компіляції "
"ігор, таких як MSBuild і компілятор C#. Вони входять до .NET SDK і їх "
"потрібно інсталювати окремо."

msgid ""
"In summary, you must have installed the .NET SDK **and** the .NET-enabled "
"version of Godot."
msgstr ""
"Підсумовуючи, ви повинні інсталювати .NET SDK **і** версію Godot із "
"підтримкою .NET."

msgid ""
"Download and install the latest stable version of the SDK from the `.NET "
"download page <https://dotnet.microsoft.com/download>`__."
msgstr ""
"Завантажте та встановіть останню стабільну версію SDK зі сторінки "
"завантаження `.NET <https://dotnet.microsoft.com/download>`__."

msgid ""
"Be sure to install the 64-bit version of the SDK(s) if you are using the 64-"
"bit version of Godot."
msgstr ""
"Обов’язково встановіть 64-бітну версію SDK, якщо ви використовуєте 64-бітну "
"версію Godot."

msgid ""
"If you are building Godot from source, make sure to follow the steps to "
"enable .NET support in your build as outlined in "
"the :ref:`doc_compiling_with_dotnet` page."
msgstr ""
"Якщо ви створюєте Godot із вихідного коду, обов’язково виконайте кроки, щоб "
"увімкнути підтримку .NET у своїй збірці, як описано на "
"сторінці :ref:`doc_compiling_with_dotnet`."

msgid "Configuring an external editor"
msgstr "Налаштування зовнішнього редактора"

msgid "Visual Studio 2022"
msgstr "Visual Studio 2022"

msgid "Visual Studio Code"
msgstr "Visual Studio або VS Code"

msgid "MonoDevelop"
msgstr "MonoDevelop"

msgid "Visual Studio for Mac"
msgstr "Visual Studio для Mac"

msgid "JetBrains Rider"
msgstr "JetBrains Райдер"

msgid "See the following sections for how to configure an external editor:"
msgstr ""
"Перегляньте наступні розділи, щоб дізнатися, як налаштувати зовнішній "
"редактор:"

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."
msgstr ""
"Прочитавши розділ \"Передумови\", ви можете завантажити та встановити "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."

msgid "In Godot's **Editor → Editor Settings** menu:"
msgstr "В меню Godot **Редактор → Параметри редактора**:"

msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **JetBrains Rider**."
msgstr ""
"Установіть **Dotnet** -> **Редактор** -> **Зовнішній редактор** на "
"**JetBrains Rider**."

msgid "In Rider:"
msgstr "В Rider:"

msgid "Set **MSBuild version** to **.NET Core**."
msgstr "Встановіть **MSBuild version** на **.NET Core**."

msgid ""
"If you are using a Rider version below 2024.2, install the **Godot support** "
"plugin. This functionality is now built into Rider."
msgstr ""
"Якщо ви використовуєте версію Rider нижче 2024.2, установіть плагін "
"**підтримка Godot**. Ця функція тепер вбудована в Rider."

msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`Visual Studio Code <https://code.visualstudio.com/download>`__ (aka VS "
"Code)."
msgstr ""
"Прочитавши розділ \"Передумови\", ви можете завантажити та встановити "
"`Visual Studio Code <https://code.visualstudio.com/download>`__ (він же VS "
"Code)."

msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **Visual Studio "
"Code**."
msgstr ""
"Установіть для **Dotnet** -> **Редактор** -> **Зовнішній редактор** значення "
"**Visual Studio Code**."

msgid "In Visual Studio Code:"
msgstr "В Visual Studio Code:"

msgid ""
"Install the `C# <https://marketplace.visualstudio.com/items?itemName=ms-"
"dotnettools.csharp>`__ extension."
msgstr ""
"Встановіть розширення `C# <https://marketplace.visualstudio.com/items?"
"itemName=ms-dotnettools.csharp>`__."

msgid ""
"To configure a project for debugging, you need a ``tasks.json`` and "
"``launch.json`` file in the ``.vscode`` folder with the necessary "
"configuration."
msgstr ""
"Щоб налаштувати проект для налагодження, вам знадобляться файли "
"``tasks.json`` і ``launch.json`` у папці ``.vscode`` з необхідною "
"конфігурацією."

msgid "Here is an example ``launch.json``:"
msgstr "Ось приклад ``launch.json``:"

msgid ""
"For this launch configuration to work, you need to either setup a GODOT4 "
"environment variable that points to the Godot executable, or replace "
"``program`` parameter with the path to the Godot executable."
msgstr ""
"Щоб ця конфігурація запуску працювала, вам потрібно або налаштувати змінну "
"середовища GODOT4, яка вказує на виконуваний файл Godot, або замінити "
"параметр ``program`` на шлях до виконуваного файлу Godot."

msgid "Here is an example ``tasks.json``:"
msgstr "Ось приклад ``tasks.json``:"

msgid ""
"Now, when you start the debugger in Visual Studio Code, your Godot project "
"will run."
msgstr ""
"Тепер, коли ви запускаєте налагоджувач у Visual Studio Code, ваш проект "
"Godot запускатиметься."

msgid "Visual Studio (Windows only)"
msgstr "Visual Studio (тільки Windows)"

msgid ""
"Download and install the latest version of `Visual Studio <https://"
"visualstudio.microsoft.com/downloads/>`__. Visual Studio will include the "
"required SDKs if you have the correct workloads selected, so you don't need "
"to manually install the things listed in the \"Prerequisites\" section."
msgstr ""
"Завантажте та встановіть останню версію `Visual Studio <https://"
"visualstudio.microsoft.com/downloads/>`__. Visual Studio включатиме "
"необхідні пакети SDK, якщо ви вибрали правильні робочі навантаження, тому "
"вам не потрібно вручну встановлювати речі, перелічені в розділі "
"\"Передумови\"."

msgid "While installing Visual Studio, select this workload:"
msgstr "Під час інсталяції Visual Studio виберіть таке робоче навантаження:"

msgid ".NET desktop development"
msgstr "Розробка робочого столу .NET"

msgid ""
"Set **Dotnet** -> **Editor** -> **External Editor** to **Visual Studio**."
msgstr ""
"Установіть **Dotnet** -> **Редактор** -> **Зовнішній редактор** на **Visual "
"Studio**."

msgid ""
"If you see an error like \"Unable to find package Godot.NET.Sdk\", your "
"NuGet configuration may be incorrect and need to be fixed."
msgstr ""
"Якщо ви бачите помилку на зразок «Не вдається знайти пакет Godot.NET.Sdk», "
"можливо, ваша конфігурація NuGet неправильна та її потрібно виправити."

msgid ""
"A simple way to fix the NuGet configuration file is to regenerate it. In a "
"file explorer window, go to ``%AppData%\\NuGet``. Rename or delete the "
"``NuGet.Config`` file. When you build your Godot project again, the file "
"will be automatically created with default values."
msgstr ""
"Простий спосіб виправити файл конфігурації NuGet — це повторно створити "
"його. У вікні провідника файлів перейдіть до ``%AppData%\\NuGet``. "
"Перейменуйте або видаліть файл ``NuGet.Config``. Коли ви знову створите свій "
"проект Godot, файл буде автоматично створено зі значеннями за замовчуванням."

msgid ""
"To debug your C# scripts using Visual Studio, open the .sln file that is "
"generated after opening the first C# script in the editor. In the **Debug** "
"menu, go to the **Debug Properties** menu item for your project. Click the "
"**Create a new profile** button and choose **Executable**. In the "
"**Executable** field, browse to the path of the C# version of the Godot "
"editor, or type ``%GODOT4%`` if you have created an environment variable for "
"the Godot executable path. It must be the path to the main Godot executable, "
"not the 'console' version. For the **Working Directory**, type a single "
"period, ``.``, meaning the current directory. Also check the **Enable native "
"code debugging** checkbox. You may now close this window, click downward "
"arrow on the debug profile dropdown, and select your new launch profile. Hit "
"the green start button, and your game will begin playing in debug mode."
msgstr ""
"Щоб налагодити сценарії C# за допомогою Visual Studio, відкрийте файл .sln, "
"який створюється після відкриття першого сценарію C# у редакторі. У меню "
"**Debug** перейдіть до пункту меню **Debug Properties** для вашого проекту. "
"Натисніть кнопку **Створити новий профіль** і виберіть **Виконуваний файл**. "
"У полі **Виконуваний файл** знайдіть шлях до C# версії редактора Godot або "
"введіть ``%GODOT4%``, якщо ви створили змінну середовища для шляху до "
"виконуваного файлу Godot. Це має бути шлях до основного виконуваного файлу "
"Godot, а не «консольної» версії. Для **Робочого каталогу** введіть одну "
"крапку, ``.``, що означає поточний каталог. Також установіть прапорець "
"**Увімкнути налагодження рідного коду**. Тепер ви можете закрити це вікно, "
"клацнути стрілку вниз у спадному списку профілю налагодження та вибрати "
"новий профіль запуску. Натисніть зелену кнопку «Пуск», і ваша гра почне "
"грати в режимі налагодження."

msgid "Creating a C# script"
msgstr "Створення скрипту C#"

msgid ""
"After you successfully set up C# for Godot, you should see the following "
"option when selecting **Attach Script** in the context menu of a node in "
"your scene:"
msgstr ""
"Після того, як ви успішно налаштували C# для Godot, ви повинні побачити "
"наступну опцію при виборі **Attach Script** у контекстному меню вузла на "
"вашій сцені:"

msgid ""
"Note that while some specifics change, most concepts work the same when "
"using C# for scripting. If you're new to Godot, you may want to follow the "
"tutorials on :ref:`doc_scripting` at this point. While some documentation "
"pages still lack C# examples, most notions can be transferred from GDScript."
msgstr ""
"Зауважте, що хоча деякі особливості змінюються, більшість концепцій працюють "
"однаково при використанні C# для створення сценаріїв. Якщо ви новачок у "
"роботі з Godot, можливо, ви захочете прочитати підручники "
"з :ref:`doc_scripting` на цьому етапі. Хоча на деяких сторінках документації "
"все ще відсутні приклади C#, більшість понять можна перенести з GDScript."

msgid "Project setup and workflow"
msgstr "Налаштування проєкту та робочий процес"

msgid ""
"When you create the first C# script, Godot initializes the C# project files "
"for your Godot project. This includes generating a C# solution (``.sln``) "
"and a project file (``.csproj``), as well as some utility files and folders "
"(``.godot/mono``). All of these but ``.godot/mono`` are important and should "
"be committed to your version control system. Everything under ``.godot`` can "
"be safely added to the ignore list of your VCS. When troubleshooting, it can "
"sometimes help to delete the ``.godot/mono`` folder and let it regenerate."
msgstr ""
"Коли ви створюєте перший сценарій C#, Godot ініціалізує файли проекту C# для "
"вашого проекту Godot. Це включає створення рішення C# (``.sln``) і файлу "
"проекту (``.csproj``), а також деяких службових файлів і папок (``.godot/"
"mono``). Усе це, крім ``.godot/mono``, є важливим і має бути додано до вашої "
"системи контролю версій. Усе, що міститься в ``.godot``, можна безпечно "
"додати до списку ігнорування вашого VCS. Під час усунення несправностей "
"іноді може допомогти видалити папку ``.godot/mono`` і дати їй відновитися."

msgid "Example"
msgstr "Приклад"

msgid ""
"Here's a blank C# script with some comments to demonstrate how it works."
msgstr ""
"Ось порожній скрипт C# з деякими коментарями, щоб продемонструвати, як він "
"працює."

msgid ""
"As you can see, functions normally in global scope in GDScript like Godot's "
"``print`` function are available in the ``GD`` static class which is part of "
"the ``Godot`` namespace. For a full list of methods in the ``GD`` class, see "
"the class reference pages for :ref:`@GDScript <class_@gdscript>` "
"and :ref:`@GlobalScope <class_@globalscope>`."
msgstr ""
"Як ви можете бачити, функції, які зазвичай знаходяться в глобальній області "
"видимості в GDScript, як-от функція Godot ``print``, доступні в статичному "
"класі ``GD``, який є частиною простору імен ``Godot``. Щоб отримати повний "
"список методів у класі ``GD``, перегляньте довідкові сторінки класів "
"для :ref:`@GDScript <class_@gdscript>` і :ref:`@GlobalScope "
"<class_@globalscope>`."

msgid ""
"Keep in mind that the class you wish to attach to your node should have the "
"same name as the ``.cs`` file. Otherwise, you will get the following error:"
msgstr ""
"Майте на увазі, що клас, який ви хочете приєднати до вашого вузла, повинен "
"мати ту саму назву, що й файл ``.cs``. В іншому випадку ви отримаєте "
"наступну помилку:"

msgid "*\"Cannot find class XXX for script res://XXX.cs\"*"
msgstr "*\"Не вдається знайти клас XXX для сценарію res://XXX.cs\"*"

msgid "General differences between C# and GDScript"
msgstr "Основні відмінності між C# і GDScript"

msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++. "
"Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is "
"reasonably possible."
msgstr ""
"API C# використовує ``PascalCase`` замість ``snake_case`` в GDScript/C ++. "
"Там де можливо, поля та гетери/сетери були перетворені у властивості. "
"Взагалі API C# Godot прагне бути максимально ідіоматичним, наскільки це "
"можливо."

msgid "For more information, see the :ref:`doc_c_sharp_differences` page."
msgstr ""
"Для отримання додаткової інформації дивіться "
"сторінку :ref:`doc_c_sharp_differences`."

msgid ""
"You need to (re)build the project assemblies whenever you want to see new "
"exported variables or signals in the editor. This build can be manually "
"triggered by clicking the **Build** button in the top right corner of the "
"editor."
msgstr ""
"Вам потрібно (пере)збирати збірки проекту щоразу, коли ви хочете побачити "
"нові експортовані змінні або сигнали в редакторі. Цю збірку можна запустити "
"вручну, натиснувши кнопку **Build** у верхньому правому куті редактора."

msgid ""
"You will also need to rebuild the project assemblies to apply changes in "
"\"tool\" scripts."
msgstr ""
"Вам також потрібно буде перезбирувати збірки проєктів, щоб застосувати зміни "
"в скриптах \"інструментів\"."

msgid "Current gotchas and known issues"
msgstr "Поточні обмеження та відомі проблеми"

msgid ""
"As C# support is quite new in Godot, there are some growing pains and things "
"that need to be ironed out. Below is a list of the most important issues you "
"should be aware of when diving into C# in Godot, but if in doubt, also take "
"a look over the official `issue tracker for .NET issues <https://github.com/"
"godotengine/godot/labels/topic%3Adotnet>`_."
msgstr ""
"Оскільки підтримка C# є досить новою для Godot, є деякі проблеми росту та "
"речі, які потрібно виправити. Нижче наведено список найважливіших проблем, "
"про які вам слід знати, коли занурюєтеся в C# у Godot, але якщо "
"сумніваєтеся, також перегляньте офіційний `засіб відстеження проблем для "
"проблем .NET <https://github.com/godotengine/godot/labels/topic%3Adotnet>`_."

msgid ""
"Writing editor plugins is possible, but it is currently quite convoluted."
msgstr "Написання плагінів редактора можливе, але наразі це досить складно."

msgid ""
"State is currently not saved and restored when hot-reloading, with the "
"exception of exported variables."
msgstr ""
"Наразі стан не зберігається та не відновлюється під час гарячого "
"перезавантаження, за винятком експортованих змінних."

msgid ""
"Attached C# scripts should refer to a class that has a class name that "
"matches the file name."
msgstr ""
"Вкладені скрипти C# повинні стосуватися класу, який має ім'я класу, яке "
"відповідає імені файлу."

msgid ""
"There are some methods such as ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` and signal connection method ``Connect()`` that rely on "
"Godot's ``snake_case`` API naming conventions. So when using e.g. "
"``CallDeferred(\"AddChild\")``, ``AddChild`` will not work because the API "
"is expecting the original ``snake_case`` version ``add_child``. However, you "
"can use any custom properties or methods without this limitation. Prefer "
"using the exposed ``StringName`` in the ``PropertyName``, ``MethodName`` and "
"``SignalName`` to avoid extra ``StringName`` allocations and worrying about "
"snake_case naming."
msgstr ""
"Існують деякі методи, такі як ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` і метод з'єднання сигналів ``Connect()``, які "
"покладаються на умови іменування API Godot ``snake_case``. Тому при "
"використанні, наприклад ``CallDeferred(\"AddChild\")``, ``AddChild`` не буде "
"працювати, оскільки API очікує версію ``snake_case``, тобто ``add_child``. "
"Однак ви можете використовувати будь-які власні властивості, або методи, без "
"цього обмеження."

msgid ""
"As of Godot 4.0, exporting .NET projects is supported for desktop platforms "
"(Linux, Windows and macOS). Other platforms will gain support in future 4.x "
"releases."
msgstr ""
"Починаючи з Godot 4.0, експорт проектів .NET підтримується для настільних "
"платформ (Linux, Windows і macOS). Інші платформи отримають підтримку в "
"майбутніх версіях 4.x."

msgid "Common pitfalls"
msgstr "Поширені підводні камені"

msgid ""
"You might encounter the following error when trying to modify some values in "
"Godot objects, e.g. when trying to change the X coordinate of a ``Node2D``:"
msgstr ""
"Ви можете зіткнутися з такою помилкою під час спроби змінити деякі значення "
"в об’єктах Godot, напр. під час спроби змінити координату X ``Node2D``:"

msgid ""
"This is perfectly normal. Structs (in this example, a ``Vector2``) in C# are "
"copied on assignment, meaning that when you retrieve such an object from a "
"property or an indexer, you get a copy of it, not the object itself. "
"Modifying said copy without reassigning it afterwards won't achieve anything."
msgstr ""
"Це абсолютно нормально. Структури (у цьому прикладі ``Vector2``) у C# "
"копіюються під час призначення, тобто коли ви отримуєте такий об’єкт із "
"властивості чи індексатора, ви отримуєте його копію, а не сам об’єкт. Зміна "
"зазначеної копії без її повторного призначення згода нічого не досягне."

msgid ""
"The workaround is simple: retrieve the entire struct, modify the value you "
"want to modify, and reassign the property."
msgstr ""
"Обхід простий: отримайте всю структуру, змініть значення, яке потрібно "
"змінити, і повторно призначте властивість."

msgid ""
"Since C# 10, it is also possible to use `with expressions <https://"
"learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/with-"
"expression>`_ on structs, allowing you to do the same thing in a single line."
msgstr ""
"Починаючи з C# 10, також можна використовувати `with expressions <https://"
"learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/with-"
"expression>`_ на структурах, дозволяючи вам зробити те саме в одному рядку."

msgid ""
"You can read more about this error on the `C# language reference <https://"
"learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/"
"cs1612>`_."
msgstr ""
"Ви можете прочитати більше про цю помилку в `довіднику з мови C# <https://"
"learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/"
"cs1612>`_."

msgid "Performance of C# in Godot"
msgstr "Продуктивність C# у Godot"

msgid ""
"For a performance comparison of the languages Godot supports, "
"see :ref:`doc_faq_which_programming_language_is_fastest`."
msgstr ""
"Для порівняння продуктивності мов, які підтримує Godot, "
"див. :ref:`doc_faq_which_programming_language_is_fastest`."

msgid ""
"Most properties of Godot C# objects that are based on ``GodotObject`` (e.g. "
"any ``Node`` like ``Control`` or ``Node3D`` like ``Camera3D``) require "
"native (interop) calls as they talk to Godot's C++ core. Consider assigning "
"values of such properties into a local variable if you need to modify or "
"read them multiple times at a single code location:"
msgstr ""
"Більшість властивостей об’єктів Godot C#, які базуються на ``GodotObject`` "
"(наприклад, будь-який ``Node``, як-от ``Control`` або ``Node3D``, як-от "
"``Camera3D``), потребують власних викликів (взаємодія), оскільки вони "
"поговорити з ядром C++ Godot. Розгляньте можливість призначення значень "
"таких властивостей локальній змінній, якщо вам потрібно змінити або "
"прочитати їх кілька разів в одному місці коду:"

msgid ""
"Passing raw arrays (such as ``byte[]``) or ``string`` to Godot's C# API "
"requires marshalling which is comparatively pricey."
msgstr ""
"Передача необроблених масивів (таких як ``byte[]``) або ``string`` до C# API "
"Godot вимагає маршалінгу, який є порівняно дорогим."

msgid ""
"The implicit conversion from ``string`` to ``NodePath`` or ``StringName`` "
"incur both the native interop and marshalling costs as the ``string`` has to "
"be marshalled and passed to the respective native constructor."
msgstr ""
"Неявне перетворення з ``string`` на ``NodePath`` або ``StringName`` "
"спричиняє витрати як на власне взаємодія, так і на маршалінг, оскільки "
"``string`` потрібно маршалізувати та передати відповідному рідному "
"конструктору."

msgid "Using NuGet packages in Godot"
msgstr "Використання пакетів Nuget у Godot"

msgid ""
"`NuGet <https://www.nuget.org/>`_ packages can be installed and used with "
"Godot, as with any C# project. Many IDEs are able to add packages directly. "
"They can also be added manually by adding the package reference in the "
"``.csproj`` file located in the project root:"
msgstr ""
"Пакети `NuGet <https://www.nuget.org/>`_ можна встановлювати та "
"використовувати з Godot, як і будь-який проєкт C#. Багато IDE можуть "
"додавати пакети безпосередньо. Їх також можна додати вручну, додавши "
"посилання на пакет у файл ``.csproj``, що знаходиться в корені проєкту:"

msgid ""
"As of Godot 3.2.3, Godot automatically downloads and sets up newly added "
"NuGet packages the next time it builds the project."
msgstr ""
"Від Godot 3.2.3, Godot автоматично завантажує та налаштовує нещодавно додані "
"пакети NuGet під час наступного створення проєкту."

msgid "Profiling your C# code"
msgstr "Профілювання коду C #"

msgid ""
"The following tools may be used for performance and memory profiling of your "
"managed code:"
msgstr ""
"Для профілювання продуктивності та пам’яті вашого керованого коду можна "
"використовувати такі інструменти:"

msgid "JetBrains Rider with dotTrace/dotMemory plugin."
msgstr "JetBrains Rider із плагіном dotTrace/dotMemory."

msgid "Standalone JetBrains dotTrace/dotMemory."
msgstr "Автономний JetBrains dotTrace/dotMemory."

msgid "Visual Studio."
msgstr "Візуальна Studio."

msgid ""
"Profiling managed and unmanaged code at once is possible with both JetBrains "
"tools and Visual Studio, but limited to Windows."
msgstr ""
"Профілювання керованого та некерованого коду одночасно можливе за допомогою "
"інструментів JetBrains і Visual Studio, але обмежено Windows."
