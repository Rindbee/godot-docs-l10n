#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript style guide"
msgstr "Посібник зі стилю GDScript"

msgid ""
"This style guide lists conventions to write elegant GDScript. The goal is to "
"encourage writing clean, readable code and promote consistency across "
"projects, discussions, and tutorials. Hopefully, this will also support the "
"development of auto-formatting tools."
msgstr ""
"У цьому посібнику зі стилю перелічені умовні домовленості для написання "
"елегантного коду GDScript. Мета посібника - заохотити писати чистий, "
"читабельний код та сприяти узгодженню між проєктами, дискусіями та "
"навчальними матеріалами. Сподіваємось, це також підтримає розробку "
"інструментів автоматичного форматування."

msgid ""
"Since GDScript is close to Python, this guide is inspired by Python's `PEP 8 "
"<https://www.python.org/dev/peps/pep-0008/>`__ programming style guide."
msgstr ""
"Оскільки GDScript близький до Python, цей посібник брав за зразок посібник "
"зі стилю програмування Python `PEP 8 <https://www.python.org/dev/peps/"
"pep-0008/>`__."

msgid ""
"Style guides aren't meant as hard rulebooks. At times, you may not be able "
"to apply some of the guidelines below. When that happens, use your best "
"judgment, and ask fellow developers for insights."
msgstr ""
"Посібники зі стилів не розглядаються як жорсткі правила. Часом ви не зможете "
"застосувати деякі наведені нижче вказівки. Коли це станеться, використовуйте "
"найкраще рішення та запитайте в колег-розробників їх думку."

msgid ""
"In general, keeping your code consistent in your projects and within your "
"team is more important than following this guide to a tee."
msgstr ""
"Загалом, стабільне дотримання визначеного стилю у ваших проєктах, та серед "
"вашої команди, важливіше, ніж дотримання цього посібника."

msgid ""
"Godot's built-in script editor uses a lot of these conventions by default. "
"Let it help you."
msgstr ""
"Вбудований в Godot редактор скриптів використовує багато цих умов за "
"замовчуванням. Нехай це вам допоможе."

msgid "Here is a complete class example based on these guidelines:"
msgstr "Ось повний приклад класу на основі цих вказівок:"

msgid "Formatting"
msgstr "Форматування"

msgid "Encoding and special characters"
msgstr "Кодування та спеціальні символи"

msgid ""
"Use line feed (**LF**) characters to break lines, not CRLF or CR. *(editor "
"default)*"
msgstr ""
"Використовуйте символи зміни рядка (**LF**) для переривання рядків, не CRLF, "
"чи CR. *(за замовчуванням редактора)*"

msgid "Use one line feed character at the end of each file. *(editor default)*"
msgstr ""
"Використовуйте символи зміни рядка в кінці кожного файлу. *(за замовчуванням "
"редактора*)"

msgid ""
"Use **UTF-8** encoding without a `byte order mark <https://en.wikipedia.org/"
"wiki/Byte_order_mark>`_. *(editor default)*"
msgstr ""
"Використовуйте кодування **UTF-8** без `маркера порядку байтів <https://"
"en.wikipedia.org/wiki/Byte_order_mark>`_. *(за замовчування редактора)*"

msgid "Use **Tabs** instead of spaces for indentation. *(editor default)*"
msgstr ""
"Використовуйте для відступів **Tab** замість пробілів. *(за замовчуванням "
"редактора)*"

msgid "Indentation"
msgstr "Відступ"

msgid "Each indent level should be one greater than the block containing it."
msgstr ""
"Кожен рівень відступу повинен бути на один відступ більшим, ніж блок, що "
"містить його."

msgid "**Good**:"
msgstr "**Правильно**:"

msgid "**Bad**:"
msgstr "**Неправильно**:"

msgid ""
"Use 2 indent levels to distinguish continuation lines from regular code "
"blocks."
msgstr ""
"Використовуйте 2 відступи, щоб відрізнити рядки продовження від звичайних "
"блоків коду."

msgid ""
"Exceptions to this rule are arrays, dictionaries, and enums. Use a single "
"indentation level to distinguish continuation lines:"
msgstr ""
"Виняток із цього правила - це масиви, словники та перерахунки. "
"Використовуйте один відступ, щоб виділити рядки продовження:"

msgid "Trailing comma"
msgstr "Заключна кома"

msgid ""
"Use a trailing comma on the last line in arrays, dictionaries, and enums. "
"This results in easier refactoring and better diffs in version control as "
"the last line doesn't need to be modified when adding new elements."
msgstr ""
"Використовуйте заключну кому в останньому рядку в масивах, словниках та "
"перерахунках. Це спрощує рефакторинг та покращення в пізніших версіях, "
"оскільки останній рядок не потрібно змінювати при додаванні нових елементів."

msgid ""
"Trailing commas are unnecessary in single-line lists, so don't add them in "
"this case."
msgstr ""
"У однорядкових списках заключні коми не потрібні, тому не додавайте їх у "
"цьому випадку."

msgid "Blank lines"
msgstr "Порожні рядки"

msgid "Surround functions and class definitions with two blank lines:"
msgstr "Використовуйте по два порожніх рядка між функціями та класами:"

msgid "Use one blank line inside functions to separate logical sections."
msgstr ""
"Використовуйте один порожній рядок всередині функцій для розділення логічних "
"блоків."

msgid ""
"We use a single line between classes and function definitions in the class "
"reference and in short code snippets in this documentation."
msgstr ""
"Ми використовуємо один рядок між класами та визначеннями функцій у довідці "
"про клас і в коротких фрагментах коду в цій документації."

msgid "Line length"
msgstr "Довжина рядка"

msgid "Keep individual lines of code under 100 characters."
msgstr "Зберігайте в окремих рядках коду не більше 100 символів."

msgid ""
"If you can, try to keep lines under 80 characters. This helps to read the "
"code on small displays and with two scripts opened side-by-side in an "
"external text editor. For example, when looking at a differential revision."
msgstr ""
"Якщо можете, спробуйте тримати в рядках не більше 80 символів. Це допомагає "
"читати код на невеликих дисплеях та з двома скриптами, відкритими поруч у "
"зовнішньому текстовому редакторі. Наприклад, щоб переглянути на наявність "
"різниці."

msgid "One statement per line"
msgstr "Одне твердження на рядок"

msgid ""
"Avoid combining multiple statements on a single line, including conditional "
"statements, to adhere to the GDScript style guidelines for readability."
msgstr ""
"Уникайте поєднання кількох операторів в одному рядку, включаючи умовні "
"оператори, щоб дотримуватися вказівок щодо стилю GDScript щодо зручності "
"читання."

msgid "The only exception to that rule is the ternary operator:"
msgstr "Єдиним винятком із цього правила є потрійний оператор:"

msgid "Format multiline statements for readability"
msgstr "Відформатуйте багаторядкові оператори для зручності читання"

msgid ""
"When you have particularly long ``if`` statements or nested ternary "
"expressions, wrapping them over multiple lines improves readability. Since "
"continuation lines are still part of the same expression, 2 indent levels "
"should be used instead of one."
msgstr ""
"Якщо у вас є особливо довгі оператори «if» або вкладені потрійні вирази, "
"розгортання їх у кілька рядків покращує читабельність. Оскільки рядки "
"продовження все ще є частиною того самого виразу, слід використовувати 2 "
"рівні відступу замість одного."

msgid ""
"GDScript allows wrapping statements using multiple lines using parentheses "
"or backslashes. Parentheses are favored in this style guide since they make "
"for easier refactoring. With backslashes, you have to ensure that the last "
"line never contains a backslash at the end. With parentheses, you don't have "
"to worry about the last line having a backslash at the end."
msgstr ""
"GDScript дозволяє обгортати оператори з використанням кількох рядків за "
"допомогою дужок або зворотних скісних риск. У цьому посібнику зі стилю "
"надається перевага дужкам, оскільки вони спрощують рефакторинг. Зі "
"зворотними скісними рисами ви повинні переконатися, що останній рядок ніколи "
"не містить зворотної скісної риски в кінці. З дужками вам не доведеться "
"турбуватися про те, що в кінці останнього рядка є зворотна коса риска."

msgid ""
"When wrapping a conditional expression over multiple lines, the ``and``/"
"``or`` keywords should be placed at the beginning of the line continuation, "
"not at the end of the previous line."
msgstr ""
"Коли умовний вираз розміщується на кількох рядках, ключові слова ``and``/"
"``or`` слід розміщувати на початку продовження рядка, а не в кінці "
"попереднього рядка."

msgid "Avoid unnecessary parentheses"
msgstr "Уникайте непотрібних дужок"

msgid ""
"Avoid parentheses in expressions and conditional statements. Unless "
"necessary for order of operations or wrapping over multiple lines, they only "
"reduce readability."
msgstr ""
"Уникайте дужок у виразах та умовних операторах. Якщо вони не потрібні для "
"порядку операцій або перенесення на кілька рядків, вони лише погіршують "
"читабельність."

msgid "Boolean operators"
msgstr "Логічні (булеві) оператори"

msgid ""
"Prefer the plain English versions of boolean operators, as they are the most "
"accessible:"
msgstr ""
"Віддавайте перевагу звичайним англійським версіям логічних операторів, "
"оскільки вони є найбільш зручними:"

msgid "Use ``and`` instead of ``&&``."
msgstr "Використовуйте ``and`` замість ``&&``."

msgid "Use ``or`` instead of ``||``."
msgstr "Використовуйте ``or`` замість ``||``."

msgid "Use ``not`` instead of ``!``."
msgstr "Використовуйте ``not`` замість ``!``."

msgid ""
"You may also use parentheses around boolean operators to clear any "
"ambiguity. This can make long expressions easier to read."
msgstr ""
"Ви також можете використовувати дужки навколо логічних операторів, щоб "
"уникнути будь-якої неоднозначності. Це може полегшити читання довгих виразів."

msgid "Comment spacing"
msgstr "Пробіл коментаря"

msgid ""
"Regular comments (``#``) and documentation comments (``##``) should start "
"with a space, but not code that you comment out. Additionally, code region "
"comments (``#region``/``#endregion``) must follow that precise syntax, so "
"they should not start with a space."
msgstr ""
"Звичайні коментарі (``#``) і коментарі до документації (``##``) мають "
"починатися з пробілу, але не з коду, який ви коментуєте. Крім того, "
"коментарі регіону коду (``#region``/``#endregion``) мають відповідати цьому "
"точному синтаксису, тому вони не повинні починатися з пробілу."

msgid ""
"Using a space for regular and documentation comments helps differentiate "
"text comments from disabled code."
msgstr ""
"Використання місця для звичайних коментарів і коментарів до документації "
"допомагає відрізнити текстові коментарі від вимкненого коду."

msgid ""
"In the script editor, to toggle commenting of the selected code, "
"press :kbd:`Ctrl + K`. This feature adds/removes a single ``#`` sign before "
"any code on the selected lines."
msgstr ""
"У редакторі сценаріїв, щоб увімкнути коментування вибраного коду, "
"натисніть :kbd:`Ctrl + K`. Ця функція додає/видаляє один знак ``#`` перед "
"будь-яким кодом у вибраних рядках."

msgid "Whitespace"
msgstr "Вільний простір"

msgid ""
"Always use one space around operators and after commas. Also, avoid extra "
"spaces in dictionary references and function calls. One exception to this is "
"for single-line dictionary declarations, where a space should be added after "
"the opening brace and before the closing brace. This makes the dictionary "
"easier to visually distinguish from an array, as the ``[]`` characters look "
"close to ``{}`` with most fonts."
msgstr ""
"Завжди використовуйте один пробіл навколо операторів і після ком. Також "
"уникайте зайвих пробілів у словникових посиланнях і викликах функцій. Єдиний "
"виняток для однорядкових словникових декларацій, де слід додати пробіл після "
"відкриваючої дужки та перед закриваючою дужкою. Завдяки цьому словник легше "
"візуально відрізнити від масиву, оскільки символи ``[]`` виглядають схожими "
"на ``{}`` у більшості шрифтів."

msgid "Don't use spaces to align expressions vertically:"
msgstr "Не використовуйте пробіли для вирівнювання виразів по вертикалі:"

msgid "Quotes"
msgstr "Лапки"

msgid ""
"Use double quotes unless single quotes make it possible to escape fewer "
"characters in a given string. See the examples below:"
msgstr ""
"Використовуйте подвійні лапки, за винятком випадків, коли подвійні лапки "
"треба вивести, як текст, на екрані. Дивіться приклади нижче:"

msgid "Numbers"
msgstr "Числа"

msgid ""
"Don't omit the leading or trailing zero in floating-point numbers. "
"Otherwise, this makes them less readable and harder to distinguish from "
"integers at a glance."
msgstr ""
"Не пропускайте початкові чи кінцеві нулі у десяткових числах. Це робить їх "
"менш читабельними і їх важче відразу відрізнити від цілих чисел."

msgid ""
"Use lowercase for letters in hexadecimal numbers, as their lower height "
"makes the number easier to read."
msgstr ""
"Використовуйте малі літери для літер у шістнадцяткових числах, оскільки їх "
"менша висота полегшує читання числа."

msgid ""
"Take advantage of GDScript's underscores in literals to make large numbers "
"more readable."
msgstr ""
"Скористайтеся підкресленнями GDScript у літералах, щоб зробити великі числа "
"більш читабельними."

msgid "Naming conventions"
msgstr "Конвенції іменування"

msgid ""
"These naming conventions follow the Godot Engine style. Breaking these will "
"make your code clash with the built-in naming conventions, leading to "
"inconsistent code. As a summary table:"
msgstr ""
"Ці домовленості про найменування відповідають стилю Godot Engine. Порушення "
"цих правил призведе до конфлікту вашого коду з вбудованими умовами "
"іменування, що призведе до неузгодженості коду. Як зведену таблицю:"

msgid "Type"
msgstr "Тип"

msgid "Convention"
msgstr "Конвенція"

msgid "Example"
msgstr "Приклад"

msgid "File names"
msgstr "Назви файлів"

msgid "snake_case"
msgstr "snake_case"

msgid "``yaml_parser.gd``"
msgstr "``yaml_parser.gd``"

msgid "Class names"
msgstr "Імена класів"

msgid "PascalCase"
msgstr "PascalCase"

msgid "``class_name YAMLParser``"
msgstr "``class_name YAMLParser``"

msgid "Node names"
msgstr "Імена вузлів"

msgid "``Camera3D``, ``Player``"
msgstr "``Camera3D``, ``Player``"

msgid "Functions"
msgstr "Функції"

msgid "``func load_level():``"
msgstr "``func load_level():``"

msgid "Variables"
msgstr "Змінні"

msgid "``var particle_effect``"
msgstr "``var particle_effect``"

msgid "Signals"
msgstr "Сигнали"

msgid "``signal door_opened``"
msgstr "``signal door_opened``"

msgid "Constants"
msgstr "Константи"

msgid "CONSTANT_CASE"
msgstr "CONSTANT_CASE"

msgid "``const MAX_SPEED = 200``"
msgstr "``const MAX_SPEED = 200``"

msgid "Enum names"
msgstr "Enum names"

msgid "``enum Element``"
msgstr "``enum Element``"

msgid "Enum members"
msgstr "Enum members"

msgid "``{EARTH, WATER, AIR, FIRE}``"
msgstr "``{EARTH, WATER, AIR, FIRE}``"

msgid ""
"Use snake_case for file names. For named classes, convert the PascalCase "
"class name to snake_case::"
msgstr ""
"Використовуйте snake_case (слова маленькими буквами через підкреслення) для "
"імен файлів. Для іменованих класів перетворіть ім’я класу PascalCase "
"(нерозділені слова з великої букви) в snake_case:"

msgid ""
"This is consistent with how C++ files are named in Godot's source code. This "
"also avoids case sensitivity issues that can crop up when exporting a "
"project from Windows to other platforms."
msgstr ""
"Це узгоджується з тим, як файли C++ називаються у вихідному коді Godot. Це "
"також дозволяє уникнути проблем з чутливістю до регістру, які можуть "
"виникнути під час експорту проєкту з Windows на інші платформи."

msgid "Classes and nodes"
msgstr "Класи та вузли"

msgid "Use PascalCase for class and node names:"
msgstr ""
"Використовуйте PascalCase (всі слова разом та з великої букви) для імен "
"класів та вузлів:"

msgid "Also use PascalCase when loading a class into a constant or a variable:"
msgstr ""
"Також використовуйте PascalCase під час завантаження класу в константу чи "
"змінну:"

msgid "Functions and variables"
msgstr "Функції та змінні"

msgid "Use snake\\_case to name functions and variables:"
msgstr ""
"Використовуйте snake\\_case (всі слова з маленької букви відокремлені "
"підкресленням) для назв функцій та змінних:"

msgid ""
"Prepend a single underscore (\\_) to virtual methods functions the user must "
"override, private functions, and private variables:"
msgstr ""
"Додайте одне підкреслення (\\_) до функцій віртуальних методів, якими "
"користувач повинен перекривати, приватні функції та приватні змінні:"

msgid "Use the past tense to name signals:"
msgstr "Давайте сигналам імена в минулому часі:"

msgid "Constants and enums"
msgstr "Константи і перерахунки"

msgid ""
"Write constants with CONSTANT\\_CASE, that is to say in all caps with an "
"underscore (\\_) to separate words:"
msgstr ""
"Записуйте константи в стилі CONSTANT\\_CASE (всі букви написані з великим "
"регістром, слова відокремлені підкресленням (\\_)):"

msgid ""
"Write enums with each item on its own line. This allows adding documentation "
"comments above each item more easily, and also makes for cleaner diffs in "
"version control when items are added or removed."
msgstr ""
"Напишіть переліки з кожним елементом в окремому рядку. Це дозволяє легше "
"додавати коментарі до документації над кожним елементом, а також робить "
"чіткіші відмінності в управлінні версіями, коли елементи додаються або "
"видаляються."

msgid "Code order"
msgstr "Порядок коду"

msgid ""
"This section focuses on code order. For formatting, see :ref:`formatting`. "
"For naming conventions, see :ref:`naming_conventions`."
msgstr ""
"Цей розділ присвячено порядку коду. Для форматування див. :ref:`formatting`. "
"Правила іменування див. :ref:`naming_conventions`."

msgid "We suggest to organize GDScript code this way:"
msgstr "Ми пропонуємо організувати код GDScript таким чином:"

msgid ""
"And put the class methods and variables in the following order depending on "
"their access modifiers:"
msgstr ""
"І розмістіть методи та змінні класу в такому порядку залежно від їх "
"модифікаторів доступу:"

msgid ""
"We optimized the order to make it easy to read the code from top to bottom, "
"to help developers reading the code for the first time understand how it "
"works, and to avoid errors linked to the order of variable declarations."
msgstr ""
"Ми оптимізували порядок, щоб полегшити читання коду зверху вниз, щоб "
"допомогти розробникам, які вперше читають код, зрозуміти, як він працює, та "
"уникнути помилок, пов'язаних із порядком оголошення змінних."

msgid "This code order follows four rules of thumb:"
msgstr "Цей порядок коду відповідає чотирьом правилам:"

msgid "Properties and signals come first, followed by methods."
msgstr "Першими стають властивості та сигнали, а потім - методи."

msgid "Public comes before private."
msgstr "Загальнодоступні йдуть перед приватними."

msgid "Virtual callbacks come before the class's interface."
msgstr "Віртуальні зворотні виклики йдуть перед інтерфейсом класу."

msgid ""
"The object's construction and initialization functions, ``_init`` and "
"``_ready``, come before functions that modify the object at runtime."
msgstr ""
"Конструктори об'єктів та ініціалізації функцій, ``_init`` і ``_ready``, "
"перед функціями, що змінюють об'єкт під час виконання."

msgid "Class declaration"
msgstr "Оголошення класу"

msgid ""
"If the code is meant to run in the editor, place the ``@tool`` annotation on "
"the first line of the script."
msgstr ""
"Якщо код призначений для запуску в редакторі, розмістіть анотацію ``@tool`` "
"у першому рядку сценарію."

msgid "Then, add the ``extends`` keyword if the class extends a built-in type."
msgstr ""
"Потім додайте ключове слово ``extends``, якщо клас розширює вбудований тип."

msgid ""
"Following that, you should have the class's optional :ref:`documentation "
"comments <doc_gdscript_documentation_comments>`. You can use that to explain "
"the role of your class to your teammates, how it works, and how other "
"developers should use it, for example."
msgstr ""
"Після цього ви повинні мати необов’язкові :ref:`documentation comments "
"<doc_gdscript_documentation_comments>` класу. Ви можете використовувати їх, "
"щоб пояснити роль вашого класу своїм товаришам по команді, наприклад, як він "
"працює та як інші розробники повинні його використовувати."

msgid "Signals and properties"
msgstr "Сигнали та властивості"

msgid ""
"Write signal declarations, followed by properties, that is to say, member "
"variables, after the docstring."
msgstr "Записуйте оголошення сигналу, далі властивості, тобто змінні-члени."

msgid ""
"Enums should come after signals, as you can use them as export hints for "
"other properties."
msgstr ""
"Перерахунки повинні йти за сигналами, оскільки ви можете використовувати їх "
"як підказки щодо експорту інших властивостей."

msgid ""
"Then, write constants, exported variables, public, private, and onready "
"variables, in that order."
msgstr ""
"Потім записуйте константи, експортовані змінні, загальнодоступні, приватні "
"та onready змінні, в такому порядку."

msgid ""
"GDScript evaluates ``@onready`` variables right before the ``_ready`` "
"callback. You can use that to cache node dependencies, that is to say, to "
"get child nodes in the scene that your class relies on. This is what the "
"example above shows."
msgstr ""
"GDScript обчислює змінні ``@onready`` безпосередньо перед зворотним викликом "
"``_ready``. Ви можете використовувати це для кешування залежностей вузлів, "
"тобто для отримання дочірніх вузлів у сцені, на яку покладається ваш клас. "
"Ось що показує наведений вище приклад."

msgid "Member variables"
msgstr "Змінні-члени"

msgid ""
"Don't declare member variables if they are only used locally in a method, as "
"it makes the code more difficult to follow. Instead, declare them as local "
"variables in the method's body."
msgstr ""
"Не оголошуйте змінні-члени, якщо вони використовуються лише локально в "
"методі, оскільки це ускладнює код. Натомість оголосіть їх як локальні змінні "
"в тілі методу."

msgid "Local variables"
msgstr "Локальні змінні"

msgid ""
"Declare local variables as close as possible to their first use. This makes "
"it easier to follow the code, without having to scroll too much to find "
"where the variable was declared."
msgstr ""
"Оголошуйте локальні змінні якомога ближче до їх першого використання. Це "
"полегшує відстеження коду, без необхідності прокручувати занадто багато, щоб "
"знайти де оголошено змінну."

msgid "Methods and static functions"
msgstr "Методи і статичні функції"

msgid "After the class's properties come the methods."
msgstr "Після властивостей класу йдуть методи."

msgid ""
"Start with the ``_init()`` callback method, that the engine will call upon "
"creating the object in memory. Follow with the ``_ready()`` callback, that "
"Godot calls when it adds a node to the scene tree."
msgstr ""
"Почніть з методу зворотного виклику ``_init()``, який движок викликає при "
"створенні об'єкта в пам'яті. Далі ``_ready()``, який Godot викликає, коли "
"додає вузол до дерева сцен."

msgid ""
"These functions should come first because they show how the object is "
"initialized."
msgstr ""
"Ці функції повинні бути першими, оскільки вони показують, як об'єкт "
"ініціалізується."

msgid ""
"Other built-in virtual callbacks, like ``_unhandled_input()`` and "
"``_physics_process``, should come next. These control the object's main loop "
"and interactions with the game engine."
msgstr ""
"Інші вбудовані віртуальні зворотні виклики, як-от ``_unhandled_input()`` і "
"``_physics_process``, мають стати наступними. Вони керують основним циклом "
"об'єкта та взаємодією з ігровим движком."

msgid ""
"The rest of the class's interface, public and private methods, come after "
"that, in that order."
msgstr ""
"Решта класу, публічні та приватні методи, йдуть після цього в такому порядку."

msgid "Static typing"
msgstr "Статична типізація"

msgid ""
"GDScript supports :ref:`optional static typing<doc_gdscript_static_typing>`."
msgstr ""
"GDScript підтримує :ref:`optional static typing<doc_gdscript_static_typing>`."

msgid "Declared types"
msgstr "Заявлені типи"

msgid "To declare a variable's type, use ``<variable>: <type>``:"
msgstr "Щоб оголосити тип змінної, використовуйте ``<variable>: <type>``:"

msgid "To declare the return type of a function, use ``-> <type>``:"
msgstr "Визначте тип повернення функції використовуючи ``-> <type>``:"

msgid "Inferred types"
msgstr "Визначені типи"

msgid ""
"Include the type hint when the type is ambiguous, and omit the type hint "
"when it's redundant."
msgstr ""
"Включіть підказку типу, якщо тип неоднозначний, і пропустіть підказку типу, "
"якщо вона зайва."

msgid ""
"In some cases, the type must be stated explicitly, otherwise the behavior "
"will not be as expected because the compiler will only be able to use the "
"function's return type. For example, ``get_node()`` cannot infer a type "
"unless the scene or file of the node is loaded in memory. In this case, you "
"should set the type explicitly."
msgstr ""
"У деяких випадках тип потрібно вказати явно, інакше поведінка буде не такою, "
"як очікувалося, оскільки компілятор зможе використовувати лише тип "
"повернення функції. Наприклад, ``get_node()`` не може визначити тип, якщо "
"сцена або файл вузла не завантажено в пам’ять. У цьому випадку вам слід явно "
"вказати тип."

msgid ""
"Alternatively, you can use the ``as`` keyword to cast the return type, and "
"that type will be used to infer the type of the var."
msgstr ""
"Крім того, ви можете використати ключове слово ``as`` для приведення типу "
"повернення, і цей тип буде використано для визначення типу змінної."
