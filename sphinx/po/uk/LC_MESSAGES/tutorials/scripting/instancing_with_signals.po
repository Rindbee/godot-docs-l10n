#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Signal"
msgstr "Сигнал"

msgid "Instancing with signals"
msgstr "Примірник із сигналами"

msgid ""
"Signals provide a way to decouple game objects, allowing you to avoid "
"forcing a fixed arrangement of nodes. One sign that a signal might be called "
"for is when you find yourself using ``get_parent()``. Referring directly to "
"a node's parent means that you can't easily move that node to another "
"location in the scene tree. This can be especially problematic when you are "
"instancing objects at runtime and may want to place them in an arbitrary "
"location in the running scene tree."
msgstr ""
"Сигнали забезпечують спосіб відокремлення ігрових об’єктів, що дозволяє "
"уникнути примусового фіксованого розташування вузлів. Однією з ознак того, "
"що може знадобитися сигнал, є те, що ви використовуєте ``get_parent()``. "
"Звернення безпосередньо до батьківського вузла означає, що ви не можете "
"легко перемістити цей вузол в інше місце в дереві сцени. Це може бути "
"особливо проблематично, коли ви створюєте екземпляри об’єктів під час "
"виконання та можете розмістити їх у довільному місці в дереві запущеної "
"сцени."

msgid "Below we'll consider an example of such a situation: firing bullets."
msgstr "Нижче ми розглянемо приклад такої ситуації: стрільба кулями."

msgid "Shooting example"
msgstr "Приклад зйомки"

msgid ""
"Consider a player character that can rotate and shoot towards the mouse. "
"Every time the mouse button is clicked, we create an instance of the bullet "
"at the player's location. See :ref:`doc_instancing` for details."
msgstr ""
"Розглянемо персонаж гравця, який може обертатися та стріляти в бік миші. "
"Щоразу, коли натискається кнопка миші, ми створюємо екземпляр кулі в місці "
"розташування гравця. Дивіться :ref:`doc_instancing` для деталей."

msgid ""
"We'll use an ``Area2D`` for the bullet, which moves in a straight line at a "
"given velocity:"
msgstr ""
"Ми будемо використовувати ``Area2D`` для кулі, яка рухається прямолінійно із "
"заданою швидкістю:"

msgid ""
"However, if the bullets are added as children of the player, then they will "
"remain \"attached\" to the player as it rotates:"
msgstr ""
"Однак, якщо кулі додаються як діти гравця, вони залишаться «прикріпленими» "
"до гравця, коли він обертається:"

msgid ""
"Instead, we need the bullets to be independent of the player's movement - "
"once fired, they should continue traveling in a straight line and the player "
"can no longer affect them. Instead of being added to the scene tree as a "
"child of the player, it makes more sense to add the bullet as a child of the "
"\"main\" game scene, which may be the player's parent or even further up the "
"tree."
msgstr ""
"Натомість нам потрібно, щоб кулі не залежали від руху гравця — після "
"пострілу вони мають рухатися по прямій лінії, і гравець більше не зможе на "
"них впливати. Замість того, щоб додавати кулю до дерева сцен як дочірню для "
"гравця, доцільніше додати кулю як дочірню для «основної» ігрової сцени, яка "
"може бути батьківською для гравця або навіть вище в дереві."

msgid "You could do this by adding the bullet to the main scene directly:"
msgstr "Ви можете зробити це, додавши кулю безпосередньо до головної сцени:"

msgid ""
"However, this will lead to a different problem. Now if you try to test your "
"\"Player\" scene independently, it will crash on shooting, because there is "
"no parent node to access. This makes it a lot harder to test your player "
"code independently and also means that if you decide to change your main "
"scene's node structure, the player's parent may no longer be the appropriate "
"node to receive the bullets."
msgstr ""
"Однак це призведе до іншої проблеми. Тепер, якщо ви спробуєте самостійно "
"протестувати свою сцену «Програвач», вона вийде з ладу під час зйомки, "
"оскільки немає батьківського вузла для доступу. Це значно ускладнює "
"незалежне тестування коду вашого гравця, а також означає, що якщо ви "
"вирішите змінити структуру вузла вашої основної сцени, батьківський вузол "
"гравця може більше не бути відповідним вузлом для отримання куль."

msgid ""
"The solution to this is to use a signal to \"emit\" the bullets from the "
"player. The player then has no need to \"know\" what happens to the bullets "
"after that - whatever node is connected to the signal can \"receive\" the "
"bullets and take the appropriate action to spawn them."
msgstr ""
"Вирішення цього полягає у використанні сигналу для «випромінювання» куль від "
"гравця. Тоді гравцеві не потрібно «знати», що станеться з кулями після цього "
"— будь-який вузол, підключений до сигналу, може «отримати» кулі та вжити "
"відповідних дій, щоб їх породити."

msgid "Here is the code for the player using signals to emit the bullet:"
msgstr "Ось код для гравця, який використовує сигнали для випуску кулі:"

msgid ""
"In the main scene, we then connect the player's signal (it will appear in "
"the \"Node\" tab of the Inspector)"
msgstr ""
"У головній сцені ми підключаємо сигнал гравця (він з’явиться у вкладці "
"«Вузол» Інспектора)"

msgid ""
"Now the bullets will maintain their own movement independent of the player's "
"rotation:"
msgstr "Тепер кулі рухатимуться незалежно від обертання гравця:"
