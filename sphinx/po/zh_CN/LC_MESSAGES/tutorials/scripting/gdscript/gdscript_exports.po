#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "GDScript exported properties"
msgstr "GDScript 导出属性"

msgid ""
"In that example the value ``5`` will be saved and visible in the property "
"editor."
msgstr "在上面这个例子中，数值 ``5`` 会保存起来，并在属性编辑器中显示。"

msgid ""
"An exported variable must be initialized to a constant expression or have a "
"type specifier in the variable. Some of the export annotations have a "
"specific type and don't need the variable to be typed (see the *Examples* "
"section below)."
msgstr ""
"导出变量必须使用常量表达式来进行初始化，部分导出注解具有特殊类型，对变量类型"
"不作要求（请参见下面的\\ *示例*\\ 部分）。"

msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way, artists and game "
"designers can modify values that later influence how the program runs. For "
"this, a special export syntax is provided."
msgstr ""
"导出成员变量的基本好处之一，便是让这些变量在编辑器中可见可改，这样一来，美术"
"师和游戏设计师就可以修改这些会影响程序运行方式的值。为此，Godot 提供了一种特"
"殊的导出语法。"

msgid ""
"Exporting properties can also be done in other languages such as C#. The "
"syntax varies depending on the language. See :ref:`doc_c_sharp_exports` for "
"information on C# exports."
msgstr ""
"导出属性也可以用 C# 等其他语言完成。语法因语言而异。有关 C# 导出的信息"
"见 :ref:`doc_c_sharp_exports`\\ 。"

msgid "Basic use"
msgstr "基本用法"

msgid ""
"If the exported value assigns a constant or constant expression, the type "
"will be inferred and used in the editor."
msgstr ""
"如果为导出变量赋予了常量值或常量表达式值，则可以对该变量的值进行类型推断，并"
"使该变量在编辑器中可用。"

msgid "If there's no default value, you can add a type to the variable."
msgstr "如果导出变量没有默认值，那么你可以为该变量添加类型限定。"

msgid "Resources and nodes can be exported."
msgstr "可以导出资源和节点。"

msgid "Grouping exports"
msgstr "导出分组"

msgid ""
"It is possible to group your exported properties inside the Inspector with "
"the :ref:`@export_group <class_@GDScript_annotation_@export_group>` "
"annotation. Every exported property after this annotation will be added to "
"the group. Start a new group or use ``@export_group(\"\")`` to break out."
msgstr ""
"可以使用 :ref:`@export_group <class_@GDScript_annotation_@export_group>` 注解"
"来在检查器中对导出属性进行分组管理，在该注解后的每个导出变量均会被添加到该分"
"组中。用一个新分组开头，或使用 ``@export_group(\"\")`` 开头会结束之前的分组的"
"作用范围。"

msgid ""
"The second argument of the annotation can be used to only group properties "
"with the specified prefix."
msgstr "该注解的第二个参数仅囊括名称以该参数开头的导出变量。"

msgid ""
"Groups cannot be nested, use :ref:`@export_subgroup "
"<class_@GDScript_annotation_@export_subgroup>` to create subgroups within a "
"group."
msgstr ""
"导出项分组无法嵌套定义，需要用 :ref:`@export_subgroup "
"<class_@GDScript_annotation_@export_subgroup>` 来在一个大的导出项分组里定义一"
"个小分组。"

msgid ""
"You can also change the name of your main category, or create additional "
"categories in the property list with the :ref:`@export_category "
"<class_@GDScript_annotation_@export_category>` annotation."
msgstr ""
"你还可以使用 :ref:`@export_category "
"<class_@GDScript_annotation_@export_category>` 注解来更改主类别的名称，亦或在"
"属性列表中创建其他类别。"

msgid ""
"The list of properties is organized based on the class inheritance and new "
"categories break that expectation. Use them carefully, especially when "
"creating projects for public use."
msgstr ""
"属性列表是根据类的继承关系组织起来的，但新建导出项类别这个操作会破坏掉这种结"
"构，故使用时需要格外小心，创建公共项目时更应如此。"

msgid "Strings as paths"
msgstr "字符串用作文件路径"

msgid ""
"String as a path to a file. See :ref:`@export_file "
"<class_@GDScript_annotation_@export_file>`."
msgstr ""
"字符串为文件路径。见 :ref:`@export_file "
"<class_@GDScript_annotation_@export_file>`\\ 。"

msgid ""
"String as a path to a directory. See :ref:`@export_dir "
"<class_@GDScript_annotation_@export_dir>`."
msgstr ""
"字符串为目录路径。见 :ref:`@export_dir "
"<class_@GDScript_annotation_@export_dir>`\\ 。"

msgid ""
"String as a path to a file, custom filter provided as hint. See "
"again :ref:`@export_file <class_@GDScript_annotation_@export_file>`."
msgstr ""
"字符串为文件路径，提示中提供自定义筛选器。见 :ref:`@export_file "
"<class_@GDScript_annotation_@export_file>`\\ 。"

msgid ""
"Using paths in the global filesystem is also possible, but only in scripts "
"in tool mode."
msgstr "也可以使用全局文件系统中的路径，仅工具模式下的脚本可以如此使用。"

msgid ""
"String as a path to a PNG file in the global filesystem. "
"See :ref:`@export_global_file "
"<class_@GDScript_annotation_@export_global_file>`."
msgstr ""
"字符串为全局文件系统中 PNG 文件的路径。见 :ref:`@export_global_file "
"<class_@GDScript_annotation_@export_global_file>`\\ 。"

msgid ""
"String as a path to a directory in the global filesystem. "
"See :ref:`@export_global_dir "
"<class_@GDScript_annotation_@export_global_dir>`."
msgstr ""
"字符串为全局文件系统中目录的路径。见 :ref:`@export_global_dir "
"<class_@GDScript_annotation_@export_global_dir>`\\ 。"

msgid ""
"The multiline annotation tells the editor to show a large input field for "
"editing over multiple lines. See :ref:`@export_multiline "
"<class_@GDScript_annotation_@export_multiline>`."
msgstr ""
"多行文本注释会让编辑器使用大文本输入框来编辑多行文本。请查"
"看 :ref:`@export_multiline <class_@GDScript_annotation_@export_multiline>` 。"

msgid "Limiting editor input ranges"
msgstr "编辑器内限制值的输入范围"

msgid ""
"See :ref:`@export_range <class_@GDScript_annotation_@export_range>` for all "
"of the following."
msgstr ""
"下列示例见 :ref:`@export_range "
"<class_@GDScript_annotation_@export_range>`\\ 。"

msgid "Allow integer values from 0 to 20."
msgstr "允许 0 到 20 之间的整数。"

msgid "Allow integer values from -10 to 20."
msgstr "允许 -10 到 20 之间的整数。"

msgid "Allow floats from -10 to 20 and snap the value to multiples of 0.2."
msgstr "允许 -10 到 20 之间的数，调整步长为 0.2 。"

msgid "Adding suffixes and handling degrees/radians"
msgstr "添加后缀与角度/弧度处理"

msgid "Floats with easing hint"
msgstr "带缓动提示的浮点数"

msgid ""
"Display a visual representation of the ``ease()`` function when editing. "
"See :ref:`@export_exp_easing "
"<class_@GDScript_annotation_@export_exp_easing>`."
msgstr ""
"在编辑器里提供 'ease()' 函数的视觉呈现。请查看 :ref:`@export_exp_easing "
"<class_@GDScript_annotation_@export_exp_easing>` 。"

msgid "Colors"
msgstr "颜色"

msgid "Regular color given as red-green-blue-alpha value."
msgstr "使用红、绿、蓝、Alpha 值指定普通颜色。"

msgid ""
"Color given as red-green-blue value (alpha will always be 1). "
"See :ref:`@export_color_no_alpha "
"<class_@GDScript_annotation_@export_color_no_alpha>`."
msgstr ""
"颜色以红、绿、蓝值的形式给出（Alpha 值始终为 1）。"
"见 :ref:`@export_color_no_alpha "
"<class_@GDScript_annotation_@export_color_no_alpha>`\\ 。"

msgid "Nodes"
msgstr "节点"

msgid ""
"Since Godot 4.0, nodes can be directly exported as properties in a script "
"without having to use NodePaths:"
msgstr ""
"从 Godot 4.0 开始，脚本中可以直接将节点作为属性导出，不必再使用 NodePath来辅"
"助进行导出："

msgid ""
"Exporting NodePaths like in Godot 3.x is still possible, in case you need it:"
msgstr "如有需要，仍可以像 Godot 3.x 中那样导出 NodePath："

msgid ""
"If you want to limit the types of nodes for NodePaths, you can use "
"the :ref:`@export_node_path<class_@GDScript_annotation_@export_node_path>` "
"annotation:"
msgstr ""
"如果想要限制 NodePath 的类型，可以使"
"用 :ref:`@export_node_path<class_@GDScript_annotation_@export_node_path>` 注"
"解："

msgid "Resources"
msgstr "资源"

msgid ""
"In the Inspector, you can then drag and drop a resource file from the "
"FileSystem dock into the variable slot."
msgstr ""
"在检查器里，可以将资源文件从文件系统面板中拖放到导出变量所对应的槽位中。"

msgid ""
"Opening the inspector dropdown may result in an extremely long list of "
"possible classes to create, however. Therefore, if you specify an extension "
"of Resource such as:"
msgstr ""
"不过，打开检查器的下拉列表可能会导致要创建的资源类列表非常之长。因此，如果在"
"导出资源时指定了 Resource 的子类，例如："

msgid ""
"The drop-down menu will be limited to AnimationNode and all its derived "
"classes."
msgstr "下拉列表就会限定到 AnimationNode 及其派生类。"

msgid "Exporting bit flags"
msgstr "导出位标记"

msgid "See :ref:`@export_flags <class_@GDScript_annotation_@export_flags>`."
msgstr ""
"见 :ref:`@export_flags <class_@GDScript_annotation_@export_flags>`\\ 。"

msgid ""
"You must provide a string description for each flag. In this example, "
"``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has value 4 and "
"``Wind`` corresponds to value 8. Usually, constants should be defined "
"accordingly (e.g. ``const ELEMENT_WIND = 8`` and so on)."
msgstr ""
"你必须为每个位标记提供一个字符串描述。在本例中，\\ ``Fire`` 的值是 1，\\ "
"``Water`` 的值是 2，\\ ``Earth`` 的值是 4，\\ ``Wind`` 的值是 8。通常情况下应"
"相应地定义常量（例如 ``const ELEMENT_WIND = 8`` 等）。"

msgid "You can add explicit values using a colon:"
msgstr "你可以使用冒号添加显式的值："

msgid ""
"Only power of 2 values are valid as bit flags options. The lowest allowed "
"value is 1, as 0 means that nothing is selected. You can also add options "
"that are a combination of other flags:"
msgstr ""
"只有2的幂次方值才是有效的位标记选项。允许的最低值是1，因为0表示没有选中任何内"
"容。你还可以添加一些其他标记的组合作为选项："

msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, use boolean variables instead."
msgstr ""
"使用位标记需要对位操作有一定的了解，若对此有疑问，请使用布尔变量代替位标记使"
"用。"

msgid "Exporting enums"
msgstr "导出枚举"

msgid "See :ref:`@export_enum <class_@GDScript_annotation_@export_enum>`."
msgstr "见 :ref:`@export_enum <class_@GDScript_annotation_@export_enum>`\\ 。"

msgid ""
"Properties can be exported with a type hint referencing an enum to limit "
"their values to the values of the enumeration. The editor will create a "
"widget in the Inspector, enumerating the following as \"Thing 1\", \"Thing "
"2\", \"Another Thing\". The value will be stored as an integer."
msgstr ""
"成员属性也可以通过将类型限定为一个枚举来导出，导出值为该枚举的枚举常量。编辑"
"器会在相应位置创建一个列表，将枚举项按如“物体1”、“物体2”、“其他物体”的方式来"
"进行排列显示。导出枚举的数值会按整数类型来存储。"

msgid ""
"Integer and string properties can also be limited to a specific list of "
"values using the :ref:`@export_enum "
"<class_@GDScript_annotation_@export_enum>` annotation. The editor will "
"create a widget in the Inspector, enumerating the following as Warrior, "
"Magician, Thief. The value will be stored as an integer, corresponding to "
"the index of the selected option (i.e. ``0``, ``1``,  or ``2``)."
msgstr ""
"也可以使用 :ref:`@export_enum <class_@GDScript_annotation_@export_enum>` 注解"
"来将整数和字符串属性限制为特定的值列表。编辑器将在检查器中创建一个小工具，将"
"以下枚举为：战士、魔术师、小偷。该值将被存储为整数，对应于所选选项的索引（即 "
"``0``\\ 、\\ ``1`` 或 ``2``\\ ）。"

msgid "If the type is String, the value will be stored as a string."
msgstr "如果变量类型是字符串，则枚举字符串本身就是该变量的可选数值。"

msgid "If you want to set an initial value, you must specify it explicitly:"
msgstr "如果你想设置初始值，你必须明确指定它："

msgid "Exporting arrays"
msgstr "导出数组"

msgid ""
"Exported arrays can have initializers, but they must be constant expressions."
msgstr "导出的数组可以赋予初始值，但其初始值必须是常量表达式。"

msgid ""
"If the exported array specifies a type which inherits from Resource, the "
"array values can be set in the inspector by dragging and dropping multiple "
"files from the FileSystem dock at once."
msgstr ""
"如果导出的数组指定了继承自 Resource 类型的对象，则可以从文件系统面板中一次性"
"拖放多个文件来到检查器中来设置数组值。"

msgid "The default value **must** be a constant expression."
msgstr "默认值\\ **必须**\\ 是常量表达式。"

msgid "Exported arrays can specify type (using the same hints as before)."
msgstr "导出数组也可以指定元素类型（使用之前提到的提示即可）。"

msgid ""
"You can omit the default value, but it would then be ``null`` if not "
"assigned."
msgstr "也可以不声明初始值，这样的话，数组的初始值就默认为 ``null``\\ 。"

msgid ""
"Arrays with specified types which inherit from resource can be set by drag-"
"and-dropping multiple files from the FileSystem dock."
msgstr ""
"如果导出的数组指定了从 Resource 继承的类型，则可以一次性从文件系统面板中拖放"
"多个文件到检查器中来设置该数组的值。"

msgid "Packed type arrays also work, but only initialized empty:"
msgstr "压缩数组也可以使用导出，但需要构造对应的空压缩数组去赋值："

msgid "Other export variants can also be used when exporting arrays:"
msgstr "属性提示可以用来导出字符串作为路径："

msgid "``@export_storage``"
msgstr "``@export_storage``"

msgid ""
"See :ref:`@export_storage <class_@GDScript_annotation_@export_storage>`."
msgstr ""
"见 :ref:`@export_storage <class_@GDScript_annotation_@export_storage>`\\ 。"

msgid "By default, exporting a property has two effects:"
msgstr "导出属性在默认情况下会产生以下两种效果："

msgid ""
"makes the property stored in the scene/resource file "
"(:ref:`PROPERTY_USAGE_STORAGE "
"<class_@GlobalScope_constant_PROPERTY_USAGE_STORAGE>`);"
msgstr ""
"将属性存到场景/资源文件当中（即 :ref:`PROPERTY_USAGE_STORAGE "
"<class_@GlobalScope_constant_PROPERTY_USAGE_STORAGE>` 位标志的作用）;"

msgid ""
"adds a field to the Inspector (:ref:`PROPERTY_USAGE_EDITOR "
"<class_@GlobalScope_constant_PROPERTY_USAGE_EDITOR>`)."
msgstr ""
"将字段加到检查器当中（即 :ref:`PROPERTY_USAGE_EDITOR "
"<class_@GlobalScope_constant_PROPERTY_USAGE_EDITOR>` 位标志的作用）。"

msgid ""
"However, sometimes you may want to make a property serializable, but not "
"display it in the editor to prevent unintentional changes and cluttering the "
"interface."
msgstr ""
"然而有时你会想让某个属性能够序列化，不让它显示在编辑器当中，以防误修改其值，"
"同时避免检查器窗口杂乱无章。"

msgid ""
"To do this you can use :ref:`@export_storage "
"<class_@GDScript_annotation_@export_storage>`. This can be useful "
"for :ref:`@tool <class_@GDScript_annotation_@tool>` scripts. Also the "
"property value is copied when :ref:`Resource.duplicate() "
"<class_Resource_method_duplicate>` or :ref:`Node.duplicate() "
"<class_Node_method_duplicate>` is called, unlike non-exported variables."
msgstr ""
"可以使用 :ref:`@export_storage <class_@GDScript_annotation_@export_storage>` "
"注解来实现上述效果，该注解在 :ref:`@tool <class_@GDScript_annotation_@tool>` "
"脚本中十分有用。而且，与非导出属性不同的是，如果调"
"用 :ref:`Resource.duplicate() <class_Resource_method_duplicate>` "
"或 :ref:`Node.duplicate() <class_Node_method_duplicate>` 方法，会复制该属性的"
"值。"

msgid "``@export_custom``"
msgstr "``@export_custom``"

msgid ""
"If you need more control than what's exposed with the built-in ``@export`` "
"annotations, you can use ``@export_custom`` instead. This allows defining "
"any property hint, hint string and usage flags, with a syntax similar to the "
"one used by the editor for built-in nodes."
msgstr ""
"如果你需要比内置的 ``@export`` 注解更多的控制，可以使用 "
"``@export_custom``\\ 。它允许定义任何属性提示、提示字符串和使用标志，语法与编"
"辑器用于内置节点的语法类似。"

msgid ""
"The above is normally not feasible with the standard ``@export_range`` "
"syntax, since it requires defining a range."
msgstr ""
"上述功能通常无法通过标准的 ``@export_range`` 语法实现，因为它需要定义范围。"

msgid ""
"When using ``@export_custom``, GDScript does not perform any validation on "
"the syntax. Invalid syntax may have unexpected behavior in the inspector."
msgstr ""
"使用 ``@export_custom`` 时，GDScript 不会对语法进行任何验证。无效的语法可能会"
"导致检查器中出现意外行为。"

msgid "``@export_tool_button``"
msgstr "``@export_tool_button``"

msgid ""
"If you need to create a clickable inspector button, you can use "
"``@export_tool_button``. This exports a ``Callable`` property as a clickable "
"button. When the button is pressed, the callable is called."
msgstr ""
"如果你需要创建一个可点击的检查器按钮，可以使用 ``@export_tool_button``\\ 。这"
"么写会将 ``Callable`` 类型的属性导出为可点击的按钮。按下按钮时，就会调用该可"
"调用对象。"

msgid "Setting exported variables from a tool script"
msgstr "从工具脚本中设置导出变量"

msgid ""
"When changing an exported variable's value from a script "
"in :ref:`doc_gdscript_tool_mode`, the value in the inspector won't be "
"updated automatically. To update it, "
"call :ref:`notify_property_list_changed() "
"<class_Object_method_notify_property_list_changed>` after setting the "
"exported variable's value."
msgstr ""
"当 :ref:`doc_gdscript_tool_mode` 下的脚本中的一个导出变量的值改变时，该值在检"
"查器中不会自动更新。更新的方法是在设置该导出变量的值之后调"
"用 :ref:`notify_property_list_changed() "
"<class_Object_method_notify_property_list_changed>`\\ 。"

msgid "Advanced exports"
msgstr "高级导出"

msgid ""
"Not every type of export can be provided on the level of the language itself "
"to avoid unnecessary design complexity. The following describes some more or "
"less common exporting features which can be implemented with a low-level API."
msgstr ""
"为了避免非必要的复杂设计，并非所有类型的导出都在语言层面上提供。下面将说明一"
"些能用底层 API 实现的，且较为常见的导出方法。"

msgid ""
"Before reading further, you should get familiar with the way properties are "
"handled and how they can be customized with :ref:`_set() "
"<class_Object_private_method__set>`, :ref:`_get() "
"<class_Object_private_method__get>`, and :ref:`_get_property_list() "
"<class_Object_private_method__get_property_list>` methods as described "
"in :ref:`doc_accessing_data_or_logic_from_object`."
msgstr ""
"在进一步阅读前，你需要熟悉属性的处理方式，以及如何通过 :ref:`_set() "
"<class_Object_private_method__set>`\\ 、\\ :ref:`_get() "
"<class_Object_private_method__get>`\\ 、\\ :ref:`_get_property_list() "
"<class_Object_private_method__get_property_list>` 等方法进行定制的这些属性。"
"详见 :ref:`doc_accessing_data_or_logic_from_object`\\ 。"

msgid ""
"For binding properties using the above methods in C++, "
"see :ref:`doc_binding_properties_using_set_get_property_list`."
msgstr ""
"要在 C++ 中用上述方法绑定属性，请参"
"阅 :ref:`doc_binding_properties_using_set_get_property_list`\\ 。"

msgid ""
"The script must operate in the ``@tool`` mode so the above methods can work "
"from within the editor."
msgstr "脚本必须在 ``@tool`` 注解的修饰下，才能使上述方法在编辑器内运行。"
