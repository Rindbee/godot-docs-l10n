#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "The Profiler"
msgstr "性能分析器"

msgid ""
"But then, you open the skill tree, and it grinds to a halt as something "
"snags in your code. Watching the skill tree scroll by like it's a slide show "
"is unacceptable. What went wrong? Is it positioning the skill tree elements, "
"the UI, or rendering?"
msgstr ""
"但是，当你打开技能树时，它会因为代码中的问题而停止运行。看着技能树像幻灯片一"
"样滚动是不可接受的。出了什么问题？是定位技能树元素、UI还是渲染？"

msgid ""
"You could try to optimize everything and run the game repeatedly, but you "
"can be smarter about this and narrow down the possibilities. Enter Godot's "
"profiler."
msgstr ""
"你可以尝试优化一切，反复运行游戏，但你可以更聪明地处理这件事，缩小可能性。进"
"入Godot的分析器。"

msgid "An overview of the profiler"
msgstr "性能分析器概述"

msgid ""
"You can open the profiler by opening the **Debugger** panel and clicking on "
"the **Profiler** tab."
msgstr ""
"打开\\ **调试器**\\ 面板并点击\\ **分析器**\\ 选项卡即可打开性能分析器。"

msgid ""
"Godot's profiler does not automatically run because profiling is performance-"
"intensive. It has to continually measure everything happening in the game "
"and report back to the debugger, so it's off by default."
msgstr ""
"Godot 的性能分析器并不会自动运行，因为性能分析也有很大的性能开销。性能分析会"
"持续不断地观测游戏中发生的所有事情并将其汇报给调试器，因此默认是关闭的。"

msgid ""
"The profiler does not currently support C# scripts. C# scripts can be "
"profiled using JetBrains Rider and JetBrains dotTrace with the Godot support "
"plugin."
msgstr ""
"性能分析器目前不支持 C# 脚本。对 C# 脚本进行性能分析可以使用 JetBrains Rider "
"和 JetBrains dotTrace，安装 Godot 支持插件即可。"

msgid ""
"You can clear the data by clicking the **Clear** button anytime. Use the "
"**Measure** drop-down menu to change the type of data you measure. The "
"measurements panel and the graph will update accordingly."
msgstr ""
"你随时都可以点击\\ **清除**\\ 按钮清空数据。测量数据的类型可以通过\\ **测量"
"**\\ 下来菜单修改。测量面板和图表会相应地发生变化。"

msgid "The measured data"
msgstr "测量数据"

msgid ""
"The profiler's interface is split into two. There is a list of functions on "
"the left and the performance graph on the right."
msgstr "分析器的界面分为两个部分。左侧是功能列表，右侧是性能图表。"

msgid ""
"The main measurements are frame time, physics frame, idle time, and physics "
"time."
msgstr "主要的测量内容有帧时间、物理帧、空闲时间、物理时间。"

msgid ""
"The **frame time** is the time it takes Godot to execute all the logic for "
"an entire image, from physics to rendering."
msgstr ""
"**帧时间**\\ 指的是 Godot 为完整的一幅图像执行的逻辑所消耗的时间，包括物理和"
"渲染。"

msgid ""
"**Physics frame** is the time Godot has allocated between physics updates. "
"In an ideal scenario, the frame time is whatever you chose: 16.66 "
"milliseconds by default, which corresponds to 60FPS. It's a frame of "
"reference you can use for everything else around it."
msgstr ""
"**物理帧**\\ 指的是 Godot 在物理更新之间所花费的时间。理想状态下，帧时间是你"
"所选择的值：默认为 16.66 毫秒，对应 60 FPS。你可以用它作为其他相关信息的参考"
"值。"

msgid ""
"**Idle time** is the time Godot took to update logic other than physics, "
"such as code that lives in `_process` or timers and cameras set to update on "
"**Idle**."
msgstr ""
"**空闲时间**\\ 指的是 Godot 更新物理之外的逻辑所花费的时间，比如 `_process` "
"里的代码和设置为在 **Idle** 时更新的计时器和相机。"

msgid ""
"**Physics time** is the time Godot took to update physics tasks, like "
"`_physics_process` and built-in nodes set to **Physics** update."
msgstr ""
"**物理时间**\\ 指的是 Godot 更新物理任务所花费的时间，比如 "
"`_physics_process` 和设置为在 **Physics** 时更新的内置节点。"

msgid ""
"**Frame Time** includes rendering time. Say you find a mysterious spike of "
"lag in your game, but your physics and scripts are all running fast. The "
"delay could be due to the appearance of particles or visual effects!"
msgstr ""
"**帧时间**\\ 包含渲染时间。如果你发现游戏里突然出现了迷之卡顿，而物理和脚本的"
"运行速度都还挺快的，那么这种卡顿就可能是出现粒子特效或视觉特效造成的！"

msgid "Scope of measurement and measurement windows"
msgstr "测量范围和测量窗口"

msgid "Debugging slow code with the profiler"
msgstr "使用分析器调试速度慢的代码"

msgid "Measuring manually in microseconds"
msgstr "以微秒为单位手动测量"

msgid ""
"If your function is complex, it could be challenging to figure out which "
"part needs optimization. Is it your math or the way you access other pieces "
"of data to do the math with? Is it the `for` loop? The `if` statements?"
msgstr ""
"如果函数比较复杂，那么找出需要优化的部分可能会很困难。是数学的问题，还是获取"
"进行数学运算所需数据的方式的问题？是 `for` 循环吗？还是 `if` 语句？"

msgid ""
"You can narrow down the measurement by manually counting ticks as the code "
"runs with some temporary functions. The two functions are part of the `Time` "
"class object. They are `get_ticks_msec` and `get_ticks_usec`. The first "
"measures in milliseconds (1,000 per second), and the second measures in "
"microseconds (1,000,000 per second)."
msgstr ""
"你可以让程序运行一些临时函数，手动计算时刻，来缩小测量范围。有两个属于 "
"`Time` 类对象的函数，分别是 `get_ticks_msec` 和 `get_ticks_usec` 。第一个会以"
"毫秒为单位（每秒为1,000毫秒）测量，而第二个则以微秒为单位（每秒为1,000,000微"
"秒）测量。"

msgid ""
"Either one returns the amount of time since the game engine started in their "
"respective time frame."
msgstr "两者都会以各自的时间量返回游戏引擎启动以来经过的时间。"

msgid ""
"If you wrap a piece of code with a start and end count of microseconds, the "
"difference between the two is the amount of time it took to run that piece "
"of code."
msgstr ""
"如果使用微秒的开始和结束包裹一段代码，那两者的差则是运行这段代码花费的时间。"
