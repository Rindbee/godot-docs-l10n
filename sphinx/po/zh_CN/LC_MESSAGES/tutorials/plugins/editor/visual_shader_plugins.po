#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Visual Shader plugins"
msgstr "可视化着色器插件"

msgid ""
"Visual Shader plugins are used to create custom :ref:`class_VisualShader` "
"nodes in GDScript."
msgstr ""
"Visual Shader插件用于在GDScript中创建自定义的 :ref:`class_VisualShader` 节点."

msgid ""
"The creation process is different from usual editor plugins. You do not need "
"to create a ``plugin.cfg`` file to register it; instead, create and save a "
"script file and it will be ready to use, provided the custom node is "
"registered with ``class_name``."
msgstr ""
"创建过程与一般的编辑器插件不同. 你不需要创建一个 ``plugin.cfg`` 文件来注册, "
"而是创建并保存一个脚本文件, 只要用 ``class_name`` 注册了自定义节点, 就可以使"
"用了."

msgid ""
"This short tutorial will explain how to make a Perlin-3D noise node "
"(original code from this `GPU noise shaders plugin <https://github.com/curly-"
"brace/Godot-3.0-Noise-Shaders/blob/master/assets/gpu_noise_shaders/"
"classic_perlin3d.tres>`_."
msgstr ""
"本篇短教程将讲解如何制作 Perlin-3D 噪声节点（原代码来自这个 `GPU 噪声着色器插"
"件 <https://github.com/curly-brace/Godot-3.0-Noise-Shaders/blob/master/"
"assets/gpu_noise_shaders/classic_perlin3d.tres>`_\\ 。"

msgid ""
"Create a Sprite2D and assign a :ref:`class_ShaderMaterial` to its material "
"slot:"
msgstr ""
"创建一个 Sprite2D 并为其材质插槽分配一个 :ref:`class_ShaderMaterial`\\ ："

msgid "Assign :ref:`class_VisualShader` to the shader slot of the material:"
msgstr "将 :ref:`class_VisualShader` 给着色器材质的插槽："

msgid ""
"Don't forget to change its mode to \"CanvasItem\" (if you are using a "
"Sprite2D):"
msgstr "不要忘记将其模式改为“CanvasItem”（如果你使用的是 Sprite2D）："

msgid ""
"Create a script which derives from :ref:`class_VisualShaderNodeCustom`. This "
"is all you need to initialize your plugin."
msgstr ""
"创建一个从 :ref:`class_VisualShaderNodeCustom` 派生的脚本. 这是你初始化你的插"
"件所需要的全部内容."

msgid "Place it on a graph and connect the required ports:"
msgstr "放到一个图并连接所需的端口:"

msgid ""
"That is everything you need to do, as you can see it is easy to create your "
"own custom VisualShader nodes!"
msgstr ""
"这就是你需要做的所有事情, 正如你所看到的那样, 创建你自己的自定义VisualShader"
"节点很容易!"

msgid "Translation status"
msgstr "翻译状态"
