# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-20 18:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Pseudolocalization"
msgstr "伪本地化"

msgid "Introduction"
msgstr "前言"

msgid ""
"When creating a game, the process of localization usually starts when "
"development has finished. This means that translations aren't available "
"during development for testing whether the project is internationalized "
"properly."
msgstr ""
"建立游戏时，本地化过程通常在开发完成后开始。这意味着在开发过程中无法使用翻译"
"来测试项目是否正确国际化。"

msgid ""
"Godot offers pseudolocalization as a way to test how robust the project is "
"when it comes to locale changes. Pseudolocalization simulates changes that "
"might take place during localization. This way, any issues regarding "
"internationalization can be recognized early on during development."
msgstr ""
"Godot提供伪本地化作为测试项目在区域设定变更时的稳健性的一种方法。伪本地化模拟"
"本地化期间可能发生的变化。这样，任何有关国际化的问题都可以在开发过程的早期就"
"被辨识出来。"

#, fuzzy
msgid ""
"You can see how pseudolocalization works in action using the "
"`Pseudolocalizaton demo project <https://github.com/godotengine/godot-demo-"
"projects/tree/master/gui/pseudolocalization>`__."
msgstr ""
"如果您更善于通过查看示例学习，可以在\\ `这里 <https://github.com/godotengine/"
"godot-demo-projects/tree/master/mobile/android_iap>`__\\ 找到演示项目。"

msgid "Enabling and configuring pseudolocalization"
msgstr "伪本地化的启用和配置"

msgid ""
"Enabling pseudolocalization and the configurations related to it is as "
"simple as toggling a checkbox in the project settings. These settings can be "
"found in **Project → Project Settings → General → Internationalization → "
"Pseudolocalization** after enabling the **Advanced** toggle in the project "
"settings dialog:"
msgstr ""
"启用伪本地化及其相关配置就像在项目设定中切换复选框一样简单。在项目设定对话方"
"块中启用**进阶**切换后，可以在**项目→项目设定→常规→国际化→伪本地化**中找到这"
"些设定："

msgid ""
"Pseudolocalization can also be :ref:`toggled at runtime from a script "
"<doc_pseudolocalization_runtime>`."
msgstr ""
"伪本地化也可以是 :ref:`toggled at runtime from a script "
"<doc_pseudolocalization_runtime>`。"

msgid "Pseudolocalization configurations"
msgstr "伪本地化配置"

msgid ""
"Pseudolocalization in Godot can be set up according to the specific use case "
"of the project. Here are the pseudolocalization properties that can be "
"configured through project settings:"
msgstr ""
"Godot中的伪本地化可以根据项目的具体用例进行设定。以下是可以透过项目设定进行配"
"置的伪本地化属性："

msgid ""
"``replace_with_accents``: Replaces all characters in the string with their "
"accented variants. *\"The quick brown fox jumped over the lazy dog\"* will "
"be converted to *\"Ŧh̀é q́üíćḱ ḅŕôŵή f́ôx́ ǰüm̀ṕéd́ ôṽéŕ ŧh̀é łáźý d́ôǵ\"* when this "
"setting is enabled. This can be used to spot untranslated strings that won't "
"have accents, but is also useful to check for missing glyphs in the font(s) "
"used by the project."
msgstr ""
"``replace_with_accents``：将字符串中的所有字母替换为其重音变体。 启用此设定"
"后，*\"The quick brown fox jumped over the lazy dog\"* 会被转换为 *\"Ŧh̀é "
"q́üíćḱ ḅŕôŵή f́ôx́ ǰüm̀ṕéd́ ôṽéŕ ŧh̀é łáźý d́ôǵ\"*。 这可用于发现没有重音的未翻译字"
"符串，对于检查项目使用的字体是否缺少字形也很有用。"

msgid ""
"``double_vowels``: Doubles all the vowels in the string. It is a good "
"approximation to simulate expansion of text during localization. This can be "
"used to check for text that would overflow its container (such as buttons)."
msgstr ""
"``double_vowels``：将字串中的所有元音加倍。这是在本地化过程中模拟文字扩充的一"
"个很好的近似方法。这可用于检查会溢出其容器的文字（例如按钮）。"

msgid ""
"``fake_bidi``: Fake bidirectional text (simulates right-to-left text). This "
"is useful to simulate right-to-left writing systems to check for potential "
"layout issues that would occur in languages using right-to-left scripts."
msgstr ""
"``fake_bidi``：假双向文字（模拟从右到左的文字）。这对于模拟从右到左的书写系统"
"非常有用，以检查使用从右到左脚本的语言中可能出现的潜在布局问题。"

msgid ""
"``override``: Replaces all the characters in the string with an asterisk "
"(``*``). This is useful for quickly finding text that isn't being localized."
msgstr ""
"``override``：用星号（``*``）取代字串中的所有字元。这对于快速寻找未本地化的文"
"字很有用。"

msgid ""
"``expansion_ratio``: Can be used in cases where doubling the vowels isn't a "
"sufficient approximation. This setting pads the string with underscores "
"(``_``) and expands it by the given ratio. An expansion ratio of ``0.3`` is "
"sufficient for most practical cases; it will increase the length of the "
"string by 30%."
msgstr ""
"“expansion_ratio”：可用来双元音不足以近似的情况。此设定用下划线（``_``）填充"
"字串并按给定的比例扩充它。对于大多数实际情况，「0.3」的膨胀比就足够了；它会使"
"字串的长度增加30%。"

msgid ""
"``prefix`` and ``suffix``: These properties can be used to specify a prefix "
"and suffix to wrap the text in."
msgstr "``prefix``和``suffix``：这些属性可用来指定包装文字的前缀和后缀。"

msgid ""
"``skip_placeholders``: Skips placeholders for string formatting like ``%s`` "
"and ``%f``. This is useful to identify places where more arguments are "
"required for the formatted string to display correctly."
msgstr ""
"“skip_placeholders”：跳过字串格式的占位符，如“%s”和“%f”。这对于识别需要更多参"
"数才能正确显示格式化字串的位置很有用。"

#, fuzzy
msgid ""
"All of these properties can be toggled as needed according to the project's "
"use case."
msgstr "可以通过代码配置这些属性，也可以在“检查器”中对其进行编辑。"

msgid "Configuring pseudolocalization at runtime"
msgstr "运行时配置伪本地化"

msgid ""
"Pseudolocalization can be toggled at runtime using the :ref:"
"`pseudolocalization_enabled<class_TranslationServer_property_pseudolocalization_enabled>` "
"property in TranslationServer. However, if runtime configuration of "
"pseudolocalization properties is required, they can be directly configured "
"using :ref:`ProjectSettings.set_setting(property, value) "
"<class_ProjectSettings_method_set_setting>` and then calling :ref:"
"`TranslationServer.reload_pseudolocalization() "
"<class_TranslationServer_method_reload_pseudolocalization>` which reparses "
"the pseudolocalization properties and reloads the pseudolocalization. The "
"following code snippet shall turn on ``replace_with_accents`` and "
"``double_vowels`` properties and then call ``reload_pseudolocalization()`` "
"for the changes to get reflected::"
msgstr ""
"可以在运行时使用TranslationServer中的 :ref:"
"`pseudolocalization_enabled<class_TranslationServer_property_pseudolocalization_enabled>` "
"属性切换伪本地化。但是，如果需要伪本地化属性的运行时配置，则可以使用 :ref:"
"`ProjectSettings.set_setting(property, value) "
"<class_ProjectSettings_method_set_setting>` 直接配置它们，然后调用 :ref:"
"`TranslationServer.reload_pseudolocalization() "
"<class_TranslationServer_method_reload_pseudolocalization>` ，该函数将重新生"
"成伪本地化属性并重新加载伪本地化。以下代码段应打开 ``replace_with_accents`` "
"和 ``double_vowels`` 属性，然后调用 ``reload_pseudolocalization()`` 以反映更"
"改："

msgid "Translation status"
msgstr "翻译状态"
