#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Pseudolocalization"
msgstr "伪本地化"

msgid "Introduction"
msgstr "前言"

msgid ""
"When creating a game, the process of localization usually starts when "
"development has finished. This means that translations aren't available "
"during development for testing whether the project is internationalized "
"properly."
msgstr ""
"在创建游戏时，本地化过程通常在开发完成后开始。这意味着在开发过程中无法使用翻"
"译来测试项目是否正确国际化。"

msgid ""
"Godot offers pseudolocalization as a way to test how robust the project is "
"when it comes to locale changes. Pseudolocalization simulates changes that "
"might take place during localization. This way, any issues regarding "
"internationalization can be recognized early on during development."
msgstr ""
"Godot 提供伪本地化作为测试项目在区域设置变更时的稳健性的一种方法。伪本地化模"
"拟了本地化期间可能发生的更改。这样，任何有关国际化的问题都可以在开发早期就被"
"识别出来。"

msgid ""
"You can see how pseudolocalization works in action using the "
"`Pseudolocalizaton demo project <https://github.com/godotengine/godot-demo-"
"projects/tree/master/gui/pseudolocalization>`__."
msgstr ""
"你可以使用\\ `伪本地化演示项目 <https://github.com/godotengine/godot-demo-"
"projects/tree/master/gui/pseudolocalization>`__\\ 来查看伪本地化的实际工作原"
"理。"

msgid "Enabling and configuring pseudolocalization"
msgstr "伪本地化的启用和配置"

msgid ""
"Enabling pseudolocalization and the configurations related to it is as "
"simple as toggling a checkbox in the project settings. These settings can be "
"found in **Project → Project Settings → General → Internationalization → "
"Pseudolocalization** after enabling the **Advanced** toggle in the project "
"settings dialog:"
msgstr ""
"启用伪本地化及其相关配置非常简单，只需在项目设置中勾选勾选框即可。在项目设置"
"对话框中启用\\ **高级设置**\\ 切换后，可以在\\ **项目 → 项目设置 → 常规 → 国"
"际化 → 伪本地化**\\ 中找到这些设置："

msgid ""
"Pseudolocalization can also be :ref:`toggled at runtime from a script "
"<doc_pseudolocalization_runtime>`."
msgstr ""
"伪本地化也可以\\ :ref:`在运行时通过脚本切换 "
"<doc_pseudolocalization_runtime>`\\ 。"

msgid "Pseudolocalization configurations"
msgstr "伪本地化配置"

msgid ""
"Pseudolocalization in Godot can be set up according to the specific use case "
"of the project. Here are the pseudolocalization properties that can be "
"configured through project settings:"
msgstr ""
"Godot 中的伪本地化可以根据项目的具体用例进行设置。以下是可以通过项目设置配置"
"的伪本地化属性："

msgid ""
"``replace_with_accents``: Replaces all characters in the string with their "
"accented variants. *\"The quick brown fox jumped over the lazy dog\"* will "
"be converted to *\"Ŧh̀é q́üíćḱ ḅŕôŵή f́ôx́ ǰüm̀ṕéd́ ôṽéŕ ŧh̀é łáźý d́ôǵ\"* when this "
"setting is enabled. This can be used to spot untranslated strings that won't "
"have accents, but is also useful to check for missing glyphs in the font(s) "
"used by the project."
msgstr ""
"``replace_with_accents``\\ ：将字符串中的所有字符替换为对应的重音变体。 启用"
"该设置后，\\ *\"The quick brown fox jumped over the lazy dog\"* 会被转换为 "
"*\"Ŧh̀é q́üíćḱ ḅŕôŵή f́ôx́ ǰüm̀ṕéd́ ôṽéŕ ŧh̀é łáźý d́ôǵ\"*\\ 。可以用来发现没有重音的"
"未翻译字符串，也适用于检查项目使用的字体是否缺失字形。"

msgid ""
"``double_vowels``: Doubles all the vowels in the string. It is a good "
"approximation to simulate expansion of text during localization. This can be "
"used to check for text that would overflow its container (such as buttons)."
msgstr ""
"``double_vowels``：将字符串中的所有元音加倍。这是在本地化过程中模拟文本扩充的"
"一个很好的近似方法。这可用于检查会溢出其容器的文本（例如按钮）。"

msgid ""
"``fake_bidi``: Fake bidirectional text (simulates right-to-left text). This "
"is useful to simulate right-to-left writing systems to check for potential "
"layout issues that would occur in languages using right-to-left scripts."
msgstr ""
"``fake_bidi``：假双向文字（模拟从右到左的文字）。这对于模拟从右到左的书写系统"
"非常有用，以检查使用从右到左脚本的语言中可能出现的潜在布局问题。"

msgid ""
"``override``: Replaces all the characters in the string with an asterisk "
"(``*``). This is useful for quickly finding text that isn't being localized."
msgstr ""
"``override``：用星号（``*``）替换字符串中的所有字符。这对于快速查找未本地化的"
"文本很有用。"

msgid ""
"``expansion_ratio``: Can be used in cases where doubling the vowels isn't a "
"sufficient approximation. This setting pads the string with underscores "
"(``_``) and expands it by the given ratio. An expansion ratio of ``0.3`` is "
"sufficient for most practical cases; it will increase the length of the "
"string by 30%."
msgstr ""
"``expansion_ratio``：可用于将元音加倍不足以近似的情况。该设置用下划线"
"（``_``）填充字符串，并按给定比率扩展它。对于大多数实际情况来说，扩展比率为 "
"``0.3`` 就足够了；它将使字符串的长度增加 30%。"

msgid ""
"``prefix`` and ``suffix``: These properties can be used to specify a prefix "
"and suffix to wrap the text in."
msgstr "``prefix`` 和 ``suffix``\\ ：这些属性可用于指定包装文本的前缀和后缀。"

msgid ""
"``skip_placeholders``: Skips placeholders for string formatting like ``%s`` "
"and ``%f``. This is useful to identify places where more arguments are "
"required for the formatted string to display correctly."
msgstr ""
"``skip_placeholders``：跳过字符串格式化的占位符，如 ``%s`` 和 ``%f``\\ 。这对"
"于识别需要更多参数才能正确显示格式化字符串的位置很有用。"

msgid ""
"All of these properties can be toggled as needed according to the project's "
"use case."
msgstr "所有这些属性都可以根据项目的用例按需进行切换。"

msgid "Configuring pseudolocalization at runtime"
msgstr "运行时配置伪本地化"

msgid ""
"Pseudolocalization can be toggled at runtime using "
"the :ref:`pseudolocalization_enabled<class_TranslationServer_property_pseudolocalization_enabled>` "
"property in TranslationServer. However, if runtime configuration of "
"pseudolocalization properties is required, they can be directly configured "
"using :ref:`ProjectSettings.set_setting(property, value) "
"<class_ProjectSettings_method_set_setting>` and then "
"calling :ref:`TranslationServer.reload_pseudolocalization() "
"<class_TranslationServer_method_reload_pseudolocalization>` which reparses "
"the pseudolocalization properties and reloads the pseudolocalization. The "
"following code snippet shall turn on ``replace_with_accents`` and "
"``double_vowels`` properties and then call ``reload_pseudolocalization()`` "
"for the changes to get reflected::"
msgstr ""
"可以在运行时使用 TranslationServer "
"的 :ref:`pseudolocalization_enabled<class_TranslationServer_property_pseudolocalization_enabled>` "
"属性开关伪本地化。但是如果需要在运行时配置伪本地化属性，则可以使"
"用 :ref:`ProjectSettings.set_setting(property, value) "
"<class_ProjectSettings_method_set_setting>` 直接配置，然后调"
"用 :ref:`TranslationServer.reload_pseudolocalization() "
"<class_TranslationServer_method_reload_pseudolocalization>` 重新解析伪本地化"
"属性并重新加载伪本地化。以下代码片段会打开 ``replace_with_accents`` 和 "
"``double_vowels`` 属性，然后调用 ``reload_pseudolocalization()`` 反映更"
"改： ::"
