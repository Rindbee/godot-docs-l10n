#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Controlling thousands of fish with Particles"
msgstr "用粒子控制数千条鱼"

msgid ""
"First create a Particles node. Then, under \"Draw Passes\" set the "
"Particle's \"Draw Pass 1\" to your :ref:`Mesh <class_Mesh>`. Then under "
"\"Process Material\" create a new :ref:`ShaderMaterial "
"<class_ShaderMaterial>`."
msgstr ""
"首先创建一个 Particles 节点。然后在“Draw Passes”下将粒子的“Draw Pass 1”设置为"
"你的 :ref:`Mesh <class_Mesh>`\\ 。然后在“Process Material”下创建一个新的 :"
"ref:`ShaderMaterial <class_ShaderMaterial>`\\ 。"

msgid "Set the ``shader_type`` to ``particles``."
msgstr "将 ``shader_type`` 设置为 ``particles``\\ 。"

msgid "Then add the following two functions:"
msgstr "然后添加以下两个函数："

msgid ""
"The code in the ``start()`` function only runs when the particle system "
"starts. The code in the ``process()`` function will always run."
msgstr ""
"``start()`` 函式中的代码仅在粒子系统启动时运作。 ``process()`` 函式中的代码将"
"始终运作。"

msgid ""
"Then, use those seeds to generate random numbers using ``rand_from_seed``:"
msgstr "然后，使用这些种子生成随机数，使用 ``rand_from_seed``\\ ："

msgid ""
"Finally, assign ``position`` to ``TRANSFORM[3].xyz``, which is the part of "
"the transform that holds the position information."
msgstr ""
"最后，将 ``position`` 赋值给 ``TRANSFORM[3].xyz``\\ ，它是保存位置信息的变换"
"的一部分。"

msgid ""
"The vertex shader for your mesh can stay the exact same as it was in the "
"previous tutorial."
msgstr "网格的顶点着色器, 可以完全复用前一教程中的."

msgid ""
"Now you can move each fish individually each frame, either by adding to the "
"``TRANSFORM`` directly or by writing to ``VELOCITY``."
msgstr ""
"现在每一帧你都可以单独移动每条鱼了，可以直接增加 ``TRANSFORM`` 也可以设置 "
"``VELOCITY``\\ 。"

msgid ""
"This is the most basic way to set ``VELOCITY`` every particle (or fish) will "
"have the same velocity."
msgstr "这是设置 ``VELOCITY`` 的最基本方法，每个粒子（或鱼）都有相同的速度。"

msgid ""
"Just by setting ``VELOCITY`` you can make the fish swim however you want. "
"For example, try the code below."
msgstr "只要设置 ``VELOCITY``\\ ，你就可以让鱼自由游动。例如，尝试下面的代码。"

msgid "This will give each fish a unique speed between ``2`` and ``10``."
msgstr "这将为每条鱼在 ``2`` 和 ``10`` 之间设置不同的速度。"

msgid ""
"You can also let each fish change its velocity over time if you set the "
"velocity in the ``process()`` function."
msgstr ""
"如果你在 ``process()`` 函式中设定速度，你也可以让每条鱼随着时间的推移改变其速"
"度。"

msgid ""
"If you used ``CUSTOM.y`` in the last tutorial, you can also set the speed of "
"the swim animation based on the ``VELOCITY``. Just use ``CUSTOM.y``."
msgstr ""
"如果你在上一个教程中使用了 ``CUSTOM.y``\\ ，你也可以基于 ``VELOCITY`` 来设置"
"游泳动画的速度。直接用 ``CUSTOM.y`` 就好了。"

msgid "This code gives you the following behavior:"
msgstr "代码产生的效果如图:"

msgid "Translation status"
msgstr "翻译状态"
