#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Deploying to Android"
msgstr "部署到 Android"

msgid "Setup"
msgstr "场景布置"

msgid ""
"Most standalone headsets run on Android and OpenXR support is making its way "
"to these platforms."
msgstr ""
"多数独立头显运行在 Android 上，并且 OpenXR 支持正在逐步推广到这些平台。"

msgid ""
"Before following the OpenXR-specific instructions here, you'll need to first "
"setup your system to export to Android in general, including:"
msgstr ""
"在遵循此处的 OpenXR 特定说明之前，你需要首先设置你的系统以导出到 Android 平"
"台，包括："

msgid "Installing OpenJDK 17"
msgstr "安装 OpenJDK 17"

msgid "Installing Android Studio"
msgstr "安装 Android Studio"

msgid ""
"See :ref:`doc_exporting_for_android` for the full details, and return here "
"when you've finished these steps."
msgstr ""
"详情请参见 :ref:`doc_exporting_for_android` ，完成所需配置后再返回此处。"

msgid ""
"While the Mobile Vulkan renderer has many optimizations targeted at mobile "
"devices, we're still working out the kinks. It is highly advisable to use "
"the compatibility renderer (OpenGL) for the time being when targeting "
"Android based XR devices."
msgstr ""
"虽然 Vulkan 渲染器针对移动设备进行了优化，但目前我们仍在解决适配问题。就现在"
"而言，强烈建议开发者在针对基于 Android 的 XR 设备时使用兼容性渲染器"
"（OpenGL）。"

msgid "Gradle Android build"
msgstr "Gradle Android 构建"

msgid ""
"Official support for the Android platform wasn't added to the OpenXR "
"specification initially resulting in various vendors creating custom loaders "
"to make OpenXR available on their headsets. While the long term expectation "
"is that all vendors will adopt the official OpenXR loader, for now these "
"loaders need to be added to your project."
msgstr ""
"最初，官方对 Android 平台的支持并未添加到 OpenXR 规范中，这导致各大供应商都创"
"建了自定义加载器以在其头戴设备上实现 OpenXR。尽管从长远角度来看，所有供应商都"
"终将转移到官方的 OpenXR 加载器；但就当下来说，这些加载器需要添加到你的项目"
"中。"

msgid ""
"In order to include the vendor-specific OpenXR loader into your project, you "
"will need to setup a gradle Android build."
msgstr ""
"为了将特定供应商的 OpenXR 加载器包含到你的项目中，你需要先设置一个 Gradle "
"Android 构建。"

msgid "Select **Install Android Build Template...** from the **Project** menu:"
msgstr "在\\ **项目**\\ 菜单中选择\\ **安装 Android 构建模板...**\\ ："

msgid ""
"This will create a folder called **android** inside of your project that "
"contains all the runtime files needed on Android. You can now customize this "
"installation. Godot won't show this in the editor but you can find it with a "
"file browser."
msgstr ""
"这将在你的项目中创建一个名为 **android** 的文件夹，包含在 Android 上运行所需"
"的所有运行时文件。现在你可以自定义这个安装，Godot 不会在编辑器中显示这个文件"
"夹，但你可以通过文件浏览器找到它。"

msgid ""
"You can read more about gradle builds here: :ref:`doc_android_gradle_build`."
msgstr ""
"你可以在这里阅读更多关于 Gradle 构建的信息："
"\\ :ref:`doc_android_gradle_build`\\ 。"

msgid "Installing the vendors plugin"
msgstr "安装供应商插件"

msgid ""
"You can find the main repository of the vendors plugin `here <https://"
"github.com/GodotVR/godot_openxr_vendors>`__."
msgstr ""
"你可以在 `这里 <https://github.com/GodotVR/godot_openxr_vendors>`__ 找到 "
"vendors 插件的主仓库。"

msgid "Creating the export presets"
msgstr "创建导出预设"

msgid ""
"You will need to setup a separate export preset for each device, as each "
"device will need its own loader included."
msgstr "不同的设备有不同的加载器，因此你需要为每个设备分别准备导出预设。"

msgid ""
"Open **Project** and select **Export..**. Click on **Add..** and select "
"**Android**. Next change the name of the export preset for the device you're "
"setting this up for, say **Meta Quest**. And enable **Use Gradle Build**. If "
"you want to use one-click deploy (described below), ensure that **Runnable** "
"is enabled."
msgstr ""
"打开 **Project** 并选择 **Export...** 。点击 **Add...** 并选择 **Android** 。"
"接下来，将导出预设的名称更改为你正在设置的设备的名称，比如 **Meta Quest** 。"
"启用 **Use Gradle Build** 。如果你想使用一键部署（如下所述），记得启用 "
"**Runnable** 。"

msgid "Running on your device from the Godot editor"
msgstr "通过 Godot 编辑器在设备上运行"

msgid ""
"If you've setup your export settings as described above, and your headset is "
"connected to your computer and correctly recognized, you can launch it "
"directly from the Godot editor using :ref:`doc_one-click_deploy`:"
msgstr ""
"如果按照上述说明设置导出预设，且头戴设备已连接到电脑并被正确识别，你可以通过"
"\\ :ref:`doc_one-click_deploy`\\ 直接从 Godot 编辑器启动它："

msgid ""
"For some devices on some platforms, you may need to perform some extra steps "
"in order for your device to be recognized correctly, so be sure to check the "
"developer documentation from your headset vendor."
msgstr ""
"正确识别某些平台上的某些设备，可能需要执行额外步骤，请务必查阅头显设备供应商"
"的开发者文档。"

msgid ""
"For example, with the Meta Quest 2, you need to enable developer mode on the "
"headset, and if you're on Windows, you'll need to install special ADB "
"drivers. See the `official Meta Quest developer documentation <https://"
"developer.oculus.com/documentation/native/android/mobile-device-setup/>`_ "
"for more details."
msgstr ""
"例如，对于 Meta Quest 2，你需要在头戴设备上启用开发者模式，并且如果你在 "
"Windows 上开发，还需安装特定 ADB 驱动程序。更多详细信息，请参阅\\ `官方 Meta "
"Quest 开发者文档 <https://developer.oculus.com/documentation/native/android/"
"mobile-device-setup/>`_\\ 。"

msgid ""
"If you're having any issues with one-click deploy, check "
"the :ref:`Troubleshooting section <doc_one-click_deploy_troubleshooting>`."
msgstr ""
"如果你在一键部署方面遇到了问题，可参考\\ :ref:`一键部署的故障排除 <doc_one-"
"click_deploy_troubleshooting>`\\ 。"
