#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Basic XR Locomotion"
msgstr "基础 XR 运动"

msgid ""
"For basic locomotion we're going to continue using our Godot XR Tools "
"library. The library contains both basic movement features as more advanced "
"features."
msgstr ""
"对于基本运动，我们将继续使用 Godot XR 工具库。该库既包含基本运动功能，也包含"
"更高级的功能。"

msgid "Adding our player body"
msgstr "添加玩家的身体"

msgid "Adding a floor"
msgstr "添加地板"

msgid ""
"This node governs the in game movement of your character and will "
"immediately react to gravity. So to prevent our player from infinitely "
"falling down we'll quickly add a floor to our scene."
msgstr ""
"该节点控制角色在游戏中的移动，并会立即对重力做出反应。因此，为了防止玩家无限"
"下坠，我们将在场景中快速添加一个地板。"

msgid ""
"We start by adding a :ref:`StaticBody3D <class_staticbody3d>` node to our "
"root node and we rename this to ``Floor``. We add a :ref:`MeshInstance3D "
"<class_meshinstance3d>` node as a child node for our ``Floor``. Then create "
"a new :ref:`PlaneMesh <class_planemesh>` as it's mesh. For now we set the "
"size of the mesh to 100 x 100 meters. Next we add a :ref:`CollisionShape3D "
"<class_collisionshape3d>` node as a child node for our ``Floor``. Then "
"create a ``BoxShape`` as our shape. We set the size of this box shape to 100 "
"x 1 x 100 meters. We also need to move our collision shape down by 0.5 "
"meters so the top of our box is flush with the floor."
msgstr ""
"我们首先在根节点中添加一个 :ref:`StaticBody3D <class_staticbody3d>` 节点，并"
"将其重命名为 ``Floor``\\ 。我们添加一个 :ref:`MeshInstance3D "
"<class_meshinstance3d>` 节点作为 ``Floor`` 的子节点。然后创建一个新的 :ref:"
"`PlaneMesh <class_planemesh>` 作为其网格。现在我们将网格的大小设置为 100 x "
"100 米。接下来我们添加一个 :ref:`CollisionShape3D <class_collisionshape3d>` "
"节点作为 ``Floor`` 的子节点。然后创建一个 ``BoxShape`` 作为我们的形状。我们将"
"这个盒子形状的大小设置为 100 x 1 x 100 米。我们还需要将碰撞形状向下移动 0.5 "
"米，以使盒子的顶部与地板齐平。"

msgid ""
"To make it easier to see that we're actually moving around our world, a "
"white floor isn't going to do it. For this we add a material to our "
"PlaneMesh and set the albedo to a grid texture we've created with `Wahooneys "
"excellent free texture generator <https://wahooney.itch.io/texture-grid-"
"generator>`_."
msgstr ""
"为了更容易看出玩家在世界中的移动，我们需要替换地板的白色材质。为此我们为 "
"PlaneMesh 创建一个材质，将 Albedo 设为我们用 `Wahooneys excellent free "
"texture generator <https://wahooney.itch.io/texture-grid-generator>`_ 创建的"
"栅格纹理。"

msgid "Direct movement"
msgstr "直接移动"

msgid ""
"We're going to start adding some basic direct movement to our setup. This "
"allows the user to move through the virtual world using joystick input."
msgstr ""
"我们将开始在我们的设置中添加一些基本的直接运动。这允许用户使用摇杆输入在虚拟"
"世界中移动。"

msgid ""
"It is important to note that moving through the virtual world while the "
"player is standing still in the real world, can be nausea inducing "
"especially for players who are new to VR. The default settings on our "
"movement functions are fairly conservative. We advise you to stick to these "
"defaults but offer features in game to enable less comfortable settings for "
"more experienced users who are used to playing VR games."
msgstr ""
"应当注意，玩家在虚拟世界移动的同时在现实世界中处于静止状态，这可能导致晕眩，"
"对经验较少的 VR 玩家尤其如此。我们的移动函数的默认设置相对保守。我们建议你遵"
"守这些设置，但同时在游戏中提供为更有经验且习惯于 VR 游戏的玩家提供舒适度更低"
"的设置的功能。"

msgid ""
"If you run your game at this point in time you will find that you can move "
"through the world freely using the right hand joystick."
msgstr ""
"如果你在这个时间点运行你的游戏，你会发现你可以使用右手摇杆在世界中自由移动。"

msgid "Teleport"
msgstr "传送"

msgid ""
"With this scene added the player will be able to teleport around the world "
"by pressing the trigger on the left hand controller, pointing where they "
"want to go, and then releasing the trigger. The player can also adjust the "
"orientation by using the left hand controllers joystick."
msgstr ""
"添加了该场景后，玩家可以通过按动左手控制器上的扳机，指向目标位置，然后释放扳"
"机来传送至目标位置。同时玩家可以通过左手控制器上的摇杆来控制朝向。"

msgid "More advanced movement features"
msgstr "更多高级移动功能"

msgid ""
"Godot XR Tools adds many more movement features such as gliding, a grapple "
"hook implementation, a jetpack, climbing mechanics, etc."
msgstr ""
"Godot XR 工具增加了更多的运动功能，如滑翔，抓钩，喷气背包，攀爬机制等。"

msgid ""
"Most work similarly to the basic movement features we've handled so far, "
"simply add the relevant subscene from the plugin to the controller that "
"implements it."
msgstr ""
"其中大部分与之前我们处理的基本移动功能类似，简单地将插件中相关的子场景添加到"
"负责实现的控制器中即可。"

msgid ""
"We'll look at some of these in more detail later on in this tutorial where "
"additional setup is required (such as climbing) but for others please look "
"at Godot XR Tools own help pages for details."
msgstr ""
"稍后我们会深入探究其中一些需要额外设置的功能（例如攀爬），但剩余部分请参考 "
"Godot XR 工具部分的帮助页面。"
