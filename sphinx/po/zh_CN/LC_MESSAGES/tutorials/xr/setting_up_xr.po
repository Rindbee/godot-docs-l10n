#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Setting up XR"
msgstr "设置 XR"

msgid "Introduction to the XR system in Godot"
msgstr "Godot 的 XR 系统简介"

msgid ""
":ref:`XROrigin3D <class_xrorigin3d>` represents, for all intents and "
"purposes, the center point of your play space. That is an oversimplified "
"statement but we'll go into more detail later. All objects tracked in "
"physical space by the XR platform are positioned in relation to this point."
msgstr ""
":ref:`XROrigin3D <class_xrorigin3d>`代表着游戏空间的中心点。这种说法易于理"
"解，但有些过于简化，我们稍后会详细解释。XR 平台跟踪的所有物体都是相对于这一点"
"定位的。"

msgid ""
":ref:`XRCamera3D <class_xrcamera3d>` represents the (stereo) camera that is "
"used when rendering output for the XR device. The positioning of this node "
"is controlled by the XR system and updated automatically using the tracking "
"information provided by the XR platform."
msgstr ""
":ref:`XRCamera3D <class_xrcamera3d>`代表着在为 XR 设备渲染输出时使用的（立"
"体）摄像机。该节点的定位由 XR 系统控制，并基于 XR 平台提供的跟踪信息自动更"
"新。"

msgid ""
":ref:`XRController3D <class_xrcontroller3d>` represents a controller used by "
"the player, commonly there are two, one held in each hand. These nodes give "
"access to various states on these controllers and send out signals when the "
"player presses buttons on them. The positioning of this node is controlled "
"by the XR system and updated automatically using the tracking information "
"provided by the XR platform."
msgstr ""
":ref:`XRController3D <class_xrcontroller3d>`代表玩家使用的控制器，通常有两"
"个：左右手各一个。该节点提供对控制器上各种状态的访问，并在玩家按下按钮时发送"
"信号。节点的定位由 XR 系统控制，并基于 XR 平台提供的跟踪信息自动更新。"

msgid "Prerequisites for XR in Godot 4"
msgstr "在 Godot 4 中使用 XR 的先决条件"

msgid ""
"As Godot 4 is still in development, many post process effects have not yet "
"been updated to support stereoscopic rendering. Using these will have "
"adverse effects."
msgstr ""
"由于 Godot 4 仍在开发中，许多后期处理效果尚未更新以支持立体渲染。使用这些效果"
"将产生不良影响。"

msgid "OpenXR"
msgstr "OpenXR"

msgid ""
"The Vulkan implementation of OpenXR is closely integrated with Vulkan, "
"taking over part of the Vulkan system. This requires tight integration of "
"certain core graphics features in the Vulkan renderer which are needed "
"before the XR system is setup. This was one of the main deciding factors to "
"include OpenXR as a core interface."
msgstr ""
"OpenXR 的 Vulkan 实现与 Vulkan 紧密集成，并接管了 Vulkan 系统的一部分。这就要"
"求在设置 XR 系统之前，需要对 Vulkan 渲染器中的某些核心图形功能先行集成。这是"
"将 OpenXR 包含为核心接口的主要决定因素之一。"

msgid ""
"This also means OpenXR needs to be enabled when Godot starts in order to set "
"things up correctly. The required setting can be found in your project "
"settings:"
msgstr ""
"这也意味着需要在 Godot 启动时启用 OpenXR，以便正确设置。启动页面可在项目设置"
"中找到："

msgid ""
"As setup is brought forward with OpenXR you can find several other settings "
"related to OpenXR here as well. These can't be changed while your "
"application is running. The default settings will get us started and we will "
"go into detail in another section of the documentation."
msgstr ""
"你还可以在这里找到与 OpenXR 相关的其他设置。这些设置在应用程序运行时无法更"
"改。默认设置即可让我们开始工作，并且我们将在文档的另一部分详细介绍这些设置。"

msgid "Setting up the XR scene"
msgstr "设置 XR 场景"

msgid ""
"Next you need to configure the controllers, select the left hand and set it "
"up as follows:"
msgstr "接下来，你需要配置控制器。选择左手控制器，并按如下方式进行设置："

msgid "And the right hand:"
msgstr "将脚本添加到节点："

msgid ""
"Right now all these nodes are on the floor, they will be positioned "
"correctly in runtime. To help during development, it can be helpful to move "
"the camera upwards so its ``y`` is set to ``1.7``, and move the controller "
"nodes to ``-0.5, 1.0, -0.5`` and ``0.5, 1.0, -0.5`` for respectively the "
"left and right hand."
msgstr ""
"现在，所有节点都在场景的平面上，它们将在运行时自动正确定位。为了帮助开发期间"
"的调试，可以将相机向上移动，再把 ``y`` 轴设置为 ``1.7``，并将控制器节点分别移"
"动到 ``-0.5, 1.0, -0.5``（左手）和 ``0.5, 1.0, -0.5``（右手）。"

msgid ""
"This code fragment assumes we are using OpenXR, if you wish to use any of "
"the other interfaces you can change the ``find_interface`` call."
msgstr ""
"上述代码片段假设我们正在使用 OpenXR，如果你希望使用其他接口，可以更改"
"``find_interface`` 调用。"

msgid ""
"As you can see in the code snippet above, we turn off v-sync. When using "
"OpenXR you are outputting the rendering results to an HMD that often "
"requires us to run at 90Hz or higher. If your monitor is a 60hz monitor and "
"v-sync is turned on, you will limit the output to 60 frames per second."
msgstr ""
"正如你看到的，我们在代码中关闭了垂直同步（DisplayServer.VSYNC_DISABLED）。在"
"使用 OpenXR 时，将渲染结果输出到一个头戴显示器（HMD）通常需要以 90Hz 或更高的"
"频率运行。如果你的显示器是 60Hz 且开启了垂直同步，那么输出将限制在每秒 60 "
"帧。"

msgid "XR interfaces like OpenXR perform their own sync."
msgstr "像 OpenXR 这样的 XR 接口会执行它们自己的同步。"

msgid ""
"Also note that by default the physics engine runs at 60Hz as well and this "
"can result in choppy physics. You should set ``Engine."
"physics_ticks_per_second`` to a higher value."
msgstr ""
"同时请注意，默认情况下物理引擎以 60Hz 运行，渲染和物理帧数不一致可能会导致物"
"理效果不流畅。你应该将 ``Engine.physics_ticks_per_second`` 设置为更高的值。"

msgid ""
"Now run your project, you should be floating somewhere in space and be able "
"to look around."
msgstr "完成配置后运行项目，你应该会漂浮在某个空间中，并能够四处观察。"

msgid ""
"For the rest of this basic tutorial series we will create a game that uses a "
"single scene."
msgstr "在接下来的基础教程中，我们将创建一个只使用单场景的游戏作为练习。"

msgid "Translation status"
msgstr "翻译状态"
