# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-20 18:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using NavigationAgents"
msgstr "使用 NavigationAgent"

msgid ""
"NavigationsAgents are helper nodes that combine functionality for "
"pathfinding, path following and agent avoidance for a Node2D/3D inheriting "
"parent node. They facilitate common calls to the NavigationServer API on "
"behalf of the parent actor node in a more convenient manner for beginners."
msgstr ""
"NavigationAgent 即导航代理，是一种辅助节点，能够为继承自 Node2D/3D 的父节点提"
"供寻路、路径跟随、代理躲避等功能。这类节点会代替父级角色节点对 "
"NavigationServer API 进行常见的调用，针对初学者进行了优化。"

msgid ""
"2D and 3D version of NavigationAgents are available as :ref:"
"`NavigationAgent2D<class_NavigationAgent2D>` and :ref:"
"`NavigationAgent3D<class_NavigationAgent3D>` respectively."
msgstr ""
"2D 和 3D 版本的 NavigationAgent 分别是 :ref:"
"`NavigationAgent2D<class_NavigationAgent2D>` 和 :ref:"
"`NavigationAgent3D<class_NavigationAgent3D>`\\ 。"

msgid ""
"New NavigationAgent nodes will automatically join the default navigation map "
"on the :ref:`World2D<class_World2D>`/:ref:`World3D<class_World3D>`."
msgstr ""
"新建的 NavigationAgent 节点会自动加入 :ref:`World2D<class_World2D>`/:ref:"
"`World3D<class_World3D>` 的默认导航地图。"

msgid ""
"NavigationsAgent nodes are optional and not a hard requirement to use the "
"navigation system. Their entire functionality can be replaced with scripts "
"and direct calls to the NavigationServer API."
msgstr ""
"NavigationsAgent 节点是可选的，不是使用导航系统的硬性要求。对应的功能都可以用"
"脚本代替，替换为对 NavigationServer API 的直接调用。"

msgid "NavigationAgent Pathfinding"
msgstr "NavigationAgent 寻路"

msgid ""
"NavigationAgents query a new navigation path on their current navigation map "
"when their ``target_position`` is set with a global position."
msgstr ""
"当 ``target_position`` 设置为全局位置时，NavigationAgent会在其当前导航地图上"
"查询新的导航路径。"

msgid ""
"The result of the pathfinding can be influenced with the following "
"properties."
msgstr "匀速遍历, 然后, 可以用下面的伪代码。"

msgid ""
"The ``navigation_layers`` bitmask can be used to limit the navigation meshes "
"that the agent can use."
msgstr "``navigation_layers`` 位元遮罩可用于限制代理可以使用的导航网格。"

msgid ""
"The ``pathfinding_algorithm`` controls how the pathfinding travels through "
"the navigation mesh polygons in the path search."
msgstr ""
"``pathfinding_algorithm`` 控制路径搜索中路径查找如何通过导航网格多边形。"

msgid ""
"The ``path_postprocessing`` sets if or how the raw path corridor found by "
"the pathfinding is altered before it is returned."
msgstr ""
"``path_postprocessing`` 设置在路径查找找到的原始路径走廊返回之前是否或如何更"
"改。"

msgid ""
"The ``path_metadata_flags`` enable the collection of additional path point "
"meta data returned by the path."
msgstr "``path_metadata_flags`` 允许收集路径返回的附加路径点元资料。"

msgid ""
"Disabling path meta flags will disable related signal emissions on the agent."
msgstr "禁用路径元旗标将禁用代理上的相关信号发射。"

msgid "NavigationAgent Pathfollowing"
msgstr "NavigationAgent 路径跟随"

msgid ""
"After a ``target_position`` has been set for the agent, the next position to "
"follow in the path can be retrieved with the ``get_next_path_position()`` "
"function."
msgstr ""
"为代理程序设定 ``target_position`` 后，可以使用 ``get_next_path_position()`` "
"函式来撷取路径中要遵循的下一个位置。"

msgid ""
"Once the next path position is received move the parent actor node of the "
"agent towards this path position with your own movement code."
msgstr ""
"收到下一个路径位置，使用你自己的移动代码将代理的父参与者节点移到此路径位置。"

msgid ""
"The navigation system never moves the parent node of a NavigationAgent. The "
"movement is entirely in the hands of users and their custom scripts."
msgstr ""
"导览系统永远不会移动NavigationAgent的父节点。该动作完全掌握在使用者及其自定义"
"脚本的手中。"

msgid ""
"NavigationAgents have their own internal logic to proceed with the current "
"path and call for updates."
msgstr "NavigationAgent有自己的内部逻辑来处理当前路径并调用更新。"

#, fuzzy
msgid ""
"The ``get_next_path_position()`` function is responsible for updating many "
"of the agent's internal states and properties. The function should be "
"repeatedly called *once* every ``physics_process`` until "
"``is_navigation_finished()`` tells that the path is finished. The function "
"should not be called after the target position or path end has been reached "
"as it can make the agent jitter in place due to the repeated path updates. "
"Always check very early in script with ``is_navigation_finished()`` if the "
"path is already finished."
msgstr ""
"``get_next_path_position()`` 函数负责更新代理的许多内部状态和属性。应重复调用"
"该函数 *once* `physics_process` `，直到 ``is_navigation_finished()`` 告诉路径"
"已完成。在到达目标位置或路径末端后不应调用该函数，因为它可能会由于重复的路径"
"更新而使代理在适当的位置发生抖动。如果路径已经完成，请始终在脚本中尽早使用 "
"``is_navigation_finished()`` 进行检查。"

msgid "The following properties influence the path following behavior."
msgstr "这个节点有如下属性可供设置。"

msgid ""
"The ``path_desired_distance`` defines the distance at which the agent "
"advances its internal path index to the next path position."
msgstr ""
"``path_desired_distance`` 定义了代理将其内部路径索引前进到下一个路径位置的距"
"离。"

msgid ""
"The ``target_desired_distance`` defines the distance at which the agent "
"considers the target position to be reached and the path at its end."
msgstr ""
"``target_desired_distance`` 定义了代理认为要到达的目标位置及其末端的路径的距"
"离。"

msgid ""
"The ``path_max_distance`` defines when an agent requests a new path cause it "
"was moved too far away from the current path point segment."
msgstr ""
"``path_max_distance`` 定义代理何时请求新路径，原因是它移动得离当前路径点段太"
"远。"

msgid ""
"The important updates are all triggered with the "
"``get_next_path_position()`` function when called in ``_physics_process()``."
msgstr ""
"当在 ``_physics_process()`` 中调用 ``get_next_path_position()`` 函数时，所有"
"重要的更新都会被触发。"

msgid ""
"NavigationAgents can be used with ``process`` but are still limited to a "
"single update that happens in ``physics_process``."
msgstr ""
"NavigationAgent可以与 ``process`` 一起使用，但仍限于在 ``physics_process`` 中"
"发生的单个更新。"

msgid ""
"Script examples for various nodes commonly used with NavigationAgents can be "
"found further below."
msgstr "以下是NavigationAgent常用的各种节点的脚本示例。"

msgid "Pathfollowing common problems"
msgstr "运行以下命令"

msgid ""
"There are some common user problems and important caveats to consider when "
"writing agent movement scripts."
msgstr "在编写代理移动脚本时，需要考虑一些常见的用户问题和重要的注意事项。"

msgid "The path is returned empty"
msgstr "路径返回为空"

msgid ""
"If an agent queries a path before the navigation map synchronisation, e.g. "
"in a ``_ready()`` function, the path might return empty. In this case the "
"``get_next_path_position()`` function will return the same position as the "
"agent parent node and the agent will consider the path end reached. This is "
"fixed by making a deferred call or using a callback e.g. waiting for the "
"navigation map changed signal."
msgstr ""
"如果代理在导航地图同步之前查询路径，例如在 ``_ready()`` 函数中，路径可能返回"
"空。在这种情况下， ``get_next_path_position()`` 函数将返回与代理父节点相同的"
"位置，并且代理将考虑到达的路径末端。这是通过进行延迟调用或使用回调来解决的，"
"例如等待导航地图更改信号。"

msgid "The agent is stuck dancing between two positions"
msgstr "代理在两个位置跳跃"

msgid ""
"This is usually caused by very frequent path updates every single frame, "
"either deliberate or by accident (e.g. max path distance set too short). The "
"pathfinding needs to find the closest position that are valid on navigation "
"mesh. If a new path is requested every single frame the first path positions "
"might end up switching constantly in front and behind the agent's current "
"position, causing it to dance between the two positions."
msgstr ""
"这通常是由于每个影格非常频繁的路径更新造成的，无论是有意还是无意（例如，最大"
"路径距离设定得太短）。寻路需要找到导览网格上有效的最近位置。如果每个影格都请"
"求新路径，则第一个路径位置可能最终会在代理目前位置的前后不断切换，导致其在两"
"个位置之间跳跃。"

msgid "The agent is backtracking sometimes"
msgstr "代理有时会回溯"

msgid ""
"If an agent moves very fast it might overshoot the path_desired_distance "
"check without ever advancing the path index. This can lead to the agent "
"backtracking to the path point now behind it until it passes the distance "
"check to increase the path index. Increase the desired distances accordingly "
"for your agent speed and update rate usually fixes this as well as a more "
"balanced navigation mesh polygon layout with not too many polygon edges "
"cramped together in small spaces."
msgstr ""
"如果代理程序移动得非常快，它可能会超出path_desired_distance检查，而不会推进路"
"径索引。这可能导致代理回溯到它后面的路径点，直到它通过距离检查以增加路径索"
"引。根据代理速度和更新速率相应地增加所需距离通常可以解决此问题，并且可以使用"
"更平衡的导览网格多边形布局，而不会在小空间内挤在一起太多的多边形边缘。"

msgid "The agent is sometimes looking backwards for a frame"
msgstr "代理有时会向后寻找影格"

msgid ""
"Same as with stuck dancing agents between two positions, this is usually "
"caused by very frequent path updates every single frame. Depending on your "
"navigation mesh layout, and especially when an agent is directly placed over "
"a navigation mesh edge or edge connection, expect path positions to be "
"sometimes slightly \"behind\" your actors current orientation. This happens "
"due to precision issues and can not always be avoided. This is usually only "
"a visible problem if actors are instantly rotated to face the current path "
"position."
msgstr ""
"与代理在两个位置之间卡住的跳跃相同，这通常是由每个影格非常频繁的路径更新引起"
"的。根据你的导览网格布局，尤其是当代理直接放置在导览网格边缘或边缘连接上时，"
"预计路径位置有时会稍微 \"behind\" (落后)角色目前方向。这种情况的发生是由于精"
"度问题，并且并非总是能够避免。如果演员立即旋转以面向目前路径位置，这通常只是"
"一个可见的问题。"

msgid "NavigationAgent Avoidance"
msgstr "NavigationAgent 避障"

msgid ""
"This section explains how to use the navigation avoidance specific to "
"NavigationAgents."
msgstr "本节解释了如何使用 NavigationAgent 的导航避障功能。"

msgid ""
"In order for NavigationAgents to use the avoidance feature the "
"``enable_avoidance`` property must be set to ``true``."
msgstr ""
"要让 NavigationAgent 使用避障功能，必须将 ``enable_avoidance`` 属性设置为 "
"``true``\\ 。"

msgid ""
"The ``velocity_computed`` signal of the NavigationAgent node must be "
"connected to receive the safe velocity calculation result."
msgstr ""
"必须连接 NavigationAgent 节点的 ``velocity_computed`` 信号，接收安全速度的计"
"算结果。"

#, fuzzy
msgid ""
"Set the ``velocity`` of the NavigationAgent node in ``_physics_process()`` "
"to update the agent with the current velocity of the agent's parent node."
msgstr ""
"请在 ``_physics_process()`` 中使用 NavigationAgent 节点的 "
"``set_velocity()``\\ ，利用代理父节点的当前速度来更新代理。"

msgid ""
"While avoidance is enabled on the agent the ``safe_velocity`` vector will be "
"received with the velocity_computed signal every physics frame. This "
"velocity vector should be used to move the NavigationAgent's parent node in "
"order to avoidance collision with other avoidance using agents or avoidance "
"obstacles."
msgstr ""
"只要代理开启了避障，就可以在每个物理帧通过 velocity_computed 信号收到 "
"``safe_velocity`` 向量。应该使用这个速度向量来移动 NavigationAgent 的父节点，"
"这样就能够避免撞到其他使用了避障的代理以及避障障碍物。"

msgid ""
"Only other agents on the same map that are registered for avoidance themself "
"will be considered in the avoidance calculation."
msgstr "计算避障时只会考虑位于同一张地图中其他注册了避障的代理。"

msgid "The following NavigationAgent properties are relevant for avoidance:"
msgstr "NavigationAgent 中与避障相关的属性如下："

msgid ""
"The property ``height`` is available in 3D only. The height together with "
"the current global y-axis position of the agent determines the vertical "
"placement of the agent in the avoidance simulation. Agents using the 2D "
"avoidance will automatically ignore other agents or obstacles that are below "
"or above them."
msgstr ""
"属性 “height” 仅在三维中可用。高度与代理的当前全局y轴位置一起决定了代理在回避"
"模拟中的垂直位置。使用2D回避的代理将自动忽略其下方或上方的其他代理或障碍物。"

msgid ""
"The property ``radius`` controls the size of the avoidance circle, or in "
"case of 3D sphere, around the agent. This area describes the agents body and "
"not the avoidance maneuver distance."
msgstr ""
"属性 ``radius`` 控制迴避圆的大小，或者在3D球体的情况下，控制代理周围的大小。"
"该区域描述的是代理的身体，而不是躲避机动距离。"

msgid ""
"The property ``neighbor_distance`` controls the search radius of the agent "
"when searching for other agents that should be avoided. A lower value "
"reduces processing cost."
msgstr ""
"当搜索应避免的其他代理时，属性 ``neighbor_distance`` 控制代理的搜索半径。较低"
"的值可降低处理成本。"

msgid ""
"The property ``max_neighbors`` controls how many other agents are considered "
"in the avoidance calculation if they all have overlapping radius. A lower "
"value reduces processing cost but a too low value may result in agents "
"ignoring the avoidance."
msgstr ""
"属性 ``max_neighbors`` 控制在避免计算中考虑多少其他代理（如果它们都具有重叠半"
"径）。较低的值降低了处理成本，但过低的值可能导致代理忽略避免。"

msgid ""
"The properties ``time_horizon_agents`` and ``time_horizon_obstacles`` "
"control the avoidance prediction time for other agents or obstacles in "
"seconds. When agents calculate their safe velocities they choose velocities "
"that can be kept for this amount of seconds without colliding with another "
"avoidance object. The prediction time should be kept as low as possible as "
"agents will slow down their velocities to avoid collision in that timeframe."
msgstr ""
"属性 ``time_horizon_agents`` 和 ``time_horizon_obstacles`` 控制其他代理或障碍"
"物的回避预测时间（以秒为单位）。当特工计算他们的安全速度时，他们选择的速度可"
"以保持这一秒，而不会与另一个躲避物体碰撞。预测时间应尽可能低，因为代理会减慢"
"速度以避免在该时间段内发生碰撞。"

msgid ""
"The property ``max_speed`` controls the maximum velocity allowed for the "
"agents avoidance calculation. If the agents parents moves faster than this "
"value the avoidance ``safe_velocity`` might not be accurate enough to avoid "
"collision."
msgstr ""
"属性 ``max_speed`` 控制代理回避计算所允许的最大速度。如果代理父母移动得比这个"
"值快，则避免 ``safe_velocity`` 可能不够准确，无法避免碰撞。"

msgid ""
"The property ``use_3d_avoidance`` switches the agent between the 2D "
"avoidance (xz axis) and the 3D avoidance (xyz axis) on the next update. Note "
"that 2D avoidance and 3D avoidance run in separate avoidance simulations so "
"agents split between them do not affect each other."
msgstr ""
"属性 ``use_3d_avoidance`` 在下一次更新时在2D回避（xz轴）和3d回避（xyz轴）之间"
"切换代理。请注意，2D回避和3D回避在单独的回避模拟中运行，因此在它们之间划分的"
"代理不会相互影响。"

msgid ""
"The properties ``avoidance_layers`` and ``avoidance_mask`` are bitmasks "
"similar to e.g. physics layers. Agents will only avoid other avoidance "
"objects that are on an avoidance layer that matches at least one of their "
"own avoidance mask bits."
msgstr ""
"属性 ``avoidance_layers`` 和 ``avoidance_mask`` 是类似于例如物理层的位掩码。"
"代理将仅避开位于与其自己的回避掩码位中的至少一个相匹配的回避层上的其他回避对"
"象。"

msgid ""
"The ``avoidance_priority`` makes agents with a higher priority ignore agents "
"with a lower priority. This can be used to give certain agents more "
"importance in the avoidance simulation, e.g. important npcs characters, "
"without constantly changing their entire avoidance layers or mask."
msgstr ""
"``avoidance_priority`` 使优先级较高的代理忽略优先级较低的代理。这可以用于在避"
"免模拟中赋予某些代理更大的重要性，例如重要的npc字符，而不必不断改变其整个避免"
"层或掩码。"

msgid ""
"Avoidance exists in its own space and has no information from navigation "
"meshes or physics collision. Behind the scene avoidance agents are just "
"circles with different radius on a flat 2D plane or spheres in an otherwise "
"empty 3D space. NavigationObstacles can be used to add some environment "
"constrains to the avoidance simulation, see :ref:"
"`doc_navigation_using_navigationobstacles`."
msgstr ""
"回避存在于其自身的空间中，并且没有来自导航网格或物理碰撞的信息。场景背后的回"
"避代理只是平面2D平面上具有不同半径的圆或其他空的3D空间中的球体。导航障碍物可"
"用于将一些环境约束添加到规避模拟中，请参见 :ref:"
"`doc_navigation_using_navigationobstacles` 。"

msgid ""
"Avoidance does not affect the pathfinding. It should be seen as an "
"additional option for constantly moving objects that cannot be (re)baked to "
"a navigation mesh efficiently in order to move around them."
msgstr ""
"回避不会影响寻路。它应该被视为一个额外的选项，用于不断移动无法有效地（重新）"
"烘焙到导航网格中以在其周围移动的对象。"

msgid ""
"RVO avoidance makes implicit assumptions about natural agent behavior. E.g. "
"that agents move on reasonable passing sides that can be assigned when they "
"encounter each other. This means that very clinical avoidance test scenarios "
"will commonly fail. E.g. agents moved directly against each other with "
"perfect opposite velocities will fail because the agents can not get their "
"passing sides assigned."
msgstr ""

msgid ""
"Using the NavigationAgent ``enable_avoidance`` property is the preferred "
"option to toggle avoidance. The following code snippets can be used to "
"toggle avoidance on agents, create or delete avoidance callbacks or switch "
"avoidance modes."
msgstr ""
"使用NavigationAgent ``enable_avoidance`` 属性是切换回避的首选选项。以下代码段"
"可用于在代理上切换回避、创建或删除回避回调或切换回避模式。"

msgid "NavigationAgent Script Templates"
msgstr "NavigationAgent 脚本模板"

msgid ""
"The following sections provides script templates for nodes commonly used "
"with NavigationAgents."
msgstr "以下部分提供了NavigationAgents常用节点的脚本模板。"

msgid "Actor as Node3D"
msgstr "角色为 Node3D"

#, fuzzy
msgid ""
"This script adds basic navigation movement to a :ref:`Node3D <class_Node3D>` "
"with a :ref:`NavigationAgent3D <class_NavigationAgent3D>` child node."
msgstr ""
"这个脚本能够为带有 NavigationAgent3D 子节点的 Node3D 添加基础的导航移动功能。"

msgid "Actor as CharacterBody3D"
msgstr "角色为 CharacterBody3D"

#, fuzzy
msgid ""
"This script adds basic navigation movement to a :ref:`CharacterBody3D "
"<class_CharacterBody3D>` with a :ref:`NavigationAgent3D "
"<class_NavigationAgent3D>` child node."
msgstr ""
"这个脚本能够为带有 NavigationAgent3D 子节点的 CharacterBody3D 添加基础的导航"
"移动功能。"

msgid "Actor as RigidBody3D"
msgstr "角色为 RigidBody3D"

#, fuzzy
msgid ""
"This script adds basic navigation movement to a :ref:`RigidBody3D "
"<class_RigidBody3D>` with a :ref:`NavigationAgent3D "
"<class_NavigationAgent3D>` child node."
msgstr ""
"这个脚本能够为带有 NavigationAgent3D 子节点的 RigidBody3D 添加基础的导航移动"
"功能。"

msgid "Translation status"
msgstr "翻译状态"
