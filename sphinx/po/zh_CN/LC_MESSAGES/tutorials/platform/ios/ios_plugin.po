#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating iOS plugins"
msgstr "创建 iOS 插件"

msgid ""
"This page explains what iOS plugins can do for you, how to use an existing "
"plugin, and the steps to code a new one."
msgstr ""
"本页说明 iOS 插件可以为你做什么、如何使用现有的插件、以及编写新插件的步骤。"

msgid ""
"iOS plugins allow you to use third-party libraries and support iOS-specific "
"features like In-App Purchases, GameCenter integration, ARKit support, and "
"more."
msgstr ""
"iOS 插件允许你使用第三方库，并支持 iOS 特定功能，如应用内购买、GameCenter 集"
"成、ARKit 支持等。"

msgid "Loading and using an existing plugin"
msgstr "加载和使用现有的插件"

msgid ""
"An iOS plugin requires a ``.gdip`` configuration file, a binary file which "
"can be either ``.a`` static library or ``.xcframework`` containing ``.a`` "
"static libraries, and possibly other dependencies. To use it, you need to:"
msgstr ""
"一个iOS插件需要一个 ``.gdip`` 配置文件, 一个二进制文件, 它可以是 ``.a`` 静态"
"库, 也可以是 ``.xcframework`` 包含 ``.a`` 静态库, 可能还有其他依赖关系. 要使"
"用它, 你需要:"

msgid ""
"Copy the plugin's files to your Godot project's ``res://ios/plugins`` "
"directory. You can also group files in a sub-directory, like ``res://ios/"
"plugins/my_plugin``."
msgstr ""
"将插件的文件复制到Godot项目的 ``res://ios/plugins`` 目录中. 你也可以将文件分"
"组在一个子目录中, 比如 ``res://ios/plugins/my_plugin`` ."

msgid ""
"The Godot editor automatically detects and imports ``.gdip`` files inside "
"``res://ios/plugins`` and its subdirectories."
msgstr ""
"Godot编辑器自动检测并导入 ``res://ios/plugins`` 及其子目录中的 ``.gdip`` 文"
"件."

msgid ""
"You can find and activate detected plugins by going to Project -> Export... "
"-> iOS and in the Options tab, scrolling to the Plugins section."
msgstr ""
"你可以通过进入项目->导出... ->iOS, 在选项卡中, 滚动到插件部分, 找到并激活检测"
"到的插件."

msgid ""
"The plugin's files have to be in the ``res://ios/plugins/`` directory or a "
"subdirectory, otherwise the Godot editor will not automatically detect them."
msgstr ""
"插件的文件必须位于 ``res://ios/plugins/`` 目录或子目录中，否则 Godot 编辑器将"
"不会自动检测它们。"

msgid "Creating an iOS plugin"
msgstr "创建 iOS 插件"

msgid ""
"At its core, a Godot iOS plugin is an iOS library (*.a* archive file or "
"*.xcframework* containing static libraries) with the following requirements:"
msgstr ""
"Godot iOS插件的核心是一个iOS库( *.a* 档文件或 *.xcframework* 包含静态库), 其"
"要求如下:"

msgid "The library must have a dependency on the Godot engine headers."
msgstr "该库必须依赖Godot引擎头文件."

msgid "The library must come with a ``.gdip`` configuration file."
msgstr "该库必须附带一个 ``.gdip`` 配置文件."

msgid ""
"An iOS plugin can have the same functionality as a Godot module but provides "
"more flexibility and doesn't require to rebuild the engine."
msgstr ""
"一个iOS插件可以拥有与Godot模块相同的功能, 但提供了更多的灵活性, 并且不需要重"
"新构建引擎."

msgid ""
"Here are the steps to get a plugin's development started. We recommend using "
"`Xcode <https://developer.apple.com/develop/>`_ as your development "
"environment."
msgstr ""
"下面是开始开发插件的步骤. 我们建议使用 `Xcode <https://developer.apple.com/"
"develop/>`_ 作为你的开发环境."

msgid ""
"The `Godot iOS Plugins <https://github.com/godotengine/godot-ios-plugins>`_."
msgstr ""
"`Godot iOS 插件 <https://github.com/godotengine/godot-ios-plugins>`_\\ 。"

msgid ""
"The `Godot iOS plugin template <https://github.com/naithar/"
"godot_ios_plugin>`_ gives you all the boilerplate you need to get your iOS "
"plugin started."
msgstr ""
"`Godot iOS 插件模板 <https://github.com/naithar/godot_ios_plugin>`_ 为你提供"
"了启动iOS插件所需的所有样板."

msgid "To build an iOS plugin:"
msgstr "要构建一个iOS插件:"

msgid "Create an Objective-C static library for your plugin inside Xcode."
msgstr "在Xcode中为你的插件创建一个Objective-C静态库."

msgid ""
"Add the Godot engine header files as a dependency for your plugin library in "
"``HEADER_SEARCH_PATHS``. You can find the setting inside the ``Build "
"Settings`` tab:"
msgstr ""
"在 ``HEADER_SEARCH_PATHS`` 中添加Godot引擎头文件作为插件库的依赖. 你可以在 "
"``Build Settings`` 选项卡中找到这个设置:"

msgid ""
"Download the Godot engine source from the `Godot GitHub page <https://"
"github.com/godotengine/godot>`_."
msgstr ""
"从 `Godot GitHub 页面 <https://github.com/godotengine/godot>`_\\ 下载 Godot "
"引擎的源代码。"

msgid ""
"Run SCons to generate headers. You can learn the process by "
"reading :ref:`doc_compiling_for_ios`. You don't have to wait for compilation "
"to complete to move forward as headers are generated before the engine "
"starts to compile."
msgstr ""
"运行SCons来生成头文件. 通过阅读 :ref:`doc_compiling_for_ios` 来了解这个过程. "
"不需要等待编译完成就可以继续, 因为在引擎开始编译之前就会生成头文件."

msgid ""
"You should use the same header files for iOS plugins and for the iOS export "
"template."
msgstr "你应该为iOS插件和iOS导出模板使用相同的头文件."

msgid ""
"In the ``Build Settings`` tab, specify the compilation flags for your static "
"library in ``OTHER_CFLAGS``. The most important ones are ``-fcxx-modules``, "
"``-fmodules``, and ``-DDEBUG`` if you need debug support. Other flags should "
"be the same you use to compile Godot. For instance:"
msgstr ""
"在 ``Build Settings`` 选项卡的 ``OTHER_CFLAGS`` 中指定静态库的编译选项。最重"
"要的是 ``-fcxx-modules`` 和 ``-fmodules``\\ ，如果你需要支持调试就还有 ``-"
"DDEBUG``\\ 。其他选项应该和你编译 Godot 时使用的一样。例如："

msgid ""
"Add the required logic for your plugin and build your library to generate a "
"``.a`` file. You will probably need to build both ``debug`` and ``release`` "
"target ``.a`` files. Depending on your needs, pick either or both. If you "
"need both debug and release ``.a`` files, their name should match following "
"pattern: ``[PluginName].[TargetType].a``. You can also build the static "
"library with your SCons configuration."
msgstr ""
"为你的插件添加所需的逻辑, 并建立你的库以生成一个 ``.a`` 文件. 你可能需要同时"
"建立 ``debug`` 和 ``release`` 目标 ``.a`` 文件. 根据你的需要, 选择其中一个或"
"两个. 如果你同时需要调试和发布 ``.a`` 文件, 它们的名字应该符合以下模式: "
"``[PluginName].[TargetType].a`` . 你也可以用SCons配置来构建静态库."

msgid ""
"The iOS plugin system also supports ``.xcframework`` files. To generate one, "
"you can use a command such as:"
msgstr ""
"iOS 插件系统也支持 ``.xcframework`` 文件。你可以用类似这样的命令来生成它："

msgid ""
"Create a Godot iOS Plugin configuration file to help the system detect and "
"load your plugin:"
msgstr "创建一个Godot iOS插件配置文件, 以帮助系统检测和加载你的插件:"

msgid ""
"The configuration file extension must be ``gdip`` (e.g.: ``MyPlugin.gdip``)."
msgstr "配置文件的扩展名必须是 ``gdip`` (e.g.: ``MyPlugin.gdip`` )."
