#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"In web builds, the :ref:`JavaScriptBridge <class_JavaScriptBridge>` "
"singleton allows interaction with JavaScript and web browsers, and can be "
"used to implement some functionalities unique to the web platform."
msgstr ""
"在 Web 构建中，:ref:`JavaScriptBridge <class_JavaScriptBridge>` 单例允许与 "
"JavaScript 和 Web 浏览器交互，并且可用于实现一些 Web 平台独有的功能。"

msgid "Interacting with JavaScript"
msgstr "与 JavaScript 交互"

msgid ""
"Sometimes, when exporting Godot for the Web, it might be necessary to "
"interface with external JavaScript code like third-party SDKs, libraries, or "
"simply to access browser features that are not directly exposed by Godot."
msgstr ""
"有时，在将 Godot 导出到 Web 时，可能需要与第三方 SDK、库等外部 JavaScript 代"
"码进行交互，或者只是访问 Godot 未直接公开的浏览器功能。"

msgid ""
"The ``JavaScriptBridge`` singleton provides methods to wrap a native "
"JavaScript object into a Godot :ref:`JavaScriptObject "
"<class_JavaScriptObject>` that tries to feel natural in the context of Godot "
"scripting (e.g. GDScript and C#)."
msgstr ""
"``JavaScriptBridge`` 单例提供了将原生 JavaScript 对象包装到 Godot :ref:"
"`JavaScriptObject <class_JavaScriptObject>` 内的方法，该对象能够在 Godot 编写"
"脚本（例如 GDScript 和 C#）的上下文中自由使用。"

msgid ""
"The :ref:`JavaScriptBridge.get_interface() "
"<class_JavaScriptBridge_method_get_interface>` method retrieves an object in "
"the global scope."
msgstr ""
":ref:`JavaScriptBridge.get_interface() "
"<class_JavaScriptBridge_method_get_interface>` 方法在全局范围内检索对象。"

msgid ""
"The :ref:`JavaScriptBridge.create_object() "
"<class_JavaScriptBridge_method_create_object>` creates a new object via the "
"JavaScript ``new`` constructor."
msgstr ""
":ref:`JavaScriptBridge.create_object() "
"<class_JavaScriptBridge_method_create_object>` 通过 JavaScript ``new`` 构造函"
"数创建一个新对象。"

msgid ""
"As you can see, by wrapping JavaScript objects into ``JavaScriptObject`` you "
"can interact with them like they were native Godot objects, calling their "
"methods, and retrieving (or even setting) their properties."
msgstr ""
"如你所见，通过将 JavaScript 对象包装到 ``JavaScriptObject`` 中，你可以像与原"
"生 Godot 对象一样与它们进行交互，调用它们的方法，以及检索（甚至设置）它们的属"
"性。"

msgid ""
"Base types (int, floats, strings, booleans) are automatically converted "
"(floats might lose precision when converted from Godot to JavaScript). "
"Anything else (i.e. objects, arrays, functions) are seen as "
"``JavaScriptObjects`` themselves."
msgstr ""
"基本类型（整数、浮点数、字符串、布尔值）会自动转换（浮点数从 Godot 转换为 "
"JavaScript 时可能会丢失精度）。其他任何类型（即对象、数组、函数）都被视为 "
"``JavaScriptObjects`` 本身。"

msgid "Callbacks"
msgstr "回调"

msgid ""
"Calling JavaScript code from Godot is nice, but sometimes you need to call a "
"Godot function from JavaScript instead."
msgstr ""
"从 Godot 调用 JavaScript 代码很好，但有时你需要从 JavaScript 调用 Godot 函"
"数。"

msgid ""
"This case is a bit more complicated. JavaScript relies on garbage "
"collection, while Godot uses reference counting for memory management. This "
"means you have to explicitly create callbacks (which are returned as "
"``JavaScriptObjects`` themselves) and you have to keep their reference."
msgstr ""
"这个例子稍微复杂一点。JavaScript 依赖于垃圾回收，而 Godot 使用引用计数进行内"
"存管理。这意味着你必须显式创建回调（它们本身作为 ``JavaScriptObjects`` 返回）"
"并且必须保留它们的引用。"

msgid ""
"Arguments passed by JavaScript to the callback will be passed as a single "
"Godot ``Array``."
msgstr "JavaScript 传递给回调的参数将作为单个 Godot ``Array`` 传递。"

msgid ""
"Here is another example that asks the user for the `Notification permission "
"<https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API>`__ and "
"waits asynchronously to deliver a notification if the permission is granted:"
msgstr ""
"下面是另一个示例，它向用户请求\\ `通知权限 <https://developer.mozilla.org/en-"
"US/docs/Web/API/Notifications_API>`__\\ 并在授予权限后异步等待发送通知："

msgid "Can I use my favorite library?"
msgstr "可以用我喜欢的库吗？"

msgid ""
"In the example below, we customize the ``Head Include`` to add an external "
"library (`axios <https://axios-http.com/>`__) from a content delivery "
"network, and a second ``<script>`` tag to define our own custom function:"
msgstr ""
"在下面的示例中，我们自定义 ``头部引用`` 以从内容分发网络添加外部库（\\ "
"`axios <https://axios-http.com/>`__\\ ），并添加第二个 ``<script>`` 标签来定"
"义我们自己的自定义函数："

msgid ""
"We can then access both the library and the function from Godot, like we did "
"in previous examples:"
msgstr "然后我们可以从 Godot 访问库和函数，就像在前面的例子中所做的那样："

msgid "The eval interface"
msgstr "eval 接口"

msgid ""
"The ``eval`` method works similarly to the JavaScript function of the same "
"name. It takes a string as an argument and executes it as JavaScript code. "
"This allows interacting with the browser in ways not possible with script "
"languages integrated into Godot."
msgstr ""
"``eval`` 方法的工作原理与同名的 JavaScript 函数类似。它以字符串作为参数，并将"
"其作为 JavaScript 代码执行。这允许以 Godot 中集成的脚本语言无法实现的方式与浏"
"览器进行交互。"

msgid ""
"The value of the last JavaScript statement is converted to a GDScript value "
"and returned by ``eval()`` under certain circumstances:"
msgstr ""
"最后一个JavaScript语句的值转换为GDScript值，并在某些情况下由 ``eval()`` 返回:"

msgid "JavaScript ``number`` is returned as :ref:`class_float`"
msgstr "JavaScript ``number`` 会以 :ref:`class_float` 返回"

msgid "JavaScript ``boolean`` is returned as :ref:`class_bool`"
msgstr "JavaScript ``boolean`` 会以 :ref:`class_bool` 返回"

msgid "JavaScript ``string`` is returned as :ref:`class_String`"
msgstr "JavaScript ``string`` 会以 :ref:`class_String` 返回"

msgid ""
"JavaScript ``ArrayBuffer``, ``TypedArray``, and ``DataView`` are returned "
"as :ref:`PackedByteArray<class_PackedByteArray>`"
msgstr ""
"JavaScript ``ArrayBuffer``\\ 、\\ ``TypedArray`` 和 ``DataView`` 会以 :ref:"
"`PackedByteArray<class_PackedByteArray>` 形式返回"

msgid "Any other JavaScript value is returned as ``null``."
msgstr "任何其他JavaScript值都返回为 ``null`` ."

msgid ""
"HTML5 export templates may be :ref:`built <doc_compiling_for_web>` without "
"support for the singleton to improve security. With such templates, and on "
"platforms other than HTML5, calling ``JavaScriptBridge.eval`` will also "
"return ``null``. The availability of the singleton can be checked with the "
"``web`` :ref:`feature tag <doc_feature_tags>`:"
msgstr ""
"HTML5 导出模板可能在不支持单例的情况下\\ :ref:`构建 "
"<doc_compiling_for_web>`\\ ，以提高安全性。使用这类模板，以及在 HTML5 以外的"
"平台上，调用 ``JavaScriptBridge.eval`` 也将返回 ``null``\\ 。可以使用 "
"``web`` :ref:`功能标签 <doc_feature_tags>`\\ 检查单例的可用性："

msgid ""
"GDScript's multi-line strings, surrounded by 3 quotes ``\"\"\"`` as in "
"``my_func3()`` above, are useful to keep JavaScript code readable."
msgstr ""
"GDScript中的多行字符串由3双引号 ``\"\"\"`` 包围, 如同上文中的 ``my_func3()`` "
"那样, 有助于保证JavaScript代码的可读性."

msgid ""
"The ``eval`` method also accepts a second, optional Boolean argument, which "
"specifies whether to execute the code in the global execution context, "
"defaulting to ``false`` to prevent polluting the global namespace:"
msgstr ""
"``eval`` 方法还接受第二个可选的布尔参数，该参数指定是否在全局执行上下文中执行"
"代码，默认为 ``false`` 以防止污染全局命名空间："

msgid "Downloading files"
msgstr "下载文件"

msgid ""
"Downloading files (e.g. a save game) from the Godot Web export to the user's "
"computer can be done by directly interacting with JavaScript, but given it "
"is a very common use case, Godot exposes this functionality to scripting via "
"a dedicated :ref:`JavaScriptBridge.download_buffer() "
"<class_JavaScriptBridge_method_download_buffer>` function which lets you "
"download any generated buffer."
msgstr ""
"可以通过直接与 JavaScript 交互，将文件（例如，保存的游戏）从 Godot Web 导出下"
"载到用户的计算机，但鉴于这是一个非常常见的用例，Godot 通过专用的 :ref:"
"`JavaScriptBridge.download_buffer() "
"<class_JavaScriptBridge_method_download_buffer>` 函数将该功能公开给脚本，该函"
"数可让你下载任何生成的缓冲区。"

msgid "Here is a minimal example on how to use it:"
msgstr "这是一个有关如何使用它的最小示例："

msgid "extends Node"
msgstr "扩展节点"

msgid ""
"And here is a more complete example on how to download a previously saved "
"file:"
msgstr "这是关于如何下载以前保存的文件的更完整的示例："
