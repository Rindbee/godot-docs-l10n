#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Godot Android library"
msgstr "Godot Android 库"

msgid ""
"The Godot Engine for Android platforms is designed to be used as an `Android "
"library <https://developer.android.com/studio/projects/android-library>`_. "
"This architecture enables several key features on Android platforms:"
msgstr ""
"适用于 Android 平台的 Godot 引擎旨在作为 `Android 库 <https://"
"developer.android.com/studio/projects/android-library>`_ 使用。该架构可在 "
"Android 平台上实现多项关键功能："

msgid ""
"Ability to integrate the Gradle build system within the Godot Editor, which "
"provides the ability to leverage more components from the Android ecosystem "
"such as libraries and tools"
msgstr ""
"能够将 Gradle 构建系统整合进 Godot 编辑器，从而提供了利用 Android 生态系统中"
"更多组件的能力，比如库和工具"

msgid "Ability to make the engine portable and embeddable:"
msgstr "能够使引擎具有便携性和可嵌入性:"

msgid ""
"Key in enabling the port of the Godot Editor to Android and mobile XR devices"
msgstr "在使 Godot 编辑器能够移植到 Android 和移动 XR 设备中发挥关键作用"

msgid ""
"Key in allowing the integration and reuse of Godot's capabilities within "
"existing codebase"
msgstr "在现有代码库中集成和重复使用 Godot 功能发挥关键作用"

msgid ""
"Below we describe some of the use-cases and scenarios this architecture "
"enables."
msgstr "下面我们描述了该架构支持的一些用例和场景。"

msgid "Using the Godot Android library"
msgstr "使用 Godot Android 库"

msgid ""
"The Godot Android library is packaged as an AAR archive file and hosted on "
"`MavenCentral <https://central.sonatype.com/artifact/org.godotengine/"
"godot>`_ along with `its documentation <https://javadoc.io/doc/"
"org.godotengine/godot/latest/index.html>`_."
msgstr ""
"Godot Android 库以 AAR 归档文件的形式打包，连同其 `文档 <https://javadoc.io/"
"doc/org.godotengine/godot/latest/index.html>`_ 寄存在 `MavenCentral <https://"
"central.sonatype.com/artifact/org.godotengine/godot>`_ 上。"

msgid ""
"It provides access to Godot APIs and capabilities on Android platforms for "
"the following non-exhaustive use-cases."
msgstr ""
"它提供了在 Android 平台上访问 Godot 应用程序接口和功能的途径，适用于以下不完"
"全用例。"

msgid "Godot Android plugins"
msgstr "Godot Android 插件"

msgid ""
"Android plugins are powerful tools to extend the capabilities of the Godot "
"Engine by tapping into the functionality provided by Android platforms and "
"ecosystem."
msgstr ""
"Android 插件是一种强大的工具，可利用 Android 平台和生态系统提供的功能来扩展 "
"Godot 引擎的功能。"

msgid ""
"An Android plugin is an Android library with a dependency on the Godot "
"Android library which the plugin uses to integrate into the engine's "
"lifecycle and to access Godot APIs, granting it powerful capabilities such "
"as GDExtension support which allows to update / mod the engine behavior as "
"needed."
msgstr ""
"Android 插件是一个依赖于 Godot Android 库的 Android 库，插件使用该库集成到引"
"擎的生命周期中，并访问 Godot API，从而赋予其强大的功能，例如 GDExtension 支"
"持，允许根据需要更新/修改引擎行为。"

msgid ""
"For more information, see :ref:`Godot Android plugins <doc_android_plugin>`."
msgstr "详情见 :ref:`Godot Android 插件 <doc_android_plugin>`\\ 。"

msgid "Embedding Godot in existing Android projects"
msgstr "将 Godot 嵌入到已有 Android 项目中"

msgid ""
"The Godot Engine can be embedded within existing Android applications or "
"libraries, allowing developers to leverage mature and battle-tested code and "
"libraries better suited to a specific task."
msgstr ""
"Godot 引擎可以嵌入现有的 Android 应用程序或库中，使开发人员能够利用成熟且经过"
"考验的代码和库，更适合特定任务。"

msgid ""
"The hosting component is responsible for driving the engine lifecycle via "
"Godot's Android APIs. These APIs can also be used to provide bidirectional "
"communication between the host and the embedded Godot instance allowing for "
"greater control over the desired experience."
msgstr ""
"托管组件负责通过 Godot 的 Android API 来驱动引擎的生命周期。这些 API 还可用于"
"在主机和嵌入式 Godot 实例之间提供双向通信，从而更好地控制所需的体验。"

msgid ""
"The `GLTF Viewer <https://github.com/m4gr3d/Godot-Android-Samples/tree/"
"master/apps/gltf_viewer>`_ sample app uses an `Android RecyclerView "
"component <https://developer.android.com/develop/ui/views/layout/"
"recyclerview>`_ to create a list of glTF items, populated from `Kenney's "
"Food Kit pack <https://kenney.nl/assets/food-kit>`_. When an item on the "
"list is selected, the app's logic interacts with the embedded Godot Engine "
"to render the selected glTF item as a 3D model."
msgstr ""
"`GLTF Viewer <https://github.com/m4gr3d/Godot-Android-Samples/tree/master/"
"apps/gltf_viewer>`_ 示例应用程序使用 `Android RecyclerView component "
"<https://developer.android.com/develop/ui/views/layout/recyclerview>`_ 来创"
"建 GLTF 项目列表，该列表由 `Kenney's Food Kit pack <https://kenney.nl/assets/"
"food-kit>`_ 填充 。当选择列表中的项目时，应用程序的逻辑与嵌入式 Godot 引擎交"
"互，将选定的 GLTF 项目渲染为 3D 模型。"

msgid ""
"The sample app source code can be found `on GitHub <https://github.com/"
"m4gr3d/Godot-Android-Samples/tree/master/apps/gltf_viewer>`_. Follow the "
"instructions on `its README <https://github.com/m4gr3d/Godot-Android-Samples/"
"blob/master/apps/gltf_viewer/README.md>`_ to build and install it."
msgstr ""
"示例应用程序源代码可以在 `GitHub <https://github.com/m4gr3d/Godot-Android-"
"Samples/tree/master/apps/gltf_viewer>`_ 上找到。按照其 `README <https://"
"github.com/m4gr3d/Godot-Android-Samples/blob/master/apps/gltf_viewer/"
"README.md>`_ 上的说明来进行构建和安装。"

msgid "Below we break-down the steps used to create the GLTF Viewer app."
msgstr "下面我们详细介绍了创建 GLTF 查看器应用程序的步骤。"

msgid ""
"Currently only a single instance of the Godot Engine is supported per "
"process. You can configure the process the Android Activity runs under using "
"the `android:process attribute <https://developer.android.com/guide/topics/"
"manifest/activity-element#proc>`_."
msgstr ""
"目前，每个进程仅支持单个 Godot 引擎实例。你可以使用 `android:process 属性 "
"<https://developer.android.com/guide/topics/manifest/activity-"
"element#proc>`_ 来配置 Android Activity 运行的进程。"

msgid ""
"Automatic resizing / orientation configuration events are not supported and "
"may cause a crash. You can disable those events:"
msgstr ""
"不支持自动调整大小/方向配置事件，这些事件可能会导致系统崩溃。你可以禁用这些事"
"件："

msgid ""
"By locking to a specific orientation using the `android:screenOrientation "
"attribute <https://developer.android.com/guide/topics/manifest/activity-"
"element#screen>`_."
msgstr ""
"通过使用 `android:screenOrientation 属性 <https://developer.android.com/"
"guide/topics/manifest/activity-element#screen>`_ 来锁定到特定方向。"

msgid ""
"By declaring that the Activity will handle these configuration events using "
"the `android:configChanges attribute <https://developer.android.com/guide/"
"topics/manifest/activity-element#config>`_."
msgstr ""
"通过声明 Activity 将使用 `android:configChanges 属性 <https://"
"developer.android.com/guide/topics/manifest/activity-element#config>`_ 来处理"
"这些配置事件。"

msgid "1. Create the Android app"
msgstr "1. 创建 Android 应用"

msgid ""
"The Android sample app was created using `Android Studio <https://"
"developer.android.com/studio>`_ and using `Gradle <https://"
"developer.android.com/build>`_ as the build system."
msgstr ""
"Android 示例应用是使用 `Android Studio <https://developer.android.com/"
"studio>`_ 和 `Gradle <https://developer.android.com/build>`_ 构建系统创建的。"

msgid ""
"The Android ecosystem provides multiple tools, IDEs, build systems for "
"creating Android apps so feel free to use what you're familiar with, and "
"update the steps below accordingly (contributions to this documentation are "
"welcomed as well!)."
msgstr ""
"Android 生态系统提供了多种工具、集成开发环境（IDE）和构建系统来创建 Android "
"应用程序，因此你可以自由选择自己熟悉的方式，并相应地更新下面的步骤（欢迎为这"
"份文档做出贡献！）。"

msgid ""
"Set up an Android application project. It may be a brand new empty project, "
"or an existing project"
msgstr "设置一个 Android 应用程序项目，可以是全新的空项目，也可以是现有的项目"

msgid ""
"Add the `maven dependency for the Godot Android library <https://"
"central.sonatype.com/artifact/org.godotengine/godot>`_"
msgstr ""
"添加指向 `Godot Android 库的 Maven 依赖项 <https://central.sonatype.com/"
"artifact/org.godotengine/godot>`_"

msgid ""
"If using ``gradle``, add the following to the ``dependency`` section of the "
"app's gradle build file. Make sure to update ``<version>`` to the latest "
"version of the Godot Android library:"
msgstr ""
"如果使用 ``gradle``\\ ，请在应用的 gradle 构建文件的 ``dependency`` 部分添加"
"以下内容。确保将 ``<version>`` 更新为 Godot Android 库的最新版本："

msgid ""
"If using ``gradle``, include the following ``aaptOptions`` configuration "
"under the ``android > defaultConfig`` section of the app's gradle build "
"file. Doing so allows ``gradle`` to include Godot's hidden directories when "
"building the app binary."
msgstr ""
"如果使用 ``gradle``\\ ，请在应用的 gradle 构建文件的 ``android > "
"defaultConfig`` 部分包含以下 ``aaptOptions`` 配置。这样就可以让 ``gradle`` 在"
"构建应用二进制文件时包含 Godot 的隐藏目录。"

msgid ""
"If your build system does not support including hidden directories, you can "
"configure the Godot project to not use hidden directories by "
"deselecting :ref:`Application > Config > Use Hidden Project Data "
"Directory<class_ProjectSettings_property_application/config/"
"use_hidden_project_data_directory>` in the Project Settings."
msgstr ""
"如果你的构建的系统不支持包含隐藏目录，你可以配置 Godot 项目不使用隐藏目录，通"
"过在项目设置中取消选择 :ref:`应用 > 配置 > 使用隐藏的项目数据目录 "
"<class_ProjectSettings_property_application/config/"
"use_hidden_project_data_directory>` 。"

msgid ""
"Create / update the application's Activity that will be hosting the Godot "
"Engine instance. For the sample app, this is `MainActivity <https://"
"github.com/m4gr3d/Godot-Android-Samples/blob/master/apps/gltf_viewer/src/"
"main/java/fhuyakou/godot/app/android/gltfviewer/MainActivity.kt>`_"
msgstr ""
"创建或更新应用程序的 Activity，用于承载 Godot 引擎实例。即示例应用中的 "
"`MainActivity <https://github.com/m4gr3d/Godot-Android-Samples/blob/master/"
"apps/gltf_viewer/src/main/java/fhuyakou/godot/app/android/gltfviewer/"
"MainActivity.kt>`_"

msgid ""
"The host Activity should implement the `GodotHost interface <https://"
"github.com/godotengine/godot/blob/master/platform/android/java/lib/src/org/"
"godotengine/godot/GodotHost.java>`_"
msgstr ""
"用于承载的 Activity 应当实现 `GodotHost 接口 <https://github.com/godotengine/"
"godot/blob/master/platform/android/java/lib/src/org/godotengine/godot/"
"GodotHost.java>`_"

msgid ""
"The sample app uses `Fragments <https://developer.android.com/guide/"
"fragments>`_ to organize its UI, so it uses `GodotFragment <https://"
"github.com/godotengine/godot/blob/master/platform/android/java/lib/src/org/"
"godotengine/godot/GodotFragment.java>`_, a fragment component provided by "
"the Godot Android library to automatically host and manage the Godot Engine "
"instance."
msgstr ""
"示例应用程序使用 `Fragment <https://developer.android.com/guide/fragments>`_ "
"来组织 UI，所以它使用 `GodotFragment <https://github.com/godotengine/godot/"
"blob/master/platform/android/java/lib/src/org/godotengine/godot/"
"GodotFragment.java>`_\\ ，这是由 Godot Android 库提供的 fragment 组件，用于自"
"动托管和管理 Godot 引擎实例。"

msgid ""
"The Godot Android library also provide `GodotActivity <https://github.com/"
"godotengine/godot/blob/master/platform/android/java/lib/src/org/godotengine/"
"godot/GodotActivity.kt>`_, an Activity component that can be extended to "
"automatically host and manage the Godot Engine instance."
msgstr ""
"Godot Android 库还提供 `GodotActivity <https://github.com/godotengine/godot/"
"blob/master/platform/android/java/lib/src/org/godotengine/godot/"
"GodotActivity.kt>`_\\ ，这是一个可以被扩展以自动托管和管理 Godot 引擎实例的 "
"Activity 组件。"

msgid ""
"Alternatively, applications can directly create a `Godot <https://github.com/"
"godotengine/godot/blob/master/platform/android/java/lib/src/org/godotengine/"
"godot/Godot.kt>`_ instance, host and manage it themselves."
msgstr ""
"或者，应用程序可以直接创建一个 `Godot <https://github.com/godotengine/godot/"
"blob/master/platform/android/java/lib/src/org/godotengine/godot/Godot.kt>`_ "
"实例，来托管和管理。"

msgid ""
"Using `GodotHost#getHostPlugins(...) <https://github.com/m4gr3d/Godot-"
"Android-Samples/blob/0e3440f357f8be5b4c63a4fe75766793199a99d0/apps/"
"gltf_viewer/src/main/java/fhuyakou/godot/app/android/gltfviewer/"
"MainActivity.kt#L55>`_, the sample app creates a `runtime GodotPlugin "
"instance <https://github.com/m4gr3d/Godot-Android-Samples/blob/master/apps/"
"gltf_viewer/src/main/java/fhuyakou/godot/app/android/gltfviewer/"
"AppPlugin.kt>`_ that's used to send :ref:`signals <doc_signals>` to the "
"``gdscript`` logic"
msgstr ""
"使用 `GodotHost#getHostPlugins(...) <https://github.com/m4gr3d/Godot-Android-"
"Samples/blob/0e3440f357f8be5b4c63a4fe75766793199a99d0/apps/gltf_viewer/src/"
"main/java/fhuyakou/godot/app/android/gltfviewer/MainActivity.kt#L55>`_\\ ，示"
"例应用程序会创建一个\\ `运行时 GodotPlugin 实例 <https://github.com/m4gr3d/"
"Godot-Android-Samples/blob/master/apps/gltf_viewer/src/main/java/fhuyakou/"
"godot/app/android/gltfviewer/AppPlugin.kt>`_\\ 来发送\\ :ref:`信号 "
"<doc_signals>`\\ 到 ``gdscript`` 逻辑"

msgid ""
"The runtime ``GodotPlugin`` can also be used by ``gdscript`` logic to access "
"JVM methods. For more information, see :ref:`Godot Android plugins "
"<doc_android_plugin>`."
msgstr ""
"``gdscript`` 逻辑也可以用运行时的 ``GodotPlugin`` 来访问 JVM 方法。详情"
"见 :ref:`Godot Android 插件 <doc_android_plugin>`\\ 。"

msgid "Add any additional logic that will be used by your application"
msgstr "添加你的程序所需使用的额外逻辑"

msgid ""
"Open the ``AndroidManifest.xml`` file, and configure the orientation if "
"needed using the `android:screenOrientation attribute <https://"
"developer.android.com/guide/topics/manifest/activity-element#screen>`_"
msgstr ""
"打开 ``AndroidManifest.xml`` 文件，如果需要配置朝向，可以使用 "
"`android:screenOrientation attribute <https://developer.android.com/guide/"
"topics/manifest/activity-element#screen>`_"

msgid ""
"If needed, disable automatic resizing / orientation configuration changes "
"using the `android:configChanges attribute <https://developer.android.com/"
"guide/topics/manifest/activity-element#config>`_"
msgstr ""
"如果需要，请使用 `android:configChanges 属性 <https://developer.android.com/"
"guide/topics/manifest/activity-element#config>`_\\ 禁用自动调整大小/方向配置"
"更改"

msgid "2. Create the Godot project"
msgstr "2. 创建 Godot 项目"

msgid ""
"On Android, Godot's project files are exported to the ``assets`` directory "
"of the generated ``apk`` binary."
msgstr ""
"在 Android 上，Godot 的项目文件会被导入到所生成 ``apk`` 二进制文件的 "
"``assets`` 目录中。"

msgid ""
"We leverage that architecture to bind our Android app and Godot project "
"together by creating the Godot project in the Android app's ``assets`` "
"directory."
msgstr ""
"通过在 Android 应用程序的 ``assets`` 目录中创建 Godot 项目，我们利用该架构将 "
"Android 应用程序和 Godot 项目绑定在一起。"

msgid ""
"Note that it's also possible to create the Godot project in a separate "
"directory and export it as a `PCK or ZIP file <https://docs.godotengine.org/"
"en/stable/tutorials/export/exporting_projects.html#pck-versus-zip-pack-file-"
"formats>`_ to the Android app's ``assets`` directory. Using this approach "
"requires passing the ``--main-pack "
"<pck_or_zip_filepath_relative_to_assets_dir>`` argument to the hosted Godot "
"Engine instance using `GodotHost#getCommandLine() <https://github.com/"
"godotengine/godot/blob/6916349697a4339216469e9bf5899b983d78db07/platform/"
"android/java/lib/src/org/godotengine/godot/GodotHost.java#L45>`_."
msgstr ""
"请注意，也可以在单独的目录中创建 Godot 项目，并将其导出为 `PCK 或 ZIP 文件 "
"<https://docs.godotengine.org/en/stable/tutorials/export/"
"exporting_projects.html#pck-versus-zip-pack-file-formats>`_ 到 Android 应用程"
"序的 ``assets`` 目录。使用这种方法需要使用 `GodotHost#getCommandLine() "
"<https://github.com/godotengine/godot/blob/"
"6916349697a4339216469e9bf5899b983d78db07/platform/android/java/lib/src/org/"
"godotengine/godot/GodotHost.java#L45>`_ 将 ``--main-pack "
"<pck_or_zip_filepath_relative_too_assets_dir>`` 参数传递给托管的 Godot 引擎实"
"例。"

msgid "Example:"
msgstr "示例："

msgid ""
"The instructions below and the sample app follow the first approach of "
"creating the Godot project in the Android app's ``assets`` directory."
msgstr ""
"下面的说明和示例应用程序采用了第一种方法，即在 Android 应用程序的 ``assets`` "
"目录中创建 Godot 项目。"

msgid ""
"As mentioned in the **note** above, open the Godot Editor and create a Godot "
"project directly (no subfolder) in the ``assets`` directory of the Android "
"application project"
msgstr ""
"如上面的\\ **备注**\\ 所述，打开 Godot 编辑器，直接在 Android 应用程序项目的 "
"``assets`` 目录下创建一个 Godot 项目（无子文件夹）"

msgid ""
"See the sample app's `Godot project <https://github.com/m4gr3d/Godot-Android-"
"Samples/tree/master/apps/gltf_viewer/src/main/assets>`_ for reference"
msgstr ""
"请参阅示例应用程序的 `Godot 项目 <https://github.com/m4gr3d/Godot-Android-"
"Samples/tree/master/apps/gltf_viewer/src/main/assets>`_ 以获取参考"

msgid "Configure the Godot project as desired"
msgstr "按需配置 Godot 项目"

msgid ""
"Make sure the `orientation <https://docs.godotengine.org/en/stable/classes/"
"class_projectsettings.html#class-projectsettings-property-display-window-"
"handheld-orientation>`_ set for the Godot project matches the one set in the "
"Android app's manifest"
msgstr ""
"请确保 Godot 项目设置的\\ `朝向 <https://docs.godotengine.org/en/stable/"
"classes/class_projectsettings.html#class-projectsettings-property-display-"
"window-handheld-orientation>`_\\ 与 Android 应用 manifest 文件中的设置一致"

msgid ""
"For Android, make sure `textures/vram_compression/import_etc2_astc <https://"
"docs.godotengine.org/en/stable/classes/class_projectsettings.html#class-"
"projectsettings-property-rendering-textures-vram-compression-import-etc2-"
"astc>`_ is set to `true`"
msgstr ""
"请确保 Android 平台的 `textures/vram_compression/import_etc2_astc <https://"
"docs.godotengine.org/en/stable/classes/class_projectsettings.html#class-"
"projectsettings-property-rendering-textures-vram-compression-import-etc2-"
"astc>`_ 已设为 `true`"

msgid "Update the Godot project script logic as needed"
msgstr "按需更新 Godot 项目的脚本逻辑"

msgid ""
"For the sample app, the `script logic <https://github.com/m4gr3d/Godot-"
"Android-Samples/blob/master/apps/gltf_viewer/src/main/assets/main.gd>`_ "
"queries for the runtime ``GodotPlugin`` instance and uses it to register for "
"signals fired by the app logic"
msgstr ""
"示例项目中的\\ `脚本逻辑 <https://github.com/m4gr3d/Godot-Android-Samples/"
"blob/master/apps/gltf_viewer/src/main/assets/main.gd>`_\\ 会查询运行时的 "
"``GodotPlugin`` 实例，并将其注册到应用逻辑所发出的信号"

msgid "3. Build and run the app"
msgstr "3. 构建并运行应用"

msgid ""
"Once you complete configuration of your Godot project, build and run the "
"Android app. If set up correctly, the host Activity will initialize the "
"embedded Godot Engine on startup. The Godot Engine will check the ``assets`` "
"directory for project files to load (unless configured to look for a ``main "
"pack``), and will proceed to run the project."
msgstr ""
"完成对 Godot 项目的配置后，请构建并运行该 Android 应用。如果设置无误，宿主 "
"Activity 就会在启动时初始化内嵌的 Godot 引擎。Godot 引擎会在 ``assets`` 目录"
"中查找要加载的项目文件（除非配置中要求查找 ``main pack``\\ ），然后开始运行项"
"目。"

msgid ""
"While the app is running on device, you can check `Android logcat <https://"
"developer.android.com/studio/debug/logcat>`_ to investigate any errors or "
"crashes."
msgstr ""
"应用在设备上运行时，你可以通过 `Android logcat <https://"
"developer.android.com/studio/debug/logcat>`_ 来调查报错和崩溃的情况。"

msgid ""
"For reference, check the `build and install instructions <https://github.com/"
"m4gr3d/Godot-Android-Samples/blob/master/apps/gltf_viewer/README.md>`_ for "
"the GLTF Viewer sample app."
msgstr ""
"作为参考，你可以查看一下 GLTF 查看器示例应用的\\ `构建和安装步骤 <https://"
"github.com/m4gr3d/Godot-Android-Samples/blob/master/apps/gltf_viewer/"
"README.md>`_\\ 。"
