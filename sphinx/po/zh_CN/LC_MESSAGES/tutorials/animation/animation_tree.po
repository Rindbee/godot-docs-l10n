#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using AnimationTree"
msgstr "使用 AnimationTree"

msgid "Introduction"
msgstr "前言"

msgid ""
"A new scene was created for the player with a ``CharacterBody3D`` as root. "
"Inside this scene, the original ``.dae`` (Collada) file was instantiated and "
"an ``AnimationTree`` node was created."
msgstr ""
"为玩家创建了一个以 ``CharacterBody3D`` 为根节点的新场景。这个场景中实例化了原"
"来的 ``.dae``\\ （Collada）文件，并创建 ``AnimationTree`` 节点。"

msgid "Creating a tree"
msgstr "创建树"

msgid ""
"Animation nodes, which reference an animation from the linked "
"``AnimationPlayer``."
msgstr "动画节点，从链接的 ``AnimationTree`` 中引用动画。"

msgid "Blend tree"
msgstr "混合树"

msgid "Blend2 / Blend3"
msgstr "混合2/混合3"

msgid ""
"These nodes will blend between two or three inputs by a user-specified blend "
"value:"
msgstr "这些节点将通过用户指定输入的两个或三个混合值之间进行混合:"

msgid "OneShot"
msgstr "OneShot"

msgid "TimeSeek"
msgstr "时间缩放"

msgid "TimeScale"
msgstr "时间缩放"

msgid "Transition"
msgstr "转换"

msgid "StateMachine"
msgstr "状态机"

msgid ""
"*Sync*: Will switch to the next state immediately, but will seek the new "
"state to the playback position of the old state."
msgstr ""
"*Sync*\\ （同步）：立即切换到下一个状态，但会将新状态快进并到旧状态的播放位"
"置。"

msgid ""
"*At End*: Will wait for the current state playback to end, then switch to "
"the beginning of the next state animation."
msgstr ""
"*At End*\\ （末尾）：将等待当前状态播放结束，然后切换到下一个状态动画的开头。"

msgid "*Xfade Time* is the time to cross-fade between this state and the next."
msgstr ""
"*Xfade Time*\\ （叠化时间）是在这个状态和下一个状态之间交叉渐变的时间。"

msgid ""
"*Priority* is used together with the ``travel()`` function from code (more "
"on this later). Lower priority transitions are preferred when travelling "
"through the tree."
msgstr ""
"*Priority*\\ （优先级）与代码中的 ``travel()`` 函数一起使用（后述）。当从一个"
"状态到另一个状态时，会优先使用优先级较低的过渡。"

msgid "For better blending"
msgstr "为了更好的混合"

msgid ""
"In Godot 4.0+, in order for the blending results to be deterministic "
"(reproducible and always consistent), the blended property values must have "
"a specific initial value. For example, in the case of two animations to be "
"blended, if one animation has a property track and the other does not, the "
"blended animation is calculated as if the latter animation had a property "
"track with the initial value."
msgstr ""
"在 Godot 4.0+ 中，为了使混合结果具有确定性（结果可复现且始终一致），混合属性"
"值必须具有特定的初始值。例如，在要混合两个动画的情况下，如果一个动画具有属性"
"轨道而另一个动画没有，则计算混合动画时，要好像后一个动画（即本来没有属性轨道"
"的那个）具有初始值的属性轨道一样去处理。"

msgid ""
"When using Position/Rotation/Scale 3D tracks for Skeleton3D bones, the "
"initial value is Bone Rest. For other properties, the initial value is ``0`` "
"and if the track is present in the ``RESET`` animation, the value of its "
"first keyframe is used instead."
msgstr ""
"当使用 Skeleton3D 骨骼的 Position/Rotation/Scale 3D 轨道时，初始值为 Bone "
"Rest（骨骼放松姿势）。对于其他属性而言，初始值是 ``0`` ，并且如果轨道出现在 "
"``RESET`` 动画中，那么则使用它第一个关键帧的值。"

msgid ""
"For example, the following AnimationPlayer has two animations, but one of "
"them lacks a Property track for Position."
msgstr ""
"例如，下面的 AnimationPlayer 有两个动画，但其中一个缺少 Position 的属性轨道。"

msgid ""
"This means that the animation lacking that will treat those Positions as "
"``Vector2(0, 0)``."
msgstr ""
"这意味着缺少该 Position 的动画会将这些 Position 视为 ``Vector2(0, 0)``\\ 。"

msgid ""
"This problem can be solved by adding a Property track for Position as an "
"initial value to the ``RESET`` animation."
msgstr ""
"可以通过将 Position 的 Property 轨道作为初始值添加到 ``RESET`` 动画中来解决这"
"个问题。"

msgid ""
"Be aware that the ``RESET`` animation exists to define the default pose when "
"loading an object originally. It is assumed to have only one frame and is "
"not expected to be played back using the timeline."
msgstr ""
"请注意，\\ ``RESET`` 动画的存在是为了在最初加载对象时定义默认姿势。它被假定只"
"有一帧，并且不应使用时间轴进行播放。"

msgid ""
"This can be useful for Skeleton3Ds to prevent the bones penetrating the body "
"when blending animations. Therefore, Skeleton3D's Bone Rest values should be "
"as close to the midpoint of the movable range as possible. **This means that "
"for humanoid models, it is preferable to import them in a T-pose**."
msgstr ""
"这种限制对于 Skeleton3D 非常有用，可以防止骨骼在混合动画时穿透身体。因此，"
"Skeleton3D 的 Bone Rest （骨骼放松姿势）值应尽可能接近可移动范围的中点。 **这"
"意味着人形模型最好以 T-pose 导入** 。"

msgid ""
"You can see that the shortest rotation path from Bone Rests is prioritized "
"rather than the shortest rotation path between animations."
msgstr ""
"你可以看到，优先考虑从 Bone Rest 出发的最短旋转路径，而不是动画之间的最短旋转"
"路径。"

msgid ""
"If you need to rotate Skeleton3D itself more than 180 degrees by blend "
"animations for movement, you can use Root Motion."
msgstr ""
"如果需要通过混合动画将 Skeleton3D 本身旋转 180 度以上，则可以使用 Root "
"Motion。"

msgid "Root motion"
msgstr "根骨骼运动"

msgid ""
"When working with 3D animations, a popular technique is for animators to use "
"the root skeleton bone to give motion to the rest of the skeleton. This "
"allows animating characters in a way where steps actually match the floor "
"below. It also allows precise interaction with objects during cinematics."
msgstr ""
"处理 3D 动画时，一种流行的技术是动画师利用根骨骼为其余部分骨骼制作运动动画。"
"这样处于动画角色的脚步就能够与下方的地板相匹配，并且还能够实现过场动画中与物"
"体的精确交互。"

msgid ""
"When playing back the animation in Godot, it is possible to select this bone "
"as the *root motion track*. Doing so will cancel the bone transformation "
"visually (the animation will stay in place)."
msgstr ""
"在 Godot 中回放动画时，可以将这根骨骼选作\\ *根运动轨道*\\ 。这会在视觉上取消"
"这根骨骼的变换（在原地播放动画）。"

msgid ""
"Afterwards, the actual motion can be retrieved via the :ref:`AnimationTree "
"<class_AnimationTree>` API as a transform:"
msgstr ""
"这样做以后，可以通过 :ref:`AnimationTree <class_AnimationTree>` API 获取实际"
"的变换："

msgid ""
"This can be fed to functions such as :ref:`CharacterBody3D.move_and_slide "
"<class_CharacterBody3D_method_move_and_slide>` to control the character "
"movement."
msgstr ""
"可以将这些值提供给 :ref:`CharacterBody3D.move_and_slide "
"<class_CharacterBody3D_method_move_and_slide>` 等函数，用来控制角色的移动。"

msgid "Controlling from code"
msgstr "使用代码控制"

msgid ""
"After building the tree and previewing it, the only question remaining is "
"\"How is all this controlled from code?\"."
msgstr "创建树和预览之后，就只剩下一个问题：“这些东西怎么使用代码来控制？”。"

msgid ""
"The actual animation data is contained in the ``AnimationTree`` node and is "
"accessed via properties. Check the \"Parameters\" section of the "
"``AnimationTree`` node to see all the parameters that can be modified in "
"real-time:"
msgstr ""
"实际的动画数据包含在 ``AnimationTree`` 节点中, 并通过属性访问. 检查 "
"``AnimationTree`` 节点的 \"参数\" 部分, 查看所有可以实时修改的参数:"
