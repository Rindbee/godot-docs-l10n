#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using Fonts"
msgstr "使用字体"

msgid "Godot allows you to set specific fonts for different UI nodes."
msgstr "Godot 中能够为不同的 UI 节点设置指定的字体。"

msgid ""
"There are three different places where you can setup font usage. The first "
"is the theme editor. Choose the node you want to set the font for and select "
"the font tab. The second is in the inspector for control nodes under **Theme "
"Overrides > Fonts**. Lastly, in the inspector settings for themes under "
"**Default Font**."
msgstr ""
"有三种不同的地方都可以设置字体。第一个地方是主题编辑器，选择要设置字体的节点"
"后选择字体选项卡即可。第二个地方是控件节点的检查器，在 **Theme Overrides > "
"Fonts** 中设置。最后是主题的检查器，在 **Default Font** 中设置。"

msgid ""
"If no font override is specified anywhere, `Open Sans <https://fonts.google."
"com/specimen/Open+Sans>`__ SemiBold is used as the default project font."
msgstr ""
"如果其他地方都没有指定字体覆盖项，那么就会使用 `Open Sans <https://fonts."
"google.com/specimen/Open+Sans>`__ SemiBold 作为默认的项目字体。"

msgid ""
"Since Godot 4.0, font sizes are no longer defined in the font itself but are "
"instead defined in the node that uses the font. This is done in the **Theme "
"Overrides > Font Sizes** section of the inspector."
msgstr ""
"从 Godot 4.0 开始，字体的大小不再随字体本身指定，而是在使用字体的节点中定义。"
"可以在检查器的 **Theme Overrides > Font Sizes** 中找到。"

msgid ""
"This allows changing the font size without having to duplicate the font "
"resource for every different font size."
msgstr "这样修改字体大小的时候就不必为每种字体大小复制字体一份资源了。"

msgid ""
"There are 2 kinds of font files: *dynamic* (TTF/OTF/WOFF/WOFF2 formats) and "
"*bitmap* (BMFont ``.fnt`` format or monospaced image). Dynamic fonts are the "
"most commonly used option, as they can be resized and still look crisp at "
"higher sizes. Thanks to their vector-based nature, they can also contain a "
"lot more glyphs while keeping a reasonable file size compared to bitmap "
"fonts. Dynamic fonts also support some advanced features that bitmap fonts "
"cannot support, such as *ligatures* (several characters transforming into a "
"single different design)."
msgstr ""
"字体文件有两种：\\ *动态字体*\\ （TTF/OTF/WOFF/WOFF2 格式）和\\ *位图字体*\\ "
"（BMFont ``.fnt`` 格式或等宽图像）。动态字体是最常用的，因为可以调整字体大"
"小，即便很大也能保持清晰。与位图字体相比，动态字体由于基于向量，所以可以在包"
"含更多字形的同时保持合理的文件大小。动态字体还支持位图字体无法支持的一些高级"
"功能，例如\\ *合字*\\ （将若干字符转换为专门设计的单一字符）。"

msgid ""
"You can find freely licensed font files on websites such as `Google Fonts "
"<https://fonts.google.com/>`__ and `Font Library <https://fontlibrary.org/"
">`__."
msgstr ""
"你可以在 `Google Fonts <https://fonts.google.com/>`__\\ 、\\ `Font Library "
"<https://fontlibrary.org/>`__\\ 等网站找到免费授权的字体文件。"

msgid ""
"Fonts are covered by copyright. Double-check the license of a font before "
"using it, as not all fonts allow commercial use without purchasing a license."
msgstr ""
"字体是受版权保护的。使用前请仔细检查字体的许可证，因为并非所有字体都允许在不"
"购买许可证的情况下用于商业用途。"

msgid ""
"You can see how fonts work in action using the `BiDI and Font Features demo "
"project <https://github.com/godotengine/godot-demo-projects/tree/master/gui/"
"bidi_and_font_features>`__."
msgstr ""
"你可以使用 `BiDI 和字体特性演示项目 <https://github.com/godotengine/godot-"
"demo-projects/tree/master/gui/bidi_and_font_features>`__\\ 在实践中了解字体的"
"工作原理。"

msgid "Dynamic fonts"
msgstr "动态字体"

msgid "Godot supports the following dynamic font formats:"
msgstr "Godot 支持以下动态字体格式："

msgid "TrueType Font or Collection (``.ttf``, ``.ttc``)"
msgstr "TrueType 字体或合集（\\ ``.ttf``\\ 、\\ ``.ttc``\\ ）"

msgid "OpenType Font or Collection (``.otf``, ``.otc``)"
msgstr "OpenType 字体或合集（\\ ``.otf``\\ 、\\ ``.otc``\\ ）"

msgid "Web Open Font Format 1 (``.woff``)"
msgstr "Web 开放字体格式 1（\\ ``.woff``\\ ）"

msgid "Web Open Font Format 2 (``.woff2``, since Godot 3.5)"
msgstr "Web 开放字体格式 2（\\ ``.woff2``\\ ，从 Godot 3.5 开始支持）"

msgid ""
"While ``.woff`` and especially ``.woff2`` tend to result in smaller file "
"sizes, there is no universally \"better\" font format. In most situations, "
"it's recommended to use the font format that was shipped on the font "
"developer's website."
msgstr ""
"虽然 ``.woff`` 尤其是 ``.woff2`` 的文件往往更小，但并不存在普遍“更好”的字体格"
"式。大多数情况下建议使用字体开发者网站上提供的字体格式。"

msgid "Bitmap fonts"
msgstr "位图字体"

msgid ""
"Godot supports the BMFont (``.fnt``) bitmap font format. This is a format "
"created by the `BMFont <https://www.angelcode.com/products/bmfont/>`__ "
"program. Many BMFont-compatible programs also exist, like `BMGlyph <https://"
"www.bmglyph.com/>`__ or web-based `fontcutter <https://github.com/fabienbk/"
"fontcutter>`__."
msgstr ""
"Godot 支持 BMFont（\\ ``.fnt``\\ ）位图字体格式。这种格式是由 `BMFont "
"<https://www.angelcode.com/products/bmfont/>`__ 程序创造的。与 BMFont 兼容的"
"程序也有很多，比如 `BMGlyph <https://www.bmglyph.com/>`__ 和 Web 版的 "
"`fontcutter <https://github.com/fabienbk/fontcutter>`__\\ 。"

msgid ""
"Alternatively, you can import any image to be used as a bitmap font. This is "
"only supported for **monospaced** fonts (fonts where each character has the "
"same width). To do so, select the image in the FileSystem dock, go to the "
"Import dock, change its import type to **Font Data (Monospace Image Font)** "
"then click **Reimport**:"
msgstr ""
"你还可以将任意图像作为位图字体导入。这种做法仅支持\\ **等宽**\\ 字体（每个字"
"符都一样宽的字体）。使用方法是在“文件系统”面板中选中图像，然后切换到“导入”面"
"板，将导入类型切换为 **Font Data (Monospace Image Font)** 然后点击\\ **重新导"
"入**\\ ："

msgid "Changing import type to Font Data (Monospace Image Font)"
msgstr "将导入类型修改为 Font Data (Monospace Image Font)"

msgid "Changing import type to **Font Data (Monospace Image Font)**"
msgstr "将导入类型修改为 **Font Data (Monospace Image Font)**"

msgid ""
"The font's character set layout can be in any order, but orders that match "
"standard Unicode are recommended as they'll require far less configuration "
"to import. For example, the bitmap font below contains `ASCII <https://en."
"wikipedia.org/wiki/ASCII>`__ characters and follows standard ASCII ordering:"
msgstr ""
"字体可以使用任意顺序的字符集布局，但建议使用与标准 Unicode 一致的顺序，这样导"
"入所需的配置就会少很多。例如，下面的位图字体包含了 `ASCII <https://zh."
"wikipedia.org/zh-cn/ASCII>`__ 字符，与标准 ASCII 顺序一致："

msgid "Bitmap font example"
msgstr "位图字体示例"

msgid ""
"The following import options can be used to import the above font image "
"successfully:"
msgstr "使用以下导入选项即可成功导入上述字体图像："

msgid "Import options to use for the above example font"
msgstr "上面的示例字体使用的导入选项"

msgid ""
"The **Character Ranges** option is an array that maps each position on the "
"image (in tile coordinates, not pixels). The font atlas is traversed from "
"left to right and top to bottom. Characters can be specified with decimal "
"numbers (``127``), hexadecimal numbers (``0x007f``) or between *single* "
"quotes (``'~'``). Ranges can be specified with a hyphen between characters."
msgstr ""
"**字符范围**\\ 选项是一个数组，对应图像上的各个位置（单位为图块坐标，并非像"
"素）。字体图集的遍历顺序是从左到右、从上到下。字符的指定方式可以是十进制数组"
"（\\ ``127``\\ ）、十六进制数字（\\ ``0x007f``\\ ）或使用西文\\ *单*\\ 引号包"
"围（\\ ``'~'``\\ ）。可以用西文横杠指定字符之间的范围。"

msgid ""
"For instance, ``0-127`` (or ``0x0000-0x007f``) denotes the full ASCII range. "
"As another example, ``' '-'~'`` is equivalent to ``32-127`` and denotes the "
"range of *printable* (visible) ASCII characters."
msgstr ""
"例如 ``0-127``\\ （或 ``0x0000-0x007f``\\ ）指定的就是整个 ASCII 的范围。再比"
"如 ``' '-'~'`` 就等价于 ``32-127``\\ ，代表\\ *可打印*\\ （可见）的 ASCII 字"
"符范围。"

msgid ""
"Make sure the **Character Ranges** option doesn't exceed the number of "
"**Columns** × **Rows** defined. Otherwise, the font will fail to import."
msgstr ""
"请确保\\ **字符范围**\\ 不超过\\ **列数** × **行数**\\ 所定义的数量。否则导入"
"字体会失败。"

msgid ""
"If your font image contains margins not used for font glyphs (such as "
"attribution information), try adjusting **Image Margin**. This is a margin "
"applied only once around the whole image."
msgstr ""
"如果字体图像中包含未用于字体字形的边距（如署名信息），请尝试调整\\ **图像边距"
"**\\ 。该边距只会在完整图像周围应用一次。"

msgid ""
"If your font image contains guides (in the form of lines between glyphs) or "
"if spacing between characters appears incorrect, try adjusting **Character "
"Margin**. This margin is applied for every imported glyph."
msgstr ""
"如果字体图像中包含辅助线（画在字形之间）或者字符间距看上去有问题，请尝试调整"
"\\ **字符边距**\\ 。每个导入的字形都会应用该边距。"

msgid "Loading a font file"
msgstr "加载字体文件"

msgid ""
"To load a font file (dynamic or bitmap), use the resource dropdown's **Quick "
"Load** or **Load** option next to a font property, then navigate to the font "
"file in question:"
msgstr ""
"要加载字体文件（动态字体或位图字体），请使用字体属性旁资源下拉菜单中的\\ **快"
"速加载**\\ 或\\ **加载**\\ 选项，然后找到要使用的字体文件："

msgid ""
"You can also drag-and-drop a font file from the FileSystem dock to the "
"inspector property that accepts a Font resource."
msgstr ""
"你也可以将“文件系统”面板中的字体文件拖放至检查器中接受 Font 资源的属性。"

msgid ""
"In Godot 4.0 and later, texture filter and repeat properties are defined in "
"the location where the texture is used, rather than on the texture itself. "
"This also applies to fonts (both dynamic fonts and bitmap fonts)."
msgstr ""
"从 Godot 4.0 版本开始，纹理的过滤和重复属性由使用纹理的地方定义，不再由纹理自"
"身定义，字体亦然（动态字体和位图字体都是这样）。"

msgid ""
"Fonts that have a pixel art appearance should have bilinear filtering "
"disabled by changing the **Rendering > Textures > Canvas Textures > Default "
"Texture Filter** project setting to **Nearest**."
msgstr ""
"像素风格的字体应当禁用双线性过滤，做法是将项目设置 **渲染 > 纹理 > 画布纹理 "
"> 默认纹理过滤** 改为 **Nearest**\\ 。"

msgid ""
"The font size must also be an integer multiple of the design size (which "
"varies on a per-font basis), and the Control node using the font must be "
"scaled by an integer multiple as well. Otherwise, the font may look blurry. "
"Font sizes in Godot are specified in pixels (px), not points (pt). Keep this "
"in mind when comparing font sizes across different software."
msgstr ""
"这种字体的大小必须是设计大小的整数倍（设计大小因字体而异），使用该字体的 "
"Control 节点也必须采用整数倍缩放，否则字体看上去就会很模糊。Godot 中的字体大"
"小使用像素（px）为单位，不使用点（pt）为单位。在不同软件之间比对字体大小时请"
"务必注意这一点。"

msgid ""
"The texture filter mode can also be set on individual nodes that inherit "
"from CanvasItem by setting :ref:`CanvasItem.texture_filter "
"<class_CanvasItem_property_texture_filter>`."
msgstr ""
"继承自 CanvasItem 的节点也可以单独设置纹理过滤模式，使用 :ref:`CanvasItem."
"texture_filter <class_CanvasItem_property_texture_filter>` 即可。"

msgid "Font outlines and shadows"
msgstr "字体轮廓与阴影"

msgid ""
"Font outlines and shadows can be used to improve readability when the "
"background color isn't known in advance. For instance, this is the case for "
"HUD elements that are drawn over a 2D/3D scene."
msgstr ""
"如果无法提前预知背景色，那么使用字体轮廓和阴影就可以提升可读性。例如在 2D/3D "
"场景上绘制 HUD 元素时就是这样的情况。"

msgid ""
"Font outlines are available in most nodes that derive from Control, in "
"addition to :ref:`class_Label3D`."
msgstr ""
"大多数继承自 Control 的节点以及 :ref:`class_Label3D` 节点都可以使用字体轮廓功"
"能。"

msgid ""
"To enable outline for a font on a given node, configure the theme overrides "
"**Font Outline Color** and **Outline Size** in the inspector. The result "
"should look like this:"
msgstr ""
"在节点上启用字体轮廓的方法是在检查器中配置主题覆盖项 **Font Outline Color** "
"和 **Outline Size**\\ 。结果应该类似这样："

msgid "Font outline example"
msgstr "字体轮廓示例"

msgid "Configuring font shadow in a Label node"
msgstr "在 Label 节点中配置字体阴影"

msgid "The result should look like this:"
msgstr "结果应如下所示："

msgid "Font shadow example"
msgstr "字体阴影示例"

msgid "Advanced font features"
msgstr "高级字体特性"

msgid "Antialiasing"
msgstr "抗锯齿"

msgid "Font antialiasing comparison"
msgstr "字体抗锯齿对比"

msgid ""
"Antialiasing cannot be changed on :ref:`MSDF-rendered fonts "
"<doc_using_fonts_msdf>` – these are always rendered with grayscale "
"antialiasing."
msgstr ""
":ref:`MSDF 渲染的字体 <doc_using_fonts_msdf>`\\ 无法修改抗锯齿——这种字体始终"
"使用灰度抗锯齿进行渲染。"

msgid "Hinting"
msgstr "微调"

msgid ""
"Hinting controls how aggressively glyph edges should be snapped to pixels "
"when rasterizing the font. **None** results in the smoothest appearance, "
"which can make the font look blurry at small sizes. **Light** (default) is "
"sharper by snapping glyph edges to pixels on the Y axis only, while **Full** "
"is even sharper by snapping glyph edges to pixels on both X and Y axes. "
"Depending on personal preference, you may prefer using one hinting mode over "
"the other."
msgstr ""
"微调控制的是对字体进行栅格化的时候，字形边缘吸附到像素的程度。\\ **None**\\ "
"看上去最平滑，字体较小时会看上去比较模糊。\\ **Light**\\ （默认值）只会在 Y "
"轴上对字形的边缘进行吸附，看上去会比较锐利，而 **Full** 则更加锐利，X 轴和 Y "
"轴都会进行边缘的吸附。对微调模式的选择取决于你个人的口味。"

msgid "Font hinting comparison"
msgstr "字体微调对比"

msgid "Subpixel positioning"
msgstr "次像素定位"

msgid "Mipmaps"
msgstr "Mipmap"

msgid ""
"By default, fonts do not have mipmaps generated to reduce memory usage and "
"speed up rasterization. However, this can cause downscaled fonts to become "
"grainy. This can be especially noticeable with :ref:`doc_3d_text` that "
"doesn't have **Fixed Size** enabled. This can also occur when displaying "
"text with a traditional rasterized (non-:ref:`MSDF <doc_using_fonts_msdf>`) "
"font in a Control node that has its scale lower than ``(1, 1)``."
msgstr ""
"默认情况下字体不会生成 Mipmap，这样就能够降低内存占用、加速栅格化。但这样一"
"来，缩小后的字体就会变成一坨。\\ :ref:`doc_3d_text` 不启用 **Fixed Size** 的"
"时候尤为明显。如果在 Control 节点中使用传统的栅格化字体（非 :ref:`MSDF "
"<doc_using_fonts_msdf>` 字体）显示文本，并且该节点的缩放比 ``(1, 1)`` 要小，"
"也会出现这种情况。"

msgid ""
"After selecting a font in the FileSystem dock, you can enable the "
"**Mipmaps** in the Import dock to improve downscaled font rendering "
"appearance."
msgstr ""
"在“文件系统”面板中选中字体后，你可以在“导入”面板中启用 **Mipmap**\\ ，从而改"
"善字体缩小渲染后的外观。"

msgid ""
"Mipmaps can be enabled on MSDF fonts as well. This can improve font "
"rendering quality a little at smaller-than-default sizes, but MSDF fonts are "
"already resistant to graininess out of the box."
msgstr ""
"MSDF 字体也可以启用 Mipmap。在字体大小小于默认值时，这可以稍稍改善字体的渲染"
"质量，但 MSDF 字体在放大后原本就是没有颗粒度问题的。"

msgid "MSDF font rendering"
msgstr "MSDF 字体渲染"

msgid ""
"Multi-channel signed distance field (MSDF) font rendering allows rendering "
"fonts at any size, without having to re-rasterize them when their size "
"changes."
msgstr ""
"多通道带符号距离场（Multi-channel signed distance field，MSDF）字体渲染能够将"
"字体渲染为任意大小，无需在大小发生变化时重新栅格化。"

msgid ""
"MSDF font rendering has 2 upsides over traditional font rasterization, which "
"Godot uses by default:"
msgstr "与 Godot 默认使用的传统字体栅格化相比，MSDF 字体渲染有两个优点："

msgid "The font will always look crisp, even at huge sizes."
msgstr "即便文字非常巨大，字体看上去也总是清晰的。"

msgid ""
"There is less stuttering when rendering characters *at large font sizes* for "
"the first time, as there is no rasterization performed."
msgstr "首次渲染\\ *大字号字体*\\ 的字符时卡顿更短，因为无须执行栅格化。"

msgid "The downsides of MSDF font rendering are:"
msgstr "MSDF 字体渲染的缺点有："

msgid ""
"Higher baseline cost for font rendering. This is usually not noticeable on "
"desktop platforms, but it can have an impact on low-end mobile devices."
msgstr ""
"字体渲染的基础开销较高。桌面平台上通常无法察觉，但是会影响低端移动设备。"

msgid ""
"Fonts at small sizes will not look as clear as rasterized fonts, due to the "
"lack of hinting."
msgstr "由于缺少微调，较小的字体没有栅格化字体清晰。"

msgid ""
"Rendering new glyphs for the first time *at small font sizes* may be more "
"expensive compared to traditional rasterized fonts. :ref:"
"`doc_using_fonts_font_prerendering` can be used to alleviate this."
msgstr ""
"与传统的栅格化字体相比，首次为新字形渲染\\ *小字号字体*\\ 的开销可能更大。可"
"以使用 :ref:`doc_using_fonts_font_prerendering` 缓解。"

msgid "LCD subpixel optimization cannot be enabled for MSDF fonts."
msgstr "无法为 MSDF 字体启用 LCD 次像素优化。"

msgid ""
"Fonts with self-intersecting outlines will not render correctly in MSDF "
"mode. If you notice rendering issues on fonts downloaded from websites such "
"as `Google Fonts <https://fonts.google.com>`__, try downloading the font "
"from the font author's official website instead."
msgstr ""
"MSDF 模式下无法正确渲染轮廓自相交的字体。如果使用从 `Google Fonts <https://"
"fonts.google.com>`__ 等处下载到的字体时出现渲染问题，请尝试改为从作者的官方网"
"站下载。"

msgid "Using emoji"
msgstr "使用 Emoji"

msgid "Godot has limited support for emoji fonts:"
msgstr "Godot 对 Emoji 字体的支持有限："

msgid "CBDT/CBLC (embedded PNGs) and SVG emoji fonts are supported."
msgstr "支持 CBDT/CBLC（内嵌 PNG）和 SVG Emoji 字体。"

msgid "COLR/CPAL emoji fonts (custom vector format) are **not** supported."
msgstr "**不支持** COLR/CPAL Emoji 字体（自定义矢量格式）。"

msgid ""
"EMJC bitmap image compression (used by iOS' system emoji font) is **not** "
"supported. This means that to support emoji on iOS, you must use a custom "
"font that uses SVG or PNG bitmap compression instead."
msgstr ""
"**不支持** EMJC 位图压缩（iOS 系统 Emoji 字体需要用到）。这意味着如果要在 "
"iOS 上支持 Emoji，你就必须改用自定义的使用 SVG 或 PNG 位图压缩的字体。"

msgid "Default appearance when trying to use emoji in a label"
msgstr "尝试在标签中使用 Emoji 的默认外观"

msgid "Correct appearance after adding an emoji font to the label"
msgstr "为标签添加 Emoji 字体后的正确外观"

msgid "It's possible to use a system font as a fallback font too."
msgstr "也可以将系统字体用作回退字体。"

msgid "Using icon fonts"
msgstr "使用图标字体"

msgid "Font fallbacks"
msgstr "字体回退"

msgid ""
"Godot supports defining one or more fallbacks when the main font lacks a "
"glyph to be displayed. There are 2 main use cases for defining font "
"fallbacks:"
msgstr ""
"Godot 支持定义一个或更多的回退字体，会在主字体缺失要显示的字形时使用。定义回"
"退字体主要有两种用途："

msgid ""
"Use a font that only supports Latin character sets, but use another font to "
"be able to display text another character set such as Cyrillic."
msgstr ""
"使用仅支持拉丁字符集的字体，需要显示西里尔字母等其他字符集的文本时使用另一种"
"字体。"

msgid "Use a font to render text, and another font to render emoji or icons."
msgstr "使用一种字体渲染文本，使用另一种字体渲染 emoji 和图标。"

msgid "Import dock"
msgstr "导入面板"

msgid ""
"In the dialog that appears, look for **Fallbacks** section on the sidebar on "
"the right, click the **Array[Font] (size 0)** text to expand the property, "
"then click **Add Element**:"
msgstr ""
"在出现的对话框中，找到右侧的 **回退** 部分，点击 **Array[Font]（大小 0）**\\ "
"字样展开属性，然后点击\\ **添加元素**\\ ："

msgid "Adding font fallback"
msgstr "添加字体回退"

msgid ""
"Click the dropdown arrow on the new element, then choose a font file using "
"the **Quick Load** or **Load** options:"
msgstr ""
"点击新元素上的下拉箭头，然后使用\\ **快速加载**\\ 或\\ **加载**\\ 选项选择字"
"体文件："

msgid "Loading font fallback"
msgstr "加载字体回退"

msgid ""
"It is possible to add fallback fonts while using the default project font. "
"To do so, leave the **Base Font** property empty while adding one or more "
"font fallbacks."
msgstr ""
"使用默认项目字体时也可以添加回退字体，做法是将 **Base Font** 留空，同时添加一"
"个或多个字体回退。"

msgid ""
"Font fallbacks can also be defined on a local basis similar to :ref:"
"`doc_using_fonts_opentype_font_features`, but this is not covered here for "
"brevity reasons."
msgstr ""
"字体回退也可以单独定义，做法和 :ref:`doc_using_fonts_opentype_font_features` "
"类似，这里不再赘述。"

msgid "Variable fonts"
msgstr "可变字体"

msgid ""
"Godot has full support for `variable fonts <https://variablefonts.io/>`__, "
"which allow you to use a single font file to represent various font weights "
"and styles (regular, bold, italic, …). This must be supported by the font "
"file you're using."
msgstr ""
"Godot 提供了对\\ `可变字体 <https://variablefonts.io/>`__\\ 的完整支持，可变"
"字体能够用单个字体文件表示不同的字重和样式（常规、加粗、斜体等）。该功能需要"
"字体文件本身支持可变字体。"

msgid ""
"To use a variable font, create a :ref:`class_FontVariation` resource in the "
"location where you intend to use the font, then load a font file within the "
"FontVariation resource:"
msgstr ""
"使用可变字体时，请在需要使用字体的地方创建 :ref:`class_FontVariation` 资源，"
"然后在该 FontVariation 资源中加载字体文件："

msgid "Creating a FontVariation resource"
msgstr "创建 FontVariation 资源"

msgid "Loading a font file into the FontVariation resource"
msgstr "为 FontVariation 资源加载字体文件"

msgid ""
"Scroll down to the FontVariation's **Variation** section, then click the "
"**Variation Coordinates** text to expand the list of axes that can be "
"adjusted:"
msgstr ""
"向下滚动到 FontVariant 的 **Variation** 部分，然后点击 **变体坐标** 字样展开"
"可调节轴的列表："

msgid "List of variation axes"
msgstr "可变轴列表"

msgid ""
"The set of axes you can adjust depends on the font loaded. Some variable "
"fonts only support one axis of adjustment (typically *weight* or *slant*), "
"while others may support multiple axes of adjustment."
msgstr ""
"能够调整哪些轴取决于加载的字体。有些可变字体仅支持单轴调整（通常是\\ *字重"
"*\\ 或\\ *倾斜*\\ ），有些可变字体则会支持多轴调整。"

msgid ""
"For example, here's the `Inter V <https://rsms.me/inter/>`__ font with a "
"*weight* of ``900`` and a *slant* of ``-10``:"
msgstr ""
"例如，\\ `Inter V <https://rsms.me/inter/>`__ 字体将\\ *字重*\\ 设置为 "
"``900``\\ 、\\ *倾斜*\\ 设置为 ``-10`` 时是这样的："

msgid "Variable font example (Inter V)"
msgstr "可变字体示例（Inter V）"

msgid ""
"You can save the FontVariation to a ``.tres`` resource file to reuse it in "
"other places:"
msgstr ""
"你可以将 FontVariation 保存为 ``.tres`` 资源文件，这样就能够在其他地方重复使"
"用了："

msgid "Saving FontVariation to an external resource file"
msgstr "将 FontVariation 保存为外部资源文件"

msgid "Faux bold and italic"
msgstr "假粗体和假斜体"

msgid ""
"When writing text in bold or italic, using font variants specifically "
"designed for this looks better. Spacing between glyphs will be more "
"consistent when using a bold font, and certain glyphs' shapes may change "
"entirely in italic variants (compare \"a\" and *\"a\"*)."
msgstr ""
"在使用粗体和斜体字时，使用专门设计的字体变体可以产生更好的视觉效果。粗体字体"
"中的字形间距更为一致，而斜体字体中的某些字形与正常字体完全不同（对比 \"a\" "
"和 *\"a\"*）。"

msgid ""
"However, real bold and italic fonts require shipping more font files, which "
"increases distribution size. A single :ref:`variable font "
"<doc_using_fonts_variable_fonts>` file can also be used, but this file will "
"be larger than a single non-variable font. While file size is usually not an "
"issue for desktop projects, it can be a concern for mobile/web projects that "
"strive to keep distribution size as low as possible."
msgstr ""
"然而，使用真正的粗体和斜体字体需要更多的字体文件，导致发布文件大小增大。也可"
"以使用单个 :ref:`可变字体 <doc_using_fonts_variable_fonts>` 文件，但该文件将"
"会大于正常的单个不可变字体文件。文件大小在桌面版项目上通常不足为虑，但在意图"
"保持分配文件大小尽可能小的移动 / web 版项目上可能成为问题。"

msgid ""
"To allow bold and italic fonts to be displayed without having to ship "
"additional fonts (or use a variable font that is larger in size), Godot "
"supports *faux* bold and italic."
msgstr ""
"为了在不需要发布额外字体（或者使用单个更大的字体文件）的情况下支持粗体和斜"
"体，Godot 中支持 *假* 粗体和斜体。"

msgid ""
"Faux bold/italic (top), real bold/italic (bottom). Normal font used: Open "
"Sans SemiBold"
msgstr ""
"假粗体 / 斜体（上），真粗体 / 斜体（下）。使用的正常字体：Open Sans SemiBold"

msgid ""
"Faux bold and italic is automatically used in :ref:`class_RichTextLabel`'s "
"bold and italic tags if no custom fonts are provided for bold and/or italic."
msgstr ""
"如果没有为粗体和斜体提供自定义字体，则 :ref:`class_RichTextLabel` 中的粗体和"
"斜体标签将自动使用假粗体和斜体。"

msgid ""
"To use faux bold, create a FontVariation resource in a property where a Font "
"resource is expected. Set **Variation > Embolden** to a positive value to "
"make a font bolder, or to a negative value to make it less bold. Recommended "
"values are between ``0.5`` and ``1.2`` depending on the font."
msgstr ""
"若要使用假粗体，在需要 Font 资源的栏目中创建 FontVariation 资源。将 "
"**Variation > Embolden** 设定为正值会加粗字体，而设定为负值则会让字体变细。建"
"议采用 ``0.5`` 和 ``1.2`` 之间的值，具体视字体而定。"

msgid ""
"Faux italic is created by skewing the text, which is done by modifying the "
"per-character transform. This is also provided in FontVariation using the "
"**Variation > Transform** property. Setting the ``yx`` component of the "
"character transform to a positive value will italicize the text. Recommended "
"values are between ``0.2`` and ``0.4`` depending on the font."
msgstr ""
"假斜体由歪斜字体创建，通过修改每个字符的变换实现。该功能同样由 FontVariation "
"提供，使用的是 **Variation > Transform** 属性。将字符变换中的 ``yx`` 分量设为"
"一个正值会创建斜体效果。建议采用 ``0.2`` 和 ``0.4`` 之间的值，具体视字体而"
"定。"

msgid "Adjusting font spacing"
msgstr "调整字体间距"

msgid ""
"For stylistic purposes or for better readability, you may want to adjust how "
"a font is presented in Godot."
msgstr ""
"为了某些艺术效果，或提高可阅读性，你可能会想要调整 Godot 中显示字体的方式。"

msgid ""
"Create a FontVariation resource in a property where a Font resource is "
"expected. There are 4 properties available in the **Variation > Extra "
"Spacing** section, which accept positive and negative values:"
msgstr ""
"在需要 Font 资源的栏目中创建 FontVariation 资源。其中 **Variation > Extra "
"Spacing** 部分有 4 个可用属性，均可接受正值和负值："

msgid "**Glyph:** Additional spacing between every glyph."
msgstr "**Glyph:** 每个字形之间的额外间距。"

msgid "**Space:** Additional spacing between words."
msgstr "**Space:** 单词之间的额外间距。"

msgid ""
"The **Variation > Transform** property can also be adjusted to stretch "
"characters horizontally or vertically. This is specifically done by "
"adjusting the ``xx`` (horizontal scale) and ``yy`` (vertical scale) "
"components. Remember to adjust glyph spacing to account for any changes, as "
"glyph transform doesn't affect how much space each glyph takes in the text. "
"Non-uniform scaling of this kind should be used sparingly, as fonts are "
"generally not designed to be displayed with stretching."
msgstr ""
"还可以调节 **Variation > Transform** 来对字符进行拉伸。具体方式是调节 ``xx`` "
"（横向缩放） and ``yy`` (纵向缩放) 分量。由于字形变换不会影响每个字形在文本中"
"所占据的空间，使用时应切记进行相应的字形间距调整。因为大部分字体并非是为了在"
"被拉伸环境下显示而设计，这种非均一的拉伸应谨慎使用。"

msgid "OpenType font features"
msgstr "OpenType 字体特性"

msgid ""
"Godot supports enabling OpenType font features, which are a standardized way "
"to define alternate characters that can be toggled without having to swap "
"font files entirely. Despite being named OpenType font features, these are "
"also supported in TrueType (``.ttf``) and WOFF/WOFF2 font files."
msgstr ""
"Godot 支持启用 OpenType 字体特性，这是一种标准化的方式，可以在不切换完整字体"
"文件的情况下进行替代字符的切换。虽然其名称是 OpenType 字符特性，但同样也支持 "
"TrueType (``.ttf``) 和 WOFF/WOFF2 字体文件。"

msgid ""
"Support for OpenType features highly depends on the font used. Some fonts "
"don't support any OpenType features, while other fonts can support dozens of "
"toggleable features."
msgstr ""
"对 OpenType 特性的支持高度取决于所使用的字体。某些字体完全不支持 OpenType 特"
"性，而另一些可以支持数十个可切换的特性。"

msgid "There are 2 ways to use OpenType font features:"
msgstr "使用 OpenType 字体特性有 2 种方法："

msgid "**Globally on a font file**"
msgstr "**针对字体文件全局设置**"

msgid ""
"In the dialog that appears, look for the **Metadata Overrides > OpenType "
"Features** section on the sidebar on the right, click the **Features (0 of N "
"set)** text to expand the property, then click **Add Feature**:"
msgstr ""
"在出现的对话框中，找到右侧侧边栏中的 **元数据覆盖 > OpenType 特性** 部分，点"
"击 **特性（0/N）** 字样展开属性，然后点击 **添加特性**\\ ："

msgid "OpenType feature overrides in Advanced Import Settings"
msgstr "高级导入设置中的 OpenType 特性覆盖"

msgid "**In a specific font usage (FontVariation)**"
msgstr "**针对字体用例设置（FontVariantion）**"

msgid ""
"To use a font feature, create a FontVariation resource like you would do for "
"a :ref:`variable font <doc_using_fonts_variable_fonts>`, then load a font "
"file within the FontVariation resource:"
msgstr ""
"使用字体特性时，请和使用\\ :ref:`可变字体 "
"<doc_using_fonts_variable_fonts>`\\ 时一样创建 FontVariant 资源，然后在 "
"FontVariation 资源中加载字体文件："

msgid "Loading a font file into a FontVariation resource"
msgstr "在 FontVariation 资源中加载字体文件"

msgid ""
"Scroll down to the FontVariation's **OpenType Features** section, click the "
"**Features (0 of N set)** text to expand the property, then click **Add "
"Feature** and select the desired feature in the dropdown:"
msgstr ""
"滚动到 FontVariation 的 **OpenType Features** 部分，点击 **特性（0/N）** 字样"
"展开属性，然后点击 **添加特性**\\，在下拉列表中选择所需的特性："

msgid "Specifying OpenType features in a FontVariation resource"
msgstr "在 FontVariation 资源中指定 OpenType 特性"

msgid ""
"For example, here's the `Inter <https://rsms.me/inter/>`__ font without the "
"*Slashed Zero* feature (top), then with the *Slashed Zero* OpenType feature "
"enabled (bottom):"
msgstr ""
"以 `Inter <https://rsms.me/inter/>`__ 字体为例，下图中展示的是不带 *Slashed "
"Zero* 特性（上）和启用 *Slashed Zero* OpenType 特性（上）的效果："

msgid "OpenType feature comparison (Inter)"
msgstr "OpenType 特性比较（Inter）"

msgid ""
"You can disable ligatures and/or kerning for a specific font by adding "
"OpenType features, then unchecking them in the inspector:"
msgstr ""
"可以通过添加 OpenType 特性后在检查器中取消勾选相应特性，为特定字体禁用连字"
"和 / 或字偶剧："

msgid "Disabling ligatures and kerning for a font"
msgstr "禁用字体的合字和字偶距"

msgid "System fonts"
msgstr "系统字体"

msgid ""
"Loading system fonts is only supported on Windows, macOS, Linux, Android and "
"iOS."
msgstr "只有 Windows、macOS、Linux、Android、iOS 支持加载系统字体。"

msgid ""
"However, loading system fonts on Android is unreliable as there is no "
"official API for doing so. Godot has to rely on parsing system configuration "
"files, which can be modified by third-party Android vendors. This may result "
"in non-functional system font loading."
msgstr ""
"然而，Android 上加载系统字体不可靠，因为没有官方 API 提供支持。Godot 需要依靠"
"解析系统配置文件，而这些文件可能会被第三方 Android 供应商修改。这可能导致系统"
"字体加载不起作用。"

msgid ""
"The fonts are not included within the exported PCK file, leading to a "
"smaller file size for the exported project."
msgstr "这些字体不包含在导出的 PCK 文件中，使得导出项目的文件大小更小。"

msgid ""
"Since fonts are not included with the exported project, this avoids "
"licensing issues that would occur if proprietary system fonts were "
"distributed alongside the project."
msgstr ""
"这些字体不包含在导出项目中，可以避免将专有系统字体随项目发布所导致的许可问"
"题。"

msgid ""
"The engine automatically uses system fonts as fallback fonts, which makes it "
"possible to display CJK characters and emoji without having to load a custom "
"font. There are some restrictions that apply though, as mentioned in the :"
"ref:`Using emoji <doc_using_fonts_emoji>` section."
msgstr ""
"引擎会自动使用系统字体作为回退字体，因此不加载自定义字体也能够显示中日韩字符"
"以及 emoji。不过仍然会有一些限制，见\\ :ref:`使用 emoji "
"<doc_using_fonts_emoji>` 中的相关内容。"

msgid ""
"Create a :ref:`class_SystemFont` resource in the location where you desire "
"to use the system font:"
msgstr "需要使用系统字体的地方，请创建 :ref:`class_SystemFont` 资源："

msgid "Creating a SystemFont resource"
msgstr "创建 SystemFont 资源"

msgid "Specifying a font name to use in a SystemFont resource"
msgstr "指定 SystemFont 资源中使用的字体名称"

msgid ""
"You can either specify one or more font names explicitly (such as "
"``Arial``), or specify the name of a font *alias* that maps to a "
"\"standard\" default font for the system:"
msgstr ""
"你可以显式指定若干字体名称（例如 ``Arial``\\ ），也可以指定字体的\\ *别名"
"*\\ ，后者会映射到系统中的“标准”默认字体："

msgid "Font alias"
msgstr "字体别名"

msgid "Windows"
msgstr "Windows"

msgid "macOS/iOS"
msgstr "macOS/iOS"

msgid "Linux"
msgstr "Linux"

msgid "Android"
msgstr "Android"

msgid "``sans-serif``"
msgstr "``sans-serif``"

msgid "Arial"
msgstr "Arial"

msgid "Helvetica"
msgstr "Helvetica"

msgid "*Handled by fontconfig*"
msgstr "*由 fontconfig 处理*"

msgid "Roboto / Noto Sans"
msgstr "Roboto / Noto Sans"

msgid "``serif``"
msgstr "``serif``"

msgid "Times New Roman"
msgstr "Times New Roman"

msgid "Times"
msgstr "Times"

msgid "Noto Serif"
msgstr "Noto Serif"

msgid "``monospace``"
msgstr "``monospace``"

msgid "Courier New"
msgstr "Courier New"

msgid "Courier"
msgstr "Courier"

msgid "Droid Sans Mono"
msgstr "Droid Sans Mono"

msgid "``cursive``"
msgstr "``cursive``"

msgid "Comic Sans MS"
msgstr "Comic Sans MS"

msgid "Apple Chancery"
msgstr "Apple Chancery"

msgid "Dancing Script"
msgstr "Dancing Script"

msgid "``fantasy``"
msgstr "``fantasy``"

msgid "Gabriola"
msgstr "Gabriola"

msgid "Papyrus"
msgstr "Papyrus"

msgid ""
"On Android, Roboto is used for Latin/Cyrillic text and Noto Sans is used for "
"other languages' glyphs such as CJK. On third-party Android distributions, "
"the exact font selection may differ."
msgstr ""
"在 Android 上，拉丁、西里尔文本会使用 Roboto，中日韩等其他语言的字形会使用 "
"Noto Sans。如果是第三方 Android 发行版，实际的字体可能会不同。"

msgid ""
"If specifying more than one font, the first font that is found on the system "
"will be used (from top to bottom). Font names and aliases are case-"
"insensitive on all platforms."
msgstr ""
"如果指定了多个字体，则会使用系统中（按从上至下的顺序）找到的第一个字体。所有"
"平台上的字体名称和别名都不区分大小写。"

msgid ""
"Like for font variations, you can save the SystemFont arrangement to a "
"resource file to reuse it in other places."
msgstr ""
"和字体变体一样，你可以将 SystemFont 配置保存为资源文件，在其他地方使用。"

msgid ""
"Remember that different system fonts have different metrics, which means "
"that text that can fit within a rectangle on one platform may not be doing "
"so on another platform. Always reserve some additional space during "
"development so that labels can extend further if needed."
msgstr ""
"请注意，不同系统字体的度量系统不同，也就是说，在一个平台上能够放进某个矩形的"
"一段文本可能在另一个平台上就放不进。请在开发过程中保留足够的空间，让文本标签"
"能够在按需扩展。"

msgid ""
"Unlike Windows and macOS/iOS, the set of default fonts shipped on Linux "
"depends on the distribution. This means that on different Linux "
"distributions, different fonts may be displayed for a given system font name "
"or alias."
msgstr ""
"与 Windows 和 macOS/iOS 不同，Linux 系统上默认提供哪些字体取决于发行版。也就"
"是说，同样的系统字体名称和别名在不同的 Linux 发行版上可能会使用不同的字体显"
"示。"

msgid ""
"It is also possible to load fonts at runtime even if they aren't installed "
"on the system. See :ref:`Runtime loading and saving "
"<doc_runtime_file_loading_and_saving_fonts>` for details."
msgstr ""
"运行时也可以加载字体，即便是未在系统中安装的字体也可以加载。详见\\ :ref:`《运"
"行时加载与保存》 <doc_runtime_file_loading_and_saving_fonts>`\\ 。"

msgid "Font prerendering"
msgstr "字体预渲染"

msgid ""
"When using traditional rasterized fonts, Godot caches glyphs on a per-font "
"and per-size basis. This reduces stuttering, but it can still occur the "
"first time a glyph is displayed when running the project. This can be "
"especially noticeable at higher font sizes or on mobile devices."
msgstr ""
"使用传统的栅格字体时，Godot 会针对不同字体的不同尺寸进行字形的缓存。这样做能"
"够减轻卡顿，但卡顿仍然会在项目的运行过程中首次显示某个字形时发生。如果使用的"
"是较大的字体大小，或者是在移动设备上运行，就会尤为明显。"

msgid ""
"When using MSDF fonts, they only need to be rasterized once to a special "
"signed distance field texture. This means caching can be done purely on a "
"per-font basis, without taking the font size into consideration. However, "
"the initial rendering of MSDF fonts is slower compared to a traditional "
"rasterized font at a medium size."
msgstr ""
"使用 MSDF 字体时，只需要执行一次特殊的带符号距离场纹理栅格化。这样就可以单纯"
"针对字体进行缓存，无需考虑字体大小。不过 MSDF 字体的首次渲染相对于中等大小的"
"传统栅格字体要慢。"

msgid ""
"To avoid stuttering issues related to font rendering, it is possible to "
"*prerender* certain glyphs. This can be done for all glyphs you intend to "
"use (for optimal results), or only for common glyphs that are most likely to "
"appear during gameplay (to reduce file size). Glyphs that aren't pre-"
"rendered will be rasterized on-the-fly as usual."
msgstr ""
"为了避免与字体渲染相关的卡顿问题，可以对特定的字形进行\\ *预渲染*\\ 。可以针"
"对所有需要使用的字形进行预渲染（得到最优的效果），也可以只针对游戏中可能出现"
"的常见字形进行预渲染（降低文件尺寸）。没有预渲染的字形会照常进行即时栅格化。"

msgid ""
"In both cases (traditional and MSDF), font rasterization is done on the CPU. "
"This means that the GPU performance doesn't affect how long it takes for "
"fonts to be rasterized."
msgstr ""
"无论是传统字体还是 MSDF 字体，栅格化都是在 CPU 上进行的。也就是说 GPU 的性能"
"并不会影响字体栅格化的耗时。"

msgid ""
"Move to the **Pre-render Configurations** tab of the Advanced Import "
"Settings dialog, then add a configuration by clicking the \"plus\" symbol:"
msgstr ""
"前往“高级导入设置”对话框的\\ **预渲染配置**\\ 选项卡，单击“加号”添加配置："

msgid ""
"Adding a new prerendering configuration in the Advanced Import Settings "
"dialog"
msgstr "在“高级导入设置”对话框中添加新的预渲染配置"

msgid ""
"After adding a configuration, make sure it is selected by clicking its name "
"once. You can also rename the configuration by double-clicking it."
msgstr ""
"添加配置后，请单击对应的名称，确保选中该配置。双击名称可以重命名该配置。"

msgid ""
"There are 2 ways to add glyphs to be prerendered to a given configuration. "
"It is possible to use both approaches in a cumulative manner:"
msgstr "在配置中添加字形的方法有两种。两种方法可以同时使用，效果会累积："

msgid "**Using text from translations**"
msgstr "**使用翻译中的文本**"

msgid ""
"For most projects, this approach is the most convenient to use, as it "
"automatically sources text from your language translations. The downside is "
"that it can only be used if your project supports :ref:`internationalization "
"<doc_internationalizing_games>`. Otherwise, stick to the \"Using custom "
"text\" approach described below."
msgstr ""
"对于大多数项目而言，使用这个方法最方便，因为可以从语言翻译中自动提取文本。缺"
"点是只有项目支持\\ :ref:`国际化 <doc_internationalizing_games>`\\ 时才能使"
"用。否则请使用下面“使用自定义文本”的方法。"

msgid "**Using custom text**"
msgstr "**使用自定义文本**"

msgid "**By enabling character sets**"
msgstr "**通过启用字符集**"

msgid "Default project font properties"
msgstr "默认项目字体属性"

msgid ""
"In the **GUI > Theme** section of the advanced Project Settings, you can "
"choose how the default font should be rendered:"
msgstr ""
"在高级“项目设置”的 **GUI > 主题**\\ 部分中，可以对默认字体的渲染方式进行选"
"择："
