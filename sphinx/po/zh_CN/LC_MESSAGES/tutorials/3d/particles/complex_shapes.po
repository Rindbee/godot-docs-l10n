#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Complex emission shapes"
msgstr "复杂发射形状"

msgid ""
"When it is not enough to emit particles from one of the simple shapes "
"available in the :ref:`process material "
"<doc_process_material_properties_shapes>`, Godot provides a way to emit "
"particles from arbitrary, complex shapes. The shapes are generated from "
"meshes in the scene and stored as textures in the particle process material. "
"This is a very versatile workflow that has allowed users to use particle "
"systems for things that go beyond traditional use cases, like foliage, "
"leaves on a tree, or complex holographic effects."
msgstr ""
"如果仅根据处理材质 :ref:`process material "
"<doc_process_material_properties_shapes>` 中的某种简单形状发射粒子是不够的，"
"Godot 提供了一种根据任意复杂形状发射粒子的方法。这些形状由场景中的网格生成，"
"并作为纹理存储在粒子处理材质中。这是一种用途非常广泛的工作流程，用户可以将粒"
"子系统用于传统用法之外的用途，如树叶或复杂的全息效果。"

msgid ""
"When you create emission points from meshes, you can only select a single "
"node as emission source. If you want particles to emit from multiple shapes, "
"you either have to create several particle systems or combine the meshes "
"into one in an external DCC software."
msgstr ""
"从网格创建发射点时，只能选择一个节点作为发射源。如果你希望粒子从多个形状中发"
"射，你必须创建多个粒子系统，或者在外部数字内容创作（DCC）软件中将网格合并为一"
"个。"

msgid "Creating emission points"
msgstr "创建发射点"

msgid "Create particle emission points..."
msgstr "创建粒子发射点..."

msgid "Select mesh for emission"
msgstr "选择发射粒子的网格"

msgid "\\...from a mesh instance as the source"
msgstr "\\...来源自一个网格实例"

msgid "Set emission density"
msgstr "设置发射密度"

msgid "More points = higher particle density"
msgstr "更多的点 = 更高的粒子密度"

msgid ""
"To make use of this feature, start by creating a particle system in the "
"current scene. Add a mesh instance that serves as the source of the particle "
"emission points. With the particle system selected, navigate to the viewport "
"menu and select the *GPUParticles3D* entry. From there, select ``Create "
"Emission Points From Node``."
msgstr ""
"要使用该功能，首先在当前场景中创建一个粒子系统。添加一个网格实例作为粒子发射"
"点的源。选中粒子系统后，导航到视口菜单并选择 *GPUParticles3D* 条目。从那里，"
"选择\\ ``从节点创建发射点``\\ 。"

msgid ""
"A dialog window will pop up and ask you to select a node as the emission "
"source. Choose one of the mesh instances in the scene and confirm your "
"selection. The next dialog window deals with the amount of points and how to "
"generate them."
msgstr ""
"此时会弹出一个对话窗口，要求你选择一个节点作为发射源。选择场景中的一个网格实"
"例并确认选择。下一个对话窗口将处理点的数量以及如何生成这些点。"

msgid ""
"``Emission Points`` controls the total number of points that you are about "
"to generate. Particles will spawn from these points, so what to enter here "
"depends on the size of the source mesh (how much area you have to cover) and "
"the desired density of the particles."
msgstr ""
"发射点 ``Emission Points`` 控制将要生成的点的总数。粒子将从这些点中生成，因此"
"在这里输入的内容取决于源网格的大小（需要覆盖的面积）和所需的粒子密度。"

msgid ""
"The emission points are stored in the particle system's local coordinate "
"system, so you can move the particle node around and the emission points "
"will follow. This might be useful when you want to use the same particle "
"system in several different places. On the other hand, you might have to "
"regenerate the emission points when you move either the particle system or "
"the source mesh."
msgstr ""
"发射点存储在粒子系统的本地坐标系中，因此你可以移动粒子节点，发射点也会跟着移"
"动。当你想在多个不同的地方使用同一个粒子系统时，这可能会很有用。另一方面，当"
"你移动粒子系统或源网格时，可能需要重新生成发射点。"

msgid "Emission shape textures"
msgstr "发射形状纹理"

msgid "Emission textures"
msgstr "发射纹理"

msgid "The available emission shape textures"
msgstr "可用的发射形状纹理"

msgid ""
"All the data for complex particle emission shapes is stored in a set of "
"textures. How many, depends on the type of emission shape you use. If you "
"set the ``Shape`` property in the ``Emission Shape`` group on the particle "
"process material to ``Points``, you have access to 2 texture properties, the "
"``Point Texture`` and the ``Color Texture``. Set it to ``Directed Points`` "
"and there is a third property called ``Normal Texture``."
msgstr ""
"复杂粒子发射形状的所有数据都存储在一组纹理中。具体数量取决于所使用的发射形状"
"类型。如果将粒子处理材质上\\ ``发射形状（Emission Shape）``\\ 组中的\\ ``形状"
"（Shape）``\\ 属性设置为\\ ``点（Points）``\\ ，则可以访问 2 个纹理属性，即"
"\\ ``点纹理（Point Texture）``\\ 和\\ ``颜色纹理（Color Texture）``\\ 。将其"
"设置为\\ ``定向点（Directed Points）``\\ ，则还有第三个属性，称为\\ ``法线纹"
"理（Normal Texture）``\\ 。"

msgid ""
"``Point Texture`` contains all possible emission points that were generated "
"in the previous step. A point is randomly selected for every particle when "
"it spawns. ``Normal Texture``, if it exists, provides a direction vector at "
"that same location. If the ``Color Texture`` property is also set, it "
"provides color for the particle, sampled at the same location as the other "
"two textures and modulating any other color that was set up on the process "
"material."
msgstr ""
"点纹理``Point Texture``属性涵盖了上一步可能生成的所有发射点。每个粒子生成时都"
"会随机选择一个点。如果存在法线纹理``Normal Texture`` 属性，它会在点位置提供一"
"个方向向量。如果还设置了颜色纹理``Color Texture`` 属性，它会在点位置进行采"
"样，调和处理材质上设置的其他颜色，为粒子提供颜色。"

msgid ""
"There is also the ``Point Count`` property that you can use to change the "
"number of emission points at any time after creating the emission shape. "
"This includes dynamically at runtime while the playing the game."
msgstr ""
"你还可以通过调用点计数``Point Count`` 属性，在创建发射形状后随时更改发射点的"
"数量。这包括在游戏运行时动态更改点数量。"
