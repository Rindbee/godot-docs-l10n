# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-10 15:20+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Creating a 3D particle system"
msgstr "创建 3D 粒子系统"

msgid "Required particle node properties"
msgstr "所需的粒子节点属性"

msgid ""
"To get started with particles, the first thing we need to do is add a "
"``GPUParticles3D`` node to the scene. Before we can actually see any "
"particles, we have to set up two parameters on the node: the ``Process "
"Material`` and at least one ``Draw Pass``."
msgstr ""
"创建粒子系统的第一步是向场景中添加一个 ``GPUParticles3D`` 节点。 为了能看到粒"
"子，还需要在该节点上设置两个参数 ``Process Material`` 材质 和至少一个 ``Draw "
"Pass`` 绘制通道。"

msgid "The process material"
msgstr "处理材质"

msgid ""
"To add a process material to your particles node, go to ``Process Material`` "
"in the inspector panel. Click on the box next to ``Process Material`` and "
"from the dropdown menu select ``New ParticleProcessMaterial``."
msgstr ""
"要将处理材质添加到粒子节点，请转到检查器面板中的 ``Process Material`` 。单击 "
"``Process Material`` 旁边的框，然后从下拉菜单中选择 ``新建 "
"ParticleProcessMaterial`` 。"

msgid "Creating a process material"
msgstr "创建处理材质"

msgid ""
":ref:`class_ParticleProcessMaterial` is a special kind of material. We don't "
"use it to draw any objects. We use it to update particle data and behavior "
"on the GPU instead of the CPU, which comes with a massive performance boost. "
"A click on the newly added material displays a long list of properties that "
"you can set to control each particle's behavior."
msgstr ""
":ref:`class_ParticleProcessMaterial` 是一种特殊的材质。它不是用于绘制对象，是"
"在 GPU 上更新粒子数据和行为，而不是 CPU，这可以带来巨大的性能提升。单击新添加"
"的材质会显示一个长长的属性列表，可以设置这些属性来控制粒子的行为。"

msgid "Draw passes"
msgstr "绘图阶段"

msgid "At least one draw pass is required"
msgstr "至少需要一个绘制阶段"

msgid ""
"In order to render any particles, at least one draw pass needs to be "
"defined. To do that, go to ``Draw Passes`` in the inspector panel. Click on "
"the box next to ``Pass 1`` and select ``New QuadMesh`` from the dropdown "
"menu. After that, click on the mesh and set its ``Size`` to 0.1 for both "
"``x`` and ``y``. Reducing the mesh's size makes it a little easier to tell "
"the individual particle meshes apart at this stage."
msgstr ""
"为了让粒子可视化，至少需要定义一个绘制通道。 在检查器面板中找到 ``Draw "
"Passes`` 部分。 点击 ``Pass 1`` 旁边的方框，然后从下拉菜单中选择新建四边形网"
"格 ( ``New QuadMesh`` )。 之后点击该网格并将其 ``Size`` 属性中的 ``x`` 和 "
"``y`` 都设置为 0.1。 减小网格尺寸可以帮助我们更容易区分各个单独的粒子网格。"

msgid ""
"You can use up to 4 draw passes per particle system. Each pass can render a "
"different mesh with its own unique material. All draw passes use the data "
"that is computed by the process material, which is an efficient method for "
"composing complex effects: Compute particle behavior once and feed it to "
"multiple render passes."
msgstr ""
"每个粒子系统最多可以使用 4 个绘制通道。每个通道可以渲染一个不同的网格，并使用"
"自己独特的材质。所有绘制通道都使用由处理材质计算的数据，这是一种用于组合复杂"
"效果的高效方法：一次计算粒子的行为，然后将其提供给多个渲染通道。"

msgid ""
"Using multiple draw passes: yellow rectangles (pass1) and blue spheres (pass "
"2)"
msgstr "使用多个绘制通道：黄色矩形 (pass1) 和蓝色球体 (pass 2)"

msgid ""
"If you followed the steps above, your particle system should now be emitting "
"particles in a waterfall-like fashion, making them move downwards and "
"disappear after a few seconds. This is the foundation for all particle "
"effects. Take a look at the documentation for :ref:`particle "
"<doc_3d_particles_properties>` and :ref:`particle material "
"<doc_process_material_properties>` properties to learn how to make particle "
"effects more interesting."
msgstr ""
"如果遵循了上述步骤，你的粒子系统现在应该会以类似瀑布的方式发射粒子，其向下移"
"动并在几秒后消失。这是所有粒子效果的基础。请查看\\ :ref:`粒子 "
"<doc_3d_particles_properties>`\\ 和\\ :ref:`粒子材质 "
"<doc_process_material_properties>`\\ 属性的文档，了解如何制作更有趣的粒子效"
"果。"

msgid "Particle conversion"
msgstr "粒子转换"

msgid "Turning GPU into CPU particles"
msgstr "将 GPU 粒子转换为 CPU 粒子"

msgid ""
"You can convert GPU particles to CPU particles at any time using the entry "
"in the viewport menu. When you do so, keep in mind that not every feature of "
"GPU particles is available for CPU particles, so the resulting particle "
"system will look and behave differently from the original."
msgstr ""
"你可以通过视口菜单中的条目随时将 GPU 粒子转换为 CPU 粒子。请注意，并非 GPU 粒"
"子的所有功能都可用于 CPU 粒子，因而粒子系统生成的外观和行为将与原始粒子系统有"
"所不同。"

msgid ""
"You can also convert CPU particles to GPU particles if you no longer need to "
"use CPU particles. This is also done from the viewport menu."
msgstr ""
"如果你不再需要使用 CPU 粒子，也可以将其转换为 GPU 粒子，这也是通过视口菜单完"
"成。"

msgid ""
"Some of the most notable features that are lost during the conversion "
"include:"
msgstr "在转换过程中失去的一些显著特性包括："

msgid "multiple draw passes"
msgstr "多重绘制通道"

msgid "turbulence"
msgstr "湍流"

msgid "sub-emitters"
msgstr "子发射器"

msgid "trails"
msgstr "轨迹"

msgid "attractors"
msgstr "吸引器"

msgid "collision"
msgstr "碰撞"

msgid "You also lose the following properties:"
msgstr "你还会丢失以下属性："

msgid "``Ammount Ratio``"
msgstr "``数量比例``"

msgid "``Interp to End``"
msgstr "``插值``"

msgid "``Damping as Friction``"
msgstr "``摩擦阻尼``"

msgid "``Emission Shape Offset``"
msgstr "``发射形状偏移``"

msgid "``Emission Shape Scale``"
msgstr "``发射形状缩放``"

msgid "``Inherit Velocity Ratio``"
msgstr "``继承速度比例``"

msgid "``Velocity Pivot``"
msgstr "``速度枢轴``"

msgid "``Directional Velocity``"
msgstr "``定向速度``"

msgid "``Radial Velocity``"
msgstr "``径向速度``"

msgid "``Velocity Limit``"
msgstr "``速度限制``"

msgid "``Scale Over Velocity``"
msgstr "``Scale Over Velocity``"

msgid ""
"Converting GPU particles to CPU particles can become necessary when you want "
"to release a game on older devices that don't support modern graphics APIs."
msgstr ""
"要在不支持现代图形 API 的较旧设备上发布游戏时，可能有必要将 GPU 粒子转换为 "
"CPU 粒子。"

msgid "Translation status"
msgstr "翻译状态"
