#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using GridMaps"
msgstr "使用 GridMap"

msgid "Introduction"
msgstr "前言"

msgid ""
":ref:`Gridmaps <class_GridMap>` are a tool for creating 3D game levels, "
"similar to the way :ref:`TileMap <doc_using_tilemaps>` works in 2D. You "
"start with a predefined collection of 3D meshes (a :ref:`class_MeshLibrary`) "
"that can be placed on a grid, as if you were building a level with an "
"unlimited amount of Lego blocks."
msgstr ""
":ref:`Gridmaps <class_GridMap>` 是一种用于创建3D游戏关卡的工具，方式类似于2D"
"中使用 :ref:`TileMap <doc_using_tilemaps>` . 使用一个定义好的可以放在一个网格"
"中的 3D mesh (a :ref:`class_MeshLibrary`) (译注,grid和mesh都译作网格，这里为"
"了清晰,mesh直接使用英文,grid则译作网格)对象集合搭建关卡，就像你使用无限多数量"
"的乐高积木搭建世界一样."

msgid ""
"Collisions and navigation can also be added to the meshes, just like you "
"would do with the tiles of a tilemap."
msgstr "就像使用tilemap的tile一样，碰撞和导航也可以添加到网格中."

msgid "Example project"
msgstr "示例项目"

msgid ""
"To learn how GridMaps work, start by downloading the sample project: "
"`gridmap_starter.zip <https://github.com/godotengine/godot-docs-project-"
"starters/releases/download/latest-4.x/gridmap_starter.zip>`_."
msgstr ""
"要学习 GridMaps 是怎么样工作的，请先下载示例项目：\\ `gridmap_starter.zip "
"<https://github.com/godotengine/godot-docs-project-starters/releases/"
"download/latest-4.x/gridmap_starter.zip>`_\\ 。"

msgid "Creating a MeshLibrary"
msgstr "创建 MeshLibrary"

msgid ""
"To begin, you need a :ref:`class_MeshLibrary`, which is a collection of "
"individual meshes that can be used in the gridmap. Open the "
"\"mesh_library_source.tscn\" scene to see an example of how to set up the "
"mesh library."
msgstr ""
"首先，你需要一个 :ref:`class_MeshLibrary`\\ ，它是可以在网格地图中使用的 "
"Mesh 的集合。打开“mesh_library_source.tscn”场景以查看如何设置网格库的示例。"

msgid ""
"As you can see, this scene has a :ref:`class_Node3D` node as its root, and a "
"number of :ref:`class_MeshInstance3D` node children."
msgstr ""
"如你所见，该场景有一个 :ref:`class_Node3D` 节点作为其根节点，以及许"
"多 :ref:`class_MeshInstance3D` 节点子节点。"

msgid ""
"If you don't need any physics in your scene, then you're done. However, in "
"most cases you'll want to assign collision bodies to the meshes."
msgstr ""
"如果你的场景中不需要任何物理，那么到这里就完成了. 但是，在大多数情况下，你还"
"需要给网格指定碰撞体."

msgid "Collisions"
msgstr "碰撞"

msgid ""
"You can manually assign a :ref:`class_StaticBody3D` "
"and :ref:`class_CollisionShape3D` to each mesh. Alternatively, you can use "
"the \"Mesh\" menu to automatically create the collision body based on the "
"mesh data."
msgstr ""
"你可以手动为每个 Mesh 指定 :ref:`class_StaticBody3D` "
"和 :ref:`class_CollisionShape3D`\\ 。你也可以使用“网格”菜单根据 Mesh 数据自动"
"创建碰撞体。"

msgid ""
"Note that a \"Convex\" collision body will work better for simple meshes. "
"For more complex shapes, select \"Create Trimesh Static Body\". Once each "
"mesh has a physics body and collision shape assigned, your mesh library is "
"ready to be used."
msgstr ""
"请注意，“凸”（Convex）碰撞体对于简单 Mesh 效果更好。对于更复杂的形状，请选择"
"“创建三角网格静态体”。一旦每个网格都分配了物理主体和碰撞形状，就可以使用网格"
"库了。"

msgid "Materials"
msgstr "材质"

msgid ""
"Only the materials from within the meshes are used when generating the mesh "
"library. Materials set on the node will be ignored."
msgstr "在生成网格库时，只使用网格内的材质. 节点上设置的材质将被忽略."

msgid "NavigationMeshes"
msgstr "NavigationMesh"

msgid ""
"Like all mesh instances, MeshLibrary items can be assigned "
"a :ref:`class_NavigationMesh` resource, which can be created manually, or "
"baked as described below."
msgstr ""
"和所有网格实例一样，MeshLibrary 的项目可以用 :ref:`class_NavigationMesh` 赋"
"值，既可以手动创建，也即可按下面的说明进行烘焙。"

msgid ""
"To create the NavigationMesh from a MeshLibrary scene export, place "
"a :ref:`class_NavigationRegion3D` child node below the main MeshInstance3D "
"for the GridMap item. Add a valid NavigationMesh resource to the "
"NavigationRegion3D and some source geometry nodes below and bake the "
"NavigationMesh."
msgstr ""
"要从 MeshLibrary 场景导出创建 NavigationMesh，请在 GridMap 项的主 "
"MeshInstance3D 下方放置一个 :ref:`class_NavigationRegion3D` 子节点。为该 "
"NavigationRegion3D 添加有效的 NavigationMesh 资源，然后在下面的一些源几何体节"
"点，再烘焙 NavigationMesh。"

msgid ""
"With small grid cells it is often necessary to reduce the NavigationMesh "
"properties for agent radius and region minimum size."
msgstr ""
"如果单元格比较小，一般需要把 NavigationMesh 属性里的代理半径和最小地区大小降"
"低。"

msgid ""
"Nodes below the NavigationRegion3D are ignored for the MeshLibrary scene "
"export, so additional nodes can be added as source geometry just for baking "
"the navmesh."
msgstr ""
"NavigationRegion3D 下的节点在导出 MeshLibrary 场景时会被忽略，所以可以专门为"
"烘焙导航网格添加额外的节点，作为来源几何体。"

msgid ""
"The baked cell size of the NavigationMesh must match the NavigationServer "
"map cell size to properly merge the navigation meshes of different grid "
"cells."
msgstr ""
"烘焙 NavigationMesh 的单元格大小必须与 NavigationServer 地图的单元格大小一"
"致，才能把不同 Grid 单元格的导航网格合并起来。"

msgid "MeshLibrary format"
msgstr "MeshLibrary 格式"

msgid "Exporting the MeshLibrary"
msgstr "导出 MeshLibrary"

msgid ""
"To export the library, click on **Scene > Export As... > MeshLibrary...**, "
"and save it as a resource."
msgstr ""
"要导出库，点击 **场景 > 导出为.. > MeshLibrary...** ，并将其保存为资源。"

msgid ""
"You can find an already exported MeshLibrary in the project named "
"\"MeshLibrary.tres\"."
msgstr "可以在项目中找到已导出的名为“MeshLibrary.tres”的 MeshLibrary。"

msgid "Using GridMap"
msgstr "使用 GridMap"

msgid "From left to right in the toolbar:"
msgstr "在工具栏中从左到右："

msgid "Using GridMap in code"
msgstr "在代码中使用 GridMap"

msgid ""
"See :ref:`class_GridMap` for details on the node's methods and member "
"variables."
msgstr "有关节点方法和成员变量的详细信息，请参阅 :ref:`class_GridMap`."
