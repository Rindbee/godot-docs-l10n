#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Third-person camera with spring arm"
msgstr "带弹簧臂的第三人称相机"

msgid "Introduction"
msgstr "前言"

msgid ""
"3D games will often have a third-person camera that follows and rotates "
"around something such as a player character or a vehicle."
msgstr ""
"3D 游戏经常会用到第三人称相机，相机会跟随玩家角色、车辆等物体，还能够围绕目标"
"旋转。"

msgid ""
"In Godot, this can be done by setting a :ref:`Camera3D <class_Camera3D>` as "
"a child of a node. However, if you try this without any extra steps, you'll "
"notice that the camera clips through geometry and hides the scene."
msgstr ""
"在 Godot 中将 :ref:`Camera3D <class_Camera3D>` 设置为某个节点的子节点就可以实"
"现这种相机。不过如果直接这样做、不进行额外处理，你就会发现相机会穿过几何体，"
"导致场景隐藏。"

msgid "This is where the :ref:`SpringArm3D <class_SpringArm3D>` node comes in."
msgstr "这就需要用到弹簧臂节点 :ref:`SpringArm3D <class_SpringArm3D>` 了。"

msgid "What is a spring arm?"
msgstr "弹簧臂是什么？"

msgid "A spring arm has two main components that affect its behavior."
msgstr "弹簧臂有两个主要组件，都会影响其行为。"

msgid ""
"The \"length\" of the spring arm is how far from its global position to "
"check for collisions:"
msgstr "弹簧臂的“长度”是指从弹簧臂的全局位置开始检测碰撞的距离："

msgid ""
"The \"shape\" of the spring arm is what it uses to check for collisions. The "
"spring arm will \"sweep\" this shape from its origin out towards its length."
msgstr ""
"弹簧臂的“形状”则是用于碰撞检测的形状。弹簧臂会用这个形状从它的原点一路“扫”到"
"长度的位置。"

msgid ""
"The spring arm tries to keep all of its children at the end of its length. "
"When the shape collides with something, the children are instead placed at "
"or near that collision point:"
msgstr ""
"弹簧臂会尝试将所有子节点保持在其长度的末端。当形状与其他物体发生碰撞时，就会"
"将子节点放置在碰撞点处或其附近："

msgid "Spring arm with a camera"
msgstr "带相机的弹簧臂"

msgid ""
"If the spring arm is given a specific shape, then that shape will **always** "
"be used."
msgstr "如果给弹簧臂指定了特定形状，那么该形状将**始终**被使用。"

msgid ""
"If no shape is provided and the camera is not a direct child, the spring arm "
"will fall back to using a ray cast which is inaccurate for camera collisions "
"and not recommended."
msgstr ""
"如果没有提供形状并且摄像机不是直接子节点，弹簧臂将回退使用射线检测，这对于摄"
"像机碰撞来说不准确，因此不推荐使用。"

msgid ""
"Every physics process frame, the spring arm will perform a motion cast to "
"check if anything is collided with:"
msgstr ""
"每个物理处理帧中，弹簧臂都会执行一次运动投射，以检查是否有物体发生碰撞："

msgid ""
"When the shape hits something, the camera will be placed at or near the "
"collision point:"
msgstr "当形状碰到物体时，摄像机将被放置在碰撞点或附近："

msgid "Setting up the spring arm and camera"
msgstr "设置弹簧臂和相机"

msgid "Let's add a spring arm camera setup to the platformer demo."
msgstr "让我们在平台跳跃演示中添加弹簧臂和相机吧。"

msgid ""
"You can download the Platformer 3D demo on `GitHub <https://github.com/"
"godotengine/godot-demo-projects/tree/master/3d/platformer>`_ or using the "
"`Asset Library <https://godotengine.org/asset-library/asset/2748>`_."
msgstr ""
"你可以在 `GitHub <https://github.com/godotengine/godot-demo-projects/tree/"
"master/3d/platformer>`_ 上下载 Platformer 3D 演示，也可以使用\\ `资产库 "
"<https://godotengine.org/asset-library/asset/2748>`_\\ 。"

msgid "`Node3D` (the \"pivot point\" for the camera)"
msgstr "`Node3D`\\ （相机的“轴心点”）"

msgid "`SpringArm3D`"
msgstr "`SpringArm3D`"

msgid "`Camera3D`"
msgstr "`Camera3D`"

msgid ""
"Open the ``player/player.tscn`` scene. Set these up as children of our "
"player and give them unique names so we can find them in our script. **Make "
"sure to delete the existing camera node!**"
msgstr ""
"打开 ``player/player.tscn`` 场景。将这些节点设置为玩家节点的子节点，并为它们"
"设置唯一的名称，以便我们可以在脚本中找到它们。**请确保删除现有的摄像机节点！"
"**"

msgid ""
"Leave the **Shape** of the spring arm as ``<empty>``. This way, it will use "
"the camera's pyramid shape."
msgstr "将弹簧臂的 **Shape** 保持为 ``<空>``\\ 。这样就会使用相机的视锥形状。"

msgid ""
"If you want, you can also try other shapes - a sphere is a common choice "
"since it slides smoothly along edges."
msgstr ""
"如果你愿意，也可以尝试其他形状——球体是一个常见的选择，因为它可以沿着边缘平滑"
"滑动。"

msgid ""
"Update the top of ``player/player.gd`` to grab the camera and the pivot "
"points by their unique names:"
msgstr "更新 ``player/player.gd`` 的顶部代码，通过其唯一名称获取相机和枢轴点："

msgid "player/player.gd"
msgstr "player/player.gd"

msgid ""
"Add an ``_unhandled_input`` function to check for camera movement and then "
"rotate the pivot point accordingly:"
msgstr "添加一个 ``_unhandled_input`` 函数来检测相机移动，然后相应地旋转轴心："

msgid ""
"By rotating the pivot point, the spring arm will also be rotated and it will "
"change where the camera is positioned. Run the game and notice that mouse "
"movement now rotates the camera around the character. If the camera moves "
"into a wall, it collides with it."
msgstr ""
"弹簧臂会随轴心旋转，改变相机的位置。运行游戏，你会发现现在移动鼠标移动就可以"
"使相机围绕角色旋转。如果相机向墙壁移动，就会与墙壁发生碰撞。"
