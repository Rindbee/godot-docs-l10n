# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-20 16:36+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Troubleshooting physics issues"
msgstr "物理问题的故障排除"

msgid ""
"When working with a physics engine, you may encounter unexpected results."
msgstr "使用物理引擎时，你可能会遇到一些意想不到的问题。"

msgid ""
"While many of these issues can be resolved through configuration, some of "
"them are the result of engine bugs. For known issues related to the physics "
"engine, see `open physics-related issues on GitHub <https://github.com/"
"godotengine/godot/issues?q=is%3Aopen+is%3Aissue+label%3Atopic%3Aphysics>`__. "
"Looking through `closed issues <https://github.com/godotengine/godot/issues?"
"q=+is%3Aclosed+is%3Aissue+label%3Atopic%3Aphysics>`__ can also help answer "
"questions related to physics engine behavior."
msgstr ""
"虽然其中许多问题可以通过配置解决，但其中一些问题是引擎错误造成的。有关物理引"
"擎相关的已知问题，请参阅 `GitHub 上开放的物理相关问题 <https://github.com/"
"godotengine/godot/issues?"
"q=is%3Aopen+is%3Aissue+label%3Atopic%3Aphysicals>`__ 。查看 `已关闭的问题 "
"<https://github.com/godotengine/godot/issues?"
"q=+is%3Alined+is%3Aissue+label%3Atopic%3Aphysicals>`__ 也可以帮助回答与物理引"
"擎行为相关的问题。"

msgid "Objects are passing through each other at high speeds"
msgstr "高速运动的对象会互相穿透"

msgid ""
"This is known as *tunneling*. Enabling **Continuous CD** in the RigidBody "
"properties can sometimes resolve this issue. If this does not help, there "
"are other solutions you can try:"
msgstr ""
"这被称为 *隧道效应*。在 RigidBody 中启用 **连续碰撞检测模式** 属性有时可以解"
"决此问题。如果此方法无效，您可以尝试其他解决方案："

msgid ""
"Make your static collision shapes thicker. For example, if you have a thin "
"floor that the player can't get below in some way, you can make the collider "
"thicker than the floor's visual representation."
msgstr ""
"使你的静态碰撞形状更厚。例如，如果你有一个玩家无法以某种方式穿过的薄地板，你"
"可以使碰撞器比地板看起来更厚。"

msgid ""
"Modify your fast-moving object's collision shape depending on its movement "
"speed. The faster the object moves, the larger the collision shape should "
"extend outside of the object to ensure it can collide with thin walls more "
"reliably."
msgstr ""
"根据你的快速移动物体的运动速度调整其碰撞形状。物体移动得越快，碰撞形状应该越"
"向外扩展，以确保它能够更可靠地与薄墙发生碰撞。"

msgid ""
"Increase **Physics Ticks Per Second** in the advanced Project Settings. "
"While this has other benefits (such as more stable simulation and reduced "
"input lag), this increases CPU utilization and may not be viable for mobile/"
"web platforms. Multipliers of the default value of ``60`` (such as ``120``, "
"``180`` or ``240``) should be preferred for a smooth appearance on most "
"displays."
msgstr ""
"在项目设置中增加 **每秒物理周期数**。虽然这有其他好处（例如更稳定的模拟和减少"
"输入延迟），但这会增加CPU的使用率，可能不适用于移动或网页平台。对于大多数显示"
"器来说，应该优先选择默认值60的倍数（如120、180或240），以获得平滑的外观。"

msgid "Stacked objects are unstable and wobbly"
msgstr "堆叠的对象摇摆不定"

msgid ""
"Despite seeming like a simple problem, stable RigidBody simulation with "
"stacked objects is difficult to implement in a physics engine. This is "
"caused by integrating forces going against each other. The more stacked "
"objects are present, the stronger the forces will be against each other. "
"This eventually causes the simulation to become wobbly, making the objects "
"unable to rest on top of each other without moving."
msgstr ""
"尽管看起来像一个简单问题，但是在物理引擎中带有堆叠物体的稳定刚体模拟很难实"
"现。这是因为力结合后的相互作用。堆叠的物体越多，相互之间的作用力越强。这最终"
"导致了模拟变得不稳定，使得物体不能相互堆叠在一起而不发生移动。"

msgid ""
"Increasing the physics simulation rate can help alleviate this issue. To do "
"so, increase **Physics Ticks Per Second** in the advanced Project Settings. "
"Note that increases CPU utilization and may not be viable for mobile/web "
"platforms. Multipliers of the default value of ``60`` (such as ``120``, "
"``180`` or ``240``) should be preferred for a smooth appearance on most "
"displays."
msgstr ""
"提升物理模拟频率可以帮助减少这个问题。为了这么做，增加项目设置中的 **每秒物理"
"周期数** 选项。请注意，这会增加CPU的使用率，可能不适用于移动或网页平台。对于"
"大多数显示器来说，应该优先选择默认值60的倍数（如120、180或240），以获得平滑的"
"外观。"

msgid "Scaled physics bodies or collision shapes do not collide correctly"
msgstr "缩放后的物理体或碰撞形状无法正确碰撞"

msgid ""
"Godot does not currently support scaling of physics bodies or collision "
"shapes. As a workaround, change the collision shape's extents instead of "
"changing its scale. If you want the visual representation's scale to change "
"as well, change the scale of the underlying visual representation (Sprite2D, "
"MeshInstance3D, …) and change the collision shape's extents separately. Make "
"sure the collision shape is not a child of the visual representation in this "
"case."
msgstr ""
"Godot当前没有支持缩放物理体或碰撞形状。作为替代方案，改变碰撞形状的范围而不是"
"其缩放比例。如果你想让视觉表现的尺寸也发生变化，可以改变底层视觉表现"
"（Sprite2D，MeshInstance3D， …）并单独改变它的碰撞形状的范围。在这种情况下，"
"请确保碰撞形状不是视觉表现节点的子节点。"

msgid ""
"Since resources are shared by default, you'll have to make the collision "
"shape resource unique if you don't want the change to be applied to all "
"nodes using the same collision shape resource in the scene. This can be done "
"by calling ``duplicate()`` in a script on the collision shape resource "
"*before* changing its size."
msgstr ""
"由于资源默认是共享的，如果你不想让更改应用于场景中使用相同碰撞形状资源的所有"
"节点，你需要让这个碰撞形状资源变得独一无二。这可以通过在碰撞形状资源的脚本中"
"调用 duplicate() 方法来实现，然后在改变其尺寸 之前 进行操作。这样，更改将只影"
"响当前的资源实例，而不会影响其他使用相同资源的节点。"

msgid "Thin objects are wobbly when resting on the floor"
msgstr "当薄物体放在地板上时，它们会显得不稳定"

#, fuzzy
msgid "This can be due to one of two causes:"
msgstr "可以使用以下步骤实现："

msgid "The floor's collision shape is too thin."
msgstr "地板的碰撞形状太薄了。"

msgid "The RigidBody's collision shape is too thin."
msgstr "刚体的碰撞形状太薄了。"

msgid ""
"In the first case, this can be alleviated by making the floor's collision "
"shape thicker. For example, if you have a thin floor that the player can't "
"get below in some way, you can make the collider thicker than the floor's "
"visual representation."
msgstr ""
"在第一个场景中，这可以通过加厚地板的碰撞形状来缓解。例如，如果你有一个玩家不"
"能以某种方式穿过的地板，你可以通过使碰撞器比地板看起来还要厚来解决。"

msgid ""
"In the second case, this can usually only be resolved by increasing the "
"physics simulation rate (as making the shape thicker would cause a "
"disconnect between the RigidBody's visual representation and its collision)."
msgstr ""
"在第二个场景中，常常只能通过提高物理仿真比率来解决（因为使形状更厚会导致刚体"
"的视觉表现与其碰撞效果之间出现脱节）。"

msgid ""
"In both cases, increasing the physics simulation rate can also help "
"alleviate this issue. To do so, increase **Physics Ticks Per Second** in the "
"advanced Project Settings. Note that this increases CPU utilization and may "
"not be viable for mobile/web platforms. Multipliers of the default value of "
"``60`` (such as ``120``, ``180`` or ``240``) should be preferred for a "
"smooth appearance on most displays."
msgstr ""
"在这两种情况下，提高物理仿真的速率也可以帮助缓解这个问题。为此，可以在项目设"
"置中增加**每秒物理周期数**。请注意，这会增加CPU的使用率，可能不适用于移动或网"
"页平台。对于大多数显示器来说，应该优先选择默认值60的倍数（如120、180或240），"
"以获得平滑的外观。"

msgid "Cylinder collision shapes are unstable"
msgstr "圆柱碰撞形状不稳定"

msgid ""
"During the transition from Bullet to GodotPhysics in Godot 4, cylinder "
"collision shapes had to be reimplemented from scratch. However, cylinder "
"collision shapes are one of the most difficult shapes to support, which is "
"why many other physics engines don't provide any support for them. There are "
"several known bugs with cylinder collision shapes currently."
msgstr ""
"在从Bullet到Godot 4中的GodotPhysics的过渡期间，圆柱体碰撞形状不得不从头开始重"
"新实现。然而，圆柱体碰撞形状是最难支持的形状之一，这就是为什么许多其他物理引"
"擎不提供对它们的支持。目前已知圆柱体碰撞形状存在一些问题。"

msgid ""
"We recommend using box or capsule collision shapes for characters for now. "
"Boxes generally provide the best reliability, but have the downside of "
"making the character take more space diagonally. Capsule collision shapes do "
"not have this downside, but their shape can make precision platforming more "
"difficult."
msgstr ""
"我们建议目前使用盒或胶囊形状的碰撞体来模拟角色。盒形状通常提供最佳的可靠性，"
"但缺点是使角色在对角线上占用更多的空间。胶囊碰撞形状没有这个缺点，但它们的形"
"状可能会使精确的平台跳跃更加困难。"

msgid "VehicleBody simulation is unstable, especially at high speeds"
msgstr "VehicleBody 仿真不稳定，尤其是在速度较大的时候"

msgid ""
"When a physics body moves at a high speed, it travels a large distance "
"between each physics step. For instance, when using the 1 unit = 1 meter "
"convention in 3D, a vehicle moving at 360 km/h will travel 100 units per "
"second. With the default physics simulation rate of 60 Hz, the vehicle moves "
"by ~1.67 units each physics tick. This means that small objects may be "
"ignored entirely by the vehicle (due to tunneling), but also that the "
"simulation has little data to work with in general at such a high speed."
msgstr ""
"当一个物理体以高速移动时，它在每一个物理步骤中移动很长的一段距离。例如，当在 "
"3D 中使用1单位等于1米的的标准时，一个以360 km/h速度移动的物体将会在每秒内移动"
"100个单位长度。使用默认的物理仿真频率 60 Hz时，该物体每个物理周期移动 ~1.67个"
"单位长度。这意味着小物体可能被物体完全忽略（由于隧道效应），同时这也意味着在"
"如此高的速度下，仿真本身通常只有很少的数据可供处理。"

msgid ""
"Fast-moving vehicles can benefit a lot from an increased physics simulation "
"rate. To do so, increase **Physics Ticks Per Second** in the advanced "
"Project Settings. Note that this increases CPU utilization and may not be "
"viable for mobile/web platforms. Multipliers of the default value of ``60`` "
"(such as ``120``, ``180`` or ``240``) should be preferred for a smooth "
"appearance on most displays."
msgstr ""
"快速移动的物体可以从被增加的物理仿真频率中得到很多好处。为了这么做，在项目设"
"置中调高 **每秒物理周期数**。请注意，这会提高CPU的使用率而且可能在移动或web平"
"台上不适用。对于大多数显示器来说，应该优先选择默认值60的倍数（如120、180或"
"240），以获得平滑的外观。"

msgid "Collision results in bumps when an object moves across tiles"
msgstr "当一个物体在瓦片上移动时，碰撞可能会导致颠簸"

msgid ""
"This is a known issue in the physics engine caused by the object bumping on "
"a shape's edges, even though that edge is covered by another shape. This can "
"occur in both 2D and 3D."
msgstr ""
"在物理引擎中，这里有一个因为物体在形状的边缘发生碰撞导致的已知问题，即使这条"
"边被其它形状覆盖。这可以在2D和3D中触发。"

msgid ""
"The best way to work around this issue is to create a \"composite\" "
"collider. This means that instead of individual tiles having their "
"collision, you create a single collision shape representing the collision "
"for a group of tiles. Typically, you should split composite colliders on a "
"per-island basis (which means each group of touching tiles gets its own "
"collider)."
msgstr ""
"解决该问题最好的代替方案是创建一个“复合”碰撞体。这意味着不使用带有自己碰撞体"
"的独立图块，而是创建一个单独的碰撞形状代表一组图块的碰撞体。通常，你应该按照"
"岛屿基础来分割复合碰撞器（这意味着每组相连的瓦片都有自己的碰撞器）。"

msgid ""
"Using a composite collider can also improve physics simulation performance "
"in certain cases. However, since the composite collision shape is much more "
"complex, this may not be a net performance win in all cases."
msgstr ""
"在某些情况下，使用一个复合碰撞体也可以提升物理仿真性能。然而，由于复合碰撞体"
"要复杂的多，这也许并不是在所有情况下都是对总体性能的提升。"

msgid "Framerate drops when an object touches another object"
msgstr "当一个对象接触另一个对象时，帧率会下降"

msgid ""
"This is likely due to one of the objects using a collision shape that is too "
"complex. Convex collision shapes should use a number of shapes as low as "
"possible for performance reasons. When relying on Godot's automatic "
"generation, it's possible that you ended up with dozens if not hundreds of "
"shapes created for a single convex shape collision resource."
msgstr ""
"这很可能是因为其中一个物体使用的碰撞形状过于复杂。出于性能原因，凸形碰撞形状"
"应该尽可能使用最少数量的形状。当依赖于Godot的自动生成时，可能会为单个凸形碰撞"
"资源创建数十甚至数百个形状。"

msgid ""
"In some cases, replacing a convex collider with a couple of primitive "
"collision shapes (box, sphere, or capsule) can deliver better performance."
msgstr ""
"在一些场景中，用一组基础的碰撞形状(盒，球体或胶囊)替换一个凸形碰撞器可能带来"
"更好的性能。"

msgid ""
"This issue can also occur with StaticBodies that use very detailed trimesh "
"(concave) collisions. In this case, use a simplified representation of the "
"level geometry as a collider. Not only this will improve physics simulation "
"performance significantly, but this can also improve stability by letting "
"you remove small fixtures and crevices from being considered by collision."
msgstr ""
"这个问题也可能发生在使用非常详细的三角网格（凹形）碰撞的静态刚体"
"（StaticBodies）上。在这种情况下，使用简化的几何表示作为碰撞器。这不仅可以显"
"著提高物理模拟的性能，还可以通过让你移除小的固定装置和缝隙，从而不被碰撞考"
"虑，来提高稳定性。"

msgid "Physics simulation is unreliable when far away from the world origin"
msgstr "物理仿真在远离世界原点的地方是不可靠的"

msgid ""
"This is caused by floating-point precision errors, which become more "
"pronounced as the physics simulation occurs further away from the world "
"origin. This issue also affects rendering, which results in wobbly camera "
"movement when far away from the world origin. See :ref:"
"`doc_large_world_coordinates` for more information."
msgstr ""
"这是由浮点数的精度误差引起的，当距离世界原点越远时，误差越明显。这个问题也影"
"响渲染，当远离世界原点时可能会导致相机移动使摇晃。有关更多信息，参见 :ref:"
"`doc_large_world_coordinates` 。"

msgid "Translation status"
msgstr "翻译状态"
