# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-20 18:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "SSL/TLS certificates"
msgstr "SSL 证书"

msgid "Introduction"
msgstr "前言"

#, fuzzy
msgid ""
"It is often desired to use :abbr:`SSL (Secure Sockets Layer)` connections "
"(also known as :abbr:`TLS (Transport Layer Security)` connections) for "
"communications to avoid \"man in the middle\" attacks. Godot has a "
"connection wrapper, :ref:`StreamPeerTLS <class_StreamPeerTLS>`, which can "
"take a regular connection and add security around it. The :ref:`HTTPClient "
"<class_HTTPClient>` and :ref:`HTTPRequest <class_HTTPRequest>` classes also "
"support HTTPS using this same wrapper."
msgstr ""
"通常希望使用 SSL 连接进行通信，可以避免“中间人”攻击。Godot 有一个连接包装器 :"
"ref:`StreamPeerSSL <class_StreamPeerSSL>`\\ ，它可以进行更安全的连接。\\ :"
"ref:`HTTPClient <class_HTTPClient>` 类也通过使用相同的包装器来支持 HTTPS。"

#, fuzzy
msgid ""
"Godot includes the `SSL certificate bundle from Mozilla <https://github.com/"
"godotengine/godot/blob/master/thirdparty/certs/ca-certificates.crt>`__, but "
"you can provide your own with a CRT file in the Project Settings:"
msgstr ""
"Godot包括了来自Mozilla的SSL证书, 但你可以在项目设置中用.crt文件提供你自己的:"

msgid "Setting the TLS certificate bundle override project setting"
msgstr ""

#, fuzzy
msgid ""
"When set, this file *overrides* the Mozilla certificate bundle Godot uses by "
"default. This file should contain any number of public certificates in `PEM "
"format <https://en.wikipedia.org/wiki/Privacy-enhanced_Electronic_Mail>`__."
msgstr ""
"该文件应包含任意数量的 `PEM 格式的公共证书 <https://en.wikipedia.org/wiki/"
"Privacy-enhanced_Electronic_Mail>`__ ."

#, fuzzy
msgid ""
"Remember to add ``*.crt`` as the non-resource export filter to your export "
"preset, so that the exporter recognizes this when exporting your project:"
msgstr "当然, 请记住将.crt添加为过滤器, 以便导出器在导出项目时识别这一点."

#, fuzzy
msgid "Adding ``*.crt`` to non-resource export filter in the export preset"
msgstr "在导出预设中选择**导出为专用服务器**导出模式"

msgid "There are two ways to obtain certificates:"
msgstr "获取证书有两种方法:"

msgid "Acquire a certificate from a certificate authority"
msgstr ""

msgid ""
"The main approach to getting a certificate is to use a certificate authority "
"(CA) such as `Let's Encrypt <https://letsencrypt.org/>`__. This is a more "
"cumbersome process than a self-signed certificate, but it's more "
"\"official\" and ensures your identity is clearly represented. The resulting "
"certificate is also trusted by applications such as web browsers, unlike a "
"self-signed certificate which requires additional configuration on the "
"client side before it's considered trusted."
msgstr ""

msgid ""
"These certificates do not require any configuration on the client to work, "
"since Godot already bundles the Mozilla certificate bundle in the editor and "
"exported projects."
msgstr ""

#, fuzzy
msgid "Generate a self-signed certificate"
msgstr "方法 1：自签名证书"

msgid ""
"For most use cases, it's recommended to go through certificate authority as "
"the process is free with certificate authorities such as Let's Encrypt. "
"However, if using a certificate authority is not an option, then you can "
"generate a self-signed certificate and tell the client to consider your self-"
"signed certificate as trusted."
msgstr ""

#, fuzzy
msgid ""
"To create a self-signed certificate, generate a private and public key pair "
"and add the public key (in PEM format) to the CRT file specified in the "
"Project Settings."
msgstr ""
"第一种方法最简单: 生成一个私钥和公钥对, 并将公钥(PEM格式)添加到.crt文件中. 私"
"钥应该放到你的服务器上."

msgid ""
"The private key should **only** go to your server. The client must not have "
"access to it: otherwise, the security of the certificate will be compromised."
msgstr ""

#, fuzzy
msgid ""
"OpenSSL has `some documentation <https://raw.githubusercontent.com/openssl/"
"openssl/master/doc/HOWTO/keys.txt>`__ about this. For local development "
"purposes **only**, `mkcert <https://github.com/FiloSottile/mkcert>`__ can be "
"used as an alternative."
msgstr ""
"OpenSSL有 `一些文档 <https://raw.githubusercontent.com/openssl/openssl/"
"master/doc/HOWTO/keys.txt>`__ 谈到这些. 这种方法也 **不需要域名验证** 也不要"
"求你花费现金从CA购买证书."

msgid "Translation status"
msgstr "翻译状态"
