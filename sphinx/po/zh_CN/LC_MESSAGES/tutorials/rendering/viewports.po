#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using Viewports"
msgstr "使用 Viewport"

msgid "Introduction"
msgstr "前言"

msgid "Rendering 3D objects within a 2D game"
msgstr "在2D游戏中渲染3D物体"

msgid "Rendering 2D elements in a 3D game"
msgstr "在3D游戏中渲染2D元素"

msgid "Rendering dynamic textures"
msgstr "渲染动态纹理"

msgid "Generating procedural textures at runtime"
msgstr "在运行时生成程序式纹理"

msgid "Rendering multiple cameras in the same scene"
msgstr "在同一场景中渲染多个摄像机"

msgid ""
"What all these use cases have in common is that you are given the ability to "
"draw objects to a texture as if it were another screen and can then choose "
"what to do with the resulting texture."
msgstr ""
"所有这些用例的共同点是, 你被赋予了在纹理上绘制物体的能力, 就好像它是另一个屏"
"幕一样, 然后可以选择如何处理产生的纹理."

msgid "Input"
msgstr "输入"

msgid "Listener"
msgstr "Listener"

msgid "Cameras (2D & 3D)"
msgstr "摄像机（2D 和 3D）"

msgid "Scale & stretching"
msgstr "缩放和拉伸"

msgid "Worlds"
msgstr "世界"

msgid ""
"For an example of how this works, see the demo projects `3D in 2D <https://"
"github.com/godotengine/godot-demo-projects/tree/master/viewport/3d_in_2d>`_ "
"and `2D in 3D <https://github.com/godotengine/godot-demo-projects/tree/"
"master/viewport/2d_in_3d>`_ respectively."
msgstr ""
"关于如何工作的例子, 请分别参阅演示项目 `3D in 2D <https://github.com/"
"godotengine/godot-demo-projects/tree/master/viewport/3d_in_2d>`_ 和 `2D in "
"3D <https://github.com/godotengine/godot-demo-projects/tree/master/"
"viewport/2d_in_3d>`_ ."

msgid "Capture"
msgstr "捕获"

msgid ""
"But if you use this in ``_ready()`` or from the first frame of the :ref:"
"`Viewport's <class_Viewport>` initialization, you will get an empty texture "
"because there is nothing to get as texture. You can deal with it using (for "
"example):"
msgstr ""
"但是如果你在 ``_ready()`` 中使用, 或者从 :ref:`Viewport 的 <class_Viewport>` "
"初始化的第一帧开始使用, 你会得到一个空的纹理, 因为没有什么可以作为纹理获得. "
"你可以用来处理它, 例如:"

msgid "Viewport Container"
msgstr "视口容器"

msgid "Rendering"
msgstr "渲染"

msgid "Render target"
msgstr "渲染目标"

msgid ""
"Or it can be assigned in the editor by selecting \"New ViewportTexture\""
msgstr "或者可以通过选择\"New ViewportTexture\"在编辑器中指定它"

msgid ""
"and then selecting the :ref:`Viewport <class_Viewport>` you want to use."
msgstr "然后选择你想要使用的 :ref:`Viewport <class_Viewport>`."

msgid ""
"Make sure to check the Viewport demos. They are available in the viewport "
"folder of the demos archive, or at https://github.com/godotengine/godot-demo-"
"projects/tree/master/viewport."
msgstr ""
"一定要查看Viewport系列演示！ 它们位于演示存档中的Viewport文件夹，或https://"
"github.com/godotengine/godot-demo-projects/tree/master/viewport。"

msgid "Translation status"
msgstr "翻译状态"
