#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Multiple resolutions"
msgstr "多分辨率"

msgid "The problem of multiple resolutions"
msgstr "多分辨率问题"

msgid ""
"Developers often have trouble understanding how to best support multiple "
"resolutions in their games. For desktop and console games, this is more or "
"less straightforward, as most screen aspect ratios are 16:9 and resolutions "
"are standard (720p, 1080p, 1440p, 4K, …)."
msgstr ""
"开发人员经常会遇到麻烦, 不知道如何在他们的游戏中最好地支持多种分辨率. 对于桌"
"面和控制台游戏, 这或多或少是简单的, 因为大多数屏幕长宽比是16:9, 分辨率是标准"
"的720p, 1080p, 1440p, 4K,......."

msgid ""
"For mobile games, at first, it was easy. For many years, the iPhone and iPad "
"used the same resolution. When *Retina* was implemented, they just doubled "
"the pixel density; most developers had to supply assets in default and "
"double resolutions."
msgstr ""
"对于手机游戏来说，起初，这很容易。许多年来，iPhone 和 iPad 使用相同的分辨率。"
"当实行 *Retina* 后，他们只是将像素密度提高了一倍；大多数开发商不得不以默认和"
"双倍的分辨率提供资产。"

msgid ""
"Nowadays, this is no longer the case, as there are plenty of different "
"screen sizes, densities, and aspect ratios. Non-conventional sizes are also "
"becoming increasingly popular, such as ultrawide displays."
msgstr ""
"如今, 情况已不再如此, 因为有很多不同的屏幕尺寸, 密度和长宽比. 非传统的尺寸也"
"越来越受欢迎, 如超宽显示屏."

msgid ""
"For 3D games, there is not much of a need to support multiple resolutions "
"(from the aesthetic point of view). The 3D geometry will just fill the "
"screen based on the field of view, disregarding the aspect ratio. The main "
"reason one may want to support this, in this case, is for *performance* "
"reasons (running in lower resolution to increase frames per second)."
msgstr ""
"对于3D游戏来说, 没有太大的必要支持多种分辨率(从审美角度来看).3D几何图形将根据"
"视场填充屏幕, 而不考虑长宽比. 在这种情况下, 人们可能想要支持的主要原因是为了 "
"*性能* 的原因(以较低的分辨率运行以增加每秒的帧数)."

msgid ""
"For 2D and game UIs, this is a different matter, as art needs to be created "
"using specific pixel sizes in software such as Photoshop, GIMP or Krita."
msgstr ""
"对于2D和游戏UI, 这是一个不同的问题, 因为设计需要在Photoshop, GIMP或Krita等软"
"件中使用特定的像素尺寸来创建."

msgid ""
"Since layouts, aspect ratios, resolutions, and pixel densities can change so "
"much, it is no longer possible to design UIs for every specific screen. "
"Another method must be used."
msgstr ""
"由于布局, 长宽比, 分辨率和像素密度会有很大的变化, 因此不再可能为每个特定的屏"
"幕设计UI. 必须使用另一种方法."

msgid "One size fits all"
msgstr "万全之策"

msgid ""
"The most common approach is to use a single *base* resolution and then fit "
"it to everything else. This resolution is how most players are expected to "
"play the game (given their hardware). For mobile, Google has useful `stats "
"<https://developer.android.com/about/dashboards>`_ online, and for desktop, "
"Steam `also does <https://store.steampowered.com/hwsurvey/>`_."
msgstr ""
"最常见的方法是使用一个单一的 *基础* 分辨率, 然后将其适用于其他所有情况. 这个"
"分辨率是大多数玩家预期的玩游戏的方式, 鉴于他们的硬件. 对于移动设备, 谷歌在网"
"上有有用的 `统计资料 <https://developer.android.com/about/dashboards>`__ , 对"
"于桌面设备,Steam `也有 <https://store.steampowered.com/hwsurvey/>`__ ."

msgid ""
"As an example, Steam shows that the most common *primary display resolution* "
"is 1920×1080, so a sensible approach is to develop a game for this "
"resolution, then handle scaling for different sizes and aspect ratios."
msgstr ""
"举个例子,Steam显示最常见的 *主要显示分辨率是* 1920×1080, 所以明智的做法是为这"
"个分辨率开发一个游戏, 然后期处理不同尺寸和长宽比的缩放."

msgid "Godot provides several useful tools to do this easily."
msgstr "Godot 还提供了一系列通用的容器."

msgid "Base size"
msgstr "基本大小"

msgid ""
"A base size for the window can be specified in the Project Settings under "
"**Display → Window**."
msgstr "窗口的基本尺寸可以在项目设置中的 **Display → Window** 下指定."

msgid ""
"However, what it does is not completely obvious; the engine will *not* "
"attempt to switch the monitor to this resolution. Rather, think of this "
"setting as the \"design size\", i.e. the size of the area that you work with "
"in the editor. This setting corresponds directly to the size of the blue "
"rectangle in the 2D editor."
msgstr ""
"然而, 它的作用并不完全明显; 引擎将 *不* 尝试将显示器切换到此分辨率. 相反, 将"
"此设置视为 \"设计大小\", 即你在编辑器中使用的区域的大小. 此设置直接对应于2D编"
"辑器中蓝色矩形的大小."

msgid ""
"There is often a need to support devices with screen and window sizes that "
"are different from this base size. Godot offers many ways to control how the "
"viewport will be resized and stretched to different screen sizes."
msgstr ""
"通常需要支持具有与该基本大小不同的屏幕和窗口大小的设备. Godot提供了许多方法来"
"控制视口的大小调整和拉伸到不同的屏幕大小."

msgid ""
"Godot follows a modern approach to multiple resolutions. The engine will "
"never change the monitor's resolution on its own. While changing the "
"monitor's resolution is the most efficient approach, it's also the least "
"reliable approach as it can leave the monitor stuck on a low resolution if "
"the game crashes. This is especially common on macOS or Linux which don't "
"handle resolution changes as well as Windows."
msgstr ""
"Godot遵循了现代多种分辨率的方法. 引擎永远不会自行改变显示器的分辨率. 虽然改变"
"显示器的分辨率是最有效的方法, 但这也是最不可靠的方法, 因为如果游戏崩溃, 它可"
"能会让显示器卡在一个低分辨率上. 这在macOS或Linux上很常见, 因为它们对分辨率变"
"化的处理不如Windows."

msgid ""
"Changing the monitor's resolution also removes any control from the game "
"developer over filtering and aspect ratio stretching, which can be important "
"to ensure correct display for pixel art games."
msgstr ""
"更改显示器的分辨率还会取消游戏开发者对过滤和纵横比拉伸的控制, 这对于确保像素"
"游戏的正确显示画面非常重要."

msgid ""
"On top of that, changing the monitor's resolution makes alt-tabbing in and "
"out of a game much slower since the monitor has to change resolutions every "
"time this is done."
msgstr ""
"最重要的是, 更改显示器的分辨率会使游戏的Alt-Tab键切换速度变慢, 因为每次切换时"
"显示器都必须更改分辨率."

msgid "Resizing"
msgstr "调整大小"

msgid "Stretch settings"
msgstr "拉伸设置"

msgid ""
"Stretch settings are located in the project settings and provide several "
"options:"
msgstr "拉伸设置位于项目设置中, 提供了几个选项:"

msgid "Stretch Mode"
msgstr "拉伸模式"

msgid ""
"**Stretch Mode = Disabled** (default): No stretching happens. One unit in "
"the scene corresponds to one pixel on the screen. In this mode, the "
"**Stretch Aspect** setting has no effect."
msgstr ""
"**Stretch Mode = Disabled** (默认). 不发生拉伸. 场景中的一个单位对应于屏幕上"
"的一个像素. 在这种模式下, **Stretch Aspect** 设置没有效果."

msgid ""
"**Stretch Mode = Viewport**: Viewport scaling means that the size of the "
"root :ref:`Viewport <class_Viewport>` is set precisely to the base size "
"specified in the Project Settings' **Display** section. The scene is "
"rendered to this viewport first. Finally, this viewport is scaled to fit the "
"screen (taking the **Stretch Aspect** setting into account)."
msgstr ""
"**Stretch Mode = Viewport** : 视口缩放意味着根 :ref:`Viewport "
"<class_Viewport>` 的尺寸被精确地设置为在项目设置的 **Display** 部分指定的基本"
"尺寸. 场景首先被渲染到这个视口. 最后, 这个视口被缩放以适应屏幕(考虑 "
"**Stretch Aspect** 的设置)."

msgid "Stretch Aspect"
msgstr "拉伸比例"

msgid ""
"The second setting is the stretch aspect. Note that this only takes effect "
"if **Stretch Mode** is set to something other than **Disabled**."
msgstr ""
"第二个设置是拉伸纵横比. 请注意, 只有在 **Stretch Mode** 被设置为 "
"**Disabled** 以外的情况下, 这才会生效."

msgid ""
"In the animations below, you will notice gray and black areas. The black "
"areas are added by the engine and cannot be drawn into. The gray areas are "
"part of your scene, and can be drawn to. The gray areas correspond to the "
"region outside the blue frame you see in the 2D editor."
msgstr ""
"在下面的动画中, 你会注意到灰色和黑色区域. 黑色区域由引擎添加, 无法绘制. 灰色"
"区域是场景的一部分, 可以绘制. 灰色区域对应于你在2D编辑器中看到的蓝色框架外的"
"区域."

msgid ""
"**Stretch Aspect = Ignore**: Ignore the aspect ratio when stretching the "
"screen. This means that the original resolution will be stretched to exactly "
"fill the screen, even if it's wider or narrower. This may result in "
"nonuniform stretching: things looking wider or taller than designed."
msgstr ""
"**Stretch Aspect = Ignore** : 在拉伸屏幕时忽略长宽比. 这意味着原始分辨率将被"
"拉伸以完全填满屏幕, 即使它更宽或更窄. 这可能会导致不均匀的拉伸, 事物看起来比"
"设计的更宽或更高."

msgid ""
"**Stretch Aspect = Keep**: Keep aspect ratio when stretching the screen. "
"This means that the viewport retains its original size regardless of the "
"screen resolution, and black bars will be added to the top/bottom of the "
"screen (\"letterboxing\") or the sides (\"pillarboxing\")."
msgstr ""
"**Stretch Aspect = Keep** : 在拉伸屏幕的时候保持长宽比. 这意味着无论屏幕分辨"
"率如何, 视口都会保留原来的尺寸, 黑条会被添加到屏幕的顶部或底部(\"宽屏模式 \")"
"或侧面(\" 竖屏模式\")."

msgid ""
"This is a good option if you know the aspect ratio of your target devices in "
"advance, or if you don't want to handle different aspect ratios."
msgstr ""
"如果你事先知道目标设备的宽高比, 或者你不想处理不同的宽高比, 这是一个不错的选"
"择."

msgid ""
"**Stretch Aspect = Keep Width**: Keep aspect ratio when stretching the "
"screen. If the screen is wider than the base size, black bars are added at "
"the left and right (pillarboxing). But if the screen is taller than the base "
"resolution, the viewport will be grown in the vertical direction (and more "
"content will be visible to the bottom). You can also think of this as "
"\"Expand Vertically\"."
msgstr ""
"**Stretch Aspect = Keep Width** : 在拉伸屏幕时保持长宽比. 如果屏幕比基本尺寸"
"宽, 则会在左右两边添加黑条(竖屏模式). 但如果屏幕比基本分辨率高, 视口将在垂直"
"方向上增长(更多的内容将在底部可见). 你也可以把它看作是 \"垂直扩展\" ."

msgid ""
"This is usually the best option for creating GUIs or HUDs that scale, so "
"some controls can be anchored to the bottom (:ref:`doc_size_and_anchors`)."
msgstr ""
"这通常是创建可扩展的GUI或HUD的最佳选择, 因此一些控件可以锚定到底部( :ref:"
"`doc_size_and_anchors`)."

msgid ""
"**Stretch Aspect = Keep Height**: Keep aspect ratio when stretching the "
"screen. If the screen is taller than the base size, black bars are added at "
"the top and bottom (letterboxing). But if the screen is wider than the base "
"resolution, the viewport will be grown in the horizontal direction (and more "
"content will be visible to the right). You can also think of this as "
"\"Expand Horizontally\"."
msgstr ""
"**Stretch Aspect = Keep Height** : 在拉伸屏幕时保持长宽比. 如果屏幕比基本尺寸"
"高, 则会在顶部和底部添加黑条(宽屏模式). 但如果屏幕比基本分辨率宽, 视口将在水"
"平方向上增长(更多的内容将在右边可见). 你也可以把它看作是 \"水平扩展\" ."

msgid ""
"This is usually the best option for 2D games that scroll horizontally (like "
"runners or platformers)."
msgstr "这通常是水平滚动的2D游戏的最佳选择(如跑步者或平台游戏者)."

msgid ""
"**Stretch Aspect = Expand**: Keep aspect ratio when stretching the screen, "
"but keep neither the base width nor height. Depending on the screen aspect "
"ratio, the viewport will either be larger in the horizontal direction (if "
"the screen is wider than the base size) or in the vertical direction (if the "
"screen is taller than the original size)."
msgstr ""
"**Stretch Aspect = Expand** : 在拉伸屏幕时保持长宽比, 但既不保持基本宽度也不"
"保持高度. 根据屏幕的长宽比, 视口将在水平方向(如果屏幕比基本尺寸宽)或垂直方向"
"上变大(如果屏幕比原始尺寸高)."

msgid ""
"To support both portrait and landscape mode with a similar automatically "
"determined scale factor, set your project's base resolution to be a *square* "
"(1:1 aspect ratio) instead of a rectangle. For instance, if you wish to "
"design for 1280×720 as the base resolution but wish to support both portrait "
"and landscape mode, use 720×720 as the project's base window size in the "
"Project Settings."
msgstr ""
"为了以类似的自动确定的比例系数支持纵向和横向模式，请将你的项目的基本分辨率设"
"置为 *方形* （1:1长宽比）而不是矩形。例如，如果你希望以1280×720为基本分辨率进"
"行设计，但又希望同时支持纵向和横向模式，那么在项目设置中使用720×720作为项目的"
"基本窗口尺寸。"

msgid ""
"To allow the user to choose their preferred screen orientation at run-time, "
"remember to set **Display > Window > Handheld > Orientation** to ``sensor``."
msgstr ""
"为了让用户在运行时选择自己喜欢的屏幕方向，记得将**Display > Window > "
"Handheld > Orientation** 设置为 ``sensor`` (传感器)."

msgid "Stretch Scale"
msgstr "拉伸缩放"

msgid "Stretch Scale Mode"
msgstr "拉伸缩放模式"

msgid "Common use case scenarios"
msgstr "常见使用场景"

msgid ""
"The following settings are recommended to support multiple resolutions and "
"aspect ratios well."
msgstr "如果要适配多种分辨率和纵横比，推荐使用以下设置。"

msgid "Desktop game"
msgstr "桌面游戏"

msgid "**Non-pixel art:**"
msgstr "**非像素风：**"

msgid ""
"Alternatively, if you're targeting high-end devices primarily, set the base "
"window width to ``3840`` and window height to ``2160``. This allows you to "
"provide higher resolution 2D assets, resulting in crisper visuals at the "
"cost of higher memory usage and file sizes. Note that this will make non-"
"mipmapped textures grainy on low resolution devices, so make sure to follow "
"the instructions described in :ref:"
"`doc_multiple_resolutions_reducing_aliasing_on_downsampling`."
msgstr ""
"或者如果你主要针对的是高端设备，那么就把基础窗口宽度设置为 ``3840``\\ 、窗口"
"高度设置为 ``2160`` 。这样你就可以提供更高分辨率的 2D 资产，用更高的内存占用"
"和文件大小换取更清晰的画面。注意，这样做会让未做 mipmap 的纹理在低分辨率设备"
"上具有颗粒感，请参考 :ref:"
"`doc_multiple_resolutions_reducing_aliasing_on_downsampling` 进行操作。"

msgid ""
"Set the stretch aspect to ``expand``. This allows for supporting multiple "
"aspect ratios and makes better use of tall smartphone displays (such as 18:9 "
"or 19:9 aspect ratios)."
msgstr ""
"将拉伸比例（Stretch Aspect）设置为 ``expand`` （扩展）。这样可以支持多种分辨"
"率，并且能够更好地利用较长的智能手机屏幕（例如 18:9 和 19:9 的长宽比）。"

msgid ""
"Configure Control nodes' anchors to snap to the correct corners using the "
"**Layout** menu."
msgstr "使用 **布局** 菜单将 Control 节点的锚点吸附到正确的角落。"

msgid "**Pixel art:**"
msgstr "**像素风：**"

msgid "Set the stretch mode to ``viewport``."
msgstr "将拉伸模式（Stretch Mode）设置为 ``viewport`` （视图）。"

msgid ""
"Set the stretch aspect to ``keep`` to enforce a single aspect ratio (with "
"black bars). As an alternative, you can set the stretch aspect to ``expand`` "
"to support multiple aspect ratios."
msgstr ""
"将拉伸比例（Stretch Aspect）设置为 ``keep`` （保持）可以（通过添加黑条的方"
"式）强制使用固定的长宽比。如果你想支持不同长宽比的话，也可以把拉伸模式设置为 "
"``expand`` （扩展）。"

msgid ""
"If using the ``expand`` stretch aspect, Configure Control nodes' anchors to "
"snap to the correct corners using the **Layout** menu."
msgstr ""
"如果选用 ``expand`` 拉伸比例，使用 **布局** 菜单将 Control 节点的锚点吸附到正"
"确的角落。"

msgid "Mobile game in landscape mode"
msgstr "横屏的手机游戏"

msgid ""
"Godot is configured to use landscape mode by default. This means you don't "
"need to change the display orientation project setting."
msgstr "Godot 默认使用横屏模式，所以你无需在项目设置中调整显示方向。"

msgid "Set the base window width to ``1280`` and window height to ``720``."
msgstr "将基础窗口宽度设置为 ``1280``\\ ，窗口高度设置为 ``720``\\ 。"

msgid ""
"Alternatively, if you're targeting high-end devices primarily, set the base "
"window width to ``1920`` and window height to ``1080``. This allows you to "
"provide higher resolution 2D assets, resulting in crisper visuals at the "
"cost of higher memory usage and file sizes. Many devices have even higher "
"resolution displays (1440p), but the difference with 1080p is barely visible "
"given the small size of smartphone displays. Note that this will make non-"
"mipmapped textures grainy on low resolution devices, so make sure to follow "
"the instructions described in :ref:"
"`doc_multiple_resolutions_reducing_aliasing_on_downsampling`."
msgstr ""
"或者如果你主要针对的是高端设备，那么就把基础窗口宽度设置为 ``1920``\\ 、窗口"
"高度设置为 ``1080``\\ 。这样你就可以提供更高分辨率的 2D 资产，用更高的内存占"
"用和文件大小换取更清晰的画面。很多设备拥有更高分辨率的显示屏（1440p），但因为"
"智能手机的屏幕比较小，所以很难看出和 1080p 的区别。注意，这样做会让未做 "
"mipmap 的纹理在低分辨率设备上具有颗粒感，请参考 :ref:"
"`doc_multiple_resolutions_reducing_aliasing_on_downsampling` 进行操作。"

msgid "Mobile game in portrait mode"
msgstr "竖屏的手机游戏"

msgid ""
"Alternatively, if you're targeting high-end devices primarily, set the base "
"window width to ``1080`` and window height to ``1920``. This allows you to "
"provide higher resolution 2D assets, resulting in crisper visuals at the "
"cost of higher memory usage and file sizes. Many devices have even higher "
"resolution displays (1440p), but the difference with 1080p is barely visible "
"given the small size of smartphone displays. Note that this will make non-"
"mipmapped textures grainy on low resolution devices, so make sure to follow "
"the instructions described in :ref:"
"`doc_multiple_resolutions_reducing_aliasing_on_downsampling`."
msgstr ""
"或者如果你主要针对的是高端设备，那么就把基础窗口宽度设置为 ``1080``\\ 、窗口"
"高度设置为 ``1920``\\ 。这样你就可以提供更高分辨率的 2D 资产，用更高的内存占"
"用和文件大小换取更清晰的画面。很多设备拥有更高分辨率的显示屏（1440p），但因为"
"智能手机的屏幕比较小，所以很难看出和 1080p 的区别。注意，这样做会让未做 "
"mipmap 的纹理在低分辨率设备上具有颗粒感，请参考 :ref:"
"`doc_multiple_resolutions_reducing_aliasing_on_downsampling` 进行操作。"

msgid "Set **Display > Window > Handheld > Orientation** to ``portrait``."
msgstr ""
"将 **Display > Window > Handheld > Orientation** 设置为 ``portrait`` （竖"
"屏）。"

msgid "Non-game application"
msgstr "非游戏应用"

msgid ""
"Set the base window width and height to the smallest window size that you "
"intend to target. This is not required, but this ensures that you design "
"your UI with small window sizes in mind."
msgstr ""
"将基础窗口宽高设置为你想要支持的最小窗口尺寸。这不是必须的，但是可以保证你在"
"设计 UI 时考虑较小的窗口尺寸。"

msgid "Keep the stretch mode to its default value, ``disabled``."
msgstr "保持拉伸模式（Stretch Mode）为默认值 ``disabled``\\ （禁用）。"

msgid ""
"Keep the stretch aspect to its default value, ``ignore`` (its value won't be "
"used since the stretch mode is ``disabled``)."
msgstr ""
"保持拉伸比例（Stretch Aspect）为默认值 ``ignore（忽略）`` （因为拉伸模式是 "
"``disabled`` ，所以这里的值不会被用到）。"

msgid ""
"Godot doesn't support manually overriding the 2D scale factor yet, so it is "
"not possible to have hiDPI support in non-game applications. Due to this, it "
"is recommended to leave **Allow Hidpi** disabled in non-game applications to "
"allow for the OS to use its low-DPI fallback."
msgstr ""
"Godot 尚未支持手动设置 2D 缩放比例，所以无法在非游戏应用中支持 hiDPI。因此，"
"推荐为非游戏应用禁用 **Allow Hidpi** 选项，操作系统会回退到低 DPI。"

msgid "hiDPI support"
msgstr "支持 hiDPI 高分辨率屏幕"

msgid ""
"The Godot editor itself is always marked as DPI-aware. Running the project "
"from the editor will only be DPI-aware if **Allow Hidpi** is enabled in the "
"Project Settings."
msgstr ""
"Godot 编辑器本身是打开了这个选项，与 DPI 相关的。但在编辑器中运行项目时，只有"
"在项目设置里启用 **Allow Hidpi** 才会让项目与 DPI 相关。"

msgid "Reducing aliasing on downsampling"
msgstr "减少缩减取样的混叠"

msgid ""
"If the game has a very high base resolution (e.g. 3840×2160), aliasing might "
"appear when downsampling to something considerably lower like 1280×720."
msgstr ""
"如果游戏的基本分辨率很高（如 3840×2160），当采样降到相当低的分辨率（如 "
"1280×720）时，可能会出现锯齿。"

msgid "Handling aspect ratios"
msgstr "处理纵横比"

msgid ""
"Once scaling for different resolutions is accounted for, make sure that your "
"*user interface* also scales for different aspect ratios. This can be done "
"using :ref:`anchors <doc_size_and_anchors>` and/or :ref:`containers "
"<doc_gui_containers>`."
msgstr ""
"一旦考虑到不同分辨率的缩放, 请确保你的 *user interface* 也能为不同的长宽比进"
"行缩放. 这可以使用 :ref:`anchors <doc_size_and_anchors>` 和/或 :ref:"
"`containers <doc_gui_containers>` 来完成."

msgid "Field of view scaling"
msgstr "视场角缩放"

msgid ""
"The 3D Camera node's **Keep Aspect** property defaults to the **Keep "
"Height** scaling mode (also called *Hor+*). This is usually the best value "
"for desktop games and mobile games in landscape mode, as widescreen displays "
"will automatically use a wider field of view."
msgstr ""
"3D相机节点的 **Keep Aspect** 属性默认为 **Keep Height** 缩放模式(也称为 "
"*Hor+* ). 在横屏模式下, 这通常是桌面游戏和手机游戏的最佳选择, 因为宽屏显示器"
"会自动使用更宽的视野."

msgid ""
"However, if your 3D game is intended to be played in portrait mode, it may "
"make more sense to use **Keep Width** instead (also called *Vert-*). This "
"way, smartphones with an aspect ratio taller than 16:9 (e.g. 19:9) will use "
"a *taller* field of view, which is more logical here."
msgstr ""
"然而, 如果你的3D游戏打算使用纵向模式, 那么使用 **Keep Width保持宽度** 称为"
"( *Vert-* )可能会更有意义. 这样, 宽高比大于16:9(例如19:9)的智能手机将使用 *更"
"高* 的视野, 这在这里更符合逻辑."

msgid "Scaling 2D and 3D elements differently using Viewports"
msgstr "使用 Viewport 以不同的方式缩放 2D 和 3D 元素"

msgid ""
"Using multiple Viewport nodes, you can have different scales for various "
"elements. For instance, you can use this to render the 3D world at a low "
"resolution while keeping 2D elements at the native resolution. This can "
"improve performance significantly while keeping the HUD and other 2D "
"elements crisp."
msgstr ""
"使用多个视图窗口节点, 可以对不同的元素使用不同的比例. 例如, 你可以使用此选项"
"以低分辨率渲染3D世界, 同时将2D元素保持在原生分辨率. 这可以显著提高性能, 同时"
"保持HUD和其他2D元素的清晰度."

msgid ""
"See the `3D viewport scaling demo <https://github.com/godotengine/godot-demo-"
"projects/tree/master/viewport/3d_scaling>`__ for examples."
msgstr ""
"有关示例, 请参见 `3D 视口缩放演示 <https://github.com/godotengine/godot-demo-"
"projects/tree/master/viewport/3d_scaling>`__ ."

msgid "Translation status"
msgstr "翻译状态"
