#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.4\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Advanced post-processing"
msgstr "高级后期处理"

msgid "Introduction"
msgstr "前言"

msgid ""
"This tutorial describes an advanced method for post-processing in Godot. In "
"particular, it will explain how to write a post-processing shader that uses "
"the depth buffer. You should already be familiar with post-processing "
"generally and, in particular, with the methods outlined in the :ref:`custom "
"post-processing tutorial <doc_custom_postprocessing>`."
msgstr ""
"本教程描述了一种在 Godot 中进行后期处理的高级方法。值得注意的是，它将解释如何"
"编写使用深度缓冲区的后期处理着色器。你应该已经熟悉后期处理，特别是使用"
"\\ :ref:`自定义后期处理教程 <doc_custom_postprocessing>`\\ 中介绍的方法。"

msgid "Full screen quad"
msgstr "全屏四边形"

msgid "The depth buffer cannot be accessed"
msgstr "无法访问深度缓冲区"

msgid "The effect of the post-processing shader is not visible in the editor"
msgstr "在编辑器中看不到后期处理着色器的效果"

msgid ""
"Add the QuadMesh as a child to the camera, so the camera is always pointed "
"at it"
msgstr "将 QuadMesh 作为子节点添加到相机，这样相机就会始终指向它"

msgid ""
"Set the Geometry property ``extra_cull_margin`` as large as possible in the "
"QuadMesh"
msgstr "在 QuadMesh 中将几何属性 ``extra_cull_margin`` 设置得尽可能大"

msgid ""
"The second option ensures that the quad is visible in the editor, while the "
"first option guarantees that it will still be visible even if the camera "
"moves outside the cull margin. You can also use both options."
msgstr ""
"第二个选项会确保四边形在编辑器中可见，而第一个选项能够保证即使摄像机移出剔除"
"边缘也它仍可见。你也可以同时使用这两个选项。"

msgid "Depth texture"
msgstr "深度纹理"

msgid ""
"Once defined, the depth texture can be read with the ``texture()`` function."
msgstr "定义之后，深度纹理可以从 ``texture()`` 函数中读取。"

msgid ""
"Similar to accessing the screen texture, accessing the depth texture is only "
"possible when reading from the current viewport. The depth texture cannot be "
"accessed from another viewport to which you have rendered."
msgstr ""
"与访问屏幕纹理类似，访问深度纹理只有在从当前视口读取时才能进行。深度纹理不能"
"从你已经渲染的另一个视口中访问。"

msgid ""
"Convert NDC to view space by multiplying the NDC by "
"``INV_PROJECTION_MATRIX``. Recall that view space gives positions relative "
"to the camera, so the ``z`` value will give us the distance to the point."
msgstr ""
"通过将NDC乘以 ``INV_PROJECTION_MATRIX`` , 将NDC转换成视图空间. 回顾一下, 视图"
"空间给出了相对于相机的位置, 所以 ``z`` 值将给我们提供到该点的距离."

msgid ""
"Because the camera is facing the negative ``z`` direction, the position will "
"have a negative ``z`` value. In order to get a usable depth value, we have "
"to negate ``view.z``."
msgstr ""
"因为摄像机是朝向负的 ``z`` 方向的, 所以坐标会有一个负的 ``z`` 值. 为了得到一"
"个可用的深度值, 我们必须否定 ``view.z`` ."

msgid "Example shader"
msgstr "示例着色器"

msgid "An optimization"
msgstr "优化"

msgid ""
"You can benefit from using a single large triangle rather than using a full "
"screen quad. The reason for this is explained `here <https://"
"michaldrobot.com/2014/04/01/gcn-execution-patterns-in-full-screen-passes>`_. "
"However, the benefit is quite small and only beneficial when running "
"especially complex fragment shaders."
msgstr ""
"你可以使用单个大三角形而不是使用全屏四边形. 解释的原因在 `这里 <https://"
"michaldrobot.com/2014/04/01/gcn-execution-patterns-in-full-screen-"
"passes>`_ . 但是, 这种好处非常小, 只有在运行特别复杂的片段着色器时才有用."

msgid ""
"Assign the same vertex shader from above and everything should look exactly "
"the same."
msgstr "从上面分配相同的顶点着色器, 所有内容应该看起来完全相同."
