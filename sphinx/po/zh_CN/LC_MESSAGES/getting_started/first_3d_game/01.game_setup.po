#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Setting up the game area"
msgstr "设置游戏区域"

msgid ""
"In this first part, we're going to set up the game area. Let's get started "
"by importing the start assets and setting up the game scene."
msgstr ""
"在第一部分中，我们将设置游戏区域。让我们从导入初始资产、设置游戏场景入手。"

msgid ""
"We've prepared a Godot project with the 3D models and sounds we'll use for "
"this tutorial, linked in the index page. If you haven't done so yet, you can "
"download the archive here: `Squash the Creeps assets <https://github.com/"
"godotengine/godot-3d-dodge-the-creeps/releases/tag/1.1.0>`__."
msgstr ""
"我们为这个教程准备了一个带有 3D 模型和音效的 Godot 项目，链接在索引页。如果你"
"还没有下载，可以下载这个压缩包：\\ `Squash the Creeps 资产 <https://github."
"com/godotengine/godot-3d-dodge-the-creeps/releases/tag/1.1.0>`__\\ 。"

msgid ""
"Once you downloaded it, extract the .zip archive on your computer. Open the "
"Godot Project Manager and click the *Import* button."
msgstr ""
"下载完成之后，请将 .zip 压缩包解压到你的电脑上。打开 Godot 项目管理器，然后点"
"击\\ *导入*\\ 按钮。"

msgid ""
"In the import popup, enter the full path to the freshly created directory "
"``squash_the_creeps_start/``. You can click the *Browse* button on the right "
"to open a file browser and navigate to the ``project.godot`` file the folder "
"contains."
msgstr ""
"请在导入弹出框中输入刚才新建的目录 ``squash_the_creeps_start/`` 的完整路径。"
"你也可以点击右侧的\\ *浏览*\\ 按钮，打开文件浏览器并找到该文件夹所包含的 "
"``project.godot`` 文件。"

msgid "Click *Import & Edit* to open the project in the editor."
msgstr "点击\\ *导入并编辑*\\ 在编辑器中打开该项目。"

msgid ""
"The start project contains an icon and two folders: ``art/`` and ``fonts/``. "
"There, you will find the art assets and music we'll use in the game."
msgstr ""
"起始项目中包含一个图标和两个文件夹：\\ ``art/`` 和 ``fonts/``\\ 。你可以在里"
"面找到游戏中我们会用到的艺术资产和音乐。"

msgid ""
"There are two 3D models, ``player.glb`` and ``mob.glb``, some materials that "
"belong to these models, and a music track."
msgstr ""
"里面有两个 3D 模型，\\ ``player.glb`` 和 ``mob.glb``\\ ，一些模型使用的材质，"
"以及一首音乐。"

msgid "Setting up the playable area"
msgstr "设置游玩区域"

msgid ""
"We'll start by adding a floor that'll prevent the characters from falling. "
"To create static colliders like the floor, walls, or ceilings, you can use :"
"ref:`StaticBody3D <class_StaticBody3D>` nodes. They require :ref:"
"`CollisionShape3D <class_CollisionShape3D>` child nodes to define the "
"collision area. With the ``Main`` node selected, add a :ref:`StaticBody3D "
"<class_StaticBody3D>` node, then a :ref:`CollisionShape3D "
"<class_CollisionShape3D>`. Rename the :ref:`StaticBody3D "
"<class_StaticBody3D>` to ``Ground``."
msgstr ""
"我们先添加一个地板，以防止角色掉落。要创建地板、墙壁或天花板等静态碰撞器，可"
"以使用 :ref:`StaticBody3D <class_StaticBody3D>` 节点。它们需要 :ref:"
"`CollisionShape3D <class_CollisionShape3D>` 子节点来定义碰撞区域。选择 "
"*Main* 节点后，添加 :ref:`StaticBody3D <class_StaticBody3D>` 节点，然后添加 :"
"ref:`CollisionShape3D <class_CollisionShape3D>`。将 :ref:`StaticBody3D "
"<class_StaticBody3D>` 重命名为 ``Ground`` 。"

msgid "Your scene tree should look like this"
msgstr "你的场景树应该看上去像这样"

msgid ""
"A warning sign next to the :ref:`CollisionShape3D <class_CollisionShape3D>` "
"appears because we haven't defined its shape. If you click the icon, a popup "
"appears to give you more information."
msgstr ""
"在 :ref:`CollisionShape3D <class_CollisionShape3D>` 旁边会出现一个警告标志，"
"因为我们还没有定义它的形状。如果你点击这个图标，就会弹出一个窗口，为你提供更"
"多信息。"

msgid ""
"To create a shape, select the :ref:`CollisionShape3D "
"<class_CollisionShape3D>` node, head to the *Inspector* and click the "
"*<empty>* field next to the *Shape* property. Create a new *BoxShape3D*."
msgstr ""
"要创建形状，请选中 :ref:`CollisionShape3D <class_CollisionShape3D>`\\ ，转到"
"\\ *检查器*\\ ，然后单击 *Shape*\\ （形状）属性旁边的 *<空>* 字段。创建一个新"
"的 *BoxShape3D*\\ 。"

msgid ""
"The box shape is perfect for flat ground and walls. Its thickness makes it "
"reliable to block even fast-moving objects."
msgstr ""
"盒子形状非常适合平坦的地面和墙壁。它的厚度使它能够可靠地阻挡甚至快速移动的物"
"体。"

msgid ""
"Collision shapes are invisible. We need to add a visual floor that goes "
"along with it. Select the ``Ground`` node and add a :ref:`MeshInstance3D "
"<class_MeshInstance3D>` as its child."
msgstr ""
"碰撞形状是不可见的。我们需要添加一个与之配套的视觉层。选择 ``Ground`` 节点并"
"添加一个 :ref:`MeshInstance3D <class_MeshInstance3D>` 作为其子节点。"

msgid ""
"In the *Inspector*, click on the field next to *Mesh* and create a :ref:"
"`BoxMesh <class_BoxMesh>` resource to create a visible box."
msgstr ""
"在\\ *检查器*\\ 中，点击 *Mesh* 旁边的字段，创建一个 :ref:`BoxMesh "
"<class_BoxMesh>` 资源，创建一个可见的立方体。"

msgid ""
"Once again, it's too small by default. Click the box icon to expand the "
"resource and set its *Size* to ``60``, ``2``, and ``60``."
msgstr ""
"再次设置大小，对于默认值来说它有点太小了。点击立方体图标展开资源，并将其 "
"*Size* 设置为 ``60``\\ 、\\ ``2``\\ 、\\ ``60``\\ 。由于立方体资源使用的是大"
"小（size）而不是范围（extents），我们需要使用这些值，以便它与我们的碰撞形状相"
"匹配。"

msgid ""
"You should see a wide grey slab that covers the grid and blue and red axes "
"in the viewport."
msgstr "你应该会在视口中看到一个覆盖网格以及蓝色和红色轴的宽灰色平板。"

msgid ""
"If you can't see the 3D object manipulator like on the image above, ensure "
"the *Select Mode* is active in the toolbar above the view."
msgstr ""
"如果你没有看到如上图所示的 3D 对象操作器，请确保已激活视图上方工具栏中的\\ *"
"选择模式*\\ 。"

msgid ""
"Move the ground down ``1`` meter, in order to have a visible editor grid. A "
"label in the bottom-left corner of the viewport tells you how much you're "
"translating the node."
msgstr ""
"为了有一个可见的编辑器栅格，可以将地面往下移动 ``1`` 米。视口左下角的标签会显"
"示你将该节点平移了多远。"

msgid ""
"Moving the *Ground* node down moves both children along with it. Ensure you "
"move the *Ground* node, **not** the *MeshInstance3D* or the "
"*CollisionShape3D*."
msgstr ""
"子节点会跟随 *Ground* 节点一起往下移动。请确保你移动的是 *Ground* 节点，而不"
"是 *MeshInstance3D* 和 *CollisionShape3D*\\ 。"

msgid "Ultimately, ``Ground``'s transform.position.y should be -1"
msgstr "最终，``Ground`` 的 transform.position.y 应当是 -1"

msgid ""
"Let's add a directional light so our scene isn't all grey. Select the "
"``Main`` node and add a child node :ref:`DirectionalLight3D "
"<class_DirectionalLight3D>`."
msgstr ""
"现在来添加一个平行光，从而让我们的整个场景不全都是灰色的。选择 ``Main`` 节"
"点，然后添加一个子节点 :ref:`DirectionalLight3D <class_DirectionalLight3D>`。"

msgid ""
"In the *Inspector*, turn on *Shadow -> Enabled* by clicking the checkbox."
msgstr "在\\ *检查器*\\ 中，勾选复选框打开\\ *Shadow -> Enabled*\\ 。"

msgid "At this point, your project should look like this."
msgstr "项目此时看起来是这个样子。"

msgid ""
"That's our starting point. In the next part, we will work on the player "
"scene and base movement."
msgstr "这就是我们的起点了。在下一部分中，我们将处理玩家场景与基础移动。"

msgid "Translation status"
msgstr "翻译状态"
