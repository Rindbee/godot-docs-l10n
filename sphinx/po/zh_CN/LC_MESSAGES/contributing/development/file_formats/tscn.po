#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.3\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "TSCN file format"
msgstr "TSCN 文件格式"

msgid ""
"The TSCN (text scene) file format represents a single scene tree inside "
"Godot. Unlike binary SCN files, TSCN files have the advantage of being "
"mostly human-readable and easy for version control systems to manage."
msgstr ""
"TSCN（文本场景）文件格式表示 Godot 内部的单个场景树。与二进制的 SCN 文件不"
"同，TSCN 具有易于人类阅读、便于使用版本控制系统进行管理的优点。"

msgid ""
"The ESCN (exported scene) file format is identical to the TSCN file format, "
"but is used to indicate to Godot that the file has been exported from "
"another program and should not be edited by the user from within Godot. "
"Unlike SCN and TSCN files, during import, ESCN files are compiled to binary "
"SCN files stored inside the ``.godot/imported/`` folder. This reduces the "
"data size and speeds up loading, as binary formats are faster to load "
"compared to text-based formats."
msgstr ""
"ESCN（导出场景）文件格式与 TSCN 文件格式相同，但它是用于向 Godot 表明该文件是"
"从另一个程序导出的，不应由用户在 Godot 内部进行编辑。与 SCN 和 TSCN 文件不"
"同，导入时，ESCN 文件会被编译为存储在 ``.godot/imported/`` 文件夹中的二进制 "
"SCN 文件。这减少了数据大小并加快了加载速度，因为与基于文本的格式相比，二进制"
"格式的加载更快。"

msgid ""
"To make files more compact, properties equal to the default value are not "
"stored in scene/resource files. It is possible to write them manually, but "
"they will be discarded when saving the file."
msgstr ""
"为了使文件更加紧凑，属性值等于默认值的属性不会储存在场景 / 资源文件中。这些属"
"性可以手动写入，但在储存文件时会被自动丢弃。"

msgid ""
"For those looking for a complete description, the parsing is handled in the "
"file `resource_format_text.cpp <https://github.com/godotengine/godot/blob/"
"master/scene/resources/resource_format_text.cpp>`_ in the "
"``ResourceFormatLoaderText`` class."
msgstr ""
"如果想要完整的描述，对这些文件格式的解析是在 `resource_format_text.cpp "
"<https://github.com/godotengine/godot/blob/master/scene/resources/"
"resource_format_text.cpp>`_ 的 ``ResourceFormatLoaderText`` 类中进行处理的。"

msgid ""
"The scene and resource file formats have changed significantly in Godot 4, "
"with the introduction of string-based UIDs to replace incremental integer "
"IDs."
msgstr ""
"Godot 4 对场景和资源文件格式做出了重大变化，引入了基于字符串的 UID 来取代递增"
"整数的 ID。"

msgid ""
"Mesh, skeleton and animation data is also stored differently compared to "
"Godot 3. You can read about some of the changes in this article: `Animation "
"data rework for 4.0 <https://godotengine.org/article/animation-data-"
"redesign-40/>`__"
msgstr ""
"网格，骨骼和动画数据的存储方式也不同于 Godot 3。部分变化可以参考这篇文章： "
"`Animation data rework for 4.0 <https://godotengine.org/article/animation-"
"data-redesign-40/>`__"

msgid ""
"Scenes and resources saved with Godot 4.x contain ``format=3`` in their "
"header, whereas Godot 3.x uses ``format=2`` instead."
msgstr ""
"Godot 4.x 中保存的场景和资源在标头中包含 ``format=3`` ，Godot 3.x 则使用 "
"``format=2``\\ 。"

msgid "File structure"
msgstr "文件结构"

msgid "There are five main sections inside the TSCN file:"
msgstr "TSCN 文件分为五个主要部分："

msgid "File descriptor"
msgstr "文件描述符"

msgid "External resources"
msgstr "外部资源"

msgid "Internal resources"
msgstr "内部资源"

msgid "Nodes"
msgstr "节点"

msgid "Connections"
msgstr "连接"

msgid ""
"The file descriptor looks like ``[gd_scene load_steps=4 format=3 uid=\"uid://"
"cecaux1sm7mo0\"]`` and should be the first entry in the file. The "
"``load_steps`` parameter is equal to the total amount of resources (internal "
"and external) plus one (for the file itself). If the file has no resources, "
"``load_steps`` is omitted. The engine will still load the file correctly if "
"``load_steps`` is incorrect, but this will affect loading bars and any other "
"piece of code relying on that value."
msgstr ""
"文件描述符类似于 ``[gd_scene load_steps=4 format=3 uid=\"uid://"
"cecaux1sm7mo0\"]``\\ ，并且应该是文件中的第一条记录。\\ ``load_steps`` 参数等"
"于资源总量（内部和外部）加一（文件本身）。如果该文件没有资源，则 "
"``load_steps`` 会被省略。即便 ``load_steps`` 不正确，引擎仍将正确加载该文件，"
"但这会影响加载进度条和其他依赖该值的代码。"

msgid ""
"``uid`` is a unique string-based identifier representing the scene. This is "
"used by the engine to track files that are moved around, even while the "
"editor is closed. Scripts can also load UID-based resources using the "
"``uid://`` path prefix to avoid relying on filesystem paths. This makes it "
"possible to move around a file in the project, but still be able to load it "
"in scripts without having to modify the script. Godot does not use external "
"files to keep track of IDs, which means no central metadata storage location "
"is required within the project. See `this pull request <https://github.com/"
"godotengine/godot/pull/50786>`__ for detailed information."
msgstr ""
"``uid`` 是一个唯一的，基于字符串的标识符，用于代表场景。引擎利用该标识符来追"
"踪被移动的文件，即使编辑器关闭也同样如此。脚本也可以利用 ``uid://`` 路径前缀"
"来加载基于 UID 的资源，而不必依赖于文件系统的路径。这样，即使文件在项目中被任"
"意移动，也可以从脚本中读取该文件，而无需对脚本进行更改。Godot 不使用外部文件"
"来追踪 ID，因此项目中不需要中心化元数据储存位置。详细信息请参考 `拉取请求 "
"<https://github.com/godotengine/godot/pull/50786>`__ 。"

msgid ""
"These sections should appear in order, but it can be hard to distinguish "
"them. The only difference between them is the first element in the heading "
"for all of the items in the section. For example, the heading of all "
"external resources should start with ``[ext_resource ...]``."
msgstr ""
"这些部分应按顺序出现，但可能很难区分它们。它们之间的唯一区别是该部分中所有项"
"目的标题中的第一个元素。例如，所有外部资源的标题都应以 "
"``[ext_resource ...]`` 开头。"

msgid ""
"A TSCN file may contain single-line comments starting with a semicolon (``;"
"``). However, comments will be discarded when saving the file using the "
"Godot editor. Whitespace within a TSCN file is not significant (except "
"within strings), but extraneous whitespace will be discarded when saving the "
"file."
msgstr ""
"TSCN 文件可能包含以分号（\\ ``;``\\ ）开头的单行注释。但是，使用 Godot 编辑器"
"保存文件时，注释将被丢弃。TSCN 文件中的空格并不重要（字符串内的除外），但保存"
"文件时，多余的空格将被丢弃。"

msgid "Entries inside the file"
msgstr "文件中的条目"

msgid ""
"A heading looks like ``[<resource_type> key1=value1 key2=value2 "
"key3=value3 ...]`` where resource_type is one of:"
msgstr ""
"标题看起来像 ``[<resource_type> key1=value1 key2=value2 "
"key3=value3 ...]``\\ ，其中 resource_type 是以下之一："

msgid "``ext_resource``"
msgstr "``ext_resource``"

msgid "``sub_resource``"
msgstr "``sub_resource``"

msgid "``node``"
msgstr "``node``"

msgid "``connection``"
msgstr "``connection``"

msgid ""
"Below every heading comes zero or more ``key = value`` pairs. The values can "
"be complex datatypes such as Arrays, Transforms, Colors, and so on. For "
"example, a Node3D looks like:"
msgstr ""
"每个标题下面都有零个或多个 ``key = value`` 对。值可以是类似数组、变换、颜色等"
"复杂的数据类型。例如，一个 Node3D 将如下所示："

msgid "The scene tree"
msgstr "场景树"

msgid ""
"The scene tree is made up of… nodes! The heading of each node consists of "
"its name, parent and (most of the time) a type. For example: ``[node "
"name=\"PlayerCamera\" type=\"Camera\" parent=\"Player/Head\"]``"
msgstr ""
"场景树由节点组成！每个节点的标题由其名称、父节点和（大多数情况下）一种类型组"
"成。例如： ``[node name=\"PlayerCamera\" type=\"Camera\" parent=\"Player/"
"Head\"]``"

msgid "Other valid keywords include:"
msgstr "其他有效的关键字包括:"

msgid "``instance``"
msgstr "``instance``"

msgid "``instance_placeholder``"
msgstr "``instance_placeholder``"

msgid "``owner``"
msgstr "``owner``"

msgid ""
"``index`` (sets the order of appearance in the tree; if absent, inherited "
"nodes will take precedence over plain ones)"
msgstr ""
"``index``\\ （设置在树中出现的顺序；如果不存在，则继承的节点将优先于普通节"
"点）"

msgid "``groups``"
msgstr "``groups``"

msgid ""
"To make the file structure easier to grasp, you can save a file with any "
"given node or resource and then inspect it yourself in an external editor. "
"You can also make incremental changes in the Godot editor, and keep an "
"external text editor open on the ``.tscn`` or ``.tres`` file with auto-"
"reload enabled to see what changes."
msgstr ""
"为了让文件结构更易于理解，可以将任意节点或资源保存为文件，并在外部编辑器中对"
"其进行审查。还可以在 Godot 编辑器中进行渐进式更改，同时在外部文本编辑器自动更"
"新启动的情况下，将 ``.tscn`` 或 ``.tres`` 文件保持打开，以观察变化内容。"

msgid ""
"Here is an example of a scene containing a RigidBody3D-based ball with "
"collision, visuals (mesh + light) and a camera parented to the RigidBody3D:"
msgstr ""
"以下是一个示例场景，包含一个基于 RigidBody3D 且具有碰撞的球体，视觉元素（网格"
"和光照）和附加到 RigidBody3D 上的相机："

msgid "NodePath"
msgstr "节点路径"

msgid ""
"NodePath can also point to a property using a ``:property_name`` suffix, and "
"even point to a specific component for vector, transform and color types. "
"This is used by Animation resources to point to specific properties to "
"animate. For example, ``NodePath(\"MeshInstance3D:scale.x\")`` points to the "
"``x`` component of the ``scale`` Vector3 property in MeshInstance3D."
msgstr ""
"NodePath 还可能用 ``:property_name`` 后缀来指向一个属性，还可能指向向量，变换"
"和颜色类型中的一个分量。动画资源利用这一点，来指向要动画的特定属性。例如，\\ "
"``NodePath(\"MeshInstance3D:scale.x\")`` 指向 MeshInstance3D 中的 Vector3 类"
"型的 ``scale`` 属性中的 ``x`` 分量。"

msgid ""
"For example, the ``skeleton`` property in the MeshInstance3D node called "
"``mesh`` points to its parent, ``Armature01``:"
msgstr ""
"举例来说，名为``mesh``的节点``MeshInstance3D``中属性``skeleton``指向其父节点"
"``Armature01``："

msgid "Skeleton3D"
msgstr "Skeleton3D"

msgid "``position``: Vector3"
msgstr "``position``\\ ：Vector3"

msgid "``rotation``: Quaternion"
msgstr "``rotation``\\ ：Quaternion"

msgid "``scale``: Vector3"
msgstr "``scale``\\ ：Vector3"

msgid ""
"These attributes are all optional. For instance, a bone may only define "
"``position`` or ``rotation`` without defining the other properties."
msgstr ""
"这些属性都是可选的。例如，骨骼可能只定义了 ``position`` 或 ``rotation`` ，而"
"不定义其他属性。"

msgid "Here's an example of a skeleton node with two bones:"
msgstr "具有两个骨骼的骨架节点的示例："

msgid "BoneAttachment3D"
msgstr "BoneAttachment3D"

msgid ""
"The :ref:`class_BoneAttachment3D` node is an intermediate node to describe "
"some node being parented to a single bone in a Skeleton node. The "
"BoneAttachment has a ``bone_name = \"name of bone\"`` property, as well as a "
"property for the matching bone index."
msgstr ""
":ref:`class_BoneAttachment3D` 节点是一个中间节点，用于描述在 Skeleton 节点中"
"以单根骨骼为父节点的某些节点。BoneAttachment 具有 ``bone_name = \"骨骼名称"
"\"`` 属性，以及匹配骨骼索引的属性。"

msgid ""
"An example of a :ref:`class_Marker3D` node parented to a bone in Skeleton:"
msgstr "以 Skeleton 中的骨骼为父级的 :ref:`class_Marker3D` 节点示例："

msgid "AnimationPlayer"
msgstr "AnimationPlayer"

msgid "Resources"
msgstr "资源"

msgid ""
"Resources are components that make up the nodes. For example, a "
"MeshInstance3D node will have an accompanying ArrayMesh resource. The "
"ArrayMesh resource may be either internal or external to the TSCN file."
msgstr ""
"资源是组成各个节点的元件。举例来说，MeshInstance节点中会有附带的ArrayMesh资"
"源。该ArrayMesh资源可以在TSCN档的内部或外部。"

msgid ""
"References to the resources are handled by unique string-based IDs in the "
"resource's heading. This is different from the ``uid`` property, which each "
"external resource also has (but subresources don't)."
msgstr ""
"对资源的引用由资源标题中基于字符串的唯一 ID 处理。这与每个外部资源也具有的 "
"``uid`` 属性不同（但子资源没有）。"

msgid ""
"Godot always generates absolute paths relative to the resource directory and "
"thus prefixed with ``res://``, but paths relative to the TSCN file's "
"location are also valid."
msgstr ""
"Godot总是生成相对于资源目录的绝对路径, 因此以 ``res://`` 为前缀, 但是相对于"
"TSCN文件位置的路径也有效."

msgid "Some example external resources are:"
msgstr "一些示例外部资源是:"

msgid ""
"A TSCN file can contain meshes, materials and other data. These are "
"contained in the *internal resources* section of the file. The heading for "
"an internal resource looks similar to those of external resources, except "
"that it doesn't have a path. Internal resources also have ``key=value`` "
"pairs under each heading. For example, a capsule collision shape looks like:"
msgstr ""
"TSCN文件可以包含网格, 材质和其他数据. 这些包含在文件的 *内部资源* 部分中. 内"
"部资源的标题与外部资源的标题相似, 不同之处在于它没有路径. 内部资源在每个标题"
"下还具有 ``键=值`` 对. 例如, 胶囊碰撞形状如下所示:"

msgid ""
"Some internal resources contain links to other internal resources (such as a "
"mesh having a material). In this case, the referring resource must appear "
"*before* the reference to it. This means that order matters in the file's "
"internal resources section."
msgstr ""
"一些内部资源包含到其他内部资源的链接(例如具有材质的网格). 在这种情况下, 引用"
"的资源必须在对其的引用 *之前* 出现. 这意味着顺序在文件的内部资源部分中很重要."

msgid "ArrayMesh"
msgstr "ArrayMesh"

msgid ""
"An ArrayMesh consists of several surfaces contained in the ``_surfaces`` "
"array (notice the leading underscore). Each surface's data is stored in a "
"dictionary with the following keys:"
msgstr ""
"ArrayMesh 由包含在 ``_surfaces`` 数组中的多个表面组成（注意开头的下划线）。每"
"个表面的数据都储存在具有以下键的字典中："

msgid ""
"``attribute_data``: Vertex attribute data, such as normals, tangents, vertex "
"colors, UV1, UV2 and custom vertex data."
msgstr ""
"``attribute_data``：顶点属性数据，例如法线、切线、顶点颜色、UV1、UV2和自定义"
"顶点数据。"

msgid ""
"``bone_aabbs``: The axis-aligned bounding box of each bone for visibility."
msgstr "``bone_aabbs``：每个骨骼的轴对齐边界框以提高可见性。"

msgid "``format``: The surface's buffer format."
msgstr "``format``：表面的缓冲区格式。"

msgid ""
"``index_count``: The number of indices in the surface. This must match "
"``index_data``'s size."
msgstr "``index_count``：表面中索引的数量。这必须与“index_data”的大小相符。"

msgid ""
"``lods``: Level of detail variations, stored as an array. Each LOD level "
"represents two values in the array. The first value is the percentage of "
"screen space the LOD level is most suited for (edge length); the second "
"value is the list of indices that should be drawn for the given LOD level."
msgstr ""
"``lods``：细节变化的级别，储存为数组。每个LOD等级代表数组中的两个值。第一个值"
"是LOD等级最适合的屏幕空间百分比（边缘长度）；第二个值是应为给定LOD等级绘制的"
"索引列表。"

msgid "``material``: The material used when drawing the surface."
msgstr "``material``：绘制表面时所使用的材质。"

msgid ""
"``name``: The surface's name. This can be used in scripts and is imported "
"from 3D DCCs."
msgstr "``name``：表面的名称。这可以在脚本中使用，并从3D DCC汇入。"

msgid "``skin_data``: Bone weight data."
msgstr "``skin_data``：骨骼重量数据。"

msgid ""
"``vertex_count``: Number of vertices in the surface. This must match "
"``vertex_data``'s size."
msgstr "``vertex_count``：表面中的顶点数。这必须与“vertex_data”的大小相符。"

msgid "``vertex_data``: The vertex position data."
msgstr "``vertex_data``：顶点位置数据。"

msgid "Animation"
msgstr "动画"

msgid ""
"``length``: The animation's length in seconds. Note that keyframes may be "
"placed outside the ``[0; length]`` interval, but they may have no effect "
"depending on the interpolation mode chosen."
msgstr ""
"``length`` ：动画的长度（以秒为单位）。请注意，关键帧可以放置在 ``[0; "
"length]`` 的区间之外，但根据所选的插值模式这样可能没有效果。"

msgid ""
"``step``: The step size to use when editing this animation in the editor. "
"This is only used in the editor; it doesn't affect animation playback in any "
"way."
msgstr ""
"``step`` ：在编辑器中编辑此动画时所使用的步长。该属性只在编辑器中可用；它不会"
"以任何方式影响动画播放。"

msgid ""
"Each track is described by a list of key-value pairs in the format ``tracks/"
"<id>/<attribute>``. Each track includes:"
msgstr ""
"每个轨道均由格式为 ``tracks/<id>/<attribute>`` 的键值对列表描述。每个轨道包"
"括："

msgid ""
"``type``: The track's type. This defines what kind of properties may be "
"animated by this track, and how it'll be exposed to the user in the editor. "
"Valid types are ``value`` (generic property track), ``position_3d``, "
"``rotation_3d``, ``scale_3d``, ``blend_shape`` (optimized 3D animation "
"tracks), ``method`` (method call tracks), ``bezier`` (Bezier curve tracks), "
"``audio`` (audio playback tracks), ``animation`` (tracks that play other "
"animations)."
msgstr ""
"``type`` ：轨道的类型。这个属性定义了该轨道可以动画化哪种属性，以及如何在编辑"
"器中向用户公开它。有效类型为 ``value`` （通用属性轨道）、 ``position_3d`` 、 "
"``rotation_3d`` 、 ``scale_3d`` 、 ``blend_shape`` （优化的 3D 动画轨道）、 "
"``method`` （方法调用轨道）、 ``bezier`` （贝塞尔曲线轨道）、 ``audio`` （音"
"频播放轨道）、 ``animation`` （播放其他动画的轨道）。"

msgid ""
"``imported``: ``true`` if the track was created from an imported 3D scene, "
"``false`` if it was manually created by the user in the Godot editor or "
"using a script."
msgstr ""
"``imported`` ：如果轨道是从导入的 3D 场景创建的，则为 ``true`` ；如果轨道是由"
"用户在 Godot 编辑器中或使用脚本手动创建的，则为 ``false``\\ 。"

msgid ""
"``enabled``: ``true`` if the track is effective, ``false`` if it was "
"disabled in the editor."
msgstr ""
"``enabled`` ：如果轨道有效的（即被启用），则为 ``true`` ；如果轨道在编辑器中"
"被禁用，则为 ``false``\\ 。"

msgid ""
"``path``: Path to the node property that will be affected by the track. The "
"property is written after the node path with a ``:`` separator."
msgstr ""
"``path`` ：将受轨道影响的节点属性的路径。该属性写在节点路径后面，并使用 ``:"
"`` 分隔符。"

msgid ""
"``interp``: The interpolation mode to use. ``0`` = nearest, ``1`` = linear, "
"``2`` = cubic, ``3`` = linear angle, ``4`` = cubic angle."
msgstr ""
"``interp`` ：要使用的插值模式。\\ ``0`` = 最近（nearest），\\ ``1`` = 线性"
"（linear），\\ ``2`` = 立方（cubic），\\ ``3`` = 线性角度（linear "
"angle），\\ ``4`` = 立方角度（cubic angle）。"

msgid ""
"``keys``: The animation track's values. This attribute's structure depends "
"on the ``type``."
msgstr "``keys`` ：动画轨道的值。该属性的结构取决于 ``type``\\ 。"

msgid ""
"Here is a scene containing an AnimationPlayer that scales down a cube over "
"time using a generic property track. The AnimationLibrary workflow was not "
"used, so the animation library has an empty name (but the animation is still "
"given a ``scale_down`` name). Note that the ``RESET`` track was not created "
"in this AnimationPlayer for brevity:"
msgstr ""
"这是一个包含 AnimationPlayer 的场景，它使用通用属性轨道，随时间推进缩小立方"
"体。由于未使用 AnimationLibrary 工作流程，此动画库的名称为空（但动画仍指定为 "
"``scale_down`` 名称）。请注意，为了简洁起见，没有在此 AnimationPlayer 中创建 "
"``RESET`` 轨道："

msgid ""
"For generic property ``value`` tracks, ``keys`` is a dictionary containing 3 "
"arrays with positions in ``times`` (PackedFloat32Array), easing values in "
"``transitions`` (PackedFloat32Array) and values in ``values`` (Array). There "
"is an additional ``update`` property, which is an integer with the values "
"``0`` = continuous, ``1`` = discrete, ``2`` = capture."
msgstr ""
"对于通用属性 ``value`` 轨道，\\ ``keys`` 是一个字典，其中包含 3 个数组。三个"
"数组分别是：位置（position）位于 ``times`` （PackedFloat32Array）中；缓动值"
"（easing value）位于 ``transitions`` （PackedFloat32Array）中；值（value）位"
"于 ``values`` （Array）中。还有一个附加的 ``update`` 属性，它是一个整数，其值"
"代表的含义分别是： ``0`` = 连续（continuous），\\ ``1`` = 离散"
"（discrete），\\ ``2`` = 捕获（capture）。"

msgid ""
"Here is a second Animation resource that makes use of the 3D Position and 3D "
"Rotation tracks. These tracks (in addition to the 3D Scale track) replace "
"Transform tracks from Godot 3. They are optimized for fast playback and can "
"optionally be compressed."
msgstr ""
"这是第二个动画资源，它利用了 3D 位置和 3D 旋转轨道。这些轨道（除了 3D 缩放轨"
"道）取代了 Godot 3 中的 Transform 轨道。它们经过优化，可以快速播放，并且可以"
"选择进行压缩。"

msgid ""
"The downside of these optimized track types is that they can't use custom "
"easing values. Instead, all keyframes use linear interpolation. That said, "
"you can still opt for using nearest or cubic interpolation for all keyframes "
"in a given track by changing the track's interpolation mode."
msgstr ""
"这些优化轨道类型的缺点是，它们无法使用自定义缓动值。相反地，所有关键帧都使用"
"线性插值。也就是说，你仍然可以通过更改轨道的插值模式，来选择对给定轨道中的所"
"有关键帧使用最近插值或三次插值。"

msgid ""
"For 3D position, rotation and scale tracks, ``keys`` is a PackedFloat32Array "
"with all values stored in a sequence."
msgstr ""
"对于 3D 位置、旋转和缩放轨道，\\ ``key`` 是一个将所有值都存储在序列中的 "
"PackedFloat32Array。"

msgid ""
"In the visual guide below, ``T`` is the keyframe's time in seconds since the "
"start of the animation, ``E`` is the keyframe's transition (currently always "
"``1``). For 3D position and scale tracks, ``X``, ``Y``, ``Z`` are the "
"Vector3's coordinates. For 3D rotation tracks, ``X``, ``Y``, ``Z`` and ``W`` "
"are the Quaternion's coordinates."
msgstr ""
"在下面的视觉指南中，\\ ``T`` 是自动画开始以来关键帧的时间（以秒为单位），\\ "
"``E`` 是关键帧的过渡（当前始终为 ``1`` ）。对于 3D 位置和比例轨道，\\ "
"``X`` 、 ``Y`` 、 ``Z`` 是 Vector3 的坐标。对于 3D 旋转轨道，\\ ``X`` 、 "
"``Y`` 、 ``Z`` 和 ``W`` 是四元数的坐标。"
