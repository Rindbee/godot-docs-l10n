#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "CLion"
msgstr "CLion"

msgid ""
"`CLion <https://www.jetbrains.com/clion/>`_ is a commercial `JetBrains "
"<https://www.jetbrains.com/>`_ IDE for C++."
msgstr ""
"`CLion <https://www.jetbrains.com/clion/>`_ 是一个商业化的 `JetBrains "
"<https://www.jetbrains.com/>`_ C++ IDE。"

msgid "Importing the project"
msgstr "导入项目"

msgid ""
"CLion can import a project's `compilation database file <https://clang.llvm."
"org/docs/JSONCompilationDatabase.html>`_, commonly named ``compile_commands."
"json``. To generate the compilation database file, open the terminal, change "
"to the Godot root directory, and run:"
msgstr ""
"CLion 可以导入项目的\\ `编译数据库文件 <https://clang.llvm.org/docs/"
"JSONCompilationDatabase.html>`_\\ ，通常名叫 ``compile_commands.json``\\ 。要"
"生成这个编译数据库文件，请打开终端，切换到 Godot 根目录，然后执行："

msgid ""
"Then, open the Godot root directory with CLion. CLion will import the "
"compilation database, index the codebase, and provide autocompletion and "
"other advanced code navigation and refactoring functionality."
msgstr ""
"然后使用 CLion 打开 Godot 根目录。CLion 会将编译数据库导入、对其进行索引，从"
"而提供自动补全以及其他高级代码导航和重构功能。"

msgid "Compiling and debugging the project"
msgstr "项目的编译与调试"

msgid ""
"CLion does not expand shell commands like ``scons -j$(nproc)``. Use concrete "
"values instead, e.g. ``scons -j8``."
msgstr ""
"CLion 不会扩展类似 ``scons -j$(nproc)`` 这样的 shell 命令。请使用具体的值，例"
"如 ``scons -j8``\\ 。"

msgid ""
"When playing a scene, the Godot editor will spawn a separate process. You "
"can debug this process in CLion by going to **Run > Attach to process...**, "
"typing ``godot``, and selecting the Godot process with the highest **pid** "
"(process ID), which will usually be the running project."
msgstr ""
"在运行场景时，Godot编辑器会生成一个独立的进程。可以在 CLion 中调试该进程，方"
"法是选择 **Run > Attach to process...** ，输入 ``godot`` ，然后选择 **pid** "
"（进程 ID）最大的 Godot 进程，该进程通常是正在运行的项目。"
