#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for Linux, \\*BSD"
msgstr "为 Linux、\\*BSD 平台编译"

msgid ""
"This page describes how to compile Linux editor and export template binaries "
"from source. If you're looking to export your project to Linux instead, "
"read :ref:`doc_exporting_for_linux`."
msgstr ""
"这个页面描述的是如何从源码编译 Linux 编辑器和导出模板二进制文件。如果你要找的"
"是导出项目到 Linux，请阅读 :ref:`doc_exporting_for_linux`\\ 。"

msgid "Requirements"
msgstr "需求"

msgid ""
"For compiling under Linux or other Unix variants, the following is required:"
msgstr "要在Linux或其他类Unix系统下进行编译, 需要满足以下条件:"

msgid "`Python 3.6+ <https://www.python.org/downloads/>`_."
msgstr "`Python 3.6+ <https://www.python.org/downloads/>`_."

msgid "pkg-config (used to detect the development libraries listed below)."
msgstr "pkg-config（用于检测下面这些开发库）。"

msgid "Development libraries:"
msgstr "开发库："

msgid "X11, Xcursor, Xinerama, Xi and XRandR."
msgstr "X11、Xcursor、Xinerama、Xi、XRandR。"

msgid "ALSA."
msgstr "ALSA."

msgid "PulseAudio."
msgstr "PulseAudio。"

msgid "*Optional* - libudev (build with ``udev=yes``)."
msgstr "*可选*\\ ——libudev（使用 ``udev = yes`` 构建）。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr "要获取编译所需的 Godot 源码，请参阅 :ref:`doc_getting_source`\\ 。"

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关 Godot 的 SCons 用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

msgid "Distro-specific one-liners"
msgstr "针对各个发行版的单行命令"

msgid "Alpine Linux"
msgstr "Alpine Linux"

msgid "Arch Linux"
msgstr "Arch Linux"

msgid "Debian/Ubuntu"
msgstr "Debian/Ubuntu"

msgid "Fedora"
msgstr "Fedora"

msgid "FreeBSD"
msgstr "FreeBSD"

msgid "Gentoo"
msgstr "Gentoo"

msgid "Mageia"
msgstr "Mageia"

msgid "NetBSD"
msgstr "NetBSD"

msgid "For audio support, you can optionally install ``pulseaudio``."
msgstr "对于音频支持，你可以选择安装 ``pulseaudio``\\ 。"

msgid "OpenBSD"
msgstr "OpenBSD"

msgid "openSUSE"
msgstr "openSUSE"

msgid "Solus"
msgstr "Solus"

msgid "Compiling"
msgstr "编译"

msgid ""
"Start a terminal, go to the root dir of the engine source code and type:"
msgstr "启动终端，然后进入引擎源代码的根目录，输入："

msgid ""
"Prior to Godot 4.0, the Linux/\\*BSD target was called ``x11`` instead of "
"``linuxbsd``. If you are looking to compile Godot 3.x, make sure to use the "
"`3.x branch of this documentation <https://docs.godotengine.org/en/3.6/"
"development/compiling/compiling_for_x11.html>`__."
msgstr ""
"在 Godot 4.0 之前，Linux/\\*BSD 目标被称为 ``x11`` 而非 ``linuxbsd`` 。如果你"
"希望编译 Godot 3.x，请确保使用本文档的 `3.x 分支 <https://docs.godotengine."
"org/en/3.6/development/compiling/compiling_for_x11.html>`__ 。"

msgid "If you wish to compile using Clang rather than GCC, use this command:"
msgstr "如果你希望使用 Clang 而不是 GCC 编译器, 可以使用这个命令:"

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"如果你想为自己的 Godot 构建和官方发布使用单独的编辑器设置，你可以通过在 "
"``bin/`` 文件夹中创建一个名为 ``._sc_`` 或 ``_sc_`` 的文件来启用 :ref:"
"`doc_data_paths_self_contained_mode`\\ 。"

msgid "Running a headless/server build"
msgstr "运行无头/服务器构建"

msgid "And then use the ``--headless`` command line argument::"
msgstr "然后使用 ``--headless`` 命令行参数： ::"

msgid ""
"To compile a debug *server* build which can be used with :ref:`remote "
"debugging tools <doc_command_line_tutorial>`, use::"
msgstr ""
"如果要编译调试版本的\\ *服务器*\\ ，支持\\ :ref:`远程调试工具 "
"<doc_command_line_tutorial>`\\ ，那么请使用： ::"

msgid ""
"To compile a *server* build which is optimized to run dedicated game "
"servers, use::"
msgstr ""
"要编译一个经过优化以运行专用游戏的\\ *服务器*\\ 版本，请使用以下构建选项： ::"

msgid "Building export templates"
msgstr "构建导出模板"

msgid ""
"Linux binaries usually won't run on distributions that are older than the "
"distribution they were built on. If you wish to distribute binaries that "
"work on most distributions, you should build them on an old distribution "
"such as Ubuntu 16.04. You can use a virtual machine or a container to set up "
"a suitable build environment."
msgstr ""
"Linux二进制文件通常不会在早于其构建版本的发行版上运行. 如果你希望分发适用于大"
"多数发行版的二进制文件, 则应在较旧的发行版(例如Ubuntu 16.04)上构建它们. 你可"
"以使用虚拟机或容器来设置合适的构建环境."

msgid "(32 bits)"
msgstr "（32 位）"

msgid "(64 bits)"
msgstr "（64 位）"

msgid ""
"Note that cross-compiling for the opposite bits (64/32) as your host "
"platform is not always straight-forward and might need a chroot environment."
msgstr ""
"请注意, 与你的主机平台相反的位(64/32)交叉编译并不总是直接的, 并且可能需要"
"chroot环境."

msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your binaries as custom export templates "
"here:"
msgstr ""
"此外, 如果要编写自定义模块或自定义C ++代码, 则可能需要在此处将二进制文件配置"
"为自定义导出模板:"

msgid ""
"You don't even need to copy them, you can just reference the resulting files "
"in the ``bin/`` directory of your Godot source folder, so the next time you "
"build, you automatically have the custom templates referenced."
msgstr ""
"你甚至不需要复制它们, 只需引用在Godot源文件夹的 ``bin/`` 目录中生成的文件, 因"
"此下次构建时, 将自动引用自定义模板."

msgid "Using Clang and LLD for faster development"
msgstr "使用 Clang 和 LLD 可以加快开发速度"

msgid ""
"You can also use Clang and LLD to build Godot. This has two upsides compared "
"to the default GCC + GNU ld setup:"
msgstr ""
"你也可以使用Clang和LD来构建Godot. 与默认的GCC + GNU ld设置相比, 这有两个好处:"

msgid ""
"LLD links Godot significantly faster compared to GNU ld or gold. This leads "
"to faster iteration times."
msgstr "与GNU ld或gold相比,LD链接Godot的速度明显更快. 这导致更快的迭代时间."

msgid "Clang tends to give more useful error messages compared to GCC."
msgstr "与GCC相比,Clang倾向于给出更多有用的错误信息."

msgid ""
"To do so, install Clang and the ``lld`` package from your distribution's "
"package manager then use the following SCons command::"
msgstr ""
"为此，请从分发的包管理器中安装 Clang 和 ``lld`` 包，然后使用以下 SCons 命"
"令： ::"

msgid ""
"After the build is completed, a new binary with a ``.llvm`` suffix will be "
"created in the ``bin/`` folder."
msgstr ""
"构建完成后，将在 ``bin/`` 文件夹中创建一个以 ``.llvm`` 为后缀的新的二进制文"
"件。"

msgid ""
"It's still recommended to use GCC for production builds as they can be "
"compiled using link-time optimization, making the resulting binaries smaller "
"and faster."
msgstr ""
"仍然建议使用GCC进行生产构建, 因为它们可以使用链接时间优化进行编译, 使产生的二"
"进制文件更小, 更快."

msgid "If this error occurs::"
msgstr "如果发生了这个错误： ::"

msgid "There are two solutions:"
msgstr "有两种解决方法:"

msgid "In your SCons command, add the parameter ``use_static_cpp=no``."
msgstr "在 Scon 命令中，添加 ``use_static_cpp=no`` 参数。"

msgid "Using mold for faster development"
msgstr "使用 mold 加快开发速度"

msgid ""
"Download mold binaries from its `releases page <https://github.com/rui314/"
"mold/releases/latest>`__."
msgstr ""
"从\\ `发布页面 <https://github.com/rui314/mold/releases/latest>`__\\ 下载 "
"mold 二进制文件。"

msgid ""
"Add ``$HOME/.local/share/mold/bin`` to your user's ``PATH`` environment "
"variable. For example, you can add the following line at the end of your "
"``$HOME/.bash_profile`` file:"
msgstr ""
"将 ``$HOME/.local/share/mold/bin`` 添加到用户的 ``PATH`` 环境变量中。例如可以"
"在 ``$HOME/.bash_profile`` 文件的末尾加上以下内容："

msgid ""
"Open a new terminal (or run ``source \"$HOME/.bash_profile\"``), then use "
"the following SCons command when compiling Godot::"
msgstr ""
"打开新的终端（或者运行 ``source \"$HOME/.bash_profile\"``\\ ），然后使用以下 "
"SCons 命令编译 Godot：\\ ::"

msgid "Using system libraries for faster development"
msgstr "使用系统库加快开发速度"

msgid ""
"However, not all Linux distributions have packages for third-party libraries "
"available (or they may not be up-to-date)."
msgstr ""
"然而，并非所有 Linux 发行版都有可用的第三方库（或这些库不是最新版本）。"

msgid ""
"To compile Godot with system libraries, install these dependencies *on top* "
"of the ones listed in the :ref:`doc_compiling_for_linuxbsd_oneliners`:"
msgstr ""
"要使用系统库编译 Godot，安装 :ref:`doc_compiling_for_linuxbsd_oneliners` *顶"
"部* 列出的依赖："

msgid "**Fedora**"
msgstr "**Fedora**"

msgid ""
"After installing all required packages, use the following command to build "
"Godot:"
msgstr "在安装了所有必要依赖后，使用下面的命令来构建 Godot："

msgid "Using Pyston for faster development"
msgstr "使用 Pyston 加快开发速度"

msgid ""
"You can use `Pyston <https://www.pyston.org/>`__ to run SCons. Pyston is a "
"JIT-enabled implementation of the Python language (which SCons is written "
"in). It is currently only compatible with Linux. Pyston can speed up "
"incremental builds significantly, often by a factor between 1.5× and 2×. "
"Pyston can be combined with Clang and LLD to get even faster builds."
msgstr ""
"你可以使用 `Pyston <https://www.pyston.org/>`__ 来运行 SCons。Pyston 是一种利"
"用了 JIT 的 Python 语言实现（SCons 就是使用 Python 编写的）。目前它只兼容 "
"Linux。Pyston 可以显著加速增量构建，经常可以达到 1.5× 和 2× 倍。可以将 "
"Pyston 与 Clang 和 LLD 组合，进行更快的构建。"

msgid ""
"Download the `latest portable Pyston release <https://github.com/pyston/"
"pyston/releases/latest>`__."
msgstr ""
"下载 `Pyston 的最新绿色版本 <https://github.com/pyston/pyston/releases/"
"latest>`__\\ 。"

msgid ""
"Extract the portable ``.tar.gz`` to a set location, such as ``$HOME/.local/"
"opt/pyston/`` (create folders as needed)."
msgstr ""
"将绿色的 ``.tar.gz`` 解压到特定的位置，比如 `$HOME/.local/opt/pyston/`\\ （必"
"要时请创建文件夹）。"

msgid ""
"Use ``cd`` to reach the extracted Pyston folder from a terminal, then run "
"``./pyston -m pip install scons`` to install SCons within Pyston."
msgstr ""
"在命令行中，使用 ``cd`` 达到 Pyston 解压出的文件夹，然后运行 ``./pyston -m "
"pip install scons``\\ ，在 Pyston 中安装 SCons。"

msgid ""
"To make SCons via Pyston easier to run, create a symbolic link of its "
"wrapper script to a location in your ``PATH`` environment variable::"
msgstr ""
"为了便于通过 Pyston 运行 SCons，请创建一个指向其封装脚本的符号链接，符号链接"
"的位置必须在你的 ``PATH`` 环境变量中： ::"

msgid ""
"Instead of running ``scons <build arguments>``, run ``pyston-scons <build "
"arguments>`` to compile Godot."
msgstr ""
"现在就不是执行 ``scons <构建参数>`` 了，要编译 Godot 请执行 ``pyston-scons <"
"构建参数>``\\ 。"

msgid ""
"If you can't run ``pyston-scons`` after creating the symbolic link, make "
"sure ``$HOME/.local/bin/`` is part of your user's ``PATH`` environment "
"variable."
msgstr ""
"如果创建符号链接后无法执行 ``pyston-scons``\\ ，请确定 ``$HOME/.local/bin/`` "
"是当前用户的 ``PATH`` 环境变量的一部分。"

msgid "Translation status"
msgstr "翻译状态"
