#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for macOS"
msgstr "为 macOS 平台编译"

msgid ""
"This page describes how to compile macOS editor and export template binaries "
"from source. If you're looking to export your project to macOS instead, "
"read :ref:`doc_exporting_for_macos`."
msgstr ""
"这个页面描述的是如何从源码编译 macOS 编辑器和导出模板二进制文件。如果你要找的"
"是导出项目到 macOS，请阅读 :ref:`doc_exporting_for_macos`\\ 。"

msgid "Requirements"
msgstr "需求"

msgid "For compiling under macOS, the following is required:"
msgstr "在 macOS 下编译时，需要以下条件："

msgid "`Python 3.6+ <https://www.python.org/downloads/macos/>`_."
msgstr "`Python 3.6+ <https://www.python.org/downloads/macos/>`_."

msgid ""
"`Xcode <https://apps.apple.com/us/app/xcode/id497799835>`_ (or the more "
"lightweight Command Line Tools for Xcode)."
msgstr ""
"`Xcode <https://apps.apple.com/us/app/xcode/id497799835>`_\\ （或更轻量的 "
"Xcode 命令行工具）。"

msgid ""
"Installing Homebrew will also fetch the Command Line Tools for Xcode "
"automatically if you don't have them already."
msgstr "如果你还没有 Xcode 命令行工具，安装 Homebrew 也会自动进行获取。"

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr "要获取编译所需的 Godot 源码，请参阅 :ref:`doc_getting_source`\\ 。"

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关 Godot 的 SCons 用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

msgid "Compiling"
msgstr "编译"

msgid "Start a terminal, go to the root directory of the engine source code."
msgstr "启动终端, 进入引擎源代码的根目录."

msgid "To compile for Intel (x86-64) powered Macs, use::"
msgstr "若要为英特尔（x86-64）架构的 Mac 编译，请使用： ::"

msgid "To compile for Apple Silicon (ARM64) powered Macs, use::"
msgstr "要为 Apple Silicon（ARM64）驱动的 Mac 编译，请使用： ::"

msgid ""
"To support both architectures in a single \"Universal 2\" binary, run the "
"above two commands and then use ``lipo`` to bundle them together::"
msgstr ""
"如果要通过“Universal 2”二进制来同时支持这两种架构，请运行上述两个命令，然后使"
"用 ``lipo`` 将它们打包在一起： ::"

msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""
"如果你想为自己的 Godot 构建和官方发布使用单独的编辑器设置，你可以通过在 "
"``bin/`` 文件夹中创建一个名为 ``._sc_`` 或 ``_sc_`` 的文件来启用 :ref:"
"`doc_data_paths_self_contained_mode`\\ 。"

msgid "Running a headless/server build"
msgstr "运行无头/服务器构建"

msgid "And then use the ``--headless`` command line argument::"
msgstr "然后使用 ``--headless`` 命令行参数： ::"

msgid ""
"To compile a debug *server* build which can be used with :ref:`remote "
"debugging tools <doc_command_line_tutorial>`, use::"
msgstr ""
"如果要编译调试版本的\\ *服务器*\\ ，支持\\ :ref:`远程调试工具 "
"<doc_command_line_tutorial>`\\ ，那么请使用： ::"

msgid ""
"To compile a release *server* build which is optimized to run dedicated game "
"servers, use::"
msgstr ""
"如果要编译发布版本的\\ *服务器*\\ ，针对运行专门的游戏服务器进行优化，那么请"
"使用： ::"

msgid "Building export templates"
msgstr "构建导出模板"

msgid ""
"Official templates are universal binaries which support both Intel x86_64 "
"and ARM64 architectures. You can also create export templates that support "
"only one of those two architectures by leaving out the ``lipo`` step below."
msgstr ""
"官方模板是通用的二进制文件，同时支持英特尔x86_64和ARM64架构。你也可以通过省略"
"下面的 ``lipo`` 步骤，创建只支持架构中的一种的导出模板。"

msgid "For Intel x86_64::"
msgstr "对于英特尔 x86_64： ::"

msgid "For Arm64 (Apple M1)::"
msgstr "对于 Arm64（Apple M1）： ::"

msgid ""
"To support both architectures in a single \"Universal 2\" binary, run the "
"above two commands blocks and then use ``lipo`` to bundle them together::"
msgstr ""
"要使用“Universal 2”二进制来同时支持这两种架构，请运行上述两个命令块，然后使"
"用 ``lipo`` 将它们捆绑在一起： ::"

msgid "Using Pyston for faster development"
msgstr "使用 Pyston 加快开发速度"

msgid "Cross-compiling for macOS from Linux"
msgstr "从 Linux 交叉编译 macOS"

msgid ""
"It is possible to compile for macOS in a Linux environment (and maybe also "
"in Windows using the Windows Subsystem for Linux). For that, you'll need to "
"install `OSXCross <https://github.com/tpoechtrager/osxcross>`__ to be able "
"to use macOS as a target. First, follow the instructions to install it:"
msgstr ""
"在Linux环境下为macOS进行编译是可行的(也许也可以在Windows中使用Windows "
"Subsystem for Linux). 为此, 你需要安装 `OSXCross <https://github.com/"
"tpoechtrager/osxcross>`__ , 以便能够使用macOS作为目标. 首先, 按照说明来安装"
"它:"

msgid ""
"Clone the `OSXCross repository <https://github.com/tpoechtrager/osxcross>`__ "
"somewhere on your machine (or download a ZIP file and extract it somewhere), "
"e.g.::"
msgstr ""
"在你的机器上某处克隆 `OSXCross 资源库 <https://github.com/tpoechtrager/"
"osxcross>`__\\ （或者下载一个 ZIP 文件并解压缩），例如： ::"

msgid ""
"Follow the instructions to package the SDK: https://github.com/tpoechtrager/"
"osxcross#packaging-the-sdk"
msgstr ""
"按照说明打包SDK:https://github.com/tpoechtrager/osxcross#packaging-the-sdk"

msgid ""
"Follow the instructions to install OSXCross: https://github.com/tpoechtrager/"
"osxcross#installation"
msgstr ""
"按照说明安装OSXCross:https://github.com/tpoechtrager/osxcross#installation"

msgid ""
"After that, you will need to define the ``OSXCROSS_ROOT`` as the path to the "
"OSXCross installation (the same place where you cloned the repository/"
"extracted the zip), e.g.::"
msgstr ""
"然后，你需要将 ``OSXCROSS_ROOT`` 定义为 OSXCross 的安装路径（与你克隆软件库/"
"提取压缩包的地方相同），例如： ::"

msgid "Now you can compile with SCons like you normally would::"
msgstr "现在你可以像平时一样用 SCons 进行编译： ::"

msgid ""
"If you have an OSXCross SDK version different from the one expected by the "
"SCons buildsystem, you can specify a custom one with the ``osxcross_sdk`` "
"argument::"
msgstr ""
"如果你的 OSXCross SDK 版本与 SCons 构建系统所期望的不同，你可以用 "
"``osxcross_sdk`` 参数指定一个自定义的版本： ::"

msgid "Translation status"
msgstr "翻译状态"
