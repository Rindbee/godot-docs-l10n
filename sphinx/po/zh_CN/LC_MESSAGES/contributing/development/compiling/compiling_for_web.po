#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Compiling for the Web"
msgstr "为 Web 平台编译"

msgid ""
"This page describes how to compile HTML5 editor and export template binaries "
"from source. If you're looking to export your project to HTML5 instead, "
"read :ref:`doc_exporting_for_web`."
msgstr ""
"这个页面描述的是如何从源码编译 HTML5 编辑器和导出模板二进制文件。如果你要找的"
"是导出项目到 HTML5，请阅读 :ref:`doc_exporting_for_web`\\ 。"

msgid "Requirements"
msgstr "需求"

msgid "To compile export templates for the Web, the following is required:"
msgstr "编译 Web 的导出模板需要以下内容："

msgid "`Python 3.6+ <https://www.python.org/>`__."
msgstr "`Python 3.6+ <https://www.python.org/>`__."

msgid ""
"To get the Godot source code for compiling, see :ref:`doc_getting_source`."
msgstr "要获取编译所需的 Godot 源码，请参阅 :ref:`doc_getting_source`\\ 。"

msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关 Godot 的 SCons 用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

msgid "Building export templates"
msgstr "构建导出模板"

msgid ""
"Before starting, confirm that ``emcc`` is available in your PATH. This is "
"usually configured by the Emscripten SDK, e.g. when invoking ``emsdk "
"activate`` and ``source ./emsdk_env.sh``/``emsdk_env.bat``."
msgstr ""
"在开始之前，确认 ``emcc`` 在你的 PATH 中是可用的。这通常是由 Emscripten SDK "
"配置的，例如在调用 ``emsdk activate`` 和 ``source ./emsdk_env.sh``/"
"``emsdk_env.bat`` 时。"

msgid "GDExtension"
msgstr "GDExtension"

msgid "Building the editor"
msgstr "构建编辑器"

msgid ""
"Refer to the :ref:`export page <doc_javascript_export_options>` for the web "
"server requirements."
msgstr ""
"关于网络服务器的要求，请参考\\ :ref:`导出页面 "
"<doc_javascript_export_options>`。"

msgid ""
"The Godot repository includes a `Python script to host a local web server "
"<https://raw.githubusercontent.com/godotengine/godot/master/platform/web/"
"serve.py>`__. This can be used to test the web editor locally."
msgstr ""
"Godot 仓库包含一个 `Python 脚本，用于托管本地 web 服务器 < https://raw."
"githubusercontent.com/godotengine/Godot/master/platform/web/serve.py >`__ 。"
"这可以用来在本地测试 Web 编辑器。"

msgid ""
"After compiling the editor, extract the ZIP archive that was created in the "
"``bin/`` folder, then run the following command in the Godot repository root:"
msgstr ""
"编译完编辑器后，解压在 ``bin/`` 文件夹中创建的 ZIP 文件，然后在 Godot 仓库根"
"目录中运行以下命令:"

msgid ""
"This will serve the contents of the ``bin/`` folder and open the default web "
"browser automatically. In the page that opens, access ``godot.tools.html`` "
"and you should be able to test the web editor this way."
msgstr ""
"这将为 ``bin/`` 文件夹中的内容运行网页服务，并自动打开默认的浏览器。在打开的"
"页面中访问 ``godot.tools.html`` ，你可以使用这种方式测试 Web 编辑器。"

msgid ""
"Note that for production use cases, this Python-based web server should not "
"be used. Instead, you should use an established web server such as Apache or "
"nginx."
msgstr ""
"请注意，对于生产用例，不应使用此基于Python的Web服务器。相反，你应该使用已建立"
"的Web服务器，例如Apache或nginx。"

msgid "Translation status"
msgstr "翻译状态"
