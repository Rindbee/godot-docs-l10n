#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: YEAR-MO-DA HO:MI+ZONE\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid ""
"The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements "
"on a layer above the rest of the game, so that the information it displays "
"isn't covered up by any game elements like the player or mobs."
msgstr ""
"Węzeł :ref:`CanvasLayer <class_CanvasLayer>` pozwala nam narysować nasze "
"elementy interfejsu użytkownika na warstwie będącą przed resztą gry, tak aby "
"wyświetlane przez niego informacje nie były zakryte żadnymi elementami gry, "
"takimi jak gracz lub przeciwnik."

msgid "The HUD needs to display the following information:"
msgstr "HUD powinien wyświetlić następujące informacje:"

msgid "Score, changed by ``ScoreTimer``."
msgstr "Wynik, zmieniany przez ``ScoreTimer``."

msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr "Wiadomości takie jak \"Koniec Gry\" lub \"Przygotuj Się!\""

msgid "A \"Start\" button to begin the game."
msgstr "Przycisk \"Start\" rozpoczyna grę."

msgid ""
"The basic node for UI elements is :ref:`Control <class_Control>`. To create "
"our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:"
"`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""
"Podstawowym węzłem elementów interfejsu użytkownika jest :ref:`Control "
"<class_Control>`. Aby utworzyć nasz interfejs użytkownika, będziemy używać "
"dwóch typów węzła ref:`Control <class_Control>` - :ref:`Label <class_Label>` "
"oraz :ref:`Button <class_Button>`."

msgid "Create the following as children of the ``HUD`` node:"
msgstr "Utwórz je jako dzieci węzła ``HUD``:"

msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr ":ref:`Label <class_Label>` nazwany ``ScoreLabel``."

msgid ":ref:`Label <class_Label>` named ``Message``."
msgstr ":ref:`Label <class_Label>` nazwany ``Message``."

msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr "Przycisk :ref:`Button <class_Button>` o nazwie ``StartButton``."

msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr ":ref:`Timer <class_Timer>` o nazwie ``MessageTimer``."

msgid ""
"Click on the ``ScoreLabel`` and type a number into the ``Text`` field in the "
"Inspector. The default font for ``Control`` nodes is small and doesn't scale "
"well. There is a font file included in the game assets called \"Xolonium-"
"Regular.ttf\". To use this font, do the following:"
msgstr ""
"Domyślna czcionka dla węzłów ``Control`` jest mała i nie skaluje się dobrze. "
"W zasobach gry znajduje się plik czcionki o nazwie \"Xolonium-Regular.ttf\". "
"Aby użyć tej czcionki, wykonaj następujące czynności dla każdego z trzech "
"węzłów ``Control``:"

msgid ""
"Arrange the nodes as shown below. You can drag the nodes to place them "
"manually, or for more precise placement, use \"Anchor Presets\"."
msgstr ""
"Rozmieść węzły, jak pokazano poniżej. Możesz przeciągać węzły, aby "
"rozmieścić je ręcznie, lub użyć opcji „Anchor Presets”, aby uzyskać bardziej "
"precyzyjne rozmieszczenie."

msgid "ScoreLabel"
msgstr "ScoreLabel"

msgid "Message"
msgstr "Wiadomość"

msgid "StartButton"
msgstr "StartButton"

msgid ""
"On the ``MessageTimer``, set the ``Wait Time`` to ``2`` and set the ``One "
"Shot`` property to \"On\"."
msgstr ""
"Ta funkcja jest wywoływana, gdy chcemy tymczasowo wyświetlić komunikat, taki "
"jak \"Przygotuj się\". W ``MessageTimer`` ustaw ``Czas oczekiwania`` na "
"``2`` i ustaw właściwość ``Jednokrotny`` na \"Włączone\"."

msgid "Now add this script to ``HUD``:"
msgstr "Teraz dodaj ten skrypt do ``HUD``:"

msgid ""
"This function is called when the player loses. It will show \"Game Over\" "
"for 2 seconds, then return to the title screen and, after a brief pause, "
"show the \"Start\" button."
msgstr ""
"Ta funkcja jest wywoływana, gdy gracz przegrywa. Przez 2 sekundy na ekranie "
"będzie wyświetlał się napis \"Game Over\" (Koniec Gry), następnie powróci do "
"ekranu tytułowego i pojawi się przycisk \"Start\"."

msgid "Connecting HUD to Main"
msgstr "Podłączenie HUD do Main"

msgid ""
"Now that we're done creating the ``HUD`` scene, go back to ``Main``. "
"Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` scene. "
"The scene tree should look like this, so make sure you didn't miss anything:"
msgstr ""
"Teraz, kiedy już stworzyłeś scenę ``HUD``, zapisz ją i wróć do `Main``. "
"Stwórz instancję ``HUD`` w ``Main`` tak, jak zrobiłeś to ``Player`` scenę i "
"umieść ją na dole drzewa. Pełne drzewo powinno wyglądać tak, więc upewnij "
"się, że niczego nie przegapiłeś:"

msgid ""
"Now we need to connect the ``HUD`` functionality to our ``Main`` script. "
"This requires a few additions to the ``Main`` scene:"
msgstr ""
"Teraz musimy podłączyć funkcję ``HUD`` do naszego skryptu ``Main``. Wymaga "
"to paru poprawek do sceny ``Main``:"

msgid ""
"In ``new_game()``, update the score display and show the \"Get Ready\" "
"message:"
msgstr ""
"W ``new_game()``, zaktualizuj wyświetlany wynik i pokaż komunikat "
"\"Przygotuj się\":"

msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr "W ``game_over()`` musimy wywołać odpowiednią funkcję w ``HUD``:"

msgid "Translation status"
msgstr "Status tłumaczenia"
